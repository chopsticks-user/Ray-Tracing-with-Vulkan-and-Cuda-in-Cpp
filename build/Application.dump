
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 bd df 01 00 	mov    0x1dfbd(%rip),%rax        # 20fc8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca df 01 00    	push   0x1dfca(%rip)        # 20ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc df 01 00    	jmp    *0x1dfcc(%rip)        # 20ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca df 01 00    	jmp    *0x1dfca(%rip)        # 21000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3040:	ff 25 c2 df 01 00    	jmp    *0x1dfc2(%rip)        # 21008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZNSaIcED2Ev@plt>:
    3050:	ff 25 ba df 01 00    	jmp    *0x1dfba(%rip)        # 21010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZSt9terminatev@plt>:
    3060:	ff 25 b2 df 01 00    	jmp    *0x1dfb2(%rip)        # 21018 <_ZSt9terminatev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>:
    3070:	ff 25 aa df 01 00    	jmp    *0x1dfaa(%rip)        # 21020 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@GLIBCXX_3.4.30>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <glfwDestroyWindow@plt>:
    3080:	ff 25 a2 df 01 00    	jmp    *0x1dfa2(%rip)        # 21028 <glfwDestroyWindow@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZSt17__throw_bad_allocv@plt>:
    3090:	ff 25 9a df 01 00    	jmp    *0x1df9a(%rip)        # 21030 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <_ZSt25__throw_bad_function_callv@plt>:
    30a0:	ff 25 92 df 01 00    	jmp    *0x1df92(%rip)        # 21038 <_ZSt25__throw_bad_function_callv@GLIBCXX_3.4.14>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30b0:	ff 25 8a df 01 00    	jmp    *0x1df8a(%rip)        # 21040 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <vkGetPhysicalDeviceProperties@plt>:
    30c0:	ff 25 82 df 01 00    	jmp    *0x1df82(%rip)        # 21048 <vkGetPhysicalDeviceProperties@Base>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <__cxa_begin_catch@plt>:
    30d0:	ff 25 7a df 01 00    	jmp    *0x1df7a(%rip)        # 21050 <__cxa_begin_catch@CXXABI_1.3>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    30e0:	ff 25 72 df 01 00    	jmp    *0x1df72(%rip)        # 21058 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <strlen@plt>:
    30f0:	ff 25 6a df 01 00    	jmp    *0x1df6a(%rip)        # 21060 <strlen@GLIBC_2.2.5>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <_ZNSt6thread6_StateD2Ev@plt>:
    3100:	ff 25 62 df 01 00    	jmp    *0x1df62(%rip)        # 21068 <_ZNSt6thread6_StateD2Ev@GLIBCXX_3.4.22>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <__cxa_allocate_exception@plt>:
    3110:	ff 25 5a df 01 00    	jmp    *0x1df5a(%rip)        # 21070 <__cxa_allocate_exception@CXXABI_1.3>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <_ZNSt18condition_variable10notify_oneEv@plt>:
    3120:	ff 25 52 df 01 00    	jmp    *0x1df52(%rip)        # 21078 <_ZNSt18condition_variable10notify_oneEv@GLIBCXX_3.4.11>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <_ZSt20__throw_length_errorPKc@plt>:
    3130:	ff 25 4a df 01 00    	jmp    *0x1df4a(%rip)        # 21080 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <vkEnumeratePhysicalDevices@plt>:
    3140:	ff 25 42 df 01 00    	jmp    *0x1df42(%rip)        # 21088 <vkEnumeratePhysicalDevices@Base>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    3150:	ff 25 3a df 01 00    	jmp    *0x1df3a(%rip)        # 21090 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    3160:	ff 25 32 df 01 00    	jmp    *0x1df32(%rip)        # 21098 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <_ZSt20__throw_system_errori@plt>:
    3170:	ff 25 2a df 01 00    	jmp    *0x1df2a(%rip)        # 210a0 <_ZSt20__throw_system_errori@GLIBCXX_3.4.11>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    3180:	ff 25 22 df 01 00    	jmp    *0x1df22(%rip)        # 210a8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    3190:	ff 25 1a df 01 00    	jmp    *0x1df1a(%rip)        # 210b0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <_ZSt19__throw_logic_errorPKc@plt>:
    31a0:	ff 25 12 df 01 00    	jmp    *0x1df12(%rip)        # 210b8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <__cxa_free_exception@plt>:
    31b0:	ff 25 0a df 01 00    	jmp    *0x1df0a(%rip)        # 210c0 <__cxa_free_exception@CXXABI_1.3>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSolsEf@plt>:
    31c0:	ff 25 02 df 01 00    	jmp    *0x1df02(%rip)        # 210c8 <_ZNSolsEf@GLIBCXX_3.4>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <pthread_mutex_unlock@plt>:
    31d0:	ff 25 fa de 01 00    	jmp    *0x1defa(%rip)        # 210d0 <pthread_mutex_unlock@GLIBC_2.2.5>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    31e0:	ff 25 f2 de 01 00    	jmp    *0x1def2(%rip)        # 210d8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <vkGetPhysicalDeviceFeatures@plt>:
    31f0:	ff 25 ea de 01 00    	jmp    *0x1deea(%rip)        # 210e0 <vkGetPhysicalDeviceFeatures@Base>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <glfwGetRequiredInstanceExtensions@plt>:
    3200:	ff 25 e2 de 01 00    	jmp    *0x1dee2(%rip)        # 210e8 <glfwGetRequiredInstanceExtensions@Base>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3210:	ff 25 da de 01 00    	jmp    *0x1deda(%rip)        # 210f0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3220:	ff 25 d2 de 01 00    	jmp    *0x1ded2(%rip)        # 210f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <vkDestroyDevice@plt>:
    3230:	ff 25 ca de 01 00    	jmp    *0x1deca(%rip)        # 21100 <vkDestroyDevice@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    3240:	ff 25 c2 de 01 00    	jmp    *0x1dec2(%rip)        # 21108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <glfwWindowHint@plt>:
    3250:	ff 25 ba de 01 00    	jmp    *0x1deba(%rip)        # 21110 <glfwWindowHint@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <__cxa_atexit@plt>:
    3260:	ff 25 b2 de 01 00    	jmp    *0x1deb2(%rip)        # 21118 <__cxa_atexit@GLIBC_2.2.5>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <pthread_self@plt>:
    3270:	ff 25 aa de 01 00    	jmp    *0x1deaa(%rip)        # 21120 <pthread_self@GLIBC_2.2.5>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>:
    3280:	ff 25 a2 de 01 00    	jmp    *0x1dea2(%rip)        # 21128 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@GLIBCXX_3.4.22>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkGetInstanceProcAddr@plt>:
    3290:	ff 25 9a de 01 00    	jmp    *0x1de9a(%rip)        # 21130 <vkGetInstanceProcAddr@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <glfwPollEvents@plt>:
    32a0:	ff 25 92 de 01 00    	jmp    *0x1de92(%rip)        # 21138 <glfwPollEvents@Base>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    32b0:	ff 25 8a de 01 00    	jmp    *0x1de8a(%rip)        # 21140 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <_Znwm@plt>:
    32c0:	ff 25 82 de 01 00    	jmp    *0x1de82(%rip)        # 21148 <_Znwm@GLIBCXX_3.4>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <_ZdlPvm@plt>:
    32d0:	ff 25 7a de 01 00    	jmp    *0x1de7a(%rip)        # 21150 <_ZdlPvm@CXXABI_1.3.9>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <vkDestroyInstance@plt>:
    32e0:	ff 25 72 de 01 00    	jmp    *0x1de72(%rip)        # 21158 <vkDestroyInstance@Base>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <glfwTerminate@plt>:
    32f0:	ff 25 6a de 01 00    	jmp    *0x1de6a(%rip)        # 21160 <glfwTerminate@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    3300:	ff 25 62 de 01 00    	jmp    *0x1de62(%rip)        # 21168 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <_ZNSolsEPFRSoS_E@plt>:
    3310:	ff 25 5a de 01 00    	jmp    *0x1de5a(%rip)        # 21170 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    3320:	ff 25 52 de 01 00    	jmp    *0x1de52(%rip)        # 21178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    3330:	ff 25 4a de 01 00    	jmp    *0x1de4a(%rip)        # 21180 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <_ZNSaIcED1Ev@plt>:
    3340:	ff 25 42 de 01 00    	jmp    *0x1de42(%rip)        # 21188 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3350:	ff 25 3a de 01 00    	jmp    *0x1de3a(%rip)        # 21190 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3360:	ff 25 32 de 01 00    	jmp    *0x1de32(%rip)        # 21198 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <glfwInit@plt>:
    3370:	ff 25 2a de 01 00    	jmp    *0x1de2a(%rip)        # 211a0 <glfwInit@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3380:	ff 25 22 de 01 00    	jmp    *0x1de22(%rip)        # 211a8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkCreateInstance@plt>:
    3390:	ff 25 1a de 01 00    	jmp    *0x1de1a(%rip)        # 211b0 <vkCreateInstance@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    33a0:	ff 25 12 de 01 00    	jmp    *0x1de12(%rip)        # 211b8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <vkEnumerateInstanceVersion@plt>:
    33b0:	ff 25 0a de 01 00    	jmp    *0x1de0a(%rip)        # 211c0 <vkEnumerateInstanceVersion@Base>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    33c0:	ff 25 02 de 01 00    	jmp    *0x1de02(%rip)        # 211c8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <vkGetDeviceQueue@plt>:
    33d0:	ff 25 fa dd 01 00    	jmp    *0x1ddfa(%rip)        # 211d0 <vkGetDeviceQueue@Base>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSt6thread20hardware_concurrencyEv@plt>:
    33e0:	ff 25 f2 dd 01 00    	jmp    *0x1ddf2(%rip)        # 211d8 <_ZNSt6thread20hardware_concurrencyEv@GLIBCXX_3.4.17>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkEnumerateDeviceExtensionProperties@plt>:
    33f0:	ff 25 ea dd 01 00    	jmp    *0x1ddea(%rip)        # 211e0 <vkEnumerateDeviceExtensionProperties@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <_ZNSt18condition_variableC1Ev@plt>:
    3400:	ff 25 e2 dd 01 00    	jmp    *0x1dde2(%rip)        # 211e8 <_ZNSt18condition_variableC1Ev@GLIBCXX_3.4.11>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <__cxa_rethrow@plt>:
    3410:	ff 25 da dd 01 00    	jmp    *0x1ddda(%rip)        # 211f0 <__cxa_rethrow@CXXABI_1.3>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <pthread_mutex_lock@plt>:
    3420:	ff 25 d2 dd 01 00    	jmp    *0x1ddd2(%rip)        # 211f8 <pthread_mutex_lock@GLIBC_2.2.5>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkCreateDevice@plt>:
    3430:	ff 25 ca dd 01 00    	jmp    *0x1ddca(%rip)        # 21200 <vkCreateDevice@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <_ZNSt8ios_base4InitC1Ev@plt>:
    3440:	ff 25 c2 dd 01 00    	jmp    *0x1ddc2(%rip)        # 21208 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <glfwCreateWindowSurface@plt>:
    3450:	ff 25 ba dd 01 00    	jmp    *0x1ddba(%rip)        # 21210 <glfwCreateWindowSurface@Base>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <glfwCreateWindow@plt>:
    3460:	ff 25 b2 dd 01 00    	jmp    *0x1ddb2(%rip)        # 21218 <glfwCreateWindow@Base>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <memmove@plt>:
    3470:	ff 25 aa dd 01 00    	jmp    *0x1ddaa(%rip)        # 21220 <memmove@GLIBC_2.2.5>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <__cxa_end_catch@plt>:
    3480:	ff 25 a2 dd 01 00    	jmp    *0x1dda2(%rip)        # 21228 <__cxa_end_catch@CXXABI_1.3>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <_ZNSt18condition_variable10notify_allEv@plt>:
    3490:	ff 25 9a dd 01 00    	jmp    *0x1dd9a(%rip)        # 21230 <_ZNSt18condition_variable10notify_allEv@GLIBCXX_3.4.11>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt6thread4joinEv@plt>:
    34a0:	ff 25 92 dd 01 00    	jmp    *0x1dd92(%rip)        # 21238 <_ZNSt6thread4joinEv@GLIBCXX_3.4.11>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <__cxa_throw@plt>:
    34b0:	ff 25 8a dd 01 00    	jmp    *0x1dd8a(%rip)        # 21240 <__cxa_throw@CXXABI_1.3>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkDestroySurfaceKHR@plt>:
    34c0:	ff 25 82 dd 01 00    	jmp    *0x1dd82(%rip)        # 21248 <vkDestroySurfaceKHR@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <_Unwind_Resume@plt>:
    34d0:	ff 25 7a dd 01 00    	jmp    *0x1dd7a(%rip)        # 21250 <_Unwind_Resume@GCC_3.0>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZNSaIcEC1Ev@plt>:
    34e0:	ff 25 72 dd 01 00    	jmp    *0x1dd72(%rip)        # 21258 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    34f0:	ff 25 6a dd 01 00    	jmp    *0x1dd6a(%rip)        # 21260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <_ZNSt18condition_variableD1Ev@plt>:
    3500:	ff 25 62 dd 01 00    	jmp    *0x1dd62(%rip)        # 21268 <_ZNSt18condition_variableD1Ev@GLIBCXX_3.4.11>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <glfwWindowShouldClose@plt>:
    3510:	ff 25 5a dd 01 00    	jmp    *0x1dd5a(%rip)        # 21270 <glfwWindowShouldClose@Base>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3520:	ff 25 52 dd 01 00    	jmp    *0x1dd52(%rip)        # 21278 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003530 <__cxa_finalize@plt>:
    3530:	ff 25 6a da 01 00    	jmp    *0x1da6a(%rip)        # 20fa0 <__cxa_finalize@GLIBC_2.2.5>
    3536:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003540 <_start>:
    3540:	31 ed                	xor    %ebp,%ebp
    3542:	49 89 d1             	mov    %rdx,%r9
    3545:	5e                   	pop    %rsi
    3546:	48 89 e2             	mov    %rsp,%rdx
    3549:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    354d:	50                   	push   %rax
    354e:	54                   	push   %rsp
    354f:	45 31 c0             	xor    %r8d,%r8d
    3552:	31 c9                	xor    %ecx,%ecx
    3554:	48 8d 3d 19 02 00 00 	lea    0x219(%rip),%rdi        # 3774 <main>
    355b:	ff 15 4f da 01 00    	call   *0x1da4f(%rip)        # 20fb0 <__libc_start_main@GLIBC_2.34>
    3561:	f4                   	hlt
    3562:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3569:	00 00 00 
    356c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003570 <deregister_tm_clones>:
    3570:	48 8d 3d 29 dd 01 00 	lea    0x1dd29(%rip),%rdi        # 212a0 <__TMC_END__>
    3577:	48 8d 05 22 dd 01 00 	lea    0x1dd22(%rip),%rax        # 212a0 <__TMC_END__>
    357e:	48 39 f8             	cmp    %rdi,%rax
    3581:	74 15                	je     3598 <deregister_tm_clones+0x28>
    3583:	48 8b 05 36 da 01 00 	mov    0x1da36(%rip),%rax        # 20fc0 <_ITM_deregisterTMCloneTable@Base>
    358a:	48 85 c0             	test   %rax,%rax
    358d:	74 09                	je     3598 <deregister_tm_clones+0x28>
    358f:	ff e0                	jmp    *%rax
    3591:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3598:	c3                   	ret
    3599:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035a0 <register_tm_clones>:
    35a0:	48 8d 3d f9 dc 01 00 	lea    0x1dcf9(%rip),%rdi        # 212a0 <__TMC_END__>
    35a7:	48 8d 35 f2 dc 01 00 	lea    0x1dcf2(%rip),%rsi        # 212a0 <__TMC_END__>
    35ae:	48 29 fe             	sub    %rdi,%rsi
    35b1:	48 89 f0             	mov    %rsi,%rax
    35b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    35b8:	48 c1 f8 03          	sar    $0x3,%rax
    35bc:	48 01 c6             	add    %rax,%rsi
    35bf:	48 d1 fe             	sar    %rsi
    35c2:	74 14                	je     35d8 <register_tm_clones+0x38>
    35c4:	48 8b 05 05 da 01 00 	mov    0x1da05(%rip),%rax        # 20fd0 <_ITM_registerTMCloneTable@Base>
    35cb:	48 85 c0             	test   %rax,%rax
    35ce:	74 08                	je     35d8 <register_tm_clones+0x38>
    35d0:	ff e0                	jmp    *%rax
    35d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35d8:	c3                   	ret
    35d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000035e0 <__do_global_dtors_aux>:
    35e0:	f3 0f 1e fa          	endbr64
    35e4:	80 3d 05 df 01 00 00 	cmpb   $0x0,0x1df05(%rip)        # 214f0 <completed.0>
    35eb:	75 2b                	jne    3618 <__do_global_dtors_aux+0x38>
    35ed:	55                   	push   %rbp
    35ee:	48 83 3d aa d9 01 00 	cmpq   $0x0,0x1d9aa(%rip)        # 20fa0 <__cxa_finalize@GLIBC_2.2.5>
    35f5:	00 
    35f6:	48 89 e5             	mov    %rsp,%rbp
    35f9:	74 0c                	je     3607 <__do_global_dtors_aux+0x27>
    35fb:	48 8b 3d 86 dc 01 00 	mov    0x1dc86(%rip),%rdi        # 21288 <__dso_handle>
    3602:	e8 29 ff ff ff       	call   3530 <__cxa_finalize@plt>
    3607:	e8 64 ff ff ff       	call   3570 <deregister_tm_clones>
    360c:	c6 05 dd de 01 00 01 	movb   $0x1,0x1dedd(%rip)        # 214f0 <completed.0>
    3613:	5d                   	pop    %rbp
    3614:	c3                   	ret
    3615:	0f 1f 00             	nopl   (%rax)
    3618:	c3                   	ret
    3619:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003620 <frame_dummy>:
    3620:	f3 0f 1e fa          	endbr64
    3624:	e9 77 ff ff ff       	jmp    35a0 <register_tm_clones>
    3629:	90                   	nop

000000000000362a <_ZL18__gthread_active_pv>:

#else /* not hppa-hpux */

static inline int
__gthread_active_p (void)
{
    362a:	55                   	push   %rbp
    362b:	48 89 e5             	mov    %rsp,%rbp
  return 1;
    362e:	b8 01 00 00 00       	mov    $0x1,%eax
}
    3633:	5d                   	pop    %rbp
    3634:	c3                   	ret
    3635:	90                   	nop

0000000000003636 <_ZZ14protected_mainvENKUlfE_clEf>:
#include <iostream>

int protected_main() {
  auto timer = neko::ScopedTimer{neko::TimeUnit::milliseconds};
  auto engine = std::make_unique<neko::Engine>();
  timer.invoke([](float x) { std::cout << "Load time: " << x << " ms\n"; });
    3636:	55                   	push   %rbp
    3637:	48 89 e5             	mov    %rsp,%rbp
    363a:	48 83 ec 10          	sub    $0x10,%rsp
    363e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3642:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
    3647:	48 8d 05 1e f0 00 00 	lea    0xf01e(%rip),%rax        # 1266c <_ZN6__pstl9execution2v1L5unseqE+0x1>
    364e:	48 89 c6             	mov    %rax,%rsi
    3651:	48 8d 05 68 dc 01 00 	lea    0x1dc68(%rip),%rax        # 212c0 <_ZSt4cout@GLIBCXX_3.4>
    3658:	48 89 c7             	mov    %rax,%rdi
    365b:	e8 50 fc ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3660:	48 89 c2             	mov    %rax,%rdx
    3663:	8b 45 f4             	mov    -0xc(%rbp),%eax
    3666:	66 0f 6e c0          	movd   %eax,%xmm0
    366a:	48 89 d7             	mov    %rdx,%rdi
    366d:	e8 4e fb ff ff       	call   31c0 <_ZNSolsEf@plt>
    3672:	48 89 c2             	mov    %rax,%rdx
    3675:	48 8d 05 fc ef 00 00 	lea    0xeffc(%rip),%rax        # 12678 <_ZN6__pstl9execution2v1L5unseqE+0xd>
    367c:	48 89 c6             	mov    %rax,%rsi
    367f:	48 89 d7             	mov    %rdx,%rdi
    3682:	e8 29 fc ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3687:	90                   	nop
    3688:	c9                   	leave
    3689:	c3                   	ret

000000000000368a <_ZZ14protected_mainvENUlfE_4_FUNEf>:
    368a:	55                   	push   %rbp
    368b:	48 89 e5             	mov    %rsp,%rbp
    368e:	48 83 ec 10          	sub    $0x10,%rsp
    3692:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    3697:	8b 45 fc             	mov    -0x4(%rbp),%eax
    369a:	66 0f 6e c0          	movd   %eax,%xmm0
    369e:	bf 00 00 00 00       	mov    $0x0,%edi
    36a3:	e8 8e ff ff ff       	call   3636 <_ZZ14protected_mainvENKUlfE_clEf>
    36a8:	c9                   	leave
    36a9:	c3                   	ret

00000000000036aa <_ZZ14protected_mainvENKUlfE_cvPFvfEEv>:
    36aa:	55                   	push   %rbp
    36ab:	48 89 e5             	mov    %rsp,%rbp
    36ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36b2:	48 8d 05 d1 ff ff ff 	lea    -0x2f(%rip),%rax        # 368a <_ZZ14protected_mainvENUlfE_4_FUNEf>
    36b9:	5d                   	pop    %rbp
    36ba:	c3                   	ret

00000000000036bb <_Z14protected_mainv>:
int protected_main() {
    36bb:	55                   	push   %rbp
    36bc:	48 89 e5             	mov    %rsp,%rbp
    36bf:	53                   	push   %rbx
    36c0:	48 83 ec 38          	sub    $0x38,%rsp
  auto timer = neko::ScopedTimer{neko::TimeUnit::milliseconds};
    36c4:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    36c8:	48 89 c7             	mov    %rax,%rdi
    36cb:	e8 a4 02 00 00       	call   3974 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NKUlfE_cvS3_Ev>
    36d0:	48 89 c2             	mov    %rax,%rdx
    36d3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    36d7:	be e8 03 00 00       	mov    $0x3e8,%esi
    36dc:	48 89 c7             	mov    %rax,%rdi
    36df:	e8 a2 02 00 00       	call   3986 <_ZN4neko11ScopedTimerC1ENS_8TimeUnitEPFvfE>
  auto engine = std::make_unique<neko::Engine>();
    36e4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    36e8:	48 89 c7             	mov    %rax,%rdi
    36eb:	e8 5d 23 00 00       	call   5a4d <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
  timer.invoke([](float x) { std::cout << "Load time: " << x << " ms\n"; });
    36f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    36f4:	48 89 c7             	mov    %rax,%rdi
    36f7:	e8 ae ff ff ff       	call   36aa <_ZZ14protected_mainvENKUlfE_cvPFvfEEv>
    36fc:	48 89 c2             	mov    %rax,%rdx
    36ff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3703:	48 89 d6             	mov    %rdx,%rsi
    3706:	48 89 c7             	mov    %rax,%rdi
    3709:	e8 2e 03 00 00       	call   3a3c <_ZN4neko11ScopedTimer6invokeEPFvfE>

  engine->start();
    370e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    3712:	48 89 c7             	mov    %rax,%rdi
    3715:	e8 06 24 00 00       	call   5b20 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>
    371a:	48 89 c7             	mov    %rax,%rdi
    371d:	e8 96 11 00 00       	call   48b8 <_ZN4neko6Engine5startEv>
  return EXIT_SUCCESS;
    3722:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    3727:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    372b:	48 89 c7             	mov    %rax,%rdi
    372e:	e8 89 23 00 00       	call   5abc <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    3733:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    3737:	48 89 c7             	mov    %rax,%rdi
    373a:	e8 af 02 00 00       	call   39ee <_ZN4neko11ScopedTimerD1Ev>
  return EXIT_SUCCESS;
    373f:	89 d8                	mov    %ebx,%eax
    3741:	eb 2b                	jmp    376e <_Z14protected_mainv+0xb3>
}
    3743:	48 89 c3             	mov    %rax,%rbx
    3746:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    374a:	48 89 c7             	mov    %rax,%rdi
    374d:	e8 6a 23 00 00       	call   5abc <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    3752:	eb 03                	jmp    3757 <_Z14protected_mainv+0x9c>
    3754:	48 89 c3             	mov    %rax,%rbx
    3757:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    375b:	48 89 c7             	mov    %rax,%rdi
    375e:	e8 8b 02 00 00       	call   39ee <_ZN4neko11ScopedTimerD1Ev>
    3763:	48 89 d8             	mov    %rbx,%rax
    3766:	48 89 c7             	mov    %rax,%rdi
    3769:	e8 62 fd ff ff       	call   34d0 <_Unwind_Resume@plt>
    376e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3772:	c9                   	leave
    3773:	c3                   	ret

0000000000003774 <main>:

int main() {
    3774:	55                   	push   %rbp
    3775:	48 89 e5             	mov    %rsp,%rbp
    3778:	53                   	push   %rbx
    3779:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    377d:	e8 39 ff ff ff       	call   36bb <_Z14protected_mainv>
    3782:	e9 c1 00 00 00       	jmp    3848 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    3787:	b8 01 00 00 00       	mov    $0x1,%eax
    378c:	e9 b7 00 00 00       	jmp    3848 <main+0xd4>
  } catch (std::exception &e) {
    3791:	48 83 fa 01          	cmp    $0x1,%rdx
    3795:	75 4e                	jne    37e5 <main+0x71>
    3797:	48 89 c7             	mov    %rax,%rdi
    379a:	e8 31 f9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    379f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    37a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37a7:	48 8b 00             	mov    (%rax),%rax
    37aa:	48 83 c0 10          	add    $0x10,%rax
    37ae:	48 8b 10             	mov    (%rax),%rdx
    37b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    37b5:	48 89 c7             	mov    %rax,%rdi
    37b8:	ff d2                	call   *%rdx
    37ba:	48 89 c6             	mov    %rax,%rsi
    37bd:	48 8d 05 1c dc 01 00 	lea    0x1dc1c(%rip),%rax        # 213e0 <_ZSt4cerr@GLIBCXX_3.4>
    37c4:	48 89 c7             	mov    %rax,%rdi
    37c7:	e8 e4 fa ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    37cc:	48 8b 15 d5 d7 01 00 	mov    0x1d7d5(%rip),%rdx        # 20fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    37d3:	48 89 d6             	mov    %rdx,%rsi
    37d6:	48 89 c7             	mov    %rax,%rdi
    37d9:	e8 32 fb ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    37de:	e8 9d fc ff ff       	call   3480 <__cxa_end_catch@plt>
    37e3:	eb a2                	jmp    3787 <main+0x13>
    37e5:	48 89 c7             	mov    %rax,%rdi
    37e8:	e8 e3 f8 ff ff       	call   30d0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    37ed:	48 8d 05 89 ee 00 00 	lea    0xee89(%rip),%rax        # 1267d <_ZN6__pstl9execution2v1L5unseqE+0x12>
    37f4:	48 89 c6             	mov    %rax,%rsi
    37f7:	48 8d 05 e2 db 01 00 	lea    0x1dbe2(%rip),%rax        # 213e0 <_ZSt4cerr@GLIBCXX_3.4>
    37fe:	48 89 c7             	mov    %rax,%rdi
    3801:	e8 aa fa ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3806:	48 8b 15 9b d7 01 00 	mov    0x1d79b(%rip),%rdx        # 20fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    380d:	48 89 d6             	mov    %rdx,%rsi
    3810:	48 89 c7             	mov    %rax,%rdi
    3813:	e8 f8 fa ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
    3818:	e8 63 fc ff ff       	call   3480 <__cxa_end_catch@plt>
    381d:	e9 65 ff ff ff       	jmp    3787 <main+0x13>
  } catch (...) {
    3822:	48 89 c3             	mov    %rax,%rbx
    3825:	e8 56 fc ff ff       	call   3480 <__cxa_end_catch@plt>
    382a:	48 89 d8             	mov    %rbx,%rax
    382d:	48 89 c7             	mov    %rax,%rdi
    3830:	e8 9b fc ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    3835:	48 89 c3             	mov    %rax,%rbx
    3838:	e8 43 fc ff ff       	call   3480 <__cxa_end_catch@plt>
    383d:	48 89 d8             	mov    %rbx,%rax
    3840:	48 89 c7             	mov    %rax,%rdi
    3843:	e8 88 fc ff ff       	call   34d0 <_Unwind_Resume@plt>
    3848:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    384c:	c9                   	leave
    384d:	c3                   	ret

000000000000384e <_Z41__static_initialization_and_destruction_0ii>:
    384e:	55                   	push   %rbp
    384f:	48 89 e5             	mov    %rsp,%rbp
    3852:	48 83 ec 10          	sub    $0x10,%rsp
    3856:	89 7d fc             	mov    %edi,-0x4(%rbp)
    3859:	89 75 f8             	mov    %esi,-0x8(%rbp)
    385c:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3860:	75 3b                	jne    389d <_Z41__static_initialization_and_destruction_0ii+0x4f>
    3862:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    3869:	75 32                	jne    389d <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    386b:	48 8d 05 7f dc 01 00 	lea    0x1dc7f(%rip),%rax        # 214f1 <_ZStL8__ioinit>
    3872:	48 89 c7             	mov    %rax,%rdi
    3875:	e8 c6 fb ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    387a:	48 8d 05 07 da 01 00 	lea    0x1da07(%rip),%rax        # 21288 <__dso_handle>
    3881:	48 89 c2             	mov    %rax,%rdx
    3884:	48 8d 05 66 dc 01 00 	lea    0x1dc66(%rip),%rax        # 214f1 <_ZStL8__ioinit>
    388b:	48 89 c6             	mov    %rax,%rsi
    388e:	48 8b 05 43 d7 01 00 	mov    0x1d743(%rip),%rax        # 20fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    3895:	48 89 c7             	mov    %rax,%rdi
    3898:	e8 c3 f9 ff ff       	call   3260 <__cxa_atexit@plt>
    389d:	90                   	nop
    389e:	c9                   	leave
    389f:	c3                   	ret

00000000000038a0 <_GLOBAL__sub_I__Z14protected_mainv>:
    38a0:	55                   	push   %rbp
    38a1:	48 89 e5             	mov    %rsp,%rbp
    38a4:	be ff ff 00 00       	mov    $0xffff,%esi
    38a9:	bf 01 00 00 00       	mov    $0x1,%edi
    38ae:	e8 9b ff ff ff       	call   384e <_Z41__static_initialization_and_destruction_0ii>
    38b3:	5d                   	pop    %rbp
    38b4:	c3                   	ret

00000000000038b5 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    38b5:	55                   	push   %rbp
    38b6:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    38b9:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    38be:	5d                   	pop    %rbp
    38bf:	c3                   	ret

00000000000038c0 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    38c0:	55                   	push   %rbp
    38c1:	48 89 e5             	mov    %rsp,%rbp
    38c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    38d0:	5d                   	pop    %rbp
    38d1:	c3                   	ret

00000000000038d2 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    38d2:	55                   	push   %rbp
    38d3:	48 89 e5             	mov    %rsp,%rbp
    38d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    38de:	90                   	nop
    38df:	5d                   	pop    %rbp
    38e0:	c3                   	ret

00000000000038e1 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    38e1:	55                   	push   %rbp
    38e2:	48 89 e5             	mov    %rsp,%rbp
    38e5:	48 83 ec 10          	sub    $0x10,%rsp
    38e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    38ed:	e8 c3 ff ff ff       	call   38b5 <_ZSt23__is_constant_evaluatedv>
    38f2:	84 c0                	test   %al,%al
    38f4:	74 0e                	je     3904 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    38f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38fa:	48 89 c7             	mov    %rax,%rdi
    38fd:	e8 2e 10 00 00       	call   4930 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    3902:	eb 0d                	jmp    3911 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    3904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3908:	48 89 c7             	mov    %rax,%rdi
    390b:	e8 e0 f7 ff ff       	call   30f0 <strlen@plt>
    3910:	90                   	nop
      }
    3911:	c9                   	leave
    3912:	c3                   	ret
    3913:	90                   	nop

0000000000003914 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
    3914:	55                   	push   %rbp
    3915:	48 89 e5             	mov    %rsp,%rbp
    3918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    391c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    3920:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3924:	48 8b 10             	mov    (%rax),%rdx
    3927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    392b:	48 89 10             	mov    %rdx,(%rax)
    392e:	90                   	nop
    392f:	5d                   	pop    %rbp
    3930:	c3                   	ret
    3931:	90                   	nop

0000000000003932 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
    3932:	55                   	push   %rbp
    3933:	48 89 e5             	mov    %rsp,%rbp
    3936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    393a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    393e:	48 8b 00             	mov    (%rax),%rax
    3941:	5d                   	pop    %rbp
    3942:	c3                   	ret
    3943:	90                   	nop

0000000000003944 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NKUlfE_clEf>:

  explicit ScopedTimer(void (*func)(DurationValue_T))
      : mStart{Clock_T::now()}, mInvokeFunc{func} {}

  ScopedTimer(
      TimeUnit unit, void (*func)(DurationValue_T) = [](float) {})
    3944:	55                   	push   %rbp
    3945:	48 89 e5             	mov    %rsp,%rbp
    3948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    394c:	f3 0f 11 45 f4       	movss  %xmm0,-0xc(%rbp)
    3951:	90                   	nop
    3952:	5d                   	pop    %rbp
    3953:	c3                   	ret

0000000000003954 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NUlfE_4_FUNEf>:
    3954:	55                   	push   %rbp
    3955:	48 89 e5             	mov    %rsp,%rbp
    3958:	48 83 ec 10          	sub    $0x10,%rsp
    395c:	f3 0f 11 45 fc       	movss  %xmm0,-0x4(%rbp)
    3961:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3964:	66 0f 6e c0          	movd   %eax,%xmm0
    3968:	bf 00 00 00 00       	mov    $0x0,%edi
    396d:	e8 d2 ff ff ff       	call   3944 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NKUlfE_clEf>
    3972:	c9                   	leave
    3973:	c3                   	ret

0000000000003974 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NKUlfE_cvS3_Ev>:
    3974:	55                   	push   %rbp
    3975:	48 89 e5             	mov    %rsp,%rbp
    3978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    397c:	48 8d 05 d1 ff ff ff 	lea    -0x2f(%rip),%rax        # 3954 <_ZZN4neko11ScopedTimerC4ENS_8TimeUnitEPFvfEEd_NUlfE_4_FUNEf>
    3983:	5d                   	pop    %rbp
    3984:	c3                   	ret
    3985:	90                   	nop

0000000000003986 <_ZN4neko11ScopedTimerC1ENS_8TimeUnitEPFvfE>:
  ScopedTimer(
    3986:	55                   	push   %rbp
    3987:	48 89 e5             	mov    %rsp,%rbp
    398a:	53                   	push   %rbx
    398b:	48 83 ec 28          	sub    $0x28,%rsp
    398f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3993:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    3996:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : mStart{Clock_T::now()}, mInvokeFunc{func},
    399a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    399e:	e8 1d fa ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    39a3:	48 89 03             	mov    %rax,(%rbx)
    39a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39aa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    39ae:	48 89 50 08          	mov    %rdx,0x8(%rax)
        mConvValue{static_cast<DurationValue_T>(unit)} {}
    39b2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    39b5:	48 85 c0             	test   %rax,%rax
    39b8:	78 0b                	js     39c5 <_ZN4neko11ScopedTimerC1ENS_8TimeUnitEPFvfE+0x3f>
    39ba:	66 0f ef c0          	pxor   %xmm0,%xmm0
    39be:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    39c3:	eb 19                	jmp    39de <_ZN4neko11ScopedTimerC1ENS_8TimeUnitEPFvfE+0x58>
    39c5:	48 89 c2             	mov    %rax,%rdx
    39c8:	48 d1 ea             	shr    %rdx
    39cb:	83 e0 01             	and    $0x1,%eax
    39ce:	48 09 c2             	or     %rax,%rdx
    39d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    39d5:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    39da:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    39de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    39e2:	f3 0f 11 40 10       	movss  %xmm0,0x10(%rax)
    39e7:	90                   	nop
    39e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    39ec:	c9                   	leave
    39ed:	c3                   	ret

00000000000039ee <_ZN4neko11ScopedTimerD1Ev>:

  ~ScopedTimer() { invoke(); }
    39ee:	55                   	push   %rbp
    39ef:	48 89 e5             	mov    %rsp,%rbp
    39f2:	48 83 ec 10          	sub    $0x10,%rsp
    39f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39fe:	48 89 c7             	mov    %rax,%rdi
    3a01:	e8 04 00 00 00       	call   3a0a <_ZNK4neko11ScopedTimer6invokeEv>
    3a06:	90                   	nop
    3a07:	c9                   	leave
    3a08:	c3                   	ret
    3a09:	90                   	nop

0000000000003a0a <_ZNK4neko11ScopedTimer6invokeEv>:
    mInvokeFunc = func;
  }

  DurationValue_T now() const noexcept { return getDurationTillNow(); }

  void invoke() const noexcept { mInvokeFunc(getDurationTillNow()); }
    3a0a:	55                   	push   %rbp
    3a0b:	48 89 e5             	mov    %rsp,%rbp
    3a0e:	53                   	push   %rbx
    3a0f:	48 83 ec 18          	sub    $0x18,%rsp
    3a13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a1b:	48 8b 58 08          	mov    0x8(%rax),%rbx
    3a1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a23:	48 89 c7             	mov    %rax,%rdi
    3a26:	e8 43 00 00 00       	call   3a6e <_ZNK4neko11ScopedTimer18getDurationTillNowEv>
    3a2b:	66 0f 7e c0          	movd   %xmm0,%eax
    3a2f:	66 0f 6e c0          	movd   %eax,%xmm0
    3a33:	ff d3                	call   *%rbx
    3a35:	90                   	nop
    3a36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a3a:	c9                   	leave
    3a3b:	c3                   	ret

0000000000003a3c <_ZN4neko11ScopedTimer6invokeEPFvfE>:

  void invoke(void (*func)(DurationValue_T)) { func(getDurationTillNow()); }
    3a3c:	55                   	push   %rbp
    3a3d:	48 89 e5             	mov    %rsp,%rbp
    3a40:	53                   	push   %rbx
    3a41:	48 83 ec 18          	sub    $0x18,%rsp
    3a45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3a49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3a4d:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    3a51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3a55:	48 89 c7             	mov    %rax,%rdi
    3a58:	e8 11 00 00 00       	call   3a6e <_ZNK4neko11ScopedTimer18getDurationTillNowEv>
    3a5d:	66 0f 7e c0          	movd   %xmm0,%eax
    3a61:	66 0f 6e c0          	movd   %eax,%xmm0
    3a65:	ff d3                	call   *%rbx
    3a67:	90                   	nop
    3a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3a6c:	c9                   	leave
    3a6d:	c3                   	ret

0000000000003a6e <_ZNK4neko11ScopedTimer18getDurationTillNowEv>:
private:
  std::chrono::time_point<Clock_T> mStart = Clock_T::now();
  void (*mInvokeFunc)(DurationValue_T) = [](float) {};
  DurationValue_T mConvValue = 1.0f;

  DurationValue_T getDurationTillNow() const noexcept {
    3a6e:	55                   	push   %rbp
    3a6f:	48 89 e5             	mov    %rsp,%rbp
    3a72:	53                   	push   %rbx
    3a73:	48 83 ec 38          	sub    $0x38,%rsp
    3a77:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return static_cast<DurationValue_T>(
               std::chrono::duration_cast<TimeUnit_T>(Clock_T::now() - mStart)
    3a7b:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    3a7f:	e8 3c f9 ff ff       	call   33c0 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    3a84:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3a88:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3a8c:	48 89 de             	mov    %rbx,%rsi
    3a8f:	48 89 c7             	mov    %rax,%rdi
    3a92:	e8 9b 0f 00 00       	call   4a32 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    3a97:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3a9b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    3a9f:	48 89 c7             	mov    %rax,%rdi
    3aa2:	e8 d0 0f 00 00       	call   4a77 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    3aa7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
                   .count()) /
    3aab:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    3aaf:	48 89 c7             	mov    %rax,%rdi
    3ab2:	e8 db 0f 00 00       	call   4a92 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
    return static_cast<DurationValue_T>(
    3ab7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3abb:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
           mConvValue;
    3ac0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    3ac4:	f3 0f 10 48 10       	movss  0x10(%rax),%xmm1
    3ac9:	f3 0f 5e c1          	divss  %xmm1,%xmm0
  }
    3acd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3ad1:	c9                   	leave
    3ad2:	c3                   	ret
    3ad3:	90                   	nop

0000000000003ad4 <_ZN4neko7ContextD1Ev>:

  Context &operator=(const Context &) = delete;

  Context &operator=(Context &&) = default;

  ~Context() { destroyContext(); }
    3ad4:	55                   	push   %rbp
    3ad5:	48 89 e5             	mov    %rsp,%rbp
    3ad8:	48 83 ec 10          	sub    $0x10,%rsp
    3adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ae0:	e8 95 bc 00 00       	call   f77a <_ZN4neko7Context14destroyContextEv>
    3ae5:	90                   	nop
    3ae6:	c9                   	leave
    3ae7:	c3                   	ret

0000000000003ae8 <_ZN4neko8InstanceD1Ev>:
  explicit Instance(const Settings &settings);
  Instance(const Instance &) = delete;
  Instance(Instance &&rhs) noexcept;
  Instance &operator=(const Instance &) = delete;
  Instance &operator=(Instance &&rhs);
  ~Instance() { release(); }
    3ae8:	55                   	push   %rbp
    3ae9:	48 89 e5             	mov    %rsp,%rbp
    3aec:	48 83 ec 10          	sub    $0x10,%rsp
    3af0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af8:	48 89 c7             	mov    %rax,%rdi
    3afb:	e8 06 c5 00 00       	call   10006 <_ZN4neko8Instance7releaseEv>
    3b00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b04:	48 89 c7             	mov    %rax,%rdi
    3b07:	e8 c8 ff ff ff       	call   3ad4 <_ZN4neko7ContextD1Ev>
    3b0c:	90                   	nop
    3b0d:	c9                   	leave
    3b0e:	c3                   	ret
    3b0f:	90                   	nop

0000000000003b10 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>:

class Renderer {
public:
  Renderer() = delete;

  Renderer(const Settings &settings, ThreadPool &threadPool)
    3b10:	55                   	push   %rbp
    3b11:	48 89 e5             	mov    %rsp,%rbp
    3b14:	53                   	push   %rbx
    3b15:	48 83 ec 28          	sub    $0x28,%rsp
    3b19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3b1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3b21:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : mpSettings{&settings},
    3b25:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b29:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    3b2d:	48 89 10             	mov    %rdx,(%rax)
        mpThreadPool{&threadPool}, mInstance{*mpSettings}, mWindow{*mpSettings},
    3b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b34:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    3b38:	48 89 50 08          	mov    %rdx,0x8(%rax)
    3b3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b40:	48 8d 50 10          	lea    0x10(%rax),%rdx
    3b44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b48:	48 8b 00             	mov    (%rax),%rax
    3b4b:	48 89 c6             	mov    %rax,%rsi
    3b4e:	48 89 d7             	mov    %rdx,%rdi
    3b51:	e8 dc bf 00 00       	call   fb32 <_ZN4neko8InstanceC1ERKNS_8SettingsE>
    3b56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b5a:	48 8d 50 30          	lea    0x30(%rax),%rdx
    3b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b62:	48 8b 00             	mov    (%rax),%rax
    3b65:	48 89 c6             	mov    %rax,%rsi
    3b68:	48 89 d7             	mov    %rdx,%rdi
    3b6b:	e8 0a d3 00 00       	call   10e7a <_ZN4neko6WindowC1ERKNS_8SettingsE>
        mSurface{mInstance, mWindow}, mDevice{mInstance, mSurface} {}
    3b70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b74:	48 83 c0 40          	add    $0x40,%rax
    3b78:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3b7c:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    3b80:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3b84:	48 83 c2 30          	add    $0x30,%rdx
    3b88:	48 89 ce             	mov    %rcx,%rsi
    3b8b:	48 89 c7             	mov    %rax,%rdi
    3b8e:	e8 bb d3 00 00       	call   10f4e <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    3b93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3b97:	48 83 c0 50          	add    $0x50,%rax
    3b9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3b9f:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    3ba3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3ba7:	48 83 c2 40          	add    $0x40,%rdx
    3bab:	48 89 ce             	mov    %rcx,%rsi
    3bae:	48 89 c7             	mov    %rax,%rdi
    3bb1:	e8 68 72 00 00       	call   ae1e <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    3bb6:	eb 48                	jmp    3c00 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xf0>
    3bb8:	48 89 c3             	mov    %rax,%rbx
    3bbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bbf:	48 83 c0 40          	add    $0x40,%rax
    3bc3:	48 89 c7             	mov    %rax,%rdi
    3bc6:	e8 43 d4 00 00       	call   1100e <_ZN4neko7SurfaceD1Ev>
    3bcb:	eb 03                	jmp    3bd0 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xc0>
    3bcd:	48 89 c3             	mov    %rax,%rbx
    3bd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3bd4:	48 83 c0 30          	add    $0x30,%rax
    3bd8:	48 89 c7             	mov    %rax,%rdi
    3bdb:	e8 20 d3 00 00       	call   10f00 <_ZN4neko6WindowD1Ev>
    3be0:	eb 03                	jmp    3be5 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE+0xd5>
    3be2:	48 89 c3             	mov    %rax,%rbx
    3be5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3be9:	48 83 c0 10          	add    $0x10,%rax
    3bed:	48 89 c7             	mov    %rax,%rdi
    3bf0:	e8 f3 fe ff ff       	call   3ae8 <_ZN4neko8InstanceD1Ev>
    3bf5:	48 89 d8             	mov    %rbx,%rax
    3bf8:	48 89 c7             	mov    %rax,%rdi
    3bfb:	e8 d0 f8 ff ff       	call   34d0 <_Unwind_Resume@plt>
    3c00:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3c04:	c9                   	leave
    3c05:	c3                   	ret

0000000000003c06 <_ZN4neko8Renderer5startEv>:

  Renderer &operator=(Renderer &&) = default;

  ~Renderer() = default;

  void start() {
    3c06:	55                   	push   %rbp
    3c07:	48 89 e5             	mov    %rsp,%rbp
    3c0a:	48 83 ec 10          	sub    $0x10,%rsp
    3c0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    mWindow.open();
    3c12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c16:	48 83 c0 30          	add    $0x30,%rax
    3c1a:	48 89 c7             	mov    %rax,%rdi
    3c1d:	e8 fc d2 00 00       	call   10f1e <_ZN4neko6Window4openEv>
    // Instance instance = std::move(mInstance);
    // mInstance.release();
  }
    3c22:	90                   	nop
    3c23:	c9                   	leave
    3c24:	c3                   	ret

0000000000003c25 <_ZL20__gthread_mutex_lockP15pthread_mutex_t>:
    return 0;
}

static inline int
__gthread_mutex_lock (__gthread_mutex_t *__mutex)
{
    3c25:	55                   	push   %rbp
    3c26:	48 89 e5             	mov    %rsp,%rbp
    3c29:	48 83 ec 10          	sub    $0x10,%rsp
    3c2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3c31:	e8 f4 f9 ff ff       	call   362a <_ZL18__gthread_active_pv>
    3c36:	85 c0                	test   %eax,%eax
    3c38:	0f 95 c0             	setne  %al
    3c3b:	84 c0                	test   %al,%al
    3c3d:	74 0e                	je     3c4d <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_lock) (__mutex);
    3c3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c43:	48 89 c7             	mov    %rax,%rdi
    3c46:	e8 d5 f7 ff ff       	call   3420 <pthread_mutex_lock@plt>
    3c4b:	eb 05                	jmp    3c52 <_ZL20__gthread_mutex_lockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3c4d:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3c52:	c9                   	leave
    3c53:	c3                   	ret

0000000000003c54 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>:
}
#endif

static inline int
__gthread_mutex_unlock (__gthread_mutex_t *__mutex)
{
    3c54:	55                   	push   %rbp
    3c55:	48 89 e5             	mov    %rsp,%rbp
    3c58:	48 83 ec 10          	sub    $0x10,%rsp
    3c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (__gthread_active_p ())
    3c60:	e8 c5 f9 ff ff       	call   362a <_ZL18__gthread_active_pv>
    3c65:	85 c0                	test   %eax,%eax
    3c67:	0f 95 c0             	setne  %al
    3c6a:	84 c0                	test   %al,%al
    3c6c:	74 0e                	je     3c7c <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x28>
    return __gthrw_(pthread_mutex_unlock) (__mutex);
    3c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c72:	48 89 c7             	mov    %rax,%rdi
    3c75:	e8 56 f5 ff ff       	call   31d0 <pthread_mutex_unlock@plt>
    3c7a:	eb 05                	jmp    3c81 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t+0x2d>
  else
    return 0;
    3c7c:	b8 00 00 00 00       	mov    $0x0,%eax
}
    3c81:	c9                   	leave
    3c82:	c3                   	ret
    3c83:	90                   	nop

0000000000003c84 <_ZNSt5mutex4lockEv>:

    mutex(const mutex&) = delete;
    mutex& operator=(const mutex&) = delete;

    void
    lock()
    3c84:	55                   	push   %rbp
    3c85:	48 89 e5             	mov    %rsp,%rbp
    3c88:	48 83 ec 20          	sub    $0x20,%rsp
    3c8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    {
      int __e = __gthread_mutex_lock(&_M_mutex);
    3c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3c94:	48 89 c7             	mov    %rax,%rdi
    3c97:	e8 89 ff ff ff       	call   3c25 <_ZL20__gthread_mutex_lockP15pthread_mutex_t>
    3c9c:	89 45 fc             	mov    %eax,-0x4(%rbp)

      // EINVAL, EAGAIN, EBUSY, EINVAL, EDEADLK(may)
      if (__e)
    3c9f:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    3ca3:	74 0a                	je     3caf <_ZNSt5mutex4lockEv+0x2b>
	__throw_system_error(__e);
    3ca5:	8b 45 fc             	mov    -0x4(%rbp),%eax
    3ca8:	89 c7                	mov    %eax,%edi
    3caa:	e8 c1 f4 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
    }
    3caf:	90                   	nop
    3cb0:	c9                   	leave
    3cb1:	c3                   	ret

0000000000003cb2 <_ZNSt5mutex6unlockEv>:
      // XXX EINVAL, EAGAIN, EBUSY
      return !__gthread_mutex_trylock(&_M_mutex);
    }

    void
    unlock()
    3cb2:	55                   	push   %rbp
    3cb3:	48 89 e5             	mov    %rsp,%rbp
    3cb6:	48 83 ec 10          	sub    $0x10,%rsp
    3cba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      // XXX EINVAL, EAGAIN, EPERM
      __gthread_mutex_unlock(&_M_mutex);
    3cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cc2:	48 89 c7             	mov    %rax,%rdi
    3cc5:	e8 8a ff ff ff       	call   3c54 <_ZL22__gthread_mutex_unlockP15pthread_mutex_t>
    }
    3cca:	90                   	nop
    3ccb:	c9                   	leave
    3ccc:	c3                   	ret
    3ccd:	90                   	nop

0000000000003cce <_ZNSt9_Any_data9_M_accessEv>:
    void (_Undefined_class::*_M_member_pointer)();
  };

  union [[gnu::may_alias]] _Any_data
  {
    void*       _M_access()       noexcept { return &_M_pod_data[0]; }
    3cce:	55                   	push   %rbp
    3ccf:	48 89 e5             	mov    %rsp,%rbp
    3cd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cda:	5d                   	pop    %rbp
    3cdb:	c3                   	ret

0000000000003cdc <_ZNKSt9_Any_data9_M_accessEv>:
    const void* _M_access() const noexcept { return &_M_pod_data[0]; }
    3cdc:	55                   	push   %rbp
    3cdd:	48 89 e5             	mov    %rsp,%rbp
    3ce0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce8:	5d                   	pop    %rbp
    3ce9:	c3                   	ret

0000000000003cea <_ZNSt14_Function_baseD1Ev>:
	  { return true; }
      };

    _Function_base() = default;

    ~_Function_base()
    3cea:	55                   	push   %rbp
    3ceb:	48 89 e5             	mov    %rsp,%rbp
    3cee:	48 83 ec 10          	sub    $0x10,%rsp
    3cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (_M_manager)
    3cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cfa:	48 8b 40 10          	mov    0x10(%rax),%rax
    3cfe:	48 85 c0             	test   %rax,%rax
    3d01:	74 1e                	je     3d21 <_ZNSt14_Function_baseD1Ev+0x37>
	_M_manager(_M_functor, _M_functor, __destroy_functor);
    3d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d07:	4c 8b 40 10          	mov    0x10(%rax),%r8
    3d0b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    3d0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d13:	ba 03 00 00 00       	mov    $0x3,%edx
    3d18:	48 89 ce             	mov    %rcx,%rsi
    3d1b:	48 89 c7             	mov    %rax,%rdi
    3d1e:	41 ff d0             	call   *%r8
    }
    3d21:	90                   	nop
    3d22:	c9                   	leave
    3d23:	c3                   	ret

0000000000003d24 <_ZNKSt14_Function_base8_M_emptyEv>:

    bool _M_empty() const { return !_M_manager; }
    3d24:	55                   	push   %rbp
    3d25:	48 89 e5             	mov    %rsp,%rbp
    3d28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d30:	48 8b 40 10          	mov    0x10(%rax),%rax
    3d34:	48 85 c0             	test   %rax,%rax
    3d37:	0f 94 c0             	sete   %al
    3d3a:	5d                   	pop    %rbp
    3d3b:	c3                   	ret

0000000000003d3c <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    3d3c:	55                   	push   %rbp
    3d3d:	48 89 e5             	mov    %rsp,%rbp
    3d40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3d44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    3d48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d4c:	48 8b 10             	mov    (%rax),%rdx
    3d4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d53:	48 8b 00             	mov    (%rax),%rax
    3d56:	48 39 c2             	cmp    %rax,%rdx
    3d59:	73 06                	jae    3d61 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    3d5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3d5f:	eb 04                	jmp    3d65 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    3d61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3d65:	5d                   	pop    %rbp
    3d66:	c3                   	ret
    3d67:	90                   	nop

0000000000003d68 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    3d68:	55                   	push   %rbp
    3d69:	48 89 e5             	mov    %rsp,%rbp
    3d6c:	48 83 ec 10          	sub    $0x10,%rsp
    3d70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    3d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d78:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    3d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d82:	48 89 c7             	mov    %rax,%rdi
    3d85:	e8 04 00 00 00       	call   3d8e <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    3d8a:	90                   	nop
    3d8b:	c9                   	leave
    3d8c:	c3                   	ret
    3d8d:	90                   	nop

0000000000003d8e <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    3d8e:	55                   	push   %rbp
    3d8f:	48 89 e5             	mov    %rsp,%rbp
    3d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    3d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3d9a:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    3da1:	00 
      _M_header._M_left = &_M_header;
    3da2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3da6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3daa:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    3dae:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db6:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    3dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dbe:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    3dc5:	00 
    }
    3dc6:	90                   	nop
    3dc7:	5d                   	pop    %rbp
    3dc8:	c3                   	ret

0000000000003dc9 <_ZSt16__deque_buf_sizem>:
#define _GLIBCXX_DEQUE_BUF_SIZE 512
#endif

  _GLIBCXX_CONSTEXPR inline size_t
  __deque_buf_size(size_t __size)
  { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
    3dc9:	55                   	push   %rbp
    3dca:	48 89 e5             	mov    %rsp,%rbp
    3dcd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
    3dd1:	48 81 7d f8 ff 01 00 	cmpq   $0x1ff,-0x8(%rbp)
    3dd8:	00 
    3dd9:	77 10                	ja     3deb <_ZSt16__deque_buf_sizem+0x22>
    3ddb:	b8 00 02 00 00       	mov    $0x200,%eax
    3de0:	ba 00 00 00 00       	mov    $0x0,%edx
    3de5:	48 f7 75 f8          	divq   -0x8(%rbp)
    3de9:	eb 05                	jmp    3df0 <_ZSt16__deque_buf_sizem+0x27>
    3deb:	b8 01 00 00 00       	mov    $0x1,%eax
    3df0:	5d                   	pop    %rbp
    3df1:	c3                   	ret

0000000000003df2 <_ZNSt6thread2idC1Ev>:
    class id
    {
      native_handle_type	_M_thread;

    public:
      id() noexcept : _M_thread() { }
    3df2:	55                   	push   %rbp
    3df3:	48 89 e5             	mov    %rsp,%rbp
    3df6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dfe:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3e05:	90                   	nop
    3e06:	5d                   	pop    %rbp
    3e07:	c3                   	ret

0000000000003e08 <_ZNSt6thread2idC1Em>:

      explicit
      id(native_handle_type __id) : _M_thread(__id) { }
    3e08:	55                   	push   %rbp
    3e09:	48 89 e5             	mov    %rsp,%rbp
    3e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3e14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e1c:	48 89 10             	mov    %rdx,(%rax)
    3e1f:	90                   	nop
    3e20:	5d                   	pop    %rbp
    3e21:	c3                   	ret

0000000000003e22 <_ZNSt6threadD1Ev>:
	      std::forward<_Callable>(__f), std::forward<_Args>(__args)...)),
	    __depend);
      }
#endif // _GLIBCXX_HAS_GTHREADS

    ~thread()
    3e22:	55                   	push   %rbp
    3e23:	48 89 e5             	mov    %rsp,%rbp
    3e26:	48 83 ec 10          	sub    $0x10,%rsp
    3e2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      if (joinable())
    3e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e32:	48 89 c7             	mov    %rax,%rdi
    3e35:	e8 a2 00 00 00       	call   3edc <_ZNKSt6thread8joinableEv>
    3e3a:	84 c0                	test   %al,%al
    3e3c:	74 05                	je     3e43 <_ZNSt6threadD1Ev+0x21>
    terminate();
    3e3e:	e8 1d f2 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
    }
    3e43:	90                   	nop
    3e44:	c9                   	leave
    3e45:	c3                   	ret

0000000000003e46 <_ZNSt6threadC1EOS_>:

    thread(const thread&) = delete;

    thread(thread&& __t) noexcept
    3e46:	55                   	push   %rbp
    3e47:	48 89 e5             	mov    %rsp,%rbp
    3e4a:	48 83 ec 10          	sub    $0x10,%rsp
    3e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { swap(__t); }
    3e56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e5a:	48 89 c7             	mov    %rax,%rdi
    3e5d:	e8 90 ff ff ff       	call   3df2 <_ZNSt6thread2idC1Ev>
    3e62:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3e66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e6a:	48 89 d6             	mov    %rdx,%rsi
    3e6d:	48 89 c7             	mov    %rax,%rdi
    3e70:	e8 41 00 00 00       	call   3eb6 <_ZNSt6thread4swapERS_>
    3e75:	90                   	nop
    3e76:	c9                   	leave
    3e77:	c3                   	ret

0000000000003e78 <_ZNSt6threadaSEOS_>:

    thread& operator=(const thread&) = delete;

    thread& operator=(thread&& __t) noexcept
    3e78:	55                   	push   %rbp
    3e79:	48 89 e5             	mov    %rsp,%rbp
    3e7c:	48 83 ec 10          	sub    $0x10,%rsp
    3e80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      if (joinable())
    3e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8c:	48 89 c7             	mov    %rax,%rdi
    3e8f:	e8 48 00 00 00       	call   3edc <_ZNKSt6thread8joinableEv>
    3e94:	84 c0                	test   %al,%al
    3e96:	74 05                	je     3e9d <_ZNSt6threadaSEOS_+0x25>
    3e98:	e8 c3 f1 ff ff       	call   3060 <_ZSt9terminatev@plt>
	std::__terminate();
      swap(__t);
    3e9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea5:	48 89 d6             	mov    %rdx,%rsi
    3ea8:	48 89 c7             	mov    %rax,%rdi
    3eab:	e8 06 00 00 00       	call   3eb6 <_ZNSt6thread4swapERS_>
      return *this;
    3eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    3eb4:	c9                   	leave
    3eb5:	c3                   	ret

0000000000003eb6 <_ZNSt6thread4swapERS_>:

    void
    swap(thread& __t) noexcept
    3eb6:	55                   	push   %rbp
    3eb7:	48 89 e5             	mov    %rsp,%rbp
    3eba:	48 83 ec 10          	sub    $0x10,%rsp
    3ebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ec2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { std::swap(_M_id, __t._M_id); }
    3ec6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3eca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ece:	48 89 d6             	mov    %rdx,%rsi
    3ed1:	48 89 c7             	mov    %rax,%rdi
    3ed4:	e8 f5 0b 00 00       	call   4ace <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>
    3ed9:	90                   	nop
    3eda:	c9                   	leave
    3edb:	c3                   	ret

0000000000003edc <_ZNKSt6thread8joinableEv>:

    bool
    joinable() const noexcept
    3edc:	55                   	push   %rbp
    3edd:	48 89 e5             	mov    %rsp,%rbp
    3ee0:	48 83 ec 20          	sub    $0x20,%rsp
    3ee4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return !(_M_id == id()); }
    3ee8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3eec:	48 89 c7             	mov    %rax,%rdi
    3eef:	e8 fe fe ff ff       	call   3df2 <_ZNSt6thread2idC1Ev>
    3ef4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3ef8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3efc:	48 8b 00             	mov    (%rax),%rax
    3eff:	48 89 d6             	mov    %rdx,%rsi
    3f02:	48 89 c7             	mov    %rax,%rdi
    3f05:	e8 05 00 00 00       	call   3f0f <_ZSteqNSt6thread2idES0_>
    3f0a:	83 f0 01             	xor    $0x1,%eax
    3f0d:	c9                   	leave
    3f0e:	c3                   	ret

0000000000003f0f <_ZSteqNSt6thread2idES0_>:
  swap(thread& __x, thread& __y) noexcept
  { __x.swap(__y); }

  inline bool
  operator==(thread::id __x, thread::id __y) noexcept
  {
    3f0f:	55                   	push   %rbp
    3f10:	48 89 e5             	mov    %rsp,%rbp
    3f13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // pthread_equal is undefined if either thread ID is not valid, so we
    // can't safely use __gthread_equal on default-constructed values (nor
    // the non-zero value returned by this_thread::get_id() for
    // single-threaded programs using GNU libc). Assume EqualityComparable.
    return __x._M_thread == __y._M_thread;
    3f1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f23:	48 39 c2             	cmp    %rax,%rdx
    3f26:	0f 94 c0             	sete   %al
  }
    3f29:	5d                   	pop    %rbp
    3f2a:	c3                   	ret

0000000000003f2b <_ZNSt11this_thread6get_idEv>:
  namespace this_thread
  {
    /// this_thread::get_id
    inline thread::id
    get_id() noexcept
    {
    3f2b:	55                   	push   %rbp
    3f2c:	48 89 e5             	mov    %rsp,%rbp
    3f2f:	48 83 ec 10          	sub    $0x10,%rsp
#ifndef _GLIBCXX_HAS_GTHREADS
      return thread::id(1);
#elif defined _GLIBCXX_NATIVE_THREAD_ID
      return thread::id(_GLIBCXX_NATIVE_THREAD_ID);
    3f33:	e8 38 f3 ff ff       	call   3270 <pthread_self@plt>
    3f38:	48 89 c2             	mov    %rax,%rdx
    3f3b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3f3f:	48 89 d6             	mov    %rdx,%rsi
    3f42:	48 89 c7             	mov    %rax,%rdi
    3f45:	e8 be fe ff ff       	call   3e08 <_ZNSt6thread2idC1Em>
    3f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
#else
      return thread::id(__gthread_self());
#endif
    }
    3f4e:	c9                   	leave
    3f4f:	c3                   	ret

0000000000003f50 <_ZStltNSt6thread2idES0_>:
  operator!=(thread::id __x, thread::id __y) noexcept
  { return !(__x == __y); }

  inline bool
  operator<(thread::id __x, thread::id __y) noexcept
  {
    3f50:	55                   	push   %rbp
    3f51:	48 89 e5             	mov    %rsp,%rbp
    3f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    // Pthreads doesn't define any way to do this, so we just have to
    // assume native_handle_type is LessThanComparable.
    return __x._M_thread < __y._M_thread;
    3f5c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    3f60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3f64:	48 39 c2             	cmp    %rax,%rdx
    3f67:	0f 92 c0             	setb   %al
  }
    3f6a:	5d                   	pop    %rbp
    3f6b:	c3                   	ret

0000000000003f6c <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    3f6c:	55                   	push   %rbp
    3f6d:	48 89 e5             	mov    %rsp,%rbp
    3f70:	48 83 ec 10          	sub    $0x10,%rsp
    3f74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f7c:	48 89 c7             	mov    %rax,%rdi
    3f7f:	e8 c4 0b 00 00       	call   4b48 <_ZNSaISt6threadED1Ev>
    3f84:	90                   	nop
    3f85:	c9                   	leave
    3f86:	c3                   	ret
    3f87:	90                   	nop

0000000000003f88 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3f88:	55                   	push   %rbp
    3f89:	48 89 e5             	mov    %rsp,%rbp
    3f8c:	48 83 ec 10          	sub    $0x10,%rsp
    3f90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3f94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f98:	48 89 c7             	mov    %rax,%rdi
    3f9b:	e8 80 0b 00 00       	call   4b20 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>
    3fa0:	90                   	nop
    3fa1:	c9                   	leave
    3fa2:	c3                   	ret
    3fa3:	90                   	nop

0000000000003fa4 <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3fa4:	55                   	push   %rbp
    3fa5:	48 89 e5             	mov    %rsp,%rbp
    3fa8:	48 83 ec 10          	sub    $0x10,%rsp
    3fac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fb4:	48 89 c7             	mov    %rax,%rdi
    3fb7:	e8 cc ff ff ff       	call   3f88 <_ZNSt12_Vector_baseISt6threadSaIS0_EEC1Ev>
    3fbc:	90                   	nop
    3fbd:	c9                   	leave
    3fbe:	c3                   	ret
    3fbf:	90                   	nop

0000000000003fc0 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>:
   *  Members not found in @a normal containers are @c container_type,
   *  which is a typedef for the second Sequence parameter, and @c push and
   *  @c pop, which are standard %queue/FIFO operations.
  */
  template<typename _Tp, typename _Sequence = deque<_Tp> >
    class queue
    3fc0:	55                   	push   %rbp
    3fc1:	48 89 e5             	mov    %rsp,%rbp
    3fc4:	48 83 ec 10          	sub    $0x10,%rsp
    3fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fd0:	48 89 c7             	mov    %rax,%rdi
    3fd3:	e8 70 0c 00 00       	call   4c48 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>
    3fd8:	90                   	nop
    3fd9:	c9                   	leave
    3fda:	c3                   	ret
    3fdb:	90                   	nop

0000000000003fdc <_ZNSt12__mutex_baseC1Ev>:
    constexpr __mutex_base() noexcept = default;
    3fdc:	55                   	push   %rbp
    3fdd:	48 89 e5             	mov    %rsp,%rbp
    3fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fe8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3fec:	0f 11 00             	movups %xmm0,(%rax)
    3fef:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    3ff3:	66 0f d6 40 20       	movq   %xmm0,0x20(%rax)
    3ff8:	90                   	nop
    3ff9:	5d                   	pop    %rbp
    3ffa:	c3                   	ret
    3ffb:	90                   	nop

0000000000003ffc <_ZNSt5mutexC1Ev>:
    mutex() noexcept = default;
    3ffc:	55                   	push   %rbp
    3ffd:	48 89 e5             	mov    %rsp,%rbp
    4000:	48 83 ec 10          	sub    $0x10,%rsp
    4004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    400c:	48 89 c7             	mov    %rax,%rdi
    400f:	e8 c8 ff ff ff       	call   3fdc <_ZNSt12__mutex_baseC1Ev>
    4014:	90                   	nop
    4015:	c9                   	leave
    4016:	c3                   	ret
    4017:	90                   	nop

0000000000004018 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    4018:	55                   	push   %rbp
    4019:	48 89 e5             	mov    %rsp,%rbp
    401c:	48 83 ec 10          	sub    $0x10,%rsp
    4020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4024:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4028:	48 89 c7             	mov    %rax,%rdi
    402b:	e8 bc 0c 00 00       	call   4cec <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    4030:	90                   	nop
    4031:	c9                   	leave
    4032:	c3                   	ret
    4033:	90                   	nop

0000000000004034 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    4034:	55                   	push   %rbp
    4035:	48 89 e5             	mov    %rsp,%rbp
    4038:	48 83 ec 10          	sub    $0x10,%rsp
    403c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4040:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4044:	48 89 c7             	mov    %rax,%rdi
    4047:	e8 68 0c 00 00       	call   4cb4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>
    404c:	90                   	nop
    404d:	c9                   	leave
    404e:	c3                   	ret
    404f:	90                   	nop

0000000000004050 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    4050:	55                   	push   %rbp
    4051:	48 89 e5             	mov    %rsp,%rbp
    4054:	48 83 ec 10          	sub    $0x10,%rsp
    4058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    405c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4060:	48 89 c7             	mov    %rax,%rdi
    4063:	e8 cc ff ff ff       	call   4034 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EEC1Ev>
    4068:	90                   	nop
    4069:	c9                   	leave
    406a:	c3                   	ret
    406b:	90                   	nop

000000000000406c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    406c:	55                   	push   %rbp
    406d:	48 89 e5             	mov    %rsp,%rbp
    4070:	48 83 ec 10          	sub    $0x10,%rsp
    4074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    407c:	48 89 c7             	mov    %rax,%rdi
    407f:	e8 84 0c 00 00       	call   4d08 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>
    4084:	90                   	nop
    4085:	c9                   	leave
    4086:	c3                   	ret
    4087:	90                   	nop

0000000000004088 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>:
  typedef std::function<void()> Job_T;
  typedef std::unique_lock<std::mutex> MutexLock_T;

public:
  ThreadPool() { initializePool(); }
  ThreadPool(const Settings &settings) {
    4088:	55                   	push   %rbp
    4089:	48 89 e5             	mov    %rsp,%rbp
    408c:	53                   	push   %rbx
    408d:	48 83 ec 18          	sub    $0x18,%rsp
    4091:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4095:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4099:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    409d:	48 89 c7             	mov    %rax,%rdi
    40a0:	e8 ff fe ff ff       	call   3fa4 <_ZNSt6vectorISt6threadSaIS0_EEC1Ev>
    40a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40a9:	48 83 c0 18          	add    $0x18,%rax
    40ad:	48 89 c7             	mov    %rax,%rdi
    40b0:	e8 5d 0b 00 00       	call   4c12 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>
    40b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40b9:	48 83 c0 68          	add    $0x68,%rax
    40bd:	48 89 c7             	mov    %rax,%rdi
    40c0:	e8 37 ff ff ff       	call   3ffc <_ZNSt5mutexC1Ev>
    40c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40c9:	48 05 90 00 00 00    	add    $0x90,%rax
    40cf:	48 89 c7             	mov    %rax,%rdi
    40d2:	e8 29 f3 ff ff       	call   3400 <_ZNSt18condition_variableC1Ev@plt>
    40d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40db:	48 05 c8 00 00 00    	add    $0xc8,%rax
    40e1:	48 89 c7             	mov    %rax,%rdi
    40e4:	e8 67 ff ff ff       	call   4050 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEC1Ev>
    initializePool(settings.system.cpuThreadUsage);
    40e9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    40ed:	8b 50 58             	mov    0x58(%rax),%edx
    40f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    40f4:	89 d6                	mov    %edx,%esi
    40f6:	48 89 c7             	mov    %rax,%rdi
    40f9:	e8 90 02 00 00       	call   438e <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE>
  }
    40fe:	eb 53                	jmp    4153 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xcb>
    4100:	48 89 c3             	mov    %rax,%rbx
    4103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4107:	48 05 c8 00 00 00    	add    $0xc8,%rax
    410d:	48 89 c7             	mov    %rax,%rdi
    4110:	e8 57 ff ff ff       	call   406c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    4115:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4119:	48 05 90 00 00 00    	add    $0x90,%rax
    411f:	48 89 c7             	mov    %rax,%rdi
    4122:	e8 d9 f3 ff ff       	call   3500 <_ZNSt18condition_variableD1Ev@plt>
    4127:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    412b:	48 83 c0 18          	add    $0x18,%rax
    412f:	48 89 c7             	mov    %rax,%rdi
    4132:	e8 89 fe ff ff       	call   3fc0 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    4137:	eb 03                	jmp    413c <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE+0xb4>
    4139:	48 89 c3             	mov    %rax,%rbx
    413c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4140:	48 89 c7             	mov    %rax,%rdi
    4143:	e8 6a 0a 00 00       	call   4bb2 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    4148:	48 89 d8             	mov    %rbx,%rax
    414b:	48 89 c7             	mov    %rax,%rdi
    414e:	e8 7d f3 ff ff       	call   34d0 <_Unwind_Resume@plt>
    4153:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4157:	c9                   	leave
    4158:	c3                   	ret
    4159:	90                   	nop

000000000000415a <_ZN4neko10ThreadPoolD1Ev>:
  ThreadPool(const ThreadPool &) = delete;
  ThreadPool(ThreadPool &&) = delete;
  ThreadPool &operator=(const ThreadPool &) = delete;
  ThreadPool &operator=(ThreadPool &&) = delete;
  ~ThreadPool() { release(); }
    415a:	55                   	push   %rbp
    415b:	48 89 e5             	mov    %rsp,%rbp
    415e:	48 83 ec 10          	sub    $0x10,%rsp
    4162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    416a:	48 89 c7             	mov    %rax,%rdi
    416d:	e8 ec 01 00 00       	call   435e <_ZN4neko10ThreadPool7releaseEv>
    4172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4176:	48 05 c8 00 00 00    	add    $0xc8,%rax
    417c:	48 89 c7             	mov    %rax,%rdi
    417f:	e8 e8 fe ff ff       	call   406c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEED1Ev>
    4184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4188:	48 05 90 00 00 00    	add    $0x90,%rax
    418e:	48 89 c7             	mov    %rax,%rdi
    4191:	e8 6a f3 ff ff       	call   3500 <_ZNSt18condition_variableD1Ev@plt>
    4196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    419a:	48 83 c0 18          	add    $0x18,%rax
    419e:	48 89 c7             	mov    %rax,%rdi
    41a1:	e8 1a fe ff ff       	call   3fc0 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEED1Ev>
    41a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41aa:	48 89 c7             	mov    %rax,%rdi
    41ad:	e8 00 0a 00 00       	call   4bb2 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>
    41b2:	90                   	nop
    41b3:	c9                   	leave
    41b4:	c3                   	ret
    41b5:	90                   	nop

00000000000041b6 <_ZNSt8functionIFvvEED1Ev>:
   *  @brief Polymorphic function wrapper.
   *  @ingroup functors
   *  @since C++11
   */
  template<typename _Res, typename... _ArgTypes>
    class function<_Res(_ArgTypes...)>
    41b6:	55                   	push   %rbp
    41b7:	48 89 e5             	mov    %rsp,%rbp
    41ba:	48 83 ec 10          	sub    $0x10,%rsp
    41be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    41c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41c6:	48 89 c7             	mov    %rax,%rdi
    41c9:	e8 1c fb ff ff       	call   3cea <_ZNSt14_Function_baseD1Ev>
    41ce:	90                   	nop
    41cf:	c9                   	leave
    41d0:	c3                   	ret
    41d1:	90                   	nop

00000000000041d2 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>:
      });
    }
    mMutexCondition.notify_one();
  }

  void submitJob(const Job_T &job) {
    41d2:	55                   	push   %rbp
    41d3:	48 89 e5             	mov    %rsp,%rbp
    41d6:	53                   	push   %rbx
    41d7:	48 83 ec 28          	sub    $0x28,%rsp
    41db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    41df:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    41e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41e7:	48 8d 50 68          	lea    0x68(%rax),%rdx
    41eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    41ef:	48 89 d6             	mov    %rdx,%rsi
    41f2:	48 89 c7             	mov    %rax,%rdi
    41f5:	e8 6c 0b 00 00       	call   4d66 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mJobs.push(job);
    41fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41fe:	48 8d 50 18          	lea    0x18(%rax),%rdx
    4202:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4206:	48 89 c6             	mov    %rax,%rsi
    4209:	48 89 d7             	mov    %rdx,%rdi
    420c:	e8 1f 0c 00 00       	call   4e30 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>
    }
    4211:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4215:	48 89 c7             	mov    %rax,%rdi
    4218:	e8 8b 0b 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_one();
    421d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4221:	48 05 90 00 00 00    	add    $0x90,%rax
    4227:	48 89 c7             	mov    %rax,%rdi
    422a:	e8 f1 ee ff ff       	call   3120 <_ZNSt18condition_variable10notify_oneEv@plt>
  }
    422f:	eb 1a                	jmp    424b <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE+0x79>
    }
    4231:	48 89 c3             	mov    %rax,%rbx
    4234:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    4238:	48 89 c7             	mov    %rax,%rdi
    423b:	e8 68 0b 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    4240:	48 89 d8             	mov    %rbx,%rax
    4243:	48 89 c7             	mov    %rax,%rdi
    4246:	e8 85 f2 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    424b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    424f:	c9                   	leave
    4250:	c3                   	ret
    4251:	90                   	nop

0000000000004252 <_ZN4neko10ThreadPool4busyEv>:

  bool busy() {
    4252:	55                   	push   %rbp
    4253:	48 89 e5             	mov    %rsp,%rbp
    4256:	48 83 ec 30          	sub    $0x30,%rsp
    425a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bool poolbusy;
    {
      MutexLock_T lock{mQueueMutex};
    425e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4262:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4266:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    426a:	48 89 d6             	mov    %rdx,%rsi
    426d:	48 89 c7             	mov    %rax,%rdi
    4270:	e8 f1 0a 00 00       	call   4d66 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      poolbusy = mJobs.empty();
    4275:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4279:	48 83 c0 18          	add    $0x18,%rax
    427d:	48 89 c7             	mov    %rax,%rdi
    4280:	e8 d1 0b 00 00       	call   4e56 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    4285:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    4288:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    428c:	48 89 c7             	mov    %rax,%rdi
    428f:	e8 14 0b 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    return poolbusy;
    4294:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  }
    4298:	c9                   	leave
    4299:	c3                   	ret

000000000000429a <_ZN4neko10ThreadPool13force_releaseEv>:

  const std::map<std::thread::id, u64> &jobStatus() const noexcept {
    return mJobStatus;
  }

  void force_release() {
    429a:	55                   	push   %rbp
    429b:	48 89 e5             	mov    %rsp,%rbp
    429e:	48 83 ec 40          	sub    $0x40,%rsp
    42a2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    {
      MutexLock_T lock{mQueueMutex};
    42a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42aa:	48 8d 50 68          	lea    0x68(%rax),%rdx
    42ae:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    42b2:	48 89 d6             	mov    %rdx,%rsi
    42b5:	48 89 c7             	mov    %rax,%rdi
    42b8:	e8 a9 0a 00 00       	call   4d66 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
      mShouldTerminate = true;
    42bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42c1:	c6 80 c0 00 00 00 01 	movb   $0x1,0xc0(%rax)
    }
    42c8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    42cc:	48 89 c7             	mov    %rax,%rdi
    42cf:	e8 d4 0a 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    mMutexCondition.notify_all();
    42d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42d8:	48 05 90 00 00 00    	add    $0x90,%rax
    42de:	48 89 c7             	mov    %rax,%rdi
    42e1:	e8 aa f1 ff ff       	call   3490 <_ZNSt18condition_variable10notify_allEv@plt>
    for (auto &activeThread : mThreads) {
    42e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    42ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    42ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42f2:	48 89 c7             	mov    %rax,%rdi
    42f5:	e8 76 0b 00 00       	call   4e70 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    42fa:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    42fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4302:	48 89 c7             	mov    %rax,%rdi
    4305:	e8 8c 0b 00 00       	call   4e96 <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    430a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    430e:	eb 28                	jmp    4338 <_ZN4neko10ThreadPool13force_releaseEv+0x9e>
    4310:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4314:	48 89 c7             	mov    %rax,%rdi
    4317:	e8 fe 0b 00 00       	call   4f1a <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    431c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
      activeThread.join();
    4320:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4324:	48 89 c7             	mov    %rax,%rdi
    4327:	e8 74 f1 ff ff       	call   34a0 <_ZNSt6thread4joinEv@plt>
    for (auto &activeThread : mThreads) {
    432c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4330:	48 89 c7             	mov    %rax,%rdi
    4333:	e8 c2 0b 00 00       	call   4efa <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    4338:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    433c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4340:	48 89 d6             	mov    %rdx,%rsi
    4343:	48 89 c7             	mov    %rax,%rdi
    4346:	e8 74 0b 00 00       	call   4ebf <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    434b:	84 c0                	test   %al,%al
    434d:	75 c1                	jne    4310 <_ZN4neko10ThreadPool13force_releaseEv+0x76>
    }
    mThreads.clear();
    434f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4353:	48 89 c7             	mov    %rax,%rdi
    4356:	e8 d1 0b 00 00       	call   4f2c <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>
  }
    435b:	90                   	nop
    435c:	c9                   	leave
    435d:	c3                   	ret

000000000000435e <_ZN4neko10ThreadPool7releaseEv>:

  void release() {
    435e:	55                   	push   %rbp
    435f:	48 89 e5             	mov    %rsp,%rbp
    4362:	48 83 ec 10          	sub    $0x10,%rsp
    4366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!busy()) {
    436a:	90                   	nop
    436b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    436f:	48 89 c7             	mov    %rax,%rdi
    4372:	e8 db fe ff ff       	call   4252 <_ZN4neko10ThreadPool4busyEv>
    4377:	83 f0 01             	xor    $0x1,%eax
    437a:	84 c0                	test   %al,%al
    437c:	75 ed                	jne    436b <_ZN4neko10ThreadPool7releaseEv+0xd>
    }
    force_release();
    437e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4382:	48 89 c7             	mov    %rax,%rdi
    4385:	e8 10 ff ff ff       	call   429a <_ZN4neko10ThreadPool13force_releaseEv>
  }
    438a:	90                   	nop
    438b:	c9                   	leave
    438c:	c3                   	ret
    438d:	90                   	nop

000000000000438e <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE>:
  std::mutex mQueueMutex;
  std::condition_variable mMutexCondition;
  bool mShouldTerminate;
  std::map<std::thread::id, u64> mJobStatus;

  void initializePool(CPUThreadUsage usageMode = medium) {
    438e:	55                   	push   %rbp
    438f:	48 89 e5             	mov    %rsp,%rbp
    4392:	41 54                	push   %r12
    4394:	53                   	push   %rbx
    4395:	48 83 ec 50          	sub    $0x50,%rsp
    4399:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    439d:	89 75 a4             	mov    %esi,-0x5c(%rbp)
    auto supportedThreadCount = std::thread::hardware_concurrency();
    43a0:	e8 3b f0 ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    43a5:	89 45 ec             	mov    %eax,-0x14(%rbp)
    if (supportedThreadCount < 4) {
    43a8:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)
    43ac:	77 3b                	ja     43e9 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x5b>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    43ae:	bf 10 00 00 00       	mov    $0x10,%edi
    43b3:	e8 58 ed ff ff       	call   3110 <__cxa_allocate_exception@plt>
    43b8:	48 89 c3             	mov    %rax,%rbx
    43bb:	48 8d 05 7e e2 00 00 	lea    0xe27e(%rip),%rax        # 12640 <_ZN9__gnu_cxxL21__default_lock_policyE+0x8>
    43c2:	48 89 c6             	mov    %rax,%rsi
    43c5:	48 89 df             	mov    %rbx,%rdi
    43c8:	e8 e3 ec ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    43cd:	48 8b 05 e4 cb 01 00 	mov    0x1cbe4(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    43d4:	48 89 c2             	mov    %rax,%rdx
    43d7:	48 8d 05 62 c9 01 00 	lea    0x1c962(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    43de:	48 89 c6             	mov    %rax,%rsi
    43e1:	48 89 df             	mov    %rbx,%rdi
    43e4:	e8 c7 f0 ff ff       	call   34b0 <__cxa_throw@plt>
    }
    mShouldTerminate = false;
    43e9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    43ed:	c6 80 c0 00 00 00 00 	movb   $0x0,0xc0(%rax)
    mThreads.resize(std::thread::hardware_concurrency() / usageMode);
    43f4:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx
    43f8:	e8 e3 ef ff ff       	call   33e0 <_ZNSt6thread20hardware_concurrencyEv@plt>
    43fd:	ba 00 00 00 00       	mov    $0x0,%edx
    4402:	f7 75 a4             	divl   -0x5c(%rbp)
    4405:	89 c0                	mov    %eax,%eax
    4407:	48 89 c6             	mov    %rax,%rsi
    440a:	48 89 df             	mov    %rbx,%rdi
    440d:	e8 40 0b 00 00       	call   4f52 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>
    for (auto &thread : mThreads) {
    4412:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4416:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    441a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    441e:	48 89 c7             	mov    %rax,%rdi
    4421:	e8 4a 0a 00 00       	call   4e70 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>
    4426:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    442a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    442e:	48 89 c7             	mov    %rax,%rdi
    4431:	e8 60 0a 00 00       	call   4e96 <_ZNSt6vectorISt6threadSaIS0_EE3endEv>
    4436:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    443a:	eb 5d                	jmp    4499 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x10b>
    443c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4440:	48 89 c7             	mov    %rax,%rdi
    4443:	e8 d2 0a 00 00       	call   4f1a <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>
    4448:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      thread = std::thread{ThreadPool::threadLoop, this};
    444c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4450:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4454:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    4458:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    445c:	48 8d 0d b5 00 00 00 	lea    0xb5(%rip),%rcx        # 4518 <_ZN4neko10ThreadPool10threadLoopEPS0_>
    4463:	48 89 ce             	mov    %rcx,%rsi
    4466:	48 89 c7             	mov    %rax,%rdi
    4469:	e8 6a 0b 00 00       	call   4fd8 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>
    446e:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    4472:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4476:	48 89 d6             	mov    %rdx,%rsi
    4479:	48 89 c7             	mov    %rax,%rdi
    447c:	e8 f7 f9 ff ff       	call   3e78 <_ZNSt6threadaSEOS_>
    4481:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    4485:	48 89 c7             	mov    %rax,%rdi
    4488:	e8 95 f9 ff ff       	call   3e22 <_ZNSt6threadD1Ev>
    for (auto &thread : mThreads) {
    448d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4491:	48 89 c7             	mov    %rax,%rdi
    4494:	e8 61 0a 00 00       	call   4efa <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>
    4499:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    449d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    44a1:	48 89 d6             	mov    %rdx,%rsi
    44a4:	48 89 c7             	mov    %rax,%rdi
    44a7:	e8 13 0a 00 00       	call   4ebf <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    44ac:	84 c0                	test   %al,%al
    44ae:	75 8c                	jne    443c <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0xae>
    }
  }
    44b0:	eb 16                	jmp    44c8 <_ZN4neko10ThreadPool14initializePoolENS_14CPUThreadUsageE+0x13a>
      throw std::runtime_error("std::thread::hardware_concurrency() < 4");
    44b2:	49 89 c4             	mov    %rax,%r12
    44b5:	48 89 df             	mov    %rbx,%rdi
    44b8:	e8 f3 ec ff ff       	call   31b0 <__cxa_free_exception@plt>
    44bd:	4c 89 e0             	mov    %r12,%rax
    44c0:	48 89 c7             	mov    %rax,%rdi
    44c3:	e8 08 f0 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    44c8:	48 83 c4 50          	add    $0x50,%rsp
    44cc:	5b                   	pop    %rbx
    44cd:	41 5c                	pop    %r12
    44cf:	5d                   	pop    %rbp
    44d0:	c3                   	ret
    44d1:	90                   	nop

00000000000044d2 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>:
  static void threadLoop(ThreadPool *pool) {
    while (true) {
      Job_T job;
      {
        MutexLock_T lock{pool->mQueueMutex};
        pool->mMutexCondition.wait(lock, [pool] {
    44d2:	55                   	push   %rbp
    44d3:	48 89 e5             	mov    %rsp,%rbp
    44d6:	48 83 ec 10          	sub    $0x10,%rsp
    44da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44e2:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    44e5:	48 83 c0 18          	add    $0x18,%rax
    44e9:	48 89 c7             	mov    %rax,%rdi
    44ec:	e8 65 09 00 00       	call   4e56 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>
    44f1:	83 f0 01             	xor    $0x1,%eax
    44f4:	84 c0                	test   %al,%al
    44f6:	75 12                	jne    450a <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x38>
        pool->mMutexCondition.wait(lock, [pool] {
    44f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44fc:	48 8b 00             	mov    (%rax),%rax
          return !pool->mJobs.empty() || pool->mShouldTerminate;
    44ff:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    4506:	84 c0                	test   %al,%al
    4508:	74 07                	je     4511 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x3f>
    450a:	b8 01 00 00 00       	mov    $0x1,%eax
    450f:	eb 05                	jmp    4516 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv+0x44>
    4511:	b8 00 00 00 00       	mov    $0x0,%eax
        });
    4516:	c9                   	leave
    4517:	c3                   	ret

0000000000004518 <_ZN4neko10ThreadPool10threadLoopEPS0_>:
  static void threadLoop(ThreadPool *pool) {
    4518:	55                   	push   %rbp
    4519:	48 89 e5             	mov    %rsp,%rbp
    451c:	53                   	push   %rbx
    451d:	48 83 ec 58          	sub    $0x58,%rsp
    4521:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      Job_T job;
    4525:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4529:	48 89 c7             	mov    %rax,%rdi
    452c:	e8 87 0b 00 00       	call   50b8 <_ZNSt8functionIFvvEEC1Ev>
        MutexLock_T lock{pool->mQueueMutex};
    4531:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4535:	48 8d 50 68          	lea    0x68(%rax),%rdx
    4539:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    453d:	48 89 d6             	mov    %rdx,%rsi
    4540:	48 89 c7             	mov    %rax,%rdi
    4543:	e8 1e 08 00 00       	call   4d66 <_ZNSt11unique_lockISt5mutexEC1ERS0_>
        pool->mMutexCondition.wait(lock, [pool] {
    4548:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    454c:	48 8d 88 90 00 00 00 	lea    0x90(%rax),%rcx
    4553:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4557:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    455b:	48 89 c6             	mov    %rax,%rsi
    455e:	48 89 cf             	mov    %rcx,%rdi
    4561:	e8 8a 0b 00 00       	call   50f0 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>
        if (pool->mShouldTerminate) {
    4566:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    456a:	0f b6 80 c0 00 00 00 	movzbl 0xc0(%rax),%eax
    4571:	84 c0                	test   %al,%al
    4573:	74 07                	je     457c <_ZN4neko10ThreadPool10threadLoopEPS0_+0x64>
          return;
    4575:	bb 00 00 00 00       	mov    $0x0,%ebx
    457a:	eb 64                	jmp    45e0 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xc8>
        }
        job = pool->mJobs.front();
    457c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4580:	48 83 c0 18          	add    $0x18,%rax
    4584:	48 89 c7             	mov    %rax,%rdi
    4587:	e8 a4 0b 00 00       	call   5130 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>
    458c:	48 89 c2             	mov    %rax,%rdx
    458f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4593:	48 89 d6             	mov    %rdx,%rsi
    4596:	48 89 c7             	mov    %rax,%rdi
    4599:	e8 ac 0b 00 00       	call   514a <_ZNSt8functionIFvvEEaSERKS1_>
        pool->mJobs.pop();
    459e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    45a2:	48 83 c0 18          	add    $0x18,%rax
    45a6:	48 89 c7             	mov    %rax,%rdi
    45a9:	e8 e4 0b 00 00       	call   5192 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>
        pool->mJobStatus[std::this_thread::get_id()]++;
    45ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    45b2:	48 8d 98 c8 00 00 00 	lea    0xc8(%rax),%rbx
    45b9:	e8 6d f9 ff ff       	call   3f2b <_ZNSt11this_thread6get_idEv>
    45be:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    45c2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    45c6:	48 89 c6             	mov    %rax,%rsi
    45c9:	48 89 df             	mov    %rbx,%rdi
    45cc:	e8 dd 0b 00 00       	call   51ae <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>
    45d1:	48 8b 10             	mov    (%rax),%rdx
    45d4:	48 83 c2 01          	add    $0x1,%rdx
    45d8:	48 89 10             	mov    %rdx,(%rax)
      }
    45db:	bb 01 00 00 00       	mov    $0x1,%ebx
    45e0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    45e4:	48 89 c7             	mov    %rax,%rdi
    45e7:	e8 bc 07 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    45ec:	83 fb 01             	cmp    $0x1,%ebx
    45ef:	75 0f                	jne    4600 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xe8>
    45f1:	90                   	nop
      job();
    45f2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    45f6:	48 89 c7             	mov    %rax,%rdi
    45f9:	e8 d2 07 00 00       	call   4dd0 <_ZNKSt8functionIFvvEEclEv>
    45fe:	eb 07                	jmp    4607 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xef>
    4600:	bb 00 00 00 00       	mov    $0x0,%ebx
    4605:	eb 05                	jmp    460c <_ZN4neko10ThreadPool10threadLoopEPS0_+0xf4>
    }
    4607:	bb 01 00 00 00       	mov    $0x1,%ebx
    460c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4610:	48 89 c7             	mov    %rax,%rdi
    4613:	e8 9e fb ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
    4618:	83 fb 01             	cmp    $0x1,%ebx
    461b:	75 30                	jne    464d <_ZN4neko10ThreadPool10threadLoopEPS0_+0x135>
    461d:	e9 03 ff ff ff       	jmp    4525 <_ZN4neko10ThreadPool10threadLoopEPS0_+0xd>
      }
    4622:	48 89 c3             	mov    %rax,%rbx
    4625:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4629:	48 89 c7             	mov    %rax,%rdi
    462c:	e8 77 07 00 00       	call   4da8 <_ZNSt11unique_lockISt5mutexED1Ev>
    4631:	eb 03                	jmp    4636 <_ZN4neko10ThreadPool10threadLoopEPS0_+0x11e>
    }
    4633:	48 89 c3             	mov    %rax,%rbx
    4636:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    463a:	48 89 c7             	mov    %rax,%rdi
    463d:	e8 74 fb ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
    4642:	48 89 d8             	mov    %rbx,%rax
    4645:	48 89 c7             	mov    %rax,%rdi
    4648:	e8 83 ee ff ff       	call   34d0 <_Unwind_Resume@plt>
          return;
    464d:	90                   	nop
  }
    464e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4652:	c9                   	leave
    4653:	c3                   	ret

0000000000004654 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
	    bool = is_move_assignable<_Dp>::value>
    struct __uniq_ptr_data : __uniq_ptr_impl<_Tp, _Dp>
    {
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
      __uniq_ptr_data(__uniq_ptr_data&&) = default;
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    4654:	55                   	push   %rbp
    4655:	48 89 e5             	mov    %rsp,%rbp
    4658:	48 83 ec 10          	sub    $0x10,%rsp
    465c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4660:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4668:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    466c:	48 89 d6             	mov    %rdx,%rsi
    466f:	48 89 c7             	mov    %rax,%rdi
    4672:	e8 85 10 00 00       	call   56fc <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    4677:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    467b:	c9                   	leave
    467c:	c3                   	ret
    467d:	90                   	nop

000000000000467e <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:

      /** @brief Move assignment operator.
       *
       * Invokes the deleter if this object owns a pointer.
       */
      unique_ptr& operator=(unique_ptr&&) = default;
    467e:	55                   	push   %rbp
    467f:	48 89 e5             	mov    %rsp,%rbp
    4682:	48 83 ec 10          	sub    $0x10,%rsp
    4686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    468a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    468e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4696:	48 89 d6             	mov    %rdx,%rsi
    4699:	48 89 c7             	mov    %rax,%rdi
    469c:	e8 b3 ff ff ff       	call   4654 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    46a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46a5:	c9                   	leave
    46a6:	c3                   	ret
    46a7:	90                   	nop

00000000000046a8 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    46a8:	55                   	push   %rbp
    46a9:	48 89 e5             	mov    %rsp,%rbp
    46ac:	48 83 ec 10          	sub    $0x10,%rsp
    46b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46c0:	48 89 d6             	mov    %rdx,%rsi
    46c3:	48 89 c7             	mov    %rax,%rdi
    46c6:	e8 47 11 00 00       	call   5812 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    46cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46cf:	c9                   	leave
    46d0:	c3                   	ret
    46d1:	90                   	nop

00000000000046d2 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    46d2:	55                   	push   %rbp
    46d3:	48 89 e5             	mov    %rsp,%rbp
    46d6:	48 83 ec 10          	sub    $0x10,%rsp
    46da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46ea:	48 89 d6             	mov    %rdx,%rsi
    46ed:	48 89 c7             	mov    %rax,%rdi
    46f0:	e8 b3 ff ff ff       	call   46a8 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    46f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46f9:	c9                   	leave
    46fa:	c3                   	ret
    46fb:	90                   	nop

00000000000046fc <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>:
      __uniq_ptr_data& operator=(__uniq_ptr_data&&) = default;
    46fc:	55                   	push   %rbp
    46fd:	48 89 e5             	mov    %rsp,%rbp
    4700:	48 83 ec 10          	sub    $0x10,%rsp
    4704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4708:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    470c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4710:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4714:	48 89 d6             	mov    %rdx,%rsi
    4717:	48 89 c7             	mov    %rax,%rdi
    471a:	e8 1f 12 00 00       	call   593e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    471f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4723:	c9                   	leave
    4724:	c3                   	ret
    4725:	90                   	nop

0000000000004726 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      unique_ptr& operator=(unique_ptr&&) = default;
    4726:	55                   	push   %rbp
    4727:	48 89 e5             	mov    %rsp,%rbp
    472a:	48 83 ec 10          	sub    $0x10,%rsp
    472e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4732:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4736:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    473a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    473e:	48 89 d6             	mov    %rdx,%rsi
    4741:	48 89 c7             	mov    %rax,%rdi
    4744:	e8 b3 ff ff ff       	call   46fc <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EEaSEOS4_>
    4749:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    474d:	c9                   	leave
    474e:	c3                   	ret
    474f:	90                   	nop

0000000000004750 <_ZN4neko6EngineC1Ev>:

namespace neko {

class Engine {
public:
  Engine() {
    4750:	55                   	push   %rbp
    4751:	48 89 e5             	mov    %rsp,%rbp
    4754:	53                   	push   %rbx
    4755:	48 83 ec 38          	sub    $0x38,%rsp
    4759:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    475d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4761:	48 89 c7             	mov    %rax,%rdi
    4764:	e8 81 0b 00 00       	call   52ea <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>
    4769:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    476d:	48 83 c0 08          	add    $0x8,%rax
    4771:	48 89 c7             	mov    %rax,%rdi
    4774:	e8 33 0c 00 00       	call   53ac <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>
    4779:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    477d:	48 83 c0 10          	add    $0x10,%rax
    4781:	48 89 c7             	mov    %rax,%rdi
    4784:	e8 e5 0c 00 00       	call   546e <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>
    mpSettings = std::make_unique<Settings>();
    4789:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    478d:	48 89 c7             	mov    %rax,%rdi
    4790:	e8 e4 0e 00 00       	call   5679 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    4795:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4799:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    479d:	48 89 d6             	mov    %rdx,%rsi
    47a0:	48 89 c7             	mov    %rax,%rdi
    47a3:	e8 d6 fe ff ff       	call   467e <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>
    47a8:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    47ac:	48 89 c7             	mov    %rax,%rdi
    47af:	e8 5c 0b 00 00       	call   5310 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>

    mpThreadPool = std::make_unique<ThreadPool>(*mpSettings);
    47b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47b8:	48 89 c7             	mov    %rax,%rdi
    47bb:	e8 90 0f 00 00       	call   5750 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    47c0:	48 89 c2             	mov    %rax,%rdx
    47c3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    47c7:	48 89 d6             	mov    %rdx,%rsi
    47ca:	48 89 c7             	mov    %rax,%rdi
    47cd:	e8 c0 0f 00 00       	call   5792 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    47d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47d6:	48 8d 50 10          	lea    0x10(%rax),%rdx
    47da:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    47de:	48 89 c6             	mov    %rax,%rsi
    47e1:	48 89 d7             	mov    %rdx,%rdi
    47e4:	e8 e9 fe ff ff       	call   46d2 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>
    47e9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    47ed:	48 89 c7             	mov    %rax,%rdi
    47f0:	e8 9f 0c 00 00       	call   5494 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>

    mpRenderer = std::make_unique<Renderer>(*mpSettings, *mpThreadPool);
    47f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    47f9:	48 83 c0 10          	add    $0x10,%rax
    47fd:	48 89 c7             	mov    %rax,%rdi
    4800:	e8 61 10 00 00       	call   5866 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>
    4805:	48 89 c3             	mov    %rax,%rbx
    4808:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    480c:	48 89 c7             	mov    %rax,%rdi
    480f:	e8 3c 0f 00 00       	call   5750 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    4814:	48 89 c1             	mov    %rax,%rcx
    4817:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    481b:	48 89 da             	mov    %rbx,%rdx
    481e:	48 89 ce             	mov    %rcx,%rsi
    4821:	48 89 c7             	mov    %rax,%rdi
    4824:	e8 7f 10 00 00       	call   58a8 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    4829:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    482d:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4831:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4835:	48 89 c6             	mov    %rax,%rsi
    4838:	48 89 d7             	mov    %rdx,%rdi
    483b:	e8 e6 fe ff ff       	call   4726 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>
    4840:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4844:	48 89 c7             	mov    %rax,%rdi
    4847:	e8 86 0b 00 00       	call   53d2 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
  };
    484c:	eb 3a                	jmp    4888 <_ZN4neko6EngineC1Ev+0x138>
    484e:	48 89 c3             	mov    %rax,%rbx
    4851:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4855:	48 83 c0 10          	add    $0x10,%rax
    4859:	48 89 c7             	mov    %rax,%rdi
    485c:	e8 33 0c 00 00       	call   5494 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    4861:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4865:	48 83 c0 08          	add    $0x8,%rax
    4869:	48 89 c7             	mov    %rax,%rdi
    486c:	e8 61 0b 00 00       	call   53d2 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    4871:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4875:	48 89 c7             	mov    %rax,%rdi
    4878:	e8 93 0a 00 00       	call   5310 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    487d:	48 89 d8             	mov    %rbx,%rax
    4880:	48 89 c7             	mov    %rax,%rdi
    4883:	e8 48 ec ff ff       	call   34d0 <_Unwind_Resume@plt>
    4888:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    488c:	c9                   	leave
    488d:	c3                   	ret

000000000000488e <_ZZN4neko6Engine5startEvENKUlvE_clEv>:
  Engine &operator=(Engine &&) = default;

  ~Engine() = default;

  void start() {
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    488e:	55                   	push   %rbp
    488f:	48 89 e5             	mov    %rsp,%rbp
    4892:	48 83 ec 10          	sub    $0x10,%rsp
    4896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    489a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    489e:	48 8b 00             	mov    (%rax),%rax
    48a1:	48 83 c0 08          	add    $0x8,%rax
    48a5:	48 89 c7             	mov    %rax,%rdi
    48a8:	e8 ff 10 00 00       	call   59ac <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>
    48ad:	48 89 c7             	mov    %rax,%rdi
    48b0:	e8 51 f3 ff ff       	call   3c06 <_ZN4neko8Renderer5startEv>
    48b5:	90                   	nop
    48b6:	c9                   	leave
    48b7:	c3                   	ret

00000000000048b8 <_ZN4neko6Engine5startEv>:
  void start() {
    48b8:	55                   	push   %rbp
    48b9:	48 89 e5             	mov    %rsp,%rbp
    48bc:	53                   	push   %rbx
    48bd:	48 83 ec 48          	sub    $0x48,%rsp
    48c1:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    48c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    48c9:	48 83 c0 10          	add    $0x10,%rax
    48cd:	48 89 c7             	mov    %rax,%rdi
    48d0:	e8 bd 10 00 00       	call   5992 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>
    48d5:	48 89 c3             	mov    %rax,%rbx
    48d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    48dc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    48e0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    48e4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48e8:	48 89 d6             	mov    %rdx,%rsi
    48eb:	48 89 c7             	mov    %rax,%rdi
    48ee:	e8 d3 10 00 00       	call   59c6 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>
    48f3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48f7:	48 89 c6             	mov    %rax,%rsi
    48fa:	48 89 df             	mov    %rbx,%rdi
    48fd:	e8 d0 f8 ff ff       	call   41d2 <_ZN4neko10ThreadPool9submitJobERKSt8functionIFvvEE>
    4902:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 a8 f8 ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
  }
    490e:	eb 1a                	jmp    492a <_ZN4neko6Engine5startEv+0x72>
    mpThreadPool->submitJob([&] { mpRenderer->start(); });
    4910:	48 89 c3             	mov    %rax,%rbx
    4913:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4917:	48 89 c7             	mov    %rax,%rdi
    491a:	e8 97 f8 ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
    491f:	48 89 d8             	mov    %rbx,%rax
    4922:	48 89 c7             	mov    %rax,%rdi
    4925:	e8 a6 eb ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
    492a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    492e:	c9                   	leave
    492f:	c3                   	ret

0000000000004930 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4930:	55                   	push   %rbp
    4931:	48 89 e5             	mov    %rsp,%rbp
    4934:	48 83 ec 20          	sub    $0x20,%rsp
    4938:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    493c:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4943:	00 
      while (!eq(__p[__i], char_type()))
    4944:	eb 05                	jmp    494b <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4946:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    494b:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    494f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4957:	48 01 c2             	add    %rax,%rdx
    495a:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    495e:	48 89 c6             	mov    %rax,%rsi
    4961:	48 89 d7             	mov    %rdx,%rdi
    4964:	e8 d1 11 00 00       	call   5b3a <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4969:	83 f0 01             	xor    $0x1,%eax
    496c:	84 c0                	test   %al,%al
    496e:	75 d6                	jne    4946 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4970:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4974:	c9                   	leave
    4975:	c3                   	ret

0000000000004976 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4976:	55                   	push   %rbp
    4977:	48 89 e5             	mov    %rsp,%rbp
    497a:	48 83 ec 10          	sub    $0x10,%rsp
    497e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4982:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4986:	48 89 c7             	mov    %rax,%rdi
    4989:	e8 c2 e6 ff ff       	call   3050 <_ZNSaIcED2Ev@plt>
    498e:	90                   	nop
    498f:	c9                   	leave
    4990:	c3                   	ret
    4991:	90                   	nop

0000000000004992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4992:	55                   	push   %rbp
    4993:	48 89 e5             	mov    %rsp,%rbp
    4996:	53                   	push   %rbx
    4997:	48 83 ec 38          	sub    $0x38,%rsp
    499b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    499f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    49a3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    49a7:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    49ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    49af:	48 89 c7             	mov    %rax,%rdi
    49b2:	e8 69 e8 ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    49b7:	48 89 c1             	mov    %rax,%rcx
    49ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    49be:	48 89 c2             	mov    %rax,%rdx
    49c1:	48 89 ce             	mov    %rcx,%rsi
    49c4:	48 89 df             	mov    %rbx,%rdi
    49c7:	e8 54 e9 ff ff       	call   3320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    49cc:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    49d1:	75 0f                	jne    49e2 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    49d3:	48 8d 05 b6 dc 00 00 	lea    0xdcb6(%rip),%rax        # 12690 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    49da:	48 89 c7             	mov    %rax,%rdi
    49dd:	e8 be e7 ff ff       	call   31a0 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    49e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    49e6:	48 89 c7             	mov    %rax,%rdi
    49e9:	e8 f3 ee ff ff       	call   38e1 <_ZNSt11char_traitsIcE6lengthEPKc>
    49ee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    49f2:	48 01 d0             	add    %rdx,%rax
    49f5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    49f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    49fd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4a01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a05:	48 89 ce             	mov    %rcx,%rsi
    4a08:	48 89 c7             	mov    %rax,%rdi
    4a0b:	e8 90 11 00 00       	call   5ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4a10:	eb 1a                	jmp    4a2c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4a12:	48 89 c3             	mov    %rax,%rbx
    4a15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4a19:	48 89 c7             	mov    %rax,%rdi
    4a1c:	e8 55 ff ff ff       	call   4976 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4a21:	48 89 d8             	mov    %rbx,%rax
    4a24:	48 89 c7             	mov    %rax,%rdi
    4a27:	e8 a4 ea ff ff       	call   34d0 <_Unwind_Resume@plt>
    4a2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a30:	c9                   	leave
    4a31:	c3                   	ret

0000000000004a32 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    4a32:	55                   	push   %rbp
    4a33:	48 89 e5             	mov    %rsp,%rbp
    4a36:	48 83 ec 20          	sub    $0x20,%rsp
    4a3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a3e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    4a42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4a46:	48 89 c7             	mov    %rax,%rdi
    4a49:	e8 3a 12 00 00       	call   5c88 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    4a4e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    4a52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a56:	48 89 c7             	mov    %rax,%rdi
    4a59:	e8 2a 12 00 00       	call   5c88 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    4a5e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    4a62:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4a66:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4a6a:	48 89 d6             	mov    %rdx,%rsi
    4a6d:	48 89 c7             	mov    %rax,%rdi
    4a70:	e8 24 12 00 00       	call   5c99 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    4a75:	c9                   	leave
    4a76:	c3                   	ret

0000000000004a77 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    4a77:	55                   	push   %rbp
    4a78:	48 89 e5             	mov    %rsp,%rbp
    4a7b:	48 83 ec 10          	sub    $0x10,%rsp
    4a7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    4a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a87:	48 89 c7             	mov    %rax,%rdi
    4a8a:	e8 73 12 00 00       	call   5d02 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    4a8f:	c9                   	leave
    4a90:	c3                   	ret
    4a91:	90                   	nop

0000000000004a92 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    4a92:	55                   	push   %rbp
    4a93:	48 89 e5             	mov    %rsp,%rbp
    4a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    4a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a9e:	48 8b 00             	mov    (%rax),%rax
    4aa1:	5d                   	pop    %rbp
    4aa2:	c3                   	ret

0000000000004aa3 <_ZSt3maxImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    max(const _Tp& __a, const _Tp& __b)
    4aa3:	55                   	push   %rbp
    4aa4:	48 89 e5             	mov    %rsp,%rbp
    4aa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4aab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return  __a < __b ? __b : __a;
      if (__a < __b)
    4aaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ab3:	48 8b 10             	mov    (%rax),%rdx
    4ab6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4aba:	48 8b 00             	mov    (%rax),%rax
    4abd:	48 39 c2             	cmp    %rax,%rdx
    4ac0:	73 06                	jae    4ac8 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    4ac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ac6:	eb 04                	jmp    4acc <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    4ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4acc:	5d                   	pop    %rbp
    4acd:	c3                   	ret

0000000000004ace <_ZSt4swapINSt6thread2idEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS6_ESt18is_move_assignableIS6_EEE5valueEvE4typeERS6_SG_>:
			      is_move_constructible<_Tp>,
			      is_move_assignable<_Tp>>::value>::type
#else
    void
#endif
    swap(_Tp& __a, _Tp& __b)
    4ace:	55                   	push   %rbp
    4acf:	48 89 e5             	mov    %rsp,%rbp
    4ad2:	48 83 ec 20          	sub    $0x20,%rsp
    4ad6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ada:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
#if __cplusplus < 201103L
      // concept requirements
      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
#endif
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    4ade:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ae2:	48 89 c7             	mov    %rax,%rdi
    4ae5:	e8 71 12 00 00       	call   5d5b <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4aea:	48 8b 00             	mov    (%rax),%rax
    4aed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    4af1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4af5:	48 89 c7             	mov    %rax,%rdi
    4af8:	e8 5e 12 00 00       	call   5d5b <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4afd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b01:	48 8b 00             	mov    (%rax),%rax
    4b04:	48 89 02             	mov    %rax,(%rdx)
      __b = _GLIBCXX_MOVE(__tmp);
    4b07:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4b0b:	48 89 c7             	mov    %rax,%rdi
    4b0e:	e8 48 12 00 00       	call   5d5b <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    4b13:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4b17:	48 8b 00             	mov    (%rax),%rax
    4b1a:	48 89 02             	mov    %rax,(%rdx)
    }
    4b1d:	90                   	nop
    4b1e:	c9                   	leave
    4b1f:	c3                   	ret

0000000000004b20 <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    4b20:	55                   	push   %rbp
    4b21:	48 89 e5             	mov    %rsp,%rbp
    4b24:	48 83 ec 10          	sub    $0x10,%rsp
    4b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    4b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b30:	48 89 c7             	mov    %rax,%rdi
    4b33:	e8 32 12 00 00       	call   5d6a <_ZNSaISt6threadEC1Ev>
    4b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b3c:	48 89 c7             	mov    %rax,%rdi
    4b3f:	e8 42 12 00 00       	call   5d86 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    4b44:	90                   	nop
    4b45:	c9                   	leave
    4b46:	c3                   	ret
    4b47:	90                   	nop

0000000000004b48 <_ZNSaISt6threadED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4b48:	55                   	push   %rbp
    4b49:	48 89 e5             	mov    %rsp,%rbp
    4b4c:	48 83 ec 10          	sub    $0x10,%rsp
    4b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b58:	48 89 c7             	mov    %rax,%rdi
    4b5b:	e8 54 12 00 00       	call   5db4 <_ZNSt15__new_allocatorISt6threadED1Ev>
    4b60:	90                   	nop
    4b61:	c9                   	leave
    4b62:	c3                   	ret
    4b63:	90                   	nop

0000000000004b64 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4b64:	55                   	push   %rbp
    4b65:	48 89 e5             	mov    %rsp,%rbp
    4b68:	48 83 ec 10          	sub    $0x10,%rsp
    4b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b74:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b7c:	48 8b 00             	mov    (%rax),%rax
    4b7f:	48 29 c2             	sub    %rax,%rdx
    4b82:	48 89 d0             	mov    %rdx,%rax
    4b85:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4b89:	48 89 c2             	mov    %rax,%rdx
    4b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b90:	48 8b 08             	mov    (%rax),%rcx
    4b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b97:	48 89 ce             	mov    %rcx,%rsi
    4b9a:	48 89 c7             	mov    %rax,%rdi
    4b9d:	e8 1e 12 00 00       	call   5dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
      }
    4ba2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ba6:	48 89 c7             	mov    %rax,%rdi
    4ba9:	e8 be f3 ff ff       	call   3f6c <_ZNSt12_Vector_baseISt6threadSaIS0_EE12_Vector_implD1Ev>
    4bae:	90                   	nop
    4baf:	c9                   	leave
    4bb0:	c3                   	ret
    4bb1:	90                   	nop

0000000000004bb2 <_ZNSt6vectorISt6threadSaIS0_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4bb2:	55                   	push   %rbp
    4bb3:	48 89 e5             	mov    %rsp,%rbp
    4bb6:	48 83 ec 10          	sub    $0x10,%rsp
    4bba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc2:	48 89 c7             	mov    %rax,%rdi
    4bc5:	e8 2c 12 00 00       	call   5df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    4bca:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd9:	48 8b 00             	mov    (%rax),%rax
    4bdc:	48 89 ce             	mov    %rcx,%rsi
    4bdf:	48 89 c7             	mov    %rax,%rdi
    4be2:	e8 1d 12 00 00       	call   5e04 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4be7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4beb:	48 89 c7             	mov    %rax,%rdi
    4bee:	e8 71 ff ff ff       	call   4b64 <_ZNSt12_Vector_baseISt6threadSaIS0_EED1Ev>
    4bf3:	90                   	nop
    4bf4:	c9                   	leave
    4bf5:	c3                   	ret

0000000000004bf6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>:

      /**
       *  @brief  Creates a %deque with no elements.
       */
#if __cplusplus >= 201103L
      deque() = default;
    4bf6:	55                   	push   %rbp
    4bf7:	48 89 e5             	mov    %rsp,%rbp
    4bfa:	48 83 ec 10          	sub    $0x10,%rsp
    4bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c06:	48 89 c7             	mov    %rax,%rdi
    4c09:	e8 3c 12 00 00       	call   5e4a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>
    4c0e:	90                   	nop
    4c0f:	c9                   	leave
    4c10:	c3                   	ret
    4c11:	90                   	nop

0000000000004c12 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEEC1IS5_vEEv>:
      queue(const _Sequence& __c = _Sequence())
      : c(__c) { }
#else
      template<typename _Seq = _Sequence, typename _Requires = typename
	       enable_if<is_default_constructible<_Seq>::value>::type>
	queue()
    4c12:	55                   	push   %rbp
    4c13:	48 89 e5             	mov    %rsp,%rbp
    4c16:	48 83 ec 10          	sub    $0x10,%rsp
    4c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: c() { }
    4c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c22:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4c26:	0f 11 00             	movups %xmm0,(%rax)
    4c29:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4c2d:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4c31:	0f 11 40 30          	movups %xmm0,0x30(%rax)
    4c35:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    4c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c3d:	48 89 c7             	mov    %rax,%rdi
    4c40:	e8 b1 ff ff ff       	call   4bf6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EEC1Ev>
    4c45:	90                   	nop
    4c46:	c9                   	leave
    4c47:	c3                   	ret

0000000000004c48 <_ZNSt5dequeISt8functionIFvvEESaIS2_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~deque()
    4c48:	55                   	push   %rbp
    4c49:	48 89 e5             	mov    %rsp,%rbp
    4c4c:	53                   	push   %rbx
    4c4d:	48 83 ec 58          	sub    $0x58,%rsp
    4c51:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
      { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
    4c55:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4c59:	48 89 c7             	mov    %rax,%rdi
    4c5c:	e8 f9 12 00 00       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    4c61:	48 89 c3             	mov    %rax,%rbx
    4c64:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4c68:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4c6c:	48 89 d6             	mov    %rdx,%rsi
    4c6f:	48 89 c7             	mov    %rax,%rdi
    4c72:	e8 b5 12 00 00       	call   5f2c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>
    4c77:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    4c7b:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    4c7f:	48 89 d6             	mov    %rdx,%rsi
    4c82:	48 89 c7             	mov    %rax,%rdi
    4c85:	e8 74 12 00 00       	call   5efe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    4c8a:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    4c8e:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    4c92:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4c96:	48 89 d9             	mov    %rbx,%rcx
    4c99:	48 89 c7             	mov    %rax,%rdi
    4c9c:	e8 c7 12 00 00       	call   5f68 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>
    4ca1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    4ca5:	48 89 c7             	mov    %rax,%rdi
    4ca8:	e8 e9 11 00 00       	call   5e96 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>
    4cad:	90                   	nop
    4cae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cb2:	c9                   	leave
    4cb3:	c3                   	ret

0000000000004cb4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    4cb4:	55                   	push   %rbp
    4cb5:	48 89 e5             	mov    %rsp,%rbp
    4cb8:	48 83 ec 10          	sub    $0x10,%rsp
    4cbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    4cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cc4:	48 89 c7             	mov    %rax,%rdi
    4cc7:	e8 f4 12 00 00       	call   5fc0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    4ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cd0:	48 89 c7             	mov    %rax,%rdi
    4cd3:	e8 04 13 00 00       	call   5fdc <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>
    4cd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cdc:	48 83 c0 08          	add    $0x8,%rax
    4ce0:	48 89 c7             	mov    %rax,%rdi
    4ce3:	e8 80 f0 ff ff       	call   3d68 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    4ce8:	90                   	nop
    4ce9:	c9                   	leave
    4cea:	c3                   	ret
    4ceb:	90                   	nop

0000000000004cec <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    4cec:	55                   	push   %rbp
    4ced:	48 89 e5             	mov    %rsp,%rbp
    4cf0:	48 83 ec 10          	sub    $0x10,%rsp
    4cf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cfc:	48 89 c7             	mov    %rax,%rdi
    4cff:	e8 e4 12 00 00       	call   5fe8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>
    4d04:	90                   	nop
    4d05:	c9                   	leave
    4d06:	c3                   	ret
    4d07:	90                   	nop

0000000000004d08 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    4d08:	55                   	push   %rbp
    4d09:	48 89 e5             	mov    %rsp,%rbp
    4d0c:	48 83 ec 10          	sub    $0x10,%rsp
    4d10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    4d14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d18:	48 89 c7             	mov    %rax,%rdi
    4d1b:	e8 3a 13 00 00       	call   605a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    4d20:	48 89 c2             	mov    %rax,%rdx
    4d23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d27:	48 89 d6             	mov    %rdx,%rsi
    4d2a:	48 89 c7             	mov    %rax,%rdi
    4d2d:	e8 c2 12 00 00       	call   5ff4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
    4d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d36:	48 89 c7             	mov    %rax,%rdi
    4d39:	e8 da f2 ff ff       	call   4018 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE13_Rb_tree_implIS8_Lb1EED1Ev>
    4d3e:	90                   	nop
    4d3f:	c9                   	leave
    4d40:	c3                   	ret
    4d41:	90                   	nop

0000000000004d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>:

      // [23.2.4.2] capacity
      /**  Returns the number of elements in the %vector.  */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      size_type
      size() const _GLIBCXX_NOEXCEPT
    4d42:	55                   	push   %rbp
    4d43:	48 89 e5             	mov    %rsp,%rbp
    4d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4d4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d4e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4d52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d56:	48 8b 00             	mov    (%rax),%rax
    4d59:	48 29 c2             	sub    %rax,%rdx
    4d5c:	48 89 d0             	mov    %rdx,%rax
    4d5f:	48 c1 f8 03          	sar    $0x3,%rax
    4d63:	5d                   	pop    %rbp
    4d64:	c3                   	ret
    4d65:	90                   	nop

0000000000004d66 <_ZNSt11unique_lockISt5mutexEC1ERS0_>:

      unique_lock() noexcept
      : _M_device(0), _M_owns(false)
      { }

      explicit unique_lock(mutex_type& __m)
    4d66:	55                   	push   %rbp
    4d67:	48 89 e5             	mov    %rsp,%rbp
    4d6a:	48 83 ec 10          	sub    $0x10,%rsp
    4d6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_device(std::__addressof(__m)), _M_owns(false)
    4d76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d7a:	48 89 c7             	mov    %rax,%rdi
    4d7d:	e8 f2 12 00 00       	call   6074 <_ZSt11__addressofISt5mutexEPT_RS1_>
    4d82:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4d86:	48 89 02             	mov    %rax,(%rdx)
    4d89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d8d:	c6 40 08 00          	movb   $0x0,0x8(%rax)
      {
	lock();
    4d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d95:	48 89 c7             	mov    %rax,%rdi
    4d98:	e8 e5 12 00 00       	call   6082 <_ZNSt11unique_lockISt5mutexE4lockEv>
	_M_owns = true;
    4d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4da1:	c6 40 08 01          	movb   $0x1,0x8(%rax)
      }
    4da5:	90                   	nop
    4da6:	c9                   	leave
    4da7:	c3                   	ret

0000000000004da8 <_ZNSt11unique_lockISt5mutexED1Ev>:
		    const chrono::duration<_Rep, _Period>& __rtime)
	: _M_device(std::__addressof(__m)),
	  _M_owns(_M_device->try_lock_for(__rtime))
	{ }

      ~unique_lock()
    4da8:	55                   	push   %rbp
    4da9:	48 89 e5             	mov    %rsp,%rbp
    4dac:	48 83 ec 10          	sub    $0x10,%rsp
    4db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_owns)
    4db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4db8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    4dbc:	84 c0                	test   %al,%al
    4dbe:	74 0c                	je     4dcc <_ZNSt11unique_lockISt5mutexED1Ev+0x24>
	  unlock();
    4dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dc4:	48 89 c7             	mov    %rax,%rdi
    4dc7:	e8 08 13 00 00       	call   60d4 <_ZNSt11unique_lockISt5mutexE6unlockEv>
      }
    4dcc:	90                   	nop
    4dcd:	c9                   	leave
    4dce:	c3                   	ret
    4dcf:	90                   	nop

0000000000004dd0 <_ZNKSt8functionIFvvEEclEv>:
       *
       *  The function call operator invokes the target function object
       *  stored by `this`.
       */
      _Res
      operator()(_ArgTypes... __args) const
    4dd0:	55                   	push   %rbp
    4dd1:	48 89 e5             	mov    %rsp,%rbp
    4dd4:	48 83 ec 10          	sub    $0x10,%rsp
    4dd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (_M_empty())
    4ddc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4de0:	48 89 c7             	mov    %rax,%rdi
    4de3:	e8 3c ef ff ff       	call   3d24 <_ZNKSt14_Function_base8_M_emptyEv>
    4de8:	84 c0                	test   %al,%al
    4dea:	74 05                	je     4df1 <_ZNKSt8functionIFvvEEclEv+0x21>
	  __throw_bad_function_call();
    4dec:	e8 af e2 ff ff       	call   30a0 <_ZSt25__throw_bad_function_callv@plt>
	return _M_invoker(_M_functor, std::forward<_ArgTypes>(__args)...);
    4df1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df5:	48 8b 50 18          	mov    0x18(%rax),%rdx
    4df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dfd:	48 89 c7             	mov    %rax,%rdi
    4e00:	ff d2                	call   *%rdx
    4e02:	90                   	nop
      }
    4e03:	c9                   	leave
    4e04:	c3                   	ret
    4e05:	90                   	nop

0000000000004e06 <_ZNSt14_Function_baseC1Ev>:
    _Function_base() = default;
    4e06:	55                   	push   %rbp
    4e07:	48 89 e5             	mov    %rsp,%rbp
    4e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e12:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4e19:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4e20:	00 
    4e21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e25:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4e2c:	00 
    4e2d:	90                   	nop
    4e2e:	5d                   	pop    %rbp
    4e2f:	c3                   	ret

0000000000004e30 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE4pushERKS2_>:
       *  element at the end of the %queue and assigns the given data
       *  to it.  The time complexity of the operation depends on the
       *  underlying sequence.
       */
      void
      push(const value_type& __x)
    4e30:	55                   	push   %rbp
    4e31:	48 89 e5             	mov    %rsp,%rbp
    4e34:	48 83 ec 10          	sub    $0x10,%rsp
    4e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { c.push_back(__x); }
    4e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4e48:	48 89 d6             	mov    %rdx,%rsi
    4e4b:	48 89 c7             	mov    %rax,%rdi
    4e4e:	e8 cd 12 00 00       	call   6120 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>
    4e53:	90                   	nop
    4e54:	c9                   	leave
    4e55:	c3                   	ret

0000000000004e56 <_ZNKSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5emptyEv>:
      empty() const
    4e56:	55                   	push   %rbp
    4e57:	48 89 e5             	mov    %rsp,%rbp
    4e5a:	48 83 ec 10          	sub    $0x10,%rsp
    4e5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return c.empty(); }
    4e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e66:	48 89 c7             	mov    %rax,%rdi
    4e69:	e8 22 13 00 00       	call   6190 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>
    4e6e:	c9                   	leave
    4e6f:	c3                   	ret

0000000000004e70 <_ZNSt6vectorISt6threadSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4e70:	55                   	push   %rbp
    4e71:	48 89 e5             	mov    %rsp,%rbp
    4e74:	48 83 ec 20          	sub    $0x20,%rsp
    4e78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4e7c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4e80:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4e84:	48 89 d6             	mov    %rdx,%rsi
    4e87:	48 89 c7             	mov    %rax,%rdi
    4e8a:	e8 2b 13 00 00       	call   61ba <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e93:	c9                   	leave
    4e94:	c3                   	ret
    4e95:	90                   	nop

0000000000004e96 <_ZNSt6vectorISt6threadSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4e96:	55                   	push   %rbp
    4e97:	48 89 e5             	mov    %rsp,%rbp
    4e9a:	48 83 ec 20          	sub    $0x20,%rsp
    4e9e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4ea2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ea6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4eaa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4eae:	48 89 d6             	mov    %rdx,%rsi
    4eb1:	48 89 c7             	mov    %rax,%rdi
    4eb4:	e8 01 13 00 00       	call   61ba <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ebd:	c9                   	leave
    4ebe:	c3                   	ret

0000000000004ebf <_ZN9__gnu_cxxneIPSt6threadSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4ebf:	55                   	push   %rbp
    4ec0:	48 89 e5             	mov    %rsp,%rbp
    4ec3:	53                   	push   %rbx
    4ec4:	48 83 ec 18          	sub    $0x18,%rsp
    4ec8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ecc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    4ed0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ed4:	48 89 c7             	mov    %rax,%rdi
    4ed7:	e8 fc 12 00 00       	call   61d8 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4edc:	48 8b 18             	mov    (%rax),%rbx
    4edf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ee3:	48 89 c7             	mov    %rax,%rdi
    4ee6:	e8 ed 12 00 00       	call   61d8 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>
    4eeb:	48 8b 00             	mov    (%rax),%rax
    4eee:	48 39 c3             	cmp    %rax,%rbx
    4ef1:	0f 95 c0             	setne  %al
    4ef4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ef8:	c9                   	leave
    4ef9:	c3                   	ret

0000000000004efa <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    4efa:	55                   	push   %rbp
    4efb:	48 89 e5             	mov    %rsp,%rbp
    4efe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    4f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f06:	48 8b 00             	mov    (%rax),%rax
    4f09:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f11:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    4f14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    4f18:	5d                   	pop    %rbp
    4f19:	c3                   	ret

0000000000004f1a <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4f1a:	55                   	push   %rbp
    4f1b:	48 89 e5             	mov    %rsp,%rbp
    4f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4f22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f26:	48 8b 00             	mov    (%rax),%rax
    4f29:	5d                   	pop    %rbp
    4f2a:	c3                   	ret
    4f2b:	90                   	nop

0000000000004f2c <_ZNSt6vectorISt6threadSaIS0_EE5clearEv>:
       *  pointed-to memory is not touched in any way.  Managing the pointer is
       *  the user's responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      void
      clear() _GLIBCXX_NOEXCEPT
    4f2c:	55                   	push   %rbp
    4f2d:	48 89 e5             	mov    %rsp,%rbp
    4f30:	48 83 ec 10          	sub    $0x10,%rsp
    4f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase_at_end(this->_M_impl._M_start); }
    4f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f3c:	48 8b 10             	mov    (%rax),%rdx
    4f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f43:	48 89 d6             	mov    %rdx,%rsi
    4f46:	48 89 c7             	mov    %rax,%rdi
    4f49:	e8 98 12 00 00       	call   61e6 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
    4f4e:	90                   	nop
    4f4f:	c9                   	leave
    4f50:	c3                   	ret
    4f51:	90                   	nop

0000000000004f52 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    4f52:	55                   	push   %rbp
    4f53:	48 89 e5             	mov    %rsp,%rbp
    4f56:	48 83 ec 10          	sub    $0x10,%rsp
    4f5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    4f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f66:	48 89 c7             	mov    %rax,%rdi
    4f69:	e8 d4 fd ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4f6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4f72:	0f 92 c0             	setb   %al
    4f75:	84 c0                	test   %al,%al
    4f77:	74 24                	je     4f9d <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    4f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f7d:	48 89 c7             	mov    %rax,%rdi
    4f80:	e8 bd fd ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4f85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4f89:	48 29 c2             	sub    %rax,%rdx
    4f8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f90:	48 89 d6             	mov    %rdx,%rsi
    4f93:	48 89 c7             	mov    %rax,%rdi
    4f96:	e8 ab 12 00 00       	call   6246 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>
      }
    4f9b:	eb 38                	jmp    4fd5 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    4f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa1:	48 89 c7             	mov    %rax,%rdi
    4fa4:	e8 99 fd ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    4fa9:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    4fad:	0f 92 c0             	setb   %al
    4fb0:	84 c0                	test   %al,%al
    4fb2:	74 21                	je     4fd5 <_ZNSt6vectorISt6threadSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    4fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fb8:	48 8b 00             	mov    (%rax),%rax
    4fbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4fbf:	48 c1 e2 03          	shl    $0x3,%rdx
    4fc3:	48 01 c2             	add    %rax,%rdx
    4fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fca:	48 89 d6             	mov    %rdx,%rsi
    4fcd:	48 89 c7             	mov    %rax,%rdi
    4fd0:	e8 11 12 00 00       	call   61e6 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>
      }
    4fd5:	90                   	nop
    4fd6:	c9                   	leave
    4fd7:	c3                   	ret

0000000000004fd8 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_>:
      thread(_Callable&& __f, _Args&&... __args)
    4fd8:	55                   	push   %rbp
    4fd9:	48 89 e5             	mov    %rsp,%rbp
    4fdc:	41 55                	push   %r13
    4fde:	41 54                	push   %r12
    4fe0:	53                   	push   %rbx
    4fe1:	48 83 ec 38          	sub    $0x38,%rsp
    4fe5:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4fe9:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    4fed:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
      {
    4ff1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4ff5:	48 89 c7             	mov    %rax,%rdi
    4ff8:	e8 f5 ed ff ff       	call   3df2 <_ZNSt6thread2idC1Ev>
	auto __depend = nullptr;
    4ffd:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    5004:	00 
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    5005:	bf 18 00 00 00       	mov    $0x18,%edi
    500a:	e8 b1 e2 ff ff       	call   32c0 <_Znwm@plt>
    500f:	48 89 c3             	mov    %rax,%rbx
    5012:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    5018:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    501c:	48 89 c7             	mov    %rax,%rdi
    501f:	e8 3a 14 00 00       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    5024:	49 89 c4             	mov    %rax,%r12
    5027:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    502b:	48 89 c7             	mov    %rax,%rdi
    502e:	e8 1d 14 00 00       	call   6450 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    5033:	4c 89 e2             	mov    %r12,%rdx
    5036:	48 89 c6             	mov    %rax,%rsi
    5039:	48 89 df             	mov    %rbx,%rdi
    503c:	e8 45 14 00 00       	call   6486 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>
    5041:	41 bd 00 00 00 00    	mov    $0x0,%r13d
    5047:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    504b:	48 89 de             	mov    %rbx,%rsi
    504e:	48 89 c7             	mov    %rax,%rdi
    5051:	e8 c2 14 00 00       	call   6518 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5056:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    505a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    505e:	ba 00 00 00 00       	mov    $0x0,%edx
    5063:	48 89 ce             	mov    %rcx,%rsi
    5066:	48 89 c7             	mov    %rax,%rdi
    5069:	e8 12 e2 ff ff       	call   3280 <_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@plt>
    506e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5072:	48 89 c7             	mov    %rax,%rdi
    5075:	e8 c4 14 00 00       	call   653e <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
      }
    507a:	eb 31                	jmp    50ad <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xd5>
	_M_start_thread(_State_ptr(new _State_impl<_Wrapper>(
    507c:	49 89 c4             	mov    %rax,%r12
    507f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5083:	48 89 c7             	mov    %rax,%rdi
    5086:	e8 b3 14 00 00       	call   653e <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>
    508b:	eb 03                	jmp    5090 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xb8>
    508d:	49 89 c4             	mov    %rax,%r12
    5090:	45 84 ed             	test   %r13b,%r13b
    5093:	74 0d                	je     50a2 <_ZNSt6threadC1IRFvPN4neko10ThreadPoolEEJS3_EvEEOT_DpOT0_+0xca>
    5095:	be 18 00 00 00       	mov    $0x18,%esi
    509a:	48 89 df             	mov    %rbx,%rdi
    509d:	e8 2e e2 ff ff       	call   32d0 <_ZdlPvm@plt>
    50a2:	4c 89 e0             	mov    %r12,%rax
    50a5:	48 89 c7             	mov    %rax,%rdi
    50a8:	e8 23 e4 ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    50ad:	48 83 c4 38          	add    $0x38,%rsp
    50b1:	5b                   	pop    %rbx
    50b2:	41 5c                	pop    %r12
    50b4:	41 5d                	pop    %r13
    50b6:	5d                   	pop    %rbp
    50b7:	c3                   	ret

00000000000050b8 <_ZNSt8functionIFvvEEC1Ev>:
      function() noexcept
    50b8:	55                   	push   %rbp
    50b9:	48 89 e5             	mov    %rsp,%rbp
    50bc:	48 83 ec 10          	sub    $0x10,%rsp
    50c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Function_base() { }
    50c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50c8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    50cc:	0f 11 00             	movups %xmm0,(%rax)
    50cf:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    50d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d8:	48 89 c7             	mov    %rax,%rdi
    50db:	e8 26 fd ff ff       	call   4e06 <_ZNSt14_Function_baseC1Ev>
    50e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e4:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    50eb:	00 
    50ec:	90                   	nop
    50ed:	c9                   	leave
    50ee:	c3                   	ret
    50ef:	90                   	nop

00000000000050f0 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_>:
    void
    wait(unique_lock<mutex>& __lock);

    template<typename _Predicate>
      void
      wait(unique_lock<mutex>& __lock, _Predicate __p)
    50f0:	55                   	push   %rbp
    50f1:	48 89 e5             	mov    %rsp,%rbp
    50f4:	48 83 ec 20          	sub    $0x20,%rsp
    50f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5100:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      {
	while (!__p())
    5104:	eb 13                	jmp    5119 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x29>
	  wait(__lock);
    5106:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    510a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    510e:	48 89 d6             	mov    %rdx,%rsi
    5111:	48 89 c7             	mov    %rax,%rdi
    5114:	e8 57 df ff ff       	call   3070 <_ZNSt18condition_variable4waitERSt11unique_lockISt5mutexE@plt>
	while (!__p())
    5119:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    511d:	48 89 c7             	mov    %rax,%rdi
    5120:	e8 ad f3 ff ff       	call   44d2 <_ZZN4neko10ThreadPool10threadLoopEPS0_ENKUlvE_clEv>
    5125:	83 f0 01             	xor    $0x1,%eax
    5128:	84 c0                	test   %al,%al
    512a:	75 da                	jne    5106 <_ZNSt18condition_variable4waitIZN4neko10ThreadPool10threadLoopEPS2_EUlvE_EEvRSt11unique_lockISt5mutexET_+0x16>
      }
    512c:	90                   	nop
    512d:	90                   	nop
    512e:	c9                   	leave
    512f:	c3                   	ret

0000000000005130 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE5frontEv>:
      front()
    5130:	55                   	push   %rbp
    5131:	48 89 e5             	mov    %rsp,%rbp
    5134:	48 83 ec 10          	sub    $0x10,%rsp
    5138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return c.front();
    513c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5140:	48 89 c7             	mov    %rax,%rdi
    5143:	e8 5a 14 00 00       	call   65a2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>
      }
    5148:	c9                   	leave
    5149:	c3                   	ret

000000000000514a <_ZNSt8functionIFvvEEaSERKS1_>:
      operator=(const function& __x)
    514a:	55                   	push   %rbp
    514b:	48 89 e5             	mov    %rsp,%rbp
    514e:	48 83 ec 30          	sub    $0x30,%rsp
    5152:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5156:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	function(__x).swap(*this);
    515a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    515e:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5162:	48 89 d6             	mov    %rdx,%rsi
    5165:	48 89 c7             	mov    %rax,%rdi
    5168:	e8 63 14 00 00       	call   65d0 <_ZNSt8functionIFvvEEC1ERKS1_>
    516d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5171:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5175:	48 89 d6             	mov    %rdx,%rsi
    5178:	48 89 c7             	mov    %rax,%rdi
    517b:	e8 fa 14 00 00       	call   667a <_ZNSt8functionIFvvEE4swapERS1_>
    5180:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5184:	48 89 c7             	mov    %rax,%rdi
    5187:	e8 2a f0 ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
	return *this;
    518c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5190:	c9                   	leave
    5191:	c3                   	ret

0000000000005192 <_ZNSt5queueISt8functionIFvvEESt5dequeIS2_SaIS2_EEE3popEv>:
       *  Note that no data is returned, and if the first element's
       *  data is needed, it should be retrieved before pop() is
       *  called.
       */
      void
      pop()
    5192:	55                   	push   %rbp
    5193:	48 89 e5             	mov    %rsp,%rbp
    5196:	48 83 ec 10          	sub    $0x10,%rsp
    519a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	__glibcxx_requires_nonempty();
	c.pop_front();
    519e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a2:	48 89 c7             	mov    %rax,%rdi
    51a5:	e8 2c 15 00 00       	call   66d6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>
      }
    51aa:	90                   	nop
    51ab:	c9                   	leave
    51ac:	c3                   	ret
    51ad:	90                   	nop

00000000000051ae <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    51ae:	55                   	push   %rbp
    51af:	48 89 e5             	mov    %rsp,%rbp
    51b2:	53                   	push   %rbx
    51b3:	48 83 ec 48          	sub    $0x48,%rsp
    51b7:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    51bb:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    51bf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    51c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    51c7:	48 89 d6             	mov    %rdx,%rsi
    51ca:	48 89 c7             	mov    %rax,%rdi
    51cd:	e8 72 15 00 00       	call   6744 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>
    51d2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    51d6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    51da:	48 89 c7             	mov    %rax,%rdi
    51dd:	e8 88 15 00 00       	call   676a <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>
    51e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    51e6:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    51ea:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    51ee:	48 89 d6             	mov    %rdx,%rsi
    51f1:	48 89 c7             	mov    %rax,%rdi
    51f4:	e8 8b 15 00 00       	call   6784 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    51f9:	84 c0                	test   %al,%al
    51fb:	75 32                	jne    522f <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x81>
    51fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5201:	48 89 c7             	mov    %rax,%rdi
    5204:	e8 9d 15 00 00       	call   67a6 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>
    5209:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    520d:	48 89 c7             	mov    %rax,%rdi
    5210:	e8 ad 15 00 00       	call   67c2 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    5215:	48 89 c2             	mov    %rax,%rdx
    5218:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    521c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    5220:	48 89 ce             	mov    %rcx,%rsi
    5223:	48 89 c7             	mov    %rax,%rdi
    5226:	e8 b5 15 00 00       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    522b:	84 c0                	test   %al,%al
    522d:	74 07                	je     5236 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x88>
    522f:	b8 01 00 00 00       	mov    $0x1,%eax
    5234:	eb 05                	jmp    523b <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0x8d>
    5236:	b8 00 00 00 00       	mov    $0x0,%eax
    523b:	84 c0                	test   %al,%al
    523d:	74 5d                	je     529c <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEEixEOS1_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    523f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    5243:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5247:	48 89 c7             	mov    %rax,%rdi
    524a:	e8 0c 0b 00 00       	call   5d5b <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>
    524f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    5252:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5256:	48 89 d6             	mov    %rdx,%rsi
    5259:	48 89 c7             	mov    %rax,%rdi
    525c:	e8 ae 15 00 00       	call   680f <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>
    5261:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    5265:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5269:	48 89 d6             	mov    %rdx,%rsi
    526c:	48 89 c7             	mov    %rax,%rdi
    526f:	e8 d0 15 00 00       	call   6844 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>
    5274:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    5278:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    527c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5280:	49 89 c8             	mov    %rcx,%r8
    5283:	48 89 d1             	mov    %rdx,%rcx
    5286:	48 8d 15 a3 d4 00 00 	lea    0xd4a3(%rip),%rdx        # 12730 <_ZSt19piecewise_construct>
    528d:	48 89 c6             	mov    %rax,%rsi
    5290:	48 89 df             	mov    %rbx,%rdi
    5293:	e8 ca 15 00 00       	call   6862 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>
    5298:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    529c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    52a0:	48 89 c7             	mov    %rax,%rdi
    52a3:	e8 1a 15 00 00       	call   67c2 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>
    52a8:	48 83 c0 08          	add    $0x8,%rax
      }
    52ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52b0:	c9                   	leave
    52b1:	c3                   	ret

00000000000052b2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    52b2:	55                   	push   %rbp
    52b3:	48 89 e5             	mov    %rsp,%rbp
    52b6:	48 83 ec 10          	sub    $0x10,%rsp
    52ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c2:	48 89 c7             	mov    %rax,%rdi
    52c5:	e8 94 16 00 00       	call   695e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    52ca:	90                   	nop
    52cb:	c9                   	leave
    52cc:	c3                   	ret
    52cd:	90                   	nop

00000000000052ce <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    52ce:	55                   	push   %rbp
    52cf:	48 89 e5             	mov    %rsp,%rbp
    52d2:	48 83 ec 10          	sub    $0x10,%rsp
    52d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52de:	48 89 c7             	mov    %rax,%rdi
    52e1:	e8 cc ff ff ff       	call   52b2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1Ev>
    52e6:	90                   	nop
    52e7:	c9                   	leave
    52e8:	c3                   	ret
    52e9:	90                   	nop

00000000000052ea <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    52ea:	55                   	push   %rbp
    52eb:	48 89 e5             	mov    %rsp,%rbp
    52ee:	48 83 ec 10          	sub    $0x10,%rsp
    52f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    52f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52fa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5301:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5305:	48 89 c7             	mov    %rax,%rdi
    5308:	e8 c1 ff ff ff       	call   52ce <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    530d:	90                   	nop
    530e:	c9                   	leave
    530f:	c3                   	ret

0000000000005310 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    5310:	55                   	push   %rbp
    5311:	48 89 e5             	mov    %rsp,%rbp
    5314:	53                   	push   %rbx
    5315:	48 83 ec 28          	sub    $0x28,%rsp
    5319:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    531d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5321:	48 89 c7             	mov    %rax,%rdi
    5324:	e8 51 16 00 00       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    5329:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    532d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5331:	48 8b 00             	mov    (%rax),%rax
    5334:	48 85 c0             	test   %rax,%rax
    5337:	74 29                	je     5362 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    533d:	48 89 c7             	mov    %rax,%rdi
    5340:	e8 4f 16 00 00       	call   6994 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>
    5345:	48 89 c3             	mov    %rax,%rbx
    5348:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    534c:	48 89 c7             	mov    %rax,%rdi
    534f:	e8 5a 16 00 00       	call   69ae <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>
    5354:	48 8b 00             	mov    (%rax),%rax
    5357:	48 89 c6             	mov    %rax,%rsi
    535a:	48 89 df             	mov    %rbx,%rdi
    535d:	e8 76 16 00 00       	call   69d8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
	__ptr = pointer();
    5362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5366:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    536d:	90                   	nop
    536e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5372:	c9                   	leave
    5373:	c3                   	ret

0000000000005374 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    5374:	55                   	push   %rbp
    5375:	48 89 e5             	mov    %rsp,%rbp
    5378:	48 83 ec 10          	sub    $0x10,%rsp
    537c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5384:	48 89 c7             	mov    %rax,%rdi
    5387:	e8 82 16 00 00       	call   6a0e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    538c:	90                   	nop
    538d:	c9                   	leave
    538e:	c3                   	ret
    538f:	90                   	nop

0000000000005390 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    5390:	55                   	push   %rbp
    5391:	48 89 e5             	mov    %rsp,%rbp
    5394:	48 83 ec 10          	sub    $0x10,%rsp
    5398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53a0:	48 89 c7             	mov    %rax,%rdi
    53a3:	e8 cc ff ff ff       	call   5374 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1Ev>
    53a8:	90                   	nop
    53a9:	c9                   	leave
    53aa:	c3                   	ret
    53ab:	90                   	nop

00000000000053ac <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    53ac:	55                   	push   %rbp
    53ad:	48 89 e5             	mov    %rsp,%rbp
    53b0:	48 83 ec 10          	sub    $0x10,%rsp
    53b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    53b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53bc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    53c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53c7:	48 89 c7             	mov    %rax,%rdi
    53ca:	e8 c1 ff ff ff       	call   5390 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    53cf:	90                   	nop
    53d0:	c9                   	leave
    53d1:	c3                   	ret

00000000000053d2 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    53d2:	55                   	push   %rbp
    53d3:	48 89 e5             	mov    %rsp,%rbp
    53d6:	53                   	push   %rbx
    53d7:	48 83 ec 28          	sub    $0x28,%rsp
    53db:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    53df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53e3:	48 89 c7             	mov    %rax,%rdi
    53e6:	e8 3f 16 00 00       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    53eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    53ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53f3:	48 8b 00             	mov    (%rax),%rax
    53f6:	48 85 c0             	test   %rax,%rax
    53f9:	74 29                	je     5424 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    53fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    53ff:	48 89 c7             	mov    %rax,%rdi
    5402:	e8 3d 16 00 00       	call   6a44 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>
    5407:	48 89 c3             	mov    %rax,%rbx
    540a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    540e:	48 89 c7             	mov    %rax,%rdi
    5411:	e8 48 16 00 00       	call   6a5e <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>
    5416:	48 8b 00             	mov    (%rax),%rax
    5419:	48 89 c6             	mov    %rax,%rsi
    541c:	48 89 df             	mov    %rbx,%rdi
    541f:	e8 98 16 00 00       	call   6abc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
	__ptr = pointer();
    5424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5428:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    542f:	90                   	nop
    5430:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5434:	c9                   	leave
    5435:	c3                   	ret

0000000000005436 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>:
      __uniq_ptr_impl() = default;
    5436:	55                   	push   %rbp
    5437:	48 89 e5             	mov    %rsp,%rbp
    543a:	48 83 ec 10          	sub    $0x10,%rsp
    543e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5446:	48 89 c7             	mov    %rax,%rdi
    5449:	e8 a4 16 00 00       	call   6af2 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    544e:	90                   	nop
    544f:	c9                   	leave
    5450:	c3                   	ret
    5451:	90                   	nop

0000000000005452 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    5452:	55                   	push   %rbp
    5453:	48 89 e5             	mov    %rsp,%rbp
    5456:	48 83 ec 10          	sub    $0x10,%rsp
    545a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    545e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5462:	48 89 c7             	mov    %rax,%rdi
    5465:	e8 cc ff ff ff       	call   5436 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1Ev>
    546a:	90                   	nop
    546b:	c9                   	leave
    546c:	c3                   	ret
    546d:	90                   	nop

000000000000546e <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEv>:
	constexpr unique_ptr() noexcept
    546e:	55                   	push   %rbp
    546f:	48 89 e5             	mov    %rsp,%rbp
    5472:	48 83 ec 10          	sub    $0x10,%rsp
    5476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_t()
    547a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    547e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5489:	48 89 c7             	mov    %rax,%rdi
    548c:	e8 c1 ff ff ff       	call   5452 <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEv>
	{ }
    5491:	90                   	nop
    5492:	c9                   	leave
    5493:	c3                   	ret

0000000000005494 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    5494:	55                   	push   %rbp
    5495:	48 89 e5             	mov    %rsp,%rbp
    5498:	53                   	push   %rbx
    5499:	48 83 ec 28          	sub    $0x28,%rsp
    549d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    54a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54a5:	48 89 c7             	mov    %rax,%rdi
    54a8:	e8 61 16 00 00       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    54ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    54b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54b5:	48 8b 00             	mov    (%rax),%rax
    54b8:	48 85 c0             	test   %rax,%rax
    54bb:	74 29                	je     54e6 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    54bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    54c1:	48 89 c7             	mov    %rax,%rdi
    54c4:	e8 5f 16 00 00       	call   6b28 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>
    54c9:	48 89 c3             	mov    %rax,%rbx
    54cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54d0:	48 89 c7             	mov    %rax,%rdi
    54d3:	e8 6a 16 00 00       	call   6b42 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>
    54d8:	48 8b 00             	mov    (%rax),%rax
    54db:	48 89 c6             	mov    %rax,%rsi
    54de:	48 89 df             	mov    %rbx,%rdi
    54e1:	e8 6a 16 00 00       	call   6b50 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
	__ptr = pointer();
    54e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    54ea:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    54f1:	90                   	nop
    54f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    54f6:	c9                   	leave
    54f7:	c3                   	ret

00000000000054f8 <_ZN4neko8SettingsUt_C1Ev>:
  medium = 2,
  high = 1,
};

struct Settings {
  struct {
    54f8:	55                   	push   %rbp
    54f9:	48 89 e5             	mov    %rsp,%rbp
    54fc:	53                   	push   %rbx
    54fd:	48 83 ec 28          	sub    $0x28,%rsp
    5501:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5505:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5509:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    550d:	48 89 c7             	mov    %rax,%rdi
    5510:	e8 cb df ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    5515:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5519:	48 89 c2             	mov    %rax,%rdx
    551c:	48 8d 05 9f d1 00 00 	lea    0xd19f(%rip),%rax        # 126c2 <_ZN6__pstl9execution2v1L5unseqE+0x57>
    5523:	48 89 c6             	mov    %rax,%rsi
    5526:	48 89 df             	mov    %rbx,%rdi
    5529:	e8 64 f4 ff ff       	call   4992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    552e:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    5532:	48 89 c7             	mov    %rax,%rdi
    5535:	e8 06 de ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    553a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    553e:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    5545:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5549:	48 8d 58 28          	lea    0x28(%rax),%rbx
    554d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5551:	48 89 c7             	mov    %rax,%rdi
    5554:	e8 87 df ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    5559:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    555d:	48 89 c2             	mov    %rax,%rdx
    5560:	48 8d 05 6e d1 00 00 	lea    0xd16e(%rip),%rax        # 126d5 <_ZN6__pstl9execution2v1L5unseqE+0x6a>
    5567:	48 89 c6             	mov    %rax,%rsi
    556a:	48 89 df             	mov    %rbx,%rdi
    556d:	e8 20 f4 ff ff       	call   4992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    5572:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5576:	48 89 c7             	mov    %rax,%rdi
    5579:	e8 c2 dd ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    557e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5582:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    5589:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    558d:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    5594:	eb 40                	jmp    55d6 <_ZN4neko8SettingsUt_C1Ev+0xde>
    5596:	48 89 c3             	mov    %rax,%rbx
    5599:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    559d:	48 89 c7             	mov    %rax,%rdi
    55a0:	e8 9b dd ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    55a5:	48 89 d8             	mov    %rbx,%rax
    55a8:	48 89 c7             	mov    %rax,%rdi
    55ab:	e8 20 df ff ff       	call   34d0 <_Unwind_Resume@plt>
    55b0:	48 89 c3             	mov    %rax,%rbx
    55b3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    55b7:	48 89 c7             	mov    %rax,%rdi
    55ba:	e8 81 dd ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    55bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    55c3:	48 89 c7             	mov    %rax,%rdi
    55c6:	e8 95 db ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    55cb:	48 89 d8             	mov    %rbx,%rax
    55ce:	48 89 c7             	mov    %rax,%rdi
    55d1:	e8 fa de ff ff       	call   34d0 <_Unwind_Resume@plt>
    55d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55da:	c9                   	leave
    55db:	c3                   	ret

00000000000055dc <_ZN4neko8SettingsUt_D1Ev>:
    55dc:	55                   	push   %rbp
    55dd:	48 89 e5             	mov    %rsp,%rbp
    55e0:	48 83 ec 10          	sub    $0x10,%rsp
    55e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55ec:	48 83 c0 28          	add    $0x28,%rax
    55f0:	48 89 c7             	mov    %rax,%rdi
    55f3:	e8 68 db ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    55f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fc:	48 89 c7             	mov    %rax,%rdi
    55ff:	e8 5c db ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5604:	90                   	nop
    5605:	c9                   	leave
    5606:	c3                   	ret
    5607:	90                   	nop

0000000000005608 <_ZN4neko8SettingsUt0_C1Ev>:
    std::string engineName = "Neko Engine";
    u32 engineVersion = VK_MAKE_VERSION(1, 0, 0);
    u32 apiVersion = VK_API_VERSION_1_3;
  } general;

  struct {
    5608:	55                   	push   %rbp
    5609:	48 89 e5             	mov    %rsp,%rbp
    560c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5614:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    561a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    561e:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    5625:	90                   	nop
    5626:	5d                   	pop    %rbp
    5627:	c3                   	ret

0000000000005628 <_ZN4neko8SettingsUt1_C1Ev>:
    u32 screenWidth = 800;
    u32 screenHeight = 600;

  } graphics;

  struct {
    5628:	55                   	push   %rbp
    5629:	48 89 e5             	mov    %rsp,%rbp
    562c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5634:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
    563a:	90                   	nop
    563b:	5d                   	pop    %rbp
    563c:	c3                   	ret
    563d:	90                   	nop

000000000000563e <_ZN4neko8SettingsC1Ev>:
struct Settings {
    563e:	55                   	push   %rbp
    563f:	48 89 e5             	mov    %rsp,%rbp
    5642:	48 83 ec 10          	sub    $0x10,%rsp
    5646:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    564a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    564e:	48 89 c7             	mov    %rax,%rdi
    5651:	e8 a2 fe ff ff       	call   54f8 <_ZN4neko8SettingsUt_C1Ev>
    5656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    565a:	48 83 c0 50          	add    $0x50,%rax
    565e:	48 89 c7             	mov    %rax,%rdi
    5661:	e8 a2 ff ff ff       	call   5608 <_ZN4neko8SettingsUt0_C1Ev>
    5666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    566a:	48 83 c0 58          	add    $0x58,%rax
    566e:	48 89 c7             	mov    %rax,%rdi
    5671:	e8 b2 ff ff ff       	call   5628 <_ZN4neko8SettingsUt1_C1Ev>
    5676:	90                   	nop
    5677:	c9                   	leave
    5678:	c3                   	ret

0000000000005679 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
   *  @relates unique_ptr
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    5679:	55                   	push   %rbp
    567a:	48 89 e5             	mov    %rsp,%rbp
    567d:	41 54                	push   %r12
    567f:	53                   	push   %rbx
    5680:	48 83 ec 10          	sub    $0x10,%rsp
    5684:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5688:	bf 60 00 00 00       	mov    $0x60,%edi
    568d:	e8 2e dc ff ff       	call   32c0 <_Znwm@plt>
    5692:	48 89 c6             	mov    %rax,%rsi
    5695:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    569b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    569f:	b8 00 00 00 00       	mov    $0x0,%eax
    56a4:	ba 0c 00 00 00       	mov    $0xc,%edx
    56a9:	48 89 f7             	mov    %rsi,%rdi
    56ac:	48 89 d1             	mov    %rdx,%rcx
    56af:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    56b2:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    56b6:	e8 83 ff ff ff       	call   563e <_ZN4neko8SettingsC1Ev>
    56bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56bf:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    56c3:	48 89 c7             	mov    %rax,%rdi
    56c6:	e8 e1 14 00 00       	call   6bac <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    56cb:	eb 21                	jmp    56ee <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x75>
    56cd:	48 89 c3             	mov    %rax,%rbx
    56d0:	45 84 e4             	test   %r12b,%r12b
    56d3:	74 0e                	je     56e3 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x6a>
    56d5:	be 60 00 00 00       	mov    $0x60,%esi
    56da:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    56de:	e8 ed db ff ff       	call   32d0 <_ZdlPvm@plt>
    56e3:	48 89 d8             	mov    %rbx,%rax
    56e6:	48 89 c7             	mov    %rax,%rdi
    56e9:	e8 e2 dd ff ff       	call   34d0 <_Unwind_Resume@plt>
    56ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56f2:	48 83 c4 10          	add    $0x10,%rsp
    56f6:	5b                   	pop    %rbx
    56f7:	41 5c                	pop    %r12
    56f9:	5d                   	pop    %rbp
    56fa:	c3                   	ret
    56fb:	90                   	nop

00000000000056fc <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    56fc:	55                   	push   %rbp
    56fd:	48 89 e5             	mov    %rsp,%rbp
    5700:	48 83 ec 10          	sub    $0x10,%rsp
    5704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5708:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    570c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5710:	48 89 c7             	mov    %rax,%rdi
    5713:	e8 1e 15 00 00       	call   6c36 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>
    5718:	48 89 c2             	mov    %rax,%rdx
    571b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    571f:	48 89 d6             	mov    %rdx,%rsi
    5722:	48 89 c7             	mov    %rax,%rdi
    5725:	e8 a8 14 00 00       	call   6bd2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    572a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    572e:	48 89 c7             	mov    %rax,%rdi
    5731:	e8 38 15 00 00       	call   6c6e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    5736:	48 89 c7             	mov    %rax,%rdi
    5739:	e8 4a 15 00 00       	call   6c88 <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>
    573e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5742:	48 89 c7             	mov    %rax,%rdi
    5745:	e8 24 15 00 00       	call   6c6e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    574a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    574e:	c9                   	leave
    574f:	c3                   	ret

0000000000005750 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    5750:	55                   	push   %rbp
    5751:	48 89 e5             	mov    %rsp,%rbp
    5754:	48 83 ec 10          	sub    $0x10,%rsp
    5758:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    575c:	e8 54 e1 ff ff       	call   38b5 <_ZSt23__is_constant_evaluatedv>
    5761:	84 c0                	test   %al,%al
    5763:	74 18                	je     577d <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    5765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5769:	48 89 c7             	mov    %rax,%rdi
    576c:	e8 25 15 00 00       	call   6c96 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
    5771:	48 85 c0             	test   %rax,%rax
    5774:	75 07                	jne    577d <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    5776:	b8 01 00 00 00       	mov    $0x1,%eax
    577b:	eb 05                	jmp    5782 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x32>
    577d:	b8 00 00 00 00       	mov    $0x0,%eax
    5782:	84 c0                	test   %al,%al
	return *get();
    5784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5788:	48 89 c7             	mov    %rax,%rdi
    578b:	e8 06 15 00 00       	call   6c96 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
      }
    5790:	c9                   	leave
    5791:	c3                   	ret

0000000000005792 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5792:	55                   	push   %rbp
    5793:	48 89 e5             	mov    %rsp,%rbp
    5796:	41 54                	push   %r12
    5798:	53                   	push   %rbx
    5799:	48 83 ec 20          	sub    $0x20,%rsp
    579d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    57a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    57a5:	bf f8 00 00 00       	mov    $0xf8,%edi
    57aa:	e8 11 db ff ff       	call   32c0 <_Znwm@plt>
    57af:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    57b3:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    57b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    57bd:	48 89 c7             	mov    %rax,%rdi
    57c0:	e8 eb 14 00 00       	call   6cb0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    57c5:	48 89 c6             	mov    %rax,%rsi
    57c8:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    57cc:	e8 b7 e8 ff ff       	call   4088 <_ZN4neko10ThreadPoolC1ERKNS_8SettingsE>
    57d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57d5:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    57d9:	48 89 c7             	mov    %rax,%rdi
    57dc:	e8 03 15 00 00       	call   6ce4 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    57e1:	eb 21                	jmp    5804 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    57e3:	48 89 c3             	mov    %rax,%rbx
    57e6:	45 84 e4             	test   %r12b,%r12b
    57e9:	74 0e                	je     57f9 <_ZSt11make_uniqueIN4neko10ThreadPoolEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    57eb:	be f8 00 00 00       	mov    $0xf8,%esi
    57f0:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    57f4:	e8 d7 da ff ff       	call   32d0 <_ZdlPvm@plt>
    57f9:	48 89 d8             	mov    %rbx,%rax
    57fc:	48 89 c7             	mov    %rax,%rdi
    57ff:	e8 cc dc ff ff       	call   34d0 <_Unwind_Resume@plt>
    5804:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5808:	48 83 c4 20          	add    $0x20,%rsp
    580c:	5b                   	pop    %rbx
    580d:	41 5c                	pop    %r12
    580f:	5d                   	pop    %rbp
    5810:	c3                   	ret
    5811:	90                   	nop

0000000000005812 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    5812:	55                   	push   %rbp
    5813:	48 89 e5             	mov    %rsp,%rbp
    5816:	48 83 ec 10          	sub    $0x10,%rsp
    581a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    581e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    5822:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5826:	48 89 c7             	mov    %rax,%rdi
    5829:	e8 40 15 00 00       	call   6d6e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>
    582e:	48 89 c2             	mov    %rax,%rdx
    5831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5835:	48 89 d6             	mov    %rdx,%rsi
    5838:	48 89 c7             	mov    %rax,%rdi
    583b:	e8 ca 14 00 00       	call   6d0a <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    5840:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5844:	48 89 c7             	mov    %rax,%rdi
    5847:	e8 5a 15 00 00       	call   6da6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    584c:	48 89 c7             	mov    %rax,%rdi
    584f:	e8 6c 15 00 00       	call   6dc0 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5858:	48 89 c7             	mov    %rax,%rdi
    585b:	e8 46 15 00 00       	call   6da6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    5860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5864:	c9                   	leave
    5865:	c3                   	ret

0000000000005866 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    5866:	55                   	push   %rbp
    5867:	48 89 e5             	mov    %rsp,%rbp
    586a:	48 83 ec 10          	sub    $0x10,%rsp
    586e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    5872:	e8 3e e0 ff ff       	call   38b5 <_ZSt23__is_constant_evaluatedv>
    5877:	84 c0                	test   %al,%al
    5879:	74 18                	je     5893 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    587b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    587f:	48 89 c7             	mov    %rax,%rdi
    5882:	e8 47 15 00 00       	call   6dce <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
    5887:	48 85 c0             	test   %rax,%rax
    588a:	75 07                	jne    5893 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x2d>
    588c:	b8 01 00 00 00       	mov    $0x1,%eax
    5891:	eb 05                	jmp    5898 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEdeEv+0x32>
    5893:	b8 00 00 00 00       	mov    $0x0,%eax
    5898:	84 c0                	test   %al,%al
	return *get();
    589a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    589e:	48 89 c7             	mov    %rax,%rdi
    58a1:	e8 28 15 00 00       	call   6dce <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    58a6:	c9                   	leave
    58a7:	c3                   	ret

00000000000058a8 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    58a8:	55                   	push   %rbp
    58a9:	48 89 e5             	mov    %rsp,%rbp
    58ac:	41 54                	push   %r12
    58ae:	53                   	push   %rbx
    58af:	48 83 ec 20          	sub    $0x20,%rsp
    58b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    58b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    58bb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    58bf:	bf 70 00 00 00       	mov    $0x70,%edi
    58c4:	e8 f7 d9 ff ff       	call   32c0 <_Znwm@plt>
    58c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    58cd:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    58d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58d7:	48 89 c7             	mov    %rax,%rdi
    58da:	e8 09 15 00 00       	call   6de8 <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    58df:	48 89 c3             	mov    %rax,%rbx
    58e2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    58e6:	48 89 c7             	mov    %rax,%rdi
    58e9:	e8 c2 13 00 00       	call   6cb0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    58ee:	48 89 da             	mov    %rbx,%rdx
    58f1:	48 89 c6             	mov    %rax,%rsi
    58f4:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    58f8:	e8 13 e2 ff ff       	call   3b10 <_ZN4neko8RendererC1ERKNS_8SettingsERNS_10ThreadPoolE>
    58fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5901:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5905:	48 89 c7             	mov    %rax,%rdi
    5908:	e8 0f 15 00 00       	call   6e1c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    590d:	eb 21                	jmp    5930 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x88>
    590f:	48 89 c3             	mov    %rax,%rbx
    5912:	45 84 e4             	test   %r12b,%r12b
    5915:	74 0e                	je     5925 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsERNS0_10ThreadPoolEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x7d>
    5917:	be 70 00 00 00       	mov    $0x70,%esi
    591c:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    5920:	e8 ab d9 ff ff       	call   32d0 <_ZdlPvm@plt>
    5925:	48 89 d8             	mov    %rbx,%rax
    5928:	48 89 c7             	mov    %rax,%rdi
    592b:	e8 a0 db ff ff       	call   34d0 <_Unwind_Resume@plt>
    5930:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5934:	48 83 c4 20          	add    $0x20,%rsp
    5938:	5b                   	pop    %rbx
    5939:	41 5c                	pop    %r12
    593b:	5d                   	pop    %rbp
    593c:	c3                   	ret
    593d:	90                   	nop

000000000000593e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEaSEOS4_>:
      __uniq_ptr_impl& operator=(__uniq_ptr_impl&& __u) noexcept
    593e:	55                   	push   %rbp
    593f:	48 89 e5             	mov    %rsp,%rbp
    5942:	48 83 ec 10          	sub    $0x10,%rsp
    5946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    594a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	reset(__u.release());
    594e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5952:	48 89 c7             	mov    %rax,%rdi
    5955:	e8 4c 15 00 00       	call   6ea6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>
    595a:	48 89 c2             	mov    %rax,%rdx
    595d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5961:	48 89 d6             	mov    %rdx,%rsi
    5964:	48 89 c7             	mov    %rax,%rdi
    5967:	e8 d6 14 00 00       	call   6e42 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>
	_M_deleter() = std::forward<_Dp>(__u._M_deleter());
    596c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5970:	48 89 c7             	mov    %rax,%rdi
    5973:	e8 66 15 00 00       	call   6ede <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    5978:	48 89 c7             	mov    %rax,%rdi
    597b:	e8 78 15 00 00       	call   6ef8 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>
    5980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5984:	48 89 c7             	mov    %rax,%rdi
    5987:	e8 52 15 00 00       	call   6ede <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
	return *this;
    598c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5990:	c9                   	leave
    5991:	c3                   	ret

0000000000005992 <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    5992:	55                   	push   %rbp
    5993:	48 89 e5             	mov    %rsp,%rbp
    5996:	48 83 ec 10          	sub    $0x10,%rsp
    599a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    599e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59a2:	48 89 c7             	mov    %rax,%rdi
    59a5:	e8 24 14 00 00       	call   6dce <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>
      }
    59aa:	c9                   	leave
    59ab:	c3                   	ret

00000000000059ac <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    59ac:	55                   	push   %rbp
    59ad:	48 89 e5             	mov    %rsp,%rbp
    59b0:	48 83 ec 10          	sub    $0x10,%rsp
    59b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    59b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59bc:	48 89 c7             	mov    %rax,%rdi
    59bf:	e8 42 15 00 00       	call   6f06 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>
      }
    59c4:	c9                   	leave
    59c5:	c3                   	ret

00000000000059c6 <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_>:
	function(_Functor&& __f)
    59c6:	55                   	push   %rbp
    59c7:	48 89 e5             	mov    %rsp,%rbp
    59ca:	48 83 ec 10          	sub    $0x10,%rsp
    59ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Function_base()
    59d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59da:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59de:	0f 11 00             	movups %xmm0,(%rax)
    59e1:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    59e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59ea:	48 89 c7             	mov    %rax,%rdi
    59ed:	e8 14 f4 ff ff       	call   4e06 <_ZNSt14_Function_baseC1Ev>
    59f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59f6:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    59fd:	00 
	  if (_My_handler::_M_not_empty_function(__f))
    59fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a02:	48 89 c7             	mov    %rax,%rdi
    5a05:	e8 16 15 00 00       	call   6f20 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>
    5a0a:	84 c0                	test   %al,%al
    5a0c:	74 3c                	je     5a4a <_ZNSt8functionIFvvEEC1IZN4neko6Engine5startEvEUlvE_vEEOT_+0x84>
	      _My_handler::_M_init_functor(_M_functor,
    5a0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a12:	48 89 c7             	mov    %rax,%rdi
    5a15:	e8 15 15 00 00       	call   6f2f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    5a1a:	48 89 c2             	mov    %rax,%rdx
    5a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a21:	48 89 d6             	mov    %rdx,%rsi
    5a24:	48 89 c7             	mov    %rax,%rdi
    5a27:	e8 11 15 00 00       	call   6f3d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>
	      _M_invoker = &_My_handler::_M_invoke;
    5a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a30:	48 8d 15 37 15 00 00 	lea    0x1537(%rip),%rdx        # 6f6e <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>
    5a37:	48 89 50 18          	mov    %rdx,0x18(%rax)
	      _M_manager = &_My_handler::_M_manager;
    5a3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a3f:	48 8d 15 4b 15 00 00 	lea    0x154b(%rip),%rdx        # 6f91 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
    5a46:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
    5a4a:	90                   	nop
    5a4b:	c9                   	leave
    5a4c:	c3                   	ret

0000000000005a4d <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    5a4d:	55                   	push   %rbp
    5a4e:	48 89 e5             	mov    %rsp,%rbp
    5a51:	41 54                	push   %r12
    5a53:	53                   	push   %rbx
    5a54:	48 83 ec 10          	sub    $0x10,%rsp
    5a58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    5a5c:	bf 18 00 00 00       	mov    $0x18,%edi
    5a61:	e8 5a d8 ff ff       	call   32c0 <_Znwm@plt>
    5a66:	48 89 c6             	mov    %rax,%rsi
    5a69:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    5a6f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5a73:	48 89 f7             	mov    %rsi,%rdi
    5a76:	e8 d5 ec ff ff       	call   4750 <_ZN4neko6EngineC1Ev>
    5a7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a7f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    5a83:	48 89 c7             	mov    %rax,%rdi
    5a86:	e8 a7 15 00 00       	call   7032 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    5a8b:	eb 21                	jmp    5aae <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x61>
    5a8d:	48 89 c3             	mov    %rax,%rbx
    5a90:	45 84 e4             	test   %r12b,%r12b
    5a93:	74 0e                	je     5aa3 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x56>
    5a95:	be 18 00 00 00       	mov    $0x18,%esi
    5a9a:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5a9e:	e8 2d d8 ff ff       	call   32d0 <_ZdlPvm@plt>
    5aa3:	48 89 d8             	mov    %rbx,%rax
    5aa6:	48 89 c7             	mov    %rax,%rdi
    5aa9:	e8 22 da ff ff       	call   34d0 <_Unwind_Resume@plt>
    5aae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5ab2:	48 83 c4 10          	add    $0x10,%rsp
    5ab6:	5b                   	pop    %rbx
    5ab7:	41 5c                	pop    %r12
    5ab9:	5d                   	pop    %rbp
    5aba:	c3                   	ret
    5abb:	90                   	nop

0000000000005abc <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    5abc:	55                   	push   %rbp
    5abd:	48 89 e5             	mov    %rsp,%rbp
    5ac0:	53                   	push   %rbx
    5ac1:	48 83 ec 28          	sub    $0x28,%rsp
    5ac5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    5ac9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5acd:	48 89 c7             	mov    %rax,%rdi
    5ad0:	e8 83 15 00 00       	call   7058 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    5ad5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    5ad9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5add:	48 8b 00             	mov    (%rax),%rax
    5ae0:	48 85 c0             	test   %rax,%rax
    5ae3:	74 29                	je     5b0e <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    5ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ae9:	48 89 c7             	mov    %rax,%rdi
    5aec:	e8 81 15 00 00       	call   7072 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>
    5af1:	48 89 c3             	mov    %rax,%rbx
    5af4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5af8:	48 89 c7             	mov    %rax,%rdi
    5afb:	e8 8c 15 00 00       	call   708c <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>
    5b00:	48 8b 00             	mov    (%rax),%rax
    5b03:	48 89 c6             	mov    %rax,%rsi
    5b06:	48 89 df             	mov    %rbx,%rdi
    5b09:	e8 c8 15 00 00       	call   70d6 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>
	__ptr = pointer();
    5b0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b12:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    5b19:	90                   	nop
    5b1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b1e:	c9                   	leave
    5b1f:	c3                   	ret

0000000000005b20 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    5b20:	55                   	push   %rbp
    5b21:	48 89 e5             	mov    %rsp,%rbp
    5b24:	48 83 ec 10          	sub    $0x10,%rsp
    5b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    5b2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b30:	48 89 c7             	mov    %rax,%rdi
    5b33:	e8 d4 15 00 00       	call   710c <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>
      }
    5b38:	c9                   	leave
    5b39:	c3                   	ret

0000000000005b3a <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    5b3a:	55                   	push   %rbp
    5b3b:	48 89 e5             	mov    %rsp,%rbp
    5b3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    5b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b4a:	0f b6 10             	movzbl (%rax),%edx
    5b4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b51:	0f b6 00             	movzbl (%rax),%eax
    5b54:	38 c2                	cmp    %al,%dl
    5b56:	0f 94 c0             	sete   %al
    5b59:	5d                   	pop    %rbp
    5b5a:	c3                   	ret
    5b5b:	90                   	nop

0000000000005b5c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    5b5c:	55                   	push   %rbp
    5b5d:	48 89 e5             	mov    %rsp,%rbp
    5b60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5b68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b70:	48 89 10             	mov    %rdx,(%rax)
    5b73:	90                   	nop
    5b74:	5d                   	pop    %rbp
    5b75:	c3                   	ret

0000000000005b76 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    5b76:	55                   	push   %rbp
    5b77:	48 89 e5             	mov    %rsp,%rbp
    5b7a:	48 83 ec 10          	sub    $0x10,%rsp
    5b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b86:	48 8b 00             	mov    (%rax),%rax
    5b89:	48 85 c0             	test   %rax,%rax
    5b8c:	74 0f                	je     5b9d <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    5b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b92:	48 8b 00             	mov    (%rax),%rax
    5b95:	48 89 c7             	mov    %rax,%rdi
    5b98:	e8 03 d8 ff ff       	call   33a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    5b9d:	90                   	nop
    5b9e:	c9                   	leave
    5b9f:	c3                   	ret

0000000000005ba0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    5ba0:	55                   	push   %rbp
    5ba1:	48 89 e5             	mov    %rsp,%rbp
    5ba4:	48 83 ec 40          	sub    $0x40,%rsp
    5ba8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5bac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5bb0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    5bb4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5bb8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5bbc:	48 89 d6             	mov    %rdx,%rsi
    5bbf:	48 89 c7             	mov    %rax,%rdi
    5bc2:	e8 5f 15 00 00       	call   7126 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5bc7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    5bcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5bcf:	48 83 f8 0f          	cmp    $0xf,%rax
    5bd3:	76 3f                	jbe    5c14 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    5bd5:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    5bd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bdd:	ba 00 00 00 00       	mov    $0x0,%edx
    5be2:	48 89 ce             	mov    %rcx,%rsi
    5be5:	48 89 c7             	mov    %rax,%rdi
    5be8:	e8 03 d9 ff ff       	call   34f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    5bed:	48 89 c2             	mov    %rax,%rdx
    5bf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5bf4:	48 89 d6             	mov    %rdx,%rsi
    5bf7:	48 89 c7             	mov    %rax,%rdi
    5bfa:	e8 41 d6 ff ff       	call   3240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    5bff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c07:	48 89 d6             	mov    %rdx,%rsi
    5c0a:	48 89 c7             	mov    %rax,%rdi
    5c0d:	e8 0e d9 ff ff       	call   3520 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    5c12:	eb 15                	jmp    5c29 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    5c14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c18:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    5c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c20:	48 89 c7             	mov    %rax,%rdi
    5c23:	e8 f8 d5 ff ff       	call   3220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    5c28:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    5c29:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c2d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5c31:	48 89 d6             	mov    %rdx,%rsi
    5c34:	48 89 c7             	mov    %rax,%rdi
    5c37:	e8 20 ff ff ff       	call   5b5c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    5c3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c40:	48 89 c7             	mov    %rax,%rdi
    5c43:	e8 08 d7 ff ff       	call   3350 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    5c48:	48 89 c1             	mov    %rax,%rcx
    5c4b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5c4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5c53:	48 89 c6             	mov    %rax,%rsi
    5c56:	48 89 cf             	mov    %rcx,%rdi
    5c59:	e8 02 d7 ff ff       	call   3360 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    5c5e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5c65:	00 

	_M_set_length(__dnew);
    5c66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c6e:	48 89 d6             	mov    %rdx,%rsi
    5c71:	48 89 c7             	mov    %rax,%rdi
    5c74:	e8 07 d5 ff ff       	call   3180 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    5c79:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5c7d:	48 89 c7             	mov    %rax,%rdi
    5c80:	e8 f1 fe ff ff       	call   5b76 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    5c85:	c9                   	leave
    5c86:	c3                   	ret
    5c87:	90                   	nop

0000000000005c88 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    5c88:	55                   	push   %rbp
    5c89:	48 89 e5             	mov    %rsp,%rbp
    5c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    5c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c94:	48 8b 00             	mov    (%rax),%rax
    5c97:	5d                   	pop    %rbp
    5c98:	c3                   	ret

0000000000005c99 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    5c99:	55                   	push   %rbp
    5c9a:	48 89 e5             	mov    %rsp,%rbp
    5c9d:	53                   	push   %rbx
    5c9e:	48 83 ec 38          	sub    $0x38,%rsp
    5ca2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    5ca6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    5caa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5cae:	48 8b 00             	mov    (%rax),%rax
    5cb1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    5cb5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5cb9:	48 89 c7             	mov    %rax,%rdi
    5cbc:	e8 71 dc ff ff       	call   3932 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    5cc1:	48 89 c3             	mov    %rax,%rbx
    5cc4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    5cc8:	48 8b 00             	mov    (%rax),%rax
    5ccb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5ccf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5cd3:	48 89 c7             	mov    %rax,%rdi
    5cd6:	e8 57 dc ff ff       	call   3932 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    5cdb:	48 29 c3             	sub    %rax,%rbx
    5cde:	48 89 da             	mov    %rbx,%rdx
    5ce1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    5ce5:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    5ce9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5ced:	48 89 d6             	mov    %rdx,%rsi
    5cf0:	48 89 c7             	mov    %rax,%rdi
    5cf3:	e8 1c dc ff ff       	call   3914 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    5cf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    5cfc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d00:	c9                   	leave
    5d01:	c3                   	ret

0000000000005d02 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    5d02:	55                   	push   %rbp
    5d03:	48 89 e5             	mov    %rsp,%rbp
    5d06:	48 83 ec 20          	sub    $0x20,%rsp
    5d0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    5d0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d12:	48 89 c7             	mov    %rax,%rdi
    5d15:	e8 18 dc ff ff       	call   3932 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    5d1a:	48 89 c1             	mov    %rax,%rcx
    5d1d:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    5d24:	9b c4 20 
    5d27:	48 89 c8             	mov    %rcx,%rax
    5d2a:	48 f7 ea             	imul   %rdx
    5d2d:	48 89 d0             	mov    %rdx,%rax
    5d30:	48 c1 f8 07          	sar    $0x7,%rax
    5d34:	48 c1 f9 3f          	sar    $0x3f,%rcx
    5d38:	48 89 ca             	mov    %rcx,%rdx
    5d3b:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    5d3e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    5d42:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    5d46:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    5d4a:	48 89 d6             	mov    %rdx,%rsi
    5d4d:	48 89 c7             	mov    %rax,%rdi
    5d50:	e8 03 14 00 00       	call   7158 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    5d55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    5d59:	c9                   	leave
    5d5a:	c3                   	ret

0000000000005d5b <_ZSt4moveIRNSt6thread2idEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    5d5b:	55                   	push   %rbp
    5d5c:	48 89 e5             	mov    %rsp,%rbp
    5d5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5d63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d67:	5d                   	pop    %rbp
    5d68:	c3                   	ret
    5d69:	90                   	nop

0000000000005d6a <_ZNSaISt6threadEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5d6a:	55                   	push   %rbp
    5d6b:	48 89 e5             	mov    %rsp,%rbp
    5d6e:	48 83 ec 10          	sub    $0x10,%rsp
    5d72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d7a:	48 89 c7             	mov    %rax,%rdi
    5d7d:	e8 f4 13 00 00       	call   7176 <_ZNSt15__new_allocatorISt6threadEC1Ev>
    5d82:	90                   	nop
    5d83:	c9                   	leave
    5d84:	c3                   	ret
    5d85:	90                   	nop

0000000000005d86 <_ZNSt12_Vector_baseISt6threadSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5d86:	55                   	push   %rbp
    5d87:	48 89 e5             	mov    %rsp,%rbp
    5d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d92:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d9d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5da4:	00 
    5da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5db0:	00 
	{ }
    5db1:	90                   	nop
    5db2:	5d                   	pop    %rbp
    5db3:	c3                   	ret

0000000000005db4 <_ZNSt15__new_allocatorISt6threadED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5db4:	55                   	push   %rbp
    5db5:	48 89 e5             	mov    %rsp,%rbp
    5db8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dbc:	90                   	nop
    5dbd:	5d                   	pop    %rbp
    5dbe:	c3                   	ret
    5dbf:	90                   	nop

0000000000005dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5dc0:	55                   	push   %rbp
    5dc1:	48 89 e5             	mov    %rsp,%rbp
    5dc4:	48 83 ec 20          	sub    $0x20,%rsp
    5dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5dd0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5dd4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5dd9:	74 17                	je     5df2 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ddf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5de3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5de7:	48 89 ce             	mov    %rcx,%rsi
    5dea:	48 89 c7             	mov    %rax,%rdi
    5ded:	e8 8f 13 00 00       	call   7181 <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>
      }
    5df2:	90                   	nop
    5df3:	c9                   	leave
    5df4:	c3                   	ret
    5df5:	90                   	nop

0000000000005df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5df6:	55                   	push   %rbp
    5df7:	48 89 e5             	mov    %rsp,%rbp
    5dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e02:	5d                   	pop    %rbp
    5e03:	c3                   	ret

0000000000005e04 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5e04:	55                   	push   %rbp
    5e05:	48 89 e5             	mov    %rsp,%rbp
    5e08:	48 83 ec 20          	sub    $0x20,%rsp
    5e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e20:	48 89 d6             	mov    %rdx,%rsi
    5e23:	48 89 c7             	mov    %rax,%rdi
    5e26:	e8 84 13 00 00       	call   71af <_ZSt8_DestroyIPSt6threadEvT_S2_>
    }
    5e2b:	90                   	nop
    5e2c:	c9                   	leave
    5e2d:	c3                   	ret

0000000000005e2e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>:
      struct _Deque_impl
    5e2e:	55                   	push   %rbp
    5e2f:	48 89 e5             	mov    %rsp,%rbp
    5e32:	48 83 ec 10          	sub    $0x10,%rsp
    5e36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e3e:	48 89 c7             	mov    %rax,%rdi
    5e41:	e8 b8 13 00 00       	call   71fe <_ZNSaISt8functionIFvvEEED1Ev>
    5e46:	90                   	nop
    5e47:	c9                   	leave
    5e48:	c3                   	ret
    5e49:	90                   	nop

0000000000005e4a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev>:
      _Deque_base()
    5e4a:	55                   	push   %rbp
    5e4b:	48 89 e5             	mov    %rsp,%rbp
    5e4e:	53                   	push   %rbx
    5e4f:	48 83 ec 18          	sub    $0x18,%rsp
    5e53:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      : _M_impl()
    5e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e5b:	48 89 c7             	mov    %rax,%rdi
    5e5e:	e8 73 13 00 00       	call   71d6 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>
      { _M_initialize_map(0); }
    5e63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e67:	be 00 00 00 00       	mov    $0x0,%esi
    5e6c:	48 89 c7             	mov    %rax,%rdi
    5e6f:	e8 a6 13 00 00       	call   721a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>
    5e74:	eb 1a                	jmp    5e90 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EEC1Ev+0x46>
    5e76:	48 89 c3             	mov    %rax,%rbx
    5e79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e7d:	48 89 c7             	mov    %rax,%rdi
    5e80:	e8 a9 ff ff ff       	call   5e2e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5e85:	48 89 d8             	mov    %rbx,%rax
    5e88:	48 89 c7             	mov    %rax,%rdi
    5e8b:	e8 40 d6 ff ff       	call   34d0 <_Unwind_Resume@plt>
    5e90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e94:	c9                   	leave
    5e95:	c3                   	ret

0000000000005e96 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev>:
    _Deque_base<_Tp, _Alloc>::
    5e96:	55                   	push   %rbp
    5e97:	48 89 e5             	mov    %rsp,%rbp
    5e9a:	48 83 ec 10          	sub    $0x10,%rsp
    5e9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      if (this->_M_impl._M_map)
    5ea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ea6:	48 8b 00             	mov    (%rax),%rax
    5ea9:	48 85 c0             	test   %rax,%rax
    5eac:	74 41                	je     5eef <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EED1Ev+0x59>
			   this->_M_impl._M_finish._M_node + 1);
    5eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb2:	48 8b 40 48          	mov    0x48(%rax),%rax
	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
    5eb6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebe:	48 8b 48 28          	mov    0x28(%rax),%rcx
    5ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec6:	48 89 ce             	mov    %rcx,%rsi
    5ec9:	48 89 c7             	mov    %rax,%rdi
    5ecc:	e8 f1 14 00 00       	call   73c2 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    5ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edd:	48 8b 08             	mov    (%rax),%rcx
    5ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee4:	48 89 ce             	mov    %rcx,%rsi
    5ee7:	48 89 c7             	mov    %rax,%rdi
    5eea:	e8 1b 15 00 00       	call   740a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
    }
    5eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ef3:	48 89 c7             	mov    %rax,%rdi
    5ef6:	e8 33 ff ff ff       	call   5e2e <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implD1Ev>
    5efb:	90                   	nop
    5efc:	c9                   	leave
    5efd:	c3                   	ret

0000000000005efe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>:
       *  Returns a read/write iterator that points to the first element in the
       *  %deque.  Iteration is done in ordinary element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      begin() _GLIBCXX_NOEXCEPT
    5efe:	55                   	push   %rbp
    5eff:	48 89 e5             	mov    %rsp,%rbp
    5f02:	48 83 ec 10          	sub    $0x10,%rsp
    5f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_start; }
    5f0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f12:	48 8d 50 10          	lea    0x10(%rax),%rdx
    5f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f1a:	48 89 d6             	mov    %rdx,%rsi
    5f1d:	48 89 c7             	mov    %rax,%rdi
    5f20:	e8 31 15 00 00       	call   7456 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f29:	c9                   	leave
    5f2a:	c3                   	ret
    5f2b:	90                   	nop

0000000000005f2c <_ZNSt5dequeISt8functionIFvvEESaIS2_EE3endEv>:
       *  element in the %deque.  Iteration is done in ordinary
       *  element order.
       */
      _GLIBCXX_NODISCARD
      iterator
      end() _GLIBCXX_NOEXCEPT
    5f2c:	55                   	push   %rbp
    5f2d:	48 89 e5             	mov    %rsp,%rbp
    5f30:	48 83 ec 10          	sub    $0x10,%rsp
    5f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return this->_M_impl._M_finish; }
    5f3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f40:	48 8d 50 30          	lea    0x30(%rax),%rdx
    5f44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f48:	48 89 d6             	mov    %rdx,%rsi
    5f4b:	48 89 c7             	mov    %rax,%rdi
    5f4e:	e8 03 15 00 00       	call   7456 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5f53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f57:	c9                   	leave
    5f58:	c3                   	ret
    5f59:	90                   	nop

0000000000005f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5f5a:	55                   	push   %rbp
    5f5b:	48 89 e5             	mov    %rsp,%rbp
    5f5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5f62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f66:	5d                   	pop    %rbp
    5f67:	c3                   	ret

0000000000005f68 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE15_M_destroy_dataESt15_Deque_iteratorIS2_RS2_PS2_ES8_RKS3_>:
	void
	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
	{ _M_destroy_data_aux(__first, __last); }

      void
      _M_destroy_data(iterator __first, iterator __last,
    5f68:	55                   	push   %rbp
    5f69:	48 89 e5             	mov    %rsp,%rbp
    5f6c:	48 83 ec 60          	sub    $0x60,%rsp
    5f70:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5f74:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5f78:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5f7c:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
		      const std::allocator<_Tp>&)
      {
	if (!__has_trivial_destructor(value_type))
	  _M_destroy_data_aux(__first, __last);
    5f80:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    5f84:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5f88:	48 89 d6             	mov    %rdx,%rsi
    5f8b:	48 89 c7             	mov    %rax,%rdi
    5f8e:	e8 c3 14 00 00       	call   7456 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5f93:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    5f97:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5f9b:	48 89 d6             	mov    %rdx,%rsi
    5f9e:	48 89 c7             	mov    %rax,%rdi
    5fa1:	e8 b0 14 00 00       	call   7456 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>
    5fa6:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5faa:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    5fae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5fb2:	48 89 ce             	mov    %rcx,%rsi
    5fb5:	48 89 c7             	mov    %rax,%rdi
    5fb8:	e8 e7 14 00 00       	call   74a4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>
      }
    5fbd:	90                   	nop
    5fbe:	c9                   	leave
    5fbf:	c3                   	ret

0000000000005fc0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    5fc0:	55                   	push   %rbp
    5fc1:	48 89 e5             	mov    %rsp,%rbp
    5fc4:	48 83 ec 10          	sub    $0x10,%rsp
    5fc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fd0:	48 89 c7             	mov    %rax,%rdi
    5fd3:	e8 dc 15 00 00       	call   75b4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>
    5fd8:	90                   	nop
    5fd9:	c9                   	leave
    5fda:	c3                   	ret
    5fdb:	90                   	nop

0000000000005fdc <_ZNSt20_Rb_tree_key_compareISt4lessINSt6thread2idEEEC1Ev>:
      _Rb_tree_key_compare()
    5fdc:	55                   	push   %rbp
    5fdd:	48 89 e5             	mov    %rsp,%rbp
    5fe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    5fe4:	90                   	nop
    5fe5:	5d                   	pop    %rbp
    5fe6:	c3                   	ret
    5fe7:	90                   	nop

0000000000005fe8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEED1Ev>:
    5fe8:	55                   	push   %rbp
    5fe9:	48 89 e5             	mov    %rsp,%rbp
    5fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ff0:	90                   	nop
    5ff1:	5d                   	pop    %rbp
    5ff2:	c3                   	ret
    5ff3:	90                   	nop

0000000000005ff4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5ff4:	55                   	push   %rbp
    5ff5:	48 89 e5             	mov    %rsp,%rbp
    5ff8:	48 83 ec 20          	sub    $0x20,%rsp
    5ffc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6000:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    6004:	eb 49                	jmp    604f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    6006:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    600a:	48 89 c7             	mov    %rax,%rdi
    600d:	e8 ad 15 00 00       	call   75bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    6012:	48 89 c2             	mov    %rax,%rdx
    6015:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6019:	48 89 d6             	mov    %rdx,%rsi
    601c:	48 89 c7             	mov    %rax,%rdi
    601f:	e8 d0 ff ff ff       	call   5ff4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E>
	  _Link_type __y = _S_left(__x);
    6024:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6028:	48 89 c7             	mov    %rax,%rdi
    602b:	e8 a1 15 00 00       	call   75d1 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    6030:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    6034:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6038:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    603c:	48 89 d6             	mov    %rdx,%rsi
    603f:	48 89 c7             	mov    %rax,%rdi
    6042:	e8 9d 15 00 00       	call   75e4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	  __x = __y;
    6047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    604b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    604f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6054:	75 b0                	jne    6006 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_eraseEPSt13_Rb_tree_nodeIS4_E+0x12>
	}
    }
    6056:	90                   	nop
    6057:	90                   	nop
    6058:	c9                   	leave
    6059:	c3                   	ret

000000000000605a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    605a:	55                   	push   %rbp
    605b:	48 89 e5             	mov    %rsp,%rbp
    605e:	48 83 ec 10          	sub    $0x10,%rsp
    6062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    6066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    606a:	48 89 c7             	mov    %rax,%rdi
    606d:	e8 ac 15 00 00       	call   761e <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>
    6072:	c9                   	leave
    6073:	c3                   	ret

0000000000006074 <_ZSt11__addressofISt5mutexEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6074:	55                   	push   %rbp
    6075:	48 89 e5             	mov    %rsp,%rbp
    6078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    607c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6080:	5d                   	pop    %rbp
    6081:	c3                   	ret

0000000000006082 <_ZNSt11unique_lockISt5mutexE4lockEv>:

	return *this;
      }

      void
      lock()
    6082:	55                   	push   %rbp
    6083:	48 89 e5             	mov    %rsp,%rbp
    6086:	48 83 ec 10          	sub    $0x10,%rsp
    608a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_device)
    608e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6092:	48 8b 00             	mov    (%rax),%rax
    6095:	48 85 c0             	test   %rax,%rax
    6098:	75 0a                	jne    60a4 <_ZNSt11unique_lockISt5mutexE4lockEv+0x22>
	  __throw_system_error(int(errc::operation_not_permitted));
    609a:	bf 01 00 00 00       	mov    $0x1,%edi
    609f:	e8 cc d0 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_owns)
    60a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60a8:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    60ac:	84 c0                	test   %al,%al
    60ae:	74 0a                	je     60ba <_ZNSt11unique_lockISt5mutexE4lockEv+0x38>
	  __throw_system_error(int(errc::resource_deadlock_would_occur));
    60b0:	bf 23 00 00 00       	mov    $0x23,%edi
    60b5:	e8 b6 d0 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else
	  {
	    _M_device->lock();
    60ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60be:	48 8b 00             	mov    (%rax),%rax
    60c1:	48 89 c7             	mov    %rax,%rdi
    60c4:	e8 bb db ff ff       	call   3c84 <_ZNSt5mutex4lockEv>
	    _M_owns = true;
    60c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60cd:	c6 40 08 01          	movb   $0x1,0x8(%rax)
	  }
      }
    60d1:	90                   	nop
    60d2:	c9                   	leave
    60d3:	c3                   	ret

00000000000060d4 <_ZNSt11unique_lockISt5mutexE6unlockEv>:
	      return _M_owns;
	    }
	 }

      void
      unlock()
    60d4:	55                   	push   %rbp
    60d5:	48 89 e5             	mov    %rsp,%rbp
    60d8:	48 83 ec 10          	sub    $0x10,%rsp
    60dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (!_M_owns)
    60e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e4:	0f b6 40 08          	movzbl 0x8(%rax),%eax
    60e8:	83 f0 01             	xor    $0x1,%eax
    60eb:	84 c0                	test   %al,%al
    60ed:	74 0a                	je     60f9 <_ZNSt11unique_lockISt5mutexE6unlockEv+0x25>
	  __throw_system_error(int(errc::operation_not_permitted));
    60ef:	bf 01 00 00 00       	mov    $0x1,%edi
    60f4:	e8 77 d0 ff ff       	call   3170 <_ZSt20__throw_system_errori@plt>
	else if (_M_device)
    60f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60fd:	48 8b 00             	mov    (%rax),%rax
    6100:	48 85 c0             	test   %rax,%rax
    6103:	74 17                	je     611c <_ZNSt11unique_lockISt5mutexE6unlockEv+0x48>
	  {
	    _M_device->unlock();
    6105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6109:	48 8b 00             	mov    (%rax),%rax
    610c:	48 89 c7             	mov    %rax,%rdi
    610f:	e8 9e db ff ff       	call   3cb2 <_ZNSt5mutex6unlockEv>
	    _M_owns = false;
    6114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6118:	c6 40 08 00          	movb   $0x0,0x8(%rax)
	  }
      }
    611c:	90                   	nop
    611d:	c9                   	leave
    611e:	c3                   	ret
    611f:	90                   	nop

0000000000006120 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_>:
      push_back(const value_type& __x)
    6120:	55                   	push   %rbp
    6121:	48 89 e5             	mov    %rsp,%rbp
    6124:	48 83 ec 10          	sub    $0x10,%rsp
    6128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    612c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish._M_cur
    6130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6134:	48 8b 50 30          	mov    0x30(%rax),%rdx
	    != this->_M_impl._M_finish._M_last - 1)
    6138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    613c:	48 8b 40 40          	mov    0x40(%rax),%rax
    6140:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_finish._M_cur
    6144:	48 39 c2             	cmp    %rax,%rdx
    6147:	74 31                	je     617a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x5a>
	    _Alloc_traits::construct(this->_M_impl,
    6149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    614d:	48 8b 48 30          	mov    0x30(%rax),%rcx
    6151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6155:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6159:	48 89 ce             	mov    %rcx,%rsi
    615c:	48 89 c7             	mov    %rax,%rdi
    615f:	e8 e6 14 00 00       	call   764a <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    ++this->_M_impl._M_finish._M_cur;
    6164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6168:	48 8b 40 30          	mov    0x30(%rax),%rax
    616c:	48 8d 50 20          	lea    0x20(%rax),%rdx
    6170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6174:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    6178:	eb 13                	jmp    618d <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9push_backERKS2_+0x6d>
	  _M_push_back_aux(__x);
    617a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    617e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6182:	48 89 d6             	mov    %rdx,%rsi
    6185:	48 89 c7             	mov    %rax,%rdi
    6188:	e8 f7 14 00 00       	call   7684 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>
      }
    618d:	90                   	nop
    618e:	c9                   	leave
    618f:	c3                   	ret

0000000000006190 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    6190:	55                   	push   %rbp
    6191:	48 89 e5             	mov    %rsp,%rbp
    6194:	48 83 ec 10          	sub    $0x10,%rsp
    6198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish == this->_M_impl._M_start; }
    619c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a0:	48 8d 50 10          	lea    0x10(%rax),%rdx
    61a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a8:	48 83 c0 30          	add    $0x30,%rax
    61ac:	48 89 d6             	mov    %rdx,%rsi
    61af:	48 89 c7             	mov    %rax,%rdi
    61b2:	e8 d9 15 00 00       	call   7790 <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    61b7:	c9                   	leave
    61b8:	c3                   	ret
    61b9:	90                   	nop

00000000000061ba <_ZN9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    61ba:	55                   	push   %rbp
    61bb:	48 89 e5             	mov    %rsp,%rbp
    61be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    61c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    61ca:	48 8b 10             	mov    (%rax),%rdx
    61cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61d1:	48 89 10             	mov    %rdx,(%rax)
    61d4:	90                   	nop
    61d5:	5d                   	pop    %rbp
    61d6:	c3                   	ret
    61d7:	90                   	nop

00000000000061d8 <_ZNK9__gnu_cxx17__normal_iteratorIPSt6threadSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    61d8:	55                   	push   %rbp
    61d9:	48 89 e5             	mov    %rsp,%rbp
    61dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    61e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e4:	5d                   	pop    %rbp
    61e5:	c3                   	ret

00000000000061e6 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_>:

      // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
      // _M_assign_aux.
      _GLIBCXX20_CONSTEXPR
      void
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    61e6:	55                   	push   %rbp
    61e7:	48 89 e5             	mov    %rsp,%rbp
    61ea:	48 83 ec 20          	sub    $0x20,%rsp
    61ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      {
	if (size_type __n = this->_M_impl._M_finish - __pos)
    61f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61fa:	48 8b 40 08          	mov    0x8(%rax),%rax
    61fe:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    6202:	48 c1 f8 03          	sar    $0x3,%rax
    6206:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    620a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    620f:	74 32                	je     6243 <_ZNSt6vectorISt6threadSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
	  {
	    std::_Destroy(__pos, this->_M_impl._M_finish,
			  _M_get_Tp_allocator());
    6211:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6215:	48 89 c7             	mov    %rax,%rdi
    6218:	e8 d9 fb ff ff       	call   5df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    621d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    6220:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6224:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6228:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    622c:	48 89 ce             	mov    %rcx,%rsi
    622f:	48 89 c7             	mov    %rax,%rdi
    6232:	e8 cd fb ff ff       	call   5e04 <_ZSt8_DestroyIPSt6threadS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    6237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    623b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    623f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	    _GLIBCXX_ASAN_ANNOTATE_SHRINK(__n);
	  }
      }
    6243:	90                   	nop
    6244:	c9                   	leave
    6245:	c3                   	ret

0000000000006246 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    6246:	55                   	push   %rbp
    6247:	48 89 e5             	mov    %rsp,%rbp
    624a:	53                   	push   %rbx
    624b:	48 83 ec 38          	sub    $0x38,%rsp
    624f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6253:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    6257:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    625c:	0f 84 e7 01 00 00    	je     6449 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    6262:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6266:	48 89 c7             	mov    %rax,%rdi
    6269:	e8 d4 ea ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    626e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    6272:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6276:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    627a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    627e:	48 8b 40 08          	mov    0x8(%rax),%rax
    6282:	48 29 c2             	sub    %rax,%rdx
    6285:	48 89 d0             	mov    %rdx,%rax
    6288:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    628c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    6290:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6294:	48 89 c7             	mov    %rax,%rdi
    6297:	e8 16 15 00 00       	call   77b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    629c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    62a0:	72 16                	jb     62b8 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x72>
    62a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62a6:	48 89 c7             	mov    %rax,%rdi
    62a9:	e8 04 15 00 00       	call   77b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    62ae:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    62b2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    62b6:	73 07                	jae    62bf <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x79>
    62b8:	b8 01 00 00 00       	mov    $0x1,%eax
    62bd:	eb 05                	jmp    62c4 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x7e>
    62bf:	b8 00 00 00 00       	mov    $0x0,%eax
    62c4:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    62c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    62ca:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    62ce:	72 33                	jb     6303 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    62d0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62d4:	48 89 c7             	mov    %rax,%rdi
    62d7:	e8 1a fb ff ff       	call   5df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    62dc:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    62df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    62e3:	48 8b 40 08          	mov    0x8(%rax),%rax
    62e7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    62eb:	48 89 ce             	mov    %rcx,%rsi
    62ee:	48 89 c7             	mov    %rax,%rdi
    62f1:	e8 de 14 00 00       	call   77d4 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    62f6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    62fa:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    62fe:	e9 46 01 00 00       	jmp    6449 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    6303:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    6307:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    630b:	48 8d 15 cf c3 00 00 	lea    0xc3cf(%rip),%rdx        # 126e1 <_ZN6__pstl9execution2v1L5unseqE+0x76>
    6312:	48 89 ce             	mov    %rcx,%rsi
    6315:	48 89 c7             	mov    %rax,%rdi
    6318:	e8 e1 14 00 00       	call   77fe <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>
    631d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    6321:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6325:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6329:	48 89 d6             	mov    %rdx,%rsi
    632c:	48 89 c7             	mov    %rax,%rdi
    632f:	e8 92 15 00 00       	call   78c6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>
    6334:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    6338:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    633c:	48 89 c7             	mov    %rax,%rdi
    633f:	e8 b2 fa ff ff       	call   5df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6344:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    6347:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    634b:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    6352:	00 
    6353:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6357:	48 01 c1             	add    %rax,%rcx
    635a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    635e:	48 89 c6             	mov    %rax,%rsi
    6361:	48 89 cf             	mov    %rcx,%rdi
    6364:	e8 6b 14 00 00       	call   77d4 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    6369:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    636d:	48 89 c7             	mov    %rax,%rdi
    6370:	e8 81 fa ff ff       	call   5df6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    6375:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    6378:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    637c:	48 8b 70 08          	mov    0x8(%rax),%rsi
    6380:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6384:	48 8b 00             	mov    (%rax),%rax
    6387:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    638b:	48 89 c7             	mov    %rax,%rdi
    638e:	e8 66 15 00 00       	call   78f9 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    6393:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    6397:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    639b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    639f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    63a3:	48 8b 12             	mov    (%rdx),%rdx
    63a6:	48 29 d1             	sub    %rdx,%rcx
    63a9:	48 c1 f9 03          	sar    $0x3,%rcx
    63ad:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    63b0:	48 89 d6             	mov    %rdx,%rsi
    63b3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    63b7:	48 8b 0a             	mov    (%rdx),%rcx
    63ba:	48 89 f2             	mov    %rsi,%rdx
    63bd:	48 89 ce             	mov    %rcx,%rsi
    63c0:	48 89 c7             	mov    %rax,%rdi
    63c3:	e8 f8 f9 ff ff       	call   5dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    63c8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63cc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    63d0:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    63d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63d7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    63db:	48 01 d0             	add    %rdx,%rax
    63de:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    63e5:	00 
    63e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    63ea:	48 01 c2             	add    %rax,%rdx
    63ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    63f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    63f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63f9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6400:	00 
    6401:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6405:	48 01 c2             	add    %rax,%rdx
    6408:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    640c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    6410:	eb 37                	jmp    6449 <_ZNSt6vectorISt6threadSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    6412:	48 89 c7             	mov    %rax,%rdi
    6415:	e8 b6 cc ff ff       	call   30d0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    641a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    641e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6422:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6426:	48 89 ce             	mov    %rcx,%rsi
    6429:	48 89 c7             	mov    %rax,%rdi
    642c:	e8 8f f9 ff ff       	call   5dc0 <_ZNSt12_Vector_baseISt6threadSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    6431:	e8 da cf ff ff       	call   3410 <__cxa_rethrow@plt>
		  __catch(...)
    6436:	48 89 c3             	mov    %rax,%rbx
    6439:	e8 42 d0 ff ff       	call   3480 <__cxa_end_catch@plt>
    643e:	48 89 d8             	mov    %rbx,%rax
    6441:	48 89 c7             	mov    %rax,%rdi
    6444:	e8 87 d0 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    6449:	90                   	nop
    644a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    644e:	c9                   	leave
    644f:	c3                   	ret

0000000000006450 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6450:	55                   	push   %rbp
    6451:	48 89 e5             	mov    %rsp,%rbp
    6454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645c:	5d                   	pop    %rbp
    645d:	c3                   	ret

000000000000645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    645e:	55                   	push   %rbp
    645f:	48 89 e5             	mov    %rsp,%rbp
    6462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    646a:	5d                   	pop    %rbp
    646b:	c3                   	ret

000000000000646c <_ZNSt6thread6_StateC1Ev>:
    struct _State
    646c:	55                   	push   %rbp
    646d:	48 89 e5             	mov    %rsp,%rbp
    6470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6474:	48 8d 15 95 a8 01 00 	lea    0x1a895(%rip),%rdx        # 20d10 <_ZTVNSt6thread6_StateE@GLIBCXX_3.4.22+0x10>
    647b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647f:	48 89 10             	mov    %rdx,(%rax)
    6482:	90                   	nop
    6483:	5d                   	pop    %rbp
    6484:	c3                   	ret
    6485:	90                   	nop

0000000000006486 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEC1IJRS6_S5_EEEDpOT_>:
	  _State_impl(_Args&&... __args)
    6486:	55                   	push   %rbp
    6487:	48 89 e5             	mov    %rsp,%rbp
    648a:	41 54                	push   %r12
    648c:	53                   	push   %rbx
    648d:	48 83 ec 20          	sub    $0x20,%rsp
    6491:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6495:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6499:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  : _M_func{{std::forward<_Args>(__args)...}}
    649d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64a1:	48 89 c7             	mov    %rax,%rdi
    64a4:	e8 c3 ff ff ff       	call   646c <_ZNSt6thread6_StateC1Ev>
    64a9:	48 8d 15 20 a8 01 00 	lea    0x1a820(%rip),%rdx        # 20cd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    64b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64b4:	48 89 10             	mov    %rdx,(%rax)
    64b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64bb:	48 8d 58 08          	lea    0x8(%rax),%rbx
    64bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    64c3:	48 89 c7             	mov    %rax,%rdi
    64c6:	e8 85 ff ff ff       	call   6450 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    64cb:	49 89 c4             	mov    %rax,%r12
    64ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    64d2:	48 89 c7             	mov    %rax,%rdi
    64d5:	e8 84 ff ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    64da:	48 89 c2             	mov    %rax,%rdx
    64dd:	4c 89 e6             	mov    %r12,%rsi
    64e0:	48 89 df             	mov    %rbx,%rdi
    64e3:	e8 44 14 00 00       	call   792c <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>
	  { }
    64e8:	90                   	nop
    64e9:	48 83 c4 20          	add    $0x20,%rsp
    64ed:	5b                   	pop    %rbx
    64ee:	41 5c                	pop    %r12
    64f0:	5d                   	pop    %rbp
    64f1:	c3                   	ret

00000000000064f2 <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    64f2:	55                   	push   %rbp
    64f3:	48 89 e5             	mov    %rsp,%rbp
    64f6:	48 83 ec 10          	sub    $0x10,%rsp
    64fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6506:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    650a:	48 89 d6             	mov    %rdx,%rsi
    650d:	48 89 c7             	mov    %rax,%rdi
    6510:	e8 65 14 00 00       	call   797a <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>
    6515:	90                   	nop
    6516:	c9                   	leave
    6517:	c3                   	ret

0000000000006518 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6518:	55                   	push   %rbp
    6519:	48 89 e5             	mov    %rsp,%rbp
    651c:	48 83 ec 10          	sub    $0x10,%rsp
    6520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6524:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6528:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    652c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6530:	48 89 d6             	mov    %rdx,%rsi
    6533:	48 89 c7             	mov    %rax,%rdi
    6536:	e8 b7 ff ff ff       	call   64f2 <_ZNSt15__uniq_ptr_dataINSt6thread6_StateESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    653b:	90                   	nop
    653c:	c9                   	leave
    653d:	c3                   	ret

000000000000653e <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    653e:	55                   	push   %rbp
    653f:	48 89 e5             	mov    %rsp,%rbp
    6542:	53                   	push   %rbx
    6543:	48 83 ec 28          	sub    $0x28,%rsp
    6547:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    654b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    654f:	48 89 c7             	mov    %rax,%rdi
    6552:	e8 5b 14 00 00       	call   79b2 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    6557:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    655b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    655f:	48 8b 00             	mov    (%rax),%rax
    6562:	48 85 c0             	test   %rax,%rax
    6565:	74 29                	je     6590 <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    6567:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    656b:	48 89 c7             	mov    %rax,%rdi
    656e:	e8 59 14 00 00       	call   79cc <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>
    6573:	48 89 c3             	mov    %rax,%rbx
    6576:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    657a:	48 89 c7             	mov    %rax,%rdi
    657d:	e8 64 14 00 00       	call   79e6 <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>
    6582:	48 8b 00             	mov    (%rax),%rax
    6585:	48 89 c6             	mov    %rax,%rsi
    6588:	48 89 df             	mov    %rbx,%rdi
    658b:	e8 64 14 00 00       	call   79f4 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>
	__ptr = pointer();
    6590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6594:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    659b:	90                   	nop
    659c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    65a0:	c9                   	leave
    65a1:	c3                   	ret

00000000000065a2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5frontEv>:
      front() _GLIBCXX_NOEXCEPT
    65a2:	55                   	push   %rbp
    65a3:	48 89 e5             	mov    %rsp,%rbp
    65a6:	48 83 ec 30          	sub    $0x30,%rsp
    65aa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	return *begin();
    65ae:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    65b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    65b6:	48 89 d6             	mov    %rdx,%rsi
    65b9:	48 89 c7             	mov    %rax,%rdi
    65bc:	e8 3d f9 ff ff       	call   5efe <_ZNSt5dequeISt8functionIFvvEESaIS2_EE5beginEv>
    65c1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    65c5:	48 89 c7             	mov    %rax,%rdi
    65c8:	e8 53 14 00 00       	call   7a20 <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>
      }
    65cd:	c9                   	leave
    65ce:	c3                   	ret
    65cf:	90                   	nop

00000000000065d0 <_ZNSt8functionIFvvEEC1ERKS1_>:
      function(const function& __x)
    65d0:	55                   	push   %rbp
    65d1:	48 89 e5             	mov    %rsp,%rbp
    65d4:	53                   	push   %rbx
    65d5:	48 83 ec 18          	sub    $0x18,%rsp
    65d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      : _Function_base()
    65e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    65e9:	0f 11 00             	movups %xmm0,(%rax)
    65ec:	66 0f d6 40 10       	movq   %xmm0,0x10(%rax)
    65f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65f5:	48 89 c7             	mov    %rax,%rdi
    65f8:	e8 09 e8 ff ff       	call   4e06 <_ZNSt14_Function_baseC1Ev>
    65fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6601:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    6608:	00 
	if (static_cast<bool>(__x))
    6609:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    660d:	48 89 c7             	mov    %rax,%rdi
    6610:	e8 1d 14 00 00       	call   7a32 <_ZNKSt8functionIFvvEEcvbEv>
    6615:	84 c0                	test   %al,%al
    6617:	74 5a                	je     6673 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
	    __x._M_manager(_M_functor, __x._M_functor, __clone_functor);
    6619:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    661d:	4c 8b 40 10          	mov    0x10(%rax),%r8
    6621:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6629:	ba 02 00 00 00       	mov    $0x2,%edx
    662e:	48 89 ce             	mov    %rcx,%rsi
    6631:	48 89 c7             	mov    %rax,%rdi
    6634:	41 ff d0             	call   *%r8
	    _M_invoker = __x._M_invoker;
    6637:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    663b:	48 8b 50 18          	mov    0x18(%rax),%rdx
    663f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6643:	48 89 50 18          	mov    %rdx,0x18(%rax)
	    _M_manager = __x._M_manager;
    6647:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    664b:	48 8b 50 10          	mov    0x10(%rax),%rdx
    664f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6653:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6657:	eb 1a                	jmp    6673 <_ZNSt8functionIFvvEEC1ERKS1_+0xa3>
    6659:	48 89 c3             	mov    %rax,%rbx
    665c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6660:	48 89 c7             	mov    %rax,%rdi
    6663:	e8 82 d6 ff ff       	call   3cea <_ZNSt14_Function_baseD1Ev>
    6668:	48 89 d8             	mov    %rbx,%rax
    666b:	48 89 c7             	mov    %rax,%rdi
    666e:	e8 5d ce ff ff       	call   34d0 <_Unwind_Resume@plt>
    6673:	90                   	nop
    6674:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6678:	c9                   	leave
    6679:	c3                   	ret

000000000000667a <_ZNSt8functionIFvvEE4swapERS1_>:
      void swap(function& __x) noexcept
    667a:	55                   	push   %rbp
    667b:	48 89 e5             	mov    %rsp,%rbp
    667e:	48 83 ec 10          	sub    $0x10,%rsp
    6682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6686:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	std::swap(_M_functor, __x._M_functor);
    668a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    668e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6692:	48 89 d6             	mov    %rdx,%rsi
    6695:	48 89 c7             	mov    %rax,%rdi
    6698:	e8 b2 13 00 00       	call   7a4f <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>
	std::swap(_M_manager, __x._M_manager);
    669d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66a1:	48 8d 50 10          	lea    0x10(%rax),%rdx
    66a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a9:	48 83 c0 10          	add    $0x10,%rax
    66ad:	48 89 d6             	mov    %rdx,%rsi
    66b0:	48 89 c7             	mov    %rax,%rdi
    66b3:	e8 01 14 00 00       	call   7ab9 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>
	std::swap(_M_invoker, __x._M_invoker);
    66b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66bc:	48 8d 50 18          	lea    0x18(%rax),%rdx
    66c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c4:	48 83 c0 18          	add    $0x18,%rax
    66c8:	48 89 d6             	mov    %rdx,%rsi
    66cb:	48 89 c7             	mov    %rax,%rdi
    66ce:	e8 38 14 00 00       	call   7b0b <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>
      }
    66d3:	90                   	nop
    66d4:	c9                   	leave
    66d5:	c3                   	ret

00000000000066d6 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv>:
      pop_front() _GLIBCXX_NOEXCEPT
    66d6:	55                   	push   %rbp
    66d7:	48 89 e5             	mov    %rsp,%rbp
    66da:	53                   	push   %rbx
    66db:	48 83 ec 18          	sub    $0x18,%rsp
    66df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	if (this->_M_impl._M_start._M_cur
    66e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66e7:	48 8b 50 10          	mov    0x10(%rax),%rdx
	    != this->_M_impl._M_start._M_last - 1)
    66eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66ef:	48 8b 40 20          	mov    0x20(%rax),%rax
    66f3:	48 83 e8 20          	sub    $0x20,%rax
	if (this->_M_impl._M_start._M_cur
    66f7:	48 39 c2             	cmp    %rax,%rdx
    66fa:	74 35                	je     6731 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x5b>
	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
    66fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6700:	48 8b 58 10          	mov    0x10(%rax),%rbx
    6704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6708:	48 89 c7             	mov    %rax,%rdi
    670b:	e8 4a f8 ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    6710:	48 89 de             	mov    %rbx,%rsi
    6713:	48 89 c7             	mov    %rax,%rdi
    6716:	e8 42 14 00 00       	call   7b5d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
	    ++this->_M_impl._M_start._M_cur;
    671b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    671f:	48 8b 40 10          	mov    0x10(%rax),%rax
    6723:	48 8d 50 20          	lea    0x20(%rax),%rdx
    6727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    672b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    672f:	eb 0c                	jmp    673d <_ZNSt5dequeISt8functionIFvvEESaIS2_EE9pop_frontEv+0x67>
	  _M_pop_front_aux();
    6731:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6735:	48 89 c7             	mov    %rax,%rdi
    6738:	e8 47 14 00 00       	call   7b84 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>
      }
    673d:	90                   	nop
    673e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6742:	c9                   	leave
    6743:	c3                   	ret

0000000000006744 <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE11lower_boundERS5_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    6744:	55                   	push   %rbp
    6745:	48 89 e5             	mov    %rsp,%rbp
    6748:	48 83 ec 10          	sub    $0x10,%rsp
    674c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    6754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6758:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    675c:	48 89 d6             	mov    %rdx,%rsi
    675f:	48 89 c7             	mov    %rax,%rdi
    6762:	e8 97 14 00 00       	call   7bfe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>
    6767:	c9                   	leave
    6768:	c3                   	ret
    6769:	90                   	nop

000000000000676a <_ZNSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    676a:	55                   	push   %rbp
    676b:	48 89 e5             	mov    %rsp,%rbp
    676e:	48 83 ec 10          	sub    $0x10,%rsp
    6772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    6776:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    677a:	48 89 c7             	mov    %rax,%rdi
    677d:	e8 c8 14 00 00       	call   7c4a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>
    6782:	c9                   	leave
    6783:	c3                   	ret

0000000000006784 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    6784:	55                   	push   %rbp
    6785:	48 89 e5             	mov    %rsp,%rbp
    6788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    678c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    6790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6794:	48 8b 10             	mov    (%rax),%rdx
    6797:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    679b:	48 8b 00             	mov    (%rax),%rax
    679e:	48 39 c2             	cmp    %rax,%rdx
    67a1:	0f 94 c0             	sete   %al
    67a4:	5d                   	pop    %rbp
    67a5:	c3                   	ret

00000000000067a6 <_ZNKSt3mapINSt6thread2idEmSt4lessIS1_ESaISt4pairIKS1_mEEE8key_compEv>:
      key_comp() const
    67a6:	55                   	push   %rbp
    67a7:	48 89 e5             	mov    %rsp,%rbp
    67aa:	48 83 ec 10          	sub    $0x10,%rsp
    67ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    67b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b6:	48 89 c7             	mov    %rax,%rdi
    67b9:	e8 b6 14 00 00       	call   7c74 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>
    67be:	90                   	nop
    67bf:	c9                   	leave
    67c0:	c3                   	ret
    67c1:	90                   	nop

00000000000067c2 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    67c2:	55                   	push   %rbp
    67c3:	48 89 e5             	mov    %rsp,%rbp
    67c6:	48 83 ec 10          	sub    $0x10,%rsp
    67ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    67ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d2:	48 8b 00             	mov    (%rax),%rax
    67d5:	48 89 c7             	mov    %rax,%rdi
    67d8:	e8 a3 14 00 00       	call   7c80 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    67dd:	c9                   	leave
    67de:	c3                   	ret
    67df:	90                   	nop

00000000000067e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    67e0:	55                   	push   %rbp
    67e1:	48 89 e5             	mov    %rsp,%rbp
    67e4:	48 83 ec 20          	sub    $0x20,%rsp
    67e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67f0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    67f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    67f8:	48 8b 10             	mov    (%rax),%rdx
    67fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    67ff:	48 8b 00             	mov    (%rax),%rax
    6802:	48 89 d6             	mov    %rdx,%rsi
    6805:	48 89 c7             	mov    %rax,%rdi
    6808:	e8 43 d7 ff ff       	call   3f50 <_ZStltNSt6thread2idES0_>
    680d:	c9                   	leave
    680e:	c3                   	ret

000000000000680f <_ZSt16forward_as_tupleIJNSt6thread2idEEESt5tupleIJDpOT_EES5_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    680f:	55                   	push   %rbp
    6810:	48 89 e5             	mov    %rsp,%rbp
    6813:	48 83 ec 10          	sub    $0x10,%rsp
    6817:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    681b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    681f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6823:	48 89 c7             	mov    %rax,%rdi
    6826:	e8 73 14 00 00       	call   7c9e <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    682b:	48 89 c2             	mov    %rax,%rdx
    682e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6832:	48 89 d6             	mov    %rdx,%rsi
    6835:	48 89 c7             	mov    %rax,%rdi
    6838:	e8 6f 14 00 00       	call   7cac <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>
    683d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6841:	c9                   	leave
    6842:	c3                   	ret
    6843:	90                   	nop

0000000000006844 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEEC1ERKSt17_Rb_tree_iteratorIS4_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    6844:	55                   	push   %rbp
    6845:	48 89 e5             	mov    %rsp,%rbp
    6848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    684c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    6850:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6854:	48 8b 10             	mov    (%rax),%rdx
    6857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    685b:	48 89 10             	mov    %rdx,(%rax)
    685e:	90                   	nop
    685f:	5d                   	pop    %rbp
    6860:	c3                   	ret
    6861:	90                   	nop

0000000000006862 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6862:	55                   	push   %rbp
    6863:	48 89 e5             	mov    %rsp,%rbp
    6866:	41 54                	push   %r12
    6868:	53                   	push   %rbx
    6869:	48 83 ec 60          	sub    $0x60,%rsp
    686d:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    6871:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    6875:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    6879:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    687d:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    6881:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    6885:	48 89 c7             	mov    %rax,%rdi
    6888:	e8 6e 14 00 00       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    688d:	49 89 c4             	mov    %rax,%r12
    6890:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6894:	48 89 c7             	mov    %rax,%rdi
    6897:	e8 51 14 00 00       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    689c:	48 89 c3             	mov    %rax,%rbx
    689f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    68a3:	48 89 c7             	mov    %rax,%rdi
    68a6:	e8 34 14 00 00       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    68ab:	48 89 c2             	mov    %rax,%rdx
    68ae:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    68b2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    68b6:	4d 89 e0             	mov    %r12,%r8
    68b9:	48 89 d9             	mov    %rbx,%rcx
    68bc:	48 89 c7             	mov    %rax,%rdi
    68bf:	e8 46 14 00 00       	call   7d0a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    68c4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    68c8:	48 89 c7             	mov    %rax,%rdi
    68cb:	e8 3a 19 00 00       	call   820a <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>
    68d0:	48 89 c2             	mov    %rax,%rdx
    68d3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    68d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    68db:	48 89 ce             	mov    %rcx,%rsi
    68de:	48 89 c7             	mov    %rax,%rdi
    68e1:	e8 d6 14 00 00       	call   7dbc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>
    68e6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    68ea:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    68ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    68f2:	48 85 c0             	test   %rax,%rax
    68f5:	74 1c                	je     6913 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    68f7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    68fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    68ff:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6903:	48 89 ce             	mov    %rcx,%rsi
    6906:	48 89 c7             	mov    %rax,%rdi
    6909:	e8 1a 19 00 00       	call   8228 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>
    690e:	48 89 c3             	mov    %rax,%rbx
    6911:	eb 17                	jmp    692a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xc8>
	return iterator(__res.first);
    6913:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    6917:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    691b:	48 89 d6             	mov    %rdx,%rsi
    691e:	48 89 c7             	mov    %rax,%rdi
    6921:	e8 58 19 00 00       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    6926:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    692a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    692e:	48 89 c7             	mov    %rax,%rdi
    6931:	e8 50 14 00 00       	call   7d86 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    6936:	48 89 d8             	mov    %rbx,%rax
    6939:	eb 1a                	jmp    6955 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEESt17_Rb_tree_iteratorIS4_ESt23_Rb_tree_const_iteratorIS4_EDpOT_+0xf3>
    693b:	48 89 c3             	mov    %rax,%rbx
    693e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6942:	48 89 c7             	mov    %rax,%rdi
    6945:	e8 3c 14 00 00       	call   7d86 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>
    694a:	48 89 d8             	mov    %rbx,%rax
    694d:	48 89 c7             	mov    %rax,%rdi
    6950:	e8 7b cb ff ff       	call   34d0 <_Unwind_Resume@plt>
    6955:	48 83 c4 60          	add    $0x60,%rsp
    6959:	5b                   	pop    %rbx
    695a:	41 5c                	pop    %r12
    695c:	5d                   	pop    %rbp
    695d:	c3                   	ret

000000000000695e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    695e:	55                   	push   %rbp
    695f:	48 89 e5             	mov    %rsp,%rbp
    6962:	48 83 ec 10          	sub    $0x10,%rsp
    6966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	48 89 c7             	mov    %rax,%rdi
    6971:	e8 22 19 00 00       	call   8298 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>
    6976:	90                   	nop
    6977:	c9                   	leave
    6978:	c3                   	ret
    6979:	90                   	nop

000000000000697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    697a:	55                   	push   %rbp
    697b:	48 89 e5             	mov    %rsp,%rbp
    697e:	48 83 ec 10          	sub    $0x10,%rsp
    6982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    698a:	48 89 c7             	mov    %rax,%rdi
    698d:	e8 2d 19 00 00       	call   82bf <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6992:	c9                   	leave
    6993:	c3                   	ret

0000000000006994 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6994:	55                   	push   %rbp
    6995:	48 89 e5             	mov    %rsp,%rbp
    6998:	48 83 ec 10          	sub    $0x10,%rsp
    699c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    69a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69a4:	48 89 c7             	mov    %rax,%rdi
    69a7:	e8 c2 02 00 00       	call   6c6e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    69ac:	c9                   	leave
    69ad:	c3                   	ret

00000000000069ae <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    69ae:	55                   	push   %rbp
    69af:	48 89 e5             	mov    %rsp,%rbp
    69b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    69b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ba:	5d                   	pop    %rbp
    69bb:	c3                   	ret

00000000000069bc <_ZN4neko8SettingsD1Ev>:
    69bc:	55                   	push   %rbp
    69bd:	48 89 e5             	mov    %rsp,%rbp
    69c0:	48 83 ec 10          	sub    $0x10,%rsp
    69c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69cc:	48 89 c7             	mov    %rax,%rdi
    69cf:	e8 08 ec ff ff       	call   55dc <_ZN4neko8SettingsUt_D1Ev>
    69d4:	90                   	nop
    69d5:	c9                   	leave
    69d6:	c3                   	ret
    69d7:	90                   	nop

00000000000069d8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>:
      operator()(_Tp* __ptr) const
    69d8:	55                   	push   %rbp
    69d9:	48 89 e5             	mov    %rsp,%rbp
    69dc:	53                   	push   %rbx
    69dd:	48 83 ec 18          	sub    $0x18,%rsp
    69e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    69e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    69e9:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    69ed:	48 85 db             	test   %rbx,%rbx
    69f0:	74 15                	je     6a07 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_+0x2f>
    69f2:	48 89 df             	mov    %rbx,%rdi
    69f5:	e8 c2 ff ff ff       	call   69bc <_ZN4neko8SettingsD1Ev>
    69fa:	be 60 00 00 00       	mov    $0x60,%esi
    69ff:	48 89 df             	mov    %rbx,%rdi
    6a02:	e8 c9 c8 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    6a07:	90                   	nop
    6a08:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a0c:	c9                   	leave
    6a0d:	c3                   	ret

0000000000006a0e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    6a0e:	55                   	push   %rbp
    6a0f:	48 89 e5             	mov    %rsp,%rbp
    6a12:	48 83 ec 10          	sub    $0x10,%rsp
    6a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    6a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a1e:	48 89 c7             	mov    %rax,%rdi
    6a21:	e8 b4 18 00 00       	call   82da <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>
    6a26:	90                   	nop
    6a27:	c9                   	leave
    6a28:	c3                   	ret
    6a29:	90                   	nop

0000000000006a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6a2a:	55                   	push   %rbp
    6a2b:	48 89 e5             	mov    %rsp,%rbp
    6a2e:	48 83 ec 10          	sub    $0x10,%rsp
    6a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a3a:	48 89 c7             	mov    %rax,%rdi
    6a3d:	e8 bf 18 00 00       	call   8301 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6a42:	c9                   	leave
    6a43:	c3                   	ret

0000000000006a44 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6a44:	55                   	push   %rbp
    6a45:	48 89 e5             	mov    %rsp,%rbp
    6a48:	48 83 ec 10          	sub    $0x10,%rsp
    6a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a54:	48 89 c7             	mov    %rax,%rdi
    6a57:	e8 82 04 00 00       	call   6ede <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    6a5c:	c9                   	leave
    6a5d:	c3                   	ret

0000000000006a5e <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6a5e:	55                   	push   %rbp
    6a5f:	48 89 e5             	mov    %rsp,%rbp
    6a62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a6a:	5d                   	pop    %rbp
    6a6b:	c3                   	ret

0000000000006a6c <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    6a6c:	55                   	push   %rbp
    6a6d:	48 89 e5             	mov    %rsp,%rbp
    6a70:	48 83 ec 10          	sub    $0x10,%rsp
    6a74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7c:	48 83 c0 50          	add    $0x50,%rax
    6a80:	48 89 c7             	mov    %rax,%rdi
    6a83:	e8 04 46 00 00       	call   b08c <_ZN4neko6DeviceD1Ev>
    6a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a8c:	48 83 c0 40          	add    $0x40,%rax
    6a90:	48 89 c7             	mov    %rax,%rdi
    6a93:	e8 76 a5 00 00       	call   1100e <_ZN4neko7SurfaceD1Ev>
    6a98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9c:	48 83 c0 30          	add    $0x30,%rax
    6aa0:	48 89 c7             	mov    %rax,%rdi
    6aa3:	e8 58 a4 00 00       	call   10f00 <_ZN4neko6WindowD1Ev>
    6aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aac:	48 83 c0 10          	add    $0x10,%rax
    6ab0:	48 89 c7             	mov    %rax,%rdi
    6ab3:	e8 30 d0 ff ff       	call   3ae8 <_ZN4neko8InstanceD1Ev>
    6ab8:	90                   	nop
    6ab9:	c9                   	leave
    6aba:	c3                   	ret
    6abb:	90                   	nop

0000000000006abc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6abc:	55                   	push   %rbp
    6abd:	48 89 e5             	mov    %rsp,%rbp
    6ac0:	53                   	push   %rbx
    6ac1:	48 83 ec 18          	sub    $0x18,%rsp
    6ac5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6ac9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6acd:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6ad1:	48 85 db             	test   %rbx,%rbx
    6ad4:	74 15                	je     6aeb <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_+0x2f>
    6ad6:	48 89 df             	mov    %rbx,%rdi
    6ad9:	e8 8e ff ff ff       	call   6a6c <_ZN4neko8RendererD1Ev>
    6ade:	be 70 00 00 00       	mov    $0x70,%esi
    6ae3:	48 89 df             	mov    %rbx,%rdi
    6ae6:	e8 e5 c7 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    6aeb:	90                   	nop
    6aec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6af0:	c9                   	leave
    6af1:	c3                   	ret

0000000000006af2 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    6af2:	55                   	push   %rbp
    6af3:	48 89 e5             	mov    %rsp,%rbp
    6af6:	48 83 ec 10          	sub    $0x10,%rsp
    6afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    6afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b02:	48 89 c7             	mov    %rax,%rdi
    6b05:	e8 12 18 00 00       	call   831c <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>
    6b0a:	90                   	nop
    6b0b:	c9                   	leave
    6b0c:	c3                   	ret
    6b0d:	90                   	nop

0000000000006b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    6b0e:	55                   	push   %rbp
    6b0f:	48 89 e5             	mov    %rsp,%rbp
    6b12:	48 83 ec 10          	sub    $0x10,%rsp
    6b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b1e:	48 89 c7             	mov    %rax,%rdi
    6b21:	e8 1d 18 00 00       	call   8343 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6b26:	c9                   	leave
    6b27:	c3                   	ret

0000000000006b28 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    6b28:	55                   	push   %rbp
    6b29:	48 89 e5             	mov    %rsp,%rbp
    6b2c:	48 83 ec 10          	sub    $0x10,%rsp
    6b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    6b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b38:	48 89 c7             	mov    %rax,%rdi
    6b3b:	e8 66 02 00 00       	call   6da6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    6b40:	c9                   	leave
    6b41:	c3                   	ret

0000000000006b42 <_ZSt4moveIRPN4neko10ThreadPoolEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    6b42:	55                   	push   %rbp
    6b43:	48 89 e5             	mov    %rsp,%rbp
    6b46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    6b4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b4e:	5d                   	pop    %rbp
    6b4f:	c3                   	ret

0000000000006b50 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>:
      operator()(_Tp* __ptr) const
    6b50:	55                   	push   %rbp
    6b51:	48 89 e5             	mov    %rsp,%rbp
    6b54:	53                   	push   %rbx
    6b55:	48 83 ec 18          	sub    $0x18,%rsp
    6b59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    6b61:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    6b65:	48 85 db             	test   %rbx,%rbx
    6b68:	74 15                	je     6b7f <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_+0x2f>
    6b6a:	48 89 df             	mov    %rbx,%rdi
    6b6d:	e8 e8 d5 ff ff       	call   415a <_ZN4neko10ThreadPoolD1Ev>
    6b72:	be f8 00 00 00       	mov    $0xf8,%esi
    6b77:	48 89 df             	mov    %rbx,%rdi
    6b7a:	e8 51 c7 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    6b7f:	90                   	nop
    6b80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b84:	c9                   	leave
    6b85:	c3                   	ret

0000000000006b86 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6b86:	55                   	push   %rbp
    6b87:	48 89 e5             	mov    %rsp,%rbp
    6b8a:	48 83 ec 10          	sub    $0x10,%rsp
    6b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b9e:	48 89 d6             	mov    %rdx,%rsi
    6ba1:	48 89 c7             	mov    %rax,%rdi
    6ba4:	e8 b5 17 00 00       	call   835e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>
    6ba9:	90                   	nop
    6baa:	c9                   	leave
    6bab:	c3                   	ret

0000000000006bac <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6bac:	55                   	push   %rbp
    6bad:	48 89 e5             	mov    %rsp,%rbp
    6bb0:	48 83 ec 10          	sub    $0x10,%rsp
    6bb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bc4:	48 89 d6             	mov    %rdx,%rsi
    6bc7:	48 89 c7             	mov    %rax,%rdi
    6bca:	e8 b7 ff ff ff       	call   6b86 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6bcf:	90                   	nop
    6bd0:	c9                   	leave
    6bd1:	c3                   	ret

0000000000006bd2 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6bd2:	55                   	push   %rbp
    6bd3:	48 89 e5             	mov    %rsp,%rbp
    6bd6:	53                   	push   %rbx
    6bd7:	48 83 ec 28          	sub    $0x28,%rsp
    6bdb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6bdf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6be7:	48 89 c7             	mov    %rax,%rdi
    6bea:	e8 8b fd ff ff       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6bef:	48 8b 00             	mov    (%rax),%rax
    6bf2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6bf6:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6bfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bfe:	48 89 c7             	mov    %rax,%rdi
    6c01:	e8 74 fd ff ff       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6c06:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6c09:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6c0e:	74 1e                	je     6c2e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6c10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c14:	48 89 c7             	mov    %rax,%rdi
    6c17:	e8 52 00 00 00       	call   6c6e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    6c1c:	48 89 c2             	mov    %rax,%rdx
    6c1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c23:	48 89 c6             	mov    %rax,%rsi
    6c26:	48 89 d7             	mov    %rdx,%rdi
    6c29:	e8 aa fd ff ff       	call   69d8 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
      }
    6c2e:	90                   	nop
    6c2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6c33:	c9                   	leave
    6c34:	c3                   	ret
    6c35:	90                   	nop

0000000000006c36 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6c36:	55                   	push   %rbp
    6c37:	48 89 e5             	mov    %rsp,%rbp
    6c3a:	48 83 ec 20          	sub    $0x20,%rsp
    6c3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6c42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c46:	48 89 c7             	mov    %rax,%rdi
    6c49:	e8 2c fd ff ff       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6c4e:	48 8b 00             	mov    (%rax),%rax
    6c51:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6c55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c59:	48 89 c7             	mov    %rax,%rdi
    6c5c:	e8 19 fd ff ff       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6c61:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6c6c:	c9                   	leave
    6c6d:	c3                   	ret

0000000000006c6e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6c6e:	55                   	push   %rbp
    6c6f:	48 89 e5             	mov    %rsp,%rbp
    6c72:	48 83 ec 10          	sub    $0x10,%rsp
    6c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c7e:	48 89 c7             	mov    %rax,%rdi
    6c81:	e8 0f 17 00 00       	call   8395 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6c86:	c9                   	leave
    6c87:	c3                   	ret

0000000000006c88 <_ZSt7forwardISt14default_deleteIN4neko8SettingsEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6c88:	55                   	push   %rbp
    6c89:	48 89 e5             	mov    %rsp,%rbp
    6c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c94:	5d                   	pop    %rbp
    6c95:	c3                   	ret

0000000000006c96 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6c96:	55                   	push   %rbp
    6c97:	48 89 e5             	mov    %rsp,%rbp
    6c9a:	48 83 ec 10          	sub    $0x10,%rsp
    6c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ca6:	48 89 c7             	mov    %rax,%rdi
    6ca9:	e8 02 17 00 00       	call   83b0 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    6cae:	c9                   	leave
    6caf:	c3                   	ret

0000000000006cb0 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6cb0:	55                   	push   %rbp
    6cb1:	48 89 e5             	mov    %rsp,%rbp
    6cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cbc:	5d                   	pop    %rbp
    6cbd:	c3                   	ret

0000000000006cbe <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6cbe:	55                   	push   %rbp
    6cbf:	48 89 e5             	mov    %rsp,%rbp
    6cc2:	48 83 ec 10          	sub    $0x10,%rsp
    6cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cd6:	48 89 d6             	mov    %rdx,%rsi
    6cd9:	48 89 c7             	mov    %rax,%rdi
    6cdc:	e8 ed 16 00 00       	call   83ce <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>
    6ce1:	90                   	nop
    6ce2:	c9                   	leave
    6ce3:	c3                   	ret

0000000000006ce4 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6ce4:	55                   	push   %rbp
    6ce5:	48 89 e5             	mov    %rsp,%rbp
    6ce8:	48 83 ec 10          	sub    $0x10,%rsp
    6cec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6cf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6cfc:	48 89 d6             	mov    %rdx,%rsi
    6cff:	48 89 c7             	mov    %rax,%rdi
    6d02:	e8 b7 ff ff ff       	call   6cbe <_ZNSt15__uniq_ptr_dataIN4neko10ThreadPoolESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6d07:	90                   	nop
    6d08:	c9                   	leave
    6d09:	c3                   	ret

0000000000006d0a <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6d0a:	55                   	push   %rbp
    6d0b:	48 89 e5             	mov    %rsp,%rbp
    6d0e:	53                   	push   %rbx
    6d0f:	48 83 ec 28          	sub    $0x28,%rsp
    6d13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d17:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6d1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d1f:	48 89 c7             	mov    %rax,%rdi
    6d22:	e8 e7 fd ff ff       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6d27:	48 8b 00             	mov    (%rax),%rax
    6d2a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6d2e:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6d32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d36:	48 89 c7             	mov    %rax,%rdi
    6d39:	e8 d0 fd ff ff       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6d3e:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6d41:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6d46:	74 1e                	je     6d66 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6d48:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d4c:	48 89 c7             	mov    %rax,%rdi
    6d4f:	e8 52 00 00 00       	call   6da6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>
    6d54:	48 89 c2             	mov    %rax,%rdx
    6d57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d5b:	48 89 c6             	mov    %rax,%rsi
    6d5e:	48 89 d7             	mov    %rdx,%rdi
    6d61:	e8 ea fd ff ff       	call   6b50 <_ZNKSt14default_deleteIN4neko10ThreadPoolEEclEPS1_>
      }
    6d66:	90                   	nop
    6d67:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6d6b:	c9                   	leave
    6d6c:	c3                   	ret
    6d6d:	90                   	nop

0000000000006d6e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6d6e:	55                   	push   %rbp
    6d6f:	48 89 e5             	mov    %rsp,%rbp
    6d72:	48 83 ec 20          	sub    $0x20,%rsp
    6d76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6d7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d7e:	48 89 c7             	mov    %rax,%rdi
    6d81:	e8 88 fd ff ff       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6d86:	48 8b 00             	mov    (%rax),%rax
    6d89:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6d8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d91:	48 89 c7             	mov    %rax,%rdi
    6d94:	e8 75 fd ff ff       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6d99:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6da4:	c9                   	leave
    6da5:	c3                   	ret

0000000000006da6 <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6da6:	55                   	push   %rbp
    6da7:	48 89 e5             	mov    %rsp,%rbp
    6daa:	48 83 ec 10          	sub    $0x10,%rsp
    6dae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6db6:	48 89 c7             	mov    %rax,%rdi
    6db9:	e8 47 16 00 00       	call   8405 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6dbe:	c9                   	leave
    6dbf:	c3                   	ret

0000000000006dc0 <_ZSt7forwardISt14default_deleteIN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6dc0:	55                   	push   %rbp
    6dc1:	48 89 e5             	mov    %rsp,%rbp
    6dc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6dc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dcc:	5d                   	pop    %rbp
    6dcd:	c3                   	ret

0000000000006dce <_ZNKSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6dce:	55                   	push   %rbp
    6dcf:	48 89 e5             	mov    %rsp,%rbp
    6dd2:	48 83 ec 10          	sub    $0x10,%rsp
    6dd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dde:	48 89 c7             	mov    %rax,%rdi
    6de1:	e8 3a 16 00 00       	call   8420 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    6de6:	c9                   	leave
    6de7:	c3                   	ret

0000000000006de8 <_ZSt7forwardIRN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6de8:	55                   	push   %rbp
    6de9:	48 89 e5             	mov    %rsp,%rbp
    6dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6df4:	5d                   	pop    %rbp
    6df5:	c3                   	ret

0000000000006df6 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    6df6:	55                   	push   %rbp
    6df7:	48 89 e5             	mov    %rsp,%rbp
    6dfa:	48 83 ec 10          	sub    $0x10,%rsp
    6dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e0e:	48 89 d6             	mov    %rdx,%rsi
    6e11:	48 89 c7             	mov    %rax,%rdi
    6e14:	e8 25 16 00 00       	call   843e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>
    6e19:	90                   	nop
    6e1a:	c9                   	leave
    6e1b:	c3                   	ret

0000000000006e1c <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    6e1c:	55                   	push   %rbp
    6e1d:	48 89 e5             	mov    %rsp,%rbp
    6e20:	48 83 ec 10          	sub    $0x10,%rsp
    6e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    6e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e30:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6e34:	48 89 d6             	mov    %rdx,%rsi
    6e37:	48 89 c7             	mov    %rax,%rdi
    6e3a:	e8 b7 ff ff ff       	call   6df6 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    6e3f:	90                   	nop
    6e40:	c9                   	leave
    6e41:	c3                   	ret

0000000000006e42 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_>:
      void reset(pointer __p) noexcept
    6e42:	55                   	push   %rbp
    6e43:	48 89 e5             	mov    %rsp,%rbp
    6e46:	53                   	push   %rbx
    6e47:	48 83 ec 28          	sub    $0x28,%rsp
    6e4b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6e4f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	const pointer __old_p = _M_ptr();
    6e53:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e57:	48 89 c7             	mov    %rax,%rdi
    6e5a:	e8 cb fb ff ff       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6e5f:	48 8b 00             	mov    (%rax),%rax
    6e62:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_ptr() = __p;
    6e66:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    6e6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e6e:	48 89 c7             	mov    %rax,%rdi
    6e71:	e8 b4 fb ff ff       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6e76:	48 89 18             	mov    %rbx,(%rax)
	if (__old_p)
    6e79:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    6e7e:	74 1e                	je     6e9e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE5resetEPS1_+0x5c>
	  _M_deleter()(__old_p);
    6e80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e84:	48 89 c7             	mov    %rax,%rdi
    6e87:	e8 52 00 00 00       	call   6ede <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    6e8c:	48 89 c2             	mov    %rax,%rdx
    6e8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e93:	48 89 c6             	mov    %rax,%rsi
    6e96:	48 89 d7             	mov    %rdx,%rdi
    6e99:	e8 1e fc ff ff       	call   6abc <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
      }
    6e9e:	90                   	nop
    6e9f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ea3:	c9                   	leave
    6ea4:	c3                   	ret
    6ea5:	90                   	nop

0000000000006ea6 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE7releaseEv>:
      pointer release() noexcept
    6ea6:	55                   	push   %rbp
    6ea7:	48 89 e5             	mov    %rsp,%rbp
    6eaa:	48 83 ec 20          	sub    $0x20,%rsp
    6eae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	pointer __p = _M_ptr();
    6eb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6eb6:	48 89 c7             	mov    %rax,%rdi
    6eb9:	e8 6c fb ff ff       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6ebe:	48 8b 00             	mov    (%rax),%rax
    6ec1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_ptr() = nullptr;
    6ec5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ec9:	48 89 c7             	mov    %rax,%rdi
    6ecc:	e8 59 fb ff ff       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6ed1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	return __p;
    6ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6edc:	c9                   	leave
    6edd:	c3                   	ret

0000000000006ede <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    6ede:	55                   	push   %rbp
    6edf:	48 89 e5             	mov    %rsp,%rbp
    6ee2:	48 83 ec 10          	sub    $0x10,%rsp
    6ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eee:	48 89 c7             	mov    %rax,%rdi
    6ef1:	e8 7f 15 00 00       	call   8475 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    6ef6:	c9                   	leave
    6ef7:	c3                   	ret

0000000000006ef8 <_ZSt7forwardISt14default_deleteIN4neko8RendererEEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6ef8:	55                   	push   %rbp
    6ef9:	48 89 e5             	mov    %rsp,%rbp
    6efc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6f00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f04:	5d                   	pop    %rbp
    6f05:	c3                   	ret

0000000000006f06 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    6f06:	55                   	push   %rbp
    6f07:	48 89 e5             	mov    %rsp,%rbp
    6f0a:	48 83 ec 10          	sub    $0x10,%rsp
    6f0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    6f12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f16:	48 89 c7             	mov    %rax,%rdi
    6f19:	e8 72 15 00 00       	call   8490 <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    6f1e:	c9                   	leave
    6f1f:	c3                   	ret

0000000000006f20 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E21_M_not_empty_functionIS3_EEbRKT_>:
	  _M_not_empty_function(const _Tp&) noexcept
    6f20:	55                   	push   %rbp
    6f21:	48 89 e5             	mov    %rsp,%rbp
    6f24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  { return true; }
    6f28:	b8 01 00 00 00       	mov    $0x1,%eax
    6f2d:	5d                   	pop    %rbp
    6f2e:	c3                   	ret

0000000000006f2f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    6f2f:	55                   	push   %rbp
    6f30:	48 89 e5             	mov    %rsp,%rbp
    6f33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3b:	5d                   	pop    %rbp
    6f3c:	c3                   	ret

0000000000006f3d <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    6f3d:	55                   	push   %rbp
    6f3e:	48 89 e5             	mov    %rsp,%rbp
    6f41:	48 83 ec 10          	sub    $0x10,%rsp
    6f45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    6f4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f51:	48 89 c7             	mov    %rax,%rdi
    6f54:	e8 d6 ff ff ff       	call   6f2f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    6f59:	48 89 c2             	mov    %rax,%rdx
    6f5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f60:	48 89 d6             	mov    %rdx,%rsi
    6f63:	48 89 c7             	mov    %rax,%rdi
    6f66:	e8 42 15 00 00       	call   84ad <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    6f6b:	90                   	nop
    6f6c:	c9                   	leave
    6f6d:	c3                   	ret

0000000000006f6e <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E9_M_invokeERKSt9_Any_data>:
      _M_invoke(const _Any_data& __functor, _ArgTypes&&... __args)
    6f6e:	55                   	push   %rbp
    6f6f:	48 89 e5             	mov    %rsp,%rbp
    6f72:	48 83 ec 10          	sub    $0x10,%rsp
    6f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::__invoke_r<_Res>(*_Base::_M_get_pointer(__functor),
    6f7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f7e:	48 89 c7             	mov    %rax,%rdi
    6f81:	e8 6d 15 00 00       	call   84f3 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6f86:	48 89 c7             	mov    %rax,%rdi
    6f89:	e8 8f 15 00 00       	call   851d <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>
				     std::forward<_ArgTypes>(__args)...);
    6f8e:	90                   	nop
      }
    6f8f:	c9                   	leave
    6f90:	c3                   	ret

0000000000006f91 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
      _M_manager(_Any_data& __dest, const _Any_data& __source,
    6f91:	55                   	push   %rbp
    6f92:	48 89 e5             	mov    %rsp,%rbp
    6f95:	53                   	push   %rbx
    6f96:	48 83 ec 28          	sub    $0x28,%rsp
    6f9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6fa2:	89 55 dc             	mov    %edx,-0x24(%rbp)
	switch (__op)
    6fa5:	8b 45 dc             	mov    -0x24(%rbp),%eax
    6fa8:	85 c0                	test   %eax,%eax
    6faa:	74 07                	je     6fb3 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x22>
    6fac:	83 f8 01             	cmp    $0x1,%eax
    6faf:	74 1a                	je     6fcb <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x3a>
    6fb1:	eb 38                	jmp    6feb <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x5a>
	    __dest._M_access<const type_info*>() = &typeid(_Functor);
    6fb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fb7:	48 89 c7             	mov    %rax,%rdi
    6fba:	e8 71 06 00 00       	call   7630 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    6fbf:	48 8d 15 92 9d 01 00 	lea    0x19d92(%rip),%rdx        # 20d58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    6fc6:	48 89 10             	mov    %rdx,(%rax)
	    break;
    6fc9:	eb 36                	jmp    7001 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    __dest._M_access<_Functor*>() = _Base::_M_get_pointer(__source);
    6fcb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6fcf:	48 89 c7             	mov    %rax,%rdi
    6fd2:	e8 1c 15 00 00       	call   84f3 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    6fd7:	48 89 c3             	mov    %rax,%rbx
    6fda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6fde:	48 89 c7             	mov    %rax,%rdi
    6fe1:	e8 5a 15 00 00       	call   8540 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    6fe6:	48 89 18             	mov    %rbx,(%rax)
	    break;
    6fe9:	eb 16                	jmp    7001 <_ZNSt17_Function_handlerIFvvEZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x70>
	    _Base::_M_manager(__dest, __source, __op);
    6feb:	8b 55 dc             	mov    -0x24(%rbp),%edx
    6fee:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6ff2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ff6:	48 89 ce             	mov    %rcx,%rsi
    6ff9:	48 89 c7             	mov    %rax,%rdi
    6ffc:	e8 59 15 00 00       	call   855a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>
	return false;
    7001:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    7006:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    700a:	c9                   	leave
    700b:	c3                   	ret

000000000000700c <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    700c:	55                   	push   %rbp
    700d:	48 89 e5             	mov    %rsp,%rbp
    7010:	48 83 ec 10          	sub    $0x10,%rsp
    7014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7018:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    701c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7020:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7024:	48 89 d6             	mov    %rdx,%rsi
    7027:	48 89 c7             	mov    %rax,%rdi
    702a:	e8 d1 15 00 00       	call   8600 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>
    702f:	90                   	nop
    7030:	c9                   	leave
    7031:	c3                   	ret

0000000000007032 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    7032:	55                   	push   %rbp
    7033:	48 89 e5             	mov    %rsp,%rbp
    7036:	48 83 ec 10          	sub    $0x10,%rsp
    703a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    703e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    7042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7046:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    704a:	48 89 d6             	mov    %rdx,%rsi
    704d:	48 89 c7             	mov    %rax,%rdi
    7050:	e8 b7 ff ff ff       	call   700c <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    7055:	90                   	nop
    7056:	c9                   	leave
    7057:	c3                   	ret

0000000000007058 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    7058:	55                   	push   %rbp
    7059:	48 89 e5             	mov    %rsp,%rbp
    705c:	48 83 ec 10          	sub    $0x10,%rsp
    7060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7068:	48 89 c7             	mov    %rax,%rdi
    706b:	e8 c7 15 00 00       	call   8637 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    7070:	c9                   	leave
    7071:	c3                   	ret

0000000000007072 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    7072:	55                   	push   %rbp
    7073:	48 89 e5             	mov    %rsp,%rbp
    7076:	48 83 ec 10          	sub    $0x10,%rsp
    707a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    707e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7082:	48 89 c7             	mov    %rax,%rdi
    7085:	e8 c8 15 00 00       	call   8652 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>
    708a:	c9                   	leave
    708b:	c3                   	ret

000000000000708c <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    708c:	55                   	push   %rbp
    708d:	48 89 e5             	mov    %rsp,%rbp
    7090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    7094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7098:	5d                   	pop    %rbp
    7099:	c3                   	ret

000000000000709a <_ZN4neko6EngineD1Ev>:
  ~Engine() = default;
    709a:	55                   	push   %rbp
    709b:	48 89 e5             	mov    %rsp,%rbp
    709e:	48 83 ec 10          	sub    $0x10,%rsp
    70a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70aa:	48 83 c0 10          	add    $0x10,%rax
    70ae:	48 89 c7             	mov    %rax,%rdi
    70b1:	e8 de e3 ff ff       	call   5494 <_ZNSt10unique_ptrIN4neko10ThreadPoolESt14default_deleteIS1_EED1Ev>
    70b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ba:	48 83 c0 08          	add    $0x8,%rax
    70be:	48 89 c7             	mov    %rax,%rdi
    70c1:	e8 0c e3 ff ff       	call   53d2 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    70c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70ca:	48 89 c7             	mov    %rax,%rdi
    70cd:	e8 3e e2 ff ff       	call   5310 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    70d2:	90                   	nop
    70d3:	c9                   	leave
    70d4:	c3                   	ret
    70d5:	90                   	nop

00000000000070d6 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>:
      operator()(_Tp* __ptr) const
    70d6:	55                   	push   %rbp
    70d7:	48 89 e5             	mov    %rsp,%rbp
    70da:	53                   	push   %rbx
    70db:	48 83 ec 18          	sub    $0x18,%rsp
    70df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    70e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    70e7:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    70eb:	48 85 db             	test   %rbx,%rbx
    70ee:	74 15                	je     7105 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_+0x2f>
    70f0:	48 89 df             	mov    %rbx,%rdi
    70f3:	e8 a2 ff ff ff       	call   709a <_ZN4neko6EngineD1Ev>
    70f8:	be 18 00 00 00       	mov    $0x18,%esi
    70fd:	48 89 df             	mov    %rbx,%rdi
    7100:	e8 cb c1 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    7105:	90                   	nop
    7106:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    710a:	c9                   	leave
    710b:	c3                   	ret

000000000000710c <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    710c:	55                   	push   %rbp
    710d:	48 89 e5             	mov    %rsp,%rbp
    7110:	48 83 ec 10          	sub    $0x10,%rsp
    7114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    7118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    711c:	48 89 c7             	mov    %rax,%rdi
    711f:	e8 48 15 00 00       	call   866c <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    7124:	c9                   	leave
    7125:	c3                   	ret

0000000000007126 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    7126:	55                   	push   %rbp
    7127:	48 89 e5             	mov    %rsp,%rbp
    712a:	48 83 ec 10          	sub    $0x10,%rsp
    712e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    7136:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    713a:	48 89 c7             	mov    %rax,%rdi
    713d:	e8 47 15 00 00       	call   8689 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    7142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7146:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    714a:	48 89 d6             	mov    %rdx,%rsi
    714d:	48 89 c7             	mov    %rax,%rdi
    7150:	e8 3f 15 00 00       	call   8694 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    7155:	c9                   	leave
    7156:	c3                   	ret
    7157:	90                   	nop

0000000000007158 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    7158:	55                   	push   %rbp
    7159:	48 89 e5             	mov    %rsp,%rbp
    715c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7160:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    7164:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7168:	48 8b 10             	mov    (%rax),%rdx
    716b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    716f:	48 89 10             	mov    %rdx,(%rax)
    7172:	90                   	nop
    7173:	5d                   	pop    %rbp
    7174:	c3                   	ret
    7175:	90                   	nop

0000000000007176 <_ZNSt15__new_allocatorISt6threadEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    7176:	55                   	push   %rbp
    7177:	48 89 e5             	mov    %rsp,%rbp
    717a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    717e:	90                   	nop
    717f:	5d                   	pop    %rbp
    7180:	c3                   	ret

0000000000007181 <_ZNSt16allocator_traitsISaISt6threadEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    7181:	55                   	push   %rbp
    7182:	48 89 e5             	mov    %rsp,%rbp
    7185:	48 83 ec 20          	sub    $0x20,%rsp
    7189:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    718d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7191:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    7195:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7199:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    719d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71a1:	48 89 ce             	mov    %rcx,%rsi
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 fe 14 00 00       	call   86aa <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>
    71ac:	90                   	nop
    71ad:	c9                   	leave
    71ae:	c3                   	ret

00000000000071af <_ZSt8_DestroyIPSt6threadEvT_S2_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    71af:	55                   	push   %rbp
    71b0:	48 89 e5             	mov    %rsp,%rbp
    71b3:	48 83 ec 10          	sub    $0x10,%rsp
    71b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    71bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    71bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    71c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c7:	48 89 d6             	mov    %rdx,%rsi
    71ca:	48 89 c7             	mov    %rax,%rdi
    71cd:	e8 09 15 00 00       	call   86db <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>
    }
    71d2:	90                   	nop
    71d3:	c9                   	leave
    71d4:	c3                   	ret
    71d5:	90                   	nop

00000000000071d6 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE11_Deque_implC1Ev>:
	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
    71d6:	55                   	push   %rbp
    71d7:	48 89 e5             	mov    %rsp,%rbp
    71da:	48 83 ec 10          	sub    $0x10,%rsp
    71de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    71e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71e6:	48 89 c7             	mov    %rax,%rdi
    71e9:	e8 26 15 00 00       	call   8714 <_ZNSaISt8functionIFvvEEEC1Ev>
    71ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71f2:	48 89 c7             	mov    %rax,%rdi
    71f5:	e8 36 15 00 00       	call   8730 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>
	{ }
    71fa:	90                   	nop
    71fb:	c9                   	leave
    71fc:	c3                   	ret
    71fd:	90                   	nop

00000000000071fe <_ZNSaISt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    71fe:	55                   	push   %rbp
    71ff:	48 89 e5             	mov    %rsp,%rbp
    7202:	48 83 ec 10          	sub    $0x10,%rsp
    7206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    720a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    720e:	48 89 c7             	mov    %rax,%rdi
    7211:	e8 60 15 00 00       	call   8776 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>
    7216:	90                   	nop
    7217:	c9                   	leave
    7218:	c3                   	ret
    7219:	90                   	nop

000000000000721a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm>:
    _Deque_base<_Tp, _Alloc>::
    721a:	55                   	push   %rbp
    721b:	48 89 e5             	mov    %rsp,%rbp
    721e:	53                   	push   %rbx
    721f:	48 83 ec 48          	sub    $0x48,%rsp
    7223:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    7227:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
    722b:	bf 20 00 00 00       	mov    $0x20,%edi
    7230:	e8 94 cb ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    7235:	48 89 c3             	mov    %rax,%rbx
    7238:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    723c:	ba 00 00 00 00       	mov    $0x0,%edx
    7241:	48 f7 f3             	div    %rbx
    7244:	48 83 c0 01          	add    $0x1,%rax
    7248:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
					   size_t(__num_nodes + 2));
    724c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7250:	48 83 c0 02          	add    $0x2,%rax
    7254:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
    7258:	48 c7 45 d0 08 00 00 	movq   $0x8,-0x30(%rbp)
    725f:	00 
    7260:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    7264:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7268:	48 89 d6             	mov    %rdx,%rsi
    726b:	48 89 c7             	mov    %rax,%rdi
    726e:	e8 30 d8 ff ff       	call   4aa3 <_ZSt3maxImERKT_S2_S2_>
    7273:	48 8b 10             	mov    (%rax),%rdx
    7276:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    727a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
    727e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7282:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7286:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    728a:	48 89 d6             	mov    %rdx,%rsi
    728d:	48 89 c7             	mov    %rax,%rdi
    7290:	e8 ed 14 00 00       	call   8782 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    7295:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    7299:	48 89 02             	mov    %rax,(%rdx)
      _Map_pointer __nstart = (this->_M_impl._M_map
    729c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72a0:	48 8b 10             	mov    (%rax),%rdx
			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
    72a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72a7:	48 8b 40 08          	mov    0x8(%rax),%rax
    72ab:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    72af:	48 d1 e8             	shr    %rax
    72b2:	48 c1 e0 03          	shl    $0x3,%rax
      _Map_pointer __nstart = (this->_M_impl._M_map
    72b6:	48 01 d0             	add    %rdx,%rax
    72b9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      _Map_pointer __nfinish = __nstart + __num_nodes;
    72bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    72c1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    72c8:	00 
    72c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72cd:	48 01 d0             	add    %rdx,%rax
    72d0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	{ _M_create_nodes(__nstart, __nfinish); }
    72d4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    72d8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    72dc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72e0:	48 89 ce             	mov    %rcx,%rsi
    72e3:	48 89 c7             	mov    %rax,%rdi
    72e6:	e8 03 15 00 00       	call   87ee <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>
      this->_M_impl._M_start._M_set_node(__nstart);
    72eb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72ef:	48 8d 50 10          	lea    0x10(%rax),%rdx
    72f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72f7:	48 89 c6             	mov    %rax,%rsi
    72fa:	48 89 d7             	mov    %rdx,%rdi
    72fd:	e8 6c 15 00 00       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__nfinish - 1);
    7302:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7306:	48 83 c0 30          	add    $0x30,%rax
    730a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    730e:	48 83 ea 08          	sub    $0x8,%rdx
    7312:	48 89 d6             	mov    %rdx,%rsi
    7315:	48 89 c7             	mov    %rax,%rdi
    7318:	e8 51 15 00 00       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
    731d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7321:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7325:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7329:	48 89 50 10          	mov    %rdx,0x10(%rax)
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    732d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7331:	48 8b 58 38          	mov    0x38(%rax),%rbx
					% __deque_buf_size(sizeof(_Tp)));
    7335:	bf 20 00 00 00       	mov    $0x20,%edi
    733a:	e8 8a ca ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    733f:	48 89 c1             	mov    %rax,%rcx
    7342:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    7346:	ba 00 00 00 00       	mov    $0x0,%edx
    734b:	48 f7 f1             	div    %rcx
    734e:	48 89 d1             	mov    %rdx,%rcx
    7351:	48 89 c8             	mov    %rcx,%rax
					+ __num_elements
    7354:	48 c1 e0 05          	shl    $0x5,%rax
    7358:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
      this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
    735c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7360:	48 89 50 30          	mov    %rdx,0x30(%rax)
    }
    7364:	eb 55                	jmp    73bb <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_initialize_mapEm+0x1a1>
      __catch(...)
    7366:	48 89 c7             	mov    %rax,%rdi
    7369:	e8 62 bd ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    736e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7372:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7376:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    737a:	48 8b 08             	mov    (%rax),%rcx
    737d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7381:	48 89 ce             	mov    %rcx,%rsi
    7384:	48 89 c7             	mov    %rax,%rdi
    7387:	e8 7e 00 00 00       	call   740a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>
	  this->_M_impl._M_map = _Map_pointer();
    738c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7390:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
	  this->_M_impl._M_map_size = 0;
    7397:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    739b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    73a2:	00 
	  __throw_exception_again;
    73a3:	e8 68 c0 ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    73a8:	48 89 c3             	mov    %rax,%rbx
    73ab:	e8 d0 c0 ff ff       	call   3480 <__cxa_end_catch@plt>
    73b0:	48 89 d8             	mov    %rbx,%rax
    73b3:	48 89 c7             	mov    %rax,%rdi
    73b6:	e8 15 c1 ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    73bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    73bf:	c9                   	leave
    73c0:	c3                   	ret
    73c1:	90                   	nop

00000000000073c2 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    73c2:	55                   	push   %rbp
    73c3:	48 89 e5             	mov    %rsp,%rbp
    73c6:	48 83 ec 30          	sub    $0x30,%rsp
    73ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    73ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    73d2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    73d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    73de:	eb 1b                	jmp    73fb <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x39>
	_M_deallocate_node(*__n);
    73e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73e4:	48 8b 10             	mov    (%rax),%rdx
    73e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    73eb:	48 89 d6             	mov    %rdx,%rsi
    73ee:	48 89 c7             	mov    %rax,%rdi
    73f1:	e8 c8 14 00 00       	call   88be <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
    73f6:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    73fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73ff:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    7403:	72 db                	jb     73e0 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_+0x1e>
    }
    7405:	90                   	nop
    7406:	90                   	nop
    7407:	c9                   	leave
    7408:	c3                   	ret
    7409:	90                   	nop

000000000000740a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>:
      _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
    740a:	55                   	push   %rbp
    740b:	48 89 e5             	mov    %rsp,%rbp
    740e:	48 83 ec 30          	sub    $0x30,%rsp
    7412:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7416:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    741a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    741e:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7422:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7426:	48 89 d6             	mov    %rdx,%rsi
    7429:	48 89 c7             	mov    %rax,%rdi
    742c:	e8 c1 14 00 00       	call   88f2 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
    7431:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7435:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7439:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    743d:	48 89 ce             	mov    %rcx,%rsi
    7440:	48 89 c7             	mov    %rax,%rdi
    7443:	e8 f9 14 00 00       	call   8941 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>
      }
    7448:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    744c:	48 89 c7             	mov    %rax,%rdi
    744f:	e8 d2 14 00 00       	call   8926 <_ZNSaIPSt8functionIFvvEEED1Ev>
    7454:	c9                   	leave
    7455:	c3                   	ret

0000000000007456 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1ERKS5_>:
      _Deque_iterator(const _Deque_iterator& __x) noexcept
    7456:	55                   	push   %rbp
    7457:	48 89 e5             	mov    %rsp,%rbp
    745a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    745e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
       : _M_cur(__x._M_cur), _M_first(__x._M_first),
    7462:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7466:	48 8b 10             	mov    (%rax),%rdx
    7469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    746d:	48 89 10             	mov    %rdx,(%rax)
    7470:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7474:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    747c:	48 89 50 08          	mov    %rdx,0x8(%rax)
	 _M_last(__x._M_last), _M_node(__x._M_node) { }
    7480:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7484:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    748c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    7490:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7494:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    749c:	48 89 50 18          	mov    %rdx,0x18(%rax)
    74a0:	90                   	nop
    74a1:	5d                   	pop    %rbp
    74a2:	c3                   	ret
    74a3:	90                   	nop

00000000000074a4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_>:
	}
      }

   template<typename _Tp, typename _Alloc>
     void
     deque<_Tp, _Alloc>::
    74a4:	55                   	push   %rbp
    74a5:	48 89 e5             	mov    %rsp,%rbp
    74a8:	41 54                	push   %r12
    74aa:	53                   	push   %rbx
    74ab:	48 83 ec 30          	sub    $0x30,%rsp
    74af:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    74b3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    74b7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
     _M_destroy_data_aux(iterator __first, iterator __last)
     {
       for (_Map_pointer __node = __first._M_node + 1;
    74bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    74bf:	48 8b 40 18          	mov    0x18(%rax),%rax
    74c3:	48 83 c0 08          	add    $0x8,%rax
    74c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    74cb:	eb 3d                	jmp    750a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x66>
	    __node < __last._M_node; ++__node)
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
		       _M_get_Tp_allocator());
    74cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74d1:	48 89 c7             	mov    %rax,%rdi
    74d4:	e8 81 ea ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    74d9:	48 89 c3             	mov    %rax,%rbx
	 std::_Destroy(*__node, *__node + _S_buffer_size(),
    74dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74e0:	4c 8b 20             	mov    (%rax),%r12
    74e3:	e8 87 14 00 00       	call   896f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>
    74e8:	48 c1 e0 05          	shl    $0x5,%rax
    74ec:	49 8d 0c 04          	lea    (%r12,%rax,1),%rcx
    74f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    74f4:	48 8b 00             	mov    (%rax),%rax
    74f7:	48 89 da             	mov    %rbx,%rdx
    74fa:	48 89 ce             	mov    %rcx,%rsi
    74fd:	48 89 c7             	mov    %rax,%rdi
    7500:	e8 7a 14 00 00       	call   897f <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
       for (_Map_pointer __node = __first._M_node + 1;
    7505:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	    __node < __last._M_node; ++__node)
    750a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    750e:	48 8b 40 18          	mov    0x18(%rax),%rax
    7512:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7516:	72 b5                	jb     74cd <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x29>

       if (__first._M_node != __last._M_node)
    7518:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    751c:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7520:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7524:	48 8b 40 18          	mov    0x18(%rax),%rax
    7528:	48 39 c2             	cmp    %rax,%rdx
    752b:	74 54                	je     7581 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0xdd>
	 {
	   std::_Destroy(__first._M_cur, __first._M_last,
			 _M_get_Tp_allocator());
    752d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7531:	48 89 c7             	mov    %rax,%rdi
    7534:	e8 21 ea ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7539:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__first._M_cur, __first._M_last,
    753c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7540:	48 8b 48 10          	mov    0x10(%rax),%rcx
    7544:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7548:	48 8b 00             	mov    (%rax),%rax
    754b:	48 89 ce             	mov    %rcx,%rsi
    754e:	48 89 c7             	mov    %rax,%rdi
    7551:	e8 29 14 00 00       	call   897f <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	   std::_Destroy(__last._M_first, __last._M_cur,
			 _M_get_Tp_allocator());
    7556:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    755a:	48 89 c7             	mov    %rax,%rdi
    755d:	e8 f8 e9 ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7562:	48 89 c2             	mov    %rax,%rdx
	   std::_Destroy(__last._M_first, __last._M_cur,
    7565:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7569:	48 8b 08             	mov    (%rax),%rcx
    756c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7570:	48 8b 40 08          	mov    0x8(%rax),%rax
    7574:	48 89 ce             	mov    %rcx,%rsi
    7577:	48 89 c7             	mov    %rax,%rdi
    757a:	e8 00 14 00 00       	call   897f <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
	 }
       else
	 std::_Destroy(__first._M_cur, __last._M_cur,
		       _M_get_Tp_allocator());
     }
    757f:	eb 28                	jmp    75a9 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE19_M_destroy_data_auxESt15_Deque_iteratorIS2_RS2_PS2_ES8_+0x105>
		       _M_get_Tp_allocator());
    7581:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7585:	48 89 c7             	mov    %rax,%rdi
    7588:	e8 cd e9 ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    758d:	48 89 c2             	mov    %rax,%rdx
	 std::_Destroy(__first._M_cur, __last._M_cur,
    7590:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7594:	48 8b 08             	mov    (%rax),%rcx
    7597:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    759b:	48 8b 00             	mov    (%rax),%rax
    759e:	48 89 ce             	mov    %rcx,%rsi
    75a1:	48 89 c7             	mov    %rax,%rdi
    75a4:	e8 d6 13 00 00       	call   897f <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>
     }
    75a9:	90                   	nop
    75aa:	48 83 c4 30          	add    $0x30,%rsp
    75ae:	5b                   	pop    %rbx
    75af:	41 5c                	pop    %r12
    75b1:	5d                   	pop    %rbp
    75b2:	c3                   	ret
    75b3:	90                   	nop

00000000000075b4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEC1Ev>:
    75b4:	55                   	push   %rbp
    75b5:	48 89 e5             	mov    %rsp,%rbp
    75b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75bc:	90                   	nop
    75bd:	5d                   	pop    %rbp
    75be:	c3                   	ret

00000000000075bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    75bf:	55                   	push   %rbp
    75c0:	48 89 e5             	mov    %rsp,%rbp
    75c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    75c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75cb:	48 8b 40 18          	mov    0x18(%rax),%rax
    75cf:	5d                   	pop    %rbp
    75d0:	c3                   	ret

00000000000075d1 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    75d1:	55                   	push   %rbp
    75d2:	48 89 e5             	mov    %rsp,%rbp
    75d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    75d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75dd:	48 8b 40 10          	mov    0x10(%rax),%rax
    75e1:	5d                   	pop    %rbp
    75e2:	c3                   	ret
    75e3:	90                   	nop

00000000000075e4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    75e4:	55                   	push   %rbp
    75e5:	48 89 e5             	mov    %rsp,%rbp
    75e8:	48 83 ec 10          	sub    $0x10,%rsp
    75ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    75f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    75f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75fc:	48 89 d6             	mov    %rdx,%rsi
    75ff:	48 89 c7             	mov    %rax,%rdi
    7602:	e8 a3 13 00 00       	call   89aa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>
	_M_put_node(__p);
    7607:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    760b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    760f:	48 89 d6             	mov    %rdx,%rsi
    7612:	48 89 c7             	mov    %rax,%rdi
    7615:	e8 ce 13 00 00       	call   89e8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
      }
    761a:	90                   	nop
    761b:	c9                   	leave
    761c:	c3                   	ret
    761d:	90                   	nop

000000000000761e <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    761e:	55                   	push   %rbp
    761f:	48 89 e5             	mov    %rsp,%rbp
    7622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    7626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    762a:	48 8b 40 10          	mov    0x10(%rax),%rax
    762e:	5d                   	pop    %rbp
    762f:	c3                   	ret

0000000000007630 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>:
      _M_access() noexcept
    7630:	55                   	push   %rbp
    7631:	48 89 e5             	mov    %rsp,%rbp
    7634:	48 83 ec 10          	sub    $0x10,%rsp
    7638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    763c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7640:	48 89 c7             	mov    %rax,%rdi
    7643:	e8 86 c6 ff ff       	call   3cce <_ZNSt9_Any_data9_M_accessEv>
    7648:	c9                   	leave
    7649:	c3                   	ret

000000000000764a <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    764a:	55                   	push   %rbp
    764b:	48 89 e5             	mov    %rsp,%rbp
    764e:	48 83 ec 20          	sub    $0x20,%rsp
    7652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    765a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    765e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7662:	48 89 c7             	mov    %rax,%rdi
    7665:	e8 b4 13 00 00       	call   8a1e <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    766a:	48 89 c2             	mov    %rax,%rdx
    766d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7671:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7675:	48 89 ce             	mov    %rcx,%rsi
    7678:	48 89 c7             	mov    %rax,%rdi
    767b:	e8 ac 13 00 00       	call   8a2c <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>
	}
    7680:	90                   	nop
    7681:	c9                   	leave
    7682:	c3                   	ret
    7683:	90                   	nop

0000000000007684 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_>:
      deque<_Tp, _Alloc>::
    7684:	55                   	push   %rbp
    7685:	48 89 e5             	mov    %rsp,%rbp
    7688:	53                   	push   %rbx
    7689:	48 83 ec 18          	sub    $0x18,%rsp
    768d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7691:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size() == max_size())
    7695:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7699:	48 89 c7             	mov    %rax,%rdi
    769c:	e8 05 14 00 00       	call   8aa6 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>
    76a1:	48 89 c3             	mov    %rax,%rbx
    76a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76a8:	48 89 c7             	mov    %rax,%rdi
    76ab:	e8 20 14 00 00       	call   8ad0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>
    76b0:	48 39 c3             	cmp    %rax,%rbx
    76b3:	0f 94 c0             	sete   %al
    76b6:	84 c0                	test   %al,%al
    76b8:	74 0f                	je     76c9 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x45>
	  __throw_length_error(
    76ba:	48 8d 05 3f b0 00 00 	lea    0xb03f(%rip),%rax        # 12700 <_ZN6__pstl9execution2v1L5unseqE+0x95>
    76c1:	48 89 c7             	mov    %rax,%rdi
    76c4:	e8 67 ba ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	_M_reserve_map_at_back();
    76c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76cd:	be 01 00 00 00       	mov    $0x1,%esi
    76d2:	48 89 c7             	mov    %rax,%rdi
    76d5:	e8 18 14 00 00       	call   8af2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>
	*(this->_M_impl._M_finish._M_node + 1) = this->_M_allocate_node();
    76da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    76de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76e2:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    76e6:	48 8d 5a 08          	lea    0x8(%rdx),%rbx
    76ea:	48 89 c7             	mov    %rax,%rdi
    76ed:	e8 62 14 00 00       	call   8b54 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    76f2:	48 89 03             	mov    %rax,(%rbx)
	    _Alloc_traits::construct(this->_M_impl,
    76f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    76f9:	48 89 c7             	mov    %rax,%rdi
    76fc:	e8 1d 13 00 00       	call   8a1e <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7701:	48 89 c2             	mov    %rax,%rdx
    7704:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7708:	48 8b 48 30          	mov    0x30(%rax),%rcx
    770c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7710:	48 89 ce             	mov    %rcx,%rsi
    7713:	48 89 c7             	mov    %rax,%rdi
    7716:	e8 2f ff ff ff       	call   764a <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_>
	    this->_M_impl._M_finish._M_set_node(this->_M_impl._M_finish._M_node
    771b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    771f:	48 83 c0 30          	add    $0x30,%rax
    7723:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7727:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    772b:	48 83 c2 08          	add    $0x8,%rdx
    772f:	48 89 d6             	mov    %rdx,%rsi
    7732:	48 89 c7             	mov    %rax,%rdi
    7735:	e8 34 11 00 00       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
	    this->_M_impl._M_finish._M_cur = this->_M_impl._M_finish._M_first;
    773a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    773e:	48 8b 50 38          	mov    0x38(%rax),%rdx
    7742:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7746:	48 89 50 30          	mov    %rdx,0x30(%rax)
      }
    774a:	eb 3e                	jmp    778a <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_push_back_auxIJRKS2_EEEvDpOT_+0x106>
	__catch(...)
    774c:	48 89 c7             	mov    %rax,%rdi
    774f:	e8 7c b9 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	    _M_deallocate_node(*(this->_M_impl._M_finish._M_node + 1));
    7754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7758:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    775c:	48 8b 52 48          	mov    0x48(%rdx),%rdx
    7760:	48 83 c2 08          	add    $0x8,%rdx
    7764:	48 8b 12             	mov    (%rdx),%rdx
    7767:	48 89 d6             	mov    %rdx,%rsi
    776a:	48 89 c7             	mov    %rax,%rdi
    776d:	e8 4c 11 00 00       	call   88be <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
	    __throw_exception_again;
    7772:	e8 99 bc ff ff       	call   3410 <__cxa_rethrow@plt>
	__catch(...)
    7777:	48 89 c3             	mov    %rax,%rbx
    777a:	e8 01 bd ff ff       	call   3480 <__cxa_end_catch@plt>
    777f:	48 89 d8             	mov    %rbx,%rax
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 46 bd ff ff       	call   34d0 <_Unwind_Resume@plt>
      }
    778a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    778e:	c9                   	leave
    778f:	c3                   	ret

0000000000007790 <_ZSteqRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    7790:	55                   	push   %rbp
    7791:	48 89 e5             	mov    %rsp,%rbp
    7794:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7798:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_cur == __y._M_cur; }
    779c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77a0:	48 8b 10             	mov    (%rax),%rdx
    77a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77a7:	48 8b 00             	mov    (%rax),%rax
    77aa:	48 39 c2             	cmp    %rax,%rdx
    77ad:	0f 94 c0             	sete   %al
    77b0:	5d                   	pop    %rbp
    77b1:	c3                   	ret

00000000000077b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    77b2:	55                   	push   %rbp
    77b3:	48 89 e5             	mov    %rsp,%rbp
    77b6:	48 83 ec 10          	sub    $0x10,%rsp
    77ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    77be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77c2:	48 89 c7             	mov    %rax,%rdi
    77c5:	e8 f6 13 00 00       	call   8bc0 <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>
    77ca:	48 89 c7             	mov    %rax,%rdi
    77cd:	e8 ac 13 00 00       	call   8b7e <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>
    77d2:	c9                   	leave
    77d3:	c3                   	ret

00000000000077d4 <_ZSt27__uninitialized_default_n_aIPSt6threadmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    77d4:	55                   	push   %rbp
    77d5:	48 89 e5             	mov    %rsp,%rbp
    77d8:	48 83 ec 20          	sub    $0x20,%rsp
    77dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    77e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    77e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    77ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77f0:	48 89 d6             	mov    %rdx,%rsi
    77f3:	48 89 c7             	mov    %rax,%rdi
    77f6:	e8 d3 13 00 00       	call   8bce <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>
    77fb:	c9                   	leave
    77fc:	c3                   	ret
    77fd:	90                   	nop

00000000000077fe <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	53                   	push   %rbx
    7803:	48 83 ec 38          	sub    $0x38,%rsp
    7807:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    780b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    780f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    7813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7817:	48 89 c7             	mov    %rax,%rdi
    781a:	e8 93 ff ff ff       	call   77b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    781f:	48 89 c3             	mov    %rax,%rbx
    7822:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7826:	48 89 c7             	mov    %rax,%rdi
    7829:	e8 14 d5 ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    782e:	48 29 c3             	sub    %rax,%rbx
    7831:	48 89 da             	mov    %rbx,%rdx
    7834:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7838:	48 39 c2             	cmp    %rax,%rdx
    783b:	0f 92 c0             	setb   %al
    783e:	84 c0                	test   %al,%al
    7840:	74 0c                	je     784e <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    7842:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7846:	48 89 c7             	mov    %rax,%rdi
    7849:	e8 e2 b8 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    784e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7852:	48 89 c7             	mov    %rax,%rdi
    7855:	e8 e8 d4 ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    785a:	48 89 c3             	mov    %rax,%rbx
    785d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7861:	48 89 c7             	mov    %rax,%rdi
    7864:	e8 d9 d4 ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7869:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    786d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    7871:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7875:	48 89 d6             	mov    %rdx,%rsi
    7878:	48 89 c7             	mov    %rax,%rdi
    787b:	e8 23 d2 ff ff       	call   4aa3 <_ZSt3maxImERKT_S2_S2_>
    7880:	48 8b 00             	mov    (%rax),%rax
    7883:	48 01 d8             	add    %rbx,%rax
    7886:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    788a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    788e:	48 89 c7             	mov    %rax,%rdi
    7891:	e8 ac d4 ff ff       	call   4d42 <_ZNKSt6vectorISt6threadSaIS0_EE4sizeEv>
    7896:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    789a:	72 12                	jb     78ae <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xb0>
    789c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78a0:	48 89 c7             	mov    %rax,%rdi
    78a3:	e8 0a ff ff ff       	call   77b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    78a8:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    78ac:	73 0e                	jae    78bc <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xbe>
    78ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78b2:	48 89 c7             	mov    %rax,%rdi
    78b5:	e8 f8 fe ff ff       	call   77b2 <_ZNKSt6vectorISt6threadSaIS0_EE8max_sizeEv>
    78ba:	eb 04                	jmp    78c0 <_ZNKSt6vectorISt6threadSaIS0_EE12_M_check_lenEmPKc+0xc2>
    78bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    78c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    78c4:	c9                   	leave
    78c5:	c3                   	ret

00000000000078c6 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    78c6:	55                   	push   %rbp
    78c7:	48 89 e5             	mov    %rsp,%rbp
    78ca:	48 83 ec 10          	sub    $0x10,%rsp
    78ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    78d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    78d6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    78db:	74 15                	je     78f2 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x2c>
    78dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    78e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    78e5:	48 89 d6             	mov    %rdx,%rsi
    78e8:	48 89 c7             	mov    %rax,%rdi
    78eb:	e8 07 13 00 00       	call   8bf7 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>
    78f0:	eb 05                	jmp    78f7 <_ZNSt12_Vector_baseISt6threadSaIS0_EE11_M_allocateEm+0x31>
    78f2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    78f7:	c9                   	leave
    78f8:	c3                   	ret

00000000000078f9 <_ZNSt6vectorISt6threadSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    78f9:	55                   	push   %rbp
    78fa:	48 89 e5             	mov    %rsp,%rbp
    78fd:	48 83 ec 20          	sub    $0x20,%rsp
    7901:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7905:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7909:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    790d:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    7911:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7915:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7919:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    791d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7921:	48 89 c7             	mov    %rax,%rdi
    7924:	e8 f8 12 00 00       	call   8c21 <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    7929:	c9                   	leave
    792a:	c3                   	ret
    792b:	90                   	nop

000000000000792c <_ZNSt5tupleIJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_S2_Lb1EEEOT_OT0_>:
	tuple(_U1&& __a1, _U2&& __a2)
    792c:	55                   	push   %rbp
    792d:	48 89 e5             	mov    %rsp,%rbp
    7930:	41 54                	push   %r12
    7932:	53                   	push   %rbx
    7933:	48 83 ec 20          	sub    $0x20,%rsp
    7937:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    793b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    793f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }
    7943:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7947:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    794b:	48 89 c7             	mov    %rax,%rdi
    794e:	e8 0b eb ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    7953:	49 89 c4             	mov    %rax,%r12
    7956:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    795a:	48 89 c7             	mov    %rax,%rdi
    795d:	e8 ee ea ff ff       	call   6450 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7962:	4c 89 e2             	mov    %r12,%rdx
    7965:	48 89 c6             	mov    %rax,%rsi
    7968:	48 89 df             	mov    %rbx,%rdi
    796b:	e8 14 13 00 00       	call   8c84 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>
    7970:	90                   	nop
    7971:	48 83 c4 20          	add    $0x20,%rsp
    7975:	5b                   	pop    %rbx
    7976:	41 5c                	pop    %r12
    7978:	5d                   	pop    %rbp
    7979:	c3                   	ret

000000000000797a <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    797a:	55                   	push   %rbp
    797b:	48 89 e5             	mov    %rsp,%rbp
    797e:	53                   	push   %rbx
    797f:	48 83 ec 18          	sub    $0x18,%rsp
    7983:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7987:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    798b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    798f:	48 89 c7             	mov    %rax,%rdi
    7992:	e8 4b 13 00 00       	call   8ce2 <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    7997:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    799b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    799f:	48 89 c7             	mov    %rax,%rdi
    79a2:	e8 0b 00 00 00       	call   79b2 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>
    79a7:	48 89 18             	mov    %rbx,(%rax)
    79aa:	90                   	nop
    79ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79af:	c9                   	leave
    79b0:	c3                   	ret
    79b1:	90                   	nop

00000000000079b2 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    79b2:	55                   	push   %rbp
    79b3:	48 89 e5             	mov    %rsp,%rbp
    79b6:	48 83 ec 10          	sub    $0x10,%rsp
    79ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c2:	48 89 c7             	mov    %rax,%rdi
    79c5:	e8 33 13 00 00       	call   8cfd <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    79ca:	c9                   	leave
    79cb:	c3                   	ret

00000000000079cc <_ZNSt10unique_ptrINSt6thread6_StateESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    79cc:	55                   	push   %rbp
    79cd:	48 89 e5             	mov    %rsp,%rbp
    79d0:	48 83 ec 10          	sub    $0x10,%rsp
    79d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    79d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79dc:	48 89 c7             	mov    %rax,%rdi
    79df:	e8 34 13 00 00       	call   8d18 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>
    79e4:	c9                   	leave
    79e5:	c3                   	ret

00000000000079e6 <_ZSt4moveIRPNSt6thread6_StateEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    79e6:	55                   	push   %rbp
    79e7:	48 89 e5             	mov    %rsp,%rbp
    79ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    79ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79f2:	5d                   	pop    %rbp
    79f3:	c3                   	ret

00000000000079f4 <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_>:
      operator()(_Tp* __ptr) const
    79f4:	55                   	push   %rbp
    79f5:	48 89 e5             	mov    %rsp,%rbp
    79f8:	48 83 ec 10          	sub    $0x10,%rsp
    79fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	delete __ptr;
    7a04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7a08:	48 85 c0             	test   %rax,%rax
    7a0b:	74 0f                	je     7a1c <_ZNKSt14default_deleteINSt6thread6_StateEEclEPS1_+0x28>
    7a0d:	48 8b 10             	mov    (%rax),%rdx
    7a10:	48 83 c2 08          	add    $0x8,%rdx
    7a14:	48 8b 12             	mov    (%rdx),%rdx
    7a17:	48 89 c7             	mov    %rax,%rdi
    7a1a:	ff d2                	call   *%rdx
      }
    7a1c:	90                   	nop
    7a1d:	c9                   	leave
    7a1e:	c3                   	ret
    7a1f:	90                   	nop

0000000000007a20 <_ZNKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    7a20:	55                   	push   %rbp
    7a21:	48 89 e5             	mov    %rsp,%rbp
    7a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_cur; }
    7a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a2c:	48 8b 00             	mov    (%rax),%rax
    7a2f:	5d                   	pop    %rbp
    7a30:	c3                   	ret
    7a31:	90                   	nop

0000000000007a32 <_ZNKSt8functionIFvvEEcvbEv>:
      explicit operator bool() const noexcept
    7a32:	55                   	push   %rbp
    7a33:	48 89 e5             	mov    %rsp,%rbp
    7a36:	48 83 ec 10          	sub    $0x10,%rsp
    7a3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return !_M_empty(); }
    7a3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a42:	48 89 c7             	mov    %rax,%rdi
    7a45:	e8 da c2 ff ff       	call   3d24 <_ZNKSt14_Function_base8_M_emptyEv>
    7a4a:	83 f0 01             	xor    $0x1,%eax
    7a4d:	c9                   	leave
    7a4e:	c3                   	ret

0000000000007a4f <_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_>:
    swap(_Tp& __a, _Tp& __b)
    7a4f:	55                   	push   %rbp
    7a50:	48 89 e5             	mov    %rsp,%rbp
    7a53:	48 83 ec 20          	sub    $0x20,%rsp
    7a57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7a5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7a5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a63:	48 89 c7             	mov    %rax,%rdi
    7a66:	e8 c7 12 00 00       	call   8d32 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    7a6b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7a6f:	48 8b 00             	mov    (%rax),%rax
    7a72:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    7a76:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    7a7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a7e:	48 89 c7             	mov    %rax,%rdi
    7a81:	e8 ac 12 00 00       	call   8d32 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    7a86:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    7a8a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7a8e:	48 8b 00             	mov    (%rax),%rax
    7a91:	48 89 01             	mov    %rax,(%rcx)
    7a94:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      __b = _GLIBCXX_MOVE(__tmp);
    7a98:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    7a9c:	48 89 c7             	mov    %rax,%rdi
    7a9f:	e8 8e 12 00 00       	call   8d32 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>
    7aa4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    7aa8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7aac:	48 8b 00             	mov    (%rax),%rax
    7aaf:	48 89 01             	mov    %rax,(%rcx)
    7ab2:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    }
    7ab6:	90                   	nop
    7ab7:	c9                   	leave
    7ab8:	c3                   	ret

0000000000007ab9 <_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_>:
    swap(_Tp& __a, _Tp& __b)
    7ab9:	55                   	push   %rbp
    7aba:	48 89 e5             	mov    %rsp,%rbp
    7abd:	48 83 ec 20          	sub    $0x20,%rsp
    7ac1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ac5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7ac9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7acd:	48 89 c7             	mov    %rax,%rdi
    7ad0:	e8 6b 12 00 00       	call   8d40 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    7ad5:	48 8b 00             	mov    (%rax),%rax
    7ad8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    7adc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ae0:	48 89 c7             	mov    %rax,%rdi
    7ae3:	e8 58 12 00 00       	call   8d40 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    7ae8:	48 8b 10             	mov    (%rax),%rdx
    7aeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7aef:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    7af2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7af6:	48 89 c7             	mov    %rax,%rdi
    7af9:	e8 42 12 00 00       	call   8d40 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>
    7afe:	48 8b 10             	mov    (%rax),%rdx
    7b01:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b05:	48 89 10             	mov    %rdx,(%rax)
    }
    7b08:	90                   	nop
    7b09:	c9                   	leave
    7b0a:	c3                   	ret

0000000000007b0b <_ZSt4swapIPFvRKSt9_Any_dataEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS9_ESt18is_move_assignableIS9_EEE5valueEvE4typeERS9_SJ_>:
    swap(_Tp& __a, _Tp& __b)
    7b0b:	55                   	push   %rbp
    7b0c:	48 89 e5             	mov    %rsp,%rbp
    7b0f:	48 83 ec 20          	sub    $0x20,%rsp
    7b13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __tmp = _GLIBCXX_MOVE(__a);
    7b1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b1f:	48 89 c7             	mov    %rax,%rdi
    7b22:	e8 27 12 00 00       	call   8d4e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7b27:	48 8b 00             	mov    (%rax),%rax
    7b2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      __a = _GLIBCXX_MOVE(__b);
    7b2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b32:	48 89 c7             	mov    %rax,%rdi
    7b35:	e8 14 12 00 00       	call   8d4e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7b3a:	48 8b 10             	mov    (%rax),%rdx
    7b3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b41:	48 89 10             	mov    %rdx,(%rax)
      __b = _GLIBCXX_MOVE(__tmp);
    7b44:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7b48:	48 89 c7             	mov    %rax,%rdi
    7b4b:	e8 fe 11 00 00       	call   8d4e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>
    7b50:	48 8b 10             	mov    (%rax),%rdx
    7b53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b57:	48 89 10             	mov    %rdx,(%rax)
    }
    7b5a:	90                   	nop
    7b5b:	c9                   	leave
    7b5c:	c3                   	ret

0000000000007b5d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    7b5d:	55                   	push   %rbp
    7b5e:	48 89 e5             	mov    %rsp,%rbp
    7b61:	48 83 ec 10          	sub    $0x10,%rsp
    7b65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b69:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    7b6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7b71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b75:	48 89 d6             	mov    %rdx,%rsi
    7b78:	48 89 c7             	mov    %rax,%rdi
    7b7b:	e8 dc 11 00 00       	call   8d5c <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>
	}
    7b80:	90                   	nop
    7b81:	c9                   	leave
    7b82:	c3                   	ret
    7b83:	90                   	nop

0000000000007b84 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE16_M_pop_front_auxEv>:
    void deque<_Tp, _Alloc>::
    7b84:	55                   	push   %rbp
    7b85:	48 89 e5             	mov    %rsp,%rbp
    7b88:	53                   	push   %rbx
    7b89:	48 83 ec 18          	sub    $0x18,%rsp
    7b8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      _Alloc_traits::destroy(_M_get_Tp_allocator(),
    7b91:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b95:	48 8b 58 10          	mov    0x10(%rax),%rbx
    7b99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b9d:	48 89 c7             	mov    %rax,%rdi
    7ba0:	e8 b5 e3 ff ff       	call   5f5a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    7ba5:	48 89 de             	mov    %rbx,%rsi
    7ba8:	48 89 c7             	mov    %rax,%rdi
    7bab:	e8 ad ff ff ff       	call   7b5d <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE7destroyIS2_EEvRS3_PT_>
      _M_deallocate_node(this->_M_impl._M_start._M_first);
    7bb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7bb8:	48 8b 52 18          	mov    0x18(%rdx),%rdx
    7bbc:	48 89 d6             	mov    %rdx,%rsi
    7bbf:	48 89 c7             	mov    %rax,%rdi
    7bc2:	e8 f7 0c 00 00       	call   88be <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>
      this->_M_impl._M_start._M_set_node(this->_M_impl._M_start._M_node + 1);
    7bc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bcb:	48 83 c0 10          	add    $0x10,%rax
    7bcf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7bd3:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    7bd7:	48 83 c2 08          	add    $0x8,%rdx
    7bdb:	48 89 d6             	mov    %rdx,%rsi
    7bde:	48 89 c7             	mov    %rax,%rdi
    7be1:	e8 88 0c 00 00       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_start._M_cur = this->_M_impl._M_start._M_first;
    7be6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bea:	48 8b 50 18          	mov    0x18(%rax),%rdx
    7bee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7bf2:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    7bf6:	90                   	nop
    7bf7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7bfb:	c9                   	leave
    7bfc:	c3                   	ret
    7bfd:	90                   	nop

0000000000007bfe <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11lower_boundERS3_>:
      lower_bound(const key_type& __k)
    7bfe:	55                   	push   %rbp
    7bff:	48 89 e5             	mov    %rsp,%rbp
    7c02:	53                   	push   %rbx
    7c03:	48 83 ec 18          	sub    $0x18,%rsp
    7c07:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c0b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    7c0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c13:	48 89 c7             	mov    %rax,%rdi
    7c16:	e8 61 11 00 00       	call   8d7c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7c1b:	48 89 c3             	mov    %rax,%rbx
    7c1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c22:	48 89 c7             	mov    %rax,%rdi
    7c25:	e8 30 e4 ff ff       	call   605a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    7c2a:	48 89 c6             	mov    %rax,%rsi
    7c2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c35:	48 89 d1             	mov    %rdx,%rcx
    7c38:	48 89 da             	mov    %rbx,%rdx
    7c3b:	48 89 c7             	mov    %rax,%rdi
    7c3e:	e8 4b 11 00 00       	call   8d8e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>
    7c43:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c47:	c9                   	leave
    7c48:	c3                   	ret
    7c49:	90                   	nop

0000000000007c4a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    7c4a:	55                   	push   %rbp
    7c4b:	48 89 e5             	mov    %rsp,%rbp
    7c4e:	48 83 ec 20          	sub    $0x20,%rsp
    7c52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    7c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c5a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7c5e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7c62:	48 89 d6             	mov    %rdx,%rsi
    7c65:	48 89 c7             	mov    %rax,%rdi
    7c68:	e8 11 06 00 00       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    7c6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c71:	c9                   	leave
    7c72:	c3                   	ret
    7c73:	90                   	nop

0000000000007c74 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8key_compEv>:
      key_comp() const
    7c74:	55                   	push   %rbp
    7c75:	48 89 e5             	mov    %rsp,%rbp
    7c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    7c7c:	90                   	nop
    7c7d:	5d                   	pop    %rbp
    7c7e:	c3                   	ret
    7c7f:	90                   	nop

0000000000007c80 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr()
    7c80:	55                   	push   %rbp
    7c81:	48 89 e5             	mov    %rsp,%rbp
    7c84:	48 83 ec 10          	sub    $0x10,%rsp
    7c88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    7c8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c90:	48 83 c0 20          	add    $0x20,%rax
    7c94:	48 89 c7             	mov    %rax,%rdi
    7c97:	e8 88 11 00 00       	call   8e24 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    7c9c:	c9                   	leave
    7c9d:	c3                   	ret

0000000000007c9e <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7c9e:	55                   	push   %rbp
    7c9f:	48 89 e5             	mov    %rsp,%rbp
    7ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7caa:	5d                   	pop    %rbp
    7cab:	c3                   	ret

0000000000007cac <_ZNSt5tupleIJONSt6thread2idEEEC1IJS1_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    7cac:	55                   	push   %rbp
    7cad:	48 89 e5             	mov    %rsp,%rbp
    7cb0:	53                   	push   %rbx
    7cb1:	48 83 ec 18          	sub    $0x18,%rsp
    7cb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7cb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    7cbd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7cc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7cc5:	48 89 c7             	mov    %rax,%rdi
    7cc8:	e8 d1 ff ff ff       	call   7c9e <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    7ccd:	48 89 c6             	mov    %rax,%rsi
    7cd0:	48 89 df             	mov    %rbx,%rdi
    7cd3:	e8 66 11 00 00       	call   8e3e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>
    7cd8:	90                   	nop
    7cd9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7cdd:	c9                   	leave
    7cde:	c3                   	ret

0000000000007cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7cdf:	55                   	push   %rbp
    7ce0:	48 89 e5             	mov    %rsp,%rbp
    7ce3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ceb:	5d                   	pop    %rbp
    7cec:	c3                   	ret

0000000000007ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7ced:	55                   	push   %rbp
    7cee:	48 89 e5             	mov    %rsp,%rbp
    7cf1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7cf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf9:	5d                   	pop    %rbp
    7cfa:	c3                   	ret

0000000000007cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7cfb:	55                   	push   %rbp
    7cfc:	48 89 e5             	mov    %rsp,%rbp
    7cff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7d03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d07:	5d                   	pop    %rbp
    7d08:	c3                   	ret
    7d09:	90                   	nop

0000000000007d0a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS1_EESG_IJEEEEERSA_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    7d0a:	55                   	push   %rbp
    7d0b:	48 89 e5             	mov    %rsp,%rbp
    7d0e:	41 54                	push   %r12
    7d10:	53                   	push   %rbx
    7d11:	48 83 ec 30          	sub    $0x30,%rsp
    7d15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7d19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7d1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7d21:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    7d25:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    7d29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7d2d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7d31:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    7d34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7d38:	48 89 c7             	mov    %rax,%rdi
    7d3b:	e8 bb ff ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7d40:	49 89 c4             	mov    %rax,%r12
    7d43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d47:	48 89 c7             	mov    %rax,%rdi
    7d4a:	e8 9e ff ff ff       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    7d4f:	48 89 c3             	mov    %rax,%rbx
    7d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d56:	48 89 c7             	mov    %rax,%rdi
    7d59:	e8 81 ff ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7d5e:	48 89 c6             	mov    %rax,%rsi
    7d61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d65:	4c 89 e1             	mov    %r12,%rcx
    7d68:	48 89 da             	mov    %rbx,%rdx
    7d6b:	48 89 c7             	mov    %rax,%rdi
    7d6e:	e8 ff 10 00 00       	call   8e72 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>
    7d73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d77:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    7d7b:	90                   	nop
    7d7c:	48 83 c4 30          	add    $0x30,%rsp
    7d80:	5b                   	pop    %rbx
    7d81:	41 5c                	pop    %r12
    7d83:	5d                   	pop    %rbp
    7d84:	c3                   	ret
    7d85:	90                   	nop

0000000000007d86 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    7d86:	55                   	push   %rbp
    7d87:	48 89 e5             	mov    %rsp,%rbp
    7d8a:	48 83 ec 10          	sub    $0x10,%rsp
    7d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    7d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d96:	48 8b 40 08          	mov    0x8(%rax),%rax
    7d9a:	48 85 c0             	test   %rax,%rax
    7d9d:	74 1a                	je     7db9 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    7d9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7da3:	48 8b 00             	mov    (%rax),%rax
    7da6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7daa:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    7dae:	48 89 d6             	mov    %rdx,%rsi
    7db1:	48 89 c7             	mov    %rax,%rdi
    7db4:	e8 2b f8 ff ff       	call   75e4 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS4_E>
	}
    7db9:	90                   	nop
    7dba:	c9                   	leave
    7dbb:	c3                   	ret

0000000000007dbc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    7dbc:	55                   	push   %rbp
    7dbd:	48 89 e5             	mov    %rsp,%rbp
    7dc0:	53                   	push   %rbx
    7dc1:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    7dc8:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    7dcf:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    7dd6:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    7ddd:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7de4:	48 89 c7             	mov    %rax,%rdi
    7de7:	e8 02 11 00 00       	call   8eee <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>
    7dec:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    7df3:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7dfa:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e01:	48 89 c7             	mov    %rax,%rdi
    7e04:	e8 73 0f 00 00       	call   8d7c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    7e09:	48 39 c3             	cmp    %rax,%rbx
    7e0c:	0f 94 c0             	sete   %al
    7e0f:	84 c0                	test   %al,%al
    7e11:	0f 84 c8 00 00 00    	je     7edf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x123>
	  if (size() > 0
    7e17:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e1e:	48 89 c7             	mov    %rax,%rdi
    7e21:	e8 f0 10 00 00       	call   8f16 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    7e26:	48 85 c0             	test   %rax,%rax
    7e29:	74 44                	je     7e6f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7e2b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7e32:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e39:	48 89 c7             	mov    %rax,%rdi
    7e3c:	e8 e7 10 00 00       	call   8f28 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7e41:	48 8b 00             	mov    (%rax),%rax
    7e44:	48 89 c7             	mov    %rax,%rdi
    7e47:	e8 ee 10 00 00       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7e4c:	48 89 c1             	mov    %rax,%rcx
    7e4f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7e56:	48 89 c2             	mov    %rax,%rdx
    7e59:	48 89 ce             	mov    %rcx,%rsi
    7e5c:	48 89 df             	mov    %rbx,%rdi
    7e5f:	e8 7c e9 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7e64:	84 c0                	test   %al,%al
    7e66:	74 07                	je     7e6f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb3>
    7e68:	b8 01 00 00 00       	mov    $0x1,%eax
    7e6d:	eb 05                	jmp    7e74 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0xb8>
    7e6f:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    7e74:	84 c0                	test   %al,%al
    7e76:	74 49                	je     7ec1 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x105>
	    return _Res(0, _M_rightmost());
    7e78:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7e7f:	48 89 c7             	mov    %rax,%rdi
    7e82:	e8 a1 10 00 00       	call   8f28 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    7e87:	48 89 c2             	mov    %rax,%rdx
    7e8a:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    7e91:	00 00 00 00 
    7e95:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    7e9c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    7ea3:	48 89 ce             	mov    %rcx,%rsi
    7ea6:	48 89 c7             	mov    %rax,%rdi
    7ea9:	e8 a6 10 00 00       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    7eae:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    7eb5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    7ebc:	e9 43 03 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    7ec1:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7ec8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7ecf:	48 89 d6             	mov    %rdx,%rsi
    7ed2:	48 89 c7             	mov    %rax,%rdi
    7ed5:	e8 aa 10 00 00       	call   8f84 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    7eda:	e9 25 03 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    7edf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7ee6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7eed:	48 89 c7             	mov    %rax,%rdi
    7ef0:	e8 45 10 00 00       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7ef5:	48 89 c2             	mov    %rax,%rdx
    7ef8:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7eff:	48 89 c6             	mov    %rax,%rsi
    7f02:	48 89 df             	mov    %rbx,%rdi
    7f05:	e8 d6 e8 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7f0a:	84 c0                	test   %al,%al
    7f0c:	0f 84 66 01 00 00    	je     8078 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x2bc>
	  iterator __before = __pos;
    7f12:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    7f19:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    7f20:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    7f27:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7f2e:	48 89 c7             	mov    %rax,%rdi
    7f31:	e8 c4 11 00 00       	call   90fa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7f36:	48 8b 00             	mov    (%rax),%rax
    7f39:	48 39 c3             	cmp    %rax,%rbx
    7f3c:	0f 94 c0             	sete   %al
    7f3f:	84 c0                	test   %al,%al
    7f41:	74 4c                	je     7f8f <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    7f43:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7f4a:	48 89 c7             	mov    %rax,%rdi
    7f4d:	e8 a8 11 00 00       	call   90fa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7f52:	48 89 c3             	mov    %rax,%rbx
    7f55:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    7f5c:	48 89 c7             	mov    %rax,%rdi
    7f5f:	e8 96 11 00 00       	call   90fa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>
    7f64:	48 89 c1             	mov    %rax,%rcx
    7f67:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7f6e:	48 89 da             	mov    %rbx,%rdx
    7f71:	48 89 ce             	mov    %rcx,%rsi
    7f74:	48 89 c7             	mov    %rax,%rdi
    7f77:	e8 90 11 00 00       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    7f7c:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7f83:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    7f8a:	e9 75 02 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    7f8f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    7f96:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    7f9d:	48 89 c7             	mov    %rax,%rdi
    7fa0:	e8 ab 11 00 00       	call   9150 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
    7fa5:	48 8b 00             	mov    (%rax),%rax
    7fa8:	48 89 c7             	mov    %rax,%rdi
    7fab:	e8 8a 0f 00 00       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7fb0:	48 89 c1             	mov    %rax,%rcx
    7fb3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    7fba:	48 89 c2             	mov    %rax,%rdx
    7fbd:	48 89 ce             	mov    %rcx,%rsi
    7fc0:	48 89 df             	mov    %rbx,%rdi
    7fc3:	e8 18 e8 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    7fc8:	84 c0                	test   %al,%al
    7fca:	0f 84 8a 00 00 00    	je     805a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    7fd0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    7fd7:	48 89 c7             	mov    %rax,%rdi
    7fda:	e8 e0 f5 ff ff       	call   75bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    7fdf:	48 85 c0             	test   %rax,%rax
    7fe2:	0f 94 c0             	sete   %al
    7fe5:	84 c0                	test   %al,%al
    7fe7:	74 3e                	je     8027 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x26b>
		return _Res(0, __before._M_node);
    7fe9:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    7ff0:	00 00 00 00 
    7ff4:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    7ffb:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    8002:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    8009:	48 89 ce             	mov    %rcx,%rsi
    800c:	48 89 c7             	mov    %rax,%rdi
    800f:	e8 40 0f 00 00       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    8014:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    801b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    8022:	e9 dd 01 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    8027:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    802e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    8035:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    803c:	48 89 ce             	mov    %rcx,%rsi
    803f:	48 89 c7             	mov    %rax,%rdi
    8042:	e8 c5 10 00 00       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    8047:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    804e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    8055:	e9 aa 01 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    805a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    8061:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    8068:	48 89 d6             	mov    %rdx,%rsi
    806b:	48 89 c7             	mov    %rax,%rdi
    806e:	e8 11 0f 00 00       	call   8f84 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    8073:	e9 8c 01 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    8078:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    807f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    8086:	48 89 c7             	mov    %rax,%rdi
    8089:	e8 ac 0e 00 00       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    808e:	48 89 c1             	mov    %rax,%rcx
    8091:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8098:	48 89 c2             	mov    %rax,%rdx
    809b:	48 89 ce             	mov    %rcx,%rsi
    809e:	48 89 df             	mov    %rbx,%rdi
    80a1:	e8 3a e7 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    80a6:	84 c0                	test   %al,%al
    80a8:	0f 84 2c 01 00 00    	je     81da <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x41e>
	  iterator __after = __pos;
    80ae:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    80b5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    80bc:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    80c3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    80ca:	48 89 c7             	mov    %rax,%rdi
    80cd:	e8 56 0e 00 00       	call   8f28 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    80d2:	48 8b 00             	mov    (%rax),%rax
    80d5:	48 39 c3             	cmp    %rax,%rbx
    80d8:	0f 94 c0             	sete   %al
    80db:	84 c0                	test   %al,%al
    80dd:	74 3a                	je     8119 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x35d>
	    return _Res(0, _M_rightmost());
    80df:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    80e6:	48 89 c7             	mov    %rax,%rdi
    80e9:	e8 3a 0e 00 00       	call   8f28 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>
    80ee:	48 89 c2             	mov    %rax,%rdx
    80f1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    80f8:	00 
    80f9:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    80fd:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8101:	48 89 ce             	mov    %rcx,%rsi
    8104:	48 89 c7             	mov    %rax,%rdi
    8107:	e8 48 0e 00 00       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    810c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8110:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    8114:	e9 eb 00 00 00       	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    8119:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    8120:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    8127:	48 89 c7             	mov    %rax,%rdi
    812a:	e8 49 10 00 00       	call   9178 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>
    812f:	48 8b 00             	mov    (%rax),%rax
    8132:	48 89 c7             	mov    %rax,%rdi
    8135:	e8 00 0e 00 00       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    813a:	48 89 c2             	mov    %rax,%rdx
    813d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    8144:	48 89 c6             	mov    %rax,%rsi
    8147:	48 89 df             	mov    %rbx,%rdi
    814a:	e8 91 e6 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    814f:	84 c0                	test   %al,%al
    8151:	74 6c                	je     81bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    8153:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    815a:	48 89 c7             	mov    %rax,%rdi
    815d:	e8 5d f4 ff ff       	call   75bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8162:	48 85 c0             	test   %rax,%rax
    8165:	0f 94 c0             	sete   %al
    8168:	84 c0                	test   %al,%al
    816a:	74 2c                	je     8198 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x3dc>
		return _Res(0, __pos._M_node);
    816c:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    8173:	00 
    8174:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    817b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    817f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8183:	48 89 ce             	mov    %rcx,%rsi
    8186:	48 89 c7             	mov    %rax,%rdi
    8189:	e8 c6 0d 00 00       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    818e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8192:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    8196:	eb 6c                	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
		return _Res(__after._M_node, __after._M_node);
    8198:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    819f:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    81a6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    81aa:	48 89 ce             	mov    %rcx,%rsi
    81ad:	48 89 c7             	mov    %rax,%rdi
    81b0:	e8 57 0f 00 00       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    81b5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    81b9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    81bd:	eb 45                	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	    return _M_get_insert_unique_pos(__k);
    81bf:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    81c6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    81cd:	48 89 d6             	mov    %rdx,%rsi
    81d0:	48 89 c7             	mov    %rax,%rdi
    81d3:	e8 ac 0d 00 00       	call   8f84 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>
    81d8:	eb 2a                	jmp    8204 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS4_ERS3_+0x448>
	return _Res(__pos._M_node, 0);
    81da:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    81e1:	00 
    81e2:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    81e6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    81ed:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    81f1:	48 89 ce             	mov    %rcx,%rsi
    81f4:	48 89 c7             	mov    %rax,%rdi
    81f7:	e8 58 0d 00 00       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    81fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8200:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    8204:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8208:	c9                   	leave
    8209:	c3                   	ret

000000000000820a <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    820a:	55                   	push   %rbp
    820b:	48 89 e5             	mov    %rsp,%rbp
    820e:	48 83 ec 10          	sub    $0x10,%rsp
    8212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    8216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821a:	48 8b 40 08          	mov    0x8(%rax),%rax
    821e:	48 89 c7             	mov    %rax,%rdi
    8221:	e8 7a 0f 00 00       	call   91a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8226:	c9                   	leave
    8227:	c3                   	ret

0000000000008228 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE10_Auto_node9_M_insertES2_IPSt18_Rb_tree_node_baseSD_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    8228:	55                   	push   %rbp
    8229:	48 89 e5             	mov    %rsp,%rbp
    822c:	48 83 ec 30          	sub    $0x30,%rsp
    8230:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8234:	48 89 d1             	mov    %rdx,%rcx
    8237:	48 89 f0             	mov    %rsi,%rax
    823a:	48 89 fa             	mov    %rdi,%rdx
    823d:	48 89 ca             	mov    %rcx,%rdx
    8240:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8244:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    8248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    824c:	48 8b 00             	mov    (%rax),%rax
    824f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8253:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    8257:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    825b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    825f:	48 89 c7             	mov    %rax,%rdi
    8262:	e8 65 0f 00 00       	call   91cc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>
    8267:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    826b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    826f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8276:	00 
	  return __it;
    8277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    827b:	c9                   	leave
    827c:	c3                   	ret
    827d:	90                   	nop

000000000000827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    827e:	55                   	push   %rbp
    827f:	48 89 e5             	mov    %rsp,%rbp
    8282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8286:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    828a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    828e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8292:	48 89 10             	mov    %rdx,(%rax)
    8295:	90                   	nop
    8296:	5d                   	pop    %rbp
    8297:	c3                   	ret

0000000000008298 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    8298:	55                   	push   %rbp
    8299:	48 89 e5             	mov    %rsp,%rbp
    829c:	48 83 ec 10          	sub    $0x10,%rsp
    82a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    82a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a8:	48 89 c7             	mov    %rax,%rdi
    82ab:	e8 e0 0f 00 00       	call   9290 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>
    82b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82b4:	48 89 c7             	mov    %rax,%rdi
    82b7:	e8 f0 0f 00 00       	call   92ac <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>
    82bc:	90                   	nop
    82bd:	c9                   	leave
    82be:	c3                   	ret

00000000000082bf <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    82bf:	55                   	push   %rbp
    82c0:	48 89 e5             	mov    %rsp,%rbp
    82c3:	48 83 ec 10          	sub    $0x10,%rsp
    82c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    82cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82cf:	48 89 c7             	mov    %rax,%rdi
    82d2:	e8 eb 0f 00 00       	call   92c2 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    82d7:	c9                   	leave
    82d8:	c3                   	ret
    82d9:	90                   	nop

00000000000082da <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    82da:	55                   	push   %rbp
    82db:	48 89 e5             	mov    %rsp,%rbp
    82de:	48 83 ec 10          	sub    $0x10,%rsp
    82e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    82e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ea:	48 89 c7             	mov    %rax,%rdi
    82ed:	e8 ea 0f 00 00       	call   92dc <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>
    82f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f6:	48 89 c7             	mov    %rax,%rdi
    82f9:	e8 fa 0f 00 00       	call   92f8 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>
    82fe:	90                   	nop
    82ff:	c9                   	leave
    8300:	c3                   	ret

0000000000008301 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8301:	55                   	push   %rbp
    8302:	48 89 e5             	mov    %rsp,%rbp
    8305:	48 83 ec 10          	sub    $0x10,%rsp
    8309:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    830d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8311:	48 89 c7             	mov    %rax,%rdi
    8314:	e8 f5 0f 00 00       	call   930e <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8319:	c9                   	leave
    831a:	c3                   	ret
    831b:	90                   	nop

000000000000831c <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    831c:	55                   	push   %rbp
    831d:	48 89 e5             	mov    %rsp,%rbp
    8320:	48 83 ec 10          	sub    $0x10,%rsp
    8324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    8328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    832c:	48 89 c7             	mov    %rax,%rdi
    832f:	e8 f4 0f 00 00       	call   9328 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>
    8334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8338:	48 89 c7             	mov    %rax,%rdi
    833b:	e8 04 10 00 00       	call   9344 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>
    8340:	90                   	nop
    8341:	c9                   	leave
    8342:	c3                   	ret

0000000000008343 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8343:	55                   	push   %rbp
    8344:	48 89 e5             	mov    %rsp,%rbp
    8347:	48 83 ec 10          	sub    $0x10,%rsp
    834b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    834f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8353:	48 89 c7             	mov    %rax,%rdi
    8356:	e8 ff 0f 00 00       	call   935a <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    835b:	c9                   	leave
    835c:	c3                   	ret
    835d:	90                   	nop

000000000000835e <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    835e:	55                   	push   %rbp
    835f:	48 89 e5             	mov    %rsp,%rbp
    8362:	53                   	push   %rbx
    8363:	48 83 ec 18          	sub    $0x18,%rsp
    8367:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    836b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    836f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8373:	48 89 c7             	mov    %rax,%rdi
    8376:	e8 e3 e5 ff ff       	call   695e <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    837b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    837f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8383:	48 89 c7             	mov    %rax,%rdi
    8386:	e8 ef e5 ff ff       	call   697a <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    838b:	48 89 18             	mov    %rbx,(%rax)
    838e:	90                   	nop
    838f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8393:	c9                   	leave
    8394:	c3                   	ret

0000000000008395 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8395:	55                   	push   %rbp
    8396:	48 89 e5             	mov    %rsp,%rbp
    8399:	48 83 ec 10          	sub    $0x10,%rsp
    839d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    83a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a5:	48 89 c7             	mov    %rax,%rdi
    83a8:	e8 c7 0f 00 00       	call   9374 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    83ad:	c9                   	leave
    83ae:	c3                   	ret
    83af:	90                   	nop

00000000000083b0 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    83b0:	55                   	push   %rbp
    83b1:	48 89 e5             	mov    %rsp,%rbp
    83b4:	48 83 ec 10          	sub    $0x10,%rsp
    83b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83c0:	48 89 c7             	mov    %rax,%rdi
    83c3:	e8 c6 0f 00 00       	call   938e <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    83c8:	48 8b 00             	mov    (%rax),%rax
    83cb:	c9                   	leave
    83cc:	c3                   	ret
    83cd:	90                   	nop

00000000000083ce <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    83ce:	55                   	push   %rbp
    83cf:	48 89 e5             	mov    %rsp,%rbp
    83d2:	53                   	push   %rbx
    83d3:	48 83 ec 18          	sub    $0x18,%rsp
    83d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    83db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    83df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83e3:	48 89 c7             	mov    %rax,%rdi
    83e6:	e8 07 e7 ff ff       	call   6af2 <_ZNSt5tupleIJPN4neko10ThreadPoolESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    83eb:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    83ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83f3:	48 89 c7             	mov    %rax,%rdi
    83f6:	e8 13 e7 ff ff       	call   6b0e <_ZNSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>
    83fb:	48 89 18             	mov    %rbx,(%rax)
    83fe:	90                   	nop
    83ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8403:	c9                   	leave
    8404:	c3                   	ret

0000000000008405 <_ZSt3getILm1EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8405:	55                   	push   %rbp
    8406:	48 89 e5             	mov    %rsp,%rbp
    8409:	48 83 ec 10          	sub    $0x10,%rsp
    840d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8415:	48 89 c7             	mov    %rax,%rdi
    8418:	e8 8b 0f 00 00       	call   93a8 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    841d:	c9                   	leave
    841e:	c3                   	ret
    841f:	90                   	nop

0000000000008420 <_ZNKSt15__uniq_ptr_implIN4neko10ThreadPoolESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    8420:	55                   	push   %rbp
    8421:	48 89 e5             	mov    %rsp,%rbp
    8424:	48 83 ec 10          	sub    $0x10,%rsp
    8428:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    842c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8430:	48 89 c7             	mov    %rax,%rdi
    8433:	e8 8a 0f 00 00       	call   93c2 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    8438:	48 8b 00             	mov    (%rax),%rax
    843b:	c9                   	leave
    843c:	c3                   	ret
    843d:	90                   	nop

000000000000843e <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    843e:	55                   	push   %rbp
    843f:	48 89 e5             	mov    %rsp,%rbp
    8442:	53                   	push   %rbx
    8443:	48 83 ec 18          	sub    $0x18,%rsp
    8447:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    844b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    844f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8453:	48 89 c7             	mov    %rax,%rdi
    8456:	e8 b3 e5 ff ff       	call   6a0e <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    845b:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    845f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8463:	48 89 c7             	mov    %rax,%rdi
    8466:	e8 bf e5 ff ff       	call   6a2a <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    846b:	48 89 18             	mov    %rbx,(%rax)
    846e:	90                   	nop
    846f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8473:	c9                   	leave
    8474:	c3                   	ret

0000000000008475 <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8475:	55                   	push   %rbp
    8476:	48 89 e5             	mov    %rsp,%rbp
    8479:	48 83 ec 10          	sub    $0x10,%rsp
    847d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8481:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8485:	48 89 c7             	mov    %rax,%rdi
    8488:	e8 4f 0f 00 00       	call   93dc <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    848d:	c9                   	leave
    848e:	c3                   	ret
    848f:	90                   	nop

0000000000008490 <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    8490:	55                   	push   %rbp
    8491:	48 89 e5             	mov    %rsp,%rbp
    8494:	48 83 ec 10          	sub    $0x10,%rsp
    8498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    849c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a0:	48 89 c7             	mov    %rax,%rdi
    84a3:	e8 4e 0f 00 00       	call   93f6 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    84a8:	48 8b 00             	mov    (%rax),%rax
    84ab:	c9                   	leave
    84ac:	c3                   	ret

00000000000084ad <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    84ad:	55                   	push   %rbp
    84ae:	48 89 e5             	mov    %rsp,%rbp
    84b1:	53                   	push   %rbx
    84b2:	48 83 ec 18          	sub    $0x18,%rsp
    84b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    84be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84c2:	48 89 c7             	mov    %rax,%rdi
    84c5:	e8 04 b8 ff ff       	call   3cce <_ZNSt9_Any_data9_M_accessEv>
    84ca:	48 89 c6             	mov    %rax,%rsi
    84cd:	bf 08 00 00 00       	mov    $0x8,%edi
    84d2:	e8 e9 b3 ff ff       	call   38c0 <_ZnwmPv>
    84d7:	48 89 c3             	mov    %rax,%rbx
    84da:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84de:	48 89 c7             	mov    %rax,%rdi
    84e1:	e8 49 ea ff ff       	call   6f2f <_ZSt7forwardIZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS3_E4typeE>
    84e6:	48 8b 00             	mov    (%rax),%rax
    84e9:	48 89 03             	mov    %rax,(%rbx)
	  }
    84ec:	90                   	nop
    84ed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84f1:	c9                   	leave
    84f2:	c3                   	ret

00000000000084f3 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>:
	_M_get_pointer(const _Any_data& __source) noexcept
    84f3:	55                   	push   %rbp
    84f4:	48 89 e5             	mov    %rsp,%rbp
    84f7:	48 83 ec 20          	sub    $0x20,%rsp
    84fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      const _Functor& __f = __source._M_access<_Functor>();
    84ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8503:	48 89 c7             	mov    %rax,%rdi
    8506:	e8 05 0f 00 00       	call   9410 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>
    850b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      return const_cast<_Functor*>(std::__addressof(__f));
    850f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8513:	48 89 c7             	mov    %rax,%rdi
    8516:	e8 0f 0f 00 00       	call   942a <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>
	}
    851b:	c9                   	leave
    851c:	c3                   	ret

000000000000851d <_ZSt10__invoke_rIvRZN4neko6Engine5startEvEUlvE_JEENSt9enable_ifIX16is_invocable_r_vIT_T0_DpT1_EES5_E4typeEOS6_DpOS7_>:

#if __cplusplus >= 201703L
  // INVOKE<R>: Invoke a callable object and convert the result to R.
  template<typename _Res, typename _Callable, typename... _Args>
    constexpr enable_if_t<is_invocable_r_v<_Res, _Callable, _Args...>, _Res>
    __invoke_r(_Callable&& __fn, _Args&&... __args)
    851d:	55                   	push   %rbp
    851e:	48 89 e5             	mov    %rsp,%rbp
    8521:	48 83 ec 10          	sub    $0x10,%rsp
    8525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      using __result = __invoke_result<_Callable, _Args...>;
      using __type = typename __result::type;
      using __tag = typename __result::__invoke_type;
      if constexpr (is_void_v<_Res>)
	std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    8529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    852d:	48 89 c7             	mov    %rax,%rdi
    8530:	e8 03 0f 00 00       	call   9438 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    8535:	48 89 c7             	mov    %rax,%rdi
    8538:	e8 09 0f 00 00       	call   9446 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
      else
	return std::__invoke_impl<__type>(__tag{},
					  std::forward<_Callable>(__fn),
					  std::forward<_Args>(__args)...);
    }
    853d:	90                   	nop
    853e:	c9                   	leave
    853f:	c3                   	ret

0000000000008540 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    8540:	55                   	push   %rbp
    8541:	48 89 e5             	mov    %rsp,%rbp
    8544:	48 83 ec 10          	sub    $0x10,%rsp
    8548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    854c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8550:	48 89 c7             	mov    %rax,%rdi
    8553:	e8 76 b7 ff ff       	call   3cce <_ZNSt9_Any_data9_M_accessEv>
    8558:	c9                   	leave
    8559:	c3                   	ret

000000000000855a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation>:
	_M_manager(_Any_data& __dest, const _Any_data& __source,
    855a:	55                   	push   %rbp
    855b:	48 89 e5             	mov    %rsp,%rbp
    855e:	53                   	push   %rbx
    855f:	48 83 ec 28          	sub    $0x28,%rsp
    8563:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8567:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    856b:	89 55 dc             	mov    %edx,-0x24(%rbp)
	  switch (__op)
    856e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    8571:	83 f8 03             	cmp    $0x3,%eax
    8574:	74 72                	je     85e8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x8e>
    8576:	83 f8 03             	cmp    $0x3,%eax
    8579:	7f 7a                	jg     85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    857b:	83 f8 02             	cmp    $0x2,%eax
    857e:	74 48                	je     85c8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x6e>
    8580:	83 f8 02             	cmp    $0x2,%eax
    8583:	7f 70                	jg     85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
    8585:	85 c0                	test   %eax,%eax
    8587:	74 07                	je     8590 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x36>
    8589:	83 f8 01             	cmp    $0x1,%eax
    858c:	74 1a                	je     85a8 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x4e>
    858e:	eb 65                	jmp    85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<const type_info*>() = &typeid(_Functor);
    8590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8594:	48 89 c7             	mov    %rax,%rdi
    8597:	e8 94 f0 ff ff       	call   7630 <_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v>
    859c:	48 8d 15 b5 87 01 00 	lea    0x187b5(%rip),%rdx        # 20d58 <_ZTVN10__cxxabiv117__class_type_infoE@CXXABI_1.3>
    85a3:	48 89 10             	mov    %rdx,(%rax)
	      break;
    85a6:	eb 4d                	jmp    85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      __dest._M_access<_Functor*>() = _M_get_pointer(__source);
    85a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85ac:	48 89 c7             	mov    %rax,%rdi
    85af:	e8 3f ff ff ff       	call   84f3 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    85b4:	48 89 c3             	mov    %rax,%rbx
    85b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85bb:	48 89 c7             	mov    %rax,%rdi
    85be:	e8 7d ff ff ff       	call   8540 <_ZNSt9_Any_data9_M_accessIPZN4neko6Engine5startEvEUlvE_EERT_v>
    85c3:	48 89 18             	mov    %rbx,(%rax)
	      break;
    85c6:	eb 2d                	jmp    85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
		  *const_cast<const _Functor*>(_M_get_pointer(__source)));
    85c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85cc:	48 89 c7             	mov    %rax,%rdi
    85cf:	e8 1f ff ff ff       	call   84f3 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E14_M_get_pointerERKSt9_Any_data>
    85d4:	48 89 c2             	mov    %rax,%rdx
	      _M_init_functor(__dest,
    85d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85db:	48 89 d6             	mov    %rdx,%rsi
    85de:	48 89 c7             	mov    %rax,%rdi
    85e1:	e8 83 0e 00 00       	call   9469 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>
	      break;
    85e6:	eb 0d                	jmp    85f5 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_managerERSt9_Any_dataRKS5_St18_Manager_operation+0x9b>
	      _M_destroy(__dest, _Local_storage());
    85e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85ec:	48 89 c7             	mov    %rax,%rdi
    85ef:	e8 a6 0e 00 00       	call   949a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>
	      break;
    85f4:	90                   	nop
	  return false;
    85f5:	b8 00 00 00 00       	mov    $0x0,%eax
	}
    85fa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85fe:	c9                   	leave
    85ff:	c3                   	ret

0000000000008600 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    8600:	55                   	push   %rbp
    8601:	48 89 e5             	mov    %rsp,%rbp
    8604:	53                   	push   %rbx
    8605:	48 83 ec 18          	sub    $0x18,%rsp
    8609:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    860d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8615:	48 89 c7             	mov    %rax,%rdi
    8618:	e8 99 0e 00 00       	call   94b6 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    861d:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    8621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8625:	48 89 c7             	mov    %rax,%rdi
    8628:	e8 2b ea ff ff       	call   7058 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    862d:	48 89 18             	mov    %rbx,(%rax)
    8630:	90                   	nop
    8631:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8635:	c9                   	leave
    8636:	c3                   	ret

0000000000008637 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8637:	55                   	push   %rbp
    8638:	48 89 e5             	mov    %rsp,%rbp
    863b:	48 83 ec 10          	sub    $0x10,%rsp
    863f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8643:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8647:	48 89 c7             	mov    %rax,%rdi
    864a:	e8 82 0e 00 00       	call   94d1 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    864f:	c9                   	leave
    8650:	c3                   	ret
    8651:	90                   	nop

0000000000008652 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    8652:	55                   	push   %rbp
    8653:	48 89 e5             	mov    %rsp,%rbp
    8656:	48 83 ec 10          	sub    $0x10,%rsp
    865a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    865e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8662:	48 89 c7             	mov    %rax,%rdi
    8665:	e8 81 0e 00 00       	call   94eb <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    866a:	c9                   	leave
    866b:	c3                   	ret

000000000000866c <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    866c:	55                   	push   %rbp
    866d:	48 89 e5             	mov    %rsp,%rbp
    8670:	48 83 ec 10          	sub    $0x10,%rsp
    8674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    867c:	48 89 c7             	mov    %rax,%rdi
    867f:	e8 81 0e 00 00       	call   9505 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    8684:	48 8b 00             	mov    (%rax),%rax
    8687:	c9                   	leave
    8688:	c3                   	ret

0000000000008689 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    8689:	55                   	push   %rbp
    868a:	48 89 e5             	mov    %rsp,%rbp
    868d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8691:	90                   	nop
    8692:	5d                   	pop    %rbp
    8693:	c3                   	ret

0000000000008694 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    8694:	55                   	push   %rbp
    8695:	48 89 e5             	mov    %rsp,%rbp
    8698:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    869c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    86a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86a4:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    86a8:	5d                   	pop    %rbp
    86a9:	c3                   	ret

00000000000086aa <_ZNSt15__new_allocatorISt6threadE10deallocateEPS0_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    86aa:	55                   	push   %rbp
    86ab:	48 89 e5             	mov    %rsp,%rbp
    86ae:	48 83 ec 20          	sub    $0x20,%rsp
    86b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    86ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    86be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    86c9:	00 
    86ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    86ce:	48 89 d6             	mov    %rdx,%rsi
    86d1:	48 89 c7             	mov    %rax,%rdi
    86d4:	e8 f7 ab ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    86d9:	c9                   	leave
    86da:	c3                   	ret

00000000000086db <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    86db:	55                   	push   %rbp
    86dc:	48 89 e5             	mov    %rsp,%rbp
    86df:	48 83 ec 10          	sub    $0x10,%rsp
    86e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    86e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    86eb:	eb 19                	jmp    8706 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    86ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f1:	48 89 c7             	mov    %rax,%rdi
    86f4:	e8 26 0e 00 00       	call   951f <_ZSt11__addressofISt6threadEPT_RS1_>
    86f9:	48 89 c7             	mov    %rax,%rdi
    86fc:	e8 2c 0e 00 00       	call   952d <_ZSt8_DestroyISt6threadEvPT_>
	  for (; __first != __last; ++__first)
    8701:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    8706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    870e:	75 dd                	jne    86ed <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6threadEEvT_S4_+0x12>
	}
    8710:	90                   	nop
    8711:	90                   	nop
    8712:	c9                   	leave
    8713:	c3                   	ret

0000000000008714 <_ZNSaISt8functionIFvvEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8714:	55                   	push   %rbp
    8715:	48 89 e5             	mov    %rsp,%rbp
    8718:	48 83 ec 10          	sub    $0x10,%rsp
    871c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8724:	48 89 c7             	mov    %rax,%rdi
    8727:	e8 1c 0e 00 00       	call   9548 <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>
    872c:	90                   	nop
    872d:	c9                   	leave
    872e:	c3                   	ret
    872f:	90                   	nop

0000000000008730 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_Deque_impl_dataC1Ev>:
	_Deque_impl_data() _GLIBCXX_NOEXCEPT
    8730:	55                   	push   %rbp
    8731:	48 89 e5             	mov    %rsp,%rbp
    8734:	48 83 ec 10          	sub    $0x10,%rsp
    8738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_map(), _M_map_size(), _M_start(), _M_finish()
    873c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8740:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    8747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    874b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8752:	00 
    8753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8757:	48 83 c0 10          	add    $0x10,%rax
    875b:	48 89 c7             	mov    %rax,%rdi
    875e:	e8 f1 0d 00 00       	call   9554 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
    8763:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8767:	48 83 c0 30          	add    $0x30,%rax
    876b:	48 89 c7             	mov    %rax,%rdi
    876e:	e8 e1 0d 00 00       	call   9554 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>
	{ }
    8773:	90                   	nop
    8774:	c9                   	leave
    8775:	c3                   	ret

0000000000008776 <_ZNSt15__new_allocatorISt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8776:	55                   	push   %rbp
    8777:	48 89 e5             	mov    %rsp,%rbp
    877a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    877e:	90                   	nop
    877f:	5d                   	pop    %rbp
    8780:	c3                   	ret
    8781:	90                   	nop

0000000000008782 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>:
      _M_allocate_map(size_t __n)
    8782:	55                   	push   %rbp
    8783:	48 89 e5             	mov    %rsp,%rbp
    8786:	53                   	push   %rbx
    8787:	48 83 ec 28          	sub    $0x28,%rsp
    878b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    878f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	_Map_alloc_type __map_alloc = _M_get_map_allocator();
    8793:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8797:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    879b:	48 89 d6             	mov    %rdx,%rsi
    879e:	48 89 c7             	mov    %rax,%rdi
    87a1:	e8 4c 01 00 00       	call   88f2 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    87a6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    87aa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87ae:	48 89 d6             	mov    %rdx,%rsi
    87b1:	48 89 c7             	mov    %rax,%rdi
    87b4:	e8 d5 0d 00 00       	call   958e <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>
    87b9:	48 89 c3             	mov    %rax,%rbx
    87bc:	90                   	nop
      }
    87bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87c1:	48 89 c7             	mov    %rax,%rdi
    87c4:	e8 5d 01 00 00       	call   8926 <_ZNSaIPSt8functionIFvvEEED1Ev>
	return _Map_alloc_traits::allocate(__map_alloc, __n);
    87c9:	48 89 d8             	mov    %rbx,%rax
    87cc:	eb 1a                	jmp    87e8 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm+0x66>
      }
    87ce:	48 89 c3             	mov    %rax,%rbx
    87d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    87d5:	48 89 c7             	mov    %rax,%rdi
    87d8:	e8 49 01 00 00       	call   8926 <_ZNSaIPSt8functionIFvvEEED1Ev>
    87dd:	48 89 d8             	mov    %rbx,%rax
    87e0:	48 89 c7             	mov    %rax,%rdi
    87e3:	e8 e8 ac ff ff       	call   34d0 <_Unwind_Resume@plt>
    87e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87ec:	c9                   	leave
    87ed:	c3                   	ret

00000000000087ee <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_>:
    _Deque_base<_Tp, _Alloc>::
    87ee:	55                   	push   %rbp
    87ef:	48 89 e5             	mov    %rsp,%rbp
    87f2:	53                   	push   %rbx
    87f3:	48 83 ec 38          	sub    $0x38,%rsp
    87f7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    87fb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    87ff:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    8803:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8807:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    880b:	eb 18                	jmp    8825 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x37>
	    *__cur = this->_M_allocate_node();
    880d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8811:	48 89 c7             	mov    %rax,%rdi
    8814:	e8 3b 03 00 00       	call   8b54 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>
    8819:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    881d:	48 89 02             	mov    %rax,(%rdx)
	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
    8820:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    8825:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8829:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    882d:	72 de                	jb     880d <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x1f>
    }
    882f:	eb 37                	jmp    8868 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_create_nodesEPPS2_S6_+0x7a>
      __catch(...)
    8831:	48 89 c7             	mov    %rax,%rdi
    8834:	e8 97 a8 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	  _M_destroy_nodes(__nstart, __cur);
    8839:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    883d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    8841:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8845:	48 89 ce             	mov    %rcx,%rsi
    8848:	48 89 c7             	mov    %rax,%rdi
    884b:	e8 72 eb ff ff       	call   73c2 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_destroy_nodesEPPS2_S6_>
	  __throw_exception_again;
    8850:	e8 bb ab ff ff       	call   3410 <__cxa_rethrow@plt>
      __catch(...)
    8855:	48 89 c3             	mov    %rax,%rbx
    8858:	e8 23 ac ff ff       	call   3480 <__cxa_end_catch@plt>
    885d:	48 89 d8             	mov    %rbx,%rax
    8860:	48 89 c7             	mov    %rax,%rdi
    8863:	e8 68 ac ff ff       	call   34d0 <_Unwind_Resume@plt>
    }
    8868:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    886c:	c9                   	leave
    886d:	c3                   	ret

000000000000886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>:
      _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
    886e:	55                   	push   %rbp
    886f:	48 89 e5             	mov    %rsp,%rbp
    8872:	53                   	push   %rbx
    8873:	48 83 ec 18          	sub    $0x18,%rsp
    8877:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    887b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_M_node = __new_node;
    887f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8883:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8887:	48 89 50 18          	mov    %rdx,0x18(%rax)
	_M_first = *__new_node;
    888b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    888f:	48 8b 10             	mov    (%rax),%rdx
    8892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8896:	48 89 50 08          	mov    %rdx,0x8(%rax)
	_M_last = _M_first + difference_type(_S_buffer_size());
    889a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    889e:	48 8b 58 08          	mov    0x8(%rax),%rbx
    88a2:	e8 11 0d 00 00       	call   95b8 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    88a7:	48 c1 e0 05          	shl    $0x5,%rax
    88ab:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    88af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    88b7:	90                   	nop
    88b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    88bc:	c9                   	leave
    88bd:	c3                   	ret

00000000000088be <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE18_M_deallocate_nodeEPS2_>:
      _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
    88be:	55                   	push   %rbp
    88bf:	48 89 e5             	mov    %rsp,%rbp
    88c2:	48 83 ec 10          	sub    $0x10,%rsp
    88c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
    88ce:	bf 20 00 00 00       	mov    $0x20,%edi
    88d3:	e8 f1 b4 ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    88d8:	48 89 c2             	mov    %rax,%rdx
    88db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    88e3:	48 89 ce             	mov    %rcx,%rsi
    88e6:	48 89 c7             	mov    %rax,%rdi
    88e9:	e8 da 0c 00 00       	call   95c8 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>
      }
    88ee:	90                   	nop
    88ef:	c9                   	leave
    88f0:	c3                   	ret
    88f1:	90                   	nop

00000000000088f2 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE20_M_get_map_allocatorEv>:
      _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
    88f2:	55                   	push   %rbp
    88f3:	48 89 e5             	mov    %rsp,%rbp
    88f6:	48 83 ec 10          	sub    $0x10,%rsp
    88fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _Map_alloc_type(_M_get_Tp_allocator()); }
    8902:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8906:	48 89 c7             	mov    %rax,%rdi
    8909:	e8 e8 0c 00 00       	call   95f6 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    890e:	48 89 c2             	mov    %rax,%rdx
    8911:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8915:	48 89 d6             	mov    %rdx,%rsi
    8918:	48 89 c7             	mov    %rax,%rdi
    891b:	e8 e4 0c 00 00       	call   9604 <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>
    8920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8924:	c9                   	leave
    8925:	c3                   	ret

0000000000008926 <_ZNSaIPSt8functionIFvvEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8926:	55                   	push   %rbp
    8927:	48 89 e5             	mov    %rsp,%rbp
    892a:	48 83 ec 10          	sub    $0x10,%rsp
    892e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8936:	48 89 c7             	mov    %rax,%rdi
    8939:	e8 e6 0c 00 00       	call   9624 <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>
    893e:	90                   	nop
    893f:	c9                   	leave
    8940:	c3                   	ret

0000000000008941 <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE10deallocateERS4_PS3_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    8941:	55                   	push   %rbp
    8942:	48 89 e5             	mov    %rsp,%rbp
    8945:	48 83 ec 20          	sub    $0x20,%rsp
    8949:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    894d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8951:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    8955:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8959:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    895d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8961:	48 89 ce             	mov    %rcx,%rsi
    8964:	48 89 c7             	mov    %rax,%rdi
    8967:	e8 c4 0c 00 00       	call   9630 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>
    896c:	90                   	nop
    896d:	c9                   	leave
    896e:	c3                   	ret

000000000000896f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    896f:	55                   	push   %rbp
    8970:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    8973:	bf 20 00 00 00       	mov    $0x20,%edi
    8978:	e8 4c b4 ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    897d:	5d                   	pop    %rbp
    897e:	c3                   	ret

000000000000897f <_ZSt8_DestroyIPSt8functionIFvvEES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    897f:	55                   	push   %rbp
    8980:	48 89 e5             	mov    %rsp,%rbp
    8983:	48 83 ec 20          	sub    $0x20,%rsp
    8987:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    898b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    898f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8993:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8997:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    899b:	48 89 d6             	mov    %rdx,%rsi
    899e:	48 89 c7             	mov    %rax,%rdi
    89a1:	e8 bb 0c 00 00       	call   9661 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>
    }
    89a6:	90                   	nop
    89a7:	c9                   	leave
    89a8:	c3                   	ret
    89a9:	90                   	nop

00000000000089aa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    89aa:	55                   	push   %rbp
    89ab:	48 89 e5             	mov    %rsp,%rbp
    89ae:	53                   	push   %rbx
    89af:	48 83 ec 18          	sub    $0x18,%rsp
    89b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    89b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    89bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89bf:	48 89 c7             	mov    %rax,%rdi
    89c2:	e8 b9 f2 ff ff       	call   7c80 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    89c7:	48 89 c3             	mov    %rax,%rbx
    89ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89ce:	48 89 c7             	mov    %rax,%rdi
    89d1:	e8 b2 0c 00 00       	call   9688 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    89d6:	48 89 de             	mov    %rbx,%rsi
    89d9:	48 89 c7             	mov    %rax,%rdi
    89dc:	e8 b5 0c 00 00       	call   9696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>
      }
    89e1:	90                   	nop
    89e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    89e6:	c9                   	leave
    89e7:	c3                   	ret

00000000000089e8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    89e8:	55                   	push   %rbp
    89e9:	48 89 e5             	mov    %rsp,%rbp
    89ec:	48 83 ec 10          	sub    $0x10,%rsp
    89f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    89f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89fc:	48 89 c7             	mov    %rax,%rdi
    89ff:	e8 84 0c 00 00       	call   9688 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    8a04:	48 89 c1             	mov    %rax,%rcx
    8a07:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8a0b:	ba 01 00 00 00       	mov    $0x1,%edx
    8a10:	48 89 c6             	mov    %rax,%rsi
    8a13:	48 89 cf             	mov    %rcx,%rdi
    8a16:	e8 a1 0c 00 00       	call   96bc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>
    8a1b:	90                   	nop
    8a1c:	c9                   	leave
    8a1d:	c3                   	ret

0000000000008a1e <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8a1e:	55                   	push   %rbp
    8a1f:	48 89 e5             	mov    %rsp,%rbp
    8a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    8a26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a2a:	5d                   	pop    %rbp
    8a2b:	c3                   	ret

0000000000008a2c <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_>:
      { return _M_max_size(); }

#if __cplusplus >= 201103L
      template<typename _Up, typename... _Args>
	void
	construct(_Up* __p, _Args&&... __args)
    8a2c:	55                   	push   %rbp
    8a2d:	48 89 e5             	mov    %rsp,%rbp
    8a30:	41 56                	push   %r14
    8a32:	41 55                	push   %r13
    8a34:	41 54                	push   %r12
    8a36:	53                   	push   %rbx
    8a37:	48 83 ec 20          	sub    $0x20,%rsp
    8a3b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a3f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8a43:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    8a47:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx
    8a4b:	48 89 de             	mov    %rbx,%rsi
    8a4e:	bf 20 00 00 00       	mov    $0x20,%edi
    8a53:	e8 68 ae ff ff       	call   38c0 <_ZnwmPv>
    8a58:	49 89 c4             	mov    %rax,%r12
    8a5b:	41 be 01 00 00 00    	mov    $0x1,%r14d
    8a61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8a65:	48 89 c7             	mov    %rax,%rdi
    8a68:	e8 b1 ff ff ff       	call   8a1e <_ZSt7forwardIRKSt8functionIFvvEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8a6d:	48 89 c6             	mov    %rax,%rsi
    8a70:	4c 89 e7             	mov    %r12,%rdi
    8a73:	e8 58 db ff ff       	call   65d0 <_ZNSt8functionIFvvEEC1ERKS1_>
    8a78:	eb 1e                	jmp    8a98 <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x6c>
    8a7a:	49 89 c5             	mov    %rax,%r13
    8a7d:	45 84 f6             	test   %r14b,%r14b
    8a80:	74 0b                	je     8a8d <_ZNSt15__new_allocatorISt8functionIFvvEEE9constructIS2_JRKS2_EEEvPT_DpOT0_+0x61>
    8a82:	48 89 de             	mov    %rbx,%rsi
    8a85:	4c 89 e7             	mov    %r12,%rdi
    8a88:	e8 45 ae ff ff       	call   38d2 <_ZdlPvS_>
    8a8d:	4c 89 e8             	mov    %r13,%rax
    8a90:	48 89 c7             	mov    %rax,%rdi
    8a93:	e8 38 aa ff ff       	call   34d0 <_Unwind_Resume@plt>
    8a98:	48 83 c4 20          	add    $0x20,%rsp
    8a9c:	5b                   	pop    %rbx
    8a9d:	41 5c                	pop    %r12
    8a9f:	41 5d                	pop    %r13
    8aa1:	41 5e                	pop    %r14
    8aa3:	5d                   	pop    %rbp
    8aa4:	c3                   	ret
    8aa5:	90                   	nop

0000000000008aa6 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8aa6:	55                   	push   %rbp
    8aa7:	48 89 e5             	mov    %rsp,%rbp
    8aaa:	48 83 ec 10          	sub    $0x10,%rsp
    8aae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_finish - this->_M_impl._M_start; }
    8ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ab6:	48 8d 50 10          	lea    0x10(%rax),%rdx
    8aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8abe:	48 83 c0 30          	add    $0x30,%rax
    8ac2:	48 89 d6             	mov    %rdx,%rsi
    8ac5:	48 89 c7             	mov    %rax,%rdi
    8ac8:	e8 1d 0c 00 00       	call   96ea <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>
    8acd:	c9                   	leave
    8ace:	c3                   	ret
    8acf:	90                   	nop

0000000000008ad0 <_ZNKSt5dequeISt8functionIFvvEESaIS2_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    8ad0:	55                   	push   %rbp
    8ad1:	48 89 e5             	mov    %rsp,%rbp
    8ad4:	48 83 ec 10          	sub    $0x10,%rsp
    8ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    8adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae0:	48 89 c7             	mov    %rax,%rdi
    8ae3:	e8 0e 0b 00 00       	call   95f6 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>
    8ae8:	48 89 c7             	mov    %rax,%rdi
    8aeb:	e8 82 0c 00 00       	call   9772 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>
    8af0:	c9                   	leave
    8af1:	c3                   	ret

0000000000008af2 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm>:
       *  Makes sure the _M_map has space for new nodes.  Does not
       *  actually add the nodes.  Can invalidate _M_map pointers.
       *  (And consequently, %deque iterators.)
       */
      void
      _M_reserve_map_at_back(size_type __nodes_to_add = 1)
    8af2:	55                   	push   %rbp
    8af3:	48 89 e5             	mov    %rsp,%rbp
    8af6:	48 83 ec 10          	sub    $0x10,%rsp
    8afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8afe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      {
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    8b02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b06:	48 8d 50 01          	lea    0x1(%rax),%rdx
    8b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b0e:	48 8b 48 08          	mov    0x8(%rax),%rcx
	    - (this->_M_impl._M_finish._M_node - this->_M_impl._M_map))
    8b12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b16:	48 8b 70 48          	mov    0x48(%rax),%rsi
    8b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b1e:	48 8b 00             	mov    (%rax),%rax
    8b21:	48 29 c6             	sub    %rax,%rsi
    8b24:	48 89 f0             	mov    %rsi,%rax
    8b27:	48 c1 f8 03          	sar    $0x3,%rax
    8b2b:	48 89 c6             	mov    %rax,%rsi
    8b2e:	48 89 c8             	mov    %rcx,%rax
    8b31:	48 29 f0             	sub    %rsi,%rax
	if (__nodes_to_add + 1 > this->_M_impl._M_map_size
    8b34:	48 39 d0             	cmp    %rdx,%rax
    8b37:	73 18                	jae    8b51 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE22_M_reserve_map_at_backEm+0x5f>
	  _M_reallocate_map(__nodes_to_add, false);
    8b39:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b41:	ba 00 00 00 00       	mov    $0x0,%edx
    8b46:	48 89 ce             	mov    %rcx,%rsi
    8b49:	48 89 c7             	mov    %rax,%rdi
    8b4c:	e8 63 0c 00 00       	call   97b4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>
      }
    8b51:	90                   	nop
    8b52:	c9                   	leave
    8b53:	c3                   	ret

0000000000008b54 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE16_M_allocate_nodeEv>:
      _M_allocate_node()
    8b54:	55                   	push   %rbp
    8b55:	48 89 e5             	mov    %rsp,%rbp
    8b58:	48 83 ec 10          	sub    $0x10,%rsp
    8b5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
    8b60:	bf 20 00 00 00       	mov    $0x20,%edi
    8b65:	e8 5f b2 ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    8b6a:	48 89 c2             	mov    %rax,%rdx
    8b6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b71:	48 89 d6             	mov    %rdx,%rsi
    8b74:	48 89 c7             	mov    %rax,%rdi
    8b77:	e8 57 0e 00 00       	call   99d3 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>
      }
    8b7c:	c9                   	leave
    8b7d:	c3                   	ret

0000000000008b7e <_ZNSt6vectorISt6threadSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    8b7e:	55                   	push   %rbp
    8b7f:	48 89 e5             	mov    %rsp,%rbp
    8b82:	48 83 ec 20          	sub    $0x20,%rsp
    8b86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    8b8a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    8b91:	ff ff 0f 
    8b94:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    8b98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8b9c:	48 89 c7             	mov    %rax,%rdi
    8b9f:	e8 59 0e 00 00       	call   99fd <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>
    8ba4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    8ba8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    8bac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8bb0:	48 89 d6             	mov    %rdx,%rsi
    8bb3:	48 89 c7             	mov    %rax,%rdi
    8bb6:	e8 81 b1 ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    8bbb:	48 8b 00             	mov    (%rax),%rax
      }
    8bbe:	c9                   	leave
    8bbf:	c3                   	ret

0000000000008bc0 <_ZNKSt12_Vector_baseISt6threadSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    8bc0:	55                   	push   %rbp
    8bc1:	48 89 e5             	mov    %rsp,%rbp
    8bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8bc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bcc:	5d                   	pop    %rbp
    8bcd:	c3                   	ret

0000000000008bce <_ZSt25__uninitialized_default_nIPSt6threadmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    8bce:	55                   	push   %rbp
    8bcf:	48 89 e5             	mov    %rsp,%rbp
    8bd2:	48 83 ec 20          	sub    $0x20,%rsp
    8bd6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8bda:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    8bde:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    8be2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8be6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bea:	48 89 d6             	mov    %rdx,%rsi
    8bed:	48 89 c7             	mov    %rax,%rdi
    8bf0:	e8 22 0e 00 00       	call   9a17 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>
    }
    8bf5:	c9                   	leave
    8bf6:	c3                   	ret

0000000000008bf7 <_ZNSt16allocator_traitsISaISt6threadEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    8bf7:	55                   	push   %rbp
    8bf8:	48 89 e5             	mov    %rsp,%rbp
    8bfb:	48 83 ec 10          	sub    $0x10,%rsp
    8bff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    8c07:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c0f:	ba 00 00 00 00       	mov    $0x0,%edx
    8c14:	48 89 ce             	mov    %rcx,%rsi
    8c17:	48 89 c7             	mov    %rax,%rdi
    8c1a:	e8 3d 0e 00 00       	call   9a5c <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>
    8c1f:	c9                   	leave
    8c20:	c3                   	ret

0000000000008c21 <_ZSt12__relocate_aIPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    8c21:	55                   	push   %rbp
    8c22:	48 89 e5             	mov    %rsp,%rbp
    8c25:	41 54                	push   %r12
    8c27:	53                   	push   %rbx
    8c28:	48 83 ec 20          	sub    $0x20,%rsp
    8c2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8c38:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    8c3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c40:	48 89 c7             	mov    %rax,%rdi
    8c43:	e8 75 0e 00 00       	call   9abd <_ZSt12__niter_baseIPSt6threadET_S2_>
    8c48:	49 89 c4             	mov    %rax,%r12
    8c4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c4f:	48 89 c7             	mov    %rax,%rdi
    8c52:	e8 66 0e 00 00       	call   9abd <_ZSt12__niter_baseIPSt6threadET_S2_>
    8c57:	48 89 c3             	mov    %rax,%rbx
    8c5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c5e:	48 89 c7             	mov    %rax,%rdi
    8c61:	e8 57 0e 00 00       	call   9abd <_ZSt12__niter_baseIPSt6threadET_S2_>
    8c66:	48 89 c7             	mov    %rax,%rdi
    8c69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8c6d:	48 89 c1             	mov    %rax,%rcx
    8c70:	4c 89 e2             	mov    %r12,%rdx
    8c73:	48 89 de             	mov    %rbx,%rsi
    8c76:	e8 50 0e 00 00       	call   9acb <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    8c7b:	48 83 c4 20          	add    $0x20,%rsp
    8c7f:	5b                   	pop    %rbx
    8c80:	41 5c                	pop    %r12
    8c82:	5d                   	pop    %rbp
    8c83:	c3                   	ret

0000000000008c84 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EEC1IRS3_JS2_EvEEOT_DpOT0_>:
	_Tuple_impl(_UHead&& __head, _UTail&&... __tail)
    8c84:	55                   	push   %rbp
    8c85:	48 89 e5             	mov    %rsp,%rbp
    8c88:	53                   	push   %rbx
    8c89:	48 83 ec 38          	sub    $0x38,%rsp
    8c8d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c91:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8c95:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Base(std::forward<_UHead>(__head))
    8c99:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8c9d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8ca1:	48 89 c7             	mov    %rax,%rdi
    8ca4:	e8 b5 d7 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    8ca9:	48 89 c6             	mov    %rax,%rsi
    8cac:	48 89 df             	mov    %rbx,%rdi
    8caf:	e8 88 0e 00 00       	call   9b3c <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>
    8cb4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8cb8:	48 8d 58 08          	lea    0x8(%rax),%rbx
    8cbc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8cc0:	48 89 c7             	mov    %rax,%rdi
    8cc3:	e8 88 d7 ff ff       	call   6450 <_ZSt7forwardIRFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8cc8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    8ccc:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8cd0:	48 89 c6             	mov    %rax,%rsi
    8cd3:	48 89 df             	mov    %rbx,%rdi
    8cd6:	e8 95 0e 00 00       	call   9b70 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>
	{ }
    8cdb:	90                   	nop
    8cdc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ce0:	c9                   	leave
    8ce1:	c3                   	ret

0000000000008ce2 <_ZNSt5tupleIJPNSt6thread6_StateESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    8ce2:	55                   	push   %rbp
    8ce3:	48 89 e5             	mov    %rsp,%rbp
    8ce6:	48 83 ec 10          	sub    $0x10,%rsp
    8cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    8cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf2:	48 89 c7             	mov    %rax,%rdi
    8cf5:	e8 94 0e 00 00       	call   9b8e <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>
    8cfa:	90                   	nop
    8cfb:	c9                   	leave
    8cfc:	c3                   	ret

0000000000008cfd <_ZSt3getILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    8cfd:	55                   	push   %rbp
    8cfe:	48 89 e5             	mov    %rsp,%rbp
    8d01:	48 83 ec 10          	sub    $0x10,%rsp
    8d05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8d09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0d:	48 89 c7             	mov    %rax,%rdi
    8d10:	e8 a0 0e 00 00       	call   9bb5 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    8d15:	c9                   	leave
    8d16:	c3                   	ret
    8d17:	90                   	nop

0000000000008d18 <_ZNSt15__uniq_ptr_implINSt6thread6_StateESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    8d18:	55                   	push   %rbp
    8d19:	48 89 e5             	mov    %rsp,%rbp
    8d1c:	48 83 ec 10          	sub    $0x10,%rsp
    8d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d28:	48 89 c7             	mov    %rax,%rdi
    8d2b:	e8 9f 0e 00 00       	call   9bcf <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    8d30:	c9                   	leave
    8d31:	c3                   	ret

0000000000008d32 <_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    8d32:	55                   	push   %rbp
    8d33:	48 89 e5             	mov    %rsp,%rbp
    8d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d3e:	5d                   	pop    %rbp
    8d3f:	c3                   	ret

0000000000008d40 <_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    8d40:	55                   	push   %rbp
    8d41:	48 89 e5             	mov    %rsp,%rbp
    8d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d4c:	5d                   	pop    %rbp
    8d4d:	c3                   	ret

0000000000008d4e <_ZSt4moveIRPFvRKSt9_Any_dataEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
    8d4e:	55                   	push   %rbp
    8d4f:	48 89 e5             	mov    %rsp,%rbp
    8d52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    8d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d5a:	5d                   	pop    %rbp
    8d5b:	c3                   	ret

0000000000008d5c <_ZNSt15__new_allocatorISt8functionIFvvEEE7destroyIS2_EEvPT_>:

      template<typename _Up>
	void
	destroy(_Up* __p)
    8d5c:	55                   	push   %rbp
    8d5d:	48 89 e5             	mov    %rsp,%rbp
    8d60:	48 83 ec 10          	sub    $0x10,%rsp
    8d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	noexcept(std::is_nothrow_destructible<_Up>::value)
	{ __p->~_Up(); }
    8d6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d70:	48 89 c7             	mov    %rax,%rdi
    8d73:	e8 3e b4 ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
    8d78:	90                   	nop
    8d79:	c9                   	leave
    8d7a:	c3                   	ret
    8d7b:	90                   	nop

0000000000008d7c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    8d7c:	55                   	push   %rbp
    8d7d:	48 89 e5             	mov    %rsp,%rbp
    8d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    8d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d88:	48 83 c0 08          	add    $0x8,%rax
    8d8c:	5d                   	pop    %rbp
    8d8d:	c3                   	ret

0000000000008d8e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8d8e:	55                   	push   %rbp
    8d8f:	48 89 e5             	mov    %rsp,%rbp
    8d92:	53                   	push   %rbx
    8d93:	48 83 ec 38          	sub    $0x38,%rsp
    8d97:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d9b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8d9f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8da3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    8da7:	eb 56                	jmp    8dff <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    8da9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8dad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8db1:	48 89 c7             	mov    %rax,%rdi
    8db4:	e8 e7 03 00 00       	call   91a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8db9:	48 89 c1             	mov    %rax,%rcx
    8dbc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8dc0:	48 89 c2             	mov    %rax,%rdx
    8dc3:	48 89 ce             	mov    %rcx,%rsi
    8dc6:	48 89 df             	mov    %rbx,%rdi
    8dc9:	e8 12 da ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8dce:	83 f0 01             	xor    $0x1,%eax
    8dd1:	84 c0                	test   %al,%al
    8dd3:	74 1a                	je     8def <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x61>
	  __y = __x, __x = _S_left(__x);
    8dd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8dd9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8ddd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8de1:	48 89 c7             	mov    %rax,%rdi
    8de4:	e8 e8 e7 ff ff       	call   75d1 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8de9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    8ded:	eb 10                	jmp    8dff <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x71>
	  __x = _S_right(__x);
    8def:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8df3:	48 89 c7             	mov    %rax,%rdi
    8df6:	e8 c4 e7 ff ff       	call   75bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    8dfb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    8dff:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    8e04:	75 a3                	jne    8da9 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS4_EPSt18_Rb_tree_node_baseRS3_+0x1b>
      return iterator(__y);
    8e06:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8e0a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8e0e:	48 89 d6             	mov    %rdx,%rsi
    8e11:	48 89 c7             	mov    %rax,%rdi
    8e14:	e8 65 f4 ff ff       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8e19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    8e1d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e21:	c9                   	leave
    8e22:	c3                   	ret
    8e23:	90                   	nop

0000000000008e24 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    8e24:	55                   	push   %rbp
    8e25:	48 89 e5             	mov    %rsp,%rbp
    8e28:	48 83 ec 10          	sub    $0x10,%rsp
    8e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    8e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e34:	48 89 c7             	mov    %rax,%rdi
    8e37:	e8 ae 0d 00 00       	call   9bea <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    8e3c:	c9                   	leave
    8e3d:	c3                   	ret

0000000000008e3e <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1IS1_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    8e3e:	55                   	push   %rbp
    8e3f:	48 89 e5             	mov    %rsp,%rbp
    8e42:	53                   	push   %rbx
    8e43:	48 83 ec 18          	sub    $0x18,%rsp
    8e47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    8e4f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8e53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e57:	48 89 c7             	mov    %rax,%rdi
    8e5a:	e8 3f ee ff ff       	call   7c9e <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    8e5f:	48 89 c6             	mov    %rax,%rsi
    8e62:	48 89 df             	mov    %rbx,%rdi
    8e65:	e8 8e 0d 00 00       	call   9bf8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>
	{ }
    8e6a:	90                   	nop
    8e6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e6f:	c9                   	leave
    8e70:	c3                   	ret
    8e71:	90                   	nop

0000000000008e72 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_create_node(_Args&&... __args)
    8e72:	55                   	push   %rbp
    8e73:	48 89 e5             	mov    %rsp,%rbp
    8e76:	41 54                	push   %r12
    8e78:	53                   	push   %rbx
    8e79:	48 83 ec 30          	sub    $0x30,%rsp
    8e7d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8e81:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8e85:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8e89:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    8e8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e91:	48 89 c7             	mov    %rax,%rdi
    8e94:	e8 85 0d 00 00       	call   9c1e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>
    8e99:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    8e9d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    8ea1:	48 89 c7             	mov    %rax,%rdi
    8ea4:	e8 52 ee ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    8ea9:	49 89 c4             	mov    %rax,%r12
    8eac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    8eb0:	48 89 c7             	mov    %rax,%rdi
    8eb3:	e8 35 ee ff ff       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    8eb8:	48 89 c3             	mov    %rax,%rbx
    8ebb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ebf:	48 89 c7             	mov    %rax,%rdi
    8ec2:	e8 18 ee ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8ec7:	48 89 c2             	mov    %rax,%rdx
    8eca:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8ece:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ed2:	4d 89 e0             	mov    %r12,%r8
    8ed5:	48 89 d9             	mov    %rbx,%rcx
    8ed8:	48 89 c7             	mov    %rax,%rdi
    8edb:	e8 66 0d 00 00       	call   9c46 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>
	  return __tmp;
    8ee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8ee4:	48 83 c4 30          	add    $0x30,%rsp
    8ee8:	5b                   	pop    %rbx
    8ee9:	41 5c                	pop    %r12
    8eeb:	5d                   	pop    %rbp
    8eec:	c3                   	ret
    8eed:	90                   	nop

0000000000008eee <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt6thread2idEmEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    8eee:	55                   	push   %rbp
    8eef:	48 89 e5             	mov    %rsp,%rbp
    8ef2:	48 83 ec 20          	sub    $0x20,%rsp
    8ef6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    8efa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8efe:	48 8b 10             	mov    (%rax),%rdx
    8f01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8f05:	48 89 d6             	mov    %rdx,%rsi
    8f08:	48 89 c7             	mov    %rax,%rdi
    8f0b:	e8 6e f3 ff ff       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    8f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f14:	c9                   	leave
    8f15:	c3                   	ret

0000000000008f16 <_ZNKSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8f16:	55                   	push   %rbp
    8f17:	48 89 e5             	mov    %rsp,%rbp
    8f1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    8f1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f22:	48 8b 40 28          	mov    0x28(%rax),%rax
    8f26:	5d                   	pop    %rbp
    8f27:	c3                   	ret

0000000000008f28 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    8f28:	55                   	push   %rbp
    8f29:	48 89 e5             	mov    %rsp,%rbp
    8f2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    8f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f34:	48 83 c0 20          	add    $0x20,%rax
    8f38:	5d                   	pop    %rbp
    8f39:	c3                   	ret

0000000000008f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    8f3a:	55                   	push   %rbp
    8f3b:	48 89 e5             	mov    %rsp,%rbp
    8f3e:	48 83 ec 10          	sub    $0x10,%rsp
    8f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    8f46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f4a:	48 89 c7             	mov    %rax,%rdi
    8f4d:	e8 4e 02 00 00       	call   91a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8f52:	c9                   	leave
    8f53:	c3                   	ret

0000000000008f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    8f54:	55                   	push   %rbp
    8f55:	48 89 e5             	mov    %rsp,%rbp
    8f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    8f64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8f68:	48 8b 10             	mov    (%rax),%rdx
    8f6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f6f:	48 89 10             	mov    %rdx,(%rax)
    8f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f76:	48 8b 10             	mov    (%rax),%rdx
    8f79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    8f81:	90                   	nop
    8f82:	5d                   	pop    %rbp
    8f83:	c3                   	ret

0000000000008f84 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    8f84:	55                   	push   %rbp
    8f85:	48 89 e5             	mov    %rsp,%rbp
    8f88:	53                   	push   %rbx
    8f89:	48 83 ec 78          	sub    $0x78,%rsp
    8f8d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    8f91:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    8f95:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8f99:	48 89 c7             	mov    %rax,%rdi
    8f9c:	e8 b9 d0 ff ff       	call   605a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_M_beginEv>
    8fa1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    8fa5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8fa9:	48 89 c7             	mov    %rax,%rdi
    8fac:	e8 cb fd ff ff       	call   8d7c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    8fb1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    8fb5:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    8fb9:	eb 51                	jmp    900c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x88>
	  __y = __x;
    8fbb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8fbf:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    8fc3:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    8fc7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8fcb:	48 89 c7             	mov    %rax,%rdi
    8fce:	e8 cd 01 00 00       	call   91a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    8fd3:	48 89 c2             	mov    %rax,%rdx
    8fd6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    8fda:	48 89 c6             	mov    %rax,%rsi
    8fdd:	48 89 df             	mov    %rbx,%rdi
    8fe0:	e8 fb d7 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    8fe5:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    8fe8:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    8fec:	74 0e                	je     8ffc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x78>
    8fee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    8ff2:	48 89 c7             	mov    %rax,%rdi
    8ff5:	e8 d7 e5 ff ff       	call   75d1 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE7_S_leftEPSt18_Rb_tree_node_base>
    8ffa:	eb 0c                	jmp    9008 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x84>
    8ffc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9000:	48 89 c7             	mov    %rax,%rdi
    9003:	e8 b7 e5 ff ff       	call   75bf <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE8_S_rightEPSt18_Rb_tree_node_base>
    9008:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    900c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    9010:	48 85 c0             	test   %rax,%rax
    9013:	75 a6                	jne    8fbb <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x37>
      iterator __j = iterator(__y);
    9015:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    9019:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    901d:	48 89 d6             	mov    %rdx,%rsi
    9020:	48 89 c7             	mov    %rax,%rdi
    9023:	e8 56 f2 ff ff       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    9028:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    902c:	74 54                	je     9082 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xfe>
	  if (__j == begin())
    902e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    9032:	48 89 c7             	mov    %rax,%rdi
    9035:	e8 de 0c 00 00       	call   9d18 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>
    903a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    903e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    9042:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    9046:	48 89 d6             	mov    %rdx,%rsi
    9049:	48 89 c7             	mov    %rax,%rdi
    904c:	e8 33 d7 ff ff       	call   6784 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEES7_>
    9051:	84 c0                	test   %al,%al
    9053:	74 21                	je     9076 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0xf2>
	    return _Res(__x, __y);
    9055:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    9059:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    905d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    9061:	48 89 ce             	mov    %rcx,%rsi
    9064:	48 89 c7             	mov    %rax,%rdi
    9067:	e8 d6 0c 00 00       	call   9d42 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    906c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    9070:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9074:	eb 7d                	jmp    90f3 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
	    --__j;
    9076:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    907a:	48 89 c7             	mov    %rax,%rdi
    907d:	e8 ce 00 00 00       	call   9150 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    9082:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    9086:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    908a:	48 89 c7             	mov    %rax,%rdi
    908d:	e8 a8 fe ff ff       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    9092:	48 89 c1             	mov    %rax,%rcx
    9095:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    9099:	48 89 c2             	mov    %rax,%rdx
    909c:	48 89 ce             	mov    %rcx,%rsi
    909f:	48 89 df             	mov    %rbx,%rdi
    90a2:	e8 39 d7 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    90a7:	84 c0                	test   %al,%al
    90a9:	74 21                	je     90cc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x148>
	return _Res(__x, __y);
    90ab:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    90af:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    90b3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    90b7:	48 89 ce             	mov    %rcx,%rsi
    90ba:	48 89 c7             	mov    %rax,%rdi
    90bd:	e8 80 0c 00 00       	call   9d42 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>
    90c2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    90c6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    90ca:	eb 27                	jmp    90f3 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE24_M_get_insert_unique_posERS3_+0x16f>
      return _Res(__j._M_node, 0);
    90cc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    90d3:	00 
    90d4:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    90d8:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    90dc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    90e0:	48 89 ce             	mov    %rcx,%rsi
    90e3:	48 89 c7             	mov    %rax,%rdi
    90e6:	e8 69 fe ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    90eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    90ef:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    90f3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90f7:	c9                   	leave
    90f8:	c3                   	ret
    90f9:	90                   	nop

00000000000090fa <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    90fa:	55                   	push   %rbp
    90fb:	48 89 e5             	mov    %rsp,%rbp
    90fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    9102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9106:	48 83 c0 18          	add    $0x18,%rax
    910a:	5d                   	pop    %rbp
    910b:	c3                   	ret

000000000000910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    910c:	55                   	push   %rbp
    910d:	48 89 e5             	mov    %rsp,%rbp
    9110:	48 83 ec 20          	sub    $0x20,%rsp
    9114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    911c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    9120:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9124:	48 89 c7             	mov    %rax,%rdi
    9127:	e8 5a 0c 00 00       	call   9d86 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    912c:	48 8b 10             	mov    (%rax),%rdx
    912f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9133:	48 89 10             	mov    %rdx,(%rax)
    9136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    913a:	48 89 c7             	mov    %rax,%rdi
    913d:	e8 44 0c 00 00       	call   9d86 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    9142:	48 8b 10             	mov    (%rax),%rdx
    9145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9149:	48 89 50 08          	mov    %rdx,0x8(%rax)
    914d:	90                   	nop
    914e:	c9                   	leave
    914f:	c3                   	ret

0000000000009150 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    9150:	55                   	push   %rbp
    9151:	48 89 e5             	mov    %rsp,%rbp
    9154:	48 83 ec 10          	sub    $0x10,%rsp
    9158:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    915c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9160:	48 8b 00             	mov    (%rax),%rax
    9163:	48 89 c7             	mov    %rax,%rdi
    9166:	e8 95 a1 ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    916b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    916f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    9172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9176:	c9                   	leave
    9177:	c3                   	ret

0000000000009178 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9178:	55                   	push   %rbp
    9179:	48 89 e5             	mov    %rsp,%rbp
    917c:	48 83 ec 10          	sub    $0x10,%rsp
    9180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    9184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9188:	48 8b 00             	mov    (%rax),%rax
    918b:	48 89 c7             	mov    %rax,%rdi
    918e:	e8 fd 9f ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    9193:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9197:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    919a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    919e:	c9                   	leave
    919f:	c3                   	ret

00000000000091a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>:
      _S_key(_Const_Link_type __x)
    91a0:	55                   	push   %rbp
    91a1:	48 89 e5             	mov    %rsp,%rbp
    91a4:	48 83 ec 20          	sub    $0x20,%rsp
    91a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    91ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91b0:	48 89 c7             	mov    %rax,%rdi
    91b3:	e8 dc 0b 00 00       	call   9d94 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    91b8:	48 89 c2             	mov    %rax,%rdx
    91bb:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    91bf:	48 89 d6             	mov    %rdx,%rsi
    91c2:	48 89 c7             	mov    %rax,%rdi
    91c5:	e8 e8 0b 00 00       	call   9db2 <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>
      }
    91ca:	c9                   	leave
    91cb:	c3                   	ret

00000000000091cc <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    91cc:	55                   	push   %rbp
    91cd:	48 89 e5             	mov    %rsp,%rbp
    91d0:	41 54                	push   %r12
    91d2:	53                   	push   %rbx
    91d3:	48 83 ec 30          	sub    $0x30,%rsp
    91d7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    91db:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    91df:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    91e3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    91e7:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    91ec:	75 43                	jne    9231 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    91ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    91f2:	48 89 c7             	mov    %rax,%rdi
    91f5:	e8 82 fb ff ff       	call   8d7c <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_M_endEv>
    91fa:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    91fe:	74 31                	je     9231 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    9200:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9204:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9208:	48 89 c7             	mov    %rax,%rdi
    920b:	e8 2a fd ff ff       	call   8f3a <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt18_Rb_tree_node_base>
    9210:	49 89 c4             	mov    %rax,%r12
    9213:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9217:	48 89 c7             	mov    %rax,%rdi
    921a:	e8 81 ff ff ff       	call   91a0 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE6_S_keyEPKSt13_Rb_tree_nodeIS4_E>
    921f:	4c 89 e2             	mov    %r12,%rdx
    9222:	48 89 c6             	mov    %rax,%rsi
    9225:	48 89 df             	mov    %rbx,%rdi
    9228:	e8 b3 d5 ff ff       	call   67e0 <_ZNKSt4lessINSt6thread2idEEclERKS1_S4_>
    922d:	84 c0                	test   %al,%al
    922f:	74 07                	je     9238 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x6c>
    9231:	b8 01 00 00 00       	mov    $0x1,%eax
    9236:	eb 05                	jmp    923d <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSC_PSt13_Rb_tree_nodeIS4_E+0x71>
    9238:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    923d:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    9240:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9244:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    9248:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    924c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9250:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    9254:	89 c7                	mov    %eax,%edi
    9256:	e8 e5 9d ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    925b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    925f:	48 8b 40 28          	mov    0x28(%rax),%rax
    9263:	48 8d 50 01          	lea    0x1(%rax),%rdx
    9267:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    926b:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    926f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9273:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9277:	48 89 d6             	mov    %rdx,%rsi
    927a:	48 89 c7             	mov    %rax,%rdi
    927d:	e8 fc ef ff ff       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    9282:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    9286:	48 83 c4 30          	add    $0x30,%rsp
    928a:	5b                   	pop    %rbx
    928b:	41 5c                	pop    %r12
    928d:	5d                   	pop    %rbp
    928e:	c3                   	ret
    928f:	90                   	nop

0000000000009290 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>:
      _Tuple_impl()
    9290:	55                   	push   %rbp
    9291:	48 89 e5             	mov    %rsp,%rbp
    9294:	48 83 ec 10          	sub    $0x10,%rsp
    9298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    929c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a0:	48 89 c7             	mov    %rax,%rdi
    92a3:	e8 1c 0b 00 00       	call   9dc4 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>
    92a8:	90                   	nop
    92a9:	c9                   	leave
    92aa:	c3                   	ret
    92ab:	90                   	nop

00000000000092ac <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>:
      constexpr _Head_base()
    92ac:	55                   	push   %rbp
    92ad:	48 89 e5             	mov    %rsp,%rbp
    92b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    92b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92b8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    92bf:	90                   	nop
    92c0:	5d                   	pop    %rbp
    92c1:	c3                   	ret

00000000000092c2 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    92c2:	55                   	push   %rbp
    92c3:	48 89 e5             	mov    %rsp,%rbp
    92c6:	48 83 ec 10          	sub    $0x10,%rsp
    92ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    92ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d2:	48 89 c7             	mov    %rax,%rdi
    92d5:	e8 f5 0a 00 00       	call   9dcf <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>
    92da:	c9                   	leave
    92db:	c3                   	ret

00000000000092dc <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>:
      _Tuple_impl()
    92dc:	55                   	push   %rbp
    92dd:	48 89 e5             	mov    %rsp,%rbp
    92e0:	48 83 ec 10          	sub    $0x10,%rsp
    92e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    92e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 f6 0a 00 00       	call   9dea <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>
    92f4:	90                   	nop
    92f5:	c9                   	leave
    92f6:	c3                   	ret
    92f7:	90                   	nop

00000000000092f8 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>:
      constexpr _Head_base()
    92f8:	55                   	push   %rbp
    92f9:	48 89 e5             	mov    %rsp,%rbp
    92fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9304:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    930b:	90                   	nop
    930c:	5d                   	pop    %rbp
    930d:	c3                   	ret

000000000000930e <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    930e:	55                   	push   %rbp
    930f:	48 89 e5             	mov    %rsp,%rbp
    9312:	48 83 ec 10          	sub    $0x10,%rsp
    9316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    931a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    931e:	48 89 c7             	mov    %rax,%rdi
    9321:	e8 cf 0a 00 00       	call   9df5 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>
    9326:	c9                   	leave
    9327:	c3                   	ret

0000000000009328 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEEC1Ev>:
      _Tuple_impl()
    9328:	55                   	push   %rbp
    9329:	48 89 e5             	mov    %rsp,%rbp
    932c:	48 83 ec 10          	sub    $0x10,%rsp
    9330:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    9334:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9338:	48 89 c7             	mov    %rax,%rdi
    933b:	e8 d0 0a 00 00       	call   9e10 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>
    9340:	90                   	nop
    9341:	c9                   	leave
    9342:	c3                   	ret
    9343:	90                   	nop

0000000000009344 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EEC1Ev>:
      constexpr _Head_base()
    9344:	55                   	push   %rbp
    9345:	48 89 e5             	mov    %rsp,%rbp
    9348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    934c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9350:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9357:	90                   	nop
    9358:	5d                   	pop    %rbp
    9359:	c3                   	ret

000000000000935a <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    935a:	55                   	push   %rbp
    935b:	48 89 e5             	mov    %rsp,%rbp
    935e:	48 83 ec 10          	sub    $0x10,%rsp
    9362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    936a:	48 89 c7             	mov    %rax,%rdi
    936d:	e8 a9 0a 00 00       	call   9e1b <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>
    9372:	c9                   	leave
    9373:	c3                   	ret

0000000000009374 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9374:	55                   	push   %rbp
    9375:	48 89 e5             	mov    %rsp,%rbp
    9378:	48 83 ec 10          	sub    $0x10,%rsp
    937c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9380:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9384:	48 89 c7             	mov    %rax,%rdi
    9387:	e8 a9 0a 00 00       	call   9e35 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>
    938c:	c9                   	leave
    938d:	c3                   	ret

000000000000938e <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    938e:	55                   	push   %rbp
    938f:	48 89 e5             	mov    %rsp,%rbp
    9392:	48 83 ec 10          	sub    $0x10,%rsp
    9396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    939a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    939e:	48 89 c7             	mov    %rax,%rdi
    93a1:	e8 a9 0a 00 00       	call   9e4f <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    93a6:	c9                   	leave
    93a7:	c3                   	ret

00000000000093a8 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko10ThreadPoolEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    93a8:	55                   	push   %rbp
    93a9:	48 89 e5             	mov    %rsp,%rbp
    93ac:	48 83 ec 10          	sub    $0x10,%rsp
    93b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    93b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b8:	48 89 c7             	mov    %rax,%rdi
    93bb:	e8 a9 0a 00 00       	call   9e69 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>
    93c0:	c9                   	leave
    93c1:	c3                   	ret

00000000000093c2 <_ZSt3getILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    93c2:	55                   	push   %rbp
    93c3:	48 89 e5             	mov    %rsp,%rbp
    93c6:	48 83 ec 10          	sub    $0x10,%rsp
    93ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    93ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d2:	48 89 c7             	mov    %rax,%rdi
    93d5:	e8 a9 0a 00 00       	call   9e83 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    93da:	c9                   	leave
    93db:	c3                   	ret

00000000000093dc <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    93dc:	55                   	push   %rbp
    93dd:	48 89 e5             	mov    %rsp,%rbp
    93e0:	48 83 ec 10          	sub    $0x10,%rsp
    93e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    93e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ec:	48 89 c7             	mov    %rax,%rdi
    93ef:	e8 a9 0a 00 00       	call   9e9d <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>
    93f4:	c9                   	leave
    93f5:	c3                   	ret

00000000000093f6 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    93f6:	55                   	push   %rbp
    93f7:	48 89 e5             	mov    %rsp,%rbp
    93fa:	48 83 ec 10          	sub    $0x10,%rsp
    93fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9406:	48 89 c7             	mov    %rax,%rdi
    9409:	e8 a9 0a 00 00       	call   9eb7 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    940e:	c9                   	leave
    940f:	c3                   	ret

0000000000009410 <_ZNKSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERKT_v>:
      _M_access() const noexcept
    9410:	55                   	push   %rbp
    9411:	48 89 e5             	mov    %rsp,%rbp
    9414:	48 83 ec 10          	sub    $0x10,%rsp
    9418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<const _Tp*>(_M_access()); }
    941c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9420:	48 89 c7             	mov    %rax,%rdi
    9423:	e8 b4 a8 ff ff       	call   3cdc <_ZNKSt9_Any_data9_M_accessEv>
    9428:	c9                   	leave
    9429:	c3                   	ret

000000000000942a <_ZSt11__addressofIKZN4neko6Engine5startEvEUlvE_EPT_RS4_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    942a:	55                   	push   %rbp
    942b:	48 89 e5             	mov    %rsp,%rbp
    942e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9436:	5d                   	pop    %rbp
    9437:	c3                   	ret

0000000000009438 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9438:	55                   	push   %rbp
    9439:	48 89 e5             	mov    %rsp,%rbp
    943c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9444:	5d                   	pop    %rbp
    9445:	c3                   	ret

0000000000009446 <_ZSt13__invoke_implIvRZN4neko6Engine5startEvEUlvE_JEET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    9446:	55                   	push   %rbp
    9447:	48 89 e5             	mov    %rsp,%rbp
    944a:	48 83 ec 10          	sub    $0x10,%rsp
    944e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    9452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9456:	48 89 c7             	mov    %rax,%rdi
    9459:	e8 da ff ff ff       	call   9438 <_ZSt7forwardIRZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS4_E4typeE>
    945e:	48 89 c7             	mov    %rax,%rdi
    9461:	e8 28 b4 ff ff       	call   488e <_ZZN4neko6Engine5startEvENKUlvE_clEv>
    9466:	90                   	nop
    9467:	c9                   	leave
    9468:	c3                   	ret

0000000000009469 <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E15_M_init_functorIRKS3_EEvRSt9_Any_dataOT_>:
	  _M_init_functor(_Any_data& __functor, _Fn&& __f)
    9469:	55                   	push   %rbp
    946a:	48 89 e5             	mov    %rsp,%rbp
    946d:	48 83 ec 10          	sub    $0x10,%rsp
    9471:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9475:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    _M_create(__functor, std::forward<_Fn>(__f), _Local_storage());
    9479:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    947d:	48 89 c7             	mov    %rax,%rdi
    9480:	e8 4c 0a 00 00       	call   9ed1 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    9485:	48 89 c2             	mov    %rax,%rdx
    9488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948c:	48 89 d6             	mov    %rdx,%rsi
    948f:	48 89 c7             	mov    %rax,%rdi
    9492:	e8 48 0a 00 00       	call   9edf <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>
	  }
    9497:	90                   	nop
    9498:	c9                   	leave
    9499:	c3                   	ret

000000000000949a <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE>:
	_M_destroy(_Any_data& __victim, true_type)
    949a:	55                   	push   %rbp
    949b:	48 89 e5             	mov    %rsp,%rbp
    949e:	48 83 ec 10          	sub    $0x10,%rsp
    94a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  __victim._M_access<_Functor>().~_Functor();
    94a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94aa:	48 89 c7             	mov    %rax,%rdi
    94ad:	e8 74 0a 00 00       	call   9f26 <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>
	}
    94b2:	90                   	nop
    94b3:	c9                   	leave
    94b4:	c3                   	ret
    94b5:	90                   	nop

00000000000094b6 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    94b6:	55                   	push   %rbp
    94b7:	48 89 e5             	mov    %rsp,%rbp
    94ba:	48 83 ec 10          	sub    $0x10,%rsp
    94be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    94c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c6:	48 89 c7             	mov    %rax,%rdi
    94c9:	e8 72 0a 00 00       	call   9f40 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>
    94ce:	90                   	nop
    94cf:	c9                   	leave
    94d0:	c3                   	ret

00000000000094d1 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    94d1:	55                   	push   %rbp
    94d2:	48 89 e5             	mov    %rsp,%rbp
    94d5:	48 83 ec 10          	sub    $0x10,%rsp
    94d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    94dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94e1:	48 89 c7             	mov    %rax,%rdi
    94e4:	e8 7e 0a 00 00       	call   9f67 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>
    94e9:	c9                   	leave
    94ea:	c3                   	ret

00000000000094eb <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    94eb:	55                   	push   %rbp
    94ec:	48 89 e5             	mov    %rsp,%rbp
    94ef:	48 83 ec 10          	sub    $0x10,%rsp
    94f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    94f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fb:	48 89 c7             	mov    %rax,%rdi
    94fe:	e8 7e 0a 00 00       	call   9f81 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9503:	c9                   	leave
    9504:	c3                   	ret

0000000000009505 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    9505:	55                   	push   %rbp
    9506:	48 89 e5             	mov    %rsp,%rbp
    9509:	48 83 ec 10          	sub    $0x10,%rsp
    950d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9511:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9515:	48 89 c7             	mov    %rax,%rdi
    9518:	e8 7e 0a 00 00       	call   9f9b <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    951d:	c9                   	leave
    951e:	c3                   	ret

000000000000951f <_ZSt11__addressofISt6threadEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    951f:	55                   	push   %rbp
    9520:	48 89 e5             	mov    %rsp,%rbp
    9523:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    952b:	5d                   	pop    %rbp
    952c:	c3                   	ret

000000000000952d <_ZSt8_DestroyISt6threadEvPT_>:
    _Destroy(_Tp* __pointer)
    952d:	55                   	push   %rbp
    952e:	48 89 e5             	mov    %rsp,%rbp
    9531:	48 83 ec 10          	sub    $0x10,%rsp
    9535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    9539:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    953d:	48 89 c7             	mov    %rax,%rdi
    9540:	e8 dd a8 ff ff       	call   3e22 <_ZNSt6threadD1Ev>
    }
    9545:	90                   	nop
    9546:	c9                   	leave
    9547:	c3                   	ret

0000000000009548 <_ZNSt15__new_allocatorISt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9548:	55                   	push   %rbp
    9549:	48 89 e5             	mov    %rsp,%rbp
    954c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9550:	90                   	nop
    9551:	5d                   	pop    %rbp
    9552:	c3                   	ret
    9553:	90                   	nop

0000000000009554 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_EC1Ev>:
      _Deque_iterator() _GLIBCXX_NOEXCEPT
    9554:	55                   	push   %rbp
    9555:	48 89 e5             	mov    %rsp,%rbp
    9558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_cur(), _M_first(), _M_last(), _M_node() { }
    955c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9560:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    9567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    956b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    9572:	00 
    9573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9577:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    957e:	00 
    957f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9583:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
    958a:	00 
    958b:	90                   	nop
    958c:	5d                   	pop    %rbp
    958d:	c3                   	ret

000000000000958e <_ZNSt16allocator_traitsISaIPSt8functionIFvvEEEE8allocateERS4_m>:
      allocate(allocator_type& __a, size_type __n)
    958e:	55                   	push   %rbp
    958f:	48 89 e5             	mov    %rsp,%rbp
    9592:	48 83 ec 10          	sub    $0x10,%rsp
    9596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    959a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    959e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95a6:	ba 00 00 00 00       	mov    $0x0,%edx
    95ab:	48 89 ce             	mov    %rcx,%rsi
    95ae:	48 89 c7             	mov    %rax,%rdi
    95b1:	e8 00 0a 00 00       	call   9fb6 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>
    95b6:	c9                   	leave
    95b7:	c3                   	ret

00000000000095b8 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>:
      static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
    95b8:	55                   	push   %rbp
    95b9:	48 89 e5             	mov    %rsp,%rbp
      { return __deque_buf_size(sizeof(_Tp)); }
    95bc:	bf 20 00 00 00       	mov    $0x20,%edi
    95c1:	e8 03 a8 ff ff       	call   3dc9 <_ZSt16__deque_buf_sizem>
    95c6:	5d                   	pop    %rbp
    95c7:	c3                   	ret

00000000000095c8 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    95c8:	55                   	push   %rbp
    95c9:	48 89 e5             	mov    %rsp,%rbp
    95cc:	48 83 ec 20          	sub    $0x20,%rsp
    95d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    95d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    95dc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    95e0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e8:	48 89 ce             	mov    %rcx,%rsi
    95eb:	48 89 c7             	mov    %rax,%rdi
    95ee:	e8 25 0a 00 00       	call   a018 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>
    95f3:	90                   	nop
    95f4:	c9                   	leave
    95f5:	c3                   	ret

00000000000095f6 <_ZNKSt11_Deque_baseISt8functionIFvvEESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    95f6:	55                   	push   %rbp
    95f7:	48 89 e5             	mov    %rsp,%rbp
    95fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    95fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9602:	5d                   	pop    %rbp
    9603:	c3                   	ret

0000000000009604 <_ZNSaIPSt8functionIFvvEEEC1IS1_EERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    9604:	55                   	push   %rbp
    9605:	48 89 e5             	mov    %rsp,%rbp
    9608:	48 83 ec 10          	sub    $0x10,%rsp
    960c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9610:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9618:	48 89 c7             	mov    %rax,%rdi
    961b:	e8 28 0a 00 00       	call   a048 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>
    9620:	90                   	nop
    9621:	c9                   	leave
    9622:	c3                   	ret
    9623:	90                   	nop

0000000000009624 <_ZNSt15__new_allocatorIPSt8functionIFvvEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9624:	55                   	push   %rbp
    9625:	48 89 e5             	mov    %rsp,%rbp
    9628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    962c:	90                   	nop
    962d:	5d                   	pop    %rbp
    962e:	c3                   	ret
    962f:	90                   	nop

0000000000009630 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE10deallocateEPS3_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    9630:	55                   	push   %rbp
    9631:	48 89 e5             	mov    %rsp,%rbp
    9634:	48 83 ec 20          	sub    $0x20,%rsp
    9638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    963c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    9644:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9648:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    964f:	00 
    9650:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9654:	48 89 d6             	mov    %rdx,%rsi
    9657:	48 89 c7             	mov    %rax,%rdi
    965a:	e8 71 9c ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    965f:	c9                   	leave
    9660:	c3                   	ret

0000000000009661 <_ZSt8_DestroyIPSt8functionIFvvEEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9661:	55                   	push   %rbp
    9662:	48 89 e5             	mov    %rsp,%rbp
    9665:	48 83 ec 10          	sub    $0x10,%rsp
    9669:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    966d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9671:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9675:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9679:	48 89 d6             	mov    %rdx,%rsi
    967c:	48 89 c7             	mov    %rax,%rdi
    967f:	e8 cf 09 00 00       	call   a053 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>
    }
    9684:	90                   	nop
    9685:	c9                   	leave
    9686:	c3                   	ret
    9687:	90                   	nop

0000000000009688 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    9688:	55                   	push   %rbp
    9689:	48 89 e5             	mov    %rsp,%rbp
    968c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9694:	5d                   	pop    %rbp
    9695:	c3                   	ret

0000000000009696 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE7destroyIS5_EEvRS7_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    9696:	55                   	push   %rbp
    9697:	48 89 e5             	mov    %rsp,%rbp
    969a:	48 83 ec 10          	sub    $0x10,%rsp
    969e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    96a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    96aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96ae:	48 89 d6             	mov    %rdx,%rsi
    96b1:	48 89 c7             	mov    %rax,%rdi
    96b4:	e8 d3 09 00 00       	call   a08c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>
	}
    96b9:	90                   	nop
    96ba:	c9                   	leave
    96bb:	c3                   	ret

00000000000096bc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE10deallocateERS7_PS6_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    96bc:	55                   	push   %rbp
    96bd:	48 89 e5             	mov    %rsp,%rbp
    96c0:	48 83 ec 20          	sub    $0x20,%rsp
    96c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    96d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96dc:	48 89 ce             	mov    %rcx,%rsi
    96df:	48 89 c7             	mov    %rax,%rdi
    96e2:	e8 b5 09 00 00       	call   a09c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>
    96e7:	90                   	nop
    96e8:	c9                   	leave
    96e9:	c3                   	ret

00000000000096ea <_ZStmiRKSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_ES7_>:
      operator-(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    96ea:	55                   	push   %rbp
    96eb:	48 89 e5             	mov    %rsp,%rbp
    96ee:	48 83 ec 10          	sub    $0x10,%rsp
    96f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return difference_type(_S_buffer_size())
    96fa:	e8 b9 fe ff ff       	call   95b8 <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E14_S_buffer_sizeEv>
    96ff:	48 89 c1             	mov    %rax,%rcx
	  * (__x._M_node - __y._M_node - bool(__x._M_node))
    9702:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9706:	48 8b 50 18          	mov    0x18(%rax),%rdx
    970a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    970e:	48 8b 40 18          	mov    0x18(%rax),%rax
    9712:	48 29 c2             	sub    %rax,%rdx
    9715:	48 89 d0             	mov    %rdx,%rax
    9718:	48 c1 f8 03          	sar    $0x3,%rax
    971c:	48 89 c2             	mov    %rax,%rdx
    971f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9723:	48 8b 40 18          	mov    0x18(%rax),%rax
    9727:	48 85 c0             	test   %rax,%rax
    972a:	0f 95 c0             	setne  %al
    972d:	0f b6 c0             	movzbl %al,%eax
    9730:	48 29 c2             	sub    %rax,%rdx
    9733:	48 0f af d1          	imul   %rcx,%rdx
	  + (__x._M_cur - __x._M_first)
    9737:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973b:	48 8b 08             	mov    (%rax),%rcx
    973e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9742:	48 8b 40 08          	mov    0x8(%rax),%rax
    9746:	48 29 c1             	sub    %rax,%rcx
    9749:	48 89 c8             	mov    %rcx,%rax
    974c:	48 c1 f8 05          	sar    $0x5,%rax
    9750:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
	  + (__y._M_last - __y._M_cur);
    9754:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9758:	48 8b 50 10          	mov    0x10(%rax),%rdx
    975c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9760:	48 8b 00             	mov    (%rax),%rax
    9763:	48 29 c2             	sub    %rax,%rdx
    9766:	48 89 d0             	mov    %rdx,%rax
    9769:	48 c1 f8 05          	sar    $0x5,%rax
    976d:	48 01 c8             	add    %rcx,%rax
      }
    9770:	c9                   	leave
    9771:	c3                   	ret

0000000000009772 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9772:	55                   	push   %rbp
    9773:	48 89 e5             	mov    %rsp,%rbp
    9776:	48 83 ec 20          	sub    $0x20,%rsp
    977a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max;
    977e:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    9785:	ff ff 7f 
    9788:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    978c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9790:	48 89 c7             	mov    %rax,%rdi
    9793:	e8 3d 09 00 00       	call   a0d5 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>
    9798:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    979c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    97a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    97a4:	48 89 d6             	mov    %rdx,%rsi
    97a7:	48 89 c7             	mov    %rax,%rdi
    97aa:	e8 8d a5 ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    97af:	48 8b 00             	mov    (%rax),%rax
      }
    97b2:	c9                   	leave
    97b3:	c3                   	ret

00000000000097b4 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb>:
	}
    }

  template <typename _Tp, typename _Alloc>
    void
    deque<_Tp, _Alloc>::
    97b4:	55                   	push   %rbp
    97b5:	48 89 e5             	mov    %rsp,%rbp
    97b8:	53                   	push   %rbx
    97b9:	48 83 ec 58          	sub    $0x58,%rsp
    97bd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    97c1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    97c5:	89 d0                	mov    %edx,%eax
    97c7:	88 45 ac             	mov    %al,-0x54(%rbp)
    _M_reallocate_map(size_type __nodes_to_add, bool __add_at_front)
    {
      const size_type __old_num_nodes
	= this->_M_impl._M_finish._M_node - this->_M_impl._M_start._M_node + 1;
    97ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97ce:	48 8b 50 48          	mov    0x48(%rax),%rdx
    97d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97d6:	48 8b 40 28          	mov    0x28(%rax),%rax
    97da:	48 29 c2             	sub    %rax,%rdx
    97dd:	48 89 d0             	mov    %rdx,%rax
    97e0:	48 c1 f8 03          	sar    $0x3,%rax
    97e4:	48 83 c0 01          	add    $0x1,%rax
      const size_type __old_num_nodes
    97e8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      const size_type __new_num_nodes = __old_num_nodes + __nodes_to_add;
    97ec:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    97f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    97f4:	48 01 d0             	add    %rdx,%rax
    97f7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)

      _Map_pointer __new_nstart;
      if (this->_M_impl._M_map_size > 2 * __new_num_nodes)
    97fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    97ff:	48 8b 40 08          	mov    0x8(%rax),%rax
    9803:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9807:	48 01 d2             	add    %rdx,%rdx
    980a:	48 39 c2             	cmp    %rax,%rdx
    980d:	0f 83 aa 00 00 00    	jae    98bd <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x109>
	{
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9813:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9817:	48 8b 10             	mov    (%rax),%rdx
    981a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    981e:	48 8b 40 08          	mov    0x8(%rax),%rax
					 - __new_num_nodes) / 2
    9822:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    9826:	48 d1 e8             	shr    %rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9829:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    9830:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    9831:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    9835:	74 0a                	je     9841 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x8d>
    9837:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    983b:	48 c1 e0 03          	shl    $0x3,%rax
    983f:	eb 05                	jmp    9846 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x92>
    9841:	b8 00 00 00 00       	mov    $0x0,%eax
    9846:	48 01 c8             	add    %rcx,%rax
	  __new_nstart = this->_M_impl._M_map + (this->_M_impl._M_map_size
    9849:	48 01 d0             	add    %rdx,%rax
    984c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  if (__new_nstart < this->_M_impl._M_start._M_node)
    9850:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9854:	48 8b 40 28          	mov    0x28(%rax),%rax
    9858:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    985c:	73 28                	jae    9886 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0xd2>
	    std::copy(this->_M_impl._M_start._M_node,
		      this->_M_impl._M_finish._M_node + 1,
    985e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9862:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy(this->_M_impl._M_start._M_node,
    9866:	48 8d 48 08          	lea    0x8(%rax),%rcx
    986a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    986e:	48 8b 40 28          	mov    0x28(%rax),%rax
    9872:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9876:	48 89 ce             	mov    %rcx,%rsi
    9879:	48 89 c7             	mov    %rax,%rdi
    987c:	e8 6e 08 00 00       	call   a0ef <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    9881:	e9 09 01 00 00       	jmp    998f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
		      __new_nstart);
	  else
	    std::copy_backward(this->_M_impl._M_start._M_node,
			       this->_M_impl._M_finish._M_node + 1,
			       __new_nstart + __old_num_nodes);
    9886:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    988a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9891:	00 
	    std::copy_backward(this->_M_impl._M_start._M_node,
    9892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9896:	48 01 c2             	add    %rax,%rdx
			       this->_M_impl._M_finish._M_node + 1,
    9899:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    989d:	48 8b 40 48          	mov    0x48(%rax),%rax
	    std::copy_backward(this->_M_impl._M_start._M_node,
    98a1:	48 8d 48 08          	lea    0x8(%rax),%rcx
    98a5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98a9:	48 8b 40 28          	mov    0x28(%rax),%rax
    98ad:	48 89 ce             	mov    %rcx,%rsi
    98b0:	48 89 c7             	mov    %rax,%rdi
    98b3:	e8 82 08 00 00       	call   a13a <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
    98b8:	e9 d2 00 00 00       	jmp    998f <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x1db>
	}
      else
	{
	  size_type __new_map_size = this->_M_impl._M_map_size
    98bd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98c1:	48 8b 58 08          	mov    0x8(%rax),%rbx
				     + std::max(this->_M_impl._M_map_size,
    98c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98c9:	48 8d 50 08          	lea    0x8(%rax),%rdx
    98cd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    98d1:	48 89 c6             	mov    %rax,%rsi
    98d4:	48 89 d7             	mov    %rdx,%rdi
    98d7:	e8 c7 b1 ff ff       	call   4aa3 <_ZSt3maxImERKT_S2_S2_>
    98dc:	48 8b 00             	mov    (%rax),%rax
    98df:	48 01 d8             	add    %rbx,%rax
	  size_type __new_map_size = this->_M_impl._M_map_size
    98e2:	48 83 c0 02          	add    $0x2,%rax
    98e6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
						__nodes_to_add) + 2;

	  _Map_pointer __new_map = this->_M_allocate_map(__new_map_size);
    98ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    98ee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    98f2:	48 89 d6             	mov    %rdx,%rsi
    98f5:	48 89 c7             	mov    %rax,%rdi
    98f8:	e8 85 ee ff ff       	call   8782 <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE15_M_allocate_mapEm>
    98fd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    9901:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9905:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
    9909:	48 d1 e8             	shr    %rax
    990c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9913:	00 
			 + (__add_at_front ? __nodes_to_add : 0);
    9914:	80 7d ac 00          	cmpb   $0x0,-0x54(%rbp)
    9918:	74 0a                	je     9924 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x170>
    991a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    991e:	48 c1 e0 03          	shl    $0x3,%rax
    9922:	eb 05                	jmp    9929 <_ZNSt5dequeISt8functionIFvvEESaIS2_EE17_M_reallocate_mapEmb+0x175>
    9924:	b8 00 00 00 00       	mov    $0x0,%eax
    9929:	48 01 c2             	add    %rax,%rdx
	  __new_nstart = __new_map + (__new_map_size - __new_num_nodes) / 2
    992c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9930:	48 01 d0             	add    %rdx,%rax
    9933:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  std::copy(this->_M_impl._M_start._M_node,
		    this->_M_impl._M_finish._M_node + 1,
    9937:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    993b:	48 8b 40 48          	mov    0x48(%rax),%rax
	  std::copy(this->_M_impl._M_start._M_node,
    993f:	48 8d 48 08          	lea    0x8(%rax),%rcx
    9943:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9947:	48 8b 40 28          	mov    0x28(%rax),%rax
    994b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    994f:	48 89 ce             	mov    %rcx,%rsi
    9952:	48 89 c7             	mov    %rax,%rdi
    9955:	e8 95 07 00 00       	call   a0ef <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>
		    __new_nstart);
	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
    995a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    995e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9962:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    9966:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx
    996a:	48 8b 09             	mov    (%rcx),%rcx
    996d:	48 89 ce             	mov    %rcx,%rsi
    9970:	48 89 c7             	mov    %rax,%rdi
    9973:	e8 92 da ff ff       	call   740a <_ZNSt11_Deque_baseISt8functionIFvvEESaIS2_EE17_M_deallocate_mapEPPS2_m>

	  this->_M_impl._M_map = __new_map;
    9978:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    997c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9980:	48 89 10             	mov    %rdx,(%rax)
	  this->_M_impl._M_map_size = __new_map_size;
    9983:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9987:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    998b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	}

      this->_M_impl._M_start._M_set_node(__new_nstart);
    998f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9993:	48 8d 50 10          	lea    0x10(%rax),%rdx
    9997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    999b:	48 89 c6             	mov    %rax,%rsi
    999e:	48 89 d7             	mov    %rdx,%rdi
    99a1:	e8 c8 ee ff ff       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
      this->_M_impl._M_finish._M_set_node(__new_nstart + __old_num_nodes - 1);
    99a6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    99aa:	48 83 c0 30          	add    $0x30,%rax
    99ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    99b2:	48 c1 e2 03          	shl    $0x3,%rdx
    99b6:	48 8d 4a f8          	lea    -0x8(%rdx),%rcx
    99ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    99be:	48 01 ca             	add    %rcx,%rdx
    99c1:	48 89 d6             	mov    %rdx,%rsi
    99c4:	48 89 c7             	mov    %rax,%rdi
    99c7:	e8 a2 ee ff ff       	call   886e <_ZNSt15_Deque_iteratorISt8functionIFvvEERS2_PS2_E11_M_set_nodeEPS4_>
    }
    99cc:	90                   	nop
    99cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99d1:	c9                   	leave
    99d2:	c3                   	ret

00000000000099d3 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    99d3:	55                   	push   %rbp
    99d4:	48 89 e5             	mov    %rsp,%rbp
    99d7:	48 83 ec 10          	sub    $0x10,%rsp
    99db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    99e3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    99e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99eb:	ba 00 00 00 00       	mov    $0x0,%edx
    99f0:	48 89 ce             	mov    %rcx,%rsi
    99f3:	48 89 c7             	mov    %rax,%rdi
    99f6:	e8 8b 07 00 00       	call   a186 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>
    99fb:	c9                   	leave
    99fc:	c3                   	ret

00000000000099fd <_ZNSt16allocator_traitsISaISt6threadEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    99fd:	55                   	push   %rbp
    99fe:	48 89 e5             	mov    %rsp,%rbp
    9a01:	48 83 ec 10          	sub    $0x10,%rsp
    9a05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    9a09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a0d:	48 89 c7             	mov    %rax,%rdi
    9a10:	e8 d3 07 00 00       	call   a1e8 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>
      }
    9a15:	c9                   	leave
    9a16:	c3                   	ret

0000000000009a17 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9a17:	55                   	push   %rbp
    9a18:	48 89 e5             	mov    %rsp,%rbp
    9a1b:	48 83 ec 20          	sub    $0x20,%rsp
    9a1f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a23:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    9a27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    9a2f:	eb 1e                	jmp    9a4f <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    9a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a35:	48 89 c7             	mov    %rax,%rdi
    9a38:	e8 e2 fa ff ff       	call   951f <_ZSt11__addressofISt6threadEPT_RS1_>
    9a3d:	48 89 c7             	mov    %rax,%rdi
    9a40:	e8 d8 07 00 00       	call   a21d <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    9a45:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    9a4a:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    9a4f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9a54:	75 db                	jne    9a31 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6threadmEET_S4_T0_+0x1a>
	      return __cur;
    9a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    9a5a:	c9                   	leave
    9a5b:	c3                   	ret

0000000000009a5c <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9a5c:	55                   	push   %rbp
    9a5d:	48 89 e5             	mov    %rsp,%rbp
    9a60:	48 83 ec 20          	sub    $0x20,%rsp
    9a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9a70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a74:	48 89 c7             	mov    %rax,%rdi
    9a77:	e8 d0 07 00 00       	call   a24c <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    9a7c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9a80:	0f 92 c0             	setb   %al
    9a83:	0f b6 c0             	movzbl %al,%eax
    9a86:	48 85 c0             	test   %rax,%rax
    9a89:	0f 95 c0             	setne  %al
    9a8c:	84 c0                	test   %al,%al
    9a8e:	74 1a                	je     9aaa <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9a90:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9a97:	ff ff 1f 
    9a9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9a9e:	73 05                	jae    9aa5 <_ZNSt15__new_allocatorISt6threadE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9aa0:	e8 6b 97 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9aa5:	e8 e6 95 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    9aaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9aae:	48 c1 e0 03          	shl    $0x3,%rax
    9ab2:	48 89 c7             	mov    %rax,%rdi
    9ab5:	e8 06 98 ff ff       	call   32c0 <_Znwm@plt>
    9aba:	90                   	nop
      }
    9abb:	c9                   	leave
    9abc:	c3                   	ret

0000000000009abd <_ZSt12__niter_baseIPSt6threadET_S2_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the __normal_iterator wrapper. See copy, fill, ...
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __niter_base(_Iterator __it)
    9abd:	55                   	push   %rbp
    9abe:	48 89 e5             	mov    %rsp,%rbp
    9ac1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
    { return __it; }
    9ac5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac9:	5d                   	pop    %rbp
    9aca:	c3                   	ret

0000000000009acb <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a_1(_InputIterator __first, _InputIterator __last,
    9acb:	55                   	push   %rbp
    9acc:	48 89 e5             	mov    %rsp,%rbp
    9acf:	53                   	push   %rbx
    9ad0:	48 83 ec 38          	sub    $0x38,%rsp
    9ad4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9ad8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9adc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9ae0:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      _ForwardIterator __cur = __result;
    9ae4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9ae8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      for (; __first != __last; ++__first, (void)++__cur)
    9aec:	eb 3a                	jmp    9b28 <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x5d>
	std::__relocate_object_a(std::__addressof(*__cur),
    9aee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9af2:	48 89 c7             	mov    %rax,%rdi
    9af5:	e8 25 fa ff ff       	call   951f <_ZSt11__addressofISt6threadEPT_RS1_>
    9afa:	48 89 c3             	mov    %rax,%rbx
    9afd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b01:	48 89 c7             	mov    %rax,%rdi
    9b04:	e8 16 fa ff ff       	call   951f <_ZSt11__addressofISt6threadEPT_RS1_>
    9b09:	48 89 c1             	mov    %rax,%rcx
    9b0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9b10:	48 89 c2             	mov    %rax,%rdx
    9b13:	48 89 de             	mov    %rbx,%rsi
    9b16:	48 89 cf             	mov    %rcx,%rdi
    9b19:	e8 42 07 00 00       	call   a260 <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>
      for (; __first != __last; ++__first, (void)++__cur)
    9b1e:	48 83 45 d8 08       	addq   $0x8,-0x28(%rbp)
    9b23:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9b28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b2c:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax
    9b30:	75 bc                	jne    9aee <_ZSt14__relocate_a_1IPSt6threadS1_SaIS0_EET0_T_S4_S3_RT1_+0x23>
      return __cur;
    9b32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    9b36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b3a:	c9                   	leave
    9b3b:	c3                   	ret

0000000000009b3c <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEEC1IS2_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    9b3c:	55                   	push   %rbp
    9b3d:	48 89 e5             	mov    %rsp,%rbp
    9b40:	53                   	push   %rbx
    9b41:	48 83 ec 18          	sub    $0x18,%rsp
    9b45:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b49:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    9b4d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9b51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b55:	48 89 c7             	mov    %rax,%rdi
    9b58:	e8 01 c9 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    9b5d:	48 89 c6             	mov    %rax,%rsi
    9b60:	48 89 df             	mov    %rbx,%rdi
    9b63:	e8 50 07 00 00       	call   a2b8 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>
	{ }
    9b68:	90                   	nop
    9b69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b6d:	c9                   	leave
    9b6e:	c3                   	ret
    9b6f:	90                   	nop

0000000000009b70 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EEC1ERKS4_>:
      constexpr _Head_base(const _Head& __h)
    9b70:	55                   	push   %rbp
    9b71:	48 89 e5             	mov    %rsp,%rbp
    9b74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_head_impl(__h) { }
    9b7c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9b80:	48 8b 10             	mov    (%rax),%rdx
    9b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b87:	48 89 10             	mov    %rdx,(%rax)
    9b8a:	90                   	nop
    9b8b:	5d                   	pop    %rbp
    9b8c:	c3                   	ret
    9b8d:	90                   	nop

0000000000009b8e <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    9b8e:	55                   	push   %rbp
    9b8f:	48 89 e5             	mov    %rsp,%rbp
    9b92:	48 83 ec 10          	sub    $0x10,%rsp
    9b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    9b9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9e:	48 89 c7             	mov    %rax,%rdi
    9ba1:	e8 3c 07 00 00       	call   a2e2 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>
    9ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9baa:	48 89 c7             	mov    %rax,%rdi
    9bad:	e8 4c 07 00 00       	call   a2fe <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>
    9bb2:	90                   	nop
    9bb3:	c9                   	leave
    9bb4:	c3                   	ret

0000000000009bb5 <_ZSt12__get_helperILm0EPNSt6thread6_StateEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9bb5:	55                   	push   %rbp
    9bb6:	48 89 e5             	mov    %rsp,%rbp
    9bb9:	48 83 ec 10          	sub    $0x10,%rsp
    9bbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc5:	48 89 c7             	mov    %rax,%rdi
    9bc8:	e8 47 07 00 00       	call   a314 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>
    9bcd:	c9                   	leave
    9bce:	c3                   	ret

0000000000009bcf <_ZSt3getILm1EJPNSt6thread6_StateESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    9bcf:	55                   	push   %rbp
    9bd0:	48 89 e5             	mov    %rsp,%rbp
    9bd3:	48 83 ec 10          	sub    $0x10,%rsp
    9bd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    9bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdf:	48 89 c7             	mov    %rax,%rdi
    9be2:	e8 47 07 00 00       	call   a32e <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    9be7:	c9                   	leave
    9be8:	c3                   	ret
    9be9:	90                   	nop

0000000000009bea <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() noexcept
    9bea:	55                   	push   %rbp
    9beb:	48 89 e5             	mov    %rsp,%rbp
    9bee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    9bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf6:	5d                   	pop    %rbp
    9bf7:	c3                   	ret

0000000000009bf8 <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EEC1IS1_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    9bf8:	55                   	push   %rbp
    9bf9:	48 89 e5             	mov    %rsp,%rbp
    9bfc:	48 83 ec 10          	sub    $0x10,%rsp
    9c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    9c08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c0c:	48 89 c7             	mov    %rax,%rdi
    9c0f:	e8 8a e0 ff ff       	call   7c9e <_ZSt7forwardINSt6thread2idEEOT_RNSt16remove_referenceIS2_E4typeE>
    9c14:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c18:	48 89 02             	mov    %rax,(%rdx)
    9c1b:	90                   	nop
    9c1c:	c9                   	leave
    9c1d:	c3                   	ret

0000000000009c1e <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_get_nodeEv>:
      _M_get_node()
    9c1e:	55                   	push   %rbp
    9c1f:	48 89 e5             	mov    %rsp,%rbp
    9c22:	48 83 ec 10          	sub    $0x10,%rsp
    9c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    9c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c2e:	48 89 c7             	mov    %rax,%rdi
    9c31:	e8 52 fa ff ff       	call   9688 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9c36:	be 01 00 00 00       	mov    $0x1,%esi
    9c3b:	48 89 c7             	mov    %rax,%rdi
    9c3e:	e8 05 07 00 00       	call   a348 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>
    9c43:	c9                   	leave
    9c44:	c3                   	ret
    9c45:	90                   	nop

0000000000009c46 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    9c46:	55                   	push   %rbp
    9c47:	48 89 e5             	mov    %rsp,%rbp
    9c4a:	41 56                	push   %r14
    9c4c:	41 55                	push   %r13
    9c4e:	41 54                	push   %r12
    9c50:	53                   	push   %rbx
    9c51:	48 83 ec 30          	sub    $0x30,%rsp
    9c55:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9c59:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    9c5d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9c61:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    9c65:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    9c69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9c6d:	48 89 c6             	mov    %rax,%rsi
    9c70:	bf 30 00 00 00       	mov    $0x30,%edi
    9c75:	e8 46 9c ff ff       	call   38c0 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    9c7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9c7e:	48 89 c7             	mov    %rax,%rdi
    9c81:	e8 75 e0 ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    9c86:	49 89 c6             	mov    %rax,%r14
    9c89:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    9c8d:	48 89 c7             	mov    %rax,%rdi
    9c90:	e8 58 e0 ff ff       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    9c95:	49 89 c5             	mov    %rax,%r13
    9c98:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9c9c:	48 89 c7             	mov    %rax,%rdi
    9c9f:	e8 3b e0 ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    9ca4:	49 89 c4             	mov    %rax,%r12
    9ca7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9cab:	48 89 c7             	mov    %rax,%rdi
    9cae:	e8 cd df ff ff       	call   7c80 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>
    9cb3:	48 89 c3             	mov    %rax,%rbx
    9cb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9cba:	48 89 c7             	mov    %rax,%rdi
    9cbd:	e8 c6 f9 ff ff       	call   9688 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE21_M_get_Node_allocatorEv>
    9cc2:	4d 89 f0             	mov    %r14,%r8
    9cc5:	4c 89 e9             	mov    %r13,%rcx
    9cc8:	4c 89 e2             	mov    %r12,%rdx
    9ccb:	48 89 de             	mov    %rbx,%rsi
    9cce:	48 89 c7             	mov    %rax,%rdi
    9cd1:	e8 9c 06 00 00       	call   a372 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>
	}
    9cd6:	eb 33                	jmp    9d0b <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS1_EESF_IJEEEEEvPSt13_Rb_tree_nodeIS4_EDpOT_+0xc5>
	  __catch(...)
    9cd8:	48 89 c7             	mov    %rax,%rdi
    9cdb:	e8 f0 93 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    9ce0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9ce4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9ce8:	48 89 d6             	mov    %rdx,%rsi
    9ceb:	48 89 c7             	mov    %rax,%rdi
    9cee:	e8 f5 ec ff ff       	call   89e8 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS4_E>
	      __throw_exception_again;
    9cf3:	e8 18 97 ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
    9cf8:	48 89 c3             	mov    %rax,%rbx
    9cfb:	e8 80 97 ff ff       	call   3480 <__cxa_end_catch@plt>
    9d00:	48 89 d8             	mov    %rbx,%rax
    9d03:	48 89 c7             	mov    %rax,%rdi
    9d06:	e8 c5 97 ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
    9d0b:	48 83 c4 30          	add    $0x30,%rsp
    9d0f:	5b                   	pop    %rbx
    9d10:	41 5c                	pop    %r12
    9d12:	41 5d                	pop    %r13
    9d14:	41 5e                	pop    %r14
    9d16:	5d                   	pop    %rbp
    9d17:	c3                   	ret

0000000000009d18 <_ZNSt8_Rb_treeINSt6thread2idESt4pairIKS1_mESt10_Select1stIS4_ESt4lessIS1_ESaIS4_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9d18:	55                   	push   %rbp
    9d19:	48 89 e5             	mov    %rsp,%rbp
    9d1c:	48 83 ec 20          	sub    $0x20,%rsp
    9d20:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    9d24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d28:	48 8b 50 18          	mov    0x18(%rax),%rdx
    9d2c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9d30:	48 89 d6             	mov    %rdx,%rsi
    9d33:	48 89 c7             	mov    %rax,%rdi
    9d36:	e8 43 e5 ff ff       	call   827e <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt6thread2idEmEEC1EPSt18_Rb_tree_node_base>
    9d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3f:	c9                   	leave
    9d40:	c3                   	ret
    9d41:	90                   	nop

0000000000009d42 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt6thread2idEmEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    9d42:	55                   	push   %rbp
    9d43:	48 89 e5             	mov    %rsp,%rbp
    9d46:	48 83 ec 20          	sub    $0x20,%rsp
    9d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d52:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    9d56:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d5a:	48 89 c7             	mov    %rax,%rdi
    9d5d:	e8 7c 06 00 00       	call   a3de <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>
    9d62:	48 8b 10             	mov    (%rax),%rdx
    9d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d69:	48 89 10             	mov    %rdx,(%rax)
    9d6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d70:	48 89 c7             	mov    %rax,%rdi
    9d73:	e8 0e 00 00 00       	call   9d86 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    9d78:	48 8b 10             	mov    (%rax),%rdx
    9d7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7f:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9d83:	90                   	nop
    9d84:	c9                   	leave
    9d85:	c3                   	ret

0000000000009d86 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9d86:	55                   	push   %rbp
    9d87:	48 89 e5             	mov    %rsp,%rbp
    9d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d92:	5d                   	pop    %rbp
    9d93:	c3                   	ret

0000000000009d94 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEE9_M_valptrEv>:
      _M_valptr() const
    9d94:	55                   	push   %rbp
    9d95:	48 89 e5             	mov    %rsp,%rbp
    9d98:	48 83 ec 10          	sub    $0x10,%rsp
    9d9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    9da0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da4:	48 83 c0 20          	add    $0x20,%rax
    9da8:	48 89 c7             	mov    %rax,%rdi
    9dab:	e8 3c 06 00 00       	call   a3ec <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>
    9db0:	c9                   	leave
    9db1:	c3                   	ret

0000000000009db2 <_ZNKSt10_Select1stISt4pairIKNSt6thread2idEmEEclERKS4_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    9db2:	55                   	push   %rbp
    9db3:	48 89 e5             	mov    %rsp,%rbp
    9db6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    9dbe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9dc2:	5d                   	pop    %rbp
    9dc3:	c3                   	ret

0000000000009dc4 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>:
      constexpr _Head_base()
    9dc4:	55                   	push   %rbp
    9dc5:	48 89 e5             	mov    %rsp,%rbp
    9dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9dcc:	90                   	nop
    9dcd:	5d                   	pop    %rbp
    9dce:	c3                   	ret

0000000000009dcf <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9dcf:	55                   	push   %rbp
    9dd0:	48 89 e5             	mov    %rsp,%rbp
    9dd3:	48 83 ec 10          	sub    $0x10,%rsp
    9dd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ddf:	48 89 c7             	mov    %rax,%rdi
    9de2:	e8 1f 06 00 00       	call   a406 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>
    9de7:	c9                   	leave
    9de8:	c3                   	ret
    9de9:	90                   	nop

0000000000009dea <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>:
      constexpr _Head_base()
    9dea:	55                   	push   %rbp
    9deb:	48 89 e5             	mov    %rsp,%rbp
    9dee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9df2:	90                   	nop
    9df3:	5d                   	pop    %rbp
    9df4:	c3                   	ret

0000000000009df5 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9df5:	55                   	push   %rbp
    9df6:	48 89 e5             	mov    %rsp,%rbp
    9df9:	48 83 ec 10          	sub    $0x10,%rsp
    9dfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e05:	48 89 c7             	mov    %rax,%rdi
    9e08:	e8 07 06 00 00       	call   a414 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>
    9e0d:	c9                   	leave
    9e0e:	c3                   	ret
    9e0f:	90                   	nop

0000000000009e10 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EEC1Ev>:
      constexpr _Head_base()
    9e10:	55                   	push   %rbp
    9e11:	48 89 e5             	mov    %rsp,%rbp
    9e14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    9e18:	90                   	nop
    9e19:	5d                   	pop    %rbp
    9e1a:	c3                   	ret

0000000000009e1b <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9e1b:	55                   	push   %rbp
    9e1c:	48 89 e5             	mov    %rsp,%rbp
    9e1f:	48 83 ec 10          	sub    $0x10,%rsp
    9e23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e2b:	48 89 c7             	mov    %rax,%rdi
    9e2e:	e8 ef 05 00 00       	call   a422 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    9e33:	c9                   	leave
    9e34:	c3                   	ret

0000000000009e35 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9e35:	55                   	push   %rbp
    9e36:	48 89 e5             	mov    %rsp,%rbp
    9e39:	48 83 ec 10          	sub    $0x10,%rsp
    9e3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e45:	48 89 c7             	mov    %rax,%rdi
    9e48:	e8 e3 05 00 00       	call   a430 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>
    9e4d:	c9                   	leave
    9e4e:	c3                   	ret

0000000000009e4f <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9e4f:	55                   	push   %rbp
    9e50:	48 89 e5             	mov    %rsp,%rbp
    9e53:	48 83 ec 10          	sub    $0x10,%rsp
    9e57:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9e5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e5f:	48 89 c7             	mov    %rax,%rdi
    9e62:	e8 d7 05 00 00       	call   a43e <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>
    9e67:	c9                   	leave
    9e68:	c3                   	ret

0000000000009e69 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko10ThreadPoolEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9e69:	55                   	push   %rbp
    9e6a:	48 89 e5             	mov    %rsp,%rbp
    9e6d:	48 83 ec 10          	sub    $0x10,%rsp
    9e71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e79:	48 89 c7             	mov    %rax,%rdi
    9e7c:	e8 d7 05 00 00       	call   a458 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>
    9e81:	c9                   	leave
    9e82:	c3                   	ret

0000000000009e83 <_ZSt12__get_helperILm0EPN4neko10ThreadPoolEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9e83:	55                   	push   %rbp
    9e84:	48 89 e5             	mov    %rsp,%rbp
    9e87:	48 83 ec 10          	sub    $0x10,%rsp
    9e8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e93:	48 89 c7             	mov    %rax,%rdi
    9e96:	e8 cb 05 00 00       	call   a466 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>
    9e9b:	c9                   	leave
    9e9c:	c3                   	ret

0000000000009e9d <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9e9d:	55                   	push   %rbp
    9e9e:	48 89 e5             	mov    %rsp,%rbp
    9ea1:	48 83 ec 10          	sub    $0x10,%rsp
    9ea5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ead:	48 89 c7             	mov    %rax,%rdi
    9eb0:	e8 cb 05 00 00       	call   a480 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>
    9eb5:	c9                   	leave
    9eb6:	c3                   	ret

0000000000009eb7 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9eb7:	55                   	push   %rbp
    9eb8:	48 89 e5             	mov    %rsp,%rbp
    9ebb:	48 83 ec 10          	sub    $0x10,%rsp
    9ebf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9ec3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec7:	48 89 c7             	mov    %rax,%rdi
    9eca:	e8 bf 05 00 00       	call   a48e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>
    9ecf:	c9                   	leave
    9ed0:	c3                   	ret

0000000000009ed1 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9ed1:	55                   	push   %rbp
    9ed2:	48 89 e5             	mov    %rsp,%rbp
    9ed5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9ed9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9edd:	5d                   	pop    %rbp
    9ede:	c3                   	ret

0000000000009edf <_ZNSt14_Function_base13_Base_managerIZN4neko6Engine5startEvEUlvE_E9_M_createIRKS3_EEvRSt9_Any_dataOT_St17integral_constantIbLb1EE>:
	  _M_create(_Any_data& __dest, _Fn&& __f, true_type)
    9edf:	55                   	push   %rbp
    9ee0:	48 89 e5             	mov    %rsp,%rbp
    9ee3:	53                   	push   %rbx
    9ee4:	48 83 ec 18          	sub    $0x18,%rsp
    9ee8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9eec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	    ::new (__dest._M_access()) _Functor(std::forward<_Fn>(__f));
    9ef0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ef4:	48 89 c7             	mov    %rax,%rdi
    9ef7:	e8 d2 9d ff ff       	call   3cce <_ZNSt9_Any_data9_M_accessEv>
    9efc:	48 89 c6             	mov    %rax,%rsi
    9eff:	bf 08 00 00 00       	mov    $0x8,%edi
    9f04:	e8 b7 99 ff ff       	call   38c0 <_ZnwmPv>
    9f09:	48 89 c3             	mov    %rax,%rbx
    9f0c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f10:	48 89 c7             	mov    %rax,%rdi
    9f13:	e8 b9 ff ff ff       	call   9ed1 <_ZSt7forwardIRKZN4neko6Engine5startEvEUlvE_EOT_RNSt16remove_referenceIS5_E4typeE>
    9f18:	48 8b 00             	mov    (%rax),%rax
    9f1b:	48 89 03             	mov    %rax,(%rbx)
	  }
    9f1e:	90                   	nop
    9f1f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f23:	c9                   	leave
    9f24:	c3                   	ret
    9f25:	90                   	nop

0000000000009f26 <_ZNSt9_Any_data9_M_accessIZN4neko6Engine5startEvEUlvE_EERT_v>:
      _M_access() noexcept
    9f26:	55                   	push   %rbp
    9f27:	48 89 e5             	mov    %rsp,%rbp
    9f2a:	48 83 ec 10          	sub    $0x10,%rsp
    9f2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Tp*>(_M_access()); }
    9f32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f36:	48 89 c7             	mov    %rax,%rdi
    9f39:	e8 90 9d ff ff       	call   3cce <_ZNSt9_Any_data9_M_accessEv>
    9f3e:	c9                   	leave
    9f3f:	c3                   	ret

0000000000009f40 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    9f40:	55                   	push   %rbp
    9f41:	48 89 e5             	mov    %rsp,%rbp
    9f44:	48 83 ec 10          	sub    $0x10,%rsp
    9f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    9f4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f50:	48 89 c7             	mov    %rax,%rdi
    9f53:	e8 50 05 00 00       	call   a4a8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>
    9f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f5c:	48 89 c7             	mov    %rax,%rdi
    9f5f:	e8 60 05 00 00       	call   a4c4 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>
    9f64:	90                   	nop
    9f65:	c9                   	leave
    9f66:	c3                   	ret

0000000000009f67 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    9f67:	55                   	push   %rbp
    9f68:	48 89 e5             	mov    %rsp,%rbp
    9f6b:	48 83 ec 10          	sub    $0x10,%rsp
    9f6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f77:	48 89 c7             	mov    %rax,%rdi
    9f7a:	e8 5b 05 00 00       	call   a4da <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>
    9f7f:	c9                   	leave
    9f80:	c3                   	ret

0000000000009f81 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9f81:	55                   	push   %rbp
    9f82:	48 89 e5             	mov    %rsp,%rbp
    9f85:	48 83 ec 10          	sub    $0x10,%rsp
    9f89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9f8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f91:	48 89 c7             	mov    %rax,%rdi
    9f94:	e8 4f 05 00 00       	call   a4e8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>
    9f99:	c9                   	leave
    9f9a:	c3                   	ret

0000000000009f9b <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    9f9b:	55                   	push   %rbp
    9f9c:	48 89 e5             	mov    %rsp,%rbp
    9f9f:	48 83 ec 10          	sub    $0x10,%rsp
    9fa3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    9fa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fab:	48 89 c7             	mov    %rax,%rdi
    9fae:	e8 4f 05 00 00       	call   a502 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>
    9fb3:	c9                   	leave
    9fb4:	c3                   	ret
    9fb5:	90                   	nop

0000000000009fb6 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    9fb6:	55                   	push   %rbp
    9fb7:	48 89 e5             	mov    %rsp,%rbp
    9fba:	48 83 ec 20          	sub    $0x20,%rsp
    9fbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fc6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    9fca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fce:	48 89 c7             	mov    %rax,%rdi
    9fd1:	e8 46 05 00 00       	call   a51c <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>
    9fd6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9fda:	0f 92 c0             	setb   %al
    9fdd:	0f b6 c0             	movzbl %al,%eax
    9fe0:	48 85 c0             	test   %rax,%rax
    9fe3:	0f 95 c0             	setne  %al
    9fe6:	84 c0                	test   %al,%al
    9fe8:	74 1a                	je     a004 <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    9fea:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    9ff1:	ff ff 1f 
    9ff4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9ff8:	73 05                	jae    9fff <_ZNSt15__new_allocatorIPSt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    9ffa:	e8 11 92 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    9fff:	e8 8c 90 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a004:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a008:	48 c1 e0 03          	shl    $0x3,%rax
    a00c:	48 89 c7             	mov    %rax,%rdi
    a00f:	e8 ac 92 ff ff       	call   32c0 <_Znwm@plt>
    a014:	90                   	nop
      }
    a015:	c9                   	leave
    a016:	c3                   	ret
    a017:	90                   	nop

000000000000a018 <_ZNSt15__new_allocatorISt8functionIFvvEEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a018:	55                   	push   %rbp
    a019:	48 89 e5             	mov    %rsp,%rbp
    a01c:	48 83 ec 20          	sub    $0x20,%rsp
    a020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a024:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a028:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a02c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a030:	48 c1 e0 05          	shl    $0x5,%rax
    a034:	48 89 c2             	mov    %rax,%rdx
    a037:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a03b:	48 89 d6             	mov    %rdx,%rsi
    a03e:	48 89 c7             	mov    %rax,%rdi
    a041:	e8 8a 92 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    a046:	c9                   	leave
    a047:	c3                   	ret

000000000000a048 <_ZNSt15__new_allocatorIPSt8functionIFvvEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a048:	55                   	push   %rbp
    a049:	48 89 e5             	mov    %rsp,%rbp
    a04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a050:	90                   	nop
    a051:	5d                   	pop    %rbp
    a052:	c3                   	ret

000000000000a053 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_>:
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
    a053:	55                   	push   %rbp
    a054:	48 89 e5             	mov    %rsp,%rbp
    a057:	48 83 ec 10          	sub    $0x10,%rsp
    a05b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a05f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  for (; __first != __last; ++__first)
    a063:	eb 19                	jmp    a07e <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x2b>
	    std::_Destroy(std::__addressof(*__first));
    a065:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a069:	48 89 c7             	mov    %rax,%rdi
    a06c:	e8 bf 04 00 00       	call   a530 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>
    a071:	48 89 c7             	mov    %rax,%rdi
    a074:	e8 c5 04 00 00       	call   a53e <_ZSt8_DestroyISt8functionIFvvEEEvPT_>
	  for (; __first != __last; ++__first)
    a079:	48 83 45 f8 20       	addq   $0x20,-0x8(%rbp)
    a07e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a082:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a086:	75 dd                	jne    a065 <_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8functionIFvvEEEEvT_S6_+0x12>
	}
    a088:	90                   	nop
    a089:	90                   	nop
    a08a:	c9                   	leave
    a08b:	c3                   	ret

000000000000a08c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE7destroyIS5_EEvPT_>:
	destroy(_Up* __p)
    a08c:	55                   	push   %rbp
    a08d:	48 89 e5             	mov    %rsp,%rbp
    a090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a094:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    a098:	90                   	nop
    a099:	5d                   	pop    %rbp
    a09a:	c3                   	ret
    a09b:	90                   	nop

000000000000a09c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE10deallocateEPS6_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a09c:	55                   	push   %rbp
    a09d:	48 89 e5             	mov    %rsp,%rbp
    a0a0:	48 83 ec 20          	sub    $0x20,%rsp
    a0a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a0b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a0b4:	48 89 d0             	mov    %rdx,%rax
    a0b7:	48 01 c0             	add    %rax,%rax
    a0ba:	48 01 d0             	add    %rdx,%rax
    a0bd:	48 c1 e0 04          	shl    $0x4,%rax
    a0c1:	48 89 c2             	mov    %rax,%rdx
    a0c4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0c8:	48 89 d6             	mov    %rdx,%rsi
    a0cb:	48 89 c7             	mov    %rax,%rdi
    a0ce:	e8 fd 91 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    a0d3:	c9                   	leave
    a0d4:	c3                   	ret

000000000000a0d5 <_ZNSt16allocator_traitsISaISt8functionIFvvEEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a0d5:	55                   	push   %rbp
    a0d6:	48 89 e5             	mov    %rsp,%rbp
    a0d9:	48 83 ec 10          	sub    $0x10,%rsp
    a0dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a0e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0e5:	48 89 c7             	mov    %rax,%rdi
    a0e8:	e8 6d 04 00 00       	call   a55a <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>
      }
    a0ed:	c9                   	leave
    a0ee:	c3                   	ret

000000000000a0ef <_ZSt4copyIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    a0ef:	55                   	push   %rbp
    a0f0:	48 89 e5             	mov    %rsp,%rbp
    a0f3:	53                   	push   %rbx
    a0f4:	48 83 ec 28          	sub    $0x28,%rsp
    a0f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a0fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a100:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    a104:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a108:	48 89 c7             	mov    %rax,%rdi
    a10b:	e8 64 04 00 00       	call   a574 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a110:	48 89 c3             	mov    %rax,%rbx
    a113:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a117:	48 89 c7             	mov    %rax,%rdi
    a11a:	e8 55 04 00 00       	call   a574 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a11f:	48 89 c1             	mov    %rax,%rcx
    a122:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a126:	48 89 c2             	mov    %rax,%rdx
    a129:	48 89 de             	mov    %rbx,%rsi
    a12c:	48 89 cf             	mov    %rcx,%rdi
    a12f:	e8 4e 04 00 00       	call   a582 <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    a134:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a138:	c9                   	leave
    a139:	c3                   	ret

000000000000a13a <_ZSt13copy_backwardIPPSt8functionIFvvEES4_ET0_T_S6_S5_>:
   *  that the start of the output range may overlap [first,last).
  */
  template<typename _BI1, typename _BI2>
    _GLIBCXX20_CONSTEXPR
    inline _BI2
    copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
    a13a:	55                   	push   %rbp
    a13b:	48 89 e5             	mov    %rsp,%rbp
    a13e:	53                   	push   %rbx
    a13f:	48 83 ec 28          	sub    $0x28,%rsp
    a143:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a147:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a14b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_BI2,
	    typename iterator_traits<_BI1>::reference>)
      __glibcxx_requires_can_decrement_range(__first, __last, __result);

      return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    a14f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a153:	48 89 c7             	mov    %rax,%rdi
    a156:	e8 19 04 00 00       	call   a574 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a15b:	48 89 c3             	mov    %rax,%rbx
    a15e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a162:	48 89 c7             	mov    %rax,%rdi
    a165:	e8 0a 04 00 00       	call   a574 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>
    a16a:	48 89 c1             	mov    %rax,%rcx
    a16d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a171:	48 89 c2             	mov    %rax,%rdx
    a174:	48 89 de             	mov    %rbx,%rsi
    a177:	48 89 cf             	mov    %rcx,%rdi
    a17a:	e8 6d 04 00 00       	call   a5ec <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    }
    a17f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a183:	c9                   	leave
    a184:	c3                   	ret
    a185:	90                   	nop

000000000000a186 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a186:	55                   	push   %rbp
    a187:	48 89 e5             	mov    %rsp,%rbp
    a18a:	48 83 ec 20          	sub    $0x20,%rsp
    a18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a196:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    a19a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a19e:	48 89 c7             	mov    %rax,%rdi
    a1a1:	e8 b0 04 00 00       	call   a656 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    a1a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a1aa:	0f 92 c0             	setb   %al
    a1ad:	0f b6 c0             	movzbl %al,%eax
    a1b0:	48 85 c0             	test   %rax,%rax
    a1b3:	0f 95 c0             	setne  %al
    a1b6:	84 c0                	test   %al,%al
    a1b8:	74 1a                	je     a1d4 <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    a1ba:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
    a1c1:	ff ff 07 
    a1c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a1c8:	73 05                	jae    a1cf <_ZNSt15__new_allocatorISt8functionIFvvEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    a1ca:	e8 41 90 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    a1cf:	e8 bc 8e ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a1d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a1d8:	48 c1 e0 05          	shl    $0x5,%rax
    a1dc:	48 89 c7             	mov    %rax,%rdi
    a1df:	e8 dc 90 ff ff       	call   32c0 <_Znwm@plt>
    a1e4:	90                   	nop
      }
    a1e5:	c9                   	leave
    a1e6:	c3                   	ret
    a1e7:	90                   	nop

000000000000a1e8 <_ZNKSt15__new_allocatorISt6threadE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    a1e8:	55                   	push   %rbp
    a1e9:	48 89 e5             	mov    %rsp,%rbp
    a1ec:	48 83 ec 10          	sub    $0x10,%rsp
    a1f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    a1f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f8:	48 89 c7             	mov    %rax,%rdi
    a1fb:	e8 4c 00 00 00       	call   a24c <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>
    a200:	c9                   	leave
    a201:	c3                   	ret

000000000000a202 <_ZNSt6threadC1Ev>:
    thread() noexcept = default;
    a202:	55                   	push   %rbp
    a203:	48 89 e5             	mov    %rsp,%rbp
    a206:	48 83 ec 10          	sub    $0x10,%rsp
    a20a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a20e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a212:	48 89 c7             	mov    %rax,%rdi
    a215:	e8 d8 9b ff ff       	call   3df2 <_ZNSt6thread2idC1Ev>
    a21a:	90                   	nop
    a21b:	c9                   	leave
    a21c:	c3                   	ret

000000000000a21d <_ZSt10_ConstructISt6threadJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    a21d:	55                   	push   %rbp
    a21e:	48 89 e5             	mov    %rsp,%rbp
    a221:	48 83 ec 10          	sub    $0x10,%rsp
    a225:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    a229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a22d:	48 89 c6             	mov    %rax,%rsi
    a230:	bf 08 00 00 00       	mov    $0x8,%edi
    a235:	e8 86 96 ff ff       	call   38c0 <_ZnwmPv>
    a23a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a241:	48 89 c7             	mov    %rax,%rdi
    a244:	e8 b9 ff ff ff       	call   a202 <_ZNSt6threadC1Ev>
    }
    a249:	90                   	nop
    a24a:	c9                   	leave
    a24b:	c3                   	ret

000000000000a24c <_ZNKSt15__new_allocatorISt6threadE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a24c:	55                   	push   %rbp
    a24d:	48 89 e5             	mov    %rsp,%rbp
    a250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a254:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a25b:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    a25e:	5d                   	pop    %rbp
    a25f:	c3                   	ret

000000000000a260 <_ZSt19__relocate_object_aISt6threadS0_SaIS0_EEvPT_PT0_RT1_>:
    __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
    a260:	55                   	push   %rbp
    a261:	48 89 e5             	mov    %rsp,%rbp
    a264:	48 83 ec 20          	sub    $0x20,%rsp
    a268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a26c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a270:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      __traits::construct(__alloc, __dest, std::move(*__orig));
    a274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a278:	48 89 c7             	mov    %rax,%rdi
    a27b:	e8 ea 03 00 00       	call   a66a <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>
    a280:	48 89 c2             	mov    %rax,%rdx
    a283:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a287:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a28b:	48 89 ce             	mov    %rcx,%rsi
    a28e:	48 89 c7             	mov    %rax,%rdi
    a291:	e8 e2 03 00 00       	call   a678 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>
      __traits::destroy(__alloc, std::__addressof(*__orig));
    a296:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a29a:	48 89 c7             	mov    %rax,%rdi
    a29d:	e8 7d f2 ff ff       	call   951f <_ZSt11__addressofISt6threadEPT_RS1_>
    a2a2:	48 89 c2             	mov    %rax,%rdx
    a2a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2a9:	48 89 d6             	mov    %rdx,%rsi
    a2ac:	48 89 c7             	mov    %rax,%rdi
    a2af:	e8 fd 03 00 00       	call   a6b1 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>
    }
    a2b4:	90                   	nop
    a2b5:	c9                   	leave
    a2b6:	c3                   	ret
    a2b7:	90                   	nop

000000000000a2b8 <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EEC1IS2_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    a2b8:	55                   	push   %rbp
    a2b9:	48 89 e5             	mov    %rsp,%rbp
    a2bc:	48 83 ec 10          	sub    $0x10,%rsp
    a2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    a2c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a2cc:	48 89 c7             	mov    %rax,%rdi
    a2cf:	e8 8a c1 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    a2d4:	48 8b 10             	mov    (%rax),%rdx
    a2d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2db:	48 89 10             	mov    %rdx,(%rax)
    a2de:	90                   	nop
    a2df:	c9                   	leave
    a2e0:	c3                   	ret
    a2e1:	90                   	nop

000000000000a2e2 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEEC1Ev>:
      _Tuple_impl()
    a2e2:	55                   	push   %rbp
    a2e3:	48 89 e5             	mov    %rsp,%rbp
    a2e6:	48 83 ec 10          	sub    $0x10,%rsp
    a2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a2ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f2:	48 89 c7             	mov    %rax,%rdi
    a2f5:	e8 de 03 00 00       	call   a6d8 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>
    a2fa:	90                   	nop
    a2fb:	c9                   	leave
    a2fc:	c3                   	ret
    a2fd:	90                   	nop

000000000000a2fe <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EEC1Ev>:
      constexpr _Head_base()
    a2fe:	55                   	push   %rbp
    a2ff:	48 89 e5             	mov    %rsp,%rbp
    a302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a30a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a311:	90                   	nop
    a312:	5d                   	pop    %rbp
    a313:	c3                   	ret

000000000000a314 <_ZNSt11_Tuple_implILm0EJPNSt6thread6_StateESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a314:	55                   	push   %rbp
    a315:	48 89 e5             	mov    %rsp,%rbp
    a318:	48 83 ec 10          	sub    $0x10,%rsp
    a31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a324:	48 89 c7             	mov    %rax,%rdi
    a327:	e8 b7 03 00 00       	call   a6e3 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>
    a32c:	c9                   	leave
    a32d:	c3                   	ret

000000000000a32e <_ZSt12__get_helperILm1ESt14default_deleteINSt6thread6_StateEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    a32e:	55                   	push   %rbp
    a32f:	48 89 e5             	mov    %rsp,%rbp
    a332:	48 83 ec 10          	sub    $0x10,%rsp
    a336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    a33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33e:	48 89 c7             	mov    %rax,%rdi
    a341:	e8 ab 03 00 00       	call   a6f1 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>
    a346:	c9                   	leave
    a347:	c3                   	ret

000000000000a348 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE8allocateERS7_m>:
      allocate(allocator_type& __a, size_type __n)
    a348:	55                   	push   %rbp
    a349:	48 89 e5             	mov    %rsp,%rbp
    a34c:	48 83 ec 10          	sub    $0x10,%rsp
    a350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    a358:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a35c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a360:	ba 00 00 00 00       	mov    $0x0,%edx
    a365:	48 89 ce             	mov    %rcx,%rsi
    a368:	48 89 c7             	mov    %rax,%rdi
    a36b:	e8 9c 03 00 00       	call   a70c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>
    a370:	c9                   	leave
    a371:	c3                   	ret

000000000000a372 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESD_IJEEEEEvRS7_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a372:	55                   	push   %rbp
    a373:	48 89 e5             	mov    %rsp,%rbp
    a376:	41 54                	push   %r12
    a378:	53                   	push   %rbx
    a379:	48 83 ec 30          	sub    $0x30,%rsp
    a37d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a381:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a385:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    a389:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    a38d:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a391:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a395:	48 89 c7             	mov    %rax,%rdi
    a398:	e8 5e d9 ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a39d:	49 89 c4             	mov    %rax,%r12
    a3a0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a3a4:	48 89 c7             	mov    %rax,%rdi
    a3a7:	e8 41 d9 ff ff       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a3ac:	48 89 c3             	mov    %rax,%rbx
    a3af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a3b3:	48 89 c7             	mov    %rax,%rdi
    a3b6:	e8 24 d9 ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a3bb:	48 89 c2             	mov    %rax,%rdx
    a3be:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    a3c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3c6:	4d 89 e0             	mov    %r12,%r8
    a3c9:	48 89 d9             	mov    %rbx,%rcx
    a3cc:	48 89 c7             	mov    %rax,%rdi
    a3cf:	e8 c8 03 00 00       	call   a79c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>
	}
    a3d4:	90                   	nop
    a3d5:	48 83 c4 30          	add    $0x30,%rsp
    a3d9:	5b                   	pop    %rbx
    a3da:	41 5c                	pop    %r12
    a3dc:	5d                   	pop    %rbp
    a3dd:	c3                   	ret

000000000000a3de <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a3de:	55                   	push   %rbp
    a3df:	48 89 e5             	mov    %rsp,%rbp
    a3e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ea:	5d                   	pop    %rbp
    a3eb:	c3                   	ret

000000000000a3ec <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    a3ec:	55                   	push   %rbp
    a3ed:	48 89 e5             	mov    %rsp,%rbp
    a3f0:	48 83 ec 10          	sub    $0x10,%rsp
    a3f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    a3f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3fc:	48 89 c7             	mov    %rax,%rdi
    a3ff:	e8 48 04 00 00       	call   a84c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>
    a404:	c9                   	leave
    a405:	c3                   	ret

000000000000a406 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a406:	55                   	push   %rbp
    a407:	48 89 e5             	mov    %rsp,%rbp
    a40a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a412:	5d                   	pop    %rbp
    a413:	c3                   	ret

000000000000a414 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>:
    a414:	55                   	push   %rbp
    a415:	48 89 e5             	mov    %rsp,%rbp
    a418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a41c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a420:	5d                   	pop    %rbp
    a421:	c3                   	ret

000000000000a422 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    a422:	55                   	push   %rbp
    a423:	48 89 e5             	mov    %rsp,%rbp
    a426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a42a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42e:	5d                   	pop    %rbp
    a42f:	c3                   	ret

000000000000a430 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a430:	55                   	push   %rbp
    a431:	48 89 e5             	mov    %rsp,%rbp
    a434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43c:	5d                   	pop    %rbp
    a43d:	c3                   	ret

000000000000a43e <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a43e:	55                   	push   %rbp
    a43f:	48 89 e5             	mov    %rsp,%rbp
    a442:	48 83 ec 10          	sub    $0x10,%rsp
    a446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a44a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a44e:	48 89 c7             	mov    %rax,%rdi
    a451:	e8 04 04 00 00       	call   a85a <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>
    a456:	c9                   	leave
    a457:	c3                   	ret

000000000000a458 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko10ThreadPoolEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a458:	55                   	push   %rbp
    a459:	48 89 e5             	mov    %rsp,%rbp
    a45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a464:	5d                   	pop    %rbp
    a465:	c3                   	ret

000000000000a466 <_ZNSt11_Tuple_implILm0EJPN4neko10ThreadPoolESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a466:	55                   	push   %rbp
    a467:	48 89 e5             	mov    %rsp,%rbp
    a46a:	48 83 ec 10          	sub    $0x10,%rsp
    a46e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a476:	48 89 c7             	mov    %rax,%rdi
    a479:	e8 ea 03 00 00       	call   a868 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>
    a47e:	c9                   	leave
    a47f:	c3                   	ret

000000000000a480 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a480:	55                   	push   %rbp
    a481:	48 89 e5             	mov    %rsp,%rbp
    a484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a48c:	5d                   	pop    %rbp
    a48d:	c3                   	ret

000000000000a48e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a48e:	55                   	push   %rbp
    a48f:	48 89 e5             	mov    %rsp,%rbp
    a492:	48 83 ec 10          	sub    $0x10,%rsp
    a496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49e:	48 89 c7             	mov    %rax,%rdi
    a4a1:	e8 d0 03 00 00       	call   a876 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>
    a4a6:	c9                   	leave
    a4a7:	c3                   	ret

000000000000a4a8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>:
      _Tuple_impl()
    a4a8:	55                   	push   %rbp
    a4a9:	48 89 e5             	mov    %rsp,%rbp
    a4ac:	48 83 ec 10          	sub    $0x10,%rsp
    a4b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    a4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b8:	48 89 c7             	mov    %rax,%rdi
    a4bb:	e8 c4 03 00 00       	call   a884 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>
    a4c0:	90                   	nop
    a4c1:	c9                   	leave
    a4c2:	c3                   	ret
    a4c3:	90                   	nop

000000000000a4c4 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>:
      constexpr _Head_base()
    a4c4:	55                   	push   %rbp
    a4c5:	48 89 e5             	mov    %rsp,%rbp
    a4c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a4cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a4d7:	90                   	nop
    a4d8:	5d                   	pop    %rbp
    a4d9:	c3                   	ret

000000000000a4da <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a4da:	55                   	push   %rbp
    a4db:	48 89 e5             	mov    %rsp,%rbp
    a4de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4e6:	5d                   	pop    %rbp
    a4e7:	c3                   	ret

000000000000a4e8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a4e8:	55                   	push   %rbp
    a4e9:	48 89 e5             	mov    %rsp,%rbp
    a4ec:	48 83 ec 10          	sub    $0x10,%rsp
    a4f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f8:	48 89 c7             	mov    %rax,%rdi
    a4fb:	e8 8f 03 00 00       	call   a88f <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>
    a500:	c9                   	leave
    a501:	c3                   	ret

000000000000a502 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a502:	55                   	push   %rbp
    a503:	48 89 e5             	mov    %rsp,%rbp
    a506:	48 83 ec 10          	sub    $0x10,%rsp
    a50a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a50e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a512:	48 89 c7             	mov    %rax,%rdi
    a515:	e8 83 03 00 00       	call   a89d <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>
    a51a:	c9                   	leave
    a51b:	c3                   	ret

000000000000a51c <_ZNKSt15__new_allocatorIPSt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a51c:	55                   	push   %rbp
    a51d:	48 89 e5             	mov    %rsp,%rbp
    a520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a524:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a52b:	ff ff 0f 
      }
    a52e:	5d                   	pop    %rbp
    a52f:	c3                   	ret

000000000000a530 <_ZSt11__addressofISt8functionIFvvEEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    a530:	55                   	push   %rbp
    a531:	48 89 e5             	mov    %rsp,%rbp
    a534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    a538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a53c:	5d                   	pop    %rbp
    a53d:	c3                   	ret

000000000000a53e <_ZSt8_DestroyISt8functionIFvvEEEvPT_>:
    _Destroy(_Tp* __pointer)
    a53e:	55                   	push   %rbp
    a53f:	48 89 e5             	mov    %rsp,%rbp
    a542:	48 83 ec 10          	sub    $0x10,%rsp
    a546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      __pointer->~_Tp();
    a54a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a54e:	48 89 c7             	mov    %rax,%rdi
    a551:	e8 60 9c ff ff       	call   41b6 <_ZNSt8functionIFvvEED1Ev>
    }
    a556:	90                   	nop
    a557:	c9                   	leave
    a558:	c3                   	ret
    a559:	90                   	nop

000000000000a55a <_ZNKSt15__new_allocatorISt8functionIFvvEEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    a55a:	55                   	push   %rbp
    a55b:	48 89 e5             	mov    %rsp,%rbp
    a55e:	48 83 ec 10          	sub    $0x10,%rsp
    a562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    a566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a56a:	48 89 c7             	mov    %rax,%rdi
    a56d:	e8 e4 00 00 00       	call   a656 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>
    a572:	c9                   	leave
    a573:	c3                   	ret

000000000000a574 <_ZSt12__miter_baseIPPSt8functionIFvvEEET_S5_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    a574:	55                   	push   %rbp
    a575:	48 89 e5             	mov    %rsp,%rbp
    a578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a580:	5d                   	pop    %rbp
    a581:	c3                   	ret

000000000000a582 <_ZSt13__copy_move_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    a582:	55                   	push   %rbp
    a583:	48 89 e5             	mov    %rsp,%rbp
    a586:	41 54                	push   %r12
    a588:	53                   	push   %rbx
    a589:	48 83 ec 20          	sub    $0x20,%rsp
    a58d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a591:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a595:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a599:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a59d:	48 89 c7             	mov    %rax,%rdi
    a5a0:	e8 06 03 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a5a5:	49 89 c4             	mov    %rax,%r12
    a5a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a5ac:	48 89 c7             	mov    %rax,%rdi
    a5af:	e8 f7 02 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a5b4:	48 89 c3             	mov    %rax,%rbx
    a5b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a5bb:	48 89 c7             	mov    %rax,%rdi
    a5be:	e8 e8 02 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a5c3:	4c 89 e2             	mov    %r12,%rdx
    a5c6:	48 89 de             	mov    %rbx,%rsi
    a5c9:	48 89 c7             	mov    %rax,%rdi
    a5cc:	e8 e8 02 00 00       	call   a8b9 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a5d1:	48 89 c2             	mov    %rax,%rdx
    a5d4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a5d8:	48 89 d6             	mov    %rdx,%rsi
    a5db:	48 89 c7             	mov    %rax,%rdi
    a5de:	e8 03 03 00 00       	call   a8e6 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a5e3:	48 83 c4 20          	add    $0x20,%rsp
    a5e7:	5b                   	pop    %rbx
    a5e8:	41 5c                	pop    %r12
    a5ea:	5d                   	pop    %rbp
    a5eb:	c3                   	ret

000000000000a5ec <_ZSt22__copy_move_backward_aILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a(_II __first, _II __last, _OI __result)
    a5ec:	55                   	push   %rbp
    a5ed:	48 89 e5             	mov    %rsp,%rbp
    a5f0:	41 54                	push   %r12
    a5f2:	53                   	push   %rbx
    a5f3:	48 83 ec 20          	sub    $0x20,%rsp
    a5f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a5fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a5ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    a603:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a607:	48 89 c7             	mov    %rax,%rdi
    a60a:	e8 9c 02 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a60f:	49 89 c4             	mov    %rax,%r12
    a612:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a616:	48 89 c7             	mov    %rax,%rdi
    a619:	e8 8d 02 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a61e:	48 89 c3             	mov    %rax,%rbx
    a621:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a625:	48 89 c7             	mov    %rax,%rdi
    a628:	e8 7e 02 00 00       	call   a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>
    a62d:	4c 89 e2             	mov    %r12,%rdx
    a630:	48 89 de             	mov    %rbx,%rsi
    a633:	48 89 c7             	mov    %rax,%rdi
    a636:	e8 bd 02 00 00       	call   a8f8 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a63b:	48 89 c2             	mov    %rax,%rdx
    a63e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a642:	48 89 d6             	mov    %rdx,%rsi
    a645:	48 89 c7             	mov    %rax,%rdi
    a648:	e8 99 02 00 00       	call   a8e6 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>
    }
    a64d:	48 83 c4 20          	add    $0x20,%rsp
    a651:	5b                   	pop    %rbx
    a652:	41 5c                	pop    %r12
    a654:	5d                   	pop    %rbp
    a655:	c3                   	ret

000000000000a656 <_ZNKSt15__new_allocatorISt8functionIFvvEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a656:	55                   	push   %rbp
    a657:	48 89 e5             	mov    %rsp,%rbp
    a65a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a65e:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
    a665:	ff ff 03 
      }
    a668:	5d                   	pop    %rbp
    a669:	c3                   	ret

000000000000a66a <_ZSt4moveIRSt6threadEONSt16remove_referenceIT_E4typeEOS3_>:
    move(_Tp&& __t) noexcept
    a66a:	55                   	push   %rbp
    a66b:	48 89 e5             	mov    %rsp,%rbp
    a66e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    a672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a676:	5d                   	pop    %rbp
    a677:	c3                   	ret

000000000000a678 <_ZNSt16allocator_traitsISaISt6threadEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    a678:	55                   	push   %rbp
    a679:	48 89 e5             	mov    %rsp,%rbp
    a67c:	48 83 ec 20          	sub    $0x20,%rsp
    a680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a688:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    a68c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a690:	48 89 c7             	mov    %rax,%rdi
    a693:	e8 8d 02 00 00       	call   a925 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a698:	48 89 c2             	mov    %rax,%rdx
    a69b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a69f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a3:	48 89 ce             	mov    %rcx,%rsi
    a6a6:	48 89 c7             	mov    %rax,%rdi
    a6a9:	e8 86 02 00 00       	call   a934 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>
	}
    a6ae:	90                   	nop
    a6af:	c9                   	leave
    a6b0:	c3                   	ret

000000000000a6b1 <_ZNSt16allocator_traitsISaISt6threadEE7destroyIS0_EEvRS1_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    a6b1:	55                   	push   %rbp
    a6b2:	48 89 e5             	mov    %rsp,%rbp
    a6b5:	48 83 ec 10          	sub    $0x10,%rsp
    a6b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    a6c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6c9:	48 89 d6             	mov    %rdx,%rsi
    a6cc:	48 89 c7             	mov    %rax,%rdi
    a6cf:	e8 a8 02 00 00       	call   a97c <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>
	}
    a6d4:	90                   	nop
    a6d5:	c9                   	leave
    a6d6:	c3                   	ret
    a6d7:	90                   	nop

000000000000a6d8 <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EEC1Ev>:
      constexpr _Head_base()
    a6d8:	55                   	push   %rbp
    a6d9:	48 89 e5             	mov    %rsp,%rbp
    a6dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a6e0:	90                   	nop
    a6e1:	5d                   	pop    %rbp
    a6e2:	c3                   	ret

000000000000a6e3 <_ZNSt10_Head_baseILm0EPNSt6thread6_StateELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a6e3:	55                   	push   %rbp
    a6e4:	48 89 e5             	mov    %rsp,%rbp
    a6e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ef:	5d                   	pop    %rbp
    a6f0:	c3                   	ret

000000000000a6f1 <_ZNSt11_Tuple_implILm1EJSt14default_deleteINSt6thread6_StateEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    a6f1:	55                   	push   %rbp
    a6f2:	48 89 e5             	mov    %rsp,%rbp
    a6f5:	48 83 ec 10          	sub    $0x10,%rsp
    a6f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a701:	48 89 c7             	mov    %rax,%rdi
    a704:	e8 92 02 00 00       	call   a99b <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>
    a709:	c9                   	leave
    a70a:	c3                   	ret
    a70b:	90                   	nop

000000000000a70c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    a70c:	55                   	push   %rbp
    a70d:	48 89 e5             	mov    %rsp,%rbp
    a710:	48 83 ec 20          	sub    $0x20,%rsp
    a714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a718:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a71c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    a720:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a724:	48 89 c7             	mov    %rax,%rdi
    a727:	e8 7e 02 00 00       	call   a9aa <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>
    a72c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a730:	0f 92 c0             	setb   %al
    a733:	0f b6 c0             	movzbl %al,%eax
    a736:	48 85 c0             	test   %rax,%rax
    a739:	0f 95 c0             	setne  %al
    a73c:	84 c0                	test   %al,%al
    a73e:	74 1a                	je     a75a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    a740:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a747:	55 55 05 
    a74a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a74e:	73 05                	jae    a755 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    a750:	e8 bb 8a ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    a755:	e8 36 89 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    a75a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a75e:	48 89 d0             	mov    %rdx,%rax
    a761:	48 01 c0             	add    %rax,%rax
    a764:	48 01 d0             	add    %rdx,%rax
    a767:	48 c1 e0 04          	shl    $0x4,%rax
    a76b:	48 89 c7             	mov    %rax,%rdi
    a76e:	e8 4d 8b ff ff       	call   32c0 <_Znwm@plt>
    a773:	90                   	nop
      }
    a774:	c9                   	leave
    a775:	c3                   	ret

000000000000a776 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>:
      constexpr tuple(tuple&&) = default;
    a776:	55                   	push   %rbp
    a777:	48 89 e5             	mov    %rsp,%rbp
    a77a:	48 83 ec 10          	sub    $0x10,%rsp
    a77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a786:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a78a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a78e:	48 89 d6             	mov    %rdx,%rsi
    a791:	48 89 c7             	mov    %rax,%rdi
    a794:	e8 25 02 00 00       	call   a9be <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>
    a799:	90                   	nop
    a79a:	c9                   	leave
    a79b:	c3                   	ret

000000000000a79c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a79c:	55                   	push   %rbp
    a79d:	48 89 e5             	mov    %rsp,%rbp
    a7a0:	41 56                	push   %r14
    a7a2:	41 55                	push   %r13
    a7a4:	41 54                	push   %r12
    a7a6:	53                   	push   %rbx
    a7a7:	48 83 ec 40          	sub    $0x40,%rsp
    a7ab:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    a7af:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    a7b3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    a7b7:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    a7bb:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a7bf:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    a7c3:	48 89 de             	mov    %rbx,%rsi
    a7c6:	bf 10 00 00 00       	mov    $0x10,%edi
    a7cb:	e8 f0 90 ff ff       	call   38c0 <_ZnwmPv>
    a7d0:	49 89 c4             	mov    %rax,%r12
    a7d3:	41 be 01 00 00 00    	mov    $0x1,%r14d
    a7d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    a7dd:	48 89 c7             	mov    %rax,%rdi
    a7e0:	e8 16 d5 ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    a7e5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    a7e9:	48 89 c7             	mov    %rax,%rdi
    a7ec:	e8 fc d4 ff ff       	call   7ced <_ZSt7forwardISt5tupleIJONSt6thread2idEEEEOT_RNSt16remove_referenceIS5_E4typeE>
    a7f1:	48 89 c2             	mov    %rax,%rdx
    a7f4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a7f8:	48 89 d6             	mov    %rdx,%rsi
    a7fb:	48 89 c7             	mov    %rax,%rdi
    a7fe:	e8 73 ff ff ff       	call   a776 <_ZNSt5tupleIJONSt6thread2idEEEC1EOS3_>
    a803:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    a807:	48 89 c7             	mov    %rax,%rdi
    a80a:	e8 d0 d4 ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    a80f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a813:	48 89 c6             	mov    %rax,%rsi
    a816:	4c 89 e7             	mov    %r12,%rdi
    a819:	e8 be 01 00 00       	call   a9dc <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>
    a81e:	eb 1e                	jmp    a83e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0xa2>
    a820:	49 89 c5             	mov    %rax,%r13
    a823:	45 84 f6             	test   %r14b,%r14b
    a826:	74 0b                	je     a833 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE9constructIS5_JRKSt21piecewise_construct_tSt5tupleIJOS3_EESC_IJEEEEEvPT_DpOT0_+0x97>
    a828:	48 89 de             	mov    %rbx,%rsi
    a82b:	4c 89 e7             	mov    %r12,%rdi
    a82e:	e8 9f 90 ff ff       	call   38d2 <_ZdlPvS_>
    a833:	4c 89 e8             	mov    %r13,%rax
    a836:	48 89 c7             	mov    %rax,%rdi
    a839:	e8 92 8c ff ff       	call   34d0 <_Unwind_Resume@plt>
    a83e:	48 83 c4 40          	add    $0x40,%rsp
    a842:	5b                   	pop    %rbx
    a843:	41 5c                	pop    %r12
    a845:	41 5d                	pop    %r13
    a847:	41 5e                	pop    %r14
    a849:	5d                   	pop    %rbp
    a84a:	c3                   	ret
    a84b:	90                   	nop

000000000000a84c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt6thread2idEmEE7_M_addrEv>:
      _M_addr() const noexcept
    a84c:	55                   	push   %rbp
    a84d:	48 89 e5             	mov    %rsp,%rbp
    a850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    a854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a858:	5d                   	pop    %rbp
    a859:	c3                   	ret

000000000000a85a <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a85a:	55                   	push   %rbp
    a85b:	48 89 e5             	mov    %rsp,%rbp
    a85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a866:	5d                   	pop    %rbp
    a867:	c3                   	ret

000000000000a868 <_ZNSt10_Head_baseILm0EPN4neko10ThreadPoolELb0EE7_M_headERKS3_>:
    a868:	55                   	push   %rbp
    a869:	48 89 e5             	mov    %rsp,%rbp
    a86c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a874:	5d                   	pop    %rbp
    a875:	c3                   	ret

000000000000a876 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>:
    a876:	55                   	push   %rbp
    a877:	48 89 e5             	mov    %rsp,%rbp
    a87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a87e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a882:	5d                   	pop    %rbp
    a883:	c3                   	ret

000000000000a884 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>:
      constexpr _Head_base()
    a884:	55                   	push   %rbp
    a885:	48 89 e5             	mov    %rsp,%rbp
    a888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    a88c:	90                   	nop
    a88d:	5d                   	pop    %rbp
    a88e:	c3                   	ret

000000000000a88f <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a88f:	55                   	push   %rbp
    a890:	48 89 e5             	mov    %rsp,%rbp
    a893:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a89b:	5d                   	pop    %rbp
    a89c:	c3                   	ret

000000000000a89d <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    a89d:	55                   	push   %rbp
    a89e:	48 89 e5             	mov    %rsp,%rbp
    a8a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a9:	5d                   	pop    %rbp
    a8aa:	c3                   	ret

000000000000a8ab <_ZSt12__niter_baseIPPSt8functionIFvvEEET_S5_>:
    __niter_base(_Iterator __it)
    a8ab:	55                   	push   %rbp
    a8ac:	48 89 e5             	mov    %rsp,%rbp
    a8af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    a8b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b7:	5d                   	pop    %rbp
    a8b8:	c3                   	ret

000000000000a8b9 <_ZSt14__copy_move_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    a8b9:	55                   	push   %rbp
    a8ba:	48 89 e5             	mov    %rsp,%rbp
    a8bd:	48 83 ec 20          	sub    $0x20,%rsp
    a8c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a8c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    a8cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a8d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a8d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d9:	48 89 ce             	mov    %rcx,%rsi
    a8dc:	48 89 c7             	mov    %rax,%rdi
    a8df:	e8 22 01 00 00       	call   aa06 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a8e4:	c9                   	leave
    a8e5:	c3                   	ret

000000000000a8e6 <_ZSt12__niter_wrapIPPSt8functionIFvvEEET_RKS5_S5_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    a8e6:	55                   	push   %rbp
    a8e7:	48 89 e5             	mov    %rsp,%rbp
    a8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    a8f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8f6:	5d                   	pop    %rbp
    a8f7:	c3                   	ret

000000000000a8f8 <_ZSt23__copy_move_backward_a1ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
    a8f8:	55                   	push   %rbp
    a8f9:	48 89 e5             	mov    %rsp,%rbp
    a8fc:	48 83 ec 20          	sub    $0x20,%rsp
    a900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a904:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a908:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
    a90c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a910:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a918:	48 89 ce             	mov    %rcx,%rsi
    a91b:	48 89 c7             	mov    %rax,%rdi
    a91e:	e8 10 01 00 00       	call   aa33 <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>
    a923:	c9                   	leave
    a924:	c3                   	ret

000000000000a925 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    a925:	55                   	push   %rbp
    a926:	48 89 e5             	mov    %rsp,%rbp
    a929:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    a92d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a931:	5d                   	pop    %rbp
    a932:	c3                   	ret
    a933:	90                   	nop

000000000000a934 <_ZNSt15__new_allocatorISt6threadE9constructIS0_JS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    a934:	55                   	push   %rbp
    a935:	48 89 e5             	mov    %rsp,%rbp
    a938:	53                   	push   %rbx
    a939:	48 83 ec 28          	sub    $0x28,%rsp
    a93d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a941:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a945:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    a949:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a94d:	48 89 c6             	mov    %rax,%rsi
    a950:	bf 08 00 00 00       	mov    $0x8,%edi
    a955:	e8 66 8f ff ff       	call   38c0 <_ZnwmPv>
    a95a:	48 89 c3             	mov    %rax,%rbx
    a95d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a961:	48 89 c7             	mov    %rax,%rdi
    a964:	e8 bc ff ff ff       	call   a925 <_ZSt7forwardISt6threadEOT_RNSt16remove_referenceIS1_E4typeE>
    a969:	48 89 c6             	mov    %rax,%rsi
    a96c:	48 89 df             	mov    %rbx,%rdi
    a96f:	e8 d2 94 ff ff       	call   3e46 <_ZNSt6threadC1EOS_>
    a974:	90                   	nop
    a975:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a979:	c9                   	leave
    a97a:	c3                   	ret
    a97b:	90                   	nop

000000000000a97c <_ZNSt15__new_allocatorISt6threadE7destroyIS0_EEvPT_>:
	destroy(_Up* __p)
    a97c:	55                   	push   %rbp
    a97d:	48 89 e5             	mov    %rsp,%rbp
    a980:	48 83 ec 10          	sub    $0x10,%rsp
    a984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a988:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    a98c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a990:	48 89 c7             	mov    %rax,%rdi
    a993:	e8 8a 94 ff ff       	call   3e22 <_ZNSt6threadD1Ev>
    a998:	90                   	nop
    a999:	c9                   	leave
    a99a:	c3                   	ret

000000000000a99b <_ZNSt10_Head_baseILm1ESt14default_deleteINSt6thread6_StateEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    a99b:	55                   	push   %rbp
    a99c:	48 89 e5             	mov    %rsp,%rbp
    a99f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a7:	5d                   	pop    %rbp
    a9a8:	c3                   	ret
    a9a9:	90                   	nop

000000000000a9aa <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt6thread2idEmEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    a9aa:	55                   	push   %rbp
    a9ab:	48 89 e5             	mov    %rsp,%rbp
    a9ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    a9b2:	48 b8 aa aa aa aa aa 	movabs $0x2aaaaaaaaaaaaaa,%rax
    a9b9:	aa aa 02 
      }
    a9bc:	5d                   	pop    %rbp
    a9bd:	c3                   	ret

000000000000a9be <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEEC1EOS3_>:
      _Tuple_impl(_Tuple_impl&& __in)
    a9be:	55                   	push   %rbp
    a9bf:	48 89 e5             	mov    %rsp,%rbp
    a9c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    a9ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9d2:	48 8b 12             	mov    (%rdx),%rdx
    a9d5:	48 89 10             	mov    %rdx,(%rax)
      { }
    a9d8:	90                   	nop
    a9d9:	5d                   	pop    %rbp
    a9da:	c3                   	ret
    a9db:	90                   	nop

000000000000a9dc <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES7_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    a9dc:	55                   	push   %rbp
    a9dd:	48 89 e5             	mov    %rsp,%rbp
    a9e0:	48 83 ec 20          	sub    $0x20,%rsp
    a9e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    a9ec:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    a9f0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a9f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9f8:	48 89 ce             	mov    %rcx,%rsi
    a9fb:	48 89 c7             	mov    %rax,%rdi
    a9fe:	e8 5d 00 00 00       	call   aa60 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>
      { }
    aa03:	90                   	nop
    aa04:	c9                   	leave
    aa05:	c3                   	ret

000000000000aa06 <_ZSt14__copy_move_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    aa06:	55                   	push   %rbp
    aa07:	48 89 e5             	mov    %rsp,%rbp
    aa0a:	48 83 ec 20          	sub    $0x20,%rsp
    aa0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    aa1a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa1e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aa22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa26:	48 89 ce             	mov    %rcx,%rsi
    aa29:	48 89 c7             	mov    %rax,%rdi
    aa2c:	e8 70 00 00 00       	call   aaa1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    aa31:	c9                   	leave
    aa32:	c3                   	ret

000000000000aa33 <_ZSt23__copy_move_backward_a2ILb0EPPSt8functionIFvvEES4_ET1_T0_S6_S5_>:
    __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
    aa33:	55                   	push   %rbp
    aa34:	48 89 e5             	mov    %rsp,%rbp
    aa37:	48 83 ec 20          	sub    $0x20,%rsp
    aa3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa3f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa43:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				       _Category>::__copy_move_b(__first,
    aa47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aa4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aa4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa53:	48 89 ce             	mov    %rcx,%rsi
    aa56:	48 89 c7             	mov    %rax,%rdi
    aa59:	e8 a2 00 00 00       	call   ab00 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>
    }
    aa5e:	c9                   	leave
    aa5f:	c3                   	ret

000000000000aa60 <_ZNSt4pairIKNSt6thread2idEmEC1IJOS1_EJLm0EEJEJEEERSt5tupleIJDpT_EERS6_IJDpT1_EESt12_Index_tupleIJXspT0_EEESF_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    aa60:	55                   	push   %rbp
    aa61:	48 89 e5             	mov    %rsp,%rbp
    aa64:	48 83 ec 20          	sub    $0x20,%rsp
    aa68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    aa74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa78:	48 89 c7             	mov    %rax,%rdi
    aa7b:	e8 f2 00 00 00       	call   ab72 <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>
    aa80:	48 89 c7             	mov    %rax,%rdi
    aa83:	e8 04 01 00 00       	call   ab8c <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>
    aa88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa8c:	48 8b 00             	mov    (%rax),%rax
    aa8f:	48 89 02             	mov    %rax,(%rdx)
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    aa92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa96:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa9d:	00 
      { }
    aa9e:	90                   	nop
    aa9f:	c9                   	leave
    aaa0:	c3                   	ret

000000000000aaa1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    aaa1:	55                   	push   %rbp
    aaa2:	48 89 e5             	mov    %rsp,%rbp
    aaa5:	48 83 ec 30          	sub    $0x30,%rsp
    aaa9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aaad:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aab1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    aab5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    aab9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    aabd:	48 c1 f8 03          	sar    $0x3,%rax
    aac1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    aac5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    aaca:	74 1f                	je     aaeb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    aacc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aad7:	00 
    aad8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aadc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aae0:	48 89 ce             	mov    %rcx,%rsi
    aae3:	48 89 c7             	mov    %rax,%rdi
    aae6:	e8 85 89 ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
    aaeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aaf6:	00 
    aaf7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    aafb:	48 01 d0             	add    %rdx,%rax
	}
    aafe:	c9                   	leave
    aaff:	c3                   	ret

000000000000ab00 <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_>:
	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
    ab00:	55                   	push   %rbp
    ab01:	48 89 e5             	mov    %rsp,%rbp
    ab04:	48 83 ec 30          	sub    $0x30,%rsp
    ab08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ab10:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    ab14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ab18:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    ab1c:	48 c1 f8 03          	sar    $0x3,%rax
    ab20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    ab24:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ab29:	74 30                	je     ab5b <_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt8functionIFvvEEEEPT_PKS7_SA_S8_+0x5b>
	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
    ab2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ab36:	00 
    ab37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab3b:	48 c1 e0 03          	shl    $0x3,%rax
    ab3f:	48 f7 d8             	neg    %rax
    ab42:	48 89 c1             	mov    %rax,%rcx
    ab45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab49:	48 01 c1             	add    %rax,%rcx
    ab4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab50:	48 89 c6             	mov    %rax,%rsi
    ab53:	48 89 cf             	mov    %rcx,%rdi
    ab56:	e8 15 89 ff ff       	call   3470 <memmove@plt>
	  return __result - _Num;
    ab5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab5f:	48 c1 e0 03          	shl    $0x3,%rax
    ab63:	48 f7 d8             	neg    %rax
    ab66:	48 89 c2             	mov    %rax,%rdx
    ab69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ab6d:	48 01 d0             	add    %rdx,%rax
	}
    ab70:	c9                   	leave
    ab71:	c3                   	ret

000000000000ab72 <_ZSt3getILm0EJONSt6thread2idEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS7_>:
    get(tuple<_Elements...>& __t) noexcept
    ab72:	55                   	push   %rbp
    ab73:	48 89 e5             	mov    %rsp,%rbp
    ab76:	48 83 ec 10          	sub    $0x10,%rsp
    ab7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    ab7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab82:	48 89 c7             	mov    %rax,%rdi
    ab85:	e8 10 00 00 00       	call   ab9a <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    ab8a:	c9                   	leave
    ab8b:	c3                   	ret

000000000000ab8c <_ZSt7forwardIONSt6thread2idEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ab8c:	55                   	push   %rbp
    ab8d:	48 89 e5             	mov    %rsp,%rbp
    ab90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ab94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab98:	5d                   	pop    %rbp
    ab99:	c3                   	ret

000000000000ab9a <_ZSt12__get_helperILm0EONSt6thread2idEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ab9a:	55                   	push   %rbp
    ab9b:	48 89 e5             	mov    %rsp,%rbp
    ab9e:	48 83 ec 10          	sub    $0x10,%rsp
    aba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    aba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abaa:	48 89 c7             	mov    %rax,%rdi
    abad:	e8 02 00 00 00       	call   abb4 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>
    abb2:	c9                   	leave
    abb3:	c3                   	ret

000000000000abb4 <_ZNSt11_Tuple_implILm0EJONSt6thread2idEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    abb4:	55                   	push   %rbp
    abb5:	48 89 e5             	mov    %rsp,%rbp
    abb8:	48 83 ec 10          	sub    $0x10,%rsp
    abbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abc4:	48 89 c7             	mov    %rax,%rdi
    abc7:	e8 02 00 00 00       	call   abce <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>
    abcc:	c9                   	leave
    abcd:	c3                   	ret

000000000000abce <_ZNSt10_Head_baseILm0EONSt6thread2idELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    abce:	55                   	push   %rbp
    abcf:	48 89 e5             	mov    %rsp,%rbp
    abd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abda:	48 8b 00             	mov    (%rax),%rax
    abdd:	5d                   	pop    %rbp
    abde:	c3                   	ret
    abdf:	90                   	nop

000000000000abe0 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>:
      struct _State_impl : public _State
    abe0:	55                   	push   %rbp
    abe1:	48 89 e5             	mov    %rsp,%rbp
    abe4:	48 83 ec 10          	sub    $0x10,%rsp
    abe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abec:	48 8d 15 dd 60 01 00 	lea    0x160dd(%rip),%rdx        # 20cd0 <_ZTVNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEEE+0x10>
    abf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abf7:	48 89 10             	mov    %rdx,(%rax)
    abfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    abfe:	48 89 c7             	mov    %rax,%rdi
    ac01:	e8 fa 84 ff ff       	call   3100 <_ZNSt6thread6_StateD2Ev@plt>
    ac06:	90                   	nop
    ac07:	c9                   	leave
    ac08:	c3                   	ret
    ac09:	90                   	nop

000000000000ac0a <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED0Ev>:
    ac0a:	55                   	push   %rbp
    ac0b:	48 89 e5             	mov    %rsp,%rbp
    ac0e:	48 83 ec 10          	sub    $0x10,%rsp
    ac12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac1a:	48 89 c7             	mov    %rax,%rdi
    ac1d:	e8 be ff ff ff       	call   abe0 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEED1Ev>
    ac22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac26:	be 18 00 00 00       	mov    $0x18,%esi
    ac2b:	48 89 c7             	mov    %rax,%rdi
    ac2e:	e8 9d 86 ff ff       	call   32d0 <_ZdlPvm@plt>
    ac33:	c9                   	leave
    ac34:	c3                   	ret
    ac35:	90                   	nop

000000000000ac36 <_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES5_EEEEE6_M_runEv>:
	_M_run() { _M_func(); }
    ac36:	55                   	push   %rbp
    ac37:	48 89 e5             	mov    %rsp,%rbp
    ac3a:	48 83 ec 10          	sub    $0x10,%rsp
    ac3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac46:	48 83 c0 08          	add    $0x8,%rax
    ac4a:	48 89 c7             	mov    %rax,%rdi
    ac4d:	e8 04 00 00 00       	call   ac56 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>
    ac52:	90                   	nop
    ac53:	c9                   	leave
    ac54:	c3                   	ret
    ac55:	90                   	nop

000000000000ac56 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEEclEv>:
	operator()()
    ac56:	55                   	push   %rbp
    ac57:	48 89 e5             	mov    %rsp,%rbp
    ac5a:	48 83 ec 10          	sub    $0x10,%rsp
    ac5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  return _M_invoke(_Indices());
    ac62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac66:	48 89 c7             	mov    %rax,%rdi
    ac69:	e8 04 00 00 00       	call   ac72 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>
    ac6e:	90                   	nop
	}
    ac6f:	c9                   	leave
    ac70:	c3                   	ret
    ac71:	90                   	nop

000000000000ac72 <_ZNSt6thread8_InvokerISt5tupleIJPFvPN4neko10ThreadPoolEES4_EEE9_M_invokeIJLm0ELm1EEEEvSt12_Index_tupleIJXspT_EEE>:
	  _M_invoke(_Index_tuple<_Ind...>)
    ac72:	55                   	push   %rbp
    ac73:	48 89 e5             	mov    %rsp,%rbp
    ac76:	53                   	push   %rbx
    ac77:	48 83 ec 18          	sub    $0x18,%rsp
    ac7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	  { return std::__invoke(std::get<_Ind>(std::move(_M_t))...); }
    ac7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac83:	48 89 c7             	mov    %rax,%rdi
    ac86:	e8 31 00 00 00       	call   acbc <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    ac8b:	48 89 c7             	mov    %rax,%rdi
    ac8e:	e8 59 00 00 00       	call   acec <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    ac93:	48 89 c3             	mov    %rax,%rbx
    ac96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac9a:	48 89 c7             	mov    %rax,%rdi
    ac9d:	e8 1a 00 00 00       	call   acbc <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>
    aca2:	48 89 c7             	mov    %rax,%rdi
    aca5:	e8 20 00 00 00       	call   acca <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>
    acaa:	48 89 de             	mov    %rbx,%rsi
    acad:	48 89 c7             	mov    %rax,%rdi
    acb0:	e8 59 00 00 00       	call   ad0e <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>
    acb5:	90                   	nop
    acb6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    acba:	c9                   	leave
    acbb:	c3                   	ret

000000000000acbc <_ZSt4moveIRSt5tupleIJPFvPN4neko10ThreadPoolEES3_EEEONSt16remove_referenceIT_E4typeEOS9_>:
    move(_Tp&& __t) noexcept
    acbc:	55                   	push   %rbp
    acbd:	48 89 e5             	mov    %rsp,%rbp
    acc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    acc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acc8:	5d                   	pop    %rbp
    acc9:	c3                   	ret

000000000000acca <_ZSt3getILm0EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    acca:	55                   	push   %rbp
    accb:	48 89 e5             	mov    %rsp,%rbp
    acce:	48 83 ec 10          	sub    $0x10,%rsp
    acd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    acd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acda:	48 89 c7             	mov    %rax,%rdi
    acdd:	e8 6a 00 00 00       	call   ad4c <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    ace2:	48 89 c7             	mov    %rax,%rdi
    ace5:	e8 7c 00 00 00       	call   ad66 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    }
    acea:	c9                   	leave
    aceb:	c3                   	ret

000000000000acec <_ZSt3getILm1EJPFvPN4neko10ThreadPoolEES2_EEONSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeEOS9_>:
    get(tuple<_Elements...>&& __t) noexcept
    acec:	55                   	push   %rbp
    aced:	48 89 e5             	mov    %rsp,%rbp
    acf0:	48 83 ec 10          	sub    $0x10,%rsp
    acf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return std::forward<__element_type>(std::__get_helper<__i>(__t));
    acf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acfc:	48 89 c7             	mov    %rax,%rdi
    acff:	e8 70 00 00 00       	call   ad74 <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>
    ad04:	48 89 c7             	mov    %rax,%rdi
    ad07:	e8 52 b7 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    }
    ad0c:	c9                   	leave
    ad0d:	c3                   	ret

000000000000ad0e <_ZSt8__invokeIPFvPN4neko10ThreadPoolEEJS2_EENSt15__invoke_resultIT_JDpT0_EE4typeEOS6_DpOS7_>:
    __invoke(_Callable&& __fn, _Args&&... __args)
    ad0e:	55                   	push   %rbp
    ad0f:	48 89 e5             	mov    %rsp,%rbp
    ad12:	53                   	push   %rbx
    ad13:	48 83 ec 18          	sub    $0x18,%rsp
    ad17:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad1b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      return std::__invoke_impl<__type>(__tag{}, std::forward<_Callable>(__fn),
    ad1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ad23:	48 89 c7             	mov    %rax,%rdi
    ad26:	e8 33 b7 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    ad2b:	48 89 c3             	mov    %rax,%rbx
    ad2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad32:	48 89 c7             	mov    %rax,%rdi
    ad35:	e8 2c 00 00 00       	call   ad66 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    ad3a:	48 89 de             	mov    %rbx,%rsi
    ad3d:	48 89 c7             	mov    %rax,%rdi
    ad40:	e8 49 00 00 00       	call   ad8e <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>
					std::forward<_Args>(__args)...);
    ad45:	90                   	nop
    }
    ad46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad4a:	c9                   	leave
    ad4b:	c3                   	ret

000000000000ad4c <_ZSt12__get_helperILm0EPFvPN4neko10ThreadPoolEEJS2_EERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad4c:	55                   	push   %rbp
    ad4d:	48 89 e5             	mov    %rsp,%rbp
    ad50:	48 83 ec 10          	sub    $0x10,%rsp
    ad54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad5c:	48 89 c7             	mov    %rax,%rdi
    ad5f:	e8 65 00 00 00       	call   adc9 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>
    ad64:	c9                   	leave
    ad65:	c3                   	ret

000000000000ad66 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ad66:	55                   	push   %rbp
    ad67:	48 89 e5             	mov    %rsp,%rbp
    ad6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ad6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad72:	5d                   	pop    %rbp
    ad73:	c3                   	ret

000000000000ad74 <_ZSt12__get_helperILm1EPN4neko10ThreadPoolEJEERT0_RSt11_Tuple_implIXT_EJS3_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    ad74:	55                   	push   %rbp
    ad75:	48 89 e5             	mov    %rsp,%rbp
    ad78:	48 83 ec 10          	sub    $0x10,%rsp
    ad7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    ad80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad84:	48 89 c7             	mov    %rax,%rdi
    ad87:	e8 5b 00 00 00       	call   ade7 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>
    ad8c:	c9                   	leave
    ad8d:	c3                   	ret

000000000000ad8e <_ZSt13__invoke_implIvPFvPN4neko10ThreadPoolEEJS2_EET_St14__invoke_otherOT0_DpOT1_>:
    __invoke_impl(__invoke_other, _Fn&& __f, _Args&&... __args)
    ad8e:	55                   	push   %rbp
    ad8f:	48 89 e5             	mov    %rsp,%rbp
    ad92:	53                   	push   %rbx
    ad93:	48 83 ec 18          	sub    $0x18,%rsp
    ad97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return std::forward<_Fn>(__f)(std::forward<_Args>(__args)...); }
    ad9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada3:	48 89 c7             	mov    %rax,%rdi
    ada6:	e8 bb ff ff ff       	call   ad66 <_ZSt7forwardIPFvPN4neko10ThreadPoolEEEOT_RNSt16remove_referenceIS5_E4typeE>
    adab:	48 8b 18             	mov    (%rax),%rbx
    adae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    adb2:	48 89 c7             	mov    %rax,%rdi
    adb5:	e8 a4 b6 ff ff       	call   645e <_ZSt7forwardIPN4neko10ThreadPoolEEOT_RNSt16remove_referenceIS3_E4typeE>
    adba:	48 8b 00             	mov    (%rax),%rax
    adbd:	48 89 c7             	mov    %rax,%rdi
    adc0:	ff d3                	call   *%rbx
    adc2:	90                   	nop
    adc3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    adc7:	c9                   	leave
    adc8:	c3                   	ret

000000000000adc9 <_ZNSt11_Tuple_implILm0EJPFvPN4neko10ThreadPoolEES2_EE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    adc9:	55                   	push   %rbp
    adca:	48 89 e5             	mov    %rsp,%rbp
    adcd:	48 83 ec 10          	sub    $0x10,%rsp
    add1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    add5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add9:	48 83 c0 08          	add    $0x8,%rax
    addd:	48 89 c7             	mov    %rax,%rdi
    ade0:	e8 1c 00 00 00       	call   ae01 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>
    ade5:	c9                   	leave
    ade6:	c3                   	ret

000000000000ade7 <_ZNSt11_Tuple_implILm1EJPN4neko10ThreadPoolEEE7_M_headERS3_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    ade7:	55                   	push   %rbp
    ade8:	48 89 e5             	mov    %rsp,%rbp
    adeb:	48 83 ec 10          	sub    $0x10,%rsp
    adef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf7:	48 89 c7             	mov    %rax,%rdi
    adfa:	e8 10 00 00 00       	call   ae0f <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>
    adff:	c9                   	leave
    ae00:	c3                   	ret

000000000000ae01 <_ZNSt10_Head_baseILm0EPFvPN4neko10ThreadPoolEELb0EE7_M_headERS5_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    ae01:	55                   	push   %rbp
    ae02:	48 89 e5             	mov    %rsp,%rbp
    ae05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae0d:	5d                   	pop    %rbp
    ae0e:	c3                   	ret

000000000000ae0f <_ZNSt10_Head_baseILm1EPN4neko10ThreadPoolELb0EE7_M_headERS3_>:
    ae0f:	55                   	push   %rbp
    ae10:	48 89 e5             	mov    %rsp,%rbp
    ae13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1b:	5d                   	pop    %rbp
    ae1c:	c3                   	ret
    ae1d:	90                   	nop

000000000000ae1e <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

Device::Device(const Instance &crInstance, const Surface &crSurface) {
    ae1e:	55                   	push   %rbp
    ae1f:	48 89 e5             	mov    %rsp,%rbp
    ae22:	41 54                	push   %r12
    ae24:	53                   	push   %rbx
    ae25:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    ae2c:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    ae33:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    ae3a:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    ae41:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    ae48:	48 89 c7             	mov    %rax,%rdi
    ae4b:	e8 7c 0d 00 00       	call   bbcc <_ZNK4neko8InstancedeEv>
    ae50:	48 8b 10             	mov    (%rax),%rdx
    ae53:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ae57:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    ae5e:	48 89 ce             	mov    %rcx,%rsi
    ae61:	48 89 c7             	mov    %rax,%rdi
    ae64:	e8 77 0b 00 00       	call   b9e0 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>
    ae69:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    ae6d:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    ae74:	48 89 d6             	mov    %rdx,%rsi
    ae77:	48 89 c7             	mov    %rax,%rdi
    ae7a:	e8 59 04 00 00       	call   b2d8 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    ae7f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ae83:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ae87:	48 89 c7             	mov    %rax,%rdi
    ae8a:	e8 ed 0d 00 00       	call   bc7c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  u32 selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    ae8f:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    ae96:	48 89 c7             	mov    %rax,%rdi
    ae99:	e8 40 0d 00 00       	call   bbde <_ZNK4neko7SurfacedeEv>
    ae9e:	48 8b 10             	mov    (%rax),%rdx
    aea1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    aea5:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    aeac:	48 89 ce             	mov    %rcx,%rsi
    aeaf:	48 89 c7             	mov    %rax,%rdi
    aeb2:	e8 f9 01 00 00       	call   b0b0 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    aeb7:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  u32 selectedQueueIndex = 0;
    aeba:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    aec1:	f3 0f 10 05 d3 86 00 	movss  0x86d3(%rip),%xmm0        # 1359c <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    aec8:	00 
    aec9:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    aece:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aed2:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    aed9:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    aee0:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    aee7:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    aee8:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    aeef:	00 00 00 
  queueInfo.pNext = nullptr;
    aef2:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    aef9:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    aefd:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    af00:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    af06:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    af0d:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    af10:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    af14:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    af1b:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    af22:	b8 00 00 00 00       	mov    $0x0,%eax
    af27:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    af2c:	48 89 d7             	mov    %rdx,%rdi
    af2f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    af32:	48 89 fa             	mov    %rdi,%rdx
    af35:	89 02                	mov    %eax,(%rdx)
    af37:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    af3b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    af3f:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    af46:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    af4d:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    af54:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    af5b:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    af62:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    af63:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    af6a:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    af6d:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    af74:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    af77:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    af7e:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    af85:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    af8c:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    af93:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
    af9a:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    afa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afa5:	48 89 d1             	mov    %rdx,%rcx
    afa8:	ba 00 00 00 00       	mov    $0x0,%edx
    afad:	48 89 c7             	mov    %rax,%rdi
    afb0:	e8 7b 84 ff ff       	call   3430 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    afb5:	85 c0                	test   %eax,%eax
    afb7:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    afba:	84 c0                	test   %al,%al
    afbc:	74 3b                	je     aff9 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1db>
    throw std::runtime_error("Failed to create logical device.");
    afbe:	bf 10 00 00 00       	mov    $0x10,%edi
    afc3:	e8 48 81 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    afc8:	48 89 c3             	mov    %rax,%rbx
    afcb:	48 8d 05 46 84 00 00 	lea    0x8446(%rip),%rax        # 13418 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    afd2:	48 89 c6             	mov    %rax,%rsi
    afd5:	48 89 df             	mov    %rbx,%rdi
    afd8:	e8 d3 80 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    afdd:	48 8b 05 d4 5f 01 00 	mov    0x15fd4(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    afe4:	48 89 c2             	mov    %rax,%rdx
    afe7:	48 8d 05 52 5d 01 00 	lea    0x15d52(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    afee:	48 89 c6             	mov    %rax,%rsi
    aff1:	48 89 df             	mov    %rbx,%rdi
    aff4:	e8 b7 84 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    aff9:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    b000:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b004:	48 89 50 08          	mov    %rdx,0x8(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    b008:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    b00f:	48 8b 00             	mov    (%rax),%rax
    b012:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    b016:	8b 55 e0             	mov    -0x20(%rbp),%edx
    b019:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    b01c:	48 89 c7             	mov    %rax,%rdi
    b01f:	e8 ac 83 ff ff       	call   33d0 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    b024:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    b028:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    b02f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    b032:	89 48 10             	mov    %ecx,0x10(%rax)
    b035:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    b03c:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    b03f:	89 48 14             	mov    %ecx,0x14(%rax)
    b042:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    b049:	48 89 50 18          	mov    %rdx,0x18(%rax)
}
    b04d:	eb 30                	jmp    b07f <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x261>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    b04f:	48 89 c3             	mov    %rax,%rbx
    b052:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b056:	48 89 c7             	mov    %rax,%rdi
    b059:	e8 1e 0c 00 00       	call   bc7c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    b05e:	48 89 d8             	mov    %rbx,%rax
    b061:	48 89 c7             	mov    %rax,%rdi
    b064:	e8 67 84 ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create logical device.");
    b069:	49 89 c4             	mov    %rax,%r12
    b06c:	48 89 df             	mov    %rbx,%rdi
    b06f:	e8 3c 81 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b074:	4c 89 e0             	mov    %r12,%rax
    b077:	48 89 c7             	mov    %rax,%rdi
    b07a:	e8 51 84 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    b07f:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    b086:	5b                   	pop    %rbx
    b087:	41 5c                	pop    %r12
    b089:	5d                   	pop    %rbp
    b08a:	c3                   	ret
    b08b:	90                   	nop

000000000000b08c <_ZN4neko6DeviceD1Ev>:

Device::~Device() { vkDestroyDevice(mLogicalDevice, nullptr); }
    b08c:	55                   	push   %rbp
    b08d:	48 89 e5             	mov    %rsp,%rbp
    b090:	48 83 ec 10          	sub    $0x10,%rsp
    b094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b09c:	48 8b 00             	mov    (%rax),%rax
    b09f:	be 00 00 00 00       	mov    $0x0,%esi
    b0a4:	48 89 c7             	mov    %rax,%rdi
    b0a7:	e8 84 81 ff ff       	call   3230 <vkDestroyDevice@plt>
    b0ac:	90                   	nop
    b0ad:	c9                   	leave
    b0ae:	c3                   	ret
    b0af:	90                   	nop

000000000000b0b0 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

u32 Device::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                            VkSurfaceKHR surface) {
    b0b0:	55                   	push   %rbp
    b0b1:	48 89 e5             	mov    %rsp,%rbp
    b0b4:	41 54                	push   %r12
    b0b6:	53                   	push   %rbx
    b0b7:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    b0bb:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    b0bf:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    b0c3:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  u32 queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    b0ca:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b0ce:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b0d2:	ba 00 00 00 00       	mov    $0x0,%edx
    b0d7:	48 89 ce             	mov    %rcx,%rsi
    b0da:	48 89 c7             	mov    %rax,%rdi
    b0dd:	e8 fe 80 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    b0e2:	8b 45 d0             	mov    -0x30(%rbp),%eax
    b0e5:	85 c0                	test   %eax,%eax
    b0e7:	75 3b                	jne    b124 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    b0e9:	bf 10 00 00 00       	mov    $0x10,%edi
    b0ee:	e8 1d 80 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b0f3:	48 89 c3             	mov    %rax,%rbx
    b0f6:	48 8d 05 3c 83 00 00 	lea    0x833c(%rip),%rax        # 13439 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    b0fd:	48 89 c6             	mov    %rax,%rsi
    b100:	48 89 df             	mov    %rbx,%rdi
    b103:	e8 a8 7f ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b108:	48 8b 05 a9 5e 01 00 	mov    0x15ea9(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b10f:	48 89 c2             	mov    %rax,%rdx
    b112:	48 8d 05 27 5c 01 00 	lea    0x15c27(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b119:	48 89 c6             	mov    %rax,%rsi
    b11c:	48 89 df             	mov    %rbx,%rdi
    b11f:	e8 8c 83 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    b124:	8b 45 d0             	mov    -0x30(%rbp),%eax
    b127:	89 c3                	mov    %eax,%ebx
    b129:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    b12d:	48 89 c7             	mov    %rax,%rdi
    b130:	e8 8b 0b 00 00       	call   bcc0 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    b135:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    b139:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b13d:	48 89 de             	mov    %rbx,%rsi
    b140:	48 89 c7             	mov    %rax,%rdi
    b143:	e8 b0 0b 00 00       	call   bcf8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    b148:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    b14c:	48 89 c7             	mov    %rax,%rdi
    b14f:	e8 88 0b 00 00       	call   bcdc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    b154:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b158:	48 89 c7             	mov    %rax,%rdi
    b15b:	e8 52 0c 00 00       	call   bdb2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    b160:	48 89 c2             	mov    %rax,%rdx
    b163:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    b167:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b16b:	48 89 ce             	mov    %rcx,%rsi
    b16e:	48 89 c7             	mov    %rax,%rdi
    b171:	e8 6a 80 ff ff       	call   31e0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  u32 iQueueFamily = 0;
    b176:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    b17d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b181:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    b185:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b189:	48 89 c7             	mov    %rax,%rdi
    b18c:	e8 45 0c 00 00       	call   bdd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    b191:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    b195:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b199:	48 89 c7             	mov    %rax,%rdi
    b19c:	e8 5b 0c 00 00       	call   bdfc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    b1a1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    b1a5:	eb 78                	jmp    b21f <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    b1a7:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    b1ab:	48 89 c7             	mov    %rax,%rdi
    b1ae:	e8 cd 0c 00 00       	call   be80 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b1b3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    b1b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b1bb:	8b 00                	mov    (%rax),%eax
    b1bd:	83 e0 01             	and    $0x1,%eax
    b1c0:	85 c0                	test   %eax,%eax
    b1c2:	74 4f                	je     b213 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    b1c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b1c8:	8b 00                	mov    (%rax),%eax
    b1ca:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    b1cd:	85 c0                	test   %eax,%eax
    b1cf:	74 42                	je     b213 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    b1d1:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    b1d8:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    b1dc:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    b1e3:	8b 75 ec             	mov    -0x14(%rbp),%esi
    b1e6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    b1ea:	48 89 c7             	mov    %rax,%rdi
    b1ed:	e8 3e 81 ff ff       	call   3330 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    b1f2:	8b 45 9c             	mov    -0x64(%rbp),%eax
    b1f5:	85 c0                	test   %eax,%eax
    b1f7:	74 16                	je     b20f <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    b1f9:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    b1fc:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b200:	48 89 c7             	mov    %rax,%rdi
    b203:	e8 66 0b 00 00       	call   bd6e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    b208:	89 d8                	mov    %ebx,%eax
    b20a:	e9 c0 00 00 00       	jmp    b2cf <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    b20f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    b213:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    b217:	48 89 c7             	mov    %rax,%rdi
    b21a:	e8 41 0c 00 00       	call   be60 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b21f:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b223:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    b227:	48 89 d6             	mov    %rdx,%rsi
    b22a:	48 89 c7             	mov    %rax,%rdi
    b22d:	e8 f3 0b 00 00       	call   be25 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b232:	84 c0                	test   %al,%al
    b234:	0f 85 6d ff ff ff    	jne    b1a7 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    b23a:	bf 10 00 00 00       	mov    $0x10,%edi
    b23f:	e8 cc 7e ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b244:	48 89 c3             	mov    %rax,%rbx
    b247:	48 8d 05 0a 82 00 00 	lea    0x820a(%rip),%rax        # 13458 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    b24e:	48 89 c6             	mov    %rax,%rsi
    b251:	48 89 df             	mov    %rbx,%rdi
    b254:	e8 57 7e ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b259:	48 8b 05 58 5d 01 00 	mov    0x15d58(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b260:	48 89 c2             	mov    %rax,%rdx
    b263:	48 8d 05 d6 5a 01 00 	lea    0x15ad6(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b26a:	48 89 c6             	mov    %rax,%rsi
    b26d:	48 89 df             	mov    %rbx,%rdi
    b270:	e8 3b 82 ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    b275:	49 89 c4             	mov    %rax,%r12
    b278:	48 89 df             	mov    %rbx,%rdi
    b27b:	e8 30 7f ff ff       	call   31b0 <__cxa_free_exception@plt>
    b280:	4c 89 e0             	mov    %r12,%rax
    b283:	48 89 c7             	mov    %rax,%rdi
    b286:	e8 45 82 ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    b28b:	48 89 c3             	mov    %rax,%rbx
    b28e:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    b292:	48 89 c7             	mov    %rax,%rdi
    b295:	e8 42 0a 00 00       	call   bcdc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    b29a:	48 89 d8             	mov    %rbx,%rax
    b29d:	48 89 c7             	mov    %rax,%rdi
    b2a0:	e8 2b 82 ff ff       	call   34d0 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    b2a5:	49 89 c4             	mov    %rax,%r12
    b2a8:	48 89 df             	mov    %rbx,%rdi
    b2ab:	e8 00 7f ff ff       	call   31b0 <__cxa_free_exception@plt>
    b2b0:	4c 89 e3             	mov    %r12,%rbx
    b2b3:	eb 03                	jmp    b2b8 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    b2b5:	48 89 c3             	mov    %rax,%rbx
    b2b8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    b2bc:	48 89 c7             	mov    %rax,%rdi
    b2bf:	e8 aa 0a 00 00       	call   bd6e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    b2c4:	48 89 d8             	mov    %rbx,%rax
    b2c7:	48 89 c7             	mov    %rax,%rdi
    b2ca:	e8 01 82 ff ff       	call   34d0 <_Unwind_Resume@plt>
    b2cf:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    b2d3:	5b                   	pop    %rbx
    b2d4:	41 5c                	pop    %r12
    b2d6:	5d                   	pop    %rbp
    b2d7:	c3                   	ret

000000000000b2d8 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice Device::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    b2d8:	55                   	push   %rbp
    b2d9:	48 89 e5             	mov    %rsp,%rbp
    b2dc:	41 54                	push   %r12
    b2de:	53                   	push   %rbx
    b2df:	48 83 ec 20          	sub    $0x20,%rsp
    b2e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b2e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    b2eb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b2ef:	48 89 c7             	mov    %rax,%rdi
    b2f2:	e8 9b 0b 00 00       	call   be92 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b2f7:	48 83 f8 01          	cmp    $0x1,%rax
    b2fb:	0f 94 c0             	sete   %al
    b2fe:	84 c0                	test   %al,%al
    b300:	74 19                	je     b31b <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    b302:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b306:	be 00 00 00 00       	mov    $0x0,%esi
    b30b:	48 89 c7             	mov    %rax,%rdi
    b30e:	e8 a3 0b 00 00       	call   beb6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b313:	48 8b 00             	mov    (%rax),%rax
    b316:	e9 b8 00 00 00       	jmp    b3d3 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b31b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    b322:	00 
    b323:	eb 46                	jmp    b36b <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    b325:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b329:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b32d:	48 89 d6             	mov    %rdx,%rsi
    b330:	48 89 c7             	mov    %rax,%rdi
    b333:	e8 7e 0b 00 00       	call   beb6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b338:	48 8b 10             	mov    (%rax),%rdx
    b33b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b33f:	48 89 d6             	mov    %rdx,%rsi
    b342:	48 89 c7             	mov    %rax,%rdi
    b345:	e8 92 00 00 00       	call   b3dc <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>
    b34a:	84 c0                	test   %al,%al
    b34c:	74 18                	je     b366 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    b34e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b352:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b356:	48 89 d6             	mov    %rdx,%rsi
    b359:	48 89 c7             	mov    %rax,%rdi
    b35c:	e8 55 0b 00 00       	call   beb6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    b361:	48 8b 00             	mov    (%rax),%rax
    b364:	eb 6d                	jmp    b3d3 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    b366:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    b36b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b36f:	48 89 c7             	mov    %rax,%rdi
    b372:	e8 1b 0b 00 00       	call   be92 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    b377:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    b37b:	0f 92 c0             	setb   %al
    b37e:	84 c0                	test   %al,%al
    b380:	75 a3                	jne    b325 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    b382:	bf 10 00 00 00       	mov    $0x10,%edi
    b387:	e8 84 7d ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b38c:	48 89 c3             	mov    %rax,%rbx
    b38f:	48 8d 05 ea 80 00 00 	lea    0x80ea(%rip),%rax        # 13480 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    b396:	48 89 c6             	mov    %rax,%rsi
    b399:	48 89 df             	mov    %rbx,%rdi
    b39c:	e8 0f 7d ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b3a1:	48 8b 05 10 5c 01 00 	mov    0x15c10(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b3a8:	48 89 c2             	mov    %rax,%rdx
    b3ab:	48 8d 05 8e 59 01 00 	lea    0x1598e(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b3b2:	48 89 c6             	mov    %rax,%rsi
    b3b5:	48 89 df             	mov    %rbx,%rdi
    b3b8:	e8 f3 80 ff ff       	call   34b0 <__cxa_throw@plt>
    b3bd:	49 89 c4             	mov    %rax,%r12
    b3c0:	48 89 df             	mov    %rbx,%rdi
    b3c3:	e8 e8 7d ff ff       	call   31b0 <__cxa_free_exception@plt>
    b3c8:	4c 89 e0             	mov    %r12,%rax
    b3cb:	48 89 c7             	mov    %rax,%rdi
    b3ce:	e8 fd 80 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    b3d3:	48 83 c4 20          	add    $0x20,%rsp
    b3d7:	5b                   	pop    %rbx
    b3d8:	41 5c                	pop    %r12
    b3da:	5d                   	pop    %rbp
    b3db:	c3                   	ret

000000000000b3dc <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>:

bool Device::checkRequirements(VkPhysicalDevice physicalDevice) {
    b3dc:	55                   	push   %rbp
    b3dd:	48 89 e5             	mov    %rsp,%rbp
    b3e0:	48 83 ec 10          	sub    $0x10,%rsp
    b3e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b3ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b3f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f4:	48 89 d6             	mov    %rdx,%rsi
    b3f7:	48 89 c7             	mov    %rax,%rdi
    b3fa:	e8 41 00 00 00       	call   b440 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>
    b3ff:	84 c0                	test   %al,%al
    b401:	74 35                	je     b438 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b403:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b40b:	48 89 d6             	mov    %rdx,%rsi
    b40e:	48 89 c7             	mov    %rax,%rdi
    b411:	e8 6a 00 00 00       	call   b480 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>
    b416:	84 c0                	test   %al,%al
    b418:	74 1e                	je     b438 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    b41a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b41e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b422:	48 89 d6             	mov    %rdx,%rsi
    b425:	48 89 c7             	mov    %rax,%rdi
    b428:	e8 73 05 00 00       	call   b9a0 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    b42d:	84 c0                	test   %al,%al
    b42f:	74 07                	je     b438 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    b431:	b8 01 00 00 00       	mov    $0x1,%eax
    b436:	eb 05                	jmp    b43d <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    b438:	b8 00 00 00 00       	mov    $0x0,%eax
}
    b43d:	c9                   	leave
    b43e:	c3                   	ret
    b43f:	90                   	nop

000000000000b440 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>:

bool Device::checkProperties(VkPhysicalDevice physicalDevice) {
    b440:	55                   	push   %rbp
    b441:	48 89 e5             	mov    %rsp,%rbp
    b444:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    b44b:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    b452:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    b459:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    b460:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    b467:	48 89 d6             	mov    %rdx,%rsi
    b46a:	48 89 c7             	mov    %rax,%rdi
    b46d:	e8 4e 7c ff ff       	call   30c0 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    b472:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    b478:	83 f8 02             	cmp    $0x2,%eax
    b47b:	0f 94 c0             	sete   %al
}
    b47e:	c9                   	leave
    b47f:	c3                   	ret

000000000000b480 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>:

bool Device::checkExtensions(VkPhysicalDevice physicalDevice) {
    b480:	55                   	push   %rbp
    b481:	48 89 e5             	mov    %rsp,%rbp
    b484:	41 55                	push   %r13
    b486:	41 54                	push   %r12
    b488:	53                   	push   %rbx
    b489:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    b490:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    b497:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b49e:	48 8d 05 fe 7f 00 00 	lea    0x7ffe(%rip),%rax        # 134a3 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    b4a5:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    b4ac:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    b4b3:	49 89 c4             	mov    %rax,%r12
    b4b6:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    b4bc:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b4c3:	48 89 c7             	mov    %rax,%rdi
    b4c6:	e8 0b 0a 00 00       	call   bed6 <_ZNSaIPKcEC1Ev>
    b4cb:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    b4d2:	4c 89 e6             	mov    %r12,%rsi
    b4d5:	4c 89 ef             	mov    %r13,%rdi
    b4d8:	4c 89 e1             	mov    %r12,%rcx
    b4db:	4c 89 eb             	mov    %r13,%rbx
    b4de:	48 89 df             	mov    %rbx,%rdi
    b4e1:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b4e8:	48 89 d1             	mov    %rdx,%rcx
    b4eb:	48 89 fa             	mov    %rdi,%rdx
    b4ee:	48 89 c7             	mov    %rax,%rdi
    b4f1:	e8 18 0a 00 00       	call   bf0e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    b4f6:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b4fd:	48 89 c7             	mov    %rax,%rdi
    b500:	e8 ed 09 00 00       	call   bef2 <_ZNSaIPKcED1Ev>

  u32 propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    b505:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b50c:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b513:	b9 00 00 00 00       	mov    $0x0,%ecx
    b518:	be 00 00 00 00       	mov    $0x0,%esi
    b51d:	48 89 c7             	mov    %rax,%rdi
    b520:	e8 cb 7e ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    b525:	85 c0                	test   %eax,%eax
    b527:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b52a:	84 c0                	test   %al,%al
    b52c:	74 3b                	je     b569 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    b52e:	bf 10 00 00 00       	mov    $0x10,%edi
    b533:	e8 d8 7b ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b538:	48 89 c3             	mov    %rax,%rbx
    b53b:	48 8d 05 76 7f 00 00 	lea    0x7f76(%rip),%rax        # 134b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b542:	48 89 c6             	mov    %rax,%rsi
    b545:	48 89 df             	mov    %rbx,%rdi
    b548:	e8 63 7b ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b54d:	48 8b 05 64 5a 01 00 	mov    0x15a64(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b554:	48 89 c2             	mov    %rax,%rdx
    b557:	48 8d 05 e2 57 01 00 	lea    0x157e2(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b55e:	48 89 c6             	mov    %rax,%rsi
    b561:	48 89 df             	mov    %rbx,%rdi
    b564:	e8 47 7f ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b569:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    b56f:	89 c3                	mov    %eax,%ebx
    b571:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b578:	48 89 c7             	mov    %rax,%rdi
    b57b:	e8 5a 0a 00 00       	call   bfda <_ZNSaI21VkExtensionPropertiesEC1Ev>
    b580:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    b587:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b58e:	48 89 de             	mov    %rbx,%rsi
    b591:	48 89 c7             	mov    %rax,%rdi
    b594:	e8 79 0a 00 00       	call   c012 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    b599:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b5a0:	48 89 c7             	mov    %rax,%rdi
    b5a3:	e8 4e 0a 00 00       	call   bff6 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    b5a8:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b5af:	48 89 c7             	mov    %rax,%rdi
    b5b2:	e8 15 0b 00 00       	call   c0cc <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    b5b7:	48 89 c1             	mov    %rax,%rcx
    b5ba:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    b5c1:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    b5c8:	be 00 00 00 00       	mov    $0x0,%esi
    b5cd:	48 89 c7             	mov    %rax,%rdi
    b5d0:	e8 1b 7e ff ff       	call   33f0 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    b5d5:	85 c0                	test   %eax,%eax
    b5d7:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    b5da:	84 c0                	test   %al,%al
    b5dc:	74 3b                	je     b619 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    b5de:	bf 10 00 00 00       	mov    $0x10,%edi
    b5e3:	e8 28 7b ff ff       	call   3110 <__cxa_allocate_exception@plt>
    b5e8:	48 89 c3             	mov    %rax,%rbx
    b5eb:	48 8d 05 c6 7e 00 00 	lea    0x7ec6(%rip),%rax        # 134b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    b5f2:	48 89 c6             	mov    %rax,%rsi
    b5f5:	48 89 df             	mov    %rbx,%rdi
    b5f8:	e8 b3 7a ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    b5fd:	48 8b 05 b4 59 01 00 	mov    0x159b4(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b604:	48 89 c2             	mov    %rax,%rdx
    b607:	48 8d 05 32 57 01 00 	lea    0x15732(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b60e:	48 89 c6             	mov    %rax,%rsi
    b611:	48 89 df             	mov    %rbx,%rdi
    b614:	e8 97 7e ff ff       	call   34b0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, u32> helper;
    b619:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b620:	48 89 c7             	mov    %rax,%rdi
    b623:	e8 00 06 00 00       	call   bc28 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    b628:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b62f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    b633:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b637:	48 89 c7             	mov    %rax,%rdi
    b63a:	e8 3f 0b 00 00       	call   c17e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    b63f:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    b646:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b64a:	48 89 c7             	mov    %rax,%rdi
    b64d:	e8 52 0b 00 00       	call   c1a4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    b652:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    b659:	e9 8c 00 00 00       	jmp    b6ea <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    b65e:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b665:	48 89 c7             	mov    %rax,%rdi
    b668:	e8 bf 0b 00 00       	call   c22c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    b66d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    b671:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b678:	48 89 c7             	mov    %rax,%rdi
    b67b:	e8 60 7e ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b680:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b684:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    b68b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b692:	48 89 ce             	mov    %rcx,%rsi
    b695:	48 89 c7             	mov    %rax,%rdi
    b698:	e8 f5 92 ff ff       	call   4992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b69d:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    b6a4:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b6ab:	48 89 d6             	mov    %rdx,%rsi
    b6ae:	48 89 c7             	mov    %rax,%rdi
    b6b1:	e8 88 0b 00 00       	call   c23e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b6b6:	8b 10                	mov    (%rax),%edx
    b6b8:	83 c2 01             	add    $0x1,%edx
    b6bb:	89 10                	mov    %edx,(%rax)
    b6bd:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b6c4:	48 89 c7             	mov    %rax,%rdi
    b6c7:	e8 94 7a ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b6cc:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b6d3:	48 89 c7             	mov    %rax,%rdi
    b6d6:	e8 65 7c ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    b6db:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b6e2:	48 89 c7             	mov    %rax,%rdi
    b6e5:	e8 1e 0b 00 00       	call   c208 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    b6ea:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    b6f1:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    b6f8:	48 89 d6             	mov    %rdx,%rsi
    b6fb:	48 89 c7             	mov    %rax,%rdi
    b6fe:	e8 ca 0a 00 00       	call   c1cd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    b703:	84 c0                	test   %al,%al
    b705:	0f 85 53 ff ff ff    	jne    b65e <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    b70b:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b712:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b716:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b71a:	48 89 c7             	mov    %rax,%rdi
    b71d:	e8 20 0c 00 00       	call   c342 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    b722:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    b729:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b72d:	48 89 c7             	mov    %rax,%rdi
    b730:	e8 33 0c 00 00       	call   c368 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    b735:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    b73c:	e9 ed 00 00 00       	jmp    b82e <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    b741:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b748:	48 89 c7             	mov    %rax,%rdi
    b74b:	e8 9c 0c 00 00       	call   c3ec <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b750:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    b754:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b758:	48 89 c7             	mov    %rax,%rdi
    b75b:	e8 80 7d ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b760:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b764:	48 8b 08             	mov    (%rax),%rcx
    b767:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    b76b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b772:	48 89 ce             	mov    %rcx,%rsi
    b775:	48 89 c7             	mov    %rax,%rdi
    b778:	e8 15 92 ff ff       	call   4992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b77d:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    b784:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b78b:	48 89 d6             	mov    %rdx,%rsi
    b78e:	48 89 c7             	mov    %rax,%rdi
    b791:	e8 a8 0a 00 00       	call   c23e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b796:	8b 10                	mov    (%rax),%edx
    b798:	83 c2 01             	add    $0x1,%edx
    b79b:	89 10                	mov    %edx,(%rax)
    b79d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b7a4:	48 89 c7             	mov    %rax,%rdi
    b7a7:	e8 b4 79 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b7ac:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b7b0:	48 89 c7             	mov    %rax,%rdi
    b7b3:	e8 88 7b ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    b7b8:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b7bc:	48 89 c7             	mov    %rax,%rdi
    b7bf:	e8 1c 7d ff ff       	call   34e0 <_ZNSaIcEC1Ev@plt>
    b7c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b7c8:	48 8b 08             	mov    (%rax),%rcx
    b7cb:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    b7cf:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b7d3:	48 89 ce             	mov    %rcx,%rsi
    b7d6:	48 89 c7             	mov    %rax,%rdi
    b7d9:	e8 b4 91 ff ff       	call   4992 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    b7de:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    b7e2:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b7e9:	48 89 d6             	mov    %rdx,%rsi
    b7ec:	48 89 c7             	mov    %rax,%rdi
    b7ef:	e8 4a 0a 00 00       	call   c23e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    b7f4:	8b 00                	mov    (%rax),%eax
    b7f6:	83 f8 01             	cmp    $0x1,%eax
    b7f9:	0f 96 c3             	setbe  %bl
    b7fc:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b800:	48 89 c7             	mov    %rax,%rdi
    b803:	e8 58 79 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b808:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b80c:	48 89 c7             	mov    %rax,%rdi
    b80f:	e8 2c 7b ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b814:	84 db                	test   %bl,%bl
    b816:	74 07                	je     b81f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    b818:	bb 00 00 00 00       	mov    $0x0,%ebx
    b81d:	eb 35                	jmp    b854 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    b81f:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b826:	48 89 c7             	mov    %rax,%rdi
    b829:	e8 9e 0b 00 00       	call   c3cc <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    b82e:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    b835:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    b83c:	48 89 d6             	mov    %rdx,%rsi
    b83f:	48 89 c7             	mov    %rax,%rdi
    b842:	e8 4a 0b 00 00       	call   c391 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    b847:	84 c0                	test   %al,%al
    b849:	0f 85 f2 fe ff ff    	jne    b741 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    b84f:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    b854:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b85b:	48 89 c7             	mov    %rax,%rdi
    b85e:	e8 e1 03 00 00       	call   bc44 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b863:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b86a:	48 89 c7             	mov    %rax,%rdi
    b86d:	e8 16 08 00 00       	call   c088 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b872:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b879:	48 89 c7             	mov    %rax,%rdi
    b87c:	e8 15 07 00 00       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b881:	89 d8                	mov    %ebx,%eax
    b883:	e9 09 01 00 00       	jmp    b991 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    b888:	48 89 c3             	mov    %rax,%rbx
    b88b:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    b892:	48 89 c7             	mov    %rax,%rdi
    b895:	e8 58 06 00 00       	call   bef2 <_ZNSaIPKcED1Ev>
    b89a:	48 89 d8             	mov    %rbx,%rax
    b89d:	48 89 c7             	mov    %rax,%rdi
    b8a0:	e8 2b 7c ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    b8a5:	49 89 c4             	mov    %rax,%r12
    b8a8:	48 89 df             	mov    %rbx,%rdi
    b8ab:	e8 00 79 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b8b0:	4c 89 e3             	mov    %r12,%rbx
    b8b3:	e9 bf 00 00 00       	jmp    b977 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    b8b8:	48 89 c3             	mov    %rax,%rbx
    b8bb:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    b8c2:	48 89 c7             	mov    %rax,%rdi
    b8c5:	e8 2c 07 00 00       	call   bff6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    b8ca:	e9 a8 00 00 00       	jmp    b977 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    b8cf:	49 89 c4             	mov    %rax,%r12
    b8d2:	48 89 df             	mov    %rbx,%rdi
    b8d5:	e8 d6 78 ff ff       	call   31b0 <__cxa_free_exception@plt>
    b8da:	4c 89 e3             	mov    %r12,%rbx
    b8dd:	e9 81 00 00 00       	jmp    b963 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    b8e2:	48 89 c3             	mov    %rax,%rbx
    b8e5:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    b8ec:	48 89 c7             	mov    %rax,%rdi
    b8ef:	e8 6c 78 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b8f4:	eb 03                	jmp    b8f9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    b8f6:	48 89 c3             	mov    %rax,%rbx
    b8f9:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    b900:	48 89 c7             	mov    %rax,%rdi
    b903:	e8 38 7a ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b908:	eb 45                	jmp    b94f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    b90a:	48 89 c3             	mov    %rax,%rbx
    b90d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    b914:	48 89 c7             	mov    %rax,%rdi
    b917:	e8 44 78 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b91c:	eb 03                	jmp    b921 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    b91e:	48 89 c3             	mov    %rax,%rbx
    b921:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    b925:	48 89 c7             	mov    %rax,%rdi
    b928:	e8 13 7a ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
    b92d:	eb 20                	jmp    b94f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    b92f:	48 89 c3             	mov    %rax,%rbx
    b932:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b936:	48 89 c7             	mov    %rax,%rdi
    b939:	e8 22 78 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    b93e:	eb 03                	jmp    b943 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    b940:	48 89 c3             	mov    %rax,%rbx
    b943:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    b947:	48 89 c7             	mov    %rax,%rdi
    b94a:	e8 f1 79 ff ff       	call   3340 <_ZNSaIcED1Ev@plt>
}
    b94f:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    b956:	48 89 c7             	mov    %rax,%rdi
    b959:	e8 e6 02 00 00       	call   bc44 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    b95e:	eb 03                	jmp    b963 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    b960:	48 89 c3             	mov    %rax,%rbx
    b963:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    b96a:	48 89 c7             	mov    %rax,%rdi
    b96d:	e8 16 07 00 00       	call   c088 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    b972:	eb 03                	jmp    b977 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    b974:	48 89 c3             	mov    %rax,%rbx
    b977:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    b97e:	48 89 c7             	mov    %rax,%rdi
    b981:	e8 10 06 00 00       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b986:	48 89 d8             	mov    %rbx,%rax
    b989:	48 89 c7             	mov    %rax,%rdi
    b98c:	e8 3f 7b ff ff       	call   34d0 <_Unwind_Resume@plt>
    b991:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    b998:	5b                   	pop    %rbx
    b999:	41 5c                	pop    %r12
    b99b:	41 5d                	pop    %r13
    b99d:	5d                   	pop    %rbp
    b99e:	c3                   	ret
    b99f:	90                   	nop

000000000000b9a0 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>:

bool Device::checkFeatures(VkPhysicalDevice physicalDevice) {
    b9a0:	55                   	push   %rbp
    b9a1:	48 89 e5             	mov    %rsp,%rbp
    b9a4:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    b9ab:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    b9b2:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    b9b9:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    b9c0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    b9c7:	48 89 d6             	mov    %rdx,%rsi
    b9ca:	48 89 c7             	mov    %rax,%rdi
    b9cd:	e8 1e 78 ff ff       	call   31f0 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    b9d2:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    b9d8:	85 c0                	test   %eax,%eax
    b9da:	0f 95 c0             	setne  %al
}
    b9dd:	c9                   	leave
    b9de:	c3                   	ret
    b9df:	90                   	nop

000000000000b9e0 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice> Device::getPhysicalDevices(VkInstance instance) {
    b9e0:	55                   	push   %rbp
    b9e1:	48 89 e5             	mov    %rsp,%rbp
    b9e4:	41 54                	push   %r12
    b9e6:	53                   	push   %rbx
    b9e7:	48 83 ec 30          	sub    $0x30,%rsp
    b9eb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b9ef:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    b9f3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  u32 physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    b9f7:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    b9fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b9ff:	ba 00 00 00 00       	mov    $0x0,%edx
    ba04:	48 89 ce             	mov    %rcx,%rsi
    ba07:	48 89 c7             	mov    %rax,%rdi
    ba0a:	e8 31 77 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    ba0f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    ba12:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    ba16:	74 41                	je     ba59 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    ba18:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    ba1c:	74 3b                	je     ba59 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    ba1e:	bf 10 00 00 00       	mov    $0x10,%edi
    ba23:	e8 e8 76 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    ba28:	48 89 c3             	mov    %rax,%rbx
    ba2b:	48 8d 05 ae 7a 00 00 	lea    0x7aae(%rip),%rax        # 134e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    ba32:	48 89 c6             	mov    %rax,%rsi
    ba35:	48 89 df             	mov    %rbx,%rdi
    ba38:	e8 73 76 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    ba3d:	48 8b 05 74 55 01 00 	mov    0x15574(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ba44:	48 89 c2             	mov    %rax,%rdx
    ba47:	48 8d 05 f2 52 01 00 	lea    0x152f2(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ba4e:	48 89 c6             	mov    %rax,%rsi
    ba51:	48 89 df             	mov    %rbx,%rdi
    ba54:	e8 57 7a ff ff       	call   34b0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    ba59:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ba5c:	85 c0                	test   %eax,%eax
    ba5e:	75 3b                	jne    ba9b <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    ba60:	bf 10 00 00 00       	mov    $0x10,%edi
    ba65:	e8 a6 76 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    ba6a:	48 89 c3             	mov    %rax,%rbx
    ba6d:	48 8d 05 94 7a 00 00 	lea    0x7a94(%rip),%rax        # 13508 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    ba74:	48 89 c6             	mov    %rax,%rsi
    ba77:	48 89 df             	mov    %rbx,%rdi
    ba7a:	e8 31 76 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    ba7f:	48 8b 05 32 55 01 00 	mov    0x15532(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ba86:	48 89 c2             	mov    %rax,%rdx
    ba89:	48 8d 05 b0 52 01 00 	lea    0x152b0(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ba90:	48 89 c6             	mov    %rax,%rsi
    ba93:	48 89 df             	mov    %rbx,%rdi
    ba96:	e8 15 7a ff ff       	call   34b0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    ba9b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    ba9e:	89 c3                	mov    %eax,%ebx
    baa0:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    baa4:	48 89 c7             	mov    %rax,%rdi
    baa7:	e8 52 09 00 00       	call   c3fe <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    baac:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    bab0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bab4:	48 89 de             	mov    %rbx,%rsi
    bab7:	48 89 c7             	mov    %rax,%rdi
    baba:	e8 77 09 00 00       	call   c436 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    babf:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    bac3:	48 89 c7             	mov    %rax,%rdi
    bac6:	e8 4f 09 00 00       	call   c41a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    bacb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bacf:	48 89 c7             	mov    %rax,%rdi
    bad2:	e8 d5 09 00 00       	call   c4ac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    bad7:	48 89 c2             	mov    %rax,%rdx
    bada:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    bade:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    bae2:	48 89 ce             	mov    %rcx,%rsi
    bae5:	48 89 c7             	mov    %rax,%rdi
    bae8:	e8 53 76 ff ff       	call   3140 <vkEnumeratePhysicalDevices@plt>
    baed:	89 45 ec             	mov    %eax,-0x14(%rbp)
    baf0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    baf4:	0f 84 b5 00 00 00    	je     bbaf <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    bafa:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    bafe:	0f 84 ab 00 00 00    	je     bbaf <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    bb04:	bf 10 00 00 00       	mov    $0x10,%edi
    bb09:	e8 02 76 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    bb0e:	48 89 c3             	mov    %rax,%rbx
    bb11:	48 8d 05 c8 79 00 00 	lea    0x79c8(%rip),%rax        # 134e0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    bb18:	48 89 c6             	mov    %rax,%rsi
    bb1b:	48 89 df             	mov    %rbx,%rdi
    bb1e:	e8 8d 75 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    bb23:	48 8b 05 8e 54 01 00 	mov    0x1548e(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    bb2a:	48 89 c2             	mov    %rax,%rdx
    bb2d:	48 8d 05 0c 52 01 00 	lea    0x1520c(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    bb34:	48 89 c6             	mov    %rax,%rsi
    bb37:	48 89 df             	mov    %rbx,%rdi
    bb3a:	e8 71 79 ff ff       	call   34b0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    bb3f:	49 89 c4             	mov    %rax,%r12
    bb42:	48 89 df             	mov    %rbx,%rdi
    bb45:	e8 66 76 ff ff       	call   31b0 <__cxa_free_exception@plt>
    bb4a:	4c 89 e0             	mov    %r12,%rax
    bb4d:	48 89 c7             	mov    %rax,%rdi
    bb50:	e8 7b 79 ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    bb55:	49 89 c4             	mov    %rax,%r12
    bb58:	48 89 df             	mov    %rbx,%rdi
    bb5b:	e8 50 76 ff ff       	call   31b0 <__cxa_free_exception@plt>
    bb60:	4c 89 e0             	mov    %r12,%rax
    bb63:	48 89 c7             	mov    %rax,%rdi
    bb66:	e8 65 79 ff ff       	call   34d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    bb6b:	48 89 c3             	mov    %rax,%rbx
    bb6e:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    bb72:	48 89 c7             	mov    %rax,%rdi
    bb75:	e8 a0 08 00 00       	call   c41a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    bb7a:	48 89 d8             	mov    %rbx,%rax
    bb7d:	48 89 c7             	mov    %rax,%rdi
    bb80:	e8 4b 79 ff ff       	call   34d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    bb85:	49 89 c4             	mov    %rax,%r12
    bb88:	48 89 df             	mov    %rbx,%rdi
    bb8b:	e8 20 76 ff ff       	call   31b0 <__cxa_free_exception@plt>
    bb90:	4c 89 e3             	mov    %r12,%rbx
    bb93:	eb 03                	jmp    bb98 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    bb95:	48 89 c3             	mov    %rax,%rbx
    bb98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bb9c:	48 89 c7             	mov    %rax,%rdi
    bb9f:	e8 d8 00 00 00       	call   bc7c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    bba4:	48 89 d8             	mov    %rbx,%rax
    bba7:	48 89 c7             	mov    %rax,%rdi
    bbaa:	e8 21 79 ff ff       	call   34d0 <_Unwind_Resume@plt>
  return physicalDevices;
    bbaf:	90                   	nop
}
    bbb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bbb4:	48 83 c4 30          	add    $0x30,%rsp
    bbb8:	5b                   	pop    %rbx
    bbb9:	41 5c                	pop    %r12
    bbbb:	5d                   	pop    %rbp
    bbbc:	c3                   	ret

000000000000bbbd <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    bbbd:	55                   	push   %rbp
    bbbe:	48 89 e5             	mov    %rsp,%rbp
    bbc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbc9:	5d                   	pop    %rbp
    bbca:	c3                   	ret
    bbcb:	90                   	nop

000000000000bbcc <_ZNK4neko8InstancedeEv>:

  const VkInstance &operator*() const noexcept { return mInstance; }
    bbcc:	55                   	push   %rbp
    bbcd:	48 89 e5             	mov    %rsp,%rbp
    bbd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd8:	48 83 c0 08          	add    $0x8,%rax
    bbdc:	5d                   	pop    %rbp
    bbdd:	c3                   	ret

000000000000bbde <_ZNK4neko7SurfacedeEv>:

  Surface &operator=(Surface &&) = default;

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    bbde:	55                   	push   %rbp
    bbdf:	48 89 e5             	mov    %rsp,%rbp
    bbe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbea:	48 83 c0 08          	add    $0x8,%rax
    bbee:	5d                   	pop    %rbp
    bbef:	c3                   	ret

000000000000bbf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
	struct _Rb_tree_impl
    bbf0:	55                   	push   %rbp
    bbf1:	48 89 e5             	mov    %rsp,%rbp
    bbf4:	48 83 ec 10          	sub    $0x10,%rsp
    bbf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc00:	48 89 c7             	mov    %rax,%rdi
    bc03:	e8 20 05 00 00       	call   c128 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    bc08:	90                   	nop
    bc09:	c9                   	leave
    bc0a:	c3                   	ret
    bc0b:	90                   	nop

000000000000bc0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
      _Rb_tree() = default;
    bc0c:	55                   	push   %rbp
    bc0d:	48 89 e5             	mov    %rsp,%rbp
    bc10:	48 83 ec 10          	sub    $0x10,%rsp
    bc14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc1c:	48 89 c7             	mov    %rax,%rdi
    bc1f:	e8 cc 04 00 00       	call   c0f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    bc24:	90                   	nop
    bc25:	c9                   	leave
    bc26:	c3                   	ret
    bc27:	90                   	nop

000000000000bc28 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
      map() = default;
    bc28:	55                   	push   %rbp
    bc29:	48 89 e5             	mov    %rsp,%rbp
    bc2c:	48 83 ec 10          	sub    $0x10,%rsp
    bc30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc38:	48 89 c7             	mov    %rax,%rdi
    bc3b:	e8 cc ff ff ff       	call   bc0c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    bc40:	90                   	nop
    bc41:	c9                   	leave
    bc42:	c3                   	ret
    bc43:	90                   	nop

000000000000bc44 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      ~map() = default;
    bc44:	55                   	push   %rbp
    bc45:	48 89 e5             	mov    %rsp,%rbp
    bc48:	48 83 ec 10          	sub    $0x10,%rsp
    bc4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc54:	48 89 c7             	mov    %rax,%rdi
    bc57:	e8 e8 04 00 00       	call   c144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    bc5c:	90                   	nop
    bc5d:	c9                   	leave
    bc5e:	c3                   	ret
    bc5f:	90                   	nop

000000000000bc60 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    bc60:	55                   	push   %rbp
    bc61:	48 89 e5             	mov    %rsp,%rbp
    bc64:	48 83 ec 10          	sub    $0x10,%rsp
    bc68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc70:	48 89 c7             	mov    %rax,%rdi
    bc73:	e8 a2 07 00 00       	call   c41a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    bc78:	90                   	nop
    bc79:	c9                   	leave
    bc7a:	c3                   	ret
    bc7b:	90                   	nop

000000000000bc7c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bc7c:	55                   	push   %rbp
    bc7d:	48 89 e5             	mov    %rsp,%rbp
    bc80:	48 83 ec 10          	sub    $0x10,%rsp
    bc84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bc88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc8c:	48 89 c7             	mov    %rax,%rdi
    bc8f:	e8 8a 08 00 00       	call   c51e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    bc94:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bc97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bc9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca3:	48 8b 00             	mov    (%rax),%rax
    bca6:	48 89 ce             	mov    %rcx,%rsi
    bca9:	48 89 c7             	mov    %rax,%rdi
    bcac:	e8 7b 08 00 00       	call   c52c <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    bcb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcb5:	48 89 c7             	mov    %rax,%rdi
    bcb8:	e8 13 08 00 00       	call   c4d0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    bcbd:	90                   	nop
    bcbe:	c9                   	leave
    bcbf:	c3                   	ret

000000000000bcc0 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bcc0:	55                   	push   %rbp
    bcc1:	48 89 e5             	mov    %rsp,%rbp
    bcc4:	48 83 ec 10          	sub    $0x10,%rsp
    bcc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd0:	48 89 c7             	mov    %rax,%rdi
    bcd3:	e8 7e 08 00 00       	call   c556 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    bcd8:	90                   	nop
    bcd9:	c9                   	leave
    bcda:	c3                   	ret
    bcdb:	90                   	nop

000000000000bcdc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bcdc:	55                   	push   %rbp
    bcdd:	48 89 e5             	mov    %rsp,%rbp
    bce0:	48 83 ec 10          	sub    $0x10,%rsp
    bce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcec:	48 89 c7             	mov    %rax,%rdi
    bcef:	e8 6e 08 00 00       	call   c562 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    bcf4:	90                   	nop
    bcf5:	c9                   	leave
    bcf6:	c3                   	ret
    bcf7:	90                   	nop

000000000000bcf8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    bcf8:	55                   	push   %rbp
    bcf9:	48 89 e5             	mov    %rsp,%rbp
    bcfc:	53                   	push   %rbx
    bcfd:	48 83 ec 28          	sub    $0x28,%rsp
    bd01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bd05:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bd09:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    bd0d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bd11:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bd15:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bd19:	48 89 d6             	mov    %rdx,%rsi
    bd1c:	48 89 c7             	mov    %rax,%rdi
    bd1f:	e8 49 08 00 00       	call   c56d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    bd24:	48 89 c1             	mov    %rax,%rcx
    bd27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bd2b:	48 89 c2             	mov    %rax,%rdx
    bd2e:	48 89 ce             	mov    %rcx,%rsi
    bd31:	48 89 df             	mov    %rbx,%rdi
    bd34:	e8 b1 08 00 00       	call   c5ea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    bd39:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bd3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd41:	48 89 d6             	mov    %rdx,%rsi
    bd44:	48 89 c7             	mov    %rax,%rdi
    bd47:	e8 54 09 00 00       	call   c6a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    bd4c:	eb 1a                	jmp    bd68 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    bd4e:	48 89 c3             	mov    %rax,%rbx
    bd51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bd55:	48 89 c7             	mov    %rax,%rdi
    bd58:	e8 eb 08 00 00       	call   c648 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bd5d:	48 89 d8             	mov    %rbx,%rax
    bd60:	48 89 c7             	mov    %rax,%rdi
    bd63:	e8 68 77 ff ff       	call   34d0 <_Unwind_Resume@plt>
    bd68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bd6c:	c9                   	leave
    bd6d:	c3                   	ret

000000000000bd6e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bd6e:	55                   	push   %rbp
    bd6f:	48 89 e5             	mov    %rsp,%rbp
    bd72:	48 83 ec 10          	sub    $0x10,%rsp
    bd76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bd7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd7e:	48 89 c7             	mov    %rax,%rdi
    bd81:	e8 5a 09 00 00       	call   c6e0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    bd86:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bd89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bd91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd95:	48 8b 00             	mov    (%rax),%rax
    bd98:	48 89 ce             	mov    %rcx,%rsi
    bd9b:	48 89 c7             	mov    %rax,%rdi
    bd9e:	e8 4b 09 00 00       	call   c6ee <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    bda3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bda7:	48 89 c7             	mov    %rax,%rdi
    bdaa:	e8 99 08 00 00       	call   c648 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    bdaf:	90                   	nop
    bdb0:	c9                   	leave
    bdb1:	c3                   	ret

000000000000bdb2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    bdb2:	55                   	push   %rbp
    bdb3:	48 89 e5             	mov    %rsp,%rbp
    bdb6:	48 83 ec 10          	sub    $0x10,%rsp
    bdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    bdbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdc2:	48 8b 10             	mov    (%rax),%rdx
    bdc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdc9:	48 89 d6             	mov    %rdx,%rsi
    bdcc:	48 89 c7             	mov    %rax,%rdi
    bdcf:	e8 44 09 00 00       	call   c718 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    bdd4:	c9                   	leave
    bdd5:	c3                   	ret

000000000000bdd6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    bdd6:	55                   	push   %rbp
    bdd7:	48 89 e5             	mov    %rsp,%rbp
    bdda:	48 83 ec 20          	sub    $0x20,%rsp
    bdde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    bde2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bde6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bdea:	48 89 d6             	mov    %rdx,%rsi
    bded:	48 89 c7             	mov    %rax,%rdi
    bdf0:	e8 35 09 00 00       	call   c72a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    bdf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdf9:	c9                   	leave
    bdfa:	c3                   	ret
    bdfb:	90                   	nop

000000000000bdfc <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    bdfc:	55                   	push   %rbp
    bdfd:	48 89 e5             	mov    %rsp,%rbp
    be00:	48 83 ec 20          	sub    $0x20,%rsp
    be04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    be08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be0c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    be10:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be14:	48 89 d6             	mov    %rdx,%rsi
    be17:	48 89 c7             	mov    %rax,%rdi
    be1a:	e8 0b 09 00 00       	call   c72a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    be1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be23:	c9                   	leave
    be24:	c3                   	ret

000000000000be25 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    be25:	55                   	push   %rbp
    be26:	48 89 e5             	mov    %rsp,%rbp
    be29:	53                   	push   %rbx
    be2a:	48 83 ec 18          	sub    $0x18,%rsp
    be2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be32:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    be36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be3a:	48 89 c7             	mov    %rax,%rdi
    be3d:	e8 06 09 00 00       	call   c748 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    be42:	48 8b 18             	mov    (%rax),%rbx
    be45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    be49:	48 89 c7             	mov    %rax,%rdi
    be4c:	e8 f7 08 00 00       	call   c748 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    be51:	48 8b 00             	mov    (%rax),%rax
    be54:	48 39 c3             	cmp    %rax,%rbx
    be57:	0f 95 c0             	setne  %al
    be5a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    be5e:	c9                   	leave
    be5f:	c3                   	ret

000000000000be60 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    be60:	55                   	push   %rbp
    be61:	48 89 e5             	mov    %rsp,%rbp
    be64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    be68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be6c:	48 8b 00             	mov    (%rax),%rax
    be6f:	48 8d 50 18          	lea    0x18(%rax),%rdx
    be73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be77:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    be7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    be7e:	5d                   	pop    %rbp
    be7f:	c3                   	ret

000000000000be80 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    be80:	55                   	push   %rbp
    be81:	48 89 e5             	mov    %rsp,%rbp
    be84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    be88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be8c:	48 8b 00             	mov    (%rax),%rax
    be8f:	5d                   	pop    %rbp
    be90:	c3                   	ret
    be91:	90                   	nop

000000000000be92 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    be92:	55                   	push   %rbp
    be93:	48 89 e5             	mov    %rsp,%rbp
    be96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    be9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be9e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    bea2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bea6:	48 8b 00             	mov    (%rax),%rax
    bea9:	48 29 c2             	sub    %rax,%rdx
    beac:	48 89 d0             	mov    %rdx,%rax
    beaf:	48 c1 f8 03          	sar    $0x3,%rax
    beb3:	5d                   	pop    %rbp
    beb4:	c3                   	ret
    beb5:	90                   	nop

000000000000beb6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    beb6:	55                   	push   %rbp
    beb7:	48 89 e5             	mov    %rsp,%rbp
    beba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    bec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec6:	48 8b 00             	mov    (%rax),%rax
    bec9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    becd:	48 c1 e2 03          	shl    $0x3,%rdx
    bed1:	48 01 d0             	add    %rdx,%rax
      }
    bed4:	5d                   	pop    %rbp
    bed5:	c3                   	ret

000000000000bed6 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bed6:	55                   	push   %rbp
    bed7:	48 89 e5             	mov    %rsp,%rbp
    beda:	48 83 ec 10          	sub    $0x10,%rsp
    bede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bee2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee6:	48 89 c7             	mov    %rax,%rdi
    bee9:	e8 68 08 00 00       	call   c756 <_ZNSt15__new_allocatorIPKcEC1Ev>
    beee:	90                   	nop
    beef:	c9                   	leave
    bef0:	c3                   	ret
    bef1:	90                   	nop

000000000000bef2 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bef2:	55                   	push   %rbp
    bef3:	48 89 e5             	mov    %rsp,%rbp
    bef6:	48 83 ec 10          	sub    $0x10,%rsp
    befa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    befe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf02:	48 89 c7             	mov    %rax,%rdi
    bf05:	e8 58 08 00 00       	call   c762 <_ZNSt15__new_allocatorIPKcED1Ev>
    bf0a:	90                   	nop
    bf0b:	c9                   	leave
    bf0c:	c3                   	ret
    bf0d:	90                   	nop

000000000000bf0e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    bf0e:	55                   	push   %rbp
    bf0f:	48 89 e5             	mov    %rsp,%rbp
    bf12:	53                   	push   %rbx
    bf13:	48 83 ec 38          	sub    $0x38,%rsp
    bf17:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bf1b:	48 89 f0             	mov    %rsi,%rax
    bf1e:	48 89 d6             	mov    %rdx,%rsi
    bf21:	48 89 f2             	mov    %rsi,%rdx
    bf24:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    bf28:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    bf2c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    bf30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf34:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bf38:	48 89 d6             	mov    %rdx,%rsi
    bf3b:	48 89 c7             	mov    %rax,%rdi
    bf3e:	e8 47 08 00 00       	call   c78a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    bf43:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bf47:	48 89 c7             	mov    %rax,%rdi
    bf4a:	e8 c1 08 00 00       	call   c810 <_ZNKSt16initializer_listIPKcE3endEv>
    bf4f:	48 89 c3             	mov    %rax,%rbx
    bf52:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    bf56:	48 89 c7             	mov    %rax,%rdi
    bf59:	e8 a0 08 00 00       	call   c7fe <_ZNKSt16initializer_listIPKcE5beginEv>
    bf5e:	48 89 c1             	mov    %rax,%rcx
    bf61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf65:	48 89 da             	mov    %rbx,%rdx
    bf68:	48 89 ce             	mov    %rcx,%rsi
    bf6b:	48 89 c7             	mov    %rax,%rdi
    bf6e:	e8 03 09 00 00       	call   c876 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    bf73:	eb 1a                	jmp    bf8f <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    bf75:	48 89 c3             	mov    %rax,%rbx
    bf78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf7c:	48 89 c7             	mov    %rax,%rdi
    bf7f:	e8 2c 08 00 00       	call   c7b0 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    bf84:	48 89 d8             	mov    %rbx,%rax
    bf87:	48 89 c7             	mov    %rax,%rdi
    bf8a:	e8 41 75 ff ff       	call   34d0 <_Unwind_Resume@plt>
    bf8f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bf93:	c9                   	leave
    bf94:	c3                   	ret
    bf95:	90                   	nop

000000000000bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    bf96:	55                   	push   %rbp
    bf97:	48 89 e5             	mov    %rsp,%rbp
    bf9a:	48 83 ec 10          	sub    $0x10,%rsp
    bf9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    bfa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfa6:	48 89 c7             	mov    %rax,%rdi
    bfa9:	e8 78 09 00 00       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    bfae:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    bfb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfb5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    bfb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfbd:	48 8b 00             	mov    (%rax),%rax
    bfc0:	48 89 ce             	mov    %rcx,%rsi
    bfc3:	48 89 c7             	mov    %rax,%rdi
    bfc6:	e8 69 09 00 00       	call   c934 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    bfcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfcf:	48 89 c7             	mov    %rax,%rdi
    bfd2:	e8 d9 07 00 00       	call   c7b0 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    bfd7:	90                   	nop
    bfd8:	c9                   	leave
    bfd9:	c3                   	ret

000000000000bfda <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    bfda:	55                   	push   %rbp
    bfdb:	48 89 e5             	mov    %rsp,%rbp
    bfde:	48 83 ec 10          	sub    $0x10,%rsp
    bfe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfea:	48 89 c7             	mov    %rax,%rdi
    bfed:	e8 6c 09 00 00       	call   c95e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    bff2:	90                   	nop
    bff3:	c9                   	leave
    bff4:	c3                   	ret
    bff5:	90                   	nop

000000000000bff6 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bff6:	55                   	push   %rbp
    bff7:	48 89 e5             	mov    %rsp,%rbp
    bffa:	48 83 ec 10          	sub    $0x10,%rsp
    bffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c006:	48 89 c7             	mov    %rax,%rdi
    c009:	e8 5c 09 00 00       	call   c96a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    c00e:	90                   	nop
    c00f:	c9                   	leave
    c010:	c3                   	ret
    c011:	90                   	nop

000000000000c012 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c012:	55                   	push   %rbp
    c013:	48 89 e5             	mov    %rsp,%rbp
    c016:	53                   	push   %rbx
    c017:	48 83 ec 28          	sub    $0x28,%rsp
    c01b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c01f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c023:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c027:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c02b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c02f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c033:	48 89 d6             	mov    %rdx,%rsi
    c036:	48 89 c7             	mov    %rax,%rdi
    c039:	e8 37 09 00 00       	call   c975 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    c03e:	48 89 c1             	mov    %rax,%rcx
    c041:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c045:	48 89 c2             	mov    %rax,%rdx
    c048:	48 89 ce             	mov    %rcx,%rsi
    c04b:	48 89 df             	mov    %rbx,%rdi
    c04e:	e8 9f 09 00 00       	call   c9f2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    c053:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c057:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c05b:	48 89 d6             	mov    %rdx,%rsi
    c05e:	48 89 c7             	mov    %rax,%rdi
    c061:	e8 42 0a 00 00       	call   caa8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    c066:	eb 1a                	jmp    c082 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    c068:	48 89 c3             	mov    %rax,%rbx
    c06b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c06f:	48 89 c7             	mov    %rax,%rdi
    c072:	e8 d9 09 00 00       	call   ca50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c077:	48 89 d8             	mov    %rbx,%rax
    c07a:	48 89 c7             	mov    %rax,%rdi
    c07d:	e8 4e 74 ff ff       	call   34d0 <_Unwind_Resume@plt>
    c082:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c086:	c9                   	leave
    c087:	c3                   	ret

000000000000c088 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c088:	55                   	push   %rbp
    c089:	48 89 e5             	mov    %rsp,%rbp
    c08c:	48 83 ec 10          	sub    $0x10,%rsp
    c090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c098:	48 89 c7             	mov    %rax,%rdi
    c09b:	e8 48 0a 00 00       	call   cae8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c0a0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c0a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0af:	48 8b 00             	mov    (%rax),%rax
    c0b2:	48 89 ce             	mov    %rcx,%rsi
    c0b5:	48 89 c7             	mov    %rax,%rdi
    c0b8:	e8 39 0a 00 00       	call   caf6 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    c0bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0c1:	48 89 c7             	mov    %rax,%rdi
    c0c4:	e8 87 09 00 00       	call   ca50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c0c9:	90                   	nop
    c0ca:	c9                   	leave
    c0cb:	c3                   	ret

000000000000c0cc <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c0cc:	55                   	push   %rbp
    c0cd:	48 89 e5             	mov    %rsp,%rbp
    c0d0:	48 83 ec 10          	sub    $0x10,%rsp
    c0d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c0d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0dc:	48 8b 10             	mov    (%rax),%rdx
    c0df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e3:	48 89 d6             	mov    %rdx,%rsi
    c0e6:	48 89 c7             	mov    %rax,%rdi
    c0e9:	e8 32 0a 00 00       	call   cb20 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    c0ee:	c9                   	leave
    c0ef:	c3                   	ret

000000000000c0f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    c0f0:	55                   	push   %rbp
    c0f1:	48 89 e5             	mov    %rsp,%rbp
    c0f4:	48 83 ec 10          	sub    $0x10,%rsp
    c0f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    c0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c100:	48 89 c7             	mov    %rax,%rdi
    c103:	e8 2a 0a 00 00       	call   cb32 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    c108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c10c:	48 89 c7             	mov    %rax,%rdi
    c10f:	e8 3a 0a 00 00       	call   cb4e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    c114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c118:	48 83 c0 08          	add    $0x8,%rax
    c11c:	48 89 c7             	mov    %rax,%rdi
    c11f:	e8 44 7c ff ff       	call   3d68 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    c124:	90                   	nop
    c125:	c9                   	leave
    c126:	c3                   	ret
    c127:	90                   	nop

000000000000c128 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    c128:	55                   	push   %rbp
    c129:	48 89 e5             	mov    %rsp,%rbp
    c12c:	48 83 ec 10          	sub    $0x10,%rsp
    c130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c138:	48 89 c7             	mov    %rax,%rdi
    c13b:	e8 1a 0a 00 00       	call   cb5a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    c140:	90                   	nop
    c141:	c9                   	leave
    c142:	c3                   	ret
    c143:	90                   	nop

000000000000c144 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    c144:	55                   	push   %rbp
    c145:	48 89 e5             	mov    %rsp,%rbp
    c148:	48 83 ec 10          	sub    $0x10,%rsp
    c14c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    c150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c154:	48 89 c7             	mov    %rax,%rdi
    c157:	e8 70 0a 00 00       	call   cbcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    c15c:	48 89 c2             	mov    %rax,%rdx
    c15f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c163:	48 89 d6             	mov    %rdx,%rsi
    c166:	48 89 c7             	mov    %rax,%rdi
    c169:	e8 f8 09 00 00       	call   cb66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    c16e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c172:	48 89 c7             	mov    %rax,%rdi
    c175:	e8 76 fa ff ff       	call   bbf0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    c17a:	90                   	nop
    c17b:	c9                   	leave
    c17c:	c3                   	ret
    c17d:	90                   	nop

000000000000c17e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c17e:	55                   	push   %rbp
    c17f:	48 89 e5             	mov    %rsp,%rbp
    c182:	48 83 ec 20          	sub    $0x20,%rsp
    c186:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c18a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c18e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c192:	48 89 d6             	mov    %rdx,%rsi
    c195:	48 89 c7             	mov    %rax,%rdi
    c198:	e8 49 0a 00 00       	call   cbe6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a1:	c9                   	leave
    c1a2:	c3                   	ret
    c1a3:	90                   	nop

000000000000c1a4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c1a4:	55                   	push   %rbp
    c1a5:	48 89 e5             	mov    %rsp,%rbp
    c1a8:	48 83 ec 20          	sub    $0x20,%rsp
    c1ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c1b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1b4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c1b8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c1bc:	48 89 d6             	mov    %rdx,%rsi
    c1bf:	48 89 c7             	mov    %rax,%rdi
    c1c2:	e8 1f 0a 00 00       	call   cbe6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1cb:	c9                   	leave
    c1cc:	c3                   	ret

000000000000c1cd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c1cd:	55                   	push   %rbp
    c1ce:	48 89 e5             	mov    %rsp,%rbp
    c1d1:	53                   	push   %rbx
    c1d2:	48 83 ec 18          	sub    $0x18,%rsp
    c1d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c1da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c1de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c1e2:	48 89 c7             	mov    %rax,%rdi
    c1e5:	e8 1a 0a 00 00       	call   cc04 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c1ea:	48 8b 18             	mov    (%rax),%rbx
    c1ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c1f1:	48 89 c7             	mov    %rax,%rdi
    c1f4:	e8 0b 0a 00 00       	call   cc04 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    c1f9:	48 8b 00             	mov    (%rax),%rax
    c1fc:	48 39 c3             	cmp    %rax,%rbx
    c1ff:	0f 95 c0             	setne  %al
    c202:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c206:	c9                   	leave
    c207:	c3                   	ret

000000000000c208 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c208:	55                   	push   %rbp
    c209:	48 89 e5             	mov    %rsp,%rbp
    c20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c214:	48 8b 00             	mov    (%rax),%rax
    c217:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    c21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c222:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c229:	5d                   	pop    %rbp
    c22a:	c3                   	ret
    c22b:	90                   	nop

000000000000c22c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c22c:	55                   	push   %rbp
    c22d:	48 89 e5             	mov    %rsp,%rbp
    c230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c238:	48 8b 00             	mov    (%rax),%rax
    c23b:	5d                   	pop    %rbp
    c23c:	c3                   	ret
    c23d:	90                   	nop

000000000000c23e <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
      operator[](key_type&& __k)
    c23e:	55                   	push   %rbp
    c23f:	48 89 e5             	mov    %rsp,%rbp
    c242:	53                   	push   %rbx
    c243:	48 83 ec 48          	sub    $0x48,%rsp
    c247:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    c24b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
	iterator __i = lower_bound(__k);
    c24f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    c253:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c257:	48 89 d6             	mov    %rdx,%rsi
    c25a:	48 89 c7             	mov    %rax,%rdi
    c25d:	e8 b0 09 00 00       	call   cc12 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    c262:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	if (__i == end() || key_comp()(__k, (*__i).first))
    c266:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c26a:	48 89 c7             	mov    %rax,%rdi
    c26d:	e8 c6 09 00 00       	call   cc38 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    c272:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    c276:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    c27a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c27e:	48 89 d6             	mov    %rdx,%rsi
    c281:	48 89 c7             	mov    %rax,%rdi
    c284:	e8 c9 09 00 00       	call   cc52 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    c289:	84 c0                	test   %al,%al
    c28b:	75 32                	jne    c2bf <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    c28d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c291:	48 89 c7             	mov    %rax,%rdi
    c294:	e8 db 09 00 00       	call   cc74 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    c299:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c29d:	48 89 c7             	mov    %rax,%rdi
    c2a0:	e8 eb 09 00 00       	call   cc90 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c2a5:	48 89 c2             	mov    %rax,%rdx
    c2a8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    c2ac:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    c2b0:	48 89 ce             	mov    %rcx,%rsi
    c2b3:	48 89 c7             	mov    %rax,%rdi
    c2b6:	e8 f3 09 00 00       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    c2bb:	84 c0                	test   %al,%al
    c2bd:	74 07                	je     c2c6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    c2bf:	b8 01 00 00 00       	mov    $0x1,%eax
    c2c4:	eb 05                	jmp    c2cb <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    c2c6:	b8 00 00 00 00       	mov    $0x0,%eax
    c2cb:	84 c0                	test   %al,%al
    c2cd:	74 5d                	je     c32c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c2cf:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    c2d3:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    c2d7:	48 89 c7             	mov    %rax,%rdi
    c2da:	e8 f8 09 00 00       	call   ccd7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    c2df:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    c2e2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    c2e6:	48 89 d6             	mov    %rdx,%rsi
    c2e9:	48 89 c7             	mov    %rax,%rdi
    c2ec:	e8 f4 09 00 00       	call   cce5 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    c2f1:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    c2f5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    c2f9:	48 89 d6             	mov    %rdx,%rsi
    c2fc:	48 89 c7             	mov    %rax,%rdi
    c2ff:	e8 16 0a 00 00       	call   cd1a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    c304:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    c308:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    c30c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c310:	49 89 c8             	mov    %rcx,%r8
    c313:	48 89 d1             	mov    %rdx,%rcx
    c316:	48 8d 15 13 64 00 00 	lea    0x6413(%rip),%rdx        # 12730 <_ZSt19piecewise_construct>
    c31d:	48 89 c6             	mov    %rax,%rsi
    c320:	48 89 df             	mov    %rbx,%rdi
    c323:	e8 10 0a 00 00       	call   cd38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    c328:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	return (*__i).second;
    c32c:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c330:	48 89 c7             	mov    %rax,%rdi
    c333:	e8 58 09 00 00       	call   cc90 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    c338:	48 83 c0 20          	add    $0x20,%rax
      }
    c33c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c340:	c9                   	leave
    c341:	c3                   	ret

000000000000c342 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    c342:	55                   	push   %rbp
    c343:	48 89 e5             	mov    %rsp,%rbp
    c346:	48 83 ec 20          	sub    $0x20,%rsp
    c34a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    c34e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c352:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c356:	48 89 d6             	mov    %rdx,%rsi
    c359:	48 89 c7             	mov    %rax,%rdi
    c35c:	e8 d3 0a 00 00       	call   ce34 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c365:	c9                   	leave
    c366:	c3                   	ret
    c367:	90                   	nop

000000000000c368 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    c368:	55                   	push   %rbp
    c369:	48 89 e5             	mov    %rsp,%rbp
    c36c:	48 83 ec 20          	sub    $0x20,%rsp
    c370:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    c374:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c378:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c37c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c380:	48 89 d6             	mov    %rdx,%rsi
    c383:	48 89 c7             	mov    %rax,%rdi
    c386:	e8 a9 0a 00 00       	call   ce34 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    c38b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38f:	c9                   	leave
    c390:	c3                   	ret

000000000000c391 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    c391:	55                   	push   %rbp
    c392:	48 89 e5             	mov    %rsp,%rbp
    c395:	53                   	push   %rbx
    c396:	48 83 ec 18          	sub    $0x18,%rsp
    c39a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c39e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    c3a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a6:	48 89 c7             	mov    %rax,%rdi
    c3a9:	e8 a4 0a 00 00       	call   ce52 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c3ae:	48 8b 18             	mov    (%rax),%rbx
    c3b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c3b5:	48 89 c7             	mov    %rax,%rdi
    c3b8:	e8 95 0a 00 00       	call   ce52 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    c3bd:	48 8b 00             	mov    (%rax),%rax
    c3c0:	48 39 c3             	cmp    %rax,%rbx
    c3c3:	0f 95 c0             	setne  %al
    c3c6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c3ca:	c9                   	leave
    c3cb:	c3                   	ret

000000000000c3cc <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    c3cc:	55                   	push   %rbp
    c3cd:	48 89 e5             	mov    %rsp,%rbp
    c3d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    c3d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d8:	48 8b 00             	mov    (%rax),%rax
    c3db:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c3df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    c3e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    c3ea:	5d                   	pop    %rbp
    c3eb:	c3                   	ret

000000000000c3ec <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    c3ec:	55                   	push   %rbp
    c3ed:	48 89 e5             	mov    %rsp,%rbp
    c3f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    c3f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f8:	48 8b 00             	mov    (%rax),%rax
    c3fb:	5d                   	pop    %rbp
    c3fc:	c3                   	ret
    c3fd:	90                   	nop

000000000000c3fe <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c3fe:	55                   	push   %rbp
    c3ff:	48 89 e5             	mov    %rsp,%rbp
    c402:	48 83 ec 10          	sub    $0x10,%rsp
    c406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c40a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c40e:	48 89 c7             	mov    %rax,%rdi
    c411:	e8 4a 0a 00 00       	call   ce60 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    c416:	90                   	nop
    c417:	c9                   	leave
    c418:	c3                   	ret
    c419:	90                   	nop

000000000000c41a <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c41a:	55                   	push   %rbp
    c41b:	48 89 e5             	mov    %rsp,%rbp
    c41e:	48 83 ec 10          	sub    $0x10,%rsp
    c422:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c42a:	48 89 c7             	mov    %rax,%rdi
    c42d:	e8 3a 0a 00 00       	call   ce6c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    c432:	90                   	nop
    c433:	c9                   	leave
    c434:	c3                   	ret
    c435:	90                   	nop

000000000000c436 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c436:	55                   	push   %rbp
    c437:	48 89 e5             	mov    %rsp,%rbp
    c43a:	53                   	push   %rbx
    c43b:	48 83 ec 28          	sub    $0x28,%rsp
    c43f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c443:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c447:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c44b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c44f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c453:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c457:	48 89 d6             	mov    %rdx,%rsi
    c45a:	48 89 c7             	mov    %rax,%rdi
    c45d:	e8 15 0a 00 00       	call   ce77 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    c462:	48 89 c1             	mov    %rax,%rcx
    c465:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c469:	48 89 c2             	mov    %rax,%rdx
    c46c:	48 89 ce             	mov    %rcx,%rsi
    c46f:	48 89 df             	mov    %rbx,%rdi
    c472:	e8 61 0a 00 00       	call   ced8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    c477:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c47b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c47f:	48 89 d6             	mov    %rdx,%rsi
    c482:	48 89 c7             	mov    %rax,%rdi
    c485:	e8 ac 0a 00 00       	call   cf36 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    c48a:	eb 1a                	jmp    c4a6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    c48c:	48 89 c3             	mov    %rax,%rbx
    c48f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c493:	48 89 c7             	mov    %rax,%rdi
    c496:	e8 35 00 00 00       	call   c4d0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    c49b:	48 89 d8             	mov    %rbx,%rax
    c49e:	48 89 c7             	mov    %rax,%rdi
    c4a1:	e8 2a 70 ff ff       	call   34d0 <_Unwind_Resume@plt>
    c4a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c4aa:	c9                   	leave
    c4ab:	c3                   	ret

000000000000c4ac <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c4ac:	55                   	push   %rbp
    c4ad:	48 89 e5             	mov    %rsp,%rbp
    c4b0:	48 83 ec 10          	sub    $0x10,%rsp
    c4b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4bc:	48 8b 10             	mov    (%rax),%rdx
    c4bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4c3:	48 89 d6             	mov    %rdx,%rsi
    c4c6:	48 89 c7             	mov    %rax,%rdi
    c4c9:	e8 a8 0a 00 00       	call   cf76 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    c4ce:	c9                   	leave
    c4cf:	c3                   	ret

000000000000c4d0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c4d0:	55                   	push   %rbp
    c4d1:	48 89 e5             	mov    %rsp,%rbp
    c4d4:	48 83 ec 10          	sub    $0x10,%rsp
    c4d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c4dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c4e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e8:	48 8b 00             	mov    (%rax),%rax
    c4eb:	48 29 c2             	sub    %rax,%rdx
    c4ee:	48 89 d0             	mov    %rdx,%rax
    c4f1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c4f5:	48 89 c2             	mov    %rax,%rdx
    c4f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4fc:	48 8b 08             	mov    (%rax),%rcx
    c4ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c503:	48 89 ce             	mov    %rcx,%rsi
    c506:	48 89 c7             	mov    %rax,%rdi
    c509:	e8 a0 0a 00 00       	call   cfae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c50e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c512:	48 89 c7             	mov    %rax,%rdi
    c515:	e8 46 f7 ff ff       	call   bc60 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    c51a:	90                   	nop
    c51b:	c9                   	leave
    c51c:	c3                   	ret
    c51d:	90                   	nop

000000000000c51e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c51e:	55                   	push   %rbp
    c51f:	48 89 e5             	mov    %rsp,%rbp
    c522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c526:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c52a:	5d                   	pop    %rbp
    c52b:	c3                   	ret

000000000000c52c <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c52c:	55                   	push   %rbp
    c52d:	48 89 e5             	mov    %rsp,%rbp
    c530:	48 83 ec 20          	sub    $0x20,%rsp
    c534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c53c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c540:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c548:	48 89 d6             	mov    %rdx,%rsi
    c54b:	48 89 c7             	mov    %rax,%rdi
    c54e:	e8 90 0a 00 00       	call   cfe3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    c553:	90                   	nop
    c554:	c9                   	leave
    c555:	c3                   	ret

000000000000c556 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c556:	55                   	push   %rbp
    c557:	48 89 e5             	mov    %rsp,%rbp
    c55a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c55e:	90                   	nop
    c55f:	5d                   	pop    %rbp
    c560:	c3                   	ret
    c561:	90                   	nop

000000000000c562 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c562:	55                   	push   %rbp
    c563:	48 89 e5             	mov    %rsp,%rbp
    c566:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c56a:	90                   	nop
    c56b:	5d                   	pop    %rbp
    c56c:	c3                   	ret

000000000000c56d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c56d:	55                   	push   %rbp
    c56e:	48 89 e5             	mov    %rsp,%rbp
    c571:	53                   	push   %rbx
    c572:	48 83 ec 28          	sub    $0x28,%rsp
    c576:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c57a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c57e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c582:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c586:	48 89 d6             	mov    %rdx,%rsi
    c589:	48 89 c7             	mov    %rax,%rdi
    c58c:	e8 bb 0a 00 00       	call   d04c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    c591:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c595:	48 89 c7             	mov    %rax,%rdi
    c598:	e8 6c 0a 00 00       	call   d009 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c59d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c5a1:	0f 92 c3             	setb   %bl
    c5a4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c5a8:	48 89 c7             	mov    %rax,%rdi
    c5ab:	e8 2c f7 ff ff       	call   bcdc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c5b0:	84 db                	test   %bl,%bl
    c5b2:	74 0f                	je     c5c3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c5b4:	48 8d 05 ad 6f 00 00 	lea    0x6fad(%rip),%rax        # 13568 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c5bb:	48 89 c7             	mov    %rax,%rdi
    c5be:	e8 6d 6b ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c5c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c5c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c5cb:	c9                   	leave
    c5cc:	c3                   	ret
    c5cd:	90                   	nop

000000000000c5ce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c5ce:	55                   	push   %rbp
    c5cf:	48 89 e5             	mov    %rsp,%rbp
    c5d2:	48 83 ec 10          	sub    $0x10,%rsp
    c5d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5de:	48 89 c7             	mov    %rax,%rdi
    c5e1:	e8 f6 f6 ff ff       	call   bcdc <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    c5e6:	90                   	nop
    c5e7:	c9                   	leave
    c5e8:	c3                   	ret
    c5e9:	90                   	nop

000000000000c5ea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c5ea:	55                   	push   %rbp
    c5eb:	48 89 e5             	mov    %rsp,%rbp
    c5ee:	53                   	push   %rbx
    c5ef:	48 83 ec 28          	sub    $0x28,%rsp
    c5f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c5f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c5fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c5ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c603:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c607:	48 89 d6             	mov    %rdx,%rsi
    c60a:	48 89 c7             	mov    %rax,%rdi
    c60d:	e8 60 0a 00 00       	call   d072 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    c612:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c616:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c61a:	48 89 d6             	mov    %rdx,%rsi
    c61d:	48 89 c7             	mov    %rax,%rdi
    c620:	e8 7f 0a 00 00       	call   d0a4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    c625:	eb 1a                	jmp    c641 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    c627:	48 89 c3             	mov    %rax,%rbx
    c62a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c62e:	48 89 c7             	mov    %rax,%rdi
    c631:	e8 98 ff ff ff       	call   c5ce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c636:	48 89 d8             	mov    %rbx,%rax
    c639:	48 89 c7             	mov    %rax,%rdi
    c63c:	e8 8f 6e ff ff       	call   34d0 <_Unwind_Resume@plt>
    c641:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c645:	c9                   	leave
    c646:	c3                   	ret
    c647:	90                   	nop

000000000000c648 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c648:	55                   	push   %rbp
    c649:	48 89 e5             	mov    %rsp,%rbp
    c64c:	48 83 ec 10          	sub    $0x10,%rsp
    c650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c658:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c65c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c660:	48 8b 00             	mov    (%rax),%rax
    c663:	48 29 c2             	sub    %rax,%rdx
    c666:	48 c1 fa 03          	sar    $0x3,%rdx
    c66a:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    c671:	aa aa aa 
    c674:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c678:	48 89 c2             	mov    %rax,%rdx
    c67b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c67f:	48 8b 08             	mov    (%rax),%rcx
    c682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c686:	48 89 ce             	mov    %rcx,%rsi
    c689:	48 89 c7             	mov    %rax,%rdi
    c68c:	e8 73 0a 00 00       	call   d104 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c691:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c695:	48 89 c7             	mov    %rax,%rdi
    c698:	e8 31 ff ff ff       	call   c5ce <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    c69d:	90                   	nop
    c69e:	c9                   	leave
    c69f:	c3                   	ret

000000000000c6a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c6a0:	55                   	push   %rbp
    c6a1:	48 89 e5             	mov    %rsp,%rbp
    c6a4:	48 83 ec 10          	sub    $0x10,%rsp
    c6a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c6b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b4:	48 89 c7             	mov    %rax,%rdi
    c6b7:	e8 24 00 00 00       	call   c6e0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c6bc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c6bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c3:	48 8b 00             	mov    (%rax),%rax
    c6c6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6ca:	48 89 ce             	mov    %rcx,%rsi
    c6cd:	48 89 c7             	mov    %rax,%rdi
    c6d0:	e8 64 0a 00 00       	call   d139 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c6d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c6d9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c6dd:	90                   	nop
    c6de:	c9                   	leave
    c6df:	c3                   	ret

000000000000c6e0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c6e0:	55                   	push   %rbp
    c6e1:	48 89 e5             	mov    %rsp,%rbp
    c6e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c6e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ec:	5d                   	pop    %rbp
    c6ed:	c3                   	ret

000000000000c6ee <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c6ee:	55                   	push   %rbp
    c6ef:	48 89 e5             	mov    %rsp,%rbp
    c6f2:	48 83 ec 20          	sub    $0x20,%rsp
    c6f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c702:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c70a:	48 89 d6             	mov    %rdx,%rsi
    c70d:	48 89 c7             	mov    %rax,%rdi
    c710:	e8 4d 0a 00 00       	call   d162 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    c715:	90                   	nop
    c716:	c9                   	leave
    c717:	c3                   	ret

000000000000c718 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c718:	55                   	push   %rbp
    c719:	48 89 e5             	mov    %rsp,%rbp
    c71c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c720:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c724:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c728:	5d                   	pop    %rbp
    c729:	c3                   	ret

000000000000c72a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c72a:	55                   	push   %rbp
    c72b:	48 89 e5             	mov    %rsp,%rbp
    c72e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c732:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c736:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c73a:	48 8b 10             	mov    (%rax),%rdx
    c73d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c741:	48 89 10             	mov    %rdx,(%rax)
    c744:	90                   	nop
    c745:	5d                   	pop    %rbp
    c746:	c3                   	ret
    c747:	90                   	nop

000000000000c748 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c748:	55                   	push   %rbp
    c749:	48 89 e5             	mov    %rsp,%rbp
    c74c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c754:	5d                   	pop    %rbp
    c755:	c3                   	ret

000000000000c756 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c756:	55                   	push   %rbp
    c757:	48 89 e5             	mov    %rsp,%rbp
    c75a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c75e:	90                   	nop
    c75f:	5d                   	pop    %rbp
    c760:	c3                   	ret
    c761:	90                   	nop

000000000000c762 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c762:	55                   	push   %rbp
    c763:	48 89 e5             	mov    %rsp,%rbp
    c766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c76a:	90                   	nop
    c76b:	5d                   	pop    %rbp
    c76c:	c3                   	ret
    c76d:	90                   	nop

000000000000c76e <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c76e:	55                   	push   %rbp
    c76f:	48 89 e5             	mov    %rsp,%rbp
    c772:	48 83 ec 10          	sub    $0x10,%rsp
    c776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c77a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c77e:	48 89 c7             	mov    %rax,%rdi
    c781:	e8 6c f7 ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
    c786:	90                   	nop
    c787:	c9                   	leave
    c788:	c3                   	ret
    c789:	90                   	nop

000000000000c78a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    c78a:	55                   	push   %rbp
    c78b:	48 89 e5             	mov    %rsp,%rbp
    c78e:	48 83 ec 10          	sub    $0x10,%rsp
    c792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c796:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    c79a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c79e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c7a2:	48 89 d6             	mov    %rdx,%rsi
    c7a5:	48 89 c7             	mov    %rax,%rdi
    c7a8:	e8 db 09 00 00       	call   d188 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    c7ad:	90                   	nop
    c7ae:	c9                   	leave
    c7af:	c3                   	ret

000000000000c7b0 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c7b0:	55                   	push   %rbp
    c7b1:	48 89 e5             	mov    %rsp,%rbp
    c7b4:	48 83 ec 10          	sub    $0x10,%rsp
    c7b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c7bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c7c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c8:	48 8b 00             	mov    (%rax),%rax
    c7cb:	48 29 c2             	sub    %rax,%rdx
    c7ce:	48 89 d0             	mov    %rdx,%rax
    c7d1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c7d5:	48 89 c2             	mov    %rax,%rdx
    c7d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7dc:	48 8b 08             	mov    (%rax),%rcx
    c7df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e3:	48 89 ce             	mov    %rcx,%rsi
    c7e6:	48 89 c7             	mov    %rax,%rdi
    c7e9:	e8 cc 09 00 00       	call   d1ba <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    c7ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7f2:	48 89 c7             	mov    %rax,%rdi
    c7f5:	e8 74 ff ff ff       	call   c76e <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    c7fa:	90                   	nop
    c7fb:	c9                   	leave
    c7fc:	c3                   	ret
    c7fd:	90                   	nop

000000000000c7fe <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    c7fe:	55                   	push   %rbp
    c7ff:	48 89 e5             	mov    %rsp,%rbp
    c802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c806:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c80a:	48 8b 00             	mov    (%rax),%rax
    c80d:	5d                   	pop    %rbp
    c80e:	c3                   	ret
    c80f:	90                   	nop

000000000000c810 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    c810:	55                   	push   %rbp
    c811:	48 89 e5             	mov    %rsp,%rbp
    c814:	53                   	push   %rbx
    c815:	48 83 ec 18          	sub    $0x18,%rsp
    c819:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c81d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c821:	48 89 c7             	mov    %rax,%rdi
    c824:	e8 d5 ff ff ff       	call   c7fe <_ZNKSt16initializer_listIPKcE5beginEv>
    c829:	48 89 c3             	mov    %rax,%rbx
    c82c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c830:	48 89 c7             	mov    %rax,%rdi
    c833:	e8 b8 09 00 00       	call   d1f0 <_ZNKSt16initializer_listIPKcE4sizeEv>
    c838:	48 c1 e0 03          	shl    $0x3,%rax
    c83c:	48 01 d8             	add    %rbx,%rax
    c83f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c843:	c9                   	leave
    c844:	c3                   	ret

000000000000c845 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    c845:	55                   	push   %rbp
    c846:	48 89 e5             	mov    %rsp,%rbp
    c849:	48 83 ec 10          	sub    $0x10,%rsp
    c84d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c851:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    c855:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c859:	48 89 c7             	mov    %rax,%rdi
    c85c:	e8 a1 09 00 00       	call   d202 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    c861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c865:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c869:	48 89 d6             	mov    %rdx,%rsi
    c86c:	48 89 c7             	mov    %rax,%rdi
    c86f:	e8 99 09 00 00       	call   d20d <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    c874:	c9                   	leave
    c875:	c3                   	ret

000000000000c876 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    c876:	55                   	push   %rbp
    c877:	48 89 e5             	mov    %rsp,%rbp
    c87a:	53                   	push   %rbx
    c87b:	48 83 ec 38          	sub    $0x38,%rsp
    c87f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c883:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c887:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    c88b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c88f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c893:	48 89 d6             	mov    %rdx,%rsi
    c896:	48 89 c7             	mov    %rax,%rdi
    c899:	e8 a7 ff ff ff       	call   c845 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    c89e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    c8a2:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c8a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8aa:	48 89 c7             	mov    %rax,%rdi
    c8ad:	e8 74 00 00 00       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c8b2:	48 89 c2             	mov    %rax,%rdx
    c8b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8b9:	48 89 d6             	mov    %rdx,%rsi
    c8bc:	48 89 c7             	mov    %rax,%rdi
    c8bf:	e8 63 09 00 00       	call   d227 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    c8c4:	48 89 c6             	mov    %rax,%rsi
    c8c7:	48 89 df             	mov    %rbx,%rdi
    c8ca:	e8 b9 09 00 00       	call   d288 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    c8cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c8d3:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    c8d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8da:	48 8b 00             	mov    (%rax),%rax
    c8dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c8e1:	48 c1 e2 03          	shl    $0x3,%rdx
    c8e5:	48 01 c2             	add    %rax,%rdx
    c8e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    c8f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8f4:	48 89 c7             	mov    %rax,%rdi
    c8f7:	e8 2a 00 00 00       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c8fc:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    c8ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c903:	48 8b 10             	mov    (%rax),%rdx
    c906:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    c90a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c90e:	48 89 c7             	mov    %rax,%rdi
    c911:	e8 a5 09 00 00       	call   d2bb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    c916:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c91a:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    c91e:	90                   	nop
    c91f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c923:	c9                   	leave
    c924:	c3                   	ret
    c925:	90                   	nop

000000000000c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c926:	55                   	push   %rbp
    c927:	48 89 e5             	mov    %rsp,%rbp
    c92a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c92e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c932:	5d                   	pop    %rbp
    c933:	c3                   	ret

000000000000c934 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c934:	55                   	push   %rbp
    c935:	48 89 e5             	mov    %rsp,%rbp
    c938:	48 83 ec 20          	sub    $0x20,%rsp
    c93c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c940:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c944:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c948:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c94c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c950:	48 89 d6             	mov    %rdx,%rsi
    c953:	48 89 c7             	mov    %rax,%rdi
    c956:	e8 91 09 00 00       	call   d2ec <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    c95b:	90                   	nop
    c95c:	c9                   	leave
    c95d:	c3                   	ret

000000000000c95e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c95e:	55                   	push   %rbp
    c95f:	48 89 e5             	mov    %rsp,%rbp
    c962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c966:	90                   	nop
    c967:	5d                   	pop    %rbp
    c968:	c3                   	ret
    c969:	90                   	nop

000000000000c96a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c96a:	55                   	push   %rbp
    c96b:	48 89 e5             	mov    %rsp,%rbp
    c96e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c972:	90                   	nop
    c973:	5d                   	pop    %rbp
    c974:	c3                   	ret

000000000000c975 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c975:	55                   	push   %rbp
    c976:	48 89 e5             	mov    %rsp,%rbp
    c979:	53                   	push   %rbx
    c97a:	48 83 ec 28          	sub    $0x28,%rsp
    c97e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c982:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c986:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c98a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c98e:	48 89 d6             	mov    %rdx,%rsi
    c991:	48 89 c7             	mov    %rax,%rdi
    c994:	e8 bb 09 00 00       	call   d354 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    c999:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c99d:	48 89 c7             	mov    %rax,%rdi
    c9a0:	e8 6d 09 00 00       	call   d312 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    c9a5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c9a9:	0f 92 c3             	setb   %bl
    c9ac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c9b0:	48 89 c7             	mov    %rax,%rdi
    c9b3:	e8 3e f6 ff ff       	call   bff6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    c9b8:	84 db                	test   %bl,%bl
    c9ba:	74 0f                	je     c9cb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    c9bc:	48 8d 05 a5 6b 00 00 	lea    0x6ba5(%rip),%rax        # 13568 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    c9c3:	48 89 c7             	mov    %rax,%rdi
    c9c6:	e8 65 67 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c9cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c9cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c9d3:	c9                   	leave
    c9d4:	c3                   	ret
    c9d5:	90                   	nop

000000000000c9d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c9d6:	55                   	push   %rbp
    c9d7:	48 89 e5             	mov    %rsp,%rbp
    c9da:	48 83 ec 10          	sub    $0x10,%rsp
    c9de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e6:	48 89 c7             	mov    %rax,%rdi
    c9e9:	e8 08 f6 ff ff       	call   bff6 <_ZNSaI21VkExtensionPropertiesED1Ev>
    c9ee:	90                   	nop
    c9ef:	c9                   	leave
    c9f0:	c3                   	ret
    c9f1:	90                   	nop

000000000000c9f2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c9f2:	55                   	push   %rbp
    c9f3:	48 89 e5             	mov    %rsp,%rbp
    c9f6:	53                   	push   %rbx
    c9f7:	48 83 ec 28          	sub    $0x28,%rsp
    c9fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ca03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ca07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca0b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ca0f:	48 89 d6             	mov    %rdx,%rsi
    ca12:	48 89 c7             	mov    %rax,%rdi
    ca15:	e8 60 09 00 00       	call   d37a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    ca1a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca22:	48 89 d6             	mov    %rdx,%rsi
    ca25:	48 89 c7             	mov    %rax,%rdi
    ca28:	e8 7f 09 00 00       	call   d3ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    ca2d:	eb 1a                	jmp    ca49 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    ca2f:	48 89 c3             	mov    %rax,%rbx
    ca32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca36:	48 89 c7             	mov    %rax,%rdi
    ca39:	e8 98 ff ff ff       	call   c9d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    ca3e:	48 89 d8             	mov    %rbx,%rax
    ca41:	48 89 c7             	mov    %rax,%rdi
    ca44:	e8 87 6a ff ff       	call   34d0 <_Unwind_Resume@plt>
    ca49:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca4d:	c9                   	leave
    ca4e:	c3                   	ret
    ca4f:	90                   	nop

000000000000ca50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    ca50:	55                   	push   %rbp
    ca51:	48 89 e5             	mov    %rsp,%rbp
    ca54:	48 83 ec 10          	sub    $0x10,%rsp
    ca58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    ca5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca60:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ca64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca68:	48 8b 00             	mov    (%rax),%rax
    ca6b:	48 29 c2             	sub    %rax,%rdx
    ca6e:	48 c1 fa 02          	sar    $0x2,%rdx
    ca72:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    ca79:	fc c0 0f 
    ca7c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    ca80:	48 89 c2             	mov    %rax,%rdx
    ca83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca87:	48 8b 08             	mov    (%rax),%rcx
    ca8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca8e:	48 89 ce             	mov    %rcx,%rsi
    ca91:	48 89 c7             	mov    %rax,%rdi
    ca94:	e8 75 09 00 00       	call   d40e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    ca99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca9d:	48 89 c7             	mov    %rax,%rdi
    caa0:	e8 31 ff ff ff       	call   c9d6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    caa5:	90                   	nop
    caa6:	c9                   	leave
    caa7:	c3                   	ret

000000000000caa8 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    caa8:	55                   	push   %rbp
    caa9:	48 89 e5             	mov    %rsp,%rbp
    caac:	48 83 ec 10          	sub    $0x10,%rsp
    cab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cab4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    cab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cabc:	48 89 c7             	mov    %rax,%rdi
    cabf:	e8 24 00 00 00       	call   cae8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    cac4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    cac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cacb:	48 8b 00             	mov    (%rax),%rax
    cace:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cad2:	48 89 ce             	mov    %rcx,%rsi
    cad5:	48 89 c7             	mov    %rax,%rdi
    cad8:	e8 66 09 00 00       	call   d443 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    cadd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cae1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    cae5:	90                   	nop
    cae6:	c9                   	leave
    cae7:	c3                   	ret

000000000000cae8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    cae8:	55                   	push   %rbp
    cae9:	48 89 e5             	mov    %rsp,%rbp
    caec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    caf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caf4:	5d                   	pop    %rbp
    caf5:	c3                   	ret

000000000000caf6 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    caf6:	55                   	push   %rbp
    caf7:	48 89 e5             	mov    %rsp,%rbp
    cafa:	48 83 ec 20          	sub    $0x20,%rsp
    cafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb06:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    cb0a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb12:	48 89 d6             	mov    %rdx,%rsi
    cb15:	48 89 c7             	mov    %rax,%rdi
    cb18:	e8 4f 09 00 00       	call   d46c <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    cb1d:	90                   	nop
    cb1e:	c9                   	leave
    cb1f:	c3                   	ret

000000000000cb20 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    cb20:	55                   	push   %rbp
    cb21:	48 89 e5             	mov    %rsp,%rbp
    cb24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    cb2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb30:	5d                   	pop    %rbp
    cb31:	c3                   	ret

000000000000cb32 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    cb32:	55                   	push   %rbp
    cb33:	48 89 e5             	mov    %rsp,%rbp
    cb36:	48 83 ec 10          	sub    $0x10,%rsp
    cb3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb42:	48 89 c7             	mov    %rax,%rdi
    cb45:	e8 48 09 00 00       	call   d492 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    cb4a:	90                   	nop
    cb4b:	c9                   	leave
    cb4c:	c3                   	ret
    cb4d:	90                   	nop

000000000000cb4e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    cb4e:	55                   	push   %rbp
    cb4f:	48 89 e5             	mov    %rsp,%rbp
    cb52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    cb56:	90                   	nop
    cb57:	5d                   	pop    %rbp
    cb58:	c3                   	ret
    cb59:	90                   	nop

000000000000cb5a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    cb5a:	55                   	push   %rbp
    cb5b:	48 89 e5             	mov    %rsp,%rbp
    cb5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb62:	90                   	nop
    cb63:	5d                   	pop    %rbp
    cb64:	c3                   	ret
    cb65:	90                   	nop

000000000000cb66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    cb66:	55                   	push   %rbp
    cb67:	48 89 e5             	mov    %rsp,%rbp
    cb6a:	48 83 ec 20          	sub    $0x20,%rsp
    cb6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    cb76:	eb 49                	jmp    cbc1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	  _M_erase(_S_right(__x));
    cb78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb7c:	48 89 c7             	mov    %rax,%rdi
    cb7f:	e8 19 09 00 00       	call   d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    cb84:	48 89 c2             	mov    %rax,%rdx
    cb87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb8b:	48 89 d6             	mov    %rdx,%rsi
    cb8e:	48 89 c7             	mov    %rax,%rdi
    cb91:	e8 d0 ff ff ff       	call   cb66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    cb96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb9a:	48 89 c7             	mov    %rax,%rdi
    cb9d:	e8 0d 09 00 00       	call   d4af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    cba2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    cba6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cbaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbae:	48 89 d6             	mov    %rdx,%rsi
    cbb1:	48 89 c7             	mov    %rax,%rdi
    cbb4:	e8 09 09 00 00       	call   d4c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    cbb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbbd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    cbc1:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    cbc6:	75 b0                	jne    cb78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
    }
    cbc8:	90                   	nop
    cbc9:	90                   	nop
    cbca:	c9                   	leave
    cbcb:	c3                   	ret

000000000000cbcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    cbcc:	55                   	push   %rbp
    cbcd:	48 89 e5             	mov    %rsp,%rbp
    cbd0:	48 83 ec 10          	sub    $0x10,%rsp
    cbd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    cbd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbdc:	48 89 c7             	mov    %rax,%rdi
    cbdf:	e8 18 09 00 00       	call   d4fc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    cbe4:	c9                   	leave
    cbe5:	c3                   	ret

000000000000cbe6 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cbe6:	55                   	push   %rbp
    cbe7:	48 89 e5             	mov    %rsp,%rbp
    cbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cbf2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbf6:	48 8b 10             	mov    (%rax),%rdx
    cbf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbfd:	48 89 10             	mov    %rdx,(%rax)
    cc00:	90                   	nop
    cc01:	5d                   	pop    %rbp
    cc02:	c3                   	ret
    cc03:	90                   	nop

000000000000cc04 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cc04:	55                   	push   %rbp
    cc05:	48 89 e5             	mov    %rsp,%rbp
    cc08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cc0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc10:	5d                   	pop    %rbp
    cc11:	c3                   	ret

000000000000cc12 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
      lower_bound(const key_type& __x)
    cc12:	55                   	push   %rbp
    cc13:	48 89 e5             	mov    %rsp,%rbp
    cc16:	48 83 ec 10          	sub    $0x10,%rsp
    cc1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    cc22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cc2a:	48 89 d6             	mov    %rdx,%rsi
    cc2d:	48 89 c7             	mov    %rax,%rdi
    cc30:	e8 d9 08 00 00       	call   d50e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    cc35:	c9                   	leave
    cc36:	c3                   	ret
    cc37:	90                   	nop

000000000000cc38 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cc38:	55                   	push   %rbp
    cc39:	48 89 e5             	mov    %rsp,%rbp
    cc3c:	48 83 ec 10          	sub    $0x10,%rsp
    cc40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    cc44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc48:	48 89 c7             	mov    %rax,%rdi
    cc4b:	e8 0a 09 00 00       	call   d55a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    cc50:	c9                   	leave
    cc51:	c3                   	ret

000000000000cc52 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    cc52:	55                   	push   %rbp
    cc53:	48 89 e5             	mov    %rsp,%rbp
    cc56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cc5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    cc5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc62:	48 8b 10             	mov    (%rax),%rdx
    cc65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cc69:	48 8b 00             	mov    (%rax),%rax
    cc6c:	48 39 c2             	cmp    %rax,%rdx
    cc6f:	0f 94 c0             	sete   %al
    cc72:	5d                   	pop    %rbp
    cc73:	c3                   	ret

000000000000cc74 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    cc74:	55                   	push   %rbp
    cc75:	48 89 e5             	mov    %rsp,%rbp
    cc78:	48 83 ec 10          	sub    $0x10,%rsp
    cc7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    cc80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc84:	48 89 c7             	mov    %rax,%rdi
    cc87:	e8 f8 08 00 00       	call   d584 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    cc8c:	90                   	nop
    cc8d:	c9                   	leave
    cc8e:	c3                   	ret
    cc8f:	90                   	nop

000000000000cc90 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cc90:	55                   	push   %rbp
    cc91:	48 89 e5             	mov    %rsp,%rbp
    cc94:	48 83 ec 10          	sub    $0x10,%rsp
    cc98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    cc9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cca0:	48 8b 00             	mov    (%rax),%rax
    cca3:	48 89 c7             	mov    %rax,%rdi
    cca6:	e8 e5 08 00 00       	call   d590 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    ccab:	c9                   	leave
    ccac:	c3                   	ret
    ccad:	90                   	nop

000000000000ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
      operator()(const _Tp& __x, const _Tp& __y) const
    ccae:	55                   	push   %rbp
    ccaf:	48 89 e5             	mov    %rsp,%rbp
    ccb2:	48 83 ec 20          	sub    $0x20,%rsp
    ccb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ccbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    ccc2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ccc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ccca:	48 89 d6             	mov    %rdx,%rsi
    cccd:	48 89 c7             	mov    %rax,%rdi
    ccd0:	e8 d9 08 00 00       	call   d5ae <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    ccd5:	c9                   	leave
    ccd6:	c3                   	ret

000000000000ccd7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    ccd7:	55                   	push   %rbp
    ccd8:	48 89 e5             	mov    %rsp,%rbp
    ccdb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ccdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cce3:	5d                   	pop    %rbp
    cce4:	c3                   	ret

000000000000cce5 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
    forward_as_tuple(_Elements&&... __args) noexcept
    cce5:	55                   	push   %rbp
    cce6:	48 89 e5             	mov    %rsp,%rbp
    cce9:	48 83 ec 10          	sub    $0x10,%rsp
    cced:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ccf1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    ccf5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ccf9:	48 89 c7             	mov    %rax,%rdi
    ccfc:	e8 d5 08 00 00       	call   d5d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    cd01:	48 89 c2             	mov    %rax,%rdx
    cd04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd08:	48 89 d6             	mov    %rdx,%rsi
    cd0b:	48 89 c7             	mov    %rax,%rdi
    cd0e:	e8 d1 08 00 00       	call   d5e4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    cd13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd17:	c9                   	leave
    cd18:	c3                   	ret
    cd19:	90                   	nop

000000000000cd1a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    cd1a:	55                   	push   %rbp
    cd1b:	48 89 e5             	mov    %rsp,%rbp
    cd1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    cd26:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cd2a:	48 8b 10             	mov    (%rax),%rdx
    cd2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd31:	48 89 10             	mov    %rdx,(%rax)
    cd34:	90                   	nop
    cd35:	5d                   	pop    %rbp
    cd36:	c3                   	ret
    cd37:	90                   	nop

000000000000cd38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    cd38:	55                   	push   %rbp
    cd39:	48 89 e5             	mov    %rsp,%rbp
    cd3c:	41 54                	push   %r12
    cd3e:	53                   	push   %rbx
    cd3f:	48 83 ec 60          	sub    $0x60,%rsp
    cd43:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    cd47:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    cd4b:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    cd4f:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    cd53:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    cd57:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    cd5b:	48 89 c7             	mov    %rax,%rdi
    cd5e:	e8 98 af ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    cd63:	49 89 c4             	mov    %rax,%r12
    cd66:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    cd6a:	48 89 c7             	mov    %rax,%rdi
    cd6d:	e8 a5 08 00 00       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    cd72:	48 89 c3             	mov    %rax,%rbx
    cd75:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cd79:	48 89 c7             	mov    %rax,%rdi
    cd7c:	e8 5e af ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    cd81:	48 89 c2             	mov    %rax,%rdx
    cd84:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    cd88:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cd8c:	4d 89 e0             	mov    %r12,%r8
    cd8f:	48 89 d9             	mov    %rbx,%rcx
    cd92:	48 89 c7             	mov    %rax,%rdi
    cd95:	e8 8c 08 00 00       	call   d626 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    cd9a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cd9e:	48 89 c7             	mov    %rax,%rdi
    cda1:	e8 80 0d 00 00       	call   db26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    cda6:	48 89 c2             	mov    %rax,%rdx
    cda9:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    cdad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cdb1:	48 89 ce             	mov    %rcx,%rsi
    cdb4:	48 89 c7             	mov    %rax,%rdi
    cdb7:	e8 1c 09 00 00       	call   d6d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    cdbc:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    cdc0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    cdc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cdc8:	48 85 c0             	test   %rax,%rax
    cdcb:	74 1c                	je     cde9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    cdcd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    cdd1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cdd5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cdd9:	48 89 ce             	mov    %rcx,%rsi
    cddc:	48 89 c7             	mov    %rax,%rdi
    cddf:	e8 60 0d 00 00       	call   db44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    cde4:	48 89 c3             	mov    %rax,%rbx
    cde7:	eb 17                	jmp    ce00 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    cde9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    cded:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    cdf1:	48 89 d6             	mov    %rdx,%rsi
    cdf4:	48 89 c7             	mov    %rax,%rdi
    cdf7:	e8 9e 0d 00 00       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    cdfc:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    ce00:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ce04:	48 89 c7             	mov    %rax,%rdi
    ce07:	e8 96 08 00 00       	call   d6a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    ce0c:	48 89 d8             	mov    %rbx,%rax
    ce0f:	eb 1a                	jmp    ce2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    ce11:	48 89 c3             	mov    %rax,%rbx
    ce14:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ce18:	48 89 c7             	mov    %rax,%rdi
    ce1b:	e8 82 08 00 00       	call   d6a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    ce20:	48 89 d8             	mov    %rbx,%rax
    ce23:	48 89 c7             	mov    %rax,%rdi
    ce26:	e8 a5 66 ff ff       	call   34d0 <_Unwind_Resume@plt>
    ce2b:	48 83 c4 60          	add    $0x60,%rsp
    ce2f:	5b                   	pop    %rbx
    ce30:	41 5c                	pop    %r12
    ce32:	5d                   	pop    %rbp
    ce33:	c3                   	ret

000000000000ce34 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ce34:	55                   	push   %rbp
    ce35:	48 89 e5             	mov    %rsp,%rbp
    ce38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ce40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce44:	48 8b 10             	mov    (%rax),%rdx
    ce47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce4b:	48 89 10             	mov    %rdx,(%rax)
    ce4e:	90                   	nop
    ce4f:	5d                   	pop    %rbp
    ce50:	c3                   	ret
    ce51:	90                   	nop

000000000000ce52 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ce52:	55                   	push   %rbp
    ce53:	48 89 e5             	mov    %rsp,%rbp
    ce56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ce5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5e:	5d                   	pop    %rbp
    ce5f:	c3                   	ret

000000000000ce60 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ce60:	55                   	push   %rbp
    ce61:	48 89 e5             	mov    %rsp,%rbp
    ce64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce68:	90                   	nop
    ce69:	5d                   	pop    %rbp
    ce6a:	c3                   	ret
    ce6b:	90                   	nop

000000000000ce6c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ce6c:	55                   	push   %rbp
    ce6d:	48 89 e5             	mov    %rsp,%rbp
    ce70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce74:	90                   	nop
    ce75:	5d                   	pop    %rbp
    ce76:	c3                   	ret

000000000000ce77 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ce77:	55                   	push   %rbp
    ce78:	48 89 e5             	mov    %rsp,%rbp
    ce7b:	53                   	push   %rbx
    ce7c:	48 83 ec 28          	sub    $0x28,%rsp
    ce80:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ce84:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ce88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ce8c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ce90:	48 89 d6             	mov    %rdx,%rsi
    ce93:	48 89 c7             	mov    %rax,%rdi
    ce96:	e8 ed 00 00 00       	call   cf88 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    ce9b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ce9f:	48 89 c7             	mov    %rax,%rdi
    cea2:	e8 0d 0d 00 00       	call   dbb4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    cea7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ceab:	0f 92 c3             	setb   %bl
    ceae:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ceb2:	48 89 c7             	mov    %rax,%rdi
    ceb5:	e8 60 f5 ff ff       	call   c41a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    ceba:	84 db                	test   %bl,%bl
    cebc:	74 0f                	je     cecd <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    cebe:	48 8d 05 a3 66 00 00 	lea    0x66a3(%rip),%rax        # 13568 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    cec5:	48 89 c7             	mov    %rax,%rdi
    cec8:	e8 63 62 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    cecd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ced1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ced5:	c9                   	leave
    ced6:	c3                   	ret
    ced7:	90                   	nop

000000000000ced8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ced8:	55                   	push   %rbp
    ced9:	48 89 e5             	mov    %rsp,%rbp
    cedc:	53                   	push   %rbx
    cedd:	48 83 ec 28          	sub    $0x28,%rsp
    cee1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cee5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cee9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ceed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cef1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cef5:	48 89 d6             	mov    %rdx,%rsi
    cef8:	48 89 c7             	mov    %rax,%rdi
    cefb:	e8 f6 0c 00 00       	call   dbf6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    cf00:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cf04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf08:	48 89 d6             	mov    %rdx,%rsi
    cf0b:	48 89 c7             	mov    %rax,%rdi
    cf0e:	e8 15 0d 00 00       	call   dc28 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    cf13:	eb 1a                	jmp    cf2f <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    cf15:	48 89 c3             	mov    %rax,%rbx
    cf18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf1c:	48 89 c7             	mov    %rax,%rdi
    cf1f:	e8 3c ed ff ff       	call   bc60 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    cf24:	48 89 d8             	mov    %rbx,%rax
    cf27:	48 89 c7             	mov    %rax,%rdi
    cf2a:	e8 a1 65 ff ff       	call   34d0 <_Unwind_Resume@plt>
    cf2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cf33:	c9                   	leave
    cf34:	c3                   	ret
    cf35:	90                   	nop

000000000000cf36 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    cf36:	55                   	push   %rbp
    cf37:	48 89 e5             	mov    %rsp,%rbp
    cf3a:	48 83 ec 10          	sub    $0x10,%rsp
    cf3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    cf46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf4a:	48 89 c7             	mov    %rax,%rdi
    cf4d:	e8 cc f5 ff ff       	call   c51e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    cf52:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    cf55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf59:	48 8b 00             	mov    (%rax),%rax
    cf5c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cf60:	48 89 ce             	mov    %rcx,%rsi
    cf63:	48 89 c7             	mov    %rax,%rdi
    cf66:	e8 13 0d 00 00       	call   dc7e <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    cf6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf6f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    cf73:	90                   	nop
    cf74:	c9                   	leave
    cf75:	c3                   	ret

000000000000cf76 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    cf76:	55                   	push   %rbp
    cf77:	48 89 e5             	mov    %rsp,%rbp
    cf7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    cf82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cf86:	5d                   	pop    %rbp
    cf87:	c3                   	ret

000000000000cf88 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    cf88:	55                   	push   %rbp
    cf89:	48 89 e5             	mov    %rsp,%rbp
    cf8c:	48 83 ec 10          	sub    $0x10,%rsp
    cf90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    cf98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa0:	48 89 d6             	mov    %rdx,%rsi
    cfa3:	48 89 c7             	mov    %rax,%rdi
    cfa6:	e8 fd 0c 00 00       	call   dca8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    cfab:	90                   	nop
    cfac:	c9                   	leave
    cfad:	c3                   	ret

000000000000cfae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    cfae:	55                   	push   %rbp
    cfaf:	48 89 e5             	mov    %rsp,%rbp
    cfb2:	48 83 ec 20          	sub    $0x20,%rsp
    cfb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cfbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    cfc2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    cfc7:	74 17                	je     cfe0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    cfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfcd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cfd1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    cfd5:	48 89 ce             	mov    %rcx,%rsi
    cfd8:	48 89 c7             	mov    %rax,%rdi
    cfdb:	e8 d7 0c 00 00       	call   dcb7 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    cfe0:	90                   	nop
    cfe1:	c9                   	leave
    cfe2:	c3                   	ret

000000000000cfe3 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cfe3:	55                   	push   %rbp
    cfe4:	48 89 e5             	mov    %rsp,%rbp
    cfe7:	48 83 ec 10          	sub    $0x10,%rsp
    cfeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cff3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cff7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cffb:	48 89 d6             	mov    %rdx,%rsi
    cffe:	48 89 c7             	mov    %rax,%rdi
    d001:	e8 df 0c 00 00       	call   dce5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    d006:	90                   	nop
    d007:	c9                   	leave
    d008:	c3                   	ret

000000000000d009 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d009:	55                   	push   %rbp
    d00a:	48 89 e5             	mov    %rsp,%rbp
    d00d:	48 83 ec 20          	sub    $0x20,%rsp
    d011:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d015:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    d01c:	55 55 05 
    d01f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d027:	48 89 c7             	mov    %rax,%rdi
    d02a:	e8 c5 0c 00 00       	call   dcf4 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    d02f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d033:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d037:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d03b:	48 89 d6             	mov    %rdx,%rsi
    d03e:	48 89 c7             	mov    %rax,%rdi
    d041:	e8 f6 6c ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    d046:	48 8b 00             	mov    (%rax),%rax
      }
    d049:	c9                   	leave
    d04a:	c3                   	ret
    d04b:	90                   	nop

000000000000d04c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d04c:	55                   	push   %rbp
    d04d:	48 89 e5             	mov    %rsp,%rbp
    d050:	48 83 ec 10          	sub    $0x10,%rsp
    d054:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d058:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d05c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d064:	48 89 d6             	mov    %rdx,%rsi
    d067:	48 89 c7             	mov    %rax,%rdi
    d06a:	e8 9f 0c 00 00       	call   dd0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    d06f:	90                   	nop
    d070:	c9                   	leave
    d071:	c3                   	ret

000000000000d072 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d072:	55                   	push   %rbp
    d073:	48 89 e5             	mov    %rsp,%rbp
    d076:	48 83 ec 10          	sub    $0x10,%rsp
    d07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d082:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d08a:	48 89 d6             	mov    %rdx,%rsi
    d08d:	48 89 c7             	mov    %rax,%rdi
    d090:	e8 b7 ff ff ff       	call   d04c <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    d095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d099:	48 89 c7             	mov    %rax,%rdi
    d09c:	e8 7d 0c 00 00       	call   dd1e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d0a1:	90                   	nop
    d0a2:	c9                   	leave
    d0a3:	c3                   	ret

000000000000d0a4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d0a4:	55                   	push   %rbp
    d0a5:	48 89 e5             	mov    %rsp,%rbp
    d0a8:	48 83 ec 10          	sub    $0x10,%rsp
    d0ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d0b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0bc:	48 89 d6             	mov    %rdx,%rsi
    d0bf:	48 89 c7             	mov    %rax,%rdi
    d0c2:	e8 85 0c 00 00       	call   dd4c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    d0c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d0cb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d0ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0d2:	48 8b 10             	mov    (%rax),%rdx
    d0d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0d9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d0dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e1:	48 8b 08             	mov    (%rax),%rcx
    d0e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d0e8:	48 89 d0             	mov    %rdx,%rax
    d0eb:	48 01 c0             	add    %rax,%rax
    d0ee:	48 01 d0             	add    %rdx,%rax
    d0f1:	48 c1 e0 03          	shl    $0x3,%rax
    d0f5:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    d0f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0fd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d101:	90                   	nop
    d102:	c9                   	leave
    d103:	c3                   	ret

000000000000d104 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    d104:	55                   	push   %rbp
    d105:	48 89 e5             	mov    %rsp,%rbp
    d108:	48 83 ec 20          	sub    $0x20,%rsp
    d10c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d110:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d114:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d118:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d11d:	74 17                	je     d136 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d11f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d123:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d127:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d12b:	48 89 ce             	mov    %rcx,%rsi
    d12e:	48 89 c7             	mov    %rax,%rdi
    d131:	e8 49 0c 00 00       	call   dd7f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    d136:	90                   	nop
    d137:	c9                   	leave
    d138:	c3                   	ret

000000000000d139 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d139:	55                   	push   %rbp
    d13a:	48 89 e5             	mov    %rsp,%rbp
    d13d:	48 83 ec 20          	sub    $0x20,%rsp
    d141:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d145:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d149:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d14d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d155:	48 89 d6             	mov    %rdx,%rsi
    d158:	48 89 c7             	mov    %rax,%rdi
    d15b:	e8 4d 0c 00 00       	call   ddad <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    d160:	c9                   	leave
    d161:	c3                   	ret

000000000000d162 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d162:	55                   	push   %rbp
    d163:	48 89 e5             	mov    %rsp,%rbp
    d166:	48 83 ec 10          	sub    $0x10,%rsp
    d16a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d16e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d172:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d17a:	48 89 d6             	mov    %rdx,%rsi
    d17d:	48 89 c7             	mov    %rax,%rdi
    d180:	e8 51 0c 00 00       	call   ddd6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    d185:	90                   	nop
    d186:	c9                   	leave
    d187:	c3                   	ret

000000000000d188 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d188:	55                   	push   %rbp
    d189:	48 89 e5             	mov    %rsp,%rbp
    d18c:	48 83 ec 10          	sub    $0x10,%rsp
    d190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d198:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d19c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1a0:	48 89 d6             	mov    %rdx,%rsi
    d1a3:	48 89 c7             	mov    %rax,%rdi
    d1a6:	e8 3b 0c 00 00       	call   dde6 <_ZNSaIPKcEC1ERKS1_>
    d1ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1af:	48 89 c7             	mov    %rax,%rdi
    d1b2:	e8 55 0c 00 00       	call   de0c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    d1b7:	90                   	nop
    d1b8:	c9                   	leave
    d1b9:	c3                   	ret

000000000000d1ba <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    d1ba:	55                   	push   %rbp
    d1bb:	48 89 e5             	mov    %rsp,%rbp
    d1be:	48 83 ec 20          	sub    $0x20,%rsp
    d1c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d1ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d1ce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d1d3:	74 17                	je     d1ec <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d1d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d1dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d1e1:	48 89 ce             	mov    %rcx,%rsi
    d1e4:	48 89 c7             	mov    %rax,%rdi
    d1e7:	e8 4e 0c 00 00       	call   de3a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    d1ec:	90                   	nop
    d1ed:	c9                   	leave
    d1ee:	c3                   	ret
    d1ef:	90                   	nop

000000000000d1f0 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    d1f0:	55                   	push   %rbp
    d1f1:	48 89 e5             	mov    %rsp,%rbp
    d1f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    d200:	5d                   	pop    %rbp
    d201:	c3                   	ret

000000000000d202 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    d202:	55                   	push   %rbp
    d203:	48 89 e5             	mov    %rsp,%rbp
    d206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    d20a:	90                   	nop
    d20b:	5d                   	pop    %rbp
    d20c:	c3                   	ret

000000000000d20d <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    d20d:	55                   	push   %rbp
    d20e:	48 89 e5             	mov    %rsp,%rbp
    d211:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d215:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    d219:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d21d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    d221:	48 c1 f8 03          	sar    $0x3,%rax
    }
    d225:	5d                   	pop    %rbp
    d226:	c3                   	ret

000000000000d227 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    d227:	55                   	push   %rbp
    d228:	48 89 e5             	mov    %rsp,%rbp
    d22b:	53                   	push   %rbx
    d22c:	48 83 ec 28          	sub    $0x28,%rsp
    d230:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d234:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    d238:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d23c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d240:	48 89 d6             	mov    %rdx,%rsi
    d243:	48 89 c7             	mov    %rax,%rdi
    d246:	e8 9b 0b 00 00       	call   dde6 <_ZNSaIPKcEC1ERKS1_>
    d24b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d24f:	48 89 c7             	mov    %rax,%rdi
    d252:	e8 11 0c 00 00       	call   de68 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    d257:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    d25b:	0f 92 c3             	setb   %bl
    d25e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d262:	48 89 c7             	mov    %rax,%rdi
    d265:	e8 88 ec ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
    d26a:	84 db                	test   %bl,%bl
    d26c:	74 0f                	je     d27d <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    d26e:	48 8d 05 f3 62 00 00 	lea    0x62f3(%rip),%rax        # 13568 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    d275:	48 89 c7             	mov    %rax,%rdi
    d278:	e8 b3 5e ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    d27d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    d281:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d285:	c9                   	leave
    d286:	c3                   	ret
    d287:	90                   	nop

000000000000d288 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    d288:	55                   	push   %rbp
    d289:	48 89 e5             	mov    %rsp,%rbp
    d28c:	48 83 ec 10          	sub    $0x10,%rsp
    d290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    d298:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d29d:	74 15                	je     d2b4 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    d29f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2a7:	48 89 d6             	mov    %rdx,%rsi
    d2aa:	48 89 c7             	mov    %rax,%rdi
    d2ad:	e8 f8 0b 00 00       	call   deaa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    d2b2:	eb 05                	jmp    d2b9 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    d2b4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    d2b9:	c9                   	leave
    d2ba:	c3                   	ret

000000000000d2bb <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    d2bb:	55                   	push   %rbp
    d2bc:	48 89 e5             	mov    %rsp,%rbp
    d2bf:	48 83 ec 20          	sub    $0x20,%rsp
    d2c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d2cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d2cf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    d2d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d2d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d2db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2df:	48 89 ce             	mov    %rcx,%rsi
    d2e2:	48 89 c7             	mov    %rax,%rdi
    d2e5:	e8 ea 0b 00 00       	call   ded4 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    d2ea:	c9                   	leave
    d2eb:	c3                   	ret

000000000000d2ec <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d2ec:	55                   	push   %rbp
    d2ed:	48 89 e5             	mov    %rsp,%rbp
    d2f0:	48 83 ec 10          	sub    $0x10,%rsp
    d2f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d2fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d304:	48 89 d6             	mov    %rdx,%rsi
    d307:	48 89 c7             	mov    %rax,%rdi
    d30a:	e8 fa 0b 00 00       	call   df09 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    d30f:	90                   	nop
    d310:	c9                   	leave
    d311:	c3                   	ret

000000000000d312 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d312:	55                   	push   %rbp
    d313:	48 89 e5             	mov    %rsp,%rbp
    d316:	48 83 ec 20          	sub    $0x20,%rsp
    d31a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d31e:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    d325:	07 7e 00 
    d328:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d32c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d330:	48 89 c7             	mov    %rax,%rdi
    d333:	e8 e0 0b 00 00       	call   df18 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    d338:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d33c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d340:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d344:	48 89 d6             	mov    %rdx,%rsi
    d347:	48 89 c7             	mov    %rax,%rdi
    d34a:	e8 ed 69 ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    d34f:	48 8b 00             	mov    (%rax),%rax
      }
    d352:	c9                   	leave
    d353:	c3                   	ret

000000000000d354 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d354:	55                   	push   %rbp
    d355:	48 89 e5             	mov    %rsp,%rbp
    d358:	48 83 ec 10          	sub    $0x10,%rsp
    d35c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d360:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d364:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d368:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d36c:	48 89 d6             	mov    %rdx,%rsi
    d36f:	48 89 c7             	mov    %rax,%rdi
    d372:	e8 bb 0b 00 00       	call   df32 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    d377:	90                   	nop
    d378:	c9                   	leave
    d379:	c3                   	ret

000000000000d37a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d37a:	55                   	push   %rbp
    d37b:	48 89 e5             	mov    %rsp,%rbp
    d37e:	48 83 ec 10          	sub    $0x10,%rsp
    d382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d38a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d38e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d392:	48 89 d6             	mov    %rdx,%rsi
    d395:	48 89 c7             	mov    %rax,%rdi
    d398:	e8 b7 ff ff ff       	call   d354 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    d39d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3a1:	48 89 c7             	mov    %rax,%rdi
    d3a4:	e8 99 0b 00 00       	call   df42 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d3a9:	90                   	nop
    d3aa:	c9                   	leave
    d3ab:	c3                   	ret

000000000000d3ac <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d3ac:	55                   	push   %rbp
    d3ad:	48 89 e5             	mov    %rsp,%rbp
    d3b0:	48 83 ec 10          	sub    $0x10,%rsp
    d3b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d3bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3c4:	48 89 d6             	mov    %rdx,%rsi
    d3c7:	48 89 c7             	mov    %rax,%rdi
    d3ca:	e8 a1 0b 00 00       	call   df70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    d3cf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d3d3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d3d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3da:	48 8b 10             	mov    (%rax),%rdx
    d3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d3e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e9:	48 8b 08             	mov    (%rax),%rcx
    d3ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3f0:	48 89 d0             	mov    %rdx,%rax
    d3f3:	48 c1 e0 06          	shl    $0x6,%rax
    d3f7:	48 01 d0             	add    %rdx,%rax
    d3fa:	48 c1 e0 02          	shl    $0x2,%rax
    d3fe:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    d402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d406:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d40a:	90                   	nop
    d40b:	c9                   	leave
    d40c:	c3                   	ret
    d40d:	90                   	nop

000000000000d40e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    d40e:	55                   	push   %rbp
    d40f:	48 89 e5             	mov    %rsp,%rbp
    d412:	48 83 ec 20          	sub    $0x20,%rsp
    d416:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d41a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d41e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d422:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d427:	74 17                	je     d440 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d429:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d42d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d431:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d435:	48 89 ce             	mov    %rcx,%rsi
    d438:	48 89 c7             	mov    %rax,%rdi
    d43b:	e8 63 0b 00 00       	call   dfa3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    d440:	90                   	nop
    d441:	c9                   	leave
    d442:	c3                   	ret

000000000000d443 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d443:	55                   	push   %rbp
    d444:	48 89 e5             	mov    %rsp,%rbp
    d447:	48 83 ec 20          	sub    $0x20,%rsp
    d44b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d44f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d453:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d457:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d45b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d45f:	48 89 d6             	mov    %rdx,%rsi
    d462:	48 89 c7             	mov    %rax,%rdi
    d465:	e8 67 0b 00 00       	call   dfd1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    d46a:	c9                   	leave
    d46b:	c3                   	ret

000000000000d46c <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d46c:	55                   	push   %rbp
    d46d:	48 89 e5             	mov    %rsp,%rbp
    d470:	48 83 ec 10          	sub    $0x10,%rsp
    d474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d47c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d484:	48 89 d6             	mov    %rdx,%rsi
    d487:	48 89 c7             	mov    %rax,%rdi
    d48a:	e8 6b 0b 00 00       	call   dffa <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    d48f:	90                   	nop
    d490:	c9                   	leave
    d491:	c3                   	ret

000000000000d492 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d492:	55                   	push   %rbp
    d493:	48 89 e5             	mov    %rsp,%rbp
    d496:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d49a:	90                   	nop
    d49b:	5d                   	pop    %rbp
    d49c:	c3                   	ret

000000000000d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d49d:	55                   	push   %rbp
    d49e:	48 89 e5             	mov    %rsp,%rbp
    d4a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    d4a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4a9:	48 8b 40 18          	mov    0x18(%rax),%rax
    d4ad:	5d                   	pop    %rbp
    d4ae:	c3                   	ret

000000000000d4af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d4af:	55                   	push   %rbp
    d4b0:	48 89 e5             	mov    %rsp,%rbp
    d4b3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    d4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4bb:	48 8b 40 10          	mov    0x10(%rax),%rax
    d4bf:	5d                   	pop    %rbp
    d4c0:	c3                   	ret
    d4c1:	90                   	nop

000000000000d4c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d4c2:	55                   	push   %rbp
    d4c3:	48 89 e5             	mov    %rsp,%rbp
    d4c6:	48 83 ec 10          	sub    $0x10,%rsp
    d4ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d4ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    d4d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d4d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4da:	48 89 d6             	mov    %rdx,%rsi
    d4dd:	48 89 c7             	mov    %rax,%rdi
    d4e0:	e8 25 0b 00 00       	call   e00a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    d4e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4ed:	48 89 d6             	mov    %rdx,%rsi
    d4f0:	48 89 c7             	mov    %rax,%rdi
    d4f3:	e8 50 0b 00 00       	call   e048 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    d4f8:	90                   	nop
    d4f9:	c9                   	leave
    d4fa:	c3                   	ret
    d4fb:	90                   	nop

000000000000d4fc <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    d4fc:	55                   	push   %rbp
    d4fd:	48 89 e5             	mov    %rsp,%rbp
    d500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    d504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d508:	48 8b 40 10          	mov    0x10(%rax),%rax
    d50c:	5d                   	pop    %rbp
    d50d:	c3                   	ret

000000000000d50e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    d50e:	55                   	push   %rbp
    d50f:	48 89 e5             	mov    %rsp,%rbp
    d512:	53                   	push   %rbx
    d513:	48 83 ec 18          	sub    $0x18,%rsp
    d517:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d51b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    d51f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d523:	48 89 c7             	mov    %rax,%rdi
    d526:	e8 53 0b 00 00       	call   e07e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d52b:	48 89 c3             	mov    %rax,%rbx
    d52e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d532:	48 89 c7             	mov    %rax,%rdi
    d535:	e8 92 f6 ff ff       	call   cbcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    d53a:	48 89 c6             	mov    %rax,%rsi
    d53d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d541:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d545:	48 89 d1             	mov    %rdx,%rcx
    d548:	48 89 da             	mov    %rbx,%rdx
    d54b:	48 89 c7             	mov    %rax,%rdi
    d54e:	e8 3d 0b 00 00       	call   e090 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    d553:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d557:	c9                   	leave
    d558:	c3                   	ret
    d559:	90                   	nop

000000000000d55a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d55a:	55                   	push   %rbp
    d55b:	48 89 e5             	mov    %rsp,%rbp
    d55e:	48 83 ec 20          	sub    $0x20,%rsp
    d562:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    d566:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d56a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d56e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d572:	48 89 d6             	mov    %rdx,%rsi
    d575:	48 89 c7             	mov    %rax,%rdi
    d578:	e8 1d 06 00 00       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    d57d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d581:	c9                   	leave
    d582:	c3                   	ret
    d583:	90                   	nop

000000000000d584 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    d584:	55                   	push   %rbp
    d585:	48 89 e5             	mov    %rsp,%rbp
    d588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    d58c:	90                   	nop
    d58d:	5d                   	pop    %rbp
    d58e:	c3                   	ret
    d58f:	90                   	nop

000000000000d590 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    d590:	55                   	push   %rbp
    d591:	48 89 e5             	mov    %rsp,%rbp
    d594:	48 83 ec 10          	sub    $0x10,%rsp
    d598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    d59c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a0:	48 83 c0 20          	add    $0x20,%rax
    d5a4:	48 89 c7             	mov    %rax,%rdi
    d5a7:	e8 7a 0b 00 00       	call   e126 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    d5ac:	c9                   	leave
    d5ad:	c3                   	ret

000000000000d5ae <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    d5ae:	55                   	push   %rbp
    d5af:	48 89 e5             	mov    %rsp,%rbp
    d5b2:	48 83 ec 10          	sub    $0x10,%rsp
    d5b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    d5be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d5c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c6:	48 89 d6             	mov    %rdx,%rsi
    d5c9:	48 89 c7             	mov    %rax,%rdi
    d5cc:	e8 5f 5a ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    d5d1:	c1 e8 1f             	shr    $0x1f,%eax
    d5d4:	c9                   	leave
    d5d5:	c3                   	ret

000000000000d5d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d5d6:	55                   	push   %rbp
    d5d7:	48 89 e5             	mov    %rsp,%rbp
    d5da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d5de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e2:	5d                   	pop    %rbp
    d5e3:	c3                   	ret

000000000000d5e4 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    d5e4:	55                   	push   %rbp
    d5e5:	48 89 e5             	mov    %rsp,%rbp
    d5e8:	53                   	push   %rbx
    d5e9:	48 83 ec 18          	sub    $0x18,%rsp
    d5ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d5f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    d5f5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d5f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d5fd:	48 89 c7             	mov    %rax,%rdi
    d600:	e8 d1 ff ff ff       	call   d5d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    d605:	48 89 c6             	mov    %rax,%rsi
    d608:	48 89 df             	mov    %rbx,%rdi
    d60b:	e8 30 0b 00 00       	call   e140 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    d610:	90                   	nop
    d611:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d615:	c9                   	leave
    d616:	c3                   	ret

000000000000d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d617:	55                   	push   %rbp
    d618:	48 89 e5             	mov    %rsp,%rbp
    d61b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d61f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d623:	5d                   	pop    %rbp
    d624:	c3                   	ret
    d625:	90                   	nop

000000000000d626 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    d626:	55                   	push   %rbp
    d627:	48 89 e5             	mov    %rsp,%rbp
    d62a:	41 54                	push   %r12
    d62c:	53                   	push   %rbx
    d62d:	48 83 ec 30          	sub    $0x30,%rsp
    d631:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d635:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d639:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    d63d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d641:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    d645:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d649:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d64d:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    d650:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d654:	48 89 c7             	mov    %rax,%rdi
    d657:	e8 9f a6 ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    d65c:	49 89 c4             	mov    %rax,%r12
    d65f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d663:	48 89 c7             	mov    %rax,%rdi
    d666:	e8 ac ff ff ff       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    d66b:	48 89 c3             	mov    %rax,%rbx
    d66e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d672:	48 89 c7             	mov    %rax,%rdi
    d675:	e8 65 a6 ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    d67a:	48 89 c6             	mov    %rax,%rsi
    d67d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d681:	4c 89 e1             	mov    %r12,%rcx
    d684:	48 89 da             	mov    %rbx,%rdx
    d687:	48 89 c7             	mov    %rax,%rdi
    d68a:	e8 e5 0a 00 00       	call   e174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    d68f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d693:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    d697:	90                   	nop
    d698:	48 83 c4 30          	add    $0x30,%rsp
    d69c:	5b                   	pop    %rbx
    d69d:	41 5c                	pop    %r12
    d69f:	5d                   	pop    %rbp
    d6a0:	c3                   	ret
    d6a1:	90                   	nop

000000000000d6a2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    d6a2:	55                   	push   %rbp
    d6a3:	48 89 e5             	mov    %rsp,%rbp
    d6a6:	48 83 ec 10          	sub    $0x10,%rsp
    d6aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    d6ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6b2:	48 8b 40 08          	mov    0x8(%rax),%rax
    d6b6:	48 85 c0             	test   %rax,%rax
    d6b9:	74 1a                	je     d6d5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    d6bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d6bf:	48 8b 00             	mov    (%rax),%rax
    d6c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d6c6:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    d6ca:	48 89 d6             	mov    %rdx,%rsi
    d6cd:	48 89 c7             	mov    %rax,%rdi
    d6d0:	e8 ed fd ff ff       	call   d4c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    d6d5:	90                   	nop
    d6d6:	c9                   	leave
    d6d7:	c3                   	ret

000000000000d6d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d6d8:	55                   	push   %rbp
    d6d9:	48 89 e5             	mov    %rsp,%rbp
    d6dc:	53                   	push   %rbx
    d6dd:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    d6e4:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    d6eb:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    d6f2:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    d6f9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d700:	48 89 c7             	mov    %rax,%rdi
    d703:	e8 e8 0a 00 00       	call   e1f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    d708:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    d70f:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d716:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d71d:	48 89 c7             	mov    %rax,%rdi
    d720:	e8 59 09 00 00       	call   e07e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    d725:	48 39 c3             	cmp    %rax,%rbx
    d728:	0f 94 c0             	sete   %al
    d72b:	84 c0                	test   %al,%al
    d72d:	0f 84 c8 00 00 00    	je     d7fb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    d733:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d73a:	48 89 c7             	mov    %rax,%rdi
    d73d:	e8 d6 0a 00 00       	call   e218 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    d742:	48 85 c0             	test   %rax,%rax
    d745:	74 44                	je     d78b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d747:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d74e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d755:	48 89 c7             	mov    %rax,%rdi
    d758:	e8 cd 0a 00 00       	call   e22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d75d:	48 8b 00             	mov    (%rax),%rax
    d760:	48 89 c7             	mov    %rax,%rdi
    d763:	e8 d4 0a 00 00       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d768:	48 89 c1             	mov    %rax,%rcx
    d76b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d772:	48 89 c2             	mov    %rax,%rdx
    d775:	48 89 ce             	mov    %rcx,%rsi
    d778:	48 89 df             	mov    %rbx,%rdi
    d77b:	e8 2e f5 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d780:	84 c0                	test   %al,%al
    d782:	74 07                	je     d78b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    d784:	b8 01 00 00 00       	mov    $0x1,%eax
    d789:	eb 05                	jmp    d790 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    d78b:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    d790:	84 c0                	test   %al,%al
    d792:	74 49                	je     d7dd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    d794:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d79b:	48 89 c7             	mov    %rax,%rdi
    d79e:	e8 87 0a 00 00       	call   e22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d7a3:	48 89 c2             	mov    %rax,%rdx
    d7a6:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    d7ad:	00 00 00 00 
    d7b1:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    d7b8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d7bf:	48 89 ce             	mov    %rcx,%rsi
    d7c2:	48 89 c7             	mov    %rax,%rdi
    d7c5:	e8 8a b7 ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d7ca:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    d7d1:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    d7d8:	e9 43 03 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d7dd:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d7e4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d7eb:	48 89 d6             	mov    %rdx,%rsi
    d7ee:	48 89 c7             	mov    %rax,%rdi
    d7f1:	e8 60 0a 00 00       	call   e256 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d7f6:	e9 25 03 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    d7fb:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d802:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d809:	48 89 c7             	mov    %rax,%rdi
    d80c:	e8 2b 0a 00 00       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d811:	48 89 c2             	mov    %rax,%rdx
    d814:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d81b:	48 89 c6             	mov    %rax,%rsi
    d81e:	48 89 df             	mov    %rbx,%rdi
    d821:	e8 88 f4 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d826:	84 c0                	test   %al,%al
    d828:	0f 84 66 01 00 00    	je     d994 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    d82e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d835:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    d83c:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d843:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d84a:	48 89 c7             	mov    %rax,%rdi
    d84d:	e8 7a 0b 00 00       	call   e3cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d852:	48 8b 00             	mov    (%rax),%rax
    d855:	48 39 c3             	cmp    %rax,%rbx
    d858:	0f 94 c0             	sete   %al
    d85b:	84 c0                	test   %al,%al
    d85d:	74 4c                	je     d8ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    d85f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d866:	48 89 c7             	mov    %rax,%rdi
    d869:	e8 5e 0b 00 00       	call   e3cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d86e:	48 89 c3             	mov    %rax,%rbx
    d871:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d878:	48 89 c7             	mov    %rax,%rdi
    d87b:	e8 4c 0b 00 00       	call   e3cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    d880:	48 89 c1             	mov    %rax,%rcx
    d883:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d88a:	48 89 da             	mov    %rbx,%rdx
    d88d:	48 89 ce             	mov    %rcx,%rsi
    d890:	48 89 c7             	mov    %rax,%rdi
    d893:	e8 74 b8 ff ff       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d898:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    d89f:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d8a6:	e9 75 02 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    d8ab:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d8b2:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    d8b9:	48 89 c7             	mov    %rax,%rdi
    d8bc:	e8 1d 0b 00 00       	call   e3de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    d8c1:	48 8b 00             	mov    (%rax),%rax
    d8c4:	48 89 c7             	mov    %rax,%rdi
    d8c7:	e8 70 09 00 00       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d8cc:	48 89 c1             	mov    %rax,%rcx
    d8cf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d8d6:	48 89 c2             	mov    %rax,%rdx
    d8d9:	48 89 ce             	mov    %rcx,%rsi
    d8dc:	48 89 df             	mov    %rbx,%rdi
    d8df:	e8 ca f3 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d8e4:	84 c0                	test   %al,%al
    d8e6:	0f 84 8a 00 00 00    	je     d976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    d8ec:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8f3:	48 89 c7             	mov    %rax,%rdi
    d8f6:	e8 a2 fb ff ff       	call   d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    d8fb:	48 85 c0             	test   %rax,%rax
    d8fe:	0f 94 c0             	sete   %al
    d901:	84 c0                	test   %al,%al
    d903:	74 3e                	je     d943 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    d905:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d90c:	00 00 00 00 
    d910:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d917:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    d91e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    d925:	48 89 ce             	mov    %rcx,%rsi
    d928:	48 89 c7             	mov    %rax,%rdi
    d92b:	e8 24 b6 ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    d930:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d937:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    d93e:	e9 dd 01 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    d943:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    d94a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    d951:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d958:	48 89 ce             	mov    %rcx,%rsi
    d95b:	48 89 c7             	mov    %rax,%rdi
    d95e:	e8 a9 b7 ff ff       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    d963:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d96a:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    d971:	e9 aa 01 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    d976:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    d97d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d984:	48 89 d6             	mov    %rdx,%rsi
    d987:	48 89 c7             	mov    %rax,%rdi
    d98a:	e8 c7 08 00 00       	call   e256 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    d98f:	e9 8c 01 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    d994:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    d99b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9a2:	48 89 c7             	mov    %rax,%rdi
    d9a5:	e8 92 08 00 00       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    d9aa:	48 89 c1             	mov    %rax,%rcx
    d9ad:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    d9b4:	48 89 c2             	mov    %rax,%rdx
    d9b7:	48 89 ce             	mov    %rcx,%rsi
    d9ba:	48 89 df             	mov    %rbx,%rdi
    d9bd:	e8 ec f2 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d9c2:	84 c0                	test   %al,%al
    d9c4:	0f 84 2c 01 00 00    	je     daf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    d9ca:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9d1:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    d9d8:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    d9df:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    d9e6:	48 89 c7             	mov    %rax,%rdi
    d9e9:	e8 3c 08 00 00       	call   e22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    d9ee:	48 8b 00             	mov    (%rax),%rax
    d9f1:	48 39 c3             	cmp    %rax,%rbx
    d9f4:	0f 94 c0             	sete   %al
    d9f7:	84 c0                	test   %al,%al
    d9f9:	74 3a                	je     da35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    d9fb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    da02:	48 89 c7             	mov    %rax,%rdi
    da05:	e8 20 08 00 00       	call   e22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    da0a:	48 89 c2             	mov    %rax,%rdx
    da0d:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    da14:	00 
    da15:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    da19:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    da1d:	48 89 ce             	mov    %rcx,%rsi
    da20:	48 89 c7             	mov    %rax,%rdi
    da23:	e8 2c b5 ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    da28:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    da2c:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    da30:	e9 eb 00 00 00       	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    da35:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    da3c:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    da43:	48 89 c7             	mov    %rax,%rdi
    da46:	e8 bb 09 00 00       	call   e406 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    da4b:	48 8b 00             	mov    (%rax),%rax
    da4e:	48 89 c7             	mov    %rax,%rdi
    da51:	e8 e6 07 00 00       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    da56:	48 89 c2             	mov    %rax,%rdx
    da59:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    da60:	48 89 c6             	mov    %rax,%rsi
    da63:	48 89 df             	mov    %rbx,%rdi
    da66:	e8 43 f2 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    da6b:	84 c0                	test   %al,%al
    da6d:	74 6c                	je     dadb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    da6f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da76:	48 89 c7             	mov    %rax,%rdi
    da79:	e8 1f fa ff ff       	call   d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    da7e:	48 85 c0             	test   %rax,%rax
    da81:	0f 94 c0             	sete   %al
    da84:	84 c0                	test   %al,%al
    da86:	74 2c                	je     dab4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    da88:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    da8f:	00 
    da90:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    da97:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    da9b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    da9f:	48 89 ce             	mov    %rcx,%rsi
    daa2:	48 89 c7             	mov    %rax,%rdi
    daa5:	e8 aa b4 ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    daaa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    daae:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    dab2:	eb 6c                	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    dab4:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    dabb:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    dac2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dac6:	48 89 ce             	mov    %rcx,%rsi
    dac9:	48 89 c7             	mov    %rax,%rdi
    dacc:	e8 3b b6 ff ff       	call   910c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    dad1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dad5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    dad9:	eb 45                	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    dadb:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    dae2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    dae9:	48 89 d6             	mov    %rdx,%rsi
    daec:	48 89 c7             	mov    %rax,%rdi
    daef:	e8 62 07 00 00       	call   e256 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    daf4:	eb 2a                	jmp    db20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    daf6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    dafd:	00 
    dafe:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    db02:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    db09:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    db0d:	48 89 ce             	mov    %rcx,%rsi
    db10:	48 89 c7             	mov    %rax,%rdi
    db13:	e8 3c b4 ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    db18:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    db1c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    db20:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    db24:	c9                   	leave
    db25:	c3                   	ret

000000000000db26 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    db26:	55                   	push   %rbp
    db27:	48 89 e5             	mov    %rsp,%rbp
    db2a:	48 83 ec 10          	sub    $0x10,%rsp
    db2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    db32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db36:	48 8b 40 08          	mov    0x8(%rax),%rax
    db3a:	48 89 c7             	mov    %rax,%rdi
    db3d:	e8 ec 08 00 00       	call   e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    db42:	c9                   	leave
    db43:	c3                   	ret

000000000000db44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    db44:	55                   	push   %rbp
    db45:	48 89 e5             	mov    %rsp,%rbp
    db48:	48 83 ec 30          	sub    $0x30,%rsp
    db4c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    db50:	48 89 d1             	mov    %rdx,%rcx
    db53:	48 89 f0             	mov    %rsi,%rax
    db56:	48 89 fa             	mov    %rdi,%rdx
    db59:	48 89 ca             	mov    %rcx,%rdx
    db5c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    db60:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    db64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db68:	48 8b 00             	mov    (%rax),%rax
    db6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    db6f:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    db73:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    db77:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    db7b:	48 89 c7             	mov    %rax,%rdi
    db7e:	e8 d7 08 00 00       	call   e45a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    db83:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    db87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db8b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    db92:	00 
	  return __it;
    db93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    db97:	c9                   	leave
    db98:	c3                   	ret
    db99:	90                   	nop

000000000000db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    db9a:	55                   	push   %rbp
    db9b:	48 89 e5             	mov    %rsp,%rbp
    db9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dba2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    dba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbae:	48 89 10             	mov    %rdx,(%rax)
    dbb1:	90                   	nop
    dbb2:	5d                   	pop    %rbp
    dbb3:	c3                   	ret

000000000000dbb4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    dbb4:	55                   	push   %rbp
    dbb5:	48 89 e5             	mov    %rsp,%rbp
    dbb8:	48 83 ec 20          	sub    $0x20,%rsp
    dbbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    dbc0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    dbc7:	ff ff 0f 
    dbca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    dbce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dbd2:	48 89 c7             	mov    %rax,%rdi
    dbd5:	e8 43 09 00 00       	call   e51d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    dbda:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    dbde:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    dbe2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dbe6:	48 89 d6             	mov    %rdx,%rsi
    dbe9:	48 89 c7             	mov    %rax,%rdi
    dbec:	e8 4b 61 ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    dbf1:	48 8b 00             	mov    (%rax),%rax
      }
    dbf4:	c9                   	leave
    dbf5:	c3                   	ret

000000000000dbf6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    dbf6:	55                   	push   %rbp
    dbf7:	48 89 e5             	mov    %rsp,%rbp
    dbfa:	48 83 ec 10          	sub    $0x10,%rsp
    dbfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    dc06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc0e:	48 89 d6             	mov    %rdx,%rsi
    dc11:	48 89 c7             	mov    %rax,%rdi
    dc14:	e8 6f f3 ff ff       	call   cf88 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    dc19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc1d:	48 89 c7             	mov    %rax,%rdi
    dc20:	e8 13 09 00 00       	call   e538 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    dc25:	90                   	nop
    dc26:	c9                   	leave
    dc27:	c3                   	ret

000000000000dc28 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    dc28:	55                   	push   %rbp
    dc29:	48 89 e5             	mov    %rsp,%rbp
    dc2c:	48 83 ec 10          	sub    $0x10,%rsp
    dc30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    dc38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc40:	48 89 d6             	mov    %rdx,%rsi
    dc43:	48 89 c7             	mov    %rax,%rdi
    dc46:	e8 1b 09 00 00       	call   e566 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    dc4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dc4f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    dc52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc56:	48 8b 10             	mov    (%rax),%rdx
    dc59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc5d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    dc61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc65:	48 8b 00             	mov    (%rax),%rax
    dc68:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc6c:	48 c1 e2 03          	shl    $0x3,%rdx
    dc70:	48 01 c2             	add    %rax,%rdx
    dc73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc77:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    dc7b:	90                   	nop
    dc7c:	c9                   	leave
    dc7d:	c3                   	ret

000000000000dc7e <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    dc7e:	55                   	push   %rbp
    dc7f:	48 89 e5             	mov    %rsp,%rbp
    dc82:	48 83 ec 20          	sub    $0x20,%rsp
    dc86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    dc92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc9a:	48 89 d6             	mov    %rdx,%rsi
    dc9d:	48 89 c7             	mov    %rax,%rdi
    dca0:	e8 f4 08 00 00       	call   e599 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    dca5:	c9                   	leave
    dca6:	c3                   	ret
    dca7:	90                   	nop

000000000000dca8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    dca8:	55                   	push   %rbp
    dca9:	48 89 e5             	mov    %rsp,%rbp
    dcac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcb4:	90                   	nop
    dcb5:	5d                   	pop    %rbp
    dcb6:	c3                   	ret

000000000000dcb7 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dcb7:	55                   	push   %rbp
    dcb8:	48 89 e5             	mov    %rsp,%rbp
    dcbb:	48 83 ec 20          	sub    $0x20,%rsp
    dcbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dccb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dccf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dcd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcd7:	48 89 ce             	mov    %rcx,%rsi
    dcda:	48 89 c7             	mov    %rax,%rdi
    dcdd:	e8 e0 08 00 00       	call   e5c2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    dce2:	90                   	nop
    dce3:	c9                   	leave
    dce4:	c3                   	ret

000000000000dce5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    dce5:	55                   	push   %rbp
    dce6:	48 89 e5             	mov    %rsp,%rbp
    dce9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dced:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dcf1:	90                   	nop
    dcf2:	5d                   	pop    %rbp
    dcf3:	c3                   	ret

000000000000dcf4 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    dcf4:	55                   	push   %rbp
    dcf5:	48 89 e5             	mov    %rsp,%rbp
    dcf8:	48 83 ec 10          	sub    $0x10,%rsp
    dcfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    dd00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd04:	48 89 c7             	mov    %rax,%rdi
    dd07:	e8 e8 08 00 00       	call   e5f4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    dd0c:	c9                   	leave
    dd0d:	c3                   	ret

000000000000dd0e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    dd0e:	55                   	push   %rbp
    dd0f:	48 89 e5             	mov    %rsp,%rbp
    dd12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd1a:	90                   	nop
    dd1b:	5d                   	pop    %rbp
    dd1c:	c3                   	ret
    dd1d:	90                   	nop

000000000000dd1e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    dd1e:	55                   	push   %rbp
    dd1f:	48 89 e5             	mov    %rsp,%rbp
    dd22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    dd26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd2a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    dd31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd35:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dd3c:	00 
    dd3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd41:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    dd48:	00 
	{ }
    dd49:	90                   	nop
    dd4a:	5d                   	pop    %rbp
    dd4b:	c3                   	ret

000000000000dd4c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    dd4c:	55                   	push   %rbp
    dd4d:	48 89 e5             	mov    %rsp,%rbp
    dd50:	48 83 ec 10          	sub    $0x10,%rsp
    dd54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    dd5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dd61:	74 15                	je     dd78 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    dd63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd67:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd6b:	48 89 d6             	mov    %rdx,%rsi
    dd6e:	48 89 c7             	mov    %rax,%rdi
    dd71:	e8 98 08 00 00       	call   e60e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    dd76:	eb 05                	jmp    dd7d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    dd78:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dd7d:	c9                   	leave
    dd7e:	c3                   	ret

000000000000dd7f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dd7f:	55                   	push   %rbp
    dd80:	48 89 e5             	mov    %rsp,%rbp
    dd83:	48 83 ec 20          	sub    $0x20,%rsp
    dd87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd8b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd8f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dd93:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd97:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd9f:	48 89 ce             	mov    %rcx,%rsi
    dda2:	48 89 c7             	mov    %rax,%rdi
    dda5:	e8 8e 08 00 00       	call   e638 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    ddaa:	90                   	nop
    ddab:	c9                   	leave
    ddac:	c3                   	ret

000000000000ddad <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ddad:	55                   	push   %rbp
    ddae:	48 89 e5             	mov    %rsp,%rbp
    ddb1:	48 83 ec 20          	sub    $0x20,%rsp
    ddb5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ddb9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ddbd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ddc1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ddc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ddc9:	48 89 d6             	mov    %rdx,%rsi
    ddcc:	48 89 c7             	mov    %rax,%rdi
    ddcf:	e8 9d 08 00 00       	call   e671 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    ddd4:	c9                   	leave
    ddd5:	c3                   	ret

000000000000ddd6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    ddd6:	55                   	push   %rbp
    ddd7:	48 89 e5             	mov    %rsp,%rbp
    ddda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dde2:	90                   	nop
    dde3:	5d                   	pop    %rbp
    dde4:	c3                   	ret
    dde5:	90                   	nop

000000000000dde6 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    dde6:	55                   	push   %rbp
    dde7:	48 89 e5             	mov    %rsp,%rbp
    ddea:	48 83 ec 10          	sub    $0x10,%rsp
    ddee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ddf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddfe:	48 89 d6             	mov    %rdx,%rsi
    de01:	48 89 c7             	mov    %rax,%rdi
    de04:	e8 c5 08 00 00       	call   e6ce <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    de09:	90                   	nop
    de0a:	c9                   	leave
    de0b:	c3                   	ret

000000000000de0c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    de0c:	55                   	push   %rbp
    de0d:	48 89 e5             	mov    %rsp,%rbp
    de10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    de14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de18:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    de1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de23:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    de2a:	00 
    de2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de2f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    de36:	00 
	{ }
    de37:	90                   	nop
    de38:	5d                   	pop    %rbp
    de39:	c3                   	ret

000000000000de3a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    de3a:	55                   	push   %rbp
    de3b:	48 89 e5             	mov    %rsp,%rbp
    de3e:	48 83 ec 20          	sub    $0x20,%rsp
    de42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    de4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    de4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    de52:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    de56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de5a:	48 89 ce             	mov    %rcx,%rsi
    de5d:	48 89 c7             	mov    %rax,%rdi
    de60:	e8 79 08 00 00       	call   e6de <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    de65:	90                   	nop
    de66:	c9                   	leave
    de67:	c3                   	ret

000000000000de68 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    de68:	55                   	push   %rbp
    de69:	48 89 e5             	mov    %rsp,%rbp
    de6c:	48 83 ec 20          	sub    $0x20,%rsp
    de70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    de74:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    de7b:	ff ff 0f 
    de7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    de82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    de86:	48 89 c7             	mov    %rax,%rdi
    de89:	e8 81 08 00 00       	call   e70f <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    de8e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    de92:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    de96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    de9a:	48 89 d6             	mov    %rdx,%rsi
    de9d:	48 89 c7             	mov    %rax,%rdi
    dea0:	e8 97 5e ff ff       	call   3d3c <_ZSt3minImERKT_S2_S2_>
    dea5:	48 8b 00             	mov    (%rax),%rax
      }
    dea8:	c9                   	leave
    dea9:	c3                   	ret

000000000000deaa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    deaa:	55                   	push   %rbp
    deab:	48 89 e5             	mov    %rsp,%rbp
    deae:	48 83 ec 10          	sub    $0x10,%rsp
    deb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    deba:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    debe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dec2:	ba 00 00 00 00       	mov    $0x0,%edx
    dec7:	48 89 ce             	mov    %rcx,%rsi
    deca:	48 89 c7             	mov    %rax,%rdi
    decd:	e8 58 08 00 00       	call   e72a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    ded2:	c9                   	leave
    ded3:	c3                   	ret

000000000000ded4 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    ded4:	55                   	push   %rbp
    ded5:	48 89 e5             	mov    %rsp,%rbp
    ded8:	48 83 ec 30          	sub    $0x30,%rsp
    dedc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dee0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dee4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    dee8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    deec:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    def0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    def4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    def8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    defc:	48 89 ce             	mov    %rcx,%rsi
    deff:	48 89 c7             	mov    %rax,%rdi
    df02:	e8 84 08 00 00       	call   e78b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    df07:	c9                   	leave
    df08:	c3                   	ret

000000000000df09 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    df09:	55                   	push   %rbp
    df0a:	48 89 e5             	mov    %rsp,%rbp
    df0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df15:	90                   	nop
    df16:	5d                   	pop    %rbp
    df17:	c3                   	ret

000000000000df18 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    df18:	55                   	push   %rbp
    df19:	48 89 e5             	mov    %rsp,%rbp
    df1c:	48 83 ec 10          	sub    $0x10,%rsp
    df20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    df24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df28:	48 89 c7             	mov    %rax,%rdi
    df2b:	e8 88 08 00 00       	call   e7b8 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    df30:	c9                   	leave
    df31:	c3                   	ret

000000000000df32 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    df32:	55                   	push   %rbp
    df33:	48 89 e5             	mov    %rsp,%rbp
    df36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df3e:	90                   	nop
    df3f:	5d                   	pop    %rbp
    df40:	c3                   	ret
    df41:	90                   	nop

000000000000df42 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    df42:	55                   	push   %rbp
    df43:	48 89 e5             	mov    %rsp,%rbp
    df46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    df4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df4e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    df55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df59:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    df60:	00 
    df61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df65:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    df6c:	00 
	{ }
    df6d:	90                   	nop
    df6e:	5d                   	pop    %rbp
    df6f:	c3                   	ret

000000000000df70 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    df70:	55                   	push   %rbp
    df71:	48 89 e5             	mov    %rsp,%rbp
    df74:	48 83 ec 10          	sub    $0x10,%rsp
    df78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    df80:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    df85:	74 15                	je     df9c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    df87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    df8f:	48 89 d6             	mov    %rdx,%rsi
    df92:	48 89 c7             	mov    %rax,%rdi
    df95:	e8 38 08 00 00       	call   e7d2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    df9a:	eb 05                	jmp    dfa1 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    df9c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dfa1:	c9                   	leave
    dfa2:	c3                   	ret

000000000000dfa3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    dfa3:	55                   	push   %rbp
    dfa4:	48 89 e5             	mov    %rsp,%rbp
    dfa7:	48 83 ec 20          	sub    $0x20,%rsp
    dfab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dfaf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dfb3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dfb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dfbb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dfbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfc3:	48 89 ce             	mov    %rcx,%rsi
    dfc6:	48 89 c7             	mov    %rax,%rdi
    dfc9:	e8 2e 08 00 00       	call   e7fc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    dfce:	90                   	nop
    dfcf:	c9                   	leave
    dfd0:	c3                   	ret

000000000000dfd1 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    dfd1:	55                   	push   %rbp
    dfd2:	48 89 e5             	mov    %rsp,%rbp
    dfd5:	48 83 ec 20          	sub    $0x20,%rsp
    dfd9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dfdd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    dfe1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    dfe5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dfe9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfed:	48 89 d6             	mov    %rdx,%rsi
    dff0:	48 89 c7             	mov    %rax,%rdi
    dff3:	e8 3e 08 00 00       	call   e836 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    dff8:	c9                   	leave
    dff9:	c3                   	ret

000000000000dffa <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    dffa:	55                   	push   %rbp
    dffb:	48 89 e5             	mov    %rsp,%rbp
    dffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e006:	90                   	nop
    e007:	5d                   	pop    %rbp
    e008:	c3                   	ret
    e009:	90                   	nop

000000000000e00a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    e00a:	55                   	push   %rbp
    e00b:	48 89 e5             	mov    %rsp,%rbp
    e00e:	53                   	push   %rbx
    e00f:	48 83 ec 18          	sub    $0x18,%rsp
    e013:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e017:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    e01b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e01f:	48 89 c7             	mov    %rax,%rdi
    e022:	e8 69 f5 ff ff       	call   d590 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e027:	48 89 c3             	mov    %rax,%rbx
    e02a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e02e:	48 89 c7             	mov    %rax,%rdi
    e031:	e8 60 08 00 00       	call   e896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e036:	48 89 de             	mov    %rbx,%rsi
    e039:	48 89 c7             	mov    %rax,%rdi
    e03c:	e8 63 08 00 00       	call   e8a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    e041:	90                   	nop
    e042:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e046:	c9                   	leave
    e047:	c3                   	ret

000000000000e048 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    e048:	55                   	push   %rbp
    e049:	48 89 e5             	mov    %rsp,%rbp
    e04c:	48 83 ec 10          	sub    $0x10,%rsp
    e050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e054:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    e058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e05c:	48 89 c7             	mov    %rax,%rdi
    e05f:	e8 32 08 00 00       	call   e896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e064:	48 89 c1             	mov    %rax,%rcx
    e067:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e06b:	ba 01 00 00 00       	mov    $0x1,%edx
    e070:	48 89 c6             	mov    %rax,%rsi
    e073:	48 89 cf             	mov    %rcx,%rdi
    e076:	e8 4f 08 00 00       	call   e8ca <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    e07b:	90                   	nop
    e07c:	c9                   	leave
    e07d:	c3                   	ret

000000000000e07e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    e07e:	55                   	push   %rbp
    e07f:	48 89 e5             	mov    %rsp,%rbp
    e082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    e086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e08a:	48 83 c0 08          	add    $0x8,%rax
    e08e:	5d                   	pop    %rbp
    e08f:	c3                   	ret

000000000000e090 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e090:	55                   	push   %rbp
    e091:	48 89 e5             	mov    %rsp,%rbp
    e094:	53                   	push   %rbx
    e095:	48 83 ec 38          	sub    $0x38,%rsp
    e099:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e09d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e0a1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e0a5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    e0a9:	eb 56                	jmp    e101 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    e0ab:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e0af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e0b3:	48 89 c7             	mov    %rax,%rdi
    e0b6:	e8 73 03 00 00       	call   e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e0bb:	48 89 c1             	mov    %rax,%rcx
    e0be:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e0c2:	48 89 c2             	mov    %rax,%rdx
    e0c5:	48 89 ce             	mov    %rcx,%rsi
    e0c8:	48 89 df             	mov    %rbx,%rdi
    e0cb:	e8 de eb ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e0d0:	83 f0 01             	xor    $0x1,%eax
    e0d3:	84 c0                	test   %al,%al
    e0d5:	74 1a                	je     e0f1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    e0d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e0db:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    e0df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e0e3:	48 89 c7             	mov    %rax,%rdi
    e0e6:	e8 c4 f3 ff ff       	call   d4af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e0eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e0ef:	eb 10                	jmp    e101 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    e0f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e0f5:	48 89 c7             	mov    %rax,%rdi
    e0f8:	e8 a0 f3 ff ff       	call   d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e0fd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    e101:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e106:	75 a3                	jne    e0ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    e108:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e10c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e110:	48 89 d6             	mov    %rdx,%rsi
    e113:	48 89 c7             	mov    %rax,%rdi
    e116:	e8 7f fa ff ff       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e11b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    e11f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e123:	c9                   	leave
    e124:	c3                   	ret
    e125:	90                   	nop

000000000000e126 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() noexcept
    e126:	55                   	push   %rbp
    e127:	48 89 e5             	mov    %rsp,%rbp
    e12a:	48 83 ec 10          	sub    $0x10,%rsp
    e12e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    e132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e136:	48 89 c7             	mov    %rax,%rdi
    e139:	e8 ba 07 00 00       	call   e8f8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    e13e:	c9                   	leave
    e13f:	c3                   	ret

000000000000e140 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    e140:	55                   	push   %rbp
    e141:	48 89 e5             	mov    %rsp,%rbp
    e144:	53                   	push   %rbx
    e145:	48 83 ec 18          	sub    $0x18,%rsp
    e149:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e14d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    e151:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e155:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e159:	48 89 c7             	mov    %rax,%rdi
    e15c:	e8 75 f4 ff ff       	call   d5d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    e161:	48 89 c6             	mov    %rax,%rsi
    e164:	48 89 df             	mov    %rbx,%rdi
    e167:	e8 9a 07 00 00       	call   e906 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    e16c:	90                   	nop
    e16d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e171:	c9                   	leave
    e172:	c3                   	ret
    e173:	90                   	nop

000000000000e174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    e174:	55                   	push   %rbp
    e175:	48 89 e5             	mov    %rsp,%rbp
    e178:	41 54                	push   %r12
    e17a:	53                   	push   %rbx
    e17b:	48 83 ec 30          	sub    $0x30,%rsp
    e17f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e183:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e187:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e18b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    e18f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e193:	48 89 c7             	mov    %rax,%rdi
    e196:	e8 91 07 00 00       	call   e92c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    e19b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    e19f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e1a3:	48 89 c7             	mov    %rax,%rdi
    e1a6:	e8 50 9b ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    e1ab:	49 89 c4             	mov    %rax,%r12
    e1ae:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e1b2:	48 89 c7             	mov    %rax,%rdi
    e1b5:	e8 5d f4 ff ff       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    e1ba:	48 89 c3             	mov    %rax,%rbx
    e1bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e1c1:	48 89 c7             	mov    %rax,%rdi
    e1c4:	e8 16 9b ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    e1c9:	48 89 c2             	mov    %rax,%rdx
    e1cc:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    e1d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e1d4:	4d 89 e0             	mov    %r12,%r8
    e1d7:	48 89 d9             	mov    %rbx,%rcx
    e1da:	48 89 c7             	mov    %rax,%rdi
    e1dd:	e8 72 07 00 00       	call   e954 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    e1e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e1e6:	48 83 c4 30          	add    $0x30,%rsp
    e1ea:	5b                   	pop    %rbx
    e1eb:	41 5c                	pop    %r12
    e1ed:	5d                   	pop    %rbp
    e1ee:	c3                   	ret
    e1ef:	90                   	nop

000000000000e1f0 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    e1f0:	55                   	push   %rbp
    e1f1:	48 89 e5             	mov    %rsp,%rbp
    e1f4:	48 83 ec 20          	sub    $0x20,%rsp
    e1f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    e1fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e200:	48 8b 10             	mov    (%rax),%rdx
    e203:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e207:	48 89 d6             	mov    %rdx,%rsi
    e20a:	48 89 c7             	mov    %rax,%rdi
    e20d:	e8 88 f9 ff ff       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e216:	c9                   	leave
    e217:	c3                   	ret

000000000000e218 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e218:	55                   	push   %rbp
    e219:	48 89 e5             	mov    %rsp,%rbp
    e21c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    e220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e224:	48 8b 40 28          	mov    0x28(%rax),%rax
    e228:	5d                   	pop    %rbp
    e229:	c3                   	ret

000000000000e22a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    e22a:	55                   	push   %rbp
    e22b:	48 89 e5             	mov    %rsp,%rbp
    e22e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    e232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e236:	48 83 c0 20          	add    $0x20,%rax
    e23a:	5d                   	pop    %rbp
    e23b:	c3                   	ret

000000000000e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    e23c:	55                   	push   %rbp
    e23d:	48 89 e5             	mov    %rsp,%rbp
    e240:	48 83 ec 10          	sub    $0x10,%rsp
    e244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    e248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e24c:	48 89 c7             	mov    %rax,%rdi
    e24f:	e8 da 01 00 00       	call   e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e254:	c9                   	leave
    e255:	c3                   	ret

000000000000e256 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e256:	55                   	push   %rbp
    e257:	48 89 e5             	mov    %rsp,%rbp
    e25a:	53                   	push   %rbx
    e25b:	48 83 ec 78          	sub    $0x78,%rsp
    e25f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    e263:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    e267:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e26b:	48 89 c7             	mov    %rax,%rdi
    e26e:	e8 59 e9 ff ff       	call   cbcc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    e273:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    e277:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e27b:	48 89 c7             	mov    %rax,%rdi
    e27e:	e8 fb fd ff ff       	call   e07e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e283:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    e287:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    e28b:	eb 51                	jmp    e2de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    e28d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e291:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    e295:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e299:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e29d:	48 89 c7             	mov    %rax,%rdi
    e2a0:	e8 89 01 00 00       	call   e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e2a5:	48 89 c2             	mov    %rax,%rdx
    e2a8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e2ac:	48 89 c6             	mov    %rax,%rsi
    e2af:	48 89 df             	mov    %rbx,%rdi
    e2b2:	e8 f7 e9 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e2b7:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    e2ba:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e2be:	74 0e                	je     e2ce <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    e2c0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e2c4:	48 89 c7             	mov    %rax,%rdi
    e2c7:	e8 e3 f1 ff ff       	call   d4af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    e2cc:	eb 0c                	jmp    e2da <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    e2ce:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e2d2:	48 89 c7             	mov    %rax,%rdi
    e2d5:	e8 c3 f1 ff ff       	call   d49d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    e2da:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    e2de:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    e2e2:	48 85 c0             	test   %rax,%rax
    e2e5:	75 a6                	jne    e28d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    e2e7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    e2eb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e2ef:	48 89 d6             	mov    %rdx,%rsi
    e2f2:	48 89 c7             	mov    %rax,%rdi
    e2f5:	e8 a0 f8 ff ff       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    e2fa:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    e2fe:	74 54                	je     e354 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    e300:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e304:	48 89 c7             	mov    %rax,%rdi
    e307:	e8 1a 07 00 00       	call   ea26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    e30c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    e310:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    e314:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e318:	48 89 d6             	mov    %rdx,%rsi
    e31b:	48 89 c7             	mov    %rax,%rdi
    e31e:	e8 2f e9 ff ff       	call   cc52 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    e323:	84 c0                	test   %al,%al
    e325:	74 21                	je     e348 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    e327:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e32b:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e32f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    e333:	48 89 ce             	mov    %rcx,%rsi
    e336:	48 89 c7             	mov    %rax,%rdi
    e339:	e8 12 07 00 00       	call   ea50 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e33e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    e342:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    e346:	eb 7d                	jmp    e3c5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    e348:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e34c:	48 89 c7             	mov    %rax,%rdi
    e34f:	e8 8a 00 00 00       	call   e3de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    e354:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    e358:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    e35c:	48 89 c7             	mov    %rax,%rdi
    e35f:	e8 d8 fe ff ff       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e364:	48 89 c1             	mov    %rax,%rcx
    e367:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    e36b:	48 89 c2             	mov    %rax,%rdx
    e36e:	48 89 ce             	mov    %rcx,%rsi
    e371:	48 89 df             	mov    %rbx,%rdi
    e374:	e8 35 e9 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e379:	84 c0                	test   %al,%al
    e37b:	74 21                	je     e39e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    e37d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    e381:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    e385:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e389:	48 89 ce             	mov    %rcx,%rsi
    e38c:	48 89 c7             	mov    %rax,%rdi
    e38f:	e8 bc 06 00 00       	call   ea50 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    e394:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e398:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e39c:	eb 27                	jmp    e3c5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    e39e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    e3a5:	00 
    e3a6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    e3aa:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e3ae:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    e3b2:	48 89 ce             	mov    %rcx,%rsi
    e3b5:	48 89 c7             	mov    %rax,%rdi
    e3b8:	e8 97 ab ff ff       	call   8f54 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    e3bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e3c1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    e3c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e3c9:	c9                   	leave
    e3ca:	c3                   	ret
    e3cb:	90                   	nop

000000000000e3cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    e3cc:	55                   	push   %rbp
    e3cd:	48 89 e5             	mov    %rsp,%rbp
    e3d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    e3d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3d8:	48 83 c0 18          	add    $0x18,%rax
    e3dc:	5d                   	pop    %rbp
    e3dd:	c3                   	ret

000000000000e3de <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    e3de:	55                   	push   %rbp
    e3df:	48 89 e5             	mov    %rsp,%rbp
    e3e2:	48 83 ec 10          	sub    $0x10,%rsp
    e3e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    e3ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3ee:	48 8b 00             	mov    (%rax),%rax
    e3f1:	48 89 c7             	mov    %rax,%rdi
    e3f4:	e8 07 4f ff ff       	call   3300 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    e3f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e3fd:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e404:	c9                   	leave
    e405:	c3                   	ret

000000000000e406 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    e406:	55                   	push   %rbp
    e407:	48 89 e5             	mov    %rsp,%rbp
    e40a:	48 83 ec 10          	sub    $0x10,%rsp
    e40e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    e412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e416:	48 8b 00             	mov    (%rax),%rax
    e419:	48 89 c7             	mov    %rax,%rdi
    e41c:	e8 6f 4d ff ff       	call   3190 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    e421:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e425:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    e428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    e42c:	c9                   	leave
    e42d:	c3                   	ret

000000000000e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    e42e:	55                   	push   %rbp
    e42f:	48 89 e5             	mov    %rsp,%rbp
    e432:	48 83 ec 20          	sub    $0x20,%rsp
    e436:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    e43a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e43e:	48 89 c7             	mov    %rax,%rdi
    e441:	e8 4e 06 00 00       	call   ea94 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e446:	48 89 c2             	mov    %rax,%rdx
    e449:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    e44d:	48 89 d6             	mov    %rdx,%rsi
    e450:	48 89 c7             	mov    %rax,%rdi
    e453:	e8 5a 06 00 00       	call   eab2 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    e458:	c9                   	leave
    e459:	c3                   	ret

000000000000e45a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e45a:	55                   	push   %rbp
    e45b:	48 89 e5             	mov    %rsp,%rbp
    e45e:	41 54                	push   %r12
    e460:	53                   	push   %rbx
    e461:	48 83 ec 30          	sub    $0x30,%rsp
    e465:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e469:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e46d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e471:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    e475:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    e47a:	75 43                	jne    e4bf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    e47c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e480:	48 89 c7             	mov    %rax,%rdi
    e483:	e8 f6 fb ff ff       	call   e07e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    e488:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    e48c:	74 31                	je     e4bf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    e48e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    e492:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e496:	48 89 c7             	mov    %rax,%rdi
    e499:	e8 9e fd ff ff       	call   e23c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    e49e:	49 89 c4             	mov    %rax,%r12
    e4a1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e4a5:	48 89 c7             	mov    %rax,%rdi
    e4a8:	e8 81 ff ff ff       	call   e42e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    e4ad:	4c 89 e2             	mov    %r12,%rdx
    e4b0:	48 89 c6             	mov    %rax,%rsi
    e4b3:	48 89 df             	mov    %rbx,%rdi
    e4b6:	e8 f3 e7 ff ff       	call   ccae <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    e4bb:	84 c0                	test   %al,%al
    e4bd:	74 07                	je     e4c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    e4bf:	b8 01 00 00 00       	mov    $0x1,%eax
    e4c4:	eb 05                	jmp    e4cb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    e4c6:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    e4cb:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    e4ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e4d2:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    e4d6:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    e4da:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e4de:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    e4e2:	89 c7                	mov    %eax,%edi
    e4e4:	e8 57 4b ff ff       	call   3040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    e4e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e4ed:	48 8b 40 28          	mov    0x28(%rax),%rax
    e4f1:	48 8d 50 01          	lea    0x1(%rax),%rdx
    e4f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e4f9:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    e4fd:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    e501:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e505:	48 89 d6             	mov    %rdx,%rsi
    e508:	48 89 c7             	mov    %rax,%rdi
    e50b:	e8 8a f6 ff ff       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    e510:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    e514:	48 83 c4 30          	add    $0x30,%rsp
    e518:	5b                   	pop    %rbx
    e519:	41 5c                	pop    %r12
    e51b:	5d                   	pop    %rbp
    e51c:	c3                   	ret

000000000000e51d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e51d:	55                   	push   %rbp
    e51e:	48 89 e5             	mov    %rsp,%rbp
    e521:	48 83 ec 10          	sub    $0x10,%rsp
    e525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e529:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e52d:	48 89 c7             	mov    %rax,%rdi
    e530:	e8 8f 05 00 00       	call   eac4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    e535:	c9                   	leave
    e536:	c3                   	ret
    e537:	90                   	nop

000000000000e538 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    e538:	55                   	push   %rbp
    e539:	48 89 e5             	mov    %rsp,%rbp
    e53c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    e540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e544:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    e54b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e54f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e556:	00 
    e557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e55b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    e562:	00 
	{ }
    e563:	90                   	nop
    e564:	5d                   	pop    %rbp
    e565:	c3                   	ret

000000000000e566 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e566:	55                   	push   %rbp
    e567:	48 89 e5             	mov    %rsp,%rbp
    e56a:	48 83 ec 10          	sub    $0x10,%rsp
    e56e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e572:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e576:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e57b:	74 15                	je     e592 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    e57d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e581:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e585:	48 89 d6             	mov    %rdx,%rsi
    e588:	48 89 c7             	mov    %rax,%rdi
    e58b:	e8 4e 05 00 00       	call   eade <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    e590:	eb 05                	jmp    e597 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    e592:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e597:	c9                   	leave
    e598:	c3                   	ret

000000000000e599 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    e599:	55                   	push   %rbp
    e59a:	48 89 e5             	mov    %rsp,%rbp
    e59d:	48 83 ec 20          	sub    $0x20,%rsp
    e5a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e5a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    e5a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    e5ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e5b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5b5:	48 89 d6             	mov    %rdx,%rsi
    e5b8:	48 89 c7             	mov    %rax,%rdi
    e5bb:	e8 48 05 00 00       	call   eb08 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    e5c0:	c9                   	leave
    e5c1:	c3                   	ret

000000000000e5c2 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e5c2:	55                   	push   %rbp
    e5c3:	48 89 e5             	mov    %rsp,%rbp
    e5c6:	48 83 ec 20          	sub    $0x20,%rsp
    e5ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e5d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e5d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e5da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e5e1:	00 
    e5e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e5e6:	48 89 d6             	mov    %rdx,%rsi
    e5e9:	48 89 c7             	mov    %rax,%rdi
    e5ec:	e8 df 4c ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e5f1:	c9                   	leave
    e5f2:	c3                   	ret
    e5f3:	90                   	nop

000000000000e5f4 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e5f4:	55                   	push   %rbp
    e5f5:	48 89 e5             	mov    %rsp,%rbp
    e5f8:	48 83 ec 10          	sub    $0x10,%rsp
    e5fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e604:	48 89 c7             	mov    %rax,%rdi
    e607:	e8 5a 05 00 00       	call   eb66 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    e60c:	c9                   	leave
    e60d:	c3                   	ret

000000000000e60e <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e60e:	55                   	push   %rbp
    e60f:	48 89 e5             	mov    %rsp,%rbp
    e612:	48 83 ec 10          	sub    $0x10,%rsp
    e616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e61a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e61e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e626:	ba 00 00 00 00       	mov    $0x0,%edx
    e62b:	48 89 ce             	mov    %rcx,%rsi
    e62e:	48 89 c7             	mov    %rax,%rdi
    e631:	e8 44 05 00 00       	call   eb7a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    e636:	c9                   	leave
    e637:	c3                   	ret

000000000000e638 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e638:	55                   	push   %rbp
    e639:	48 89 e5             	mov    %rsp,%rbp
    e63c:	48 83 ec 20          	sub    $0x20,%rsp
    e640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e644:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e648:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e64c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e650:	48 89 d0             	mov    %rdx,%rax
    e653:	48 01 c0             	add    %rax,%rax
    e656:	48 01 d0             	add    %rdx,%rax
    e659:	48 c1 e0 03          	shl    $0x3,%rax
    e65d:	48 89 c2             	mov    %rax,%rdx
    e660:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e664:	48 89 d6             	mov    %rdx,%rsi
    e667:	48 89 c7             	mov    %rax,%rdi
    e66a:	e8 61 4c ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e66f:	c9                   	leave
    e670:	c3                   	ret

000000000000e671 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e671:	55                   	push   %rbp
    e672:	48 89 e5             	mov    %rsp,%rbp
    e675:	48 83 ec 20          	sub    $0x20,%rsp
    e679:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e67d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e681:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e686:	74 40                	je     e6c8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    e688:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e68c:	48 89 c7             	mov    %rax,%rdi
    e68f:	e8 50 05 00 00       	call   ebe4 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    e694:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e69c:	48 89 c7             	mov    %rax,%rdi
    e69f:	e8 4e 05 00 00       	call   ebf2 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e6a4:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    e6a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e6ad:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e6b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e6b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6b9:	48 89 ce             	mov    %rcx,%rsi
    e6bc:	48 89 c7             	mov    %rax,%rdi
    e6bf:	e8 77 05 00 00       	call   ec3b <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    e6c4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e6c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e6cc:	c9                   	leave
    e6cd:	c3                   	ret

000000000000e6ce <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    e6ce:	55                   	push   %rbp
    e6cf:	48 89 e5             	mov    %rsp,%rbp
    e6d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6da:	90                   	nop
    e6db:	5d                   	pop    %rbp
    e6dc:	c3                   	ret
    e6dd:	90                   	nop

000000000000e6de <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e6de:	55                   	push   %rbp
    e6df:	48 89 e5             	mov    %rsp,%rbp
    e6e2:	48 83 ec 20          	sub    $0x20,%rsp
    e6e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e6f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e6f6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    e6fd:	00 
    e6fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e702:	48 89 d6             	mov    %rdx,%rsi
    e705:	48 89 c7             	mov    %rax,%rdi
    e708:	e8 c3 4b ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e70d:	c9                   	leave
    e70e:	c3                   	ret

000000000000e70f <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    e70f:	55                   	push   %rbp
    e710:	48 89 e5             	mov    %rsp,%rbp
    e713:	48 83 ec 10          	sub    $0x10,%rsp
    e717:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    e71b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e71f:	48 89 c7             	mov    %rax,%rdi
    e722:	e8 59 05 00 00       	call   ec80 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    e727:	c9                   	leave
    e728:	c3                   	ret
    e729:	90                   	nop

000000000000e72a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    e72a:	55                   	push   %rbp
    e72b:	48 89 e5             	mov    %rsp,%rbp
    e72e:	48 83 ec 20          	sub    $0x20,%rsp
    e732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e73a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    e73e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e742:	48 89 c7             	mov    %rax,%rdi
    e745:	e8 50 05 00 00       	call   ec9a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    e74a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e74e:	0f 92 c0             	setb   %al
    e751:	0f b6 c0             	movzbl %al,%eax
    e754:	48 85 c0             	test   %rax,%rax
    e757:	0f 95 c0             	setne  %al
    e75a:	84 c0                	test   %al,%al
    e75c:	74 1a                	je     e778 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    e75e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    e765:	ff ff 1f 
    e768:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e76c:	73 05                	jae    e773 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    e76e:	e8 9d 4a ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    e773:	e8 18 49 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    e778:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e77c:	48 c1 e0 03          	shl    $0x3,%rax
    e780:	48 89 c7             	mov    %rax,%rdi
    e783:	e8 38 4b ff ff       	call   32c0 <_Znwm@plt>
    e788:	90                   	nop
      }
    e789:	c9                   	leave
    e78a:	c3                   	ret

000000000000e78b <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    e78b:	55                   	push   %rbp
    e78c:	48 89 e5             	mov    %rsp,%rbp
    e78f:	48 83 ec 20          	sub    $0x20,%rsp
    e793:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e797:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e79b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    e79f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e7a3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e7a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7ab:	48 89 ce             	mov    %rcx,%rsi
    e7ae:	48 89 c7             	mov    %rax,%rdi
    e7b1:	e8 f8 04 00 00       	call   ecae <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    e7b6:	c9                   	leave
    e7b7:	c3                   	ret

000000000000e7b8 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    e7b8:	55                   	push   %rbp
    e7b9:	48 89 e5             	mov    %rsp,%rbp
    e7bc:	48 83 ec 10          	sub    $0x10,%rsp
    e7c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    e7c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7c8:	48 89 c7             	mov    %rax,%rdi
    e7cb:	e8 2a 05 00 00       	call   ecfa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    e7d0:	c9                   	leave
    e7d1:	c3                   	ret

000000000000e7d2 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    e7d2:	55                   	push   %rbp
    e7d3:	48 89 e5             	mov    %rsp,%rbp
    e7d6:	48 83 ec 10          	sub    $0x10,%rsp
    e7da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    e7e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e7e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7ea:	ba 00 00 00 00       	mov    $0x0,%edx
    e7ef:	48 89 ce             	mov    %rcx,%rsi
    e7f2:	48 89 c7             	mov    %rax,%rdi
    e7f5:	e8 14 05 00 00       	call   ed0e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    e7fa:	c9                   	leave
    e7fb:	c3                   	ret

000000000000e7fc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    e7fc:	55                   	push   %rbp
    e7fd:	48 89 e5             	mov    %rsp,%rbp
    e800:	48 83 ec 20          	sub    $0x20,%rsp
    e804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e808:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e80c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    e810:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e814:	48 89 d0             	mov    %rdx,%rax
    e817:	48 c1 e0 06          	shl    $0x6,%rax
    e81b:	48 01 d0             	add    %rdx,%rax
    e81e:	48 c1 e0 02          	shl    $0x2,%rax
    e822:	48 89 c2             	mov    %rax,%rdx
    e825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e829:	48 89 d6             	mov    %rdx,%rsi
    e82c:	48 89 c7             	mov    %rax,%rdi
    e82f:	e8 9c 4a ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    e834:	c9                   	leave
    e835:	c3                   	ret

000000000000e836 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    e836:	55                   	push   %rbp
    e837:	48 89 e5             	mov    %rsp,%rbp
    e83a:	48 83 ec 20          	sub    $0x20,%rsp
    e83e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e842:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    e846:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    e84b:	74 43                	je     e890 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    e84d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e851:	48 89 c7             	mov    %rax,%rdi
    e854:	e8 20 05 00 00       	call   ed79 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    e859:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    e85d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e861:	48 89 c7             	mov    %rax,%rdi
    e864:	e8 1e 05 00 00       	call   ed87 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    e869:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    e870:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    e871:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e875:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    e879:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e87d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e881:	48 89 ce             	mov    %rcx,%rsi
    e884:	48 89 c7             	mov    %rax,%rdi
    e887:	e8 55 05 00 00       	call   ede1 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    e88c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    e890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    e894:	c9                   	leave
    e895:	c3                   	ret

000000000000e896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    e896:	55                   	push   %rbp
    e897:	48 89 e5             	mov    %rsp,%rbp
    e89a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e89e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a2:	5d                   	pop    %rbp
    e8a3:	c3                   	ret

000000000000e8a4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    e8a4:	55                   	push   %rbp
    e8a5:	48 89 e5             	mov    %rsp,%rbp
    e8a8:	48 83 ec 10          	sub    $0x10,%rsp
    e8ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    e8b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8bc:	48 89 d6             	mov    %rdx,%rsi
    e8bf:	48 89 c7             	mov    %rax,%rdi
    e8c2:	e8 7b 05 00 00       	call   ee42 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    e8c7:	90                   	nop
    e8c8:	c9                   	leave
    e8c9:	c3                   	ret

000000000000e8ca <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e8ca:	55                   	push   %rbp
    e8cb:	48 89 e5             	mov    %rsp,%rbp
    e8ce:	48 83 ec 20          	sub    $0x20,%rsp
    e8d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e8de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ea:	48 89 ce             	mov    %rcx,%rsi
    e8ed:	48 89 c7             	mov    %rax,%rdi
    e8f0:	e8 6d 05 00 00       	call   ee62 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    e8f5:	90                   	nop
    e8f6:	c9                   	leave
    e8f7:	c3                   	ret

000000000000e8f8 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    e8f8:	55                   	push   %rbp
    e8f9:	48 89 e5             	mov    %rsp,%rbp
    e8fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    e900:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e904:	5d                   	pop    %rbp
    e905:	c3                   	ret

000000000000e906 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    e906:	55                   	push   %rbp
    e907:	48 89 e5             	mov    %rsp,%rbp
    e90a:	48 83 ec 10          	sub    $0x10,%rsp
    e90e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e912:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    e916:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e91a:	48 89 c7             	mov    %rax,%rdi
    e91d:	e8 b4 ec ff ff       	call   d5d6 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    e922:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e926:	48 89 02             	mov    %rax,(%rdx)
    e929:	90                   	nop
    e92a:	c9                   	leave
    e92b:	c3                   	ret

000000000000e92c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    e92c:	55                   	push   %rbp
    e92d:	48 89 e5             	mov    %rsp,%rbp
    e930:	48 83 ec 10          	sub    $0x10,%rsp
    e934:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    e938:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e93c:	48 89 c7             	mov    %rax,%rdi
    e93f:	e8 52 ff ff ff       	call   e896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e944:	be 01 00 00 00       	mov    $0x1,%esi
    e949:	48 89 c7             	mov    %rax,%rdi
    e94c:	e8 4b 05 00 00       	call   ee9c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    e951:	c9                   	leave
    e952:	c3                   	ret
    e953:	90                   	nop

000000000000e954 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    e954:	55                   	push   %rbp
    e955:	48 89 e5             	mov    %rsp,%rbp
    e958:	41 56                	push   %r14
    e95a:	41 55                	push   %r13
    e95c:	41 54                	push   %r12
    e95e:	53                   	push   %rbx
    e95f:	48 83 ec 30          	sub    $0x30,%rsp
    e963:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e967:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e96b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e96f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    e973:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    e977:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e97b:	48 89 c6             	mov    %rax,%rsi
    e97e:	bf 48 00 00 00       	mov    $0x48,%edi
    e983:	e8 38 4f ff ff       	call   38c0 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    e988:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e98c:	48 89 c7             	mov    %rax,%rdi
    e98f:	e8 67 93 ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    e994:	49 89 c6             	mov    %rax,%r14
    e997:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e99b:	48 89 c7             	mov    %rax,%rdi
    e99e:	e8 74 ec ff ff       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    e9a3:	49 89 c5             	mov    %rax,%r13
    e9a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e9aa:	48 89 c7             	mov    %rax,%rdi
    e9ad:	e8 2d 93 ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    e9b2:	49 89 c4             	mov    %rax,%r12
    e9b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e9b9:	48 89 c7             	mov    %rax,%rdi
    e9bc:	e8 cf eb ff ff       	call   d590 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    e9c1:	48 89 c3             	mov    %rax,%rbx
    e9c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9c8:	48 89 c7             	mov    %rax,%rdi
    e9cb:	e8 c6 fe ff ff       	call   e896 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    e9d0:	4d 89 f0             	mov    %r14,%r8
    e9d3:	4c 89 e9             	mov    %r13,%rcx
    e9d6:	4c 89 e2             	mov    %r12,%rdx
    e9d9:	48 89 de             	mov    %rbx,%rsi
    e9dc:	48 89 c7             	mov    %rax,%rdi
    e9df:	e8 e2 04 00 00       	call   eec6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    e9e4:	eb 33                	jmp    ea19 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    e9e6:	48 89 c7             	mov    %rax,%rdi
    e9e9:	e8 e2 46 ff ff       	call   30d0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    e9ee:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e9f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9f6:	48 89 d6             	mov    %rdx,%rsi
    e9f9:	48 89 c7             	mov    %rax,%rdi
    e9fc:	e8 47 f6 ff ff       	call   e048 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    ea01:	e8 0a 4a ff ff       	call   3410 <__cxa_rethrow@plt>
	  __catch(...)
    ea06:	48 89 c3             	mov    %rax,%rbx
    ea09:	e8 72 4a ff ff       	call   3480 <__cxa_end_catch@plt>
    ea0e:	48 89 d8             	mov    %rbx,%rax
    ea11:	48 89 c7             	mov    %rax,%rdi
    ea14:	e8 b7 4a ff ff       	call   34d0 <_Unwind_Resume@plt>
	}
    ea19:	48 83 c4 30          	add    $0x30,%rsp
    ea1d:	5b                   	pop    %rbx
    ea1e:	41 5c                	pop    %r12
    ea20:	41 5d                	pop    %r13
    ea22:	41 5e                	pop    %r14
    ea24:	5d                   	pop    %rbp
    ea25:	c3                   	ret

000000000000ea26 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ea26:	55                   	push   %rbp
    ea27:	48 89 e5             	mov    %rsp,%rbp
    ea2a:	48 83 ec 20          	sub    $0x20,%rsp
    ea2e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    ea32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea36:	48 8b 50 18          	mov    0x18(%rax),%rdx
    ea3a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ea3e:	48 89 d6             	mov    %rdx,%rsi
    ea41:	48 89 c7             	mov    %rax,%rdi
    ea44:	e8 51 f1 ff ff       	call   db9a <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    ea49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea4d:	c9                   	leave
    ea4e:	c3                   	ret
    ea4f:	90                   	nop

000000000000ea50 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    ea50:	55                   	push   %rbp
    ea51:	48 89 e5             	mov    %rsp,%rbp
    ea54:	48 83 ec 20          	sub    $0x20,%rsp
    ea58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    ea64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ea68:	48 89 c7             	mov    %rax,%rdi
    ea6b:	e8 c2 04 00 00       	call   ef32 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    ea70:	48 8b 10             	mov    (%rax),%rdx
    ea73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea77:	48 89 10             	mov    %rdx,(%rax)
    ea7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea7e:	48 89 c7             	mov    %rax,%rdi
    ea81:	e8 00 b3 ff ff       	call   9d86 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    ea86:	48 8b 10             	mov    (%rax),%rdx
    ea89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea8d:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ea91:	90                   	nop
    ea92:	c9                   	leave
    ea93:	c3                   	ret

000000000000ea94 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    ea94:	55                   	push   %rbp
    ea95:	48 89 e5             	mov    %rsp,%rbp
    ea98:	48 83 ec 10          	sub    $0x10,%rsp
    ea9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    eaa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaa4:	48 83 c0 20          	add    $0x20,%rax
    eaa8:	48 89 c7             	mov    %rax,%rdi
    eaab:	e8 90 04 00 00       	call   ef40 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    eab0:	c9                   	leave
    eab1:	c3                   	ret

000000000000eab2 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      operator()(const _Pair& __x) const
    eab2:	55                   	push   %rbp
    eab3:	48 89 e5             	mov    %rsp,%rbp
    eab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    eabe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eac2:	5d                   	pop    %rbp
    eac3:	c3                   	ret

000000000000eac4 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    eac4:	55                   	push   %rbp
    eac5:	48 89 e5             	mov    %rsp,%rbp
    eac8:	48 83 ec 10          	sub    $0x10,%rsp
    eacc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ead0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ead4:	48 89 c7             	mov    %rax,%rdi
    ead7:	e8 7e 04 00 00       	call   ef5a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    eadc:	c9                   	leave
    eadd:	c3                   	ret

000000000000eade <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    eade:	55                   	push   %rbp
    eadf:	48 89 e5             	mov    %rsp,%rbp
    eae2:	48 83 ec 10          	sub    $0x10,%rsp
    eae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    eaee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eaf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaf6:	ba 00 00 00 00       	mov    $0x0,%edx
    eafb:	48 89 ce             	mov    %rcx,%rsi
    eafe:	48 89 c7             	mov    %rax,%rdi
    eb01:	e8 68 04 00 00       	call   ef6e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    eb06:	c9                   	leave
    eb07:	c3                   	ret

000000000000eb08 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    eb08:	55                   	push   %rbp
    eb09:	48 89 e5             	mov    %rsp,%rbp
    eb0c:	48 83 ec 20          	sub    $0x20,%rsp
    eb10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eb14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    eb18:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    eb1d:	74 40                	je     eb5f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    eb1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb23:	48 89 c7             	mov    %rax,%rdi
    eb26:	e8 a4 04 00 00       	call   efcf <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    eb2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    eb2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb33:	48 89 c7             	mov    %rax,%rdi
    eb36:	e8 a2 04 00 00       	call   efdd <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    eb3b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    eb40:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    eb44:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    eb48:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    eb4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb50:	48 89 ce             	mov    %rcx,%rsi
    eb53:	48 89 c7             	mov    %rax,%rdi
    eb56:	e8 a9 04 00 00       	call   f004 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    eb5b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    eb5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    eb63:	c9                   	leave
    eb64:	c3                   	ret
    eb65:	90                   	nop

000000000000eb66 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    eb66:	55                   	push   %rbp
    eb67:	48 89 e5             	mov    %rsp,%rbp
    eb6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    eb6e:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    eb75:	55 55 05 
      }
    eb78:	5d                   	pop    %rbp
    eb79:	c3                   	ret

000000000000eb7a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    eb7a:	55                   	push   %rbp
    eb7b:	48 89 e5             	mov    %rsp,%rbp
    eb7e:	48 83 ec 20          	sub    $0x20,%rsp
    eb82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eb8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    eb8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb92:	48 89 c7             	mov    %rax,%rdi
    eb95:	e8 cc ff ff ff       	call   eb66 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    eb9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    eb9e:	0f 92 c0             	setb   %al
    eba1:	0f b6 c0             	movzbl %al,%eax
    eba4:	48 85 c0             	test   %rax,%rax
    eba7:	0f 95 c0             	setne  %al
    ebaa:	84 c0                	test   %al,%al
    ebac:	74 1a                	je     ebc8 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ebae:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    ebb5:	aa aa 0a 
    ebb8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ebbc:	73 05                	jae    ebc3 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ebbe:	e8 4d 46 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ebc3:	e8 c8 44 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ebc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ebcc:	48 89 d0             	mov    %rdx,%rax
    ebcf:	48 01 c0             	add    %rax,%rax
    ebd2:	48 01 d0             	add    %rdx,%rax
    ebd5:	48 c1 e0 03          	shl    $0x3,%rax
    ebd9:	48 89 c7             	mov    %rax,%rdi
    ebdc:	e8 df 46 ff ff       	call   32c0 <_Znwm@plt>
    ebe1:	90                   	nop
      }
    ebe2:	c9                   	leave
    ebe3:	c3                   	ret

000000000000ebe4 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ebe4:	55                   	push   %rbp
    ebe5:	48 89 e5             	mov    %rsp,%rbp
    ebe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ebec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebf0:	5d                   	pop    %rbp
    ebf1:	c3                   	ret

000000000000ebf2 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ebf2:	55                   	push   %rbp
    ebf3:	48 89 e5             	mov    %rsp,%rbp
    ebf6:	48 83 ec 10          	sub    $0x10,%rsp
    ebfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ebfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec02:	48 89 c6             	mov    %rax,%rsi
    ec05:	bf 18 00 00 00       	mov    $0x18,%edi
    ec0a:	e8 b1 4c ff ff       	call   38c0 <_ZnwmPv>
    ec0f:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    ec15:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    ec1c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    ec23:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    ec2a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    ec31:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    ec38:	90                   	nop
    ec39:	c9                   	leave
    ec3a:	c3                   	ret

000000000000ec3b <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ec3b:	55                   	push   %rbp
    ec3c:	48 89 e5             	mov    %rsp,%rbp
    ec3f:	48 83 ec 20          	sub    $0x20,%rsp
    ec43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ec4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    ec4f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ec53:	48 89 c7             	mov    %rax,%rdi
    ec56:	e8 ed 03 00 00       	call   f048 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ec5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec5f:	48 89 c7             	mov    %rax,%rdi
    ec62:	e8 56 cf ff ff       	call   bbbd <_ZSt17__size_to_integerm>
    ec67:	48 89 c1             	mov    %rax,%rcx
    ec6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ec72:	48 89 ce             	mov    %rcx,%rsi
    ec75:	48 89 c7             	mov    %rax,%rdi
    ec78:	e8 d6 03 00 00       	call   f053 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ec7d:	c9                   	leave
    ec7e:	c3                   	ret
    ec7f:	90                   	nop

000000000000ec80 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    ec80:	55                   	push   %rbp
    ec81:	48 89 e5             	mov    %rsp,%rbp
    ec84:	48 83 ec 10          	sub    $0x10,%rsp
    ec88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    ec8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec90:	48 89 c7             	mov    %rax,%rdi
    ec93:	e8 02 00 00 00       	call   ec9a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    ec98:	c9                   	leave
    ec99:	c3                   	ret

000000000000ec9a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ec9a:	55                   	push   %rbp
    ec9b:	48 89 e5             	mov    %rsp,%rbp
    ec9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    eca2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    eca9:	ff ff 0f 
      }
    ecac:	5d                   	pop    %rbp
    ecad:	c3                   	ret

000000000000ecae <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    ecae:	55                   	push   %rbp
    ecaf:	48 89 e5             	mov    %rsp,%rbp
    ecb2:	53                   	push   %rbx
    ecb3:	48 83 ec 28          	sub    $0x28,%rsp
    ecb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ecbb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ecbf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    ecc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ecc7:	48 89 c7             	mov    %rax,%rdi
    ecca:	e8 f1 03 00 00       	call   f0c0 <_ZSt12__miter_baseIPKPKcET_S4_>
    eccf:	48 89 c3             	mov    %rax,%rbx
    ecd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ecd6:	48 89 c7             	mov    %rax,%rdi
    ecd9:	e8 e2 03 00 00       	call   f0c0 <_ZSt12__miter_baseIPKPKcET_S4_>
    ecde:	48 89 c1             	mov    %rax,%rcx
    ece1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ece5:	48 89 c2             	mov    %rax,%rdx
    ece8:	48 89 de             	mov    %rbx,%rsi
    eceb:	48 89 cf             	mov    %rcx,%rdi
    ecee:	e8 db 03 00 00       	call   f0ce <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    ecf3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ecf7:	c9                   	leave
    ecf8:	c3                   	ret
    ecf9:	90                   	nop

000000000000ecfa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ecfa:	55                   	push   %rbp
    ecfb:	48 89 e5             	mov    %rsp,%rbp
    ecfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ed02:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    ed09:	07 7e 00 
      }
    ed0c:	5d                   	pop    %rbp
    ed0d:	c3                   	ret

000000000000ed0e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ed0e:	55                   	push   %rbp
    ed0f:	48 89 e5             	mov    %rsp,%rbp
    ed12:	48 83 ec 20          	sub    $0x20,%rsp
    ed16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ed1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ed22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed26:	48 89 c7             	mov    %rax,%rdi
    ed29:	e8 cc ff ff ff       	call   ecfa <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    ed2e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ed32:	0f 92 c0             	setb   %al
    ed35:	0f b6 c0             	movzbl %al,%eax
    ed38:	48 85 c0             	test   %rax,%rax
    ed3b:	0f 95 c0             	setne  %al
    ed3e:	84 c0                	test   %al,%al
    ed40:	74 1a                	je     ed5c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ed42:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    ed49:	0f fc 00 
    ed4c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ed50:	73 05                	jae    ed57 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ed52:	e8 b9 44 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ed57:	e8 34 43 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ed5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ed60:	48 89 d0             	mov    %rdx,%rax
    ed63:	48 c1 e0 06          	shl    $0x6,%rax
    ed67:	48 01 d0             	add    %rdx,%rax
    ed6a:	48 c1 e0 02          	shl    $0x2,%rax
    ed6e:	48 89 c7             	mov    %rax,%rdi
    ed71:	e8 4a 45 ff ff       	call   32c0 <_Znwm@plt>
    ed76:	90                   	nop
      }
    ed77:	c9                   	leave
    ed78:	c3                   	ret

000000000000ed79 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ed79:	55                   	push   %rbp
    ed7a:	48 89 e5             	mov    %rsp,%rbp
    ed7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ed81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed85:	5d                   	pop    %rbp
    ed86:	c3                   	ret

000000000000ed87 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ed87:	55                   	push   %rbp
    ed88:	48 89 e5             	mov    %rsp,%rbp
    ed8b:	48 83 ec 10          	sub    $0x10,%rsp
    ed8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ed93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed97:	48 89 c6             	mov    %rax,%rsi
    ed9a:	bf 04 01 00 00       	mov    $0x104,%edi
    ed9f:	e8 1c 4b ff ff       	call   38c0 <_ZnwmPv>
    eda4:	b9 04 01 00 00       	mov    $0x104,%ecx
    eda9:	be 00 00 00 00       	mov    $0x0,%esi
    edae:	48 89 30             	mov    %rsi,(%rax)
    edb1:	89 ca                	mov    %ecx,%edx
    edb3:	48 01 c2             	add    %rax,%rdx
    edb6:	48 83 c2 08          	add    $0x8,%rdx
    edba:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    edbe:	48 8d 50 08          	lea    0x8(%rax),%rdx
    edc2:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    edc6:	48 29 d0             	sub    %rdx,%rax
    edc9:	01 c1                	add    %eax,%ecx
    edcb:	83 e1 f8             	and    $0xfffffff8,%ecx
    edce:	89 c8                	mov    %ecx,%eax
    edd0:	c1 e8 03             	shr    $0x3,%eax
    edd3:	89 c1                	mov    %eax,%ecx
    edd5:	48 89 d7             	mov    %rdx,%rdi
    edd8:	48 89 f0             	mov    %rsi,%rax
    eddb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    edde:	90                   	nop
    eddf:	c9                   	leave
    ede0:	c3                   	ret

000000000000ede1 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ede1:	55                   	push   %rbp
    ede2:	48 89 e5             	mov    %rsp,%rbp
    ede5:	48 83 ec 20          	sub    $0x20,%rsp
    ede9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eded:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    edf1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    edf5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    edf9:	48 89 c7             	mov    %rax,%rdi
    edfc:	e8 37 03 00 00       	call   f138 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ee01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee05:	48 89 c7             	mov    %rax,%rdi
    ee08:	e8 b0 cd ff ff       	call   bbbd <_ZSt17__size_to_integerm>
    ee0d:	48 89 c1             	mov    %rax,%rcx
    ee10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee18:	48 89 ce             	mov    %rcx,%rsi
    ee1b:	48 89 c7             	mov    %rax,%rdi
    ee1e:	e8 20 03 00 00       	call   f143 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ee23:	c9                   	leave
    ee24:	c3                   	ret
    ee25:	90                   	nop

000000000000ee26 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    ee26:	55                   	push   %rbp
    ee27:	48 89 e5             	mov    %rsp,%rbp
    ee2a:	48 83 ec 10          	sub    $0x10,%rsp
    ee2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee36:	48 89 c7             	mov    %rax,%rdi
    ee39:	e8 22 43 ff ff       	call   3160 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    ee3e:	90                   	nop
    ee3f:	c9                   	leave
    ee40:	c3                   	ret
    ee41:	90                   	nop

000000000000ee42 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    ee42:	55                   	push   %rbp
    ee43:	48 89 e5             	mov    %rsp,%rbp
    ee46:	48 83 ec 10          	sub    $0x10,%rsp
    ee4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    ee52:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee56:	48 89 c7             	mov    %rax,%rdi
    ee59:	e8 c8 ff ff ff       	call   ee26 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    ee5e:	90                   	nop
    ee5f:	c9                   	leave
    ee60:	c3                   	ret
    ee61:	90                   	nop

000000000000ee62 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ee62:	55                   	push   %rbp
    ee63:	48 89 e5             	mov    %rsp,%rbp
    ee66:	48 83 ec 20          	sub    $0x20,%rsp
    ee6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ee76:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee7a:	48 89 d0             	mov    %rdx,%rax
    ee7d:	48 c1 e0 03          	shl    $0x3,%rax
    ee81:	48 01 d0             	add    %rdx,%rax
    ee84:	48 c1 e0 03          	shl    $0x3,%rax
    ee88:	48 89 c2             	mov    %rax,%rdx
    ee8b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ee8f:	48 89 d6             	mov    %rdx,%rsi
    ee92:	48 89 c7             	mov    %rax,%rdi
    ee95:	e8 36 44 ff ff       	call   32d0 <_ZdlPvm@plt>
      }
    ee9a:	c9                   	leave
    ee9b:	c3                   	ret

000000000000ee9c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    ee9c:	55                   	push   %rbp
    ee9d:	48 89 e5             	mov    %rsp,%rbp
    eea0:	48 83 ec 10          	sub    $0x10,%rsp
    eea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eea8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    eeac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eeb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eeb4:	ba 00 00 00 00       	mov    $0x0,%edx
    eeb9:	48 89 ce             	mov    %rcx,%rsi
    eebc:	48 89 c7             	mov    %rax,%rdi
    eebf:	e8 ee 02 00 00       	call   f1b2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    eec4:	c9                   	leave
    eec5:	c3                   	ret

000000000000eec6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    eec6:	55                   	push   %rbp
    eec7:	48 89 e5             	mov    %rsp,%rbp
    eeca:	41 54                	push   %r12
    eecc:	53                   	push   %rbx
    eecd:	48 83 ec 30          	sub    $0x30,%rsp
    eed1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eed5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    eed9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    eedd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    eee1:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    eee5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eee9:	48 89 c7             	mov    %rax,%rdi
    eeec:	e8 0a 8e ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    eef1:	49 89 c4             	mov    %rax,%r12
    eef4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eef8:	48 89 c7             	mov    %rax,%rdi
    eefb:	e8 17 e7 ff ff       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    ef00:	48 89 c3             	mov    %rax,%rbx
    ef03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef07:	48 89 c7             	mov    %rax,%rdi
    ef0a:	e8 d0 8d ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    ef0f:	48 89 c2             	mov    %rax,%rdx
    ef12:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    ef16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ef1a:	4d 89 e0             	mov    %r12,%r8
    ef1d:	48 89 d9             	mov    %rbx,%rcx
    ef20:	48 89 c7             	mov    %rax,%rdi
    ef23:	e8 1c 03 00 00       	call   f244 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    ef28:	90                   	nop
    ef29:	48 83 c4 30          	add    $0x30,%rsp
    ef2d:	5b                   	pop    %rbx
    ef2e:	41 5c                	pop    %r12
    ef30:	5d                   	pop    %rbp
    ef31:	c3                   	ret

000000000000ef32 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    ef32:	55                   	push   %rbp
    ef33:	48 89 e5             	mov    %rsp,%rbp
    ef36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    ef3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef3e:	5d                   	pop    %rbp
    ef3f:	c3                   	ret

000000000000ef40 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      _M_ptr() const noexcept
    ef40:	55                   	push   %rbp
    ef41:	48 89 e5             	mov    %rsp,%rbp
    ef44:	48 83 ec 10          	sub    $0x10,%rsp
    ef48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    ef4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef50:	48 89 c7             	mov    %rax,%rdi
    ef53:	e8 9c 03 00 00       	call   f2f4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    ef58:	c9                   	leave
    ef59:	c3                   	ret

000000000000ef5a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ef5a:	55                   	push   %rbp
    ef5b:	48 89 e5             	mov    %rsp,%rbp
    ef5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ef62:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ef69:	ff ff 0f 
      }
    ef6c:	5d                   	pop    %rbp
    ef6d:	c3                   	ret

000000000000ef6e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ef6e:	55                   	push   %rbp
    ef6f:	48 89 e5             	mov    %rsp,%rbp
    ef72:	48 83 ec 20          	sub    $0x20,%rsp
    ef76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ef82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef86:	48 89 c7             	mov    %rax,%rdi
    ef89:	e8 cc ff ff ff       	call   ef5a <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    ef8e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ef92:	0f 92 c0             	setb   %al
    ef95:	0f b6 c0             	movzbl %al,%eax
    ef98:	48 85 c0             	test   %rax,%rax
    ef9b:	0f 95 c0             	setne  %al
    ef9e:	84 c0                	test   %al,%al
    efa0:	74 1a                	je     efbc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    efa2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    efa9:	ff ff 1f 
    efac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    efb0:	73 05                	jae    efb7 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    efb2:	e8 59 42 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    efb7:	e8 d4 40 ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    efbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    efc0:	48 c1 e0 03          	shl    $0x3,%rax
    efc4:	48 89 c7             	mov    %rax,%rdi
    efc7:	e8 f4 42 ff ff       	call   32c0 <_Znwm@plt>
    efcc:	90                   	nop
      }
    efcd:	c9                   	leave
    efce:	c3                   	ret

000000000000efcf <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    efcf:	55                   	push   %rbp
    efd0:	48 89 e5             	mov    %rsp,%rbp
    efd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    efd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efdb:	5d                   	pop    %rbp
    efdc:	c3                   	ret

000000000000efdd <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    efdd:	55                   	push   %rbp
    efde:	48 89 e5             	mov    %rsp,%rbp
    efe1:	48 83 ec 10          	sub    $0x10,%rsp
    efe5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    efe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efed:	48 89 c6             	mov    %rax,%rsi
    eff0:	bf 08 00 00 00       	mov    $0x8,%edi
    eff5:	e8 c6 48 ff ff       	call   38c0 <_ZnwmPv>
    effa:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    f001:	90                   	nop
    f002:	c9                   	leave
    f003:	c3                   	ret

000000000000f004 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    f004:	55                   	push   %rbp
    f005:	48 89 e5             	mov    %rsp,%rbp
    f008:	48 83 ec 20          	sub    $0x20,%rsp
    f00c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f014:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    f018:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f01c:	48 89 c7             	mov    %rax,%rdi
    f01f:	e8 de 02 00 00       	call   f302 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    f024:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f028:	48 89 c7             	mov    %rax,%rdi
    f02b:	e8 8d cb ff ff       	call   bbbd <_ZSt17__size_to_integerm>
    f030:	48 89 c1             	mov    %rax,%rcx
    f033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f037:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f03b:	48 89 ce             	mov    %rcx,%rsi
    f03e:	48 89 c7             	mov    %rax,%rdi
    f041:	e8 c7 02 00 00       	call   f30d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    f046:	c9                   	leave
    f047:	c3                   	ret

000000000000f048 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    f048:	55                   	push   %rbp
    f049:	48 89 e5             	mov    %rsp,%rbp
    f04c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f050:	90                   	nop
    f051:	5d                   	pop    %rbp
    f052:	c3                   	ret

000000000000f053 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    f053:	55                   	push   %rbp
    f054:	48 89 e5             	mov    %rsp,%rbp
    f057:	48 83 ec 20          	sub    $0x20,%rsp
    f05b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f05f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f063:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    f067:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f06c:	75 06                	jne    f074 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    f06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f072:	eb 4a                	jmp    f0be <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    f074:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f078:	48 89 d0             	mov    %rdx,%rax
    f07b:	48 01 c0             	add    %rax,%rax
    f07e:	48 01 d0             	add    %rdx,%rax
    f081:	48 c1 e0 03          	shl    $0x3,%rax
    f085:	48 89 c2             	mov    %rax,%rdx
    f088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f08c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f090:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f098:	48 89 ce             	mov    %rcx,%rsi
    f09b:	48 89 c7             	mov    %rax,%rdi
    f09e:	e8 c7 02 00 00       	call   f36a <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    f0a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f0a7:	48 89 d0             	mov    %rdx,%rax
    f0aa:	48 01 c0             	add    %rax,%rax
    f0ad:	48 01 d0             	add    %rdx,%rax
    f0b0:	48 c1 e0 03          	shl    $0x3,%rax
    f0b4:	48 89 c2             	mov    %rax,%rdx
    f0b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0bb:	48 01 d0             	add    %rdx,%rax
    }
    f0be:	c9                   	leave
    f0bf:	c3                   	ret

000000000000f0c0 <_ZSt12__miter_baseIPKPKcET_S4_>:
    __miter_base(_Iterator __it)
    f0c0:	55                   	push   %rbp
    f0c1:	48 89 e5             	mov    %rsp,%rbp
    f0c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f0c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0cc:	5d                   	pop    %rbp
    f0cd:	c3                   	ret

000000000000f0ce <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    f0ce:	55                   	push   %rbp
    f0cf:	48 89 e5             	mov    %rsp,%rbp
    f0d2:	41 54                	push   %r12
    f0d4:	53                   	push   %rbx
    f0d5:	48 83 ec 20          	sub    $0x20,%rsp
    f0d9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f0dd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f0e1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    f0e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0e9:	48 89 c7             	mov    %rax,%rdi
    f0ec:	e8 b5 02 00 00       	call   f3a6 <_ZSt12__niter_baseIPPKcET_S3_>
    f0f1:	49 89 c4             	mov    %rax,%r12
    f0f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f0f8:	48 89 c7             	mov    %rax,%rdi
    f0fb:	e8 98 02 00 00       	call   f398 <_ZSt12__niter_baseIPKPKcET_S4_>
    f100:	48 89 c3             	mov    %rax,%rbx
    f103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f107:	48 89 c7             	mov    %rax,%rdi
    f10a:	e8 89 02 00 00       	call   f398 <_ZSt12__niter_baseIPKPKcET_S4_>
    f10f:	4c 89 e2             	mov    %r12,%rdx
    f112:	48 89 de             	mov    %rbx,%rsi
    f115:	48 89 c7             	mov    %rax,%rdi
    f118:	e8 97 02 00 00       	call   f3b4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f11d:	48 89 c2             	mov    %rax,%rdx
    f120:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f124:	48 89 d6             	mov    %rdx,%rsi
    f127:	48 89 c7             	mov    %rax,%rdi
    f12a:	e8 b2 02 00 00       	call   f3e1 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    f12f:	48 83 c4 20          	add    $0x20,%rsp
    f133:	5b                   	pop    %rbx
    f134:	41 5c                	pop    %r12
    f136:	5d                   	pop    %rbp
    f137:	c3                   	ret

000000000000f138 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    f138:	55                   	push   %rbp
    f139:	48 89 e5             	mov    %rsp,%rbp
    f13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f140:	90                   	nop
    f141:	5d                   	pop    %rbp
    f142:	c3                   	ret

000000000000f143 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    f143:	55                   	push   %rbp
    f144:	48 89 e5             	mov    %rsp,%rbp
    f147:	48 83 ec 20          	sub    $0x20,%rsp
    f14b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f14f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f153:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    f157:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f15c:	75 06                	jne    f164 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    f15e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f162:	eb 4c                	jmp    f1b0 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    f164:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f168:	48 89 d0             	mov    %rdx,%rax
    f16b:	48 c1 e0 06          	shl    $0x6,%rax
    f16f:	48 01 d0             	add    %rdx,%rax
    f172:	48 c1 e0 02          	shl    $0x2,%rax
    f176:	48 89 c2             	mov    %rax,%rdx
    f179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f17d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f181:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f189:	48 89 ce             	mov    %rcx,%rsi
    f18c:	48 89 c7             	mov    %rax,%rdi
    f18f:	e8 5f 02 00 00       	call   f3f3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    f194:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f198:	48 89 d0             	mov    %rdx,%rax
    f19b:	48 c1 e0 06          	shl    $0x6,%rax
    f19f:	48 01 d0             	add    %rdx,%rax
    f1a2:	48 c1 e0 02          	shl    $0x2,%rax
    f1a6:	48 89 c2             	mov    %rax,%rdx
    f1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1ad:	48 01 d0             	add    %rdx,%rax
    }
    f1b0:	c9                   	leave
    f1b1:	c3                   	ret

000000000000f1b2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    f1b2:	55                   	push   %rbp
    f1b3:	48 89 e5             	mov    %rsp,%rbp
    f1b6:	48 83 ec 20          	sub    $0x20,%rsp
    f1ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    f1c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1ca:	48 89 c7             	mov    %rax,%rdi
    f1cd:	e8 50 02 00 00       	call   f422 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    f1d2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f1d6:	0f 92 c0             	setb   %al
    f1d9:	0f b6 c0             	movzbl %al,%eax
    f1dc:	48 85 c0             	test   %rax,%rax
    f1df:	0f 95 c0             	setne  %al
    f1e2:	84 c0                	test   %al,%al
    f1e4:	74 1a                	je     f200 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    f1e6:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    f1ed:	38 8e 03 
    f1f0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f1f4:	73 05                	jae    f1fb <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    f1f6:	e8 15 40 ff ff       	call   3210 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    f1fb:	e8 90 3e ff ff       	call   3090 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    f200:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f204:	48 89 d0             	mov    %rdx,%rax
    f207:	48 c1 e0 03          	shl    $0x3,%rax
    f20b:	48 01 d0             	add    %rdx,%rax
    f20e:	48 c1 e0 03          	shl    $0x3,%rax
    f212:	48 89 c7             	mov    %rax,%rdi
    f215:	e8 a6 40 ff ff       	call   32c0 <_Znwm@plt>
    f21a:	90                   	nop
      }
    f21b:	c9                   	leave
    f21c:	c3                   	ret
    f21d:	90                   	nop

000000000000f21e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    f21e:	55                   	push   %rbp
    f21f:	48 89 e5             	mov    %rsp,%rbp
    f222:	48 83 ec 10          	sub    $0x10,%rsp
    f226:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f22a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f232:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f236:	48 89 d6             	mov    %rdx,%rsi
    f239:	48 89 c7             	mov    %rax,%rdi
    f23c:	e8 f5 01 00 00       	call   f436 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f241:	90                   	nop
    f242:	c9                   	leave
    f243:	c3                   	ret

000000000000f244 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    f244:	55                   	push   %rbp
    f245:	48 89 e5             	mov    %rsp,%rbp
    f248:	41 56                	push   %r14
    f24a:	41 55                	push   %r13
    f24c:	41 54                	push   %r12
    f24e:	53                   	push   %rbx
    f24f:	48 83 ec 40          	sub    $0x40,%rsp
    f253:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f257:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    f25b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    f25f:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    f263:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    f267:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    f26b:	48 89 de             	mov    %rbx,%rsi
    f26e:	bf 28 00 00 00       	mov    $0x28,%edi
    f273:	e8 48 46 ff ff       	call   38c0 <_ZnwmPv>
    f278:	49 89 c4             	mov    %rax,%r12
    f27b:	41 be 01 00 00 00    	mov    $0x1,%r14d
    f281:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f285:	48 89 c7             	mov    %rax,%rdi
    f288:	e8 6e 8a ff ff       	call   7cfb <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    f28d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f291:	48 89 c7             	mov    %rax,%rdi
    f294:	e8 7e e3 ff ff       	call   d617 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    f299:	48 89 c2             	mov    %rax,%rdx
    f29c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f2a0:	48 89 d6             	mov    %rdx,%rsi
    f2a3:	48 89 c7             	mov    %rax,%rdi
    f2a6:	e8 73 ff ff ff       	call   f21e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    f2ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2af:	48 89 c7             	mov    %rax,%rdi
    f2b2:	e8 28 8a ff ff       	call   7cdf <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    f2b7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    f2bb:	48 89 c6             	mov    %rax,%rsi
    f2be:	4c 89 e7             	mov    %r12,%rdi
    f2c1:	e8 8e 01 00 00       	call   f454 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    f2c6:	eb 1e                	jmp    f2e6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    f2c8:	49 89 c5             	mov    %rax,%r13
    f2cb:	45 84 f6             	test   %r14b,%r14b
    f2ce:	74 0b                	je     f2db <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    f2d0:	48 89 de             	mov    %rbx,%rsi
    f2d3:	4c 89 e7             	mov    %r12,%rdi
    f2d6:	e8 f7 45 ff ff       	call   38d2 <_ZdlPvS_>
    f2db:	4c 89 e8             	mov    %r13,%rax
    f2de:	48 89 c7             	mov    %rax,%rdi
    f2e1:	e8 ea 41 ff ff       	call   34d0 <_Unwind_Resume@plt>
    f2e6:	48 83 c4 40          	add    $0x40,%rsp
    f2ea:	5b                   	pop    %rbx
    f2eb:	41 5c                	pop    %r12
    f2ed:	41 5d                	pop    %r13
    f2ef:	41 5e                	pop    %r14
    f2f1:	5d                   	pop    %rbp
    f2f2:	c3                   	ret
    f2f3:	90                   	nop

000000000000f2f4 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    f2f4:	55                   	push   %rbp
    f2f5:	48 89 e5             	mov    %rsp,%rbp
    f2f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    f2fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f300:	5d                   	pop    %rbp
    f301:	c3                   	ret

000000000000f302 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    f302:	55                   	push   %rbp
    f303:	48 89 e5             	mov    %rsp,%rbp
    f306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    f30a:	90                   	nop
    f30b:	5d                   	pop    %rbp
    f30c:	c3                   	ret

000000000000f30d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    f30d:	55                   	push   %rbp
    f30e:	48 89 e5             	mov    %rsp,%rbp
    f311:	48 83 ec 20          	sub    $0x20,%rsp
    f315:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f319:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f31d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    f321:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f326:	75 06                	jne    f32e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    f328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f32c:	eb 3a                	jmp    f368 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    f32e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f332:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f339:	00 
    f33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f33e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    f342:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f34a:	48 89 ce             	mov    %rcx,%rsi
    f34d:	48 89 c7             	mov    %rax,%rdi
    f350:	e8 29 01 00 00       	call   f47e <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    f355:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f359:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f360:	00 
    f361:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f365:	48 01 d0             	add    %rdx,%rax
    }
    f368:	c9                   	leave
    f369:	c3                   	ret

000000000000f36a <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f36a:	55                   	push   %rbp
    f36b:	48 89 e5             	mov    %rsp,%rbp
    f36e:	48 83 ec 20          	sub    $0x20,%rsp
    f372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f376:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f37a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f37e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f382:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f38a:	48 89 ce             	mov    %rcx,%rsi
    f38d:	48 89 c7             	mov    %rax,%rdi
    f390:	e8 17 01 00 00       	call   f4ac <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f395:	90                   	nop
    f396:	c9                   	leave
    f397:	c3                   	ret

000000000000f398 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    f398:	55                   	push   %rbp
    f399:	48 89 e5             	mov    %rsp,%rbp
    f39c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f3a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3a4:	5d                   	pop    %rbp
    f3a5:	c3                   	ret

000000000000f3a6 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    f3a6:	55                   	push   %rbp
    f3a7:	48 89 e5             	mov    %rsp,%rbp
    f3aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    f3ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3b2:	5d                   	pop    %rbp
    f3b3:	c3                   	ret

000000000000f3b4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    f3b4:	55                   	push   %rbp
    f3b5:	48 89 e5             	mov    %rsp,%rbp
    f3b8:	48 83 ec 20          	sub    $0x20,%rsp
    f3bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f3c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    f3c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f3cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f3d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f3d4:	48 89 ce             	mov    %rcx,%rsi
    f3d7:	48 89 c7             	mov    %rax,%rdi
    f3da:	e8 10 01 00 00       	call   f4ef <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    f3df:	c9                   	leave
    f3e0:	c3                   	ret

000000000000f3e1 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    f3e1:	55                   	push   %rbp
    f3e2:	48 89 e5             	mov    %rsp,%rbp
    f3e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    f3ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f3f1:	5d                   	pop    %rbp
    f3f2:	c3                   	ret

000000000000f3f3 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f3f3:	55                   	push   %rbp
    f3f4:	48 89 e5             	mov    %rsp,%rbp
    f3f7:	48 83 ec 20          	sub    $0x20,%rsp
    f3fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f3ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f403:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f407:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f40b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f40f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f413:	48 89 ce             	mov    %rcx,%rsi
    f416:	48 89 c7             	mov    %rax,%rdi
    f419:	e8 fe 00 00 00       	call   f51c <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    f41e:	90                   	nop
    f41f:	c9                   	leave
    f420:	c3                   	ret
    f421:	90                   	nop

000000000000f422 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    f422:	55                   	push   %rbp
    f423:	48 89 e5             	mov    %rsp,%rbp
    f426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    f42a:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    f431:	1c c7 01 
      }
    f434:	5d                   	pop    %rbp
    f435:	c3                   	ret

000000000000f436 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    f436:	55                   	push   %rbp
    f437:	48 89 e5             	mov    %rsp,%rbp
    f43a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f43e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    f442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f446:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f44a:	48 8b 12             	mov    (%rdx),%rdx
    f44d:	48 89 10             	mov    %rdx,(%rax)
      { }
    f450:	90                   	nop
    f451:	5d                   	pop    %rbp
    f452:	c3                   	ret
    f453:	90                   	nop

000000000000f454 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
      pair<_T1, _T2>::
    f454:	55                   	push   %rbp
    f455:	48 89 e5             	mov    %rsp,%rbp
    f458:	48 83 ec 20          	sub    $0x20,%rsp
    f45c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f460:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    f464:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    f468:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f470:	48 89 ce             	mov    %rcx,%rsi
    f473:	48 89 c7             	mov    %rax,%rdi
    f476:	e8 19 01 00 00       	call   f594 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    f47b:	90                   	nop
    f47c:	c9                   	leave
    f47d:	c3                   	ret

000000000000f47e <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    f47e:	55                   	push   %rbp
    f47f:	48 89 e5             	mov    %rsp,%rbp
    f482:	48 83 ec 20          	sub    $0x20,%rsp
    f486:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f48a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f48e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    f492:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f496:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f49a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f49e:	48 89 ce             	mov    %rcx,%rsi
    f4a1:	48 89 c7             	mov    %rax,%rdi
    f4a4:	e8 35 01 00 00       	call   f5de <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    f4a9:	90                   	nop
    f4aa:	c9                   	leave
    f4ab:	c3                   	ret

000000000000f4ac <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f4ac:	55                   	push   %rbp
    f4ad:	48 89 e5             	mov    %rsp,%rbp
    f4b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f4bc:	eb 23                	jmp    f4e1 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    f4be:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    f4c2:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    f4c6:	48 8b 06             	mov    (%rsi),%rax
    f4c9:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    f4cd:	48 89 01             	mov    %rax,(%rcx)
    f4d0:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    f4d4:	48 8b 46 10          	mov    0x10(%rsi),%rax
    f4d8:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    f4dc:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    f4e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f4e5:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f4e9:	75 d3                	jne    f4be <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f4eb:	90                   	nop
    f4ec:	90                   	nop
    f4ed:	5d                   	pop    %rbp
    f4ee:	c3                   	ret

000000000000f4ef <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    f4ef:	55                   	push   %rbp
    f4f0:	48 89 e5             	mov    %rsp,%rbp
    f4f3:	48 83 ec 20          	sub    $0x20,%rsp
    f4f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    f503:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f507:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f50b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f50f:	48 89 ce             	mov    %rcx,%rsi
    f512:	48 89 c7             	mov    %rax,%rdi
    f515:	e8 ff 00 00 00       	call   f619 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    f51a:	c9                   	leave
    f51b:	c3                   	ret

000000000000f51c <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f51c:	55                   	push   %rbp
    f51d:	48 89 e5             	mov    %rsp,%rbp
    f520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f524:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f528:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    f52c:	eb 58                	jmp    f586 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    f52e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f532:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f536:	b9 04 01 00 00       	mov    $0x104,%ecx
    f53b:	48 8b 32             	mov    (%rdx),%rsi
    f53e:	48 89 30             	mov    %rsi,(%rax)
    f541:	89 ce                	mov    %ecx,%esi
    f543:	48 01 c6             	add    %rax,%rsi
    f546:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    f54a:	89 ce                	mov    %ecx,%esi
    f54c:	48 01 d6             	add    %rdx,%rsi
    f54f:	48 83 c6 08          	add    $0x8,%rsi
    f553:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    f557:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    f55b:	48 8d 78 08          	lea    0x8(%rax),%rdi
    f55f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    f563:	48 29 f8             	sub    %rdi,%rax
    f566:	48 29 c2             	sub    %rax,%rdx
    f569:	01 c1                	add    %eax,%ecx
    f56b:	83 e1 f8             	and    $0xfffffff8,%ecx
    f56e:	89 c8                	mov    %ecx,%eax
    f570:	c1 e8 03             	shr    $0x3,%eax
    f573:	89 c0                	mov    %eax,%eax
    f575:	48 89 d6             	mov    %rdx,%rsi
    f578:	48 89 c1             	mov    %rax,%rcx
    f57b:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    f57e:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    f585:	00 
    f586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f58a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    f58e:	75 9e                	jne    f52e <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    f590:	90                   	nop
    f591:	90                   	nop
    f592:	5d                   	pop    %rbp
    f593:	c3                   	ret

000000000000f594 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:
      pair<_T1, _T2>::
    f594:	55                   	push   %rbp
    f595:	48 89 e5             	mov    %rsp,%rbp
    f598:	53                   	push   %rbx
    f599:	48 83 ec 28          	sub    $0x28,%rsp
    f59d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f5a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f5a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    f5a9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    f5ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f5b1:	48 89 c7             	mov    %rax,%rdi
    f5b4:	e8 bf 00 00 00       	call   f678 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    f5b9:	48 89 c7             	mov    %rax,%rdi
    f5bc:	e8 d1 00 00 00       	call   f692 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    f5c1:	48 89 c6             	mov    %rax,%rsi
    f5c4:	48 89 df             	mov    %rbx,%rdi
    f5c7:	e8 84 3b ff ff       	call   3150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    f5cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5d0:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    f5d7:	90                   	nop
    f5d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f5dc:	c9                   	leave
    f5dd:	c3                   	ret

000000000000f5de <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    f5de:	55                   	push   %rbp
    f5df:	48 89 e5             	mov    %rsp,%rbp
    f5e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f5e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f5ea:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    f5ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f5f2:	48 8b 00             	mov    (%rax),%rax
    f5f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    f5f9:	eb 10                	jmp    f60b <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    f5fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f603:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    f606:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    f60b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f60f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f613:	75 e6                	jne    f5fb <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    f615:	90                   	nop
    f616:	90                   	nop
    f617:	5d                   	pop    %rbp
    f618:	c3                   	ret

000000000000f619 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    f619:	55                   	push   %rbp
    f61a:	48 89 e5             	mov    %rsp,%rbp
    f61d:	48 83 ec 30          	sub    $0x30,%rsp
    f621:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f625:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f629:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    f62d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f631:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f635:	48 c1 f8 03          	sar    $0x3,%rax
    f639:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    f63d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f642:	74 1f                	je     f663 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    f644:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f648:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f64f:	00 
    f650:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    f654:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f658:	48 89 ce             	mov    %rcx,%rsi
    f65b:	48 89 c7             	mov    %rax,%rdi
    f65e:	e8 0d 3e ff ff       	call   3470 <memmove@plt>
	  return __result + _Num;
    f663:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f667:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f66e:	00 
    f66f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f673:	48 01 d0             	add    %rdx,%rax
	}
    f676:	c9                   	leave
    f677:	c3                   	ret

000000000000f678 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    f678:	55                   	push   %rbp
    f679:	48 89 e5             	mov    %rsp,%rbp
    f67c:	48 83 ec 10          	sub    $0x10,%rsp
    f680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    f684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f688:	48 89 c7             	mov    %rax,%rdi
    f68b:	e8 10 00 00 00       	call   f6a0 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    f690:	c9                   	leave
    f691:	c3                   	ret

000000000000f692 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    f692:	55                   	push   %rbp
    f693:	48 89 e5             	mov    %rsp,%rbp
    f696:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    f69a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f69e:	5d                   	pop    %rbp
    f69f:	c3                   	ret

000000000000f6a0 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    f6a0:	55                   	push   %rbp
    f6a1:	48 89 e5             	mov    %rsp,%rbp
    f6a4:	48 83 ec 10          	sub    $0x10,%rsp
    f6a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    f6ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6b0:	48 89 c7             	mov    %rax,%rdi
    f6b3:	e8 02 00 00 00       	call   f6ba <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    f6b8:	c9                   	leave
    f6b9:	c3                   	ret

000000000000f6ba <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    f6ba:	55                   	push   %rbp
    f6bb:	48 89 e5             	mov    %rsp,%rbp
    f6be:	48 83 ec 10          	sub    $0x10,%rsp
    f6c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6ca:	48 89 c7             	mov    %rax,%rdi
    f6cd:	e8 02 00 00 00       	call   f6d4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    f6d2:	c9                   	leave
    f6d3:	c3                   	ret

000000000000f6d4 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    f6d4:	55                   	push   %rbp
    f6d5:	48 89 e5             	mov    %rsp,%rbp
    f6d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f6e0:	48 8b 00             	mov    (%rax),%rax
    f6e3:	5d                   	pop    %rbp
    f6e4:	c3                   	ret
    f6e5:	90                   	nop

000000000000f6e6 <_ZN4neko7Context13createContextEv>:

namespace neko {

static std::atomic<u32> contextCount = 0;

void Context::createContext() {
    f6e6:	55                   	push   %rbp
    f6e7:	48 89 e5             	mov    %rsp,%rbp
    f6ea:	41 54                	push   %r12
    f6ec:	53                   	push   %rbx
  if (glfwInit() != GLFW_TRUE) {
    f6ed:	e8 7e 3c ff ff       	call   3370 <glfwInit@plt>
    f6f2:	83 f8 01             	cmp    $0x1,%eax
    f6f5:	0f 95 c0             	setne  %al
    f6f8:	84 c0                	test   %al,%al
    f6fa:	74 3b                	je     f737 <_ZN4neko7Context13createContextEv+0x51>
    throw std::runtime_error(
        "A bug or configuration error in GLFW, the underlying operating "
        "system or its drivers, or a lack of required resources.");
    f6fc:	bf 10 00 00 00       	mov    $0x10,%edi
    f701:	e8 0a 3a ff ff       	call   3110 <__cxa_allocate_exception@plt>
    f706:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    f709:	48 8d 05 c0 44 00 00 	lea    0x44c0(%rip),%rax        # 13bd0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    f710:	48 89 c6             	mov    %rax,%rsi
    f713:	48 89 df             	mov    %rbx,%rdi
    f716:	e8 95 39 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
        "system or its drivers, or a lack of required resources.");
    f71b:	48 8b 05 96 18 01 00 	mov    0x11896(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f722:	48 89 c2             	mov    %rax,%rdx
    f725:	48 8d 05 14 16 01 00 	lea    0x11614(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f72c:	48 89 c6             	mov    %rax,%rsi
    f72f:	48 89 df             	mov    %rbx,%rdi
    f732:	e8 79 3d ff ff       	call   34b0 <__cxa_throw@plt>
  }
  ++contextCount;
    f737:	48 8d 05 ba 1d 01 00 	lea    0x11dba(%rip),%rax        # 214f8 <_ZN4nekoL12contextCountE>
    f73e:	48 89 c7             	mov    %rax,%rdi
    f741:	e8 98 01 00 00       	call   f8de <_ZNSt13__atomic_baseIjEppEv>
}
    f746:	eb 16                	jmp    f75e <_ZN4neko7Context13createContextEv+0x78>
        "system or its drivers, or a lack of required resources.");
    f748:	49 89 c4             	mov    %rax,%r12
    f74b:	48 89 df             	mov    %rbx,%rdi
    f74e:	e8 5d 3a ff ff       	call   31b0 <__cxa_free_exception@plt>
    f753:	4c 89 e0             	mov    %r12,%rax
    f756:	48 89 c7             	mov    %rax,%rdi
    f759:	e8 72 3d ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    f75e:	5b                   	pop    %rbx
    f75f:	41 5c                	pop    %r12
    f761:	5d                   	pop    %rbp
    f762:	c3                   	ret
    f763:	90                   	nop

000000000000f764 <_ZN4neko7Context17moveCreateContextEv>:

void Context::moveCreateContext() { ++contextCount; }
    f764:	55                   	push   %rbp
    f765:	48 89 e5             	mov    %rsp,%rbp
    f768:	48 8d 05 89 1d 01 00 	lea    0x11d89(%rip),%rax        # 214f8 <_ZN4nekoL12contextCountE>
    f76f:	48 89 c7             	mov    %rax,%rdi
    f772:	e8 67 01 00 00       	call   f8de <_ZNSt13__atomic_baseIjEppEv>
    f777:	90                   	nop
    f778:	5d                   	pop    %rbp
    f779:	c3                   	ret

000000000000f77a <_ZN4neko7Context14destroyContextEv>:

void Context::destroyContext() {
    f77a:	55                   	push   %rbp
    f77b:	48 89 e5             	mov    %rsp,%rbp
  --contextCount;
    f77e:	48 8d 05 73 1d 01 00 	lea    0x11d73(%rip),%rax        # 214f8 <_ZN4nekoL12contextCountE>
    f785:	48 89 c7             	mov    %rax,%rdi
    f788:	e8 6b 01 00 00       	call   f8f8 <_ZNSt13__atomic_baseIjEmmEv>
  if (contextCount == 0) {
    f78d:	48 8d 05 64 1d 01 00 	lea    0x11d64(%rip),%rax        # 214f8 <_ZN4nekoL12contextCountE>
    f794:	48 89 c7             	mov    %rax,%rdi
    f797:	e8 7c 01 00 00       	call   f918 <_ZNKSt13__atomic_baseIjEcvjEv>
    f79c:	85 c0                	test   %eax,%eax
    f79e:	0f 94 c0             	sete   %al
    f7a1:	84 c0                	test   %al,%al
    f7a3:	74 05                	je     f7aa <_ZN4neko7Context14destroyContextEv+0x30>
    glfwTerminate();
    f7a5:	e8 46 3b ff ff       	call   32f0 <glfwTerminate@plt>
  }
}
    f7aa:	90                   	nop
    f7ab:	5d                   	pop    %rbp
    f7ac:	c3                   	ret
    f7ad:	90                   	nop

000000000000f7ae <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    f7ae:	55                   	push   %rbp
    f7af:	48 89 e5             	mov    %rsp,%rbp
    f7b2:	48 83 ec 40          	sub    $0x40,%rsp
    f7b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f7ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f7be:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f7c2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    f7c6:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f7ca:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f7ce:	48 8d 15 73 44 00 00 	lea    0x4473(%rip),%rdx        # 13c48 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x80>
    f7d5:	48 89 d6             	mov    %rdx,%rsi
    f7d8:	48 89 c7             	mov    %rax,%rdi
    f7db:	e8 b0 3a ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
    f7e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    f7e4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f7e9:	74 1c                	je     f807 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    f7eb:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f7ef:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    f7f3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f7f7:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    f7fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f7ff:	48 89 c7             	mov    %rax,%rdi
    f802:	41 ff d0             	call   *%r8
    f805:	eb 05                	jmp    f80c <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    f807:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    f80c:	c9                   	leave
    f80d:	c3                   	ret

000000000000f80e <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    f80e:	55                   	push   %rbp
    f80f:	48 89 e5             	mov    %rsp,%rbp
    f812:	48 83 ec 30          	sub    $0x30,%rsp
    f816:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f81a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f81e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f822:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    f826:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f82a:	48 8d 15 37 44 00 00 	lea    0x4437(%rip),%rdx        # 13c68 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa0>
    f831:	48 89 d6             	mov    %rdx,%rsi
    f834:	48 89 c7             	mov    %rax,%rdi
    f837:	e8 54 3a ff ff       	call   3290 <vkGetInstanceProcAddr@plt>
    f83c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    f840:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f845:	74 19                	je     f860 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    f847:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    f84b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f84f:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    f853:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f857:	48 89 ce             	mov    %rcx,%rsi
    f85a:	48 89 c7             	mov    %rax,%rdi
    f85d:	41 ff d0             	call   *%r8
  }
}
    f860:	90                   	nop
    f861:	c9                   	leave
    f862:	c3                   	ret

000000000000f863 <_Z41__static_initialization_and_destruction_0ii>:

    f863:	55                   	push   %rbp
    f864:	48 89 e5             	mov    %rsp,%rbp
    f867:	48 83 ec 10          	sub    $0x10,%rsp
    f86b:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f86e:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f871:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    f875:	75 3b                	jne    f8b2 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f877:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    f87e:	75 32                	jne    f8b2 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    f880:	48 8d 05 6d 1c 01 00 	lea    0x11c6d(%rip),%rax        # 214f4 <_ZStL8__ioinit>
    f887:	48 89 c7             	mov    %rax,%rdi
    f88a:	e8 b1 3b ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
    f88f:	48 8d 05 f2 19 01 00 	lea    0x119f2(%rip),%rax        # 21288 <__dso_handle>
    f896:	48 89 c2             	mov    %rax,%rdx
    f899:	48 8d 05 54 1c 01 00 	lea    0x11c54(%rip),%rax        # 214f4 <_ZStL8__ioinit>
    f8a0:	48 89 c6             	mov    %rax,%rsi
    f8a3:	48 8b 05 2e 17 01 00 	mov    0x1172e(%rip),%rax        # 20fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    f8aa:	48 89 c7             	mov    %rax,%rdi
    f8ad:	e8 ae 39 ff ff       	call   3260 <__cxa_atexit@plt>
    f8b2:	90                   	nop
    f8b3:	c9                   	leave
    f8b4:	c3                   	ret

000000000000f8b5 <_GLOBAL__sub_I__ZN4neko7Context13createContextEv>:
    f8b5:	55                   	push   %rbp
    f8b6:	48 89 e5             	mov    %rsp,%rbp
    f8b9:	be ff ff 00 00       	mov    $0xffff,%esi
    f8be:	bf 01 00 00 00       	mov    $0x1,%edi
    f8c3:	e8 9b ff ff ff       	call   f863 <_Z41__static_initialization_and_destruction_0ii>
    f8c8:	5d                   	pop    %rbp
    f8c9:	c3                   	ret

000000000000f8ca <_ZStanSt12memory_orderSt23__memory_order_modifier>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    f8ca:	55                   	push   %rbp
    f8cb:	48 89 e5             	mov    %rsp,%rbp
    f8ce:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f8d1:	89 75 f8             	mov    %esi,-0x8(%rbp)
    return memory_order(int(__m) & int(__mod));
    f8d4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    f8d7:	8b 45 f8             	mov    -0x8(%rbp),%eax
    f8da:	21 d0                	and    %edx,%eax
  }
    f8dc:	5d                   	pop    %rbp
    f8dd:	c3                   	ret

000000000000f8de <_ZNSt13__atomic_baseIjEppEv>:
      __int_type
      operator--(int) volatile noexcept
      { return fetch_sub(1); }

      __int_type
      operator++() noexcept
    f8de:	55                   	push   %rbp
    f8df:	48 89 e5             	mov    %rsp,%rbp
    f8e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f8e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f8ea:	b8 01 00 00 00       	mov    $0x1,%eax
    f8ef:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f8f3:	83 c0 01             	add    $0x1,%eax
    f8f6:	5d                   	pop    %rbp
    f8f7:	c3                   	ret

000000000000f8f8 <_ZNSt13__atomic_baseIjEmmEv>:
      __int_type
      operator++() volatile noexcept
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }

      __int_type
      operator--() noexcept
    f8f8:	55                   	push   %rbp
    f8f9:	48 89 e5             	mov    %rsp,%rbp
    f8fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    f900:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f904:	b8 01 00 00 00       	mov    $0x1,%eax
    f909:	f7 d8                	neg    %eax
    f90b:	89 c1                	mov    %eax,%ecx
    f90d:	89 c8                	mov    %ecx,%eax
    f90f:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    f913:	01 c8                	add    %ecx,%eax
    f915:	5d                   	pop    %rbp
    f916:	c3                   	ret
    f917:	90                   	nop

000000000000f918 <_ZNKSt13__atomic_baseIjEcvjEv>:
      operator __int_type() const noexcept
    f918:	55                   	push   %rbp
    f919:	48 89 e5             	mov    %rsp,%rbp
    f91c:	48 83 ec 20          	sub    $0x20,%rsp
    f920:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f928:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f92c:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b __attribute__ ((__unused__))
	  = __m & __memory_order_mask;
    f933:	8b 45 f4             	mov    -0xc(%rbp),%eax
    f936:	be ff ff 00 00       	mov    $0xffff,%esi
    f93b:	89 c7                	mov    %eax,%edi
    f93d:	e8 88 ff ff ff       	call   f8ca <_ZStanSt12memory_orderSt23__memory_order_modifier>
    f942:	89 45 f0             	mov    %eax,-0x10(%rbp)
	__glibcxx_assert(__b != memory_order_release);
    f945:	e8 6b 3f ff ff       	call   38b5 <_ZSt23__is_constant_evaluatedv>
    f94a:	84 c0                	test   %al,%al
    f94c:	74 0d                	je     f95b <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f94e:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
    f952:	75 07                	jne    f95b <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    f954:	b8 01 00 00 00       	mov    $0x1,%eax
    f959:	eb 05                	jmp    f960 <_ZNKSt13__atomic_baseIjEcvjEv+0x48>
    f95b:	b8 00 00 00 00       	mov    $0x0,%eax
    f960:	84 c0                	test   %al,%al
	__glibcxx_assert(__b != memory_order_acq_rel);
    f962:	e8 4e 3f ff ff       	call   38b5 <_ZSt23__is_constant_evaluatedv>
    f967:	84 c0                	test   %al,%al
    f969:	74 0d                	je     f978 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f96b:	83 7d f0 04          	cmpl   $0x4,-0x10(%rbp)
    f96f:	75 07                	jne    f978 <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    f971:	b8 01 00 00 00       	mov    $0x1,%eax
    f976:	eb 05                	jmp    f97d <_ZNKSt13__atomic_baseIjEcvjEv+0x65>
    f978:	b8 00 00 00 00       	mov    $0x0,%eax
    f97d:	84 c0                	test   %al,%al

	return __atomic_load_n(&_M_i, int(__m));
    f97f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f983:	8b 00                	mov    (%rax),%eax
    f985:	90                   	nop
      { return load(); }
    f986:	c9                   	leave
    f987:	c3                   	ret

000000000000f988 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    f988:	55                   	push   %rbp
    f989:	48 89 e5             	mov    %rsp,%rbp
    f98c:	48 83 ec 20          	sub    $0x20,%rsp
    f990:	89 7d fc             	mov    %edi,-0x4(%rbp)
    f993:	89 75 f8             	mov    %esi,-0x8(%rbp)
    f996:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    f99a:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    f99e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    f9a1:	83 f8 01             	cmp    $0x1,%eax
    f9a4:	7e 3c                	jle    f9e2 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    f9a6:	be 0a 00 00 00       	mov    $0xa,%esi
    f9ab:	48 8d 05 2e 1a 01 00 	lea    0x11a2e(%rip),%rax        # 213e0 <_ZSt4cerr@GLIBCXX_3.4>
    f9b2:	48 89 c7             	mov    %rax,%rdi
    f9b5:	e8 c6 39 ff ff       	call   3380 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    f9ba:	48 89 c2             	mov    %rax,%rdx
    f9bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9c1:	48 8b 40 28          	mov    0x28(%rax),%rax
    f9c5:	48 89 c6             	mov    %rax,%rsi
    f9c8:	48 89 d7             	mov    %rdx,%rdi
    f9cb:	e8 e0 38 ff ff       	call   32b0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f9d0:	48 8b 15 d1 15 01 00 	mov    0x115d1(%rip),%rdx        # 20fa8 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    f9d7:	48 89 d6             	mov    %rdx,%rsi
    f9da:	48 89 c7             	mov    %rax,%rdi
    f9dd:	e8 2e 39 ff ff       	call   3310 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    f9e2:	b8 00 00 00 00       	mov    $0x0,%eax
}
    f9e7:	c9                   	leave
    f9e8:	c3                   	ret
    f9e9:	90                   	nop

000000000000f9ea <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    f9ea:	55                   	push   %rbp
    f9eb:	48 89 e5             	mov    %rsp,%rbp
    f9ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    f9f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f9fa:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    fa00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa04:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      // VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    fa0b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa0f:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    fa16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa1a:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # f988 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    fa21:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    fa25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa29:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    fa30:	00 
}
    fa31:	90                   	nop
    fa32:	5d                   	pop    %rbp
    fa33:	c3                   	ret

000000000000fa34 <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    fa34:	55                   	push   %rbp
    fa35:	48 89 e5             	mov    %rsp,%rbp
    fa38:	53                   	push   %rbx
    fa39:	48 83 ec 58          	sub    $0x58,%rsp
    fa3d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    fa41:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    fa45:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fa49:	48 89 c7             	mov    %rax,%rdi
    fa4c:	e8 af 37 ff ff       	call   3200 <glfwGetRequiredInstanceExtensions@plt>
    fa51:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    fa55:	8b 45 c8             	mov    -0x38(%rbp),%eax
    fa58:	89 c3                	mov    %eax,%ebx
    fa5a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fa5e:	48 89 c7             	mov    %rax,%rdi
    fa61:	e8 70 c4 ff ff       	call   bed6 <_ZNSaIPKcEC1Ev>
    fa66:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    fa6a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa6e:	48 89 de             	mov    %rbx,%rsi
    fa71:	48 89 c7             	mov    %rax,%rdi
    fa74:	e8 79 06 00 00       	call   100f2 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    fa79:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fa7d:	48 89 c7             	mov    %rax,%rdi
    fa80:	e8 6d c4 ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    fa85:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    fa8c:	00 
  for (auto &extension : requiredExtensions) {
    fa8d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fa91:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fa95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fa99:	48 89 c7             	mov    %rax,%rdi
    fa9c:	e8 c7 06 00 00       	call   10168 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    faa1:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    faa5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    faa9:	48 89 c7             	mov    %rax,%rdi
    faac:	e8 dd 06 00 00       	call   1018e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fab1:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fab5:	eb 3e                	jmp    faf5 <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    fab7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fabb:	48 89 c7             	mov    %rax,%rdi
    fabe:	e8 4f 07 00 00       	call   10212 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fac3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    fac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    facb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    fad2:	00 
    fad3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fad7:	48 01 d0             	add    %rdx,%rax
    fada:	48 8b 10             	mov    (%rax),%rdx
    fadd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fae1:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    fae4:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    fae9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    faed:	48 89 c7             	mov    %rax,%rdi
    faf0:	e8 fd 06 00 00       	call   101f2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    faf5:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    faf9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fafd:	48 89 d6             	mov    %rdx,%rsi
    fb00:	48 89 c7             	mov    %rax,%rdi
    fb03:	e8 af 06 00 00       	call   101b7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fb08:	84 c0                	test   %al,%al
    fb0a:	75 ab                	jne    fab7 <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    fb0c:	eb 1a                	jmp    fb28 <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    fb0e:	48 89 c3             	mov    %rax,%rbx
    fb11:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fb15:	48 89 c7             	mov    %rax,%rdi
    fb18:	e8 d5 c3 ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
    fb1d:	48 89 d8             	mov    %rbx,%rax
    fb20:	48 89 c7             	mov    %rax,%rdi
    fb23:	e8 a8 39 ff ff       	call   34d0 <_Unwind_Resume@plt>
}
    fb28:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fb2c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fb30:	c9                   	leave
    fb31:	c3                   	ret

000000000000fb32 <_ZN4neko8InstanceC1ERKNS_8SettingsE>:

Instance::Instance(const Settings &settings) {
    fb32:	55                   	push   %rbp
    fb33:	48 89 e5             	mov    %rsp,%rbp
    fb36:	41 55                	push   %r13
    fb38:	41 54                	push   %r12
    fb3a:	53                   	push   %rbx
    fb3b:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    fb42:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    fb49:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    fb50:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb57:	48 89 c7             	mov    %rax,%rdi
    fb5a:	e8 67 05 00 00       	call   100c6 <_ZN4neko7ContextC1Ev>
    fb5f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb66:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fb6d:	00 
    fb6e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb75:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fb7c:	00 
    fb7d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fb84:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    fb88:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    fb8c:	48 89 c7             	mov    %rax,%rdi
    fb8f:	e8 1c 38 ff ff       	call   33b0 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    fb94:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fb98:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    fb9f:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    fba6:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    fbad:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    fbb4:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    fbb7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fbbe:	48 89 c7             	mov    %rax,%rdi
    fbc1:	e8 1a 35 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    fbc6:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    fbcd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fbd4:	8b 40 20             	mov    0x20(%rax),%eax
    fbd7:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    fbdd:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fbe4:	48 83 c0 28          	add    $0x28,%rax
    fbe8:	48 89 c7             	mov    %rax,%rdi
    fbeb:	e8 f0 34 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    fbf0:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    fbf7:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    fbfe:	8b 40 48             	mov    0x48(%rax),%eax
    fc01:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    fc07:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    fc0a:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    fc10:	48 8d 05 a1 46 00 00 	lea    0x46a1(%rip),%rax        # 142b8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    fc17:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fc1b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fc1f:	49 89 c4             	mov    %rax,%r12
    fc22:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    fc28:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fc2c:	48 89 c7             	mov    %rax,%rdi
    fc2f:	e8 a2 c2 ff ff       	call   bed6 <_ZNSaIPKcEC1Ev>
    fc34:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    fc38:	4c 89 e6             	mov    %r12,%rsi
    fc3b:	4c 89 ef             	mov    %r13,%rdi
    fc3e:	4c 89 e1             	mov    %r12,%rcx
    fc41:	4c 89 eb             	mov    %r13,%rbx
    fc44:	48 89 df             	mov    %rbx,%rdi
    fc47:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fc4b:	48 89 d1             	mov    %rdx,%rcx
    fc4e:	48 89 fa             	mov    %rdi,%rdx
    fc51:	48 89 c7             	mov    %rax,%rdi
    fc54:	e8 b5 c2 ff ff       	call   bf0e <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fc59:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fc5d:	48 89 c7             	mov    %rax,%rdi
    fc60:	e8 8d c2 ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
  auto extensions = getRequiredExtensions();
    fc65:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fc69:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fc70:	48 89 d6             	mov    %rdx,%rsi
    fc73:	48 89 c7             	mov    %rax,%rdi
    fc76:	e8 b9 fd ff ff       	call   fa34 <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    fc7b:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    fc82:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    fc83:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fc87:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    fc8e:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    fc95:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    fc9c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fca0:	48 8d 15 2b 46 00 00 	lea    0x462b(%rip),%rdx        # 142d2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    fca7:	48 89 d6             	mov    %rdx,%rsi
    fcaa:	48 89 c7             	mov    %rax,%rdi
    fcad:	e8 72 05 00 00       	call   10224 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    fcb2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fcb6:	48 8d 15 31 46 00 00 	lea    0x4631(%rip),%rdx        # 142ee <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    fcbd:	48 89 d6             	mov    %rdx,%rsi
    fcc0:	48 89 c7             	mov    %rax,%rdi
    fcc3:	e8 00 06 00 00       	call   102c8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    populateDebugMessengerInfo(debugMessengerInfo);
    fcc8:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    fccf:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fcd6:	48 89 d6             	mov    %rdx,%rsi
    fcd9:	48 89 c7             	mov    %rax,%rdi
    fcdc:	e8 09 fd ff ff       	call   f9ea <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    fce1:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    fce8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    fcec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    fcf0:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    fcf7:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    fcfe:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    fd05:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    fd0c:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    fd13:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    fd16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd1a:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    fd21:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    fd28:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = vku32(layers.size());
    fd2f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fd33:	48 89 c7             	mov    %rax,%rdi
    fd36:	e8 31 06 00 00       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fd3b:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    fd41:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fd45:	48 89 c7             	mov    %rax,%rdi
    fd48:	e8 43 06 00 00       	call   10390 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fd4d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = vku32(extensions.size());
    fd54:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fd58:	48 89 c7             	mov    %rax,%rdi
    fd5b:	e8 0c 06 00 00       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    fd60:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    fd66:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fd6a:	48 89 c7             	mov    %rax,%rdi
    fd6d:	e8 1e 06 00 00       	call   10390 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    fd72:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    fd79:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fd80:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fd84:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fd8b:	be 00 00 00 00       	mov    $0x0,%esi
    fd90:	48 89 c7             	mov    %rax,%rdi
    fd93:	e8 f8 35 ff ff       	call   3390 <vkCreateInstance@plt>
    fd98:	85 c0                	test   %eax,%eax
    fd9a:	0f 95 c0             	setne  %al
    fd9d:	84 c0                	test   %al,%al
    fd9f:	74 3b                	je     fddc <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x2aa>
    throw std::runtime_error("Failed to create instance.");
    fda1:	bf 10 00 00 00       	mov    $0x10,%edi
    fda6:	e8 65 33 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    fdab:	48 89 c3             	mov    %rax,%rbx
    fdae:	48 8d 05 4c 45 00 00 	lea    0x454c(%rip),%rax        # 14301 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    fdb5:	48 89 c6             	mov    %rax,%rsi
    fdb8:	48 89 df             	mov    %rbx,%rdi
    fdbb:	e8 f0 32 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    fdc0:	48 8b 05 f1 11 01 00 	mov    0x111f1(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fdc7:	48 89 c2             	mov    %rax,%rdx
    fdca:	48 8d 05 6f 0f 01 00 	lea    0x10f6f(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fdd1:	48 89 c6             	mov    %rax,%rsi
    fdd4:	48 89 df             	mov    %rbx,%rdi
    fdd7:	e8 d4 36 ff ff       	call   34b0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fddc:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fde3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fdea:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    fdee:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    fdf5:	48 8b 72 08          	mov    0x8(%rdx),%rsi
    fdf9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fdfd:	49 89 c8             	mov    %rcx,%r8
    fe00:	b9 00 00 00 00       	mov    $0x0,%ecx
    fe05:	48 89 c7             	mov    %rax,%rdi
    fe08:	e8 a1 f9 ff ff       	call   f7ae <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                      &mDebugMessenger) != VK_SUCCESS) {
    fe0d:	85 c0                	test   %eax,%eax
    fe0f:	0f 95 c0             	setne  %al
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    fe12:	84 c0                	test   %al,%al
    fe14:	74 3b                	je     fe51 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x31f>
      throw std::runtime_error("Failed to create debug messenger");
    fe16:	bf 10 00 00 00       	mov    $0x10,%edi
    fe1b:	e8 f0 32 ff ff       	call   3110 <__cxa_allocate_exception@plt>
    fe20:	48 89 c3             	mov    %rax,%rbx
    fe23:	48 8d 05 f6 44 00 00 	lea    0x44f6(%rip),%rax        # 14320 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    fe2a:	48 89 c6             	mov    %rax,%rsi
    fe2d:	48 89 df             	mov    %rbx,%rdi
    fe30:	e8 7b 32 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
    fe35:	48 8b 05 7c 11 01 00 	mov    0x1117c(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    fe3c:	48 89 c2             	mov    %rax,%rdx
    fe3f:	48 8d 05 fa 0e 01 00 	lea    0x10efa(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    fe46:	48 89 c6             	mov    %rax,%rsi
    fe49:	48 89 df             	mov    %rbx,%rdi
    fe4c:	e8 5f 36 ff ff       	call   34b0 <__cxa_throw@plt>
    }
  }

  mIsOwner = true;
    fe51:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fe58:	c6 40 18 01          	movb   $0x1,0x18(%rax)
}
    fe5c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    fe60:	48 89 c7             	mov    %rax,%rdi
    fe63:	e8 2e c1 ff ff       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fe68:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    fe6c:	48 89 c7             	mov    %rax,%rdi
    fe6f:	e8 22 c1 ff ff       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fe74:	eb 70                	jmp    fee6 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x3b4>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    fe76:	48 89 c3             	mov    %rax,%rbx
    fe79:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    fe7d:	48 89 c7             	mov    %rax,%rdi
    fe80:	e8 6d c0 ff ff       	call   bef2 <_ZNSaIPKcED1Ev>
    fe85:	eb 45                	jmp    fecc <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    throw std::runtime_error("Failed to create instance.");
    fe87:	49 89 c4             	mov    %rax,%r12
    fe8a:	48 89 df             	mov    %rbx,%rdi
    fe8d:	e8 1e 33 ff ff       	call   31b0 <__cxa_free_exception@plt>
    fe92:	4c 89 e3             	mov    %r12,%rbx
    fe95:	eb 13                	jmp    feaa <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
      throw std::runtime_error("Failed to create debug messenger");
    fe97:	49 89 c4             	mov    %rax,%r12
    fe9a:	48 89 df             	mov    %rbx,%rdi
    fe9d:	e8 0e 33 ff ff       	call   31b0 <__cxa_free_exception@plt>
    fea2:	4c 89 e3             	mov    %r12,%rbx
    fea5:	eb 03                	jmp    feaa <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
}
    fea7:	48 89 c3             	mov    %rax,%rbx
    feaa:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    feae:	48 89 c7             	mov    %rax,%rdi
    feb1:	e8 e0 c0 ff ff       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    feb6:	eb 03                	jmp    febb <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x389>
    feb8:	48 89 c3             	mov    %rax,%rbx
    febb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    febf:	48 89 c7             	mov    %rax,%rdi
    fec2:	e8 cf c0 ff ff       	call   bf96 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fec7:	eb 03                	jmp    fecc <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    fec9:	48 89 c3             	mov    %rax,%rbx
    fecc:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    fed3:	48 89 c7             	mov    %rax,%rdi
    fed6:	e8 f9 3b ff ff       	call   3ad4 <_ZN4neko7ContextD1Ev>
    fedb:	48 89 d8             	mov    %rbx,%rax
    fede:	48 89 c7             	mov    %rax,%rdi
    fee1:	e8 ea 35 ff ff       	call   34d0 <_Unwind_Resume@plt>
    fee6:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    feed:	5b                   	pop    %rbx
    feee:	41 5c                	pop    %r12
    fef0:	41 5d                	pop    %r13
    fef2:	5d                   	pop    %rbp
    fef3:	c3                   	ret

000000000000fef4 <_ZN4neko8InstanceC1EOS0_>:

Instance::Instance(Instance &&rhs) noexcept
    fef4:	55                   	push   %rbp
    fef5:	48 89 e5             	mov    %rsp,%rbp
    fef8:	53                   	push   %rbx
    fef9:	48 83 ec 28          	sub    $0x28,%rsp
    fefd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ff01:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    : mContext{std::move(rhs.mContext)}, mInstance{std::move(rhs.mInstance)},
    ff05:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    ff09:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff0d:	48 89 c7             	mov    %rax,%rdi
    ff10:	e8 9f 04 00 00       	call   103b4 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
    ff15:	48 89 c6             	mov    %rax,%rsi
    ff18:	48 89 df             	mov    %rbx,%rdi
    ff1b:	e8 ba 01 00 00       	call   100da <_ZN4neko7ContextC1EOS0_>
    ff20:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff24:	48 83 c0 08          	add    $0x8,%rax
    ff28:	48 89 c7             	mov    %rax,%rdi
    ff2b:	e8 92 04 00 00       	call   103c2 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    ff30:	48 8b 10             	mov    (%rax),%rdx
    ff33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff37:	48 89 50 08          	mov    %rdx,0x8(%rax)
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    ff3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff3f:	48 83 c0 10          	add    $0x10,%rax
    ff43:	48 89 c7             	mov    %rax,%rdi
    ff46:	e8 85 04 00 00       	call   103d0 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    ff4b:	48 8b 10             	mov    (%rax),%rdx
    ff4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ff52:	48 89 50 10          	mov    %rdx,0x10(%rax)
                                                           rhs.mIsOwner,
                                                           false)} {}
    ff56:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
                                                           rhs.mIsOwner,
    ff5a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ff5e:	48 8d 50 18          	lea    0x18(%rax),%rdx
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    ff62:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ff66:	48 89 c6             	mov    %rax,%rsi
    ff69:	48 89 d7             	mov    %rdx,%rdi
    ff6c:	e8 6d 04 00 00       	call   103de <_ZSt8exchangeIbbET_RS0_OT0_>
    ff71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ff75:	88 42 18             	mov    %al,0x18(%rdx)
                                                           false)} {}
    ff78:	90                   	nop
    ff79:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ff7d:	c9                   	leave
    ff7e:	c3                   	ret
    ff7f:	90                   	nop

000000000000ff80 <_ZN4neko8InstanceaSEOS0_>:

Instance &Instance::operator=(Instance &&rhs) {
    ff80:	55                   	push   %rbp
    ff81:	48 89 e5             	mov    %rsp,%rbp
    ff84:	48 83 ec 20          	sub    $0x20,%rsp
    ff88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ff8c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  release();
    ff90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ff94:	48 89 c7             	mov    %rax,%rdi
    ff97:	e8 6a 00 00 00       	call   10006 <_ZN4neko8Instance7releaseEv>
  mContext = std::move(rhs.mContext);
    ff9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffa0:	48 89 c7             	mov    %rax,%rdi
    ffa3:	e8 0c 04 00 00       	call   103b4 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
  mInstance = std::move(rhs.mInstance);
    ffa8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffac:	48 83 c0 08          	add    $0x8,%rax
    ffb0:	48 89 c7             	mov    %rax,%rdi
    ffb3:	e8 0a 04 00 00       	call   103c2 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    ffb8:	48 8b 10             	mov    (%rax),%rdx
    ffbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffbf:	48 89 50 08          	mov    %rdx,0x8(%rax)
  mDebugMessenger = std::move(rhs.mDebugMessenger);
    ffc3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffc7:	48 83 c0 10          	add    $0x10,%rax
    ffcb:	48 89 c7             	mov    %rax,%rdi
    ffce:	e8 fd 03 00 00       	call   103d0 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    ffd3:	48 8b 10             	mov    (%rax),%rdx
    ffd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ffda:	48 89 50 10          	mov    %rdx,0x10(%rax)
  mIsOwner = std::exchange(rhs.mIsOwner, false);
    ffde:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    ffe2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ffe6:	48 8d 50 18          	lea    0x18(%rax),%rdx
    ffea:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    ffee:	48 89 c6             	mov    %rax,%rsi
    fff1:	48 89 d7             	mov    %rdx,%rdi
    fff4:	e8 e5 03 00 00       	call   103de <_ZSt8exchangeIbbET_RS0_OT0_>
    fff9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fffd:	88 42 18             	mov    %al,0x18(%rdx)
  return *this;
   10000:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
   10004:	c9                   	leave
   10005:	c3                   	ret

0000000000010006 <_ZN4neko8Instance7releaseEv>:

void Instance::release() noexcept {
   10006:	55                   	push   %rbp
   10007:	48 89 e5             	mov    %rsp,%rbp
   1000a:	48 83 ec 10          	sub    $0x10,%rsp
   1000e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (mIsOwner) {
   10012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10016:	0f b6 40 18          	movzbl 0x18(%rax),%eax
   1001a:	84 c0                	test   %al,%al
   1001c:	74 3e                	je     1005c <_ZN4neko8Instance7releaseEv+0x56>
    if constexpr (neko::debugMode) {
      mContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
   1001e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10022:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10026:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1002a:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1002e:	48 8b 71 08          	mov    0x8(%rcx),%rsi
   10032:	b9 00 00 00 00       	mov    $0x0,%ecx
   10037:	48 89 c7             	mov    %rax,%rdi
   1003a:	e8 cf f7 ff ff       	call   f80e <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
    }
    vkDestroyInstance(mInstance, nullptr);
   1003f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10043:	48 8b 40 08          	mov    0x8(%rax),%rax
   10047:	be 00 00 00 00       	mov    $0x0,%esi
   1004c:	48 89 c7             	mov    %rax,%rdi
   1004f:	e8 8c 32 ff ff       	call   32e0 <vkDestroyInstance@plt>
    mIsOwner = false;
   10054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10058:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  }
}
   1005c:	90                   	nop
   1005d:	c9                   	leave
   1005e:	c3                   	ret

000000000001005f <_Z41__static_initialization_and_destruction_0ii>:

   1005f:	55                   	push   %rbp
   10060:	48 89 e5             	mov    %rsp,%rbp
   10063:	48 83 ec 10          	sub    $0x10,%rsp
   10067:	89 7d fc             	mov    %edi,-0x4(%rbp)
   1006a:	89 75 f8             	mov    %esi,-0x8(%rbp)
   1006d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   10071:	75 3b                	jne    100ae <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10073:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   1007a:	75 32                	jne    100ae <_Z41__static_initialization_and_destruction_0ii+0x4f>
   1007c:	48 8d 05 79 14 01 00 	lea    0x11479(%rip),%rax        # 214fc <_ZStL8__ioinit>
   10083:	48 89 c7             	mov    %rax,%rdi
   10086:	e8 b5 33 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   1008b:	48 8d 05 f6 11 01 00 	lea    0x111f6(%rip),%rax        # 21288 <__dso_handle>
   10092:	48 89 c2             	mov    %rax,%rdx
   10095:	48 8d 05 60 14 01 00 	lea    0x11460(%rip),%rax        # 214fc <_ZStL8__ioinit>
   1009c:	48 89 c6             	mov    %rax,%rsi
   1009f:	48 8b 05 32 0f 01 00 	mov    0x10f32(%rip),%rax        # 20fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   100a6:	48 89 c7             	mov    %rax,%rdi
   100a9:	e8 b2 31 ff ff       	call   3260 <__cxa_atexit@plt>
   100ae:	90                   	nop
   100af:	c9                   	leave
   100b0:	c3                   	ret

00000000000100b1 <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
   100b1:	55                   	push   %rbp
   100b2:	48 89 e5             	mov    %rsp,%rbp
   100b5:	be ff ff 00 00       	mov    $0xffff,%esi
   100ba:	bf 01 00 00 00       	mov    $0x1,%edi
   100bf:	e8 9b ff ff ff       	call   1005f <_Z41__static_initialization_and_destruction_0ii>
   100c4:	5d                   	pop    %rbp
   100c5:	c3                   	ret

00000000000100c6 <_ZN4neko7ContextC1Ev>:
  Context() { createContext(); }
   100c6:	55                   	push   %rbp
   100c7:	48 89 e5             	mov    %rsp,%rbp
   100ca:	48 83 ec 10          	sub    $0x10,%rsp
   100ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100d2:	e8 0f f6 ff ff       	call   f6e6 <_ZN4neko7Context13createContextEv>
   100d7:	90                   	nop
   100d8:	c9                   	leave
   100d9:	c3                   	ret

00000000000100da <_ZN4neko7ContextC1EOS0_>:
  Context(Context &&) { moveCreateContext(); }
   100da:	55                   	push   %rbp
   100db:	48 89 e5             	mov    %rsp,%rbp
   100de:	48 83 ec 10          	sub    $0x10,%rsp
   100e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   100ea:	e8 75 f6 ff ff       	call   f764 <_ZN4neko7Context17moveCreateContextEv>
   100ef:	90                   	nop
   100f0:	c9                   	leave
   100f1:	c3                   	ret

00000000000100f2 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   100f2:	55                   	push   %rbp
   100f3:	48 89 e5             	mov    %rsp,%rbp
   100f6:	53                   	push   %rbx
   100f7:	48 83 ec 28          	sub    $0x28,%rsp
   100fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   100ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10103:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   10107:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1010b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1010f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10113:	48 89 d6             	mov    %rdx,%rsi
   10116:	48 89 c7             	mov    %rax,%rdi
   10119:	e8 09 d1 ff ff       	call   d227 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   1011e:	48 89 c1             	mov    %rax,%rcx
   10121:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10125:	48 89 c2             	mov    %rax,%rdx
   10128:	48 89 ce             	mov    %rcx,%rsi
   1012b:	48 89 df             	mov    %rbx,%rdi
   1012e:	e8 db 02 00 00       	call   1040e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   10133:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10137:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1013b:	48 89 d6             	mov    %rdx,%rsi
   1013e:	48 89 c7             	mov    %rax,%rdi
   10141:	e8 26 03 00 00       	call   1046c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
   10146:	eb 1a                	jmp    10162 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
   10148:	48 89 c3             	mov    %rax,%rbx
   1014b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1014f:	48 89 c7             	mov    %rax,%rdi
   10152:	e8 59 c6 ff ff       	call   c7b0 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   10157:	48 89 d8             	mov    %rbx,%rax
   1015a:	48 89 c7             	mov    %rax,%rdi
   1015d:	e8 6e 33 ff ff       	call   34d0 <_Unwind_Resume@plt>
   10162:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10166:	c9                   	leave
   10167:	c3                   	ret

0000000000010168 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10168:	55                   	push   %rbp
   10169:	48 89 e5             	mov    %rsp,%rbp
   1016c:	48 83 ec 20          	sub    $0x20,%rsp
   10170:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10174:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10178:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1017c:	48 89 d6             	mov    %rdx,%rsi
   1017f:	48 89 c7             	mov    %rax,%rdi
   10182:	e8 25 03 00 00       	call   104ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1018b:	c9                   	leave
   1018c:	c3                   	ret
   1018d:	90                   	nop

000000000001018e <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1018e:	55                   	push   %rbp
   1018f:	48 89 e5             	mov    %rsp,%rbp
   10192:	48 83 ec 20          	sub    $0x20,%rsp
   10196:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1019a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1019e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   101a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   101a6:	48 89 d6             	mov    %rdx,%rsi
   101a9:	48 89 c7             	mov    %rax,%rdi
   101ac:	e8 fb 02 00 00       	call   104ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   101b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b5:	c9                   	leave
   101b6:	c3                   	ret

00000000000101b7 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   101b7:	55                   	push   %rbp
   101b8:	48 89 e5             	mov    %rsp,%rbp
   101bb:	53                   	push   %rbx
   101bc:	48 83 ec 18          	sub    $0x18,%rsp
   101c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   101c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   101c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   101cc:	48 89 c7             	mov    %rax,%rdi
   101cf:	e8 f6 02 00 00       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   101d4:	48 8b 18             	mov    (%rax),%rbx
   101d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101db:	48 89 c7             	mov    %rax,%rdi
   101de:	e8 e7 02 00 00       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   101e3:	48 8b 00             	mov    (%rax),%rax
   101e6:	48 39 c3             	cmp    %rax,%rbx
   101e9:	0f 95 c0             	setne  %al
   101ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   101f0:	c9                   	leave
   101f1:	c3                   	ret

00000000000101f2 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   101f2:	55                   	push   %rbp
   101f3:	48 89 e5             	mov    %rsp,%rbp
   101f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   101fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101fe:	48 8b 00             	mov    (%rax),%rax
   10201:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10209:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1020c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10210:	5d                   	pop    %rbp
   10211:	c3                   	ret

0000000000010212 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10212:	55                   	push   %rbp
   10213:	48 89 e5             	mov    %rsp,%rbp
   10216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1021a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1021e:	48 8b 00             	mov    (%rax),%rax
   10221:	5d                   	pop    %rbp
   10222:	c3                   	ret
   10223:	90                   	nop

0000000000010224 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   10224:	55                   	push   %rbp
   10225:	48 89 e5             	mov    %rsp,%rbp
   10228:	53                   	push   %rbx
   10229:	48 83 ec 18          	sub    $0x18,%rsp
   1022d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10231:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   10235:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10239:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1023d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10241:	48 8b 40 10          	mov    0x10(%rax),%rax
   10245:	48 39 c2             	cmp    %rax,%rdx
   10248:	74 3c                	je     10286 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   1024a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1024e:	48 89 c7             	mov    %rax,%rdi
   10251:	e8 82 02 00 00       	call   104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10256:	48 89 c2             	mov    %rax,%rdx
   10259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1025d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10261:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10265:	48 89 ce             	mov    %rcx,%rsi
   10268:	48 89 c7             	mov    %rax,%rdi
   1026b:	e8 76 02 00 00       	call   104e6 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   10270:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10274:	48 8b 40 08          	mov    0x8(%rax),%rax
   10278:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1027c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10280:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10284:	eb 30                	jmp    102b6 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   10286:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1028a:	48 89 c7             	mov    %rax,%rdi
   1028d:	e8 46 02 00 00       	call   104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10292:	48 89 c3             	mov    %rax,%rbx
   10295:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10299:	48 89 c7             	mov    %rax,%rdi
   1029c:	e8 ed fe ff ff       	call   1018e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   102a1:	48 89 c1             	mov    %rax,%rcx
   102a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102a8:	48 89 da             	mov    %rbx,%rdx
   102ab:	48 89 ce             	mov    %rcx,%rsi
   102ae:	48 89 c7             	mov    %rax,%rdi
   102b1:	e8 6a 02 00 00       	call   10520 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   102b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102ba:	48 89 c7             	mov    %rax,%rdi
   102bd:	e8 f0 03 00 00       	call   106b2 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   102c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   102c6:	c9                   	leave
   102c7:	c3                   	ret

00000000000102c8 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   102c8:	55                   	push   %rbp
   102c9:	48 89 e5             	mov    %rsp,%rbp
   102cc:	53                   	push   %rbx
   102cd:	48 83 ec 18          	sub    $0x18,%rsp
   102d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   102d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   102d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102dd:	48 8b 50 08          	mov    0x8(%rax),%rdx
   102e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102e5:	48 8b 40 10          	mov    0x10(%rax),%rax
   102e9:	48 39 c2             	cmp    %rax,%rdx
   102ec:	74 3c                	je     1032a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   102ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   102f2:	48 89 c7             	mov    %rax,%rdi
   102f5:	e8 f7 03 00 00       	call   106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   102fa:	48 89 c2             	mov    %rax,%rdx
   102fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10301:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10305:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10309:	48 89 ce             	mov    %rcx,%rsi
   1030c:	48 89 c7             	mov    %rax,%rdi
   1030f:	e8 eb 03 00 00       	call   106ff <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   10314:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10318:	48 8b 40 08          	mov    0x8(%rax),%rax
   1031c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10324:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10328:	eb 30                	jmp    1035a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   1032a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1032e:	48 89 c7             	mov    %rax,%rdi
   10331:	e8 bb 03 00 00       	call   106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10336:	48 89 c3             	mov    %rax,%rbx
   10339:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1033d:	48 89 c7             	mov    %rax,%rdi
   10340:	e8 49 fe ff ff       	call   1018e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10345:	48 89 c1             	mov    %rax,%rcx
   10348:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1034c:	48 89 da             	mov    %rbx,%rdx
   1034f:	48 89 ce             	mov    %rcx,%rsi
   10352:	48 89 c7             	mov    %rax,%rdi
   10355:	e8 de 03 00 00       	call   10738 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   1035a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1035e:	48 89 c7             	mov    %rax,%rdi
   10361:	e8 4c 03 00 00       	call   106b2 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
   10366:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1036a:	c9                   	leave
   1036b:	c3                   	ret

000000000001036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1036c:	55                   	push   %rbp
   1036d:	48 89 e5             	mov    %rsp,%rbp
   10370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10378:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1037c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10380:	48 8b 00             	mov    (%rax),%rax
   10383:	48 29 c2             	sub    %rax,%rdx
   10386:	48 89 d0             	mov    %rdx,%rax
   10389:	48 c1 f8 03          	sar    $0x3,%rax
   1038d:	5d                   	pop    %rbp
   1038e:	c3                   	ret
   1038f:	90                   	nop

0000000000010390 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10390:	55                   	push   %rbp
   10391:	48 89 e5             	mov    %rsp,%rbp
   10394:	48 83 ec 10          	sub    $0x10,%rsp
   10398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1039c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103a0:	48 8b 10             	mov    (%rax),%rdx
   103a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103a7:	48 89 d6             	mov    %rdx,%rsi
   103aa:	48 89 c7             	mov    %rax,%rdi
   103ad:	e8 18 05 00 00       	call   108ca <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   103b2:	c9                   	leave
   103b3:	c3                   	ret

00000000000103b4 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   103b4:	55                   	push   %rbp
   103b5:	48 89 e5             	mov    %rsp,%rbp
   103b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   103bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103c0:	5d                   	pop    %rbp
   103c1:	c3                   	ret

00000000000103c2 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   103c2:	55                   	push   %rbp
   103c3:	48 89 e5             	mov    %rsp,%rbp
   103c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   103ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103ce:	5d                   	pop    %rbp
   103cf:	c3                   	ret

00000000000103d0 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   103d0:	55                   	push   %rbp
   103d1:	48 89 e5             	mov    %rsp,%rbp
   103d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   103d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103dc:	5d                   	pop    %rbp
   103dd:	c3                   	ret

00000000000103de <_ZSt8exchangeIbbET_RS0_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
   103de:	55                   	push   %rbp
   103df:	48 89 e5             	mov    %rsp,%rbp
   103e2:	48 83 ec 10          	sub    $0x10,%rsp
   103e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
   103ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103f2:	48 89 c7             	mov    %rax,%rdi
   103f5:	e8 e2 04 00 00       	call   108dc <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   103fa:	48 89 c2             	mov    %rax,%rdx
   103fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10401:	48 89 d6             	mov    %rdx,%rsi
   10404:	48 89 c7             	mov    %rax,%rdi
   10407:	e8 de 04 00 00       	call   108ea <_ZSt10__exchangeIbbET_RS0_OT0_>
   1040c:	c9                   	leave
   1040d:	c3                   	ret

000000000001040e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1040e:	55                   	push   %rbp
   1040f:	48 89 e5             	mov    %rsp,%rbp
   10412:	53                   	push   %rbx
   10413:	48 83 ec 28          	sub    $0x28,%rsp
   10417:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1041b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1041f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   10423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10427:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1042b:	48 89 d6             	mov    %rdx,%rsi
   1042e:	48 89 c7             	mov    %rax,%rdi
   10431:	e8 52 cd ff ff       	call   d188 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   10436:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1043a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1043e:	48 89 d6             	mov    %rdx,%rsi
   10441:	48 89 c7             	mov    %rax,%rdi
   10444:	e8 df 04 00 00       	call   10928 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
   10449:	eb 1a                	jmp    10465 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
   1044b:	48 89 c3             	mov    %rax,%rbx
   1044e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10452:	48 89 c7             	mov    %rax,%rdi
   10455:	e8 14 c3 ff ff       	call   c76e <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
   1045a:	48 89 d8             	mov    %rbx,%rax
   1045d:	48 89 c7             	mov    %rax,%rdi
   10460:	e8 6b 30 ff ff       	call   34d0 <_Unwind_Resume@plt>
   10465:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10469:	c9                   	leave
   1046a:	c3                   	ret
   1046b:	90                   	nop

000000000001046c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1046c:	55                   	push   %rbp
   1046d:	48 89 e5             	mov    %rsp,%rbp
   10470:	48 83 ec 10          	sub    $0x10,%rsp
   10474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1047c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10480:	48 89 c7             	mov    %rax,%rdi
   10483:	e8 9e c4 ff ff       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10488:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1048b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1048f:	48 8b 00             	mov    (%rax),%rax
   10492:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10496:	48 89 ce             	mov    %rcx,%rsi
   10499:	48 89 c7             	mov    %rax,%rdi
   1049c:	e8 dd 04 00 00       	call   1097e <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   104a1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   104a5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   104a9:	90                   	nop
   104aa:	c9                   	leave
   104ab:	c3                   	ret

00000000000104ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   104ac:	55                   	push   %rbp
   104ad:	48 89 e5             	mov    %rsp,%rbp
   104b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   104b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   104bc:	48 8b 10             	mov    (%rax),%rdx
   104bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104c3:	48 89 10             	mov    %rdx,(%rax)
   104c6:	90                   	nop
   104c7:	5d                   	pop    %rbp
   104c8:	c3                   	ret
   104c9:	90                   	nop

00000000000104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   104ca:	55                   	push   %rbp
   104cb:	48 89 e5             	mov    %rsp,%rbp
   104ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   104d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104d6:	5d                   	pop    %rbp
   104d7:	c3                   	ret

00000000000104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   104d8:	55                   	push   %rbp
   104d9:	48 89 e5             	mov    %rsp,%rbp
   104dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   104e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104e4:	5d                   	pop    %rbp
   104e5:	c3                   	ret

00000000000104e6 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   104e6:	55                   	push   %rbp
   104e7:	48 89 e5             	mov    %rsp,%rbp
   104ea:	48 83 ec 20          	sub    $0x20,%rsp
   104ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   104fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104fe:	48 89 c7             	mov    %rax,%rdi
   10501:	e8 d2 ff ff ff       	call   104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10506:	48 89 c2             	mov    %rax,%rdx
   10509:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1050d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10511:	48 89 ce             	mov    %rcx,%rsi
   10514:	48 89 c7             	mov    %rax,%rdi
   10517:	e8 8c 04 00 00       	call   109a8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
   1051c:	90                   	nop
   1051d:	c9                   	leave
   1051e:	c3                   	ret
   1051f:	90                   	nop

0000000000010520 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   10520:	55                   	push   %rbp
   10521:	48 89 e5             	mov    %rsp,%rbp
   10524:	53                   	push   %rbx
   10525:	48 83 ec 68          	sub    $0x68,%rsp
   10529:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1052d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   10531:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   10535:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10539:	48 8d 15 39 3e 00 00 	lea    0x3e39(%rip),%rdx        # 14379 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   10540:	be 01 00 00 00       	mov    $0x1,%esi
   10545:	48 89 c7             	mov    %rax,%rdi
   10548:	e8 9b 04 00 00       	call   109e8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   1054d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   10551:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10555:	48 8b 00             	mov    (%rax),%rax
   10558:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1055c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10560:	48 8b 40 08          	mov    0x8(%rax),%rax
   10564:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   10568:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1056c:	48 89 c7             	mov    %rax,%rdi
   1056f:	e8 f4 fb ff ff       	call   10168 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   10574:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10578:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1057c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10580:	48 89 d6             	mov    %rdx,%rsi
   10583:	48 89 c7             	mov    %rax,%rdi
   10586:	e8 25 05 00 00       	call   10ab0 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1058b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   1058f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10593:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10597:	48 89 d6             	mov    %rdx,%rsi
   1059a:	48 89 c7             	mov    %rax,%rdi
   1059d:	e8 e6 cc ff ff       	call   d288 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   105a2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   105a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   105aa:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   105ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   105b2:	48 89 c7             	mov    %rax,%rdi
   105b5:	e8 1e ff ff ff       	call   104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   105ba:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   105bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   105c1:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   105c8:	00 
	  _Alloc_traits::construct(this->_M_impl,
   105c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   105cd:	48 01 c1             	add    %rax,%rcx
   105d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105d4:	48 89 ce             	mov    %rcx,%rsi
   105d7:	48 89 c7             	mov    %rax,%rdi
   105da:	e8 07 ff ff ff       	call   104e6 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   105df:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   105e6:	00 
					 __new_start, _M_get_Tp_allocator());
   105e7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   105eb:	48 89 c7             	mov    %rax,%rdi
   105ee:	e8 33 c3 ff ff       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   105f3:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   105f6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   105fa:	48 89 c7             	mov    %rax,%rdi
   105fd:	e8 c8 fe ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10602:	48 8b 30             	mov    (%rax),%rsi
   10605:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10609:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1060d:	48 89 d9             	mov    %rbx,%rcx
   10610:	48 89 c7             	mov    %rax,%rdi
   10613:	e8 da 04 00 00       	call   10af2 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   10618:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   1061c:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   10621:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10625:	48 89 c7             	mov    %rax,%rdi
   10628:	e8 f9 c2 ff ff       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1062d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   10630:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10634:	48 89 c7             	mov    %rax,%rdi
   10637:	e8 8e fe ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1063c:	48 8b 00             	mov    (%rax),%rax
   1063f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10643:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   10647:	48 89 d9             	mov    %rbx,%rcx
   1064a:	48 89 c7             	mov    %rax,%rdi
   1064d:	e8 a0 04 00 00       	call   10af2 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   10652:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   10656:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1065a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1065e:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   10662:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   10666:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   1066a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1066e:	48 89 ce             	mov    %rcx,%rsi
   10671:	48 89 c7             	mov    %rax,%rdi
   10674:	e8 41 cb ff ff       	call   d1ba <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   10679:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1067d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10681:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   10684:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10688:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1068c:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   10690:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10694:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1069b:	00 
   1069c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   106a0:	48 01 c2             	add    %rax,%rdx
   106a3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   106a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   106ab:	90                   	nop
   106ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   106b0:	c9                   	leave
   106b1:	c3                   	ret

00000000000106b2 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   106b2:	55                   	push   %rbp
   106b3:	48 89 e5             	mov    %rsp,%rbp
   106b6:	48 83 ec 20          	sub    $0x20,%rsp
   106ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   106be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106c2:	48 89 c7             	mov    %rax,%rdi
   106c5:	e8 c4 fa ff ff       	call   1018e <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   106ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   106ce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   106d2:	be 01 00 00 00       	mov    $0x1,%esi
   106d7:	48 89 c7             	mov    %rax,%rdi
   106da:	e8 45 04 00 00       	call   10b24 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   106df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   106e3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   106e7:	48 89 c7             	mov    %rax,%rdi
   106ea:	e8 23 fb ff ff       	call   10212 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   106ef:	c9                   	leave
   106f0:	c3                   	ret

00000000000106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   106f1:	55                   	push   %rbp
   106f2:	48 89 e5             	mov    %rsp,%rbp
   106f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   106f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106fd:	5d                   	pop    %rbp
   106fe:	c3                   	ret

00000000000106ff <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   106ff:	55                   	push   %rbp
   10700:	48 89 e5             	mov    %rsp,%rbp
   10703:	48 83 ec 20          	sub    $0x20,%rsp
   10707:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1070b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1070f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   10713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10717:	48 89 c7             	mov    %rax,%rdi
   1071a:	e8 d2 ff ff ff       	call   106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   1071f:	48 89 c2             	mov    %rax,%rdx
   10722:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1072a:	48 89 ce             	mov    %rcx,%rsi
   1072d:	48 89 c7             	mov    %rax,%rdi
   10730:	e8 31 04 00 00       	call   10b66 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
   10735:	90                   	nop
   10736:	c9                   	leave
   10737:	c3                   	ret

0000000000010738 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   10738:	55                   	push   %rbp
   10739:	48 89 e5             	mov    %rsp,%rbp
   1073c:	53                   	push   %rbx
   1073d:	48 83 ec 68          	sub    $0x68,%rsp
   10741:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   10745:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   10749:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   1074d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10751:	48 8d 15 21 3c 00 00 	lea    0x3c21(%rip),%rdx        # 14379 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
   10758:	be 01 00 00 00       	mov    $0x1,%esi
   1075d:	48 89 c7             	mov    %rax,%rdi
   10760:	e8 83 02 00 00       	call   109e8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   10765:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   10769:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1076d:	48 8b 00             	mov    (%rax),%rax
   10770:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   10774:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10778:	48 8b 40 08          	mov    0x8(%rax),%rax
   1077c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   10780:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10784:	48 89 c7             	mov    %rax,%rdi
   10787:	e8 dc f9 ff ff       	call   10168 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   1078c:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   10790:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   10794:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10798:	48 89 d6             	mov    %rdx,%rsi
   1079b:	48 89 c7             	mov    %rax,%rdi
   1079e:	e8 0d 03 00 00       	call   10ab0 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   107a3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   107a7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   107ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   107af:	48 89 d6             	mov    %rdx,%rsi
   107b2:	48 89 c7             	mov    %rax,%rdi
   107b5:	e8 ce ca ff ff       	call   d288 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   107ba:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   107be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   107c2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   107c6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   107ca:	48 89 c7             	mov    %rax,%rdi
   107cd:	e8 1f ff ff ff       	call   106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   107d2:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   107d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107d9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   107e0:	00 
	  _Alloc_traits::construct(this->_M_impl,
   107e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   107e5:	48 01 c1             	add    %rax,%rcx
   107e8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   107ec:	48 89 ce             	mov    %rcx,%rsi
   107ef:	48 89 c7             	mov    %rax,%rdi
   107f2:	e8 08 ff ff ff       	call   106ff <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   107f7:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   107fe:	00 
					 __new_start, _M_get_Tp_allocator());
   107ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10803:	48 89 c7             	mov    %rax,%rdi
   10806:	e8 1b c1 ff ff       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1080b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   1080e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   10812:	48 89 c7             	mov    %rax,%rdi
   10815:	e8 b0 fc ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1081a:	48 8b 30             	mov    (%rax),%rsi
   1081d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10821:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10825:	48 89 d9             	mov    %rbx,%rcx
   10828:	48 89 c7             	mov    %rax,%rdi
   1082b:	e8 c2 02 00 00       	call   10af2 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   10830:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   10834:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   10839:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1083d:	48 89 c7             	mov    %rax,%rdi
   10840:	e8 e1 c0 ff ff       	call   c926 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10845:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   10848:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1084c:	48 89 c7             	mov    %rax,%rdi
   1084f:	e8 76 fc ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10854:	48 8b 00             	mov    (%rax),%rax
   10857:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1085b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   1085f:	48 89 d9             	mov    %rbx,%rcx
   10862:	48 89 c7             	mov    %rax,%rdi
   10865:	e8 88 02 00 00       	call   10af2 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   1086a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   1086e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   10872:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   10876:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   1087a:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   1087e:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   10882:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10886:	48 89 ce             	mov    %rcx,%rsi
   10889:	48 89 c7             	mov    %rax,%rdi
   1088c:	e8 29 c9 ff ff       	call   d1ba <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   10891:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10895:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10899:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   1089c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   108a0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   108a4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   108a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   108b3:	00 
   108b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   108b8:	48 01 c2             	add    %rax,%rdx
   108bb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   108bf:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   108c3:	90                   	nop
   108c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   108c8:	c9                   	leave
   108c9:	c3                   	ret

00000000000108ca <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   108ca:	55                   	push   %rbp
   108cb:	48 89 e5             	mov    %rsp,%rbp
   108ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   108d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   108da:	5d                   	pop    %rbp
   108db:	c3                   	ret

00000000000108dc <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   108dc:	55                   	push   %rbp
   108dd:	48 89 e5             	mov    %rsp,%rbp
   108e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   108e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108e8:	5d                   	pop    %rbp
   108e9:	c3                   	ret

00000000000108ea <_ZSt10__exchangeIbbET_RS0_OT0_>:
    __exchange(_Tp& __obj, _Up&& __new_val)
   108ea:	55                   	push   %rbp
   108eb:	48 89 e5             	mov    %rsp,%rbp
   108ee:	48 83 ec 20          	sub    $0x20,%rsp
   108f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      _Tp __old_val = std::move(__obj);
   108fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108fe:	48 89 c7             	mov    %rax,%rdi
   10901:	e8 9f 02 00 00       	call   10ba5 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
   10906:	0f b6 00             	movzbl (%rax),%eax
   10909:	88 45 ff             	mov    %al,-0x1(%rbp)
      __obj = std::forward<_Up>(__new_val);
   1090c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10910:	48 89 c7             	mov    %rax,%rdi
   10913:	e8 c4 ff ff ff       	call   108dc <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   10918:	0f b6 10             	movzbl (%rax),%edx
   1091b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1091f:	88 10                	mov    %dl,(%rax)
      return __old_val;
   10921:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    }
   10925:	c9                   	leave
   10926:	c3                   	ret
   10927:	90                   	nop

0000000000010928 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   10928:	55                   	push   %rbp
   10929:	48 89 e5             	mov    %rsp,%rbp
   1092c:	48 83 ec 10          	sub    $0x10,%rsp
   10930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10934:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   10938:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1093c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10940:	48 89 d6             	mov    %rdx,%rsi
   10943:	48 89 c7             	mov    %rax,%rdi
   10946:	e8 3d c9 ff ff       	call   d288 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   1094b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1094f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   10952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10956:	48 8b 10             	mov    (%rax),%rdx
   10959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1095d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   10961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10965:	48 8b 00             	mov    (%rax),%rax
   10968:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1096c:	48 c1 e2 03          	shl    $0x3,%rdx
   10970:	48 01 c2             	add    %rax,%rdx
   10973:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10977:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1097b:	90                   	nop
   1097c:	c9                   	leave
   1097d:	c3                   	ret

000000000001097e <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1097e:	55                   	push   %rbp
   1097f:	48 89 e5             	mov    %rsp,%rbp
   10982:	48 83 ec 20          	sub    $0x20,%rsp
   10986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1098a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1098e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   10992:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1099a:	48 89 d6             	mov    %rdx,%rsi
   1099d:	48 89 c7             	mov    %rax,%rdi
   109a0:	e8 0e 02 00 00       	call   10bb3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
   109a5:	c9                   	leave
   109a6:	c3                   	ret
   109a7:	90                   	nop

00000000000109a8 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   109a8:	55                   	push   %rbp
   109a9:	48 89 e5             	mov    %rsp,%rbp
   109ac:	53                   	push   %rbx
   109ad:	48 83 ec 28          	sub    $0x28,%rsp
   109b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   109b9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   109bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109c1:	48 89 c6             	mov    %rax,%rsi
   109c4:	bf 08 00 00 00       	mov    $0x8,%edi
   109c9:	e8 f2 2e ff ff       	call   38c0 <_ZnwmPv>
   109ce:	48 89 c3             	mov    %rax,%rbx
   109d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   109d5:	48 89 c7             	mov    %rax,%rdi
   109d8:	e8 fb fa ff ff       	call   104d8 <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   109dd:	48 89 03             	mov    %rax,(%rbx)
   109e0:	90                   	nop
   109e1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   109e5:	c9                   	leave
   109e6:	c3                   	ret
   109e7:	90                   	nop

00000000000109e8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   109e8:	55                   	push   %rbp
   109e9:	48 89 e5             	mov    %rsp,%rbp
   109ec:	53                   	push   %rbx
   109ed:	48 83 ec 38          	sub    $0x38,%rsp
   109f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   109f5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   109f9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   109fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a01:	48 89 c7             	mov    %rax,%rdi
   10a04:	e8 d3 01 00 00       	call   10bdc <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   10a09:	48 89 c3             	mov    %rax,%rbx
   10a0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a10:	48 89 c7             	mov    %rax,%rdi
   10a13:	e8 54 f9 ff ff       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   10a18:	48 29 c3             	sub    %rax,%rbx
   10a1b:	48 89 da             	mov    %rbx,%rdx
   10a1e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10a22:	48 39 c2             	cmp    %rax,%rdx
   10a25:	0f 92 c0             	setb   %al
   10a28:	84 c0                	test   %al,%al
   10a2a:	74 0c                	je     10a38 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   10a2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a30:	48 89 c7             	mov    %rax,%rdi
   10a33:	e8 f8 26 ff ff       	call   3130 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   10a38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a3c:	48 89 c7             	mov    %rax,%rdi
   10a3f:	e8 28 f9 ff ff       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   10a44:	48 89 c3             	mov    %rax,%rbx
   10a47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a4b:	48 89 c7             	mov    %rax,%rdi
   10a4e:	e8 19 f9 ff ff       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   10a53:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   10a57:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10a5b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10a5f:	48 89 d6             	mov    %rdx,%rsi
   10a62:	48 89 c7             	mov    %rax,%rdi
   10a65:	e8 39 40 ff ff       	call   4aa3 <_ZSt3maxImERKT_S2_S2_>
   10a6a:	48 8b 00             	mov    (%rax),%rax
   10a6d:	48 01 d8             	add    %rbx,%rax
   10a70:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   10a74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a78:	48 89 c7             	mov    %rax,%rdi
   10a7b:	e8 ec f8 ff ff       	call   1036c <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   10a80:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   10a84:	72 12                	jb     10a98 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   10a86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a8a:	48 89 c7             	mov    %rax,%rdi
   10a8d:	e8 4a 01 00 00       	call   10bdc <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   10a92:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10a96:	73 0e                	jae    10aa6 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   10a98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10a9c:	48 89 c7             	mov    %rax,%rdi
   10a9f:	e8 38 01 00 00       	call   10bdc <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   10aa4:	eb 04                	jmp    10aaa <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   10aa6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10aaa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10aae:	c9                   	leave
   10aaf:	c3                   	ret

0000000000010ab0 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   10ab0:	55                   	push   %rbp
   10ab1:	48 89 e5             	mov    %rsp,%rbp
   10ab4:	53                   	push   %rbx
   10ab5:	48 83 ec 18          	sub    $0x18,%rsp
   10ab9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10abd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   10ac1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ac5:	48 89 c7             	mov    %rax,%rdi
   10ac8:	e8 fd f9 ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10acd:	48 8b 18             	mov    (%rax),%rbx
   10ad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ad4:	48 89 c7             	mov    %rax,%rdi
   10ad7:	e8 ee f9 ff ff       	call   104ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   10adc:	48 8b 00             	mov    (%rax),%rax
   10adf:	48 89 da             	mov    %rbx,%rdx
   10ae2:	48 29 c2             	sub    %rax,%rdx
   10ae5:	48 89 d0             	mov    %rdx,%rax
   10ae8:	48 c1 f8 03          	sar    $0x3,%rax
   10aec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10af0:	c9                   	leave
   10af1:	c3                   	ret

0000000000010af2 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   10af2:	55                   	push   %rbp
   10af3:	48 89 e5             	mov    %rsp,%rbp
   10af6:	48 83 ec 20          	sub    $0x20,%rsp
   10afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10afe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b02:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   10b06:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   10b0a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   10b0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b12:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   10b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b1a:	48 89 c7             	mov    %rax,%rdi
   10b1d:	e8 dc 00 00 00       	call   10bfe <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   10b22:	c9                   	leave
   10b23:	c3                   	ret

0000000000010b24 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   10b24:	55                   	push   %rbp
   10b25:	48 89 e5             	mov    %rsp,%rbp
   10b28:	48 83 ec 20          	sub    $0x20,%rsp
   10b2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   10b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b38:	48 8b 00             	mov    (%rax),%rax
   10b3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10b3f:	48 c1 e2 03          	shl    $0x3,%rdx
   10b43:	48 f7 da             	neg    %rdx
   10b46:	48 01 d0             	add    %rdx,%rax
   10b49:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b4d:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   10b51:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   10b55:	48 89 d6             	mov    %rdx,%rsi
   10b58:	48 89 c7             	mov    %rax,%rdi
   10b5b:	e8 4c f9 ff ff       	call   104ac <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10b60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b64:	c9                   	leave
   10b65:	c3                   	ret

0000000000010b66 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   10b66:	55                   	push   %rbp
   10b67:	48 89 e5             	mov    %rsp,%rbp
   10b6a:	53                   	push   %rbx
   10b6b:	48 83 ec 28          	sub    $0x28,%rsp
   10b6f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10b73:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10b77:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   10b7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b7f:	48 89 c6             	mov    %rax,%rsi
   10b82:	bf 08 00 00 00       	mov    $0x8,%edi
   10b87:	e8 34 2d ff ff       	call   38c0 <_ZnwmPv>
   10b8c:	48 89 c3             	mov    %rax,%rbx
   10b8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b93:	48 89 c7             	mov    %rax,%rdi
   10b96:	e8 56 fb ff ff       	call   106f1 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
   10b9b:	48 89 03             	mov    %rax,(%rbx)
   10b9e:	90                   	nop
   10b9f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10ba3:	c9                   	leave
   10ba4:	c3                   	ret

0000000000010ba5 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
   10ba5:	55                   	push   %rbp
   10ba6:	48 89 e5             	mov    %rsp,%rbp
   10ba9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   10bad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bb1:	5d                   	pop    %rbp
   10bb2:	c3                   	ret

0000000000010bb3 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   10bb3:	55                   	push   %rbp
   10bb4:	48 89 e5             	mov    %rsp,%rbp
   10bb7:	48 83 ec 20          	sub    $0x20,%rsp
   10bbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10bbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10bc3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10bc7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10bcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bcf:	48 89 d6             	mov    %rdx,%rsi
   10bd2:	48 89 c7             	mov    %rax,%rdi
   10bd5:	e8 87 00 00 00       	call   10c61 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
   10bda:	c9                   	leave
   10bdb:	c3                   	ret

0000000000010bdc <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   10bdc:	55                   	push   %rbp
   10bdd:	48 89 e5             	mov    %rsp,%rbp
   10be0:	48 83 ec 10          	sub    $0x10,%rsp
   10be4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   10be8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bec:	48 89 c7             	mov    %rax,%rdi
   10bef:	e8 ca 00 00 00       	call   10cbe <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10bf4:	48 89 c7             	mov    %rax,%rdi
   10bf7:	e8 6c d2 ff ff       	call   de68 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   10bfc:	c9                   	leave
   10bfd:	c3                   	ret

0000000000010bfe <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10bfe:	55                   	push   %rbp
   10bff:	48 89 e5             	mov    %rsp,%rbp
   10c02:	41 54                	push   %r12
   10c04:	53                   	push   %rbx
   10c05:	48 83 ec 20          	sub    $0x20,%rsp
   10c09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10c11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10c15:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10c19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c1d:	48 89 c7             	mov    %rax,%rdi
   10c20:	e8 81 e7 ff ff       	call   f3a6 <_ZSt12__niter_baseIPPKcET_S3_>
   10c25:	49 89 c4             	mov    %rax,%r12
   10c28:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c2c:	48 89 c7             	mov    %rax,%rdi
   10c2f:	e8 72 e7 ff ff       	call   f3a6 <_ZSt12__niter_baseIPPKcET_S3_>
   10c34:	48 89 c3             	mov    %rax,%rbx
   10c37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c3b:	48 89 c7             	mov    %rax,%rdi
   10c3e:	e8 63 e7 ff ff       	call   f3a6 <_ZSt12__niter_baseIPPKcET_S3_>
   10c43:	48 89 c7             	mov    %rax,%rdi
   10c46:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10c4a:	48 89 c1             	mov    %rax,%rcx
   10c4d:	4c 89 e2             	mov    %r12,%rdx
   10c50:	48 89 de             	mov    %rbx,%rsi
   10c53:	e8 74 00 00 00       	call   10ccc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   10c58:	48 83 c4 20          	add    $0x20,%rsp
   10c5c:	5b                   	pop    %rbx
   10c5d:	41 5c                	pop    %r12
   10c5f:	5d                   	pop    %rbp
   10c60:	c3                   	ret

0000000000010c61 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10c61:	55                   	push   %rbp
   10c62:	48 89 e5             	mov    %rsp,%rbp
   10c65:	48 83 ec 20          	sub    $0x20,%rsp
   10c69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10c71:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10c76:	74 40                	je     10cb8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   10c78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c7c:	48 89 c7             	mov    %rax,%rdi
   10c7f:	e8 ab 00 00 00       	call   10d2f <_ZSt11__addressofIPKcEPT_RS2_>
   10c84:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c8c:	48 89 c7             	mov    %rax,%rdi
   10c8f:	e8 a9 00 00 00       	call   10d3d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
   10c94:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10c99:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c9d:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10ca1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ca5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ca9:	48 89 ce             	mov    %rcx,%rsi
   10cac:	48 89 c7             	mov    %rax,%rdi
   10caf:	e8 b0 00 00 00       	call   10d64 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
   10cb4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10cb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10cbc:	c9                   	leave
   10cbd:	c3                   	ret

0000000000010cbe <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   10cbe:	55                   	push   %rbp
   10cbf:	48 89 e5             	mov    %rsp,%rbp
   10cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10cc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cca:	5d                   	pop    %rbp
   10ccb:	c3                   	ret

0000000000010ccc <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10ccc:	55                   	push   %rbp
   10ccd:	48 89 e5             	mov    %rsp,%rbp
   10cd0:	48 83 ec 30          	sub    $0x30,%rsp
   10cd4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10cd8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10cdc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10ce0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10ce4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ce8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10cec:	48 c1 f8 03          	sar    $0x3,%rax
   10cf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10cf4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10cf9:	7e 1f                	jle    10d1a <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10d06:	00 
   10d07:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10d0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d0f:	48 89 ce             	mov    %rcx,%rsi
   10d12:	48 89 c7             	mov    %rax,%rdi
   10d15:	e8 56 27 ff ff       	call   3470 <memmove@plt>
      return __result + __count;
   10d1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d1e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10d25:	00 
   10d26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d2a:	48 01 d0             	add    %rdx,%rax
    }
   10d2d:	c9                   	leave
   10d2e:	c3                   	ret

0000000000010d2f <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   10d2f:	55                   	push   %rbp
   10d30:	48 89 e5             	mov    %rsp,%rbp
   10d33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   10d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d3b:	5d                   	pop    %rbp
   10d3c:	c3                   	ret

0000000000010d3d <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   10d3d:	55                   	push   %rbp
   10d3e:	48 89 e5             	mov    %rsp,%rbp
   10d41:	48 83 ec 10          	sub    $0x10,%rsp
   10d45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   10d49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d4d:	48 89 c6             	mov    %rax,%rsi
   10d50:	bf 08 00 00 00       	mov    $0x8,%edi
   10d55:	e8 66 2b ff ff       	call   38c0 <_ZnwmPv>
   10d5a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   10d61:	90                   	nop
   10d62:	c9                   	leave
   10d63:	c3                   	ret

0000000000010d64 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   10d64:	55                   	push   %rbp
   10d65:	48 89 e5             	mov    %rsp,%rbp
   10d68:	48 83 ec 20          	sub    $0x20,%rsp
   10d6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10d74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   10d78:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10d7c:	48 89 c7             	mov    %rax,%rdi
   10d7f:	e8 24 00 00 00       	call   10da8 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   10d84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10d88:	48 89 c7             	mov    %rax,%rdi
   10d8b:	e8 2d ae ff ff       	call   bbbd <_ZSt17__size_to_integerm>
   10d90:	48 89 c1             	mov    %rax,%rcx
   10d93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10d9b:	48 89 ce             	mov    %rcx,%rsi
   10d9e:	48 89 c7             	mov    %rax,%rdi
   10da1:	e8 0d 00 00 00       	call   10db3 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   10da6:	c9                   	leave
   10da7:	c3                   	ret

0000000000010da8 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   10da8:	55                   	push   %rbp
   10da9:	48 89 e5             	mov    %rsp,%rbp
   10dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   10db0:	90                   	nop
   10db1:	5d                   	pop    %rbp
   10db2:	c3                   	ret

0000000000010db3 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   10db3:	55                   	push   %rbp
   10db4:	48 89 e5             	mov    %rsp,%rbp
   10db7:	48 83 ec 20          	sub    $0x20,%rsp
   10dbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10dc3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   10dc7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10dcc:	75 06                	jne    10dd4 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   10dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dd2:	eb 3a                	jmp    10e0e <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   10dd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10dd8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10ddf:	00 
   10de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10de4:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   10de8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10dec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df0:	48 89 ce             	mov    %rcx,%rsi
   10df3:	48 89 c7             	mov    %rax,%rdi
   10df6:	e8 15 00 00 00       	call   10e10 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
   10dfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10dff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10e06:	00 
   10e07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e0b:	48 01 d0             	add    %rdx,%rax
    }
   10e0e:	c9                   	leave
   10e0f:	c3                   	ret

0000000000010e10 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   10e10:	55                   	push   %rbp
   10e11:	48 89 e5             	mov    %rsp,%rbp
   10e14:	48 83 ec 20          	sub    $0x20,%rsp
   10e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10e20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   10e24:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10e28:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e30:	48 89 ce             	mov    %rcx,%rsi
   10e33:	48 89 c7             	mov    %rax,%rdi
   10e36:	e8 03 00 00 00       	call   10e3e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   10e3b:	90                   	nop
   10e3c:	c9                   	leave
   10e3d:	c3                   	ret

0000000000010e3e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   10e3e:	55                   	push   %rbp
   10e3f:	48 89 e5             	mov    %rsp,%rbp
   10e42:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10e46:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10e4a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   10e4e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e52:	48 8b 00             	mov    (%rax),%rax
   10e55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   10e59:	eb 10                	jmp    10e6b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   10e5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e5f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10e63:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   10e66:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   10e6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e6f:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10e73:	75 e6                	jne    10e5b <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   10e75:	90                   	nop
   10e76:	90                   	nop
   10e77:	5d                   	pop    %rbp
   10e78:	c3                   	ret
   10e79:	90                   	nop

0000000000010e7a <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
   10e7a:	55                   	push   %rbp
   10e7b:	48 89 e5             	mov    %rsp,%rbp
   10e7e:	48 83 ec 10          	sub    $0x10,%rsp
   10e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    : mWidth{settings.graphics.screenWidth},
   10e8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e8e:	8b 50 50             	mov    0x50(%rax),%edx
   10e91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e95:	89 50 08             	mov    %edx,0x8(%rax)
      mHeight{settings.graphics.screenHeight} {
   10e98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e9c:	8b 50 54             	mov    0x54(%rax),%edx
   10e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ea3:	89 50 0c             	mov    %edx,0xc(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
   10ea6:	be 00 00 00 00       	mov    $0x0,%esi
   10eab:	bf 01 20 02 00       	mov    $0x22001,%edi
   10eb0:	e8 9b 23 ff ff       	call   3250 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
   10eb5:	be 00 00 00 00       	mov    $0x0,%esi
   10eba:	bf 03 00 02 00       	mov    $0x20003,%edi
   10ebf:	e8 8c 23 ff ff       	call   3250 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
   10ec4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ec8:	48 89 c7             	mov    %rax,%rdi
   10ecb:	e8 10 22 ff ff       	call   30e0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
   10ed0:	48 89 c2             	mov    %rax,%rdx
   10ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ed7:	8b 40 0c             	mov    0xc(%rax),%eax
   10eda:	89 c6                	mov    %eax,%esi
   10edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ee0:	8b 40 08             	mov    0x8(%rax),%eax
   10ee3:	41 b8 00 00 00 00    	mov    $0x0,%r8d
   10ee9:	b9 00 00 00 00       	mov    $0x0,%ecx
   10eee:	89 c7                	mov    %eax,%edi
   10ef0:	e8 6b 25 ff ff       	call   3460 <glfwCreateWindow@plt>
   10ef5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ef9:	48 89 02             	mov    %rax,(%rdx)
                             nullptr, nullptr);
}
   10efc:	90                   	nop
   10efd:	c9                   	leave
   10efe:	c3                   	ret
   10eff:	90                   	nop

0000000000010f00 <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
   10f00:	55                   	push   %rbp
   10f01:	48 89 e5             	mov    %rsp,%rbp
   10f04:	48 83 ec 10          	sub    $0x10,%rsp
   10f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f10:	48 8b 00             	mov    (%rax),%rax
   10f13:	48 89 c7             	mov    %rax,%rdi
   10f16:	e8 65 21 ff ff       	call   3080 <glfwDestroyWindow@plt>
   10f1b:	90                   	nop
   10f1c:	c9                   	leave
   10f1d:	c3                   	ret

0000000000010f1e <_ZN4neko6Window4openEv>:

void Window::open() {
   10f1e:	55                   	push   %rbp
   10f1f:	48 89 e5             	mov    %rsp,%rbp
   10f22:	48 83 ec 10          	sub    $0x10,%rsp
   10f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
   10f2a:	eb 05                	jmp    10f31 <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
   10f2c:	e8 6f 23 ff ff       	call   32a0 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
   10f31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f35:	48 8b 00             	mov    (%rax),%rax
   10f38:	48 89 c7             	mov    %rax,%rdi
   10f3b:	e8 d0 25 ff ff       	call   3510 <glfwWindowShouldClose@plt>
   10f40:	85 c0                	test   %eax,%eax
   10f42:	0f 94 c0             	sete   %al
   10f45:	84 c0                	test   %al,%al
   10f47:	75 e3                	jne    10f2c <_ZN4neko6Window4openEv+0xe>
  }
}
   10f49:	90                   	nop
   10f4a:	90                   	nop
   10f4b:	c9                   	leave
   10f4c:	c3                   	ret
   10f4d:	90                   	nop

0000000000010f4e <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
   10f4e:	55                   	push   %rbp
   10f4f:	48 89 e5             	mov    %rsp,%rbp
   10f52:	41 54                	push   %r12
   10f54:	53                   	push   %rbx
   10f55:	48 83 ec 20          	sub    $0x20,%rsp
   10f59:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f5d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10f61:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
   10f65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10f6d:	48 89 10             	mov    %rdx,(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
   10f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10f74:	4c 8d 60 08          	lea    0x8(%rax),%r12
   10f78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f7c:	48 89 c7             	mov    %rax,%rdi
   10f7f:	e8 c8 00 00 00       	call   1104c <_ZNK4neko6WindowdeEv>
   10f84:	48 8b 18             	mov    (%rax),%rbx
   10f87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f8b:	48 89 c7             	mov    %rax,%rdi
   10f8e:	e8 39 ac ff ff       	call   bbcc <_ZNK4neko8InstancedeEv>
   10f93:	48 8b 00             	mov    (%rax),%rax
   10f96:	4c 89 e1             	mov    %r12,%rcx
   10f99:	ba 00 00 00 00       	mov    $0x0,%edx
   10f9e:	48 89 de             	mov    %rbx,%rsi
   10fa1:	48 89 c7             	mov    %rax,%rdi
   10fa4:	e8 a7 24 ff ff       	call   3450 <glfwCreateWindowSurface@plt>
   10fa9:	85 c0                	test   %eax,%eax
   10fab:	0f 95 c0             	setne  %al
   10fae:	84 c0                	test   %al,%al
   10fb0:	74 51                	je     11003 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
   10fb2:	bf 10 00 00 00       	mov    $0x10,%edi
   10fb7:	e8 54 21 ff ff       	call   3110 <__cxa_allocate_exception@plt>
   10fbc:	48 89 c3             	mov    %rax,%rbx
   10fbf:	48 8d 05 32 40 00 00 	lea    0x4032(%rip),%rax        # 14ff8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
   10fc6:	48 89 c6             	mov    %rax,%rsi
   10fc9:	48 89 df             	mov    %rbx,%rdi
   10fcc:	e8 df 20 ff ff       	call   30b0 <_ZNSt13runtime_errorC1EPKc@plt>
   10fd1:	48 8b 05 e0 ff 00 00 	mov    0xffe0(%rip),%rax        # 20fb8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10fd8:	48 89 c2             	mov    %rax,%rdx
   10fdb:	48 8d 05 5e fd 00 00 	lea    0xfd5e(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10fe2:	48 89 c6             	mov    %rax,%rsi
   10fe5:	48 89 df             	mov    %rbx,%rdi
   10fe8:	e8 c3 24 ff ff       	call   34b0 <__cxa_throw@plt>
   10fed:	49 89 c4             	mov    %rax,%r12
   10ff0:	48 89 df             	mov    %rbx,%rdi
   10ff3:	e8 b8 21 ff ff       	call   31b0 <__cxa_free_exception@plt>
   10ff8:	4c 89 e0             	mov    %r12,%rax
   10ffb:	48 89 c7             	mov    %rax,%rdi
   10ffe:	e8 cd 24 ff ff       	call   34d0 <_Unwind_Resume@plt>
  }
}
   11003:	90                   	nop
   11004:	48 83 c4 20          	add    $0x20,%rsp
   11008:	5b                   	pop    %rbx
   11009:	41 5c                	pop    %r12
   1100b:	5d                   	pop    %rbp
   1100c:	c3                   	ret
   1100d:	90                   	nop

000000000001100e <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
   1100e:	55                   	push   %rbp
   1100f:	48 89 e5             	mov    %rsp,%rbp
   11012:	53                   	push   %rbx
   11013:	48 83 ec 18          	sub    $0x18,%rsp
   11017:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1101b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1101f:	48 8b 58 08          	mov    0x8(%rax),%rbx
   11023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11027:	48 8b 00             	mov    (%rax),%rax
   1102a:	48 89 c7             	mov    %rax,%rdi
   1102d:	e8 9a ab ff ff       	call   bbcc <_ZNK4neko8InstancedeEv>
   11032:	48 8b 00             	mov    (%rax),%rax
   11035:	ba 00 00 00 00       	mov    $0x0,%edx
   1103a:	48 89 de             	mov    %rbx,%rsi
   1103d:	48 89 c7             	mov    %rax,%rdi
   11040:	e8 7b 24 ff ff       	call   34c0 <vkDestroySurfaceKHR@plt>
   11045:	90                   	nop
   11046:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1104a:	c9                   	leave
   1104b:	c3                   	ret

000000000001104c <_ZNK4neko6WindowdeEv>:

  Window &operator=(Window &&) = default;

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
   1104c:	55                   	push   %rbp
   1104d:	48 89 e5             	mov    %rsp,%rbp
   11050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11058:	5d                   	pop    %rbp
   11059:	c3                   	ret

000000000001105a <_Z41__static_initialization_and_destruction_0ii>:
#include "engine.hpp"

   1105a:	55                   	push   %rbp
   1105b:	48 89 e5             	mov    %rsp,%rbp
   1105e:	48 83 ec 10          	sub    $0x10,%rsp
   11062:	89 7d fc             	mov    %edi,-0x4(%rbp)
   11065:	89 75 f8             	mov    %esi,-0x8(%rbp)
   11068:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   1106c:	75 3b                	jne    110a9 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   1106e:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   11075:	75 32                	jne    110a9 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   11077:	48 8d 05 7f 04 01 00 	lea    0x1047f(%rip),%rax        # 214fd <_ZStL8__ioinit>
   1107e:	48 89 c7             	mov    %rax,%rdi
   11081:	e8 ba 23 ff ff       	call   3440 <_ZNSt8ios_base4InitC1Ev@plt>
   11086:	48 8d 05 fb 01 01 00 	lea    0x101fb(%rip),%rax        # 21288 <__dso_handle>
   1108d:	48 89 c2             	mov    %rax,%rdx
   11090:	48 8d 05 66 04 01 00 	lea    0x10466(%rip),%rax        # 214fd <_ZStL8__ioinit>
   11097:	48 89 c6             	mov    %rax,%rsi
   1109a:	48 8b 05 37 ff 00 00 	mov    0xff37(%rip),%rax        # 20fd8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   110a1:	48 89 c7             	mov    %rax,%rdi
   110a4:	e8 b7 21 ff ff       	call   3260 <__cxa_atexit@plt>
   110a9:	90                   	nop
   110aa:	c9                   	leave
   110ab:	c3                   	ret

00000000000110ac <_GLOBAL__sub_I_engine.cpp>:
   110ac:	55                   	push   %rbp
   110ad:	48 89 e5             	mov    %rsp,%rbp
   110b0:	be ff ff 00 00       	mov    $0xffff,%esi
   110b5:	bf 01 00 00 00       	mov    $0x1,%edi
   110ba:	e8 9b ff ff ff       	call   1105a <_Z41__static_initialization_and_destruction_0ii>
   110bf:	5d                   	pop    %rbp
   110c0:	c3                   	ret

Disassembly of section .fini:

00000000000110c4 <_fini>:
   110c4:	48 83 ec 08          	sub    $0x8,%rsp
   110c8:	48 83 c4 08          	add    $0x8,%rsp
   110cc:	c3                   	ret
