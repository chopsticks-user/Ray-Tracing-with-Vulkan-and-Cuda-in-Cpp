
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 6f 02 00 	mov    0x26fad(%rip),%rax        # 2afb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 6f 02 00    	push   0x26fca(%rip)        # 2aff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 6f 02 00    	jmp    *0x26fcc(%rip)        # 2aff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 6f 02 00    	jmp    *0x26fca(%rip)        # 2b000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 6f 02 00    	jmp    *0x26fc2(%rip)        # 2b008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <vkCmdEndRenderPass@plt>:
    4050:	ff 25 ba 6f 02 00    	jmp    *0x26fba(%rip)        # 2b010 <vkCmdEndRenderPass@Base>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4060:	ff 25 b2 6f 02 00    	jmp    *0x26fb2(%rip)        # 2b018 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSaIcED2Ev@plt>:
    4070:	ff 25 aa 6f 02 00    	jmp    *0x26faa(%rip)        # 2b020 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4080:	ff 25 a2 6f 02 00    	jmp    *0x26fa2(%rip)        # 2b028 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4090:	ff 25 9a 6f 02 00    	jmp    *0x26f9a(%rip)        # 2b030 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <_ZNSolsEm@plt>:
    40a0:	ff 25 92 6f 02 00    	jmp    *0x26f92(%rip)        # 2b038 <_ZNSolsEm@GLIBCXX_3.4>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <vkDeviceWaitIdle@plt>:
    40b0:	ff 25 8a 6f 02 00    	jmp    *0x26f8a(%rip)        # 2b040 <vkDeviceWaitIdle@Base>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40c0:	ff 25 82 6f 02 00    	jmp    *0x26f82(%rip)        # 2b048 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySwapchainKHR@plt>:
    40d0:	ff 25 7a 6f 02 00    	jmp    *0x26f7a(%rip)        # 2b050 <vkDestroySwapchainKHR@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <vkDestroySemaphore@plt>:
    40e0:	ff 25 72 6f 02 00    	jmp    *0x26f72(%rip)        # 2b058 <vkDestroySemaphore@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <glfwDestroyWindow@plt>:
    40f0:	ff 25 6a 6f 02 00    	jmp    *0x26f6a(%rip)        # 2b060 <glfwDestroyWindow@Base>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZSt17__throw_bad_allocv@plt>:
    4100:	ff 25 62 6f 02 00    	jmp    *0x26f62(%rip)        # 2b068 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    4110:	ff 25 5a 6f 02 00    	jmp    *0x26f5a(%rip)        # 2b070 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <_ZNSt13runtime_errorC1EPKc@plt>:
    4120:	ff 25 52 6f 02 00    	jmp    *0x26f52(%rip)        # 2b078 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkGetPhysicalDeviceProperties@plt>:
    4130:	ff 25 4a 6f 02 00    	jmp    *0x26f4a(%rip)        # 2b080 <vkGetPhysicalDeviceProperties@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <__cxa_begin_catch@plt>:
    4140:	ff 25 42 6f 02 00    	jmp    *0x26f42(%rip)        # 2b088 <__cxa_begin_catch@CXXABI_1.3>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkAcquireNextImageKHR@plt>:
    4150:	ff 25 3a 6f 02 00    	jmp    *0x26f3a(%rip)        # 2b090 <vkAcquireNextImageKHR@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateCommandPool@plt>:
    4160:	ff 25 32 6f 02 00    	jmp    *0x26f32(%rip)        # 2b098 <vkCreateCommandPool@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <strlen@plt>:
    4170:	ff 25 2a 6f 02 00    	jmp    *0x26f2a(%rip)        # 2b0a0 <strlen@GLIBC_2.2.5>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <memcmp@plt>:
    4180:	ff 25 22 6f 02 00    	jmp    *0x26f22(%rip)        # 2b0a8 <memcmp@GLIBC_2.2.5>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkCreateGraphicsPipelines@plt>:
    4190:	ff 25 1a 6f 02 00    	jmp    *0x26f1a(%rip)        # 2b0b0 <vkCreateGraphicsPipelines@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <__cxa_allocate_exception@plt>:
    41a0:	ff 25 12 6f 02 00    	jmp    *0x26f12(%rip)        # 2b0b8 <__cxa_allocate_exception@CXXABI_1.3>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZSt20__throw_length_errorPKc@plt>:
    41b0:	ff 25 0a 6f 02 00    	jmp    *0x26f0a(%rip)        # 2b0c0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkEnumeratePhysicalDevices@plt>:
    41c0:	ff 25 02 6f 02 00    	jmp    *0x26f02(%rip)        # 2b0c8 <vkEnumeratePhysicalDevices@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <memset@plt>:
    41d0:	ff 25 fa 6e 02 00    	jmp    *0x26efa(%rip)        # 2b0d0 <memset@GLIBC_2.2.5>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSaIcEC1ERKS_@plt>:
    41e0:	ff 25 f2 6e 02 00    	jmp    *0x26ef2(%rip)        # 2b0d8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkWaitForFences@plt>:
    41f0:	ff 25 ea 6e 02 00    	jmp    *0x26eea(%rip)        # 2b0e0 <vkWaitForFences@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <vkGetSwapchainImagesKHR@plt>:
    4200:	ff 25 e2 6e 02 00    	jmp    *0x26ee2(%rip)        # 2b0e8 <vkGetSwapchainImagesKHR@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    4210:	ff 25 da 6e 02 00    	jmp    *0x26eda(%rip)        # 2b0f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4220:	ff 25 d2 6e 02 00    	jmp    *0x26ed2(%rip)        # 2b0f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <vkCreateRenderPass@plt>:
    4230:	ff 25 ca 6e 02 00    	jmp    *0x26eca(%rip)        # 2b100 <vkCreateRenderPass@Base>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4240:	ff 25 c2 6e 02 00    	jmp    *0x26ec2(%rip)        # 2b108 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4250:	ff 25 ba 6e 02 00    	jmp    *0x26eba(%rip)        # 2b110 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4260:	ff 25 b2 6e 02 00    	jmp    *0x26eb2(%rip)        # 2b118 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt19__throw_logic_errorPKc@plt>:
    4270:	ff 25 aa 6e 02 00    	jmp    *0x26eaa(%rip)        # 2b120 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <__cxa_free_exception@plt>:
    4280:	ff 25 a2 6e 02 00    	jmp    *0x26ea2(%rip)        # 2b128 <__cxa_free_exception@CXXABI_1.3>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4290:	ff 25 9a 6e 02 00    	jmp    *0x26e9a(%rip)        # 2b130 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <glfwGetRequiredInstanceExtensions@plt>:
    42a0:	ff 25 92 6e 02 00    	jmp    *0x26e92(%rip)        # 2b138 <glfwGetRequiredInstanceExtensions@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42b0:	ff 25 8a 6e 02 00    	jmp    *0x26e8a(%rip)        # 2b140 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkCreateShaderModule@plt>:
    42c0:	ff 25 82 6e 02 00    	jmp    *0x26e82(%rip)        # 2b148 <vkCreateShaderModule@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    42d0:	ff 25 7a 6e 02 00    	jmp    *0x26e7a(%rip)        # 2b150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkDestroyDevice@plt>:
    42e0:	ff 25 72 6e 02 00    	jmp    *0x26e72(%rip)        # 2b158 <vkDestroyDevice@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkCreatePipelineLayout@plt>:
    42f0:	ff 25 6a 6e 02 00    	jmp    *0x26e6a(%rip)        # 2b160 <vkCreatePipelineLayout@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <vkEnumerateInstanceExtensionProperties@plt>:
    4300:	ff 25 62 6e 02 00    	jmp    *0x26e62(%rip)        # 2b168 <vkEnumerateInstanceExtensionProperties@Base>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4310:	ff 25 5a 6e 02 00    	jmp    *0x26e5a(%rip)        # 2b170 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <glfwWindowHint@plt>:
    4320:	ff 25 52 6e 02 00    	jmp    *0x26e52(%rip)        # 2b178 <glfwWindowHint@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4330:	ff 25 4a 6e 02 00    	jmp    *0x26e4a(%rip)        # 2b180 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkCmdBindPipeline@plt>:
    4340:	ff 25 42 6e 02 00    	jmp    *0x26e42(%rip)        # 2b188 <vkCmdBindPipeline@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <__cxa_atexit@plt>:
    4350:	ff 25 3a 6e 02 00    	jmp    *0x26e3a(%rip)        # 2b190 <__cxa_atexit@GLIBC_2.2.5>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4360:	ff 25 32 6e 02 00    	jmp    *0x26e32(%rip)        # 2b198 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkAllocateCommandBuffers@plt>:
    4370:	ff 25 2a 6e 02 00    	jmp    *0x26e2a(%rip)        # 2b1a0 <vkAllocateCommandBuffers@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkGetPhysicalDeviceProperties2@plt>:
    4380:	ff 25 22 6e 02 00    	jmp    *0x26e22(%rip)        # 2b1a8 <vkGetPhysicalDeviceProperties2@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkGetInstanceProcAddr@plt>:
    4390:	ff 25 1a 6e 02 00    	jmp    *0x26e1a(%rip)        # 2b1b0 <vkGetInstanceProcAddr@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <glfwPollEvents@plt>:
    43a0:	ff 25 12 6e 02 00    	jmp    *0x26e12(%rip)        # 2b1b8 <glfwPollEvents@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkDestroyRenderPass@plt>:
    43b0:	ff 25 0a 6e 02 00    	jmp    *0x26e0a(%rip)        # 2b1c0 <vkDestroyRenderPass@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    43c0:	ff 25 02 6e 02 00    	jmp    *0x26e02(%rip)        # 2b1c8 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_Znwm@plt>:
    43d0:	ff 25 fa 6d 02 00    	jmp    *0x26dfa(%rip)        # 2b1d0 <_Znwm@GLIBCXX_3.4>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <vkBeginCommandBuffer@plt>:
    43e0:	ff 25 f2 6d 02 00    	jmp    *0x26df2(%rip)        # 2b1d8 <vkBeginCommandBuffer@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_ZdlPvm@plt>:
    43f0:	ff 25 ea 6d 02 00    	jmp    *0x26dea(%rip)        # 2b1e0 <_ZdlPvm@CXXABI_1.3.9>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkDestroyInstance@plt>:
    4400:	ff 25 e2 6d 02 00    	jmp    *0x26de2(%rip)        # 2b1e8 <vkDestroyInstance@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <glfwTerminate@plt>:
    4410:	ff 25 da 6d 02 00    	jmp    *0x26dda(%rip)        # 2b1f0 <glfwTerminate@Base>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <vkCreateImageView@plt>:
    4420:	ff 25 d2 6d 02 00    	jmp    *0x26dd2(%rip)        # 2b1f8 <vkCreateImageView@Base>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4430:	ff 25 ca 6d 02 00    	jmp    *0x26dca(%rip)        # 2b200 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNSolsEPFRSoS_E@plt>:
    4440:	ff 25 c2 6d 02 00    	jmp    *0x26dc2(%rip)        # 2b208 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    4450:	ff 25 ba 6d 02 00    	jmp    *0x26dba(%rip)        # 2b210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4460:	ff 25 b2 6d 02 00    	jmp    *0x26db2(%rip)        # 2b218 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4470:	ff 25 aa 6d 02 00    	jmp    *0x26daa(%rip)        # 2b220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZNSaIcED1Ev@plt>:
    4480:	ff 25 a2 6d 02 00    	jmp    *0x26da2(%rip)        # 2b228 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkDestroyFence@plt>:
    4490:	ff 25 9a 6d 02 00    	jmp    *0x26d9a(%rip)        # 2b230 <vkDestroyFence@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <vkDestroyPipeline@plt>:
    44a0:	ff 25 92 6d 02 00    	jmp    *0x26d92(%rip)        # 2b238 <vkDestroyPipeline@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    44b0:	ff 25 8a 6d 02 00    	jmp    *0x26d8a(%rip)        # 2b240 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    44c0:	ff 25 82 6d 02 00    	jmp    *0x26d82(%rip)        # 2b248 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkEnumerateInstanceLayerProperties@plt>:
    44d0:	ff 25 7a 6d 02 00    	jmp    *0x26d7a(%rip)        # 2b250 <vkEnumerateInstanceLayerProperties@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <glfwInit@plt>:
    44e0:	ff 25 72 6d 02 00    	jmp    *0x26d72(%rip)        # 2b258 <glfwInit@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    44f0:	ff 25 6a 6d 02 00    	jmp    *0x26d6a(%rip)        # 2b260 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <vkCreateSwapchainKHR@plt>:
    4500:	ff 25 62 6d 02 00    	jmp    *0x26d62(%rip)        # 2b268 <vkCreateSwapchainKHR@Base>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4510:	ff 25 5a 6d 02 00    	jmp    *0x26d5a(%rip)        # 2b270 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkDestroyShaderModule@plt>:
    4520:	ff 25 52 6d 02 00    	jmp    *0x26d52(%rip)        # 2b278 <vkDestroyShaderModule@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <vkCreateInstance@plt>:
    4530:	ff 25 4a 6d 02 00    	jmp    *0x26d4a(%rip)        # 2b280 <vkCreateInstance@Base>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4540:	ff 25 42 6d 02 00    	jmp    *0x26d42(%rip)        # 2b288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkCreateFence@plt>:
    4550:	ff 25 3a 6d 02 00    	jmp    *0x26d3a(%rip)        # 2b290 <vkCreateFence@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkResetCommandBuffer@plt>:
    4560:	ff 25 32 6d 02 00    	jmp    *0x26d32(%rip)        # 2b298 <vkResetCommandBuffer@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkDestroyPipelineLayout@plt>:
    4570:	ff 25 2a 6d 02 00    	jmp    *0x26d2a(%rip)        # 2b2a0 <vkDestroyPipelineLayout@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <_ZNSi4readEPcl@plt>:
    4580:	ff 25 22 6d 02 00    	jmp    *0x26d22(%rip)        # 2b2a8 <_ZNSi4readEPcl@GLIBCXX_3.4>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4590:	ff 25 1a 6d 02 00    	jmp    *0x26d1a(%rip)        # 2b2b0 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    45a0:	ff 25 12 6d 02 00    	jmp    *0x26d12(%rip)        # 2b2b8 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    45b0:	ff 25 0a 6d 02 00    	jmp    *0x26d0a(%rip)        # 2b2c0 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkQueueSubmit@plt>:
    45c0:	ff 25 02 6d 02 00    	jmp    *0x26d02(%rip)        # 2b2c8 <vkQueueSubmit@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <vkGetDeviceQueue@plt>:
    45d0:	ff 25 fa 6c 02 00    	jmp    *0x26cfa(%rip)        # 2b2d0 <vkGetDeviceQueue@Base>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <_ZNSolsEj@plt>:
    45e0:	ff 25 f2 6c 02 00    	jmp    *0x26cf2(%rip)        # 2b2d8 <_ZNSolsEj@GLIBCXX_3.4>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkCreateFramebuffer@plt>:
    45f0:	ff 25 ea 6c 02 00    	jmp    *0x26cea(%rip)        # 2b2e0 <vkCreateFramebuffer@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4600:	ff 25 e2 6c 02 00    	jmp    *0x26ce2(%rip)        # 2b2e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4610:	ff 25 da 6c 02 00    	jmp    *0x26cda(%rip)        # 2b2f0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <vkEnumerateDeviceExtensionProperties@plt>:
    4620:	ff 25 d2 6c 02 00    	jmp    *0x26cd2(%rip)        # 2b2f8 <vkEnumerateDeviceExtensionProperties@Base>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkCreateSemaphore@plt>:
    4630:	ff 25 ca 6c 02 00    	jmp    *0x26cca(%rip)        # 2b300 <vkCreateSemaphore@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <vkCmdBeginRenderPass@plt>:
    4640:	ff 25 c2 6c 02 00    	jmp    *0x26cc2(%rip)        # 2b308 <vkCmdBeginRenderPass@Base>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <vkDestroyCommandPool@plt>:
    4650:	ff 25 ba 6c 02 00    	jmp    *0x26cba(%rip)        # 2b310 <vkDestroyCommandPool@Base>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <_ZNSaIcEC2ERKS_@plt>:
    4660:	ff 25 b2 6c 02 00    	jmp    *0x26cb2(%rip)        # 2b318 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <__cxa_rethrow@plt>:
    4670:	ff 25 aa 6c 02 00    	jmp    *0x26caa(%rip)        # 2b320 <__cxa_rethrow@CXXABI_1.3>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkCreateDevice@plt>:
    4680:	ff 25 a2 6c 02 00    	jmp    *0x26ca2(%rip)        # 2b328 <vkCreateDevice@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSt8ios_base4InitC1Ev@plt>:
    4690:	ff 25 9a 6c 02 00    	jmp    *0x26c9a(%rip)        # 2b330 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <glfwCreateWindowSurface@plt>:
    46a0:	ff 25 92 6c 02 00    	jmp    *0x26c92(%rip)        # 2b338 <glfwCreateWindowSurface@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkResetFences@plt>:
    46b0:	ff 25 8a 6c 02 00    	jmp    *0x26c8a(%rip)        # 2b340 <vkResetFences@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <glfwCreateWindow@plt>:
    46c0:	ff 25 82 6c 02 00    	jmp    *0x26c82(%rip)        # 2b348 <glfwCreateWindow@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    46d0:	ff 25 7a 6c 02 00    	jmp    *0x26c7a(%rip)        # 2b350 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkQueuePresentKHR@plt>:
    46e0:	ff 25 72 6c 02 00    	jmp    *0x26c72(%rip)        # 2b358 <vkQueuePresentKHR@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    46f0:	ff 25 6a 6c 02 00    	jmp    *0x26c6a(%rip)        # 2b360 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4700:	ff 25 62 6c 02 00    	jmp    *0x26c62(%rip)        # 2b368 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4710:	ff 25 5a 6c 02 00    	jmp    *0x26c5a(%rip)        # 2b370 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <memmove@plt>:
    4720:	ff 25 52 6c 02 00    	jmp    *0x26c52(%rip)        # 2b378 <memmove@GLIBC_2.2.5>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <__cxa_end_catch@plt>:
    4730:	ff 25 4a 6c 02 00    	jmp    *0x26c4a(%rip)        # 2b380 <__cxa_end_catch@CXXABI_1.3>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <vkDestroyFramebuffer@plt>:
    4740:	ff 25 42 6c 02 00    	jmp    *0x26c42(%rip)        # 2b388 <vkDestroyFramebuffer@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <__cxa_throw@plt>:
    4750:	ff 25 3a 6c 02 00    	jmp    *0x26c3a(%rip)        # 2b390 <__cxa_throw@CXXABI_1.3>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4760:	ff 25 32 6c 02 00    	jmp    *0x26c32(%rip)        # 2b398 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4770:	ff 25 2a 6c 02 00    	jmp    *0x26c2a(%rip)        # 2b3a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <_ZNSolsEi@plt>:
    4780:	ff 25 22 6c 02 00    	jmp    *0x26c22(%rip)        # 2b3a8 <_ZNSolsEi@GLIBCXX_3.4>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <_ZNSi5tellgEv@plt>:
    4790:	ff 25 1a 6c 02 00    	jmp    *0x26c1a(%rip)        # 2b3b0 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <vkDestroySurfaceKHR@plt>:
    47a0:	ff 25 12 6c 02 00    	jmp    *0x26c12(%rip)        # 2b3b8 <vkDestroySurfaceKHR@Base>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <_Unwind_Resume@plt>:
    47b0:	ff 25 0a 6c 02 00    	jmp    *0x26c0a(%rip)        # 2b3c0 <_Unwind_Resume@GCC_3.0>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <_ZNSaIcEC1Ev@plt>:
    47c0:	ff 25 02 6c 02 00    	jmp    *0x26c02(%rip)        # 2b3c8 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <vkDestroyImageView@plt>:
    47d0:	ff 25 fa 6b 02 00    	jmp    *0x26bfa(%rip)        # 2b3d0 <vkDestroyImageView@Base>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    47e0:	ff 25 f2 6b 02 00    	jmp    *0x26bf2(%rip)        # 2b3d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <_ZNSt9exceptionD2Ev@plt>:
    47f0:	ff 25 ea 6b 02 00    	jmp    *0x26bea(%rip)        # 2b3e0 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <glfwWindowShouldClose@plt>:
    4800:	ff 25 e2 6b 02 00    	jmp    *0x26be2(%rip)        # 2b3e8 <glfwWindowShouldClose@Base>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <vkEndCommandBuffer@plt>:
    4810:	ff 25 da 6b 02 00    	jmp    *0x26bda(%rip)        # 2b3f0 <vkEndCommandBuffer@Base>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4820:	ff 25 d2 6b 02 00    	jmp    *0x26bd2(%rip)        # 2b3f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <vkCmdDraw@plt>:
    4830:	ff 25 ca 6b 02 00    	jmp    *0x26bca(%rip)        # 2b400 <vkCmdDraw@Base>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4840:	ff 25 c2 6b 02 00    	jmp    *0x26bc2(%rip)        # 2b408 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004850 <__cxa_finalize@plt>:
    4850:	ff 25 3a 67 02 00    	jmp    *0x2673a(%rip)        # 2af90 <__cxa_finalize@GLIBC_2.2.5>
    4856:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004860 <_start>:
    4860:	31 ed                	xor    %ebp,%ebp
    4862:	49 89 d1             	mov    %rdx,%r9
    4865:	5e                   	pop    %rsi
    4866:	48 89 e2             	mov    %rsp,%rdx
    4869:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    486d:	50                   	push   %rax
    486e:	54                   	push   %rsp
    486f:	45 31 c0             	xor    %r8d,%r8d
    4872:	31 c9                	xor    %ecx,%ecx
    4874:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4a24 <main>
    487b:	ff 15 1f 67 02 00    	call   *0x2671f(%rip)        # 2afa0 <__libc_start_main@GLIBC_2.34>
    4881:	f4                   	hlt
    4882:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4889:	00 00 00 
    488c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004890 <deregister_tm_clones>:
    4890:	48 8d 3d 99 6b 02 00 	lea    0x26b99(%rip),%rdi        # 2b430 <__TMC_END__>
    4897:	48 8d 05 92 6b 02 00 	lea    0x26b92(%rip),%rax        # 2b430 <__TMC_END__>
    489e:	48 39 f8             	cmp    %rdi,%rax
    48a1:	74 15                	je     48b8 <deregister_tm_clones+0x28>
    48a3:	48 8b 05 06 67 02 00 	mov    0x26706(%rip),%rax        # 2afb0 <_ITM_deregisterTMCloneTable@Base>
    48aa:	48 85 c0             	test   %rax,%rax
    48ad:	74 09                	je     48b8 <deregister_tm_clones+0x28>
    48af:	ff e0                	jmp    *%rax
    48b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    48b8:	c3                   	ret
    48b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000048c0 <register_tm_clones>:
    48c0:	48 8d 3d 69 6b 02 00 	lea    0x26b69(%rip),%rdi        # 2b430 <__TMC_END__>
    48c7:	48 8d 35 62 6b 02 00 	lea    0x26b62(%rip),%rsi        # 2b430 <__TMC_END__>
    48ce:	48 29 fe             	sub    %rdi,%rsi
    48d1:	48 89 f0             	mov    %rsi,%rax
    48d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    48d8:	48 c1 f8 03          	sar    $0x3,%rax
    48dc:	48 01 c6             	add    %rax,%rsi
    48df:	48 d1 fe             	sar    %rsi
    48e2:	74 14                	je     48f8 <register_tm_clones+0x38>
    48e4:	48 8b 05 d5 66 02 00 	mov    0x266d5(%rip),%rax        # 2afc0 <_ITM_registerTMCloneTable@Base>
    48eb:	48 85 c0             	test   %rax,%rax
    48ee:	74 08                	je     48f8 <register_tm_clones+0x38>
    48f0:	ff e0                	jmp    *%rax
    48f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    48f8:	c3                   	ret
    48f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004900 <__do_global_dtors_aux>:
    4900:	f3 0f 1e fa          	endbr64
    4904:	80 3d 45 6c 02 00 00 	cmpb   $0x0,0x26c45(%rip)        # 2b550 <completed.0>
    490b:	75 2b                	jne    4938 <__do_global_dtors_aux+0x38>
    490d:	55                   	push   %rbp
    490e:	48 83 3d 7a 66 02 00 	cmpq   $0x0,0x2667a(%rip)        # 2af90 <__cxa_finalize@GLIBC_2.2.5>
    4915:	00 
    4916:	48 89 e5             	mov    %rsp,%rbp
    4919:	74 0c                	je     4927 <__do_global_dtors_aux+0x27>
    491b:	48 8b 3d f6 6a 02 00 	mov    0x26af6(%rip),%rdi        # 2b418 <__dso_handle>
    4922:	e8 29 ff ff ff       	call   4850 <__cxa_finalize@plt>
    4927:	e8 64 ff ff ff       	call   4890 <deregister_tm_clones>
    492c:	c6 05 1d 6c 02 00 01 	movb   $0x1,0x26c1d(%rip)        # 2b550 <completed.0>
    4933:	5d                   	pop    %rbp
    4934:	c3                   	ret
    4935:	0f 1f 00             	nopl   (%rax)
    4938:	c3                   	ret
    4939:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004940 <frame_dummy>:
    4940:	f3 0f 1e fa          	endbr64
    4944:	e9 77 ff ff ff       	jmp    48c0 <register_tm_clones>

0000000000004949 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4949:	55                   	push   %rbp
    494a:	48 89 e5             	mov    %rsp,%rbp
    494d:	53                   	push   %rbx
    494e:	48 81 ec 88 01 00 00 	sub    $0x188,%rsp
  VulkanApp app;
    4955:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    495c:	48 89 c7             	mov    %rax,%rdi
    495f:	e8 84 b0 00 00       	call   f9e8 <_ZN9VulkanAppC1Ev>
  app.run();
    4964:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    496b:	48 89 c7             	mov    %rax,%rdi
    496e:	e8 6f b6 00 00       	call   ffe2 <_ZN9VulkanApp3runEv>
  app.writeInfo("/home/xunililak/Code/Projects/4-RTVulkan/info.log");
    4973:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4977:	48 89 c7             	mov    %rax,%rdi
    497a:	e8 41 fe ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    497f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4983:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4987:	48 8d 0d 5a 4c 01 00 	lea    0x14c5a(%rip),%rcx        # 195e8 <_ZN6__pstl9execution2v1L5unseqE+0x5>
    498e:	48 89 ce             	mov    %rcx,%rsi
    4991:	48 89 c7             	mov    %rax,%rdi
    4994:	e8 77 02 00 00       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4999:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    499d:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    49a4:	48 89 d6             	mov    %rdx,%rsi
    49a7:	48 89 c7             	mov    %rax,%rdi
    49aa:	e8 7d b6 00 00       	call   1002c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    49af:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    49b3:	48 89 c7             	mov    %rax,%rdi
    49b6:	e8 65 f8 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    49bb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    49bf:	48 89 c7             	mov    %rax,%rdi
    49c2:	e8 b9 fa ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    49c7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    49cc:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    49d3:	48 89 c7             	mov    %rax,%rdi
    49d6:	e8 f9 b2 00 00       	call   fcd4 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    49db:	89 d8                	mov    %ebx,%eax
    49dd:	eb 3f                	jmp    4a1e <_Z14protected_mainv+0xd5>
  app.writeInfo("/home/xunililak/Code/Projects/4-RTVulkan/info.log");
    49df:	48 89 c3             	mov    %rax,%rbx
    49e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    49e6:	48 89 c7             	mov    %rax,%rdi
    49e9:	e8 32 f8 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    49ee:	eb 03                	jmp    49f3 <_Z14protected_mainv+0xaa>
    49f0:	48 89 c3             	mov    %rax,%rbx
    49f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    49f7:	48 89 c7             	mov    %rax,%rdi
    49fa:	e8 81 fa ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    49ff:	eb 03                	jmp    4a04 <_Z14protected_mainv+0xbb>
}
    4a01:	48 89 c3             	mov    %rax,%rbx
    4a04:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    4a0b:	48 89 c7             	mov    %rax,%rdi
    4a0e:	e8 c1 b2 00 00       	call   fcd4 <_ZN9VulkanAppD1Ev>
    4a13:	48 89 d8             	mov    %rbx,%rax
    4a16:	48 89 c7             	mov    %rax,%rdi
    4a19:	e8 92 fd ff ff       	call   47b0 <_Unwind_Resume@plt>
    4a1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4a22:	c9                   	leave
    4a23:	c3                   	ret

0000000000004a24 <main>:

int main() {
    4a24:	55                   	push   %rbp
    4a25:	48 89 e5             	mov    %rsp,%rbp
    4a28:	53                   	push   %rbx
    4a29:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    4a2d:	e8 17 ff ff ff       	call   4949 <_Z14protected_mainv>
    4a32:	e9 aa 00 00 00       	jmp    4ae1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4a37:	b8 01 00 00 00       	mov    $0x1,%eax
    4a3c:	e9 a0 00 00 00       	jmp    4ae1 <main+0xbd>
  } catch (const std::exception &e) {
    4a41:	48 83 fa 01          	cmp    $0x1,%rdx
    4a45:	75 49                	jne    4a90 <main+0x6c>
    4a47:	48 89 c7             	mov    %rax,%rdi
    4a4a:	e8 f1 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    4a4f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4a53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a57:	48 8b 00             	mov    (%rax),%rax
    4a5a:	48 83 c0 10          	add    $0x10,%rax
    4a5e:	48 8b 10             	mov    (%rax),%rdx
    4a61:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a65:	48 89 c7             	mov    %rax,%rdi
    4a68:	ff d2                	call   *%rdx
    4a6a:	48 89 c6             	mov    %rax,%rsi
    4a6d:	48 8d 05 cc 69 02 00 	lea    0x269cc(%rip),%rax        # 2b440 <_ZSt4cerr@GLIBCXX_3.4>
    4a74:	48 89 c7             	mov    %rax,%rdi
    4a77:	e8 44 f9 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4a7c:	be 0a 00 00 00       	mov    $0xa,%esi
    4a81:	48 89 c7             	mov    %rax,%rdi
    4a84:	e8 67 fa ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4a89:	e8 a2 fc ff ff       	call   4730 <__cxa_end_catch@plt>
    4a8e:	eb a7                	jmp    4a37 <main+0x13>
    4a90:	48 89 c7             	mov    %rax,%rdi
    4a93:	e8 a8 f6 ff ff       	call   4140 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4a98:	48 8d 05 7b 4b 01 00 	lea    0x14b7b(%rip),%rax        # 1961a <_ZN6__pstl9execution2v1L5unseqE+0x37>
    4a9f:	48 89 c6             	mov    %rax,%rsi
    4aa2:	48 8d 05 97 69 02 00 	lea    0x26997(%rip),%rax        # 2b440 <_ZSt4cerr@GLIBCXX_3.4>
    4aa9:	48 89 c7             	mov    %rax,%rdi
    4aac:	e8 0f f9 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    4ab1:	e8 7a fc ff ff       	call   4730 <__cxa_end_catch@plt>
    4ab6:	e9 7c ff ff ff       	jmp    4a37 <main+0x13>
  } catch (...) {
    4abb:	48 89 c3             	mov    %rax,%rbx
    4abe:	e8 6d fc ff ff       	call   4730 <__cxa_end_catch@plt>
    4ac3:	48 89 d8             	mov    %rbx,%rax
    4ac6:	48 89 c7             	mov    %rax,%rdi
    4ac9:	e8 e2 fc ff ff       	call   47b0 <_Unwind_Resume@plt>
  }
    4ace:	48 89 c3             	mov    %rax,%rbx
    4ad1:	e8 5a fc ff ff       	call   4730 <__cxa_end_catch@plt>
    4ad6:	48 89 d8             	mov    %rbx,%rax
    4ad9:	48 89 c7             	mov    %rax,%rdi
    4adc:	e8 cf fc ff ff       	call   47b0 <_Unwind_Resume@plt>
    4ae1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ae5:	c9                   	leave
    4ae6:	c3                   	ret

0000000000004ae7 <_Z41__static_initialization_and_destruction_0ii>:
    4ae7:	55                   	push   %rbp
    4ae8:	48 89 e5             	mov    %rsp,%rbp
    4aeb:	48 83 ec 10          	sub    $0x10,%rsp
    4aef:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4af2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4af5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4af9:	75 3b                	jne    4b36 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4afb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4b02:	75 32                	jne    4b36 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4b04:	48 8d 05 46 6a 02 00 	lea    0x26a46(%rip),%rax        # 2b551 <_ZStL8__ioinit>
    4b0b:	48 89 c7             	mov    %rax,%rdi
    4b0e:	e8 7d fb ff ff       	call   4690 <_ZNSt8ios_base4InitC1Ev@plt>
    4b13:	48 8d 05 fe 68 02 00 	lea    0x268fe(%rip),%rax        # 2b418 <__dso_handle>
    4b1a:	48 89 c2             	mov    %rax,%rdx
    4b1d:	48 8d 05 2d 6a 02 00 	lea    0x26a2d(%rip),%rax        # 2b551 <_ZStL8__ioinit>
    4b24:	48 89 c6             	mov    %rax,%rsi
    4b27:	48 8b 05 9a 64 02 00 	mov    0x2649a(%rip),%rax        # 2afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4b2e:	48 89 c7             	mov    %rax,%rdi
    4b31:	e8 1a f8 ff ff       	call   4350 <__cxa_atexit@plt>
    4b36:	90                   	nop
    4b37:	c9                   	leave
    4b38:	c3                   	ret

0000000000004b39 <_GLOBAL__sub_I__Z14protected_mainv>:
    4b39:	55                   	push   %rbp
    4b3a:	48 89 e5             	mov    %rsp,%rbp
    4b3d:	be ff ff 00 00       	mov    $0xffff,%esi
    4b42:	bf 01 00 00 00       	mov    $0x1,%edi
    4b47:	e8 9b ff ff ff       	call   4ae7 <_Z41__static_initialization_and_destruction_0ii>
    4b4c:	5d                   	pop    %rbp
    4b4d:	c3                   	ret

0000000000004b4e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4b4e:	55                   	push   %rbp
    4b4f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4b52:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4b57:	5d                   	pop    %rbp
    4b58:	c3                   	ret

0000000000004b59 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4b59:	55                   	push   %rbp
    4b5a:	48 89 e5             	mov    %rsp,%rbp
    4b5d:	48 83 ec 10          	sub    $0x10,%rsp
    4b61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4b65:	e8 e4 ff ff ff       	call   4b4e <_ZSt23__is_constant_evaluatedv>
    4b6a:	84 c0                	test   %al,%al
    4b6c:	74 0e                	je     4b7c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b72:	48 89 c7             	mov    %rax,%rdi
    4b75:	e8 12 00 00 00       	call   4b8c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4b7a:	eb 0d                	jmp    4b89 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4b7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b80:	48 89 c7             	mov    %rax,%rdi
    4b83:	e8 e8 f5 ff ff       	call   4170 <strlen@plt>
    4b88:	90                   	nop
      }
    4b89:	c9                   	leave
    4b8a:	c3                   	ret
    4b8b:	90                   	nop

0000000000004b8c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4b8c:	55                   	push   %rbp
    4b8d:	48 89 e5             	mov    %rsp,%rbp
    4b90:	48 83 ec 20          	sub    $0x20,%rsp
    4b94:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4b98:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4b9f:	00 
      while (!eq(__p[__i], char_type()))
    4ba0:	eb 05                	jmp    4ba7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4ba2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4ba7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4bab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4baf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bb3:	48 01 c2             	add    %rax,%rdx
    4bb6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4bba:	48 89 c6             	mov    %rax,%rsi
    4bbd:	48 89 d7             	mov    %rdx,%rdi
    4bc0:	e8 0d 00 00 00       	call   4bd2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4bc5:	83 f0 01             	xor    $0x1,%eax
    4bc8:	84 c0                	test   %al,%al
    4bca:	75 d6                	jne    4ba2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4bd0:	c9                   	leave
    4bd1:	c3                   	ret

0000000000004bd2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4bd2:	55                   	push   %rbp
    4bd3:	48 89 e5             	mov    %rsp,%rbp
    4bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4be2:	0f b6 10             	movzbl (%rax),%edx
    4be5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4be9:	0f b6 00             	movzbl (%rax),%eax
    4bec:	38 c2                	cmp    %al,%dl
    4bee:	0f 94 c0             	sete   %al
    4bf1:	5d                   	pop    %rbp
    4bf2:	c3                   	ret
    4bf3:	90                   	nop

0000000000004bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4bf4:	55                   	push   %rbp
    4bf5:	48 89 e5             	mov    %rsp,%rbp
    4bf8:	48 83 ec 10          	sub    $0x10,%rsp
    4bfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c04:	48 89 c7             	mov    %rax,%rdi
    4c07:	e8 64 f4 ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    4c0c:	90                   	nop
    4c0d:	c9                   	leave
    4c0e:	c3                   	ret
    4c0f:	90                   	nop

0000000000004c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4c10:	55                   	push   %rbp
    4c11:	48 89 e5             	mov    %rsp,%rbp
    4c14:	53                   	push   %rbx
    4c15:	48 83 ec 38          	sub    $0x38,%rsp
    4c19:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c1d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c21:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4c25:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4c29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c2d:	48 89 c7             	mov    %rax,%rdi
    4c30:	e8 9b f6 ff ff       	call   42d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c35:	48 89 c1             	mov    %rax,%rcx
    4c38:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4c3c:	48 89 c2             	mov    %rax,%rdx
    4c3f:	48 89 ce             	mov    %rcx,%rsi
    4c42:	48 89 df             	mov    %rbx,%rdi
    4c45:	e8 06 f8 ff ff       	call   4450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4c4a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4c4f:	75 0f                	jne    4c60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4c51:	48 8d 05 d8 49 01 00 	lea    0x149d8(%rip),%rax        # 19630 <_ZN6__pstl9execution2v1L5unseqE+0x4d>
    4c58:	48 89 c7             	mov    %rax,%rdi
    4c5b:	e8 10 f6 ff ff       	call   4270 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4c60:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c64:	48 89 c7             	mov    %rax,%rdi
    4c67:	e8 ed fe ff ff       	call   4b59 <_ZNSt11char_traitsIcE6lengthEPKc>
    4c6c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4c70:	48 01 d0             	add    %rdx,%rax
    4c73:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4c77:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4c7b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4c7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c83:	48 89 ce             	mov    %rcx,%rsi
    4c86:	48 89 c7             	mov    %rax,%rdi
    4c89:	e8 66 00 00 00       	call   4cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4c8e:	eb 1a                	jmp    4caa <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4c90:	48 89 c3             	mov    %rax,%rbx
    4c93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c97:	48 89 c7             	mov    %rax,%rdi
    4c9a:	e8 55 ff ff ff       	call   4bf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4c9f:	48 89 d8             	mov    %rbx,%rax
    4ca2:	48 89 c7             	mov    %rax,%rdi
    4ca5:	e8 06 fb ff ff       	call   47b0 <_Unwind_Resume@plt>
    4caa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4cae:	c9                   	leave
    4caf:	c3                   	ret

0000000000004cb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4cb0:	55                   	push   %rbp
    4cb1:	48 89 e5             	mov    %rsp,%rbp
    4cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4cbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cc4:	48 89 10             	mov    %rdx,(%rax)
    4cc7:	90                   	nop
    4cc8:	5d                   	pop    %rbp
    4cc9:	c3                   	ret

0000000000004cca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4cca:	55                   	push   %rbp
    4ccb:	48 89 e5             	mov    %rsp,%rbp
    4cce:	48 83 ec 10          	sub    $0x10,%rsp
    4cd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cda:	48 8b 00             	mov    (%rax),%rax
    4cdd:	48 85 c0             	test   %rax,%rax
    4ce0:	74 0f                	je     4cf1 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ce6:	48 8b 00             	mov    (%rax),%rax
    4ce9:	48 89 c7             	mov    %rax,%rdi
    4cec:	e8 4f f8 ff ff       	call   4540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4cf1:	90                   	nop
    4cf2:	c9                   	leave
    4cf3:	c3                   	ret

0000000000004cf4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4cf4:	55                   	push   %rbp
    4cf5:	48 89 e5             	mov    %rsp,%rbp
    4cf8:	48 83 ec 40          	sub    $0x40,%rsp
    4cfc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d00:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d04:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4d08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4d0c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d10:	48 89 d6             	mov    %rdx,%rsi
    4d13:	48 89 c7             	mov    %rax,%rdi
    4d16:	e8 c0 00 00 00       	call   4ddb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4d1b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4d1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d23:	48 83 f8 0f          	cmp    $0xf,%rax
    4d27:	76 3f                	jbe    4d68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4d29:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4d2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d31:	ba 00 00 00 00       	mov    $0x0,%edx
    4d36:	48 89 ce             	mov    %rcx,%rsi
    4d39:	48 89 c7             	mov    %rax,%rdi
    4d3c:	e8 9f fa ff ff       	call   47e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4d41:	48 89 c2             	mov    %rax,%rdx
    4d44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d48:	48 89 d6             	mov    %rdx,%rsi
    4d4b:	48 89 c7             	mov    %rax,%rdi
    4d4e:	e8 bd f5 ff ff       	call   4310 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4d53:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d57:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d5b:	48 89 d6             	mov    %rdx,%rsi
    4d5e:	48 89 c7             	mov    %rax,%rdi
    4d61:	e8 da fa ff ff       	call   4840 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4d66:	eb 15                	jmp    4d7d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4d68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4d70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d74:	48 89 c7             	mov    %rax,%rdi
    4d77:	e8 54 f5 ff ff       	call   42d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4d7c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4d7d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4d81:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d85:	48 89 d6             	mov    %rdx,%rsi
    4d88:	48 89 c7             	mov    %rax,%rdi
    4d8b:	e8 20 ff ff ff       	call   4cb0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4d90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d94:	48 89 c7             	mov    %rax,%rdi
    4d97:	e8 14 f7 ff ff       	call   44b0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4d9c:	48 89 c1             	mov    %rax,%rcx
    4d9f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4da3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4da7:	48 89 c6             	mov    %rax,%rsi
    4daa:	48 89 cf             	mov    %rcx,%rdi
    4dad:	e8 0e f7 ff ff       	call   44c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4db2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4db9:	00 

	_M_set_length(__dnew);
    4dba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4dbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dc2:	48 89 d6             	mov    %rdx,%rsi
    4dc5:	48 89 c7             	mov    %rax,%rdi
    4dc8:	e8 73 f4 ff ff       	call   4240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4dcd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4dd1:	48 89 c7             	mov    %rax,%rdi
    4dd4:	e8 f1 fe ff ff       	call   4cca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4dd9:	c9                   	leave
    4dda:	c3                   	ret

0000000000004ddb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4ddb:	55                   	push   %rbp
    4ddc:	48 89 e5             	mov    %rsp,%rbp
    4ddf:	48 83 ec 10          	sub    $0x10,%rsp
    4de3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4de7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4deb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4def:	48 89 c7             	mov    %rax,%rdi
    4df2:	e8 15 00 00 00       	call   4e0c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dfb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4dff:	48 89 d6             	mov    %rdx,%rsi
    4e02:	48 89 c7             	mov    %rax,%rdi
    4e05:	e8 0d 00 00 00       	call   4e17 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4e0a:	c9                   	leave
    4e0b:	c3                   	ret

0000000000004e0c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4e0c:	55                   	push   %rbp
    4e0d:	48 89 e5             	mov    %rsp,%rbp
    4e10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4e14:	90                   	nop
    4e15:	5d                   	pop    %rbp
    4e16:	c3                   	ret

0000000000004e17 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4e17:	55                   	push   %rbp
    4e18:	48 89 e5             	mov    %rsp,%rbp
    4e1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4e23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e27:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4e2b:	5d                   	pop    %rbp
    4e2c:	c3                   	ret

0000000000004e2d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4e2d:	55                   	push   %rbp
    4e2e:	48 89 e5             	mov    %rsp,%rbp
    4e31:	41 54                	push   %r12
    4e33:	53                   	push   %rbx
    4e34:	48 83 ec 30          	sub    $0x30,%rsp
    4e38:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4e3c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4e40:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4e44:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4e48:	8b 40 1c             	mov    0x1c(%rax),%eax
    4e4b:	89 c3                	mov    %eax,%ebx
    4e4d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e51:	48 89 c7             	mov    %rax,%rdi
    4e54:	e8 1d 02 00 00       	call   5076 <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4e59:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4e5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e61:	48 89 de             	mov    %rbx,%rsi
    4e64:	48 89 c7             	mov    %rax,%rdi
    4e67:	e8 42 02 00 00       	call   50ae <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4e6c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4e70:	48 89 c7             	mov    %rax,%rdi
    4e73:	e8 1a 02 00 00       	call   5092 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e7c:	48 89 c7             	mov    %rax,%rdi
    4e7f:	e8 e4 02 00 00       	call   5168 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4e84:	48 89 c2             	mov    %rax,%rdx
    4e87:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4e8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4e8f:	48 89 ce             	mov    %rcx,%rsi
    4e92:	48 89 c7             	mov    %rax,%rdi
    4e95:	e8 d6 f4 ff ff       	call   4370 <vkAllocateCommandBuffers@plt>
    4e9a:	85 c0                	test   %eax,%eax
    4e9c:	0f 95 c0             	setne  %al
    4e9f:	84 c0                	test   %al,%al
    4ea1:	74 7f                	je     4f22 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4ea3:	bf 10 00 00 00       	mov    $0x10,%edi
    4ea8:	e8 f3 f2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    4ead:	48 89 c3             	mov    %rax,%rbx
    4eb0:	48 8d 05 89 4d 01 00 	lea    0x14d89(%rip),%rax        # 19c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4eb7:	48 89 c6             	mov    %rax,%rsi
    4eba:	48 89 df             	mov    %rbx,%rdi
    4ebd:	e8 5e f2 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    4ec2:	48 8b 05 df 60 02 00 	mov    0x260df(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4ec9:	48 89 c2             	mov    %rax,%rdx
    4ecc:	48 8d 05 6d 5e 02 00 	lea    0x25e6d(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4ed3:	48 89 c6             	mov    %rax,%rsi
    4ed6:	48 89 df             	mov    %rbx,%rdi
    4ed9:	e8 72 f8 ff ff       	call   4750 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4ede:	48 89 c3             	mov    %rax,%rbx
    4ee1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ee5:	48 89 c7             	mov    %rax,%rdi
    4ee8:	e8 a5 01 00 00       	call   5092 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4eed:	48 89 d8             	mov    %rbx,%rax
    4ef0:	48 89 c7             	mov    %rax,%rdi
    4ef3:	e8 b8 f8 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4ef8:	49 89 c4             	mov    %rax,%r12
    4efb:	48 89 df             	mov    %rbx,%rdi
    4efe:	e8 7d f3 ff ff       	call   4280 <__cxa_free_exception@plt>
    4f03:	4c 89 e3             	mov    %r12,%rbx
    4f06:	eb 03                	jmp    4f0b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4f08:	48 89 c3             	mov    %rax,%rbx
    4f0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f0f:	48 89 c7             	mov    %rax,%rdi
    4f12:	e8 0d 02 00 00       	call   5124 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f17:	48 89 d8             	mov    %rbx,%rax
    4f1a:	48 89 c7             	mov    %rax,%rdi
    4f1d:	e8 8e f8 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return commandBuffers;
    4f22:	90                   	nop
}
    4f23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4f27:	48 83 c4 30          	add    $0x30,%rsp
    4f2b:	5b                   	pop    %rbx
    4f2c:	41 5c                	pop    %r12
    4f2e:	5d                   	pop    %rbp
    4f2f:	c3                   	ret

0000000000004f30 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>:

void beginCommandBuffer(VkCommandBuffer commandBuffer,
                        const VkCommandBufferBeginInfo *pBeginInfo) {
    4f30:	55                   	push   %rbp
    4f31:	48 89 e5             	mov    %rsp,%rbp
    4f34:	41 54                	push   %r12
    4f36:	53                   	push   %rbx
    4f37:	48 83 ec 10          	sub    $0x10,%rsp
    4f3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4f3f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  if (vkBeginCommandBuffer(commandBuffer, pBeginInfo) != VK_SUCCESS) {
    4f43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f4b:	48 89 d6             	mov    %rdx,%rsi
    4f4e:	48 89 c7             	mov    %rax,%rdi
    4f51:	e8 8a f4 ff ff       	call   43e0 <vkBeginCommandBuffer@plt>
    4f56:	85 c0                	test   %eax,%eax
    4f58:	0f 95 c0             	setne  %al
    4f5b:	84 c0                	test   %al,%al
    4f5d:	74 51                	je     4fb0 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo+0x80>
    throw std::runtime_error("Failed to begin command buffer.");
    4f5f:	bf 10 00 00 00       	mov    $0x10,%edi
    4f64:	e8 37 f2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    4f69:	48 89 c3             	mov    %rax,%rbx
    4f6c:	48 8d 05 f5 4c 01 00 	lea    0x14cf5(%rip),%rax        # 19c68 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    4f73:	48 89 c6             	mov    %rax,%rsi
    4f76:	48 89 df             	mov    %rbx,%rdi
    4f79:	e8 a2 f1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    4f7e:	48 8b 05 23 60 02 00 	mov    0x26023(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4f85:	48 89 c2             	mov    %rax,%rdx
    4f88:	48 8d 05 b1 5d 02 00 	lea    0x25db1(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4f8f:	48 89 c6             	mov    %rax,%rsi
    4f92:	48 89 df             	mov    %rbx,%rdi
    4f95:	e8 b6 f7 ff ff       	call   4750 <__cxa_throw@plt>
    4f9a:	49 89 c4             	mov    %rax,%r12
    4f9d:	48 89 df             	mov    %rbx,%rdi
    4fa0:	e8 db f2 ff ff       	call   4280 <__cxa_free_exception@plt>
    4fa5:	4c 89 e0             	mov    %r12,%rax
    4fa8:	48 89 c7             	mov    %rax,%rdi
    4fab:	e8 00 f8 ff ff       	call   47b0 <_Unwind_Resume@plt>
  }
}
    4fb0:	90                   	nop
    4fb1:	48 83 c4 10          	add    $0x10,%rsp
    4fb5:	5b                   	pop    %rbx
    4fb6:	41 5c                	pop    %r12
    4fb8:	5d                   	pop    %rbp
    4fb9:	c3                   	ret

0000000000004fba <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>:

void endCommandBuffer(VkCommandBuffer commandBuffer) {
    4fba:	55                   	push   %rbp
    4fbb:	48 89 e5             	mov    %rsp,%rbp
    4fbe:	41 54                	push   %r12
    4fc0:	53                   	push   %rbx
    4fc1:	48 83 ec 10          	sub    $0x10,%rsp
    4fc5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS) {
    4fc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fcd:	48 89 c7             	mov    %rax,%rdi
    4fd0:	e8 3b f8 ff ff       	call   4810 <vkEndCommandBuffer@plt>
    4fd5:	85 c0                	test   %eax,%eax
    4fd7:	0f 95 c0             	setne  %al
    4fda:	84 c0                	test   %al,%al
    4fdc:	74 51                	je     502f <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T+0x75>
    throw std::runtime_error("Failed to end command buffer.");
    4fde:	bf 10 00 00 00       	mov    $0x10,%edi
    4fe3:	e8 b8 f1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    4fe8:	48 89 c3             	mov    %rax,%rbx
    4feb:	48 8d 05 96 4c 01 00 	lea    0x14c96(%rip),%rax        # 19c88 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    4ff2:	48 89 c6             	mov    %rax,%rsi
    4ff5:	48 89 df             	mov    %rbx,%rdi
    4ff8:	e8 23 f1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    4ffd:	48 8b 05 a4 5f 02 00 	mov    0x25fa4(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5004:	48 89 c2             	mov    %rax,%rdx
    5007:	48 8d 05 32 5d 02 00 	lea    0x25d32(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    500e:	48 89 c6             	mov    %rax,%rsi
    5011:	48 89 df             	mov    %rbx,%rdi
    5014:	e8 37 f7 ff ff       	call   4750 <__cxa_throw@plt>
    5019:	49 89 c4             	mov    %rax,%r12
    501c:	48 89 df             	mov    %rbx,%rdi
    501f:	e8 5c f2 ff ff       	call   4280 <__cxa_free_exception@plt>
    5024:	4c 89 e0             	mov    %r12,%rax
    5027:	48 89 c7             	mov    %rax,%rdi
    502a:	e8 81 f7 ff ff       	call   47b0 <_Unwind_Resume@plt>
  }
}
    502f:	90                   	nop
    5030:	48 83 c4 10          	add    $0x10,%rsp
    5034:	5b                   	pop    %rbx
    5035:	41 5c                	pop    %r12
    5037:	5d                   	pop    %rbp
    5038:	c3                   	ret

0000000000005039 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    5039:	55                   	push   %rbp
    503a:	48 89 e5             	mov    %rsp,%rbp
    503d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5041:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5045:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5049:	5d                   	pop    %rbp
    504a:	c3                   	ret

000000000000504b <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    504b:	55                   	push   %rbp
    504c:	48 89 e5             	mov    %rsp,%rbp
    504f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5053:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5057:	5d                   	pop    %rbp
    5058:	c3                   	ret
    5059:	90                   	nop

000000000000505a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    505a:	55                   	push   %rbp
    505b:	48 89 e5             	mov    %rsp,%rbp
    505e:	48 83 ec 10          	sub    $0x10,%rsp
    5062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    506a:	48 89 c7             	mov    %rax,%rdi
    506d:	e8 20 00 00 00       	call   5092 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5072:	90                   	nop
    5073:	c9                   	leave
    5074:	c3                   	ret
    5075:	90                   	nop

0000000000005076 <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    5076:	55                   	push   %rbp
    5077:	48 89 e5             	mov    %rsp,%rbp
    507a:	48 83 ec 10          	sub    $0x10,%rsp
    507e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5086:	48 89 c7             	mov    %rax,%rdi
    5089:	e8 4c 01 00 00       	call   51da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    508e:	90                   	nop
    508f:	c9                   	leave
    5090:	c3                   	ret
    5091:	90                   	nop

0000000000005092 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    5092:	55                   	push   %rbp
    5093:	48 89 e5             	mov    %rsp,%rbp
    5096:	48 83 ec 10          	sub    $0x10,%rsp
    509a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    509e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50a2:	48 89 c7             	mov    %rax,%rdi
    50a5:	e8 3c 01 00 00       	call   51e6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    50aa:	90                   	nop
    50ab:	c9                   	leave
    50ac:	c3                   	ret
    50ad:	90                   	nop

00000000000050ae <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    50ae:	55                   	push   %rbp
    50af:	48 89 e5             	mov    %rsp,%rbp
    50b2:	53                   	push   %rbx
    50b3:	48 83 ec 28          	sub    $0x28,%rsp
    50b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    50bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    50bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    50c3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    50c7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    50cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    50cf:	48 89 d6             	mov    %rdx,%rsi
    50d2:	48 89 c7             	mov    %rax,%rdi
    50d5:	e8 17 01 00 00       	call   51f1 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    50da:	48 89 c1             	mov    %rax,%rcx
    50dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    50e1:	48 89 c2             	mov    %rax,%rdx
    50e4:	48 89 ce             	mov    %rcx,%rsi
    50e7:	48 89 df             	mov    %rbx,%rdi
    50ea:	e8 63 01 00 00       	call   5252 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    50ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    50f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    50f7:	48 89 d6             	mov    %rdx,%rsi
    50fa:	48 89 c7             	mov    %rax,%rdi
    50fd:	e8 ae 01 00 00       	call   52b0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    5102:	eb 1a                	jmp    511e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    5104:	48 89 c3             	mov    %rax,%rbx
    5107:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    510b:	48 89 c7             	mov    %rax,%rdi
    510e:	e8 79 00 00 00       	call   518c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5113:	48 89 d8             	mov    %rbx,%rax
    5116:	48 89 c7             	mov    %rax,%rdi
    5119:	e8 92 f6 ff ff       	call   47b0 <_Unwind_Resume@plt>
    511e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5122:	c9                   	leave
    5123:	c3                   	ret

0000000000005124 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    5124:	55                   	push   %rbp
    5125:	48 89 e5             	mov    %rsp,%rbp
    5128:	48 83 ec 10          	sub    $0x10,%rsp
    512c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    5130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5134:	48 89 c7             	mov    %rax,%rdi
    5137:	e8 b4 01 00 00       	call   52f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    513c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    513f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5143:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    514b:	48 8b 00             	mov    (%rax),%rax
    514e:	48 89 ce             	mov    %rcx,%rsi
    5151:	48 89 c7             	mov    %rax,%rdi
    5154:	e8 a5 01 00 00       	call   52fe <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    5159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    515d:	48 89 c7             	mov    %rax,%rdi
    5160:	e8 27 00 00 00       	call   518c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    5165:	90                   	nop
    5166:	c9                   	leave
    5167:	c3                   	ret

0000000000005168 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    5168:	55                   	push   %rbp
    5169:	48 89 e5             	mov    %rsp,%rbp
    516c:	48 83 ec 10          	sub    $0x10,%rsp
    5170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5178:	48 8b 10             	mov    (%rax),%rdx
    517b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    517f:	48 89 d6             	mov    %rdx,%rsi
    5182:	48 89 c7             	mov    %rax,%rdi
    5185:	e8 9e 01 00 00       	call   5328 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    518a:	c9                   	leave
    518b:	c3                   	ret

000000000000518c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    518c:	55                   	push   %rbp
    518d:	48 89 e5             	mov    %rsp,%rbp
    5190:	48 83 ec 10          	sub    $0x10,%rsp
    5194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    519c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    51a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51a4:	48 8b 00             	mov    (%rax),%rax
    51a7:	48 29 c2             	sub    %rax,%rdx
    51aa:	48 89 d0             	mov    %rdx,%rax
    51ad:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    51b1:	48 89 c2             	mov    %rax,%rdx
    51b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51b8:	48 8b 08             	mov    (%rax),%rcx
    51bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51bf:	48 89 ce             	mov    %rcx,%rsi
    51c2:	48 89 c7             	mov    %rax,%rdi
    51c5:	e8 96 01 00 00       	call   5360 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    51ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51ce:	48 89 c7             	mov    %rax,%rdi
    51d1:	e8 84 fe ff ff       	call   505a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    51d6:	90                   	nop
    51d7:	c9                   	leave
    51d8:	c3                   	ret
    51d9:	90                   	nop

00000000000051da <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    51da:	55                   	push   %rbp
    51db:	48 89 e5             	mov    %rsp,%rbp
    51de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51e2:	90                   	nop
    51e3:	5d                   	pop    %rbp
    51e4:	c3                   	ret
    51e5:	90                   	nop

00000000000051e6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    51e6:	55                   	push   %rbp
    51e7:	48 89 e5             	mov    %rsp,%rbp
    51ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ee:	90                   	nop
    51ef:	5d                   	pop    %rbp
    51f0:	c3                   	ret

00000000000051f1 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    51f1:	55                   	push   %rbp
    51f2:	48 89 e5             	mov    %rsp,%rbp
    51f5:	53                   	push   %rbx
    51f6:	48 83 ec 28          	sub    $0x28,%rsp
    51fa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    51fe:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5202:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5206:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    520a:	48 89 d6             	mov    %rdx,%rsi
    520d:	48 89 c7             	mov    %rax,%rdi
    5210:	e8 25 01 00 00       	call   533a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5215:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5219:	48 89 c7             	mov    %rax,%rdi
    521c:	e8 74 01 00 00       	call   5395 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5221:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5225:	0f 92 c3             	setb   %bl
    5228:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    522c:	48 89 c7             	mov    %rax,%rdi
    522f:	e8 5e fe ff ff       	call   5092 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    5234:	84 db                	test   %bl,%bl
    5236:	74 0f                	je     5247 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5238:	48 8d 05 69 4a 01 00 	lea    0x14a69(%rip),%rax        # 19ca8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x70>
    523f:	48 89 c7             	mov    %rax,%rdi
    5242:	e8 69 ef ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    5247:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    524b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    524f:	c9                   	leave
    5250:	c3                   	ret
    5251:	90                   	nop

0000000000005252 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5252:	55                   	push   %rbp
    5253:	48 89 e5             	mov    %rsp,%rbp
    5256:	53                   	push   %rbx
    5257:	48 83 ec 28          	sub    $0x28,%rsp
    525b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    525f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5263:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5267:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    526b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    526f:	48 89 d6             	mov    %rdx,%rsi
    5272:	48 89 c7             	mov    %rax,%rdi
    5275:	e8 5e 01 00 00       	call   53d8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    527a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    527e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5282:	48 89 d6             	mov    %rdx,%rsi
    5285:	48 89 c7             	mov    %rax,%rdi
    5288:	e8 7d 01 00 00       	call   540a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    528d:	eb 1a                	jmp    52a9 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    528f:	48 89 c3             	mov    %rax,%rbx
    5292:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5296:	48 89 c7             	mov    %rax,%rdi
    5299:	e8 bc fd ff ff       	call   505a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    529e:	48 89 d8             	mov    %rbx,%rax
    52a1:	48 89 c7             	mov    %rax,%rdi
    52a4:	e8 07 f5 ff ff       	call   47b0 <_Unwind_Resume@plt>
    52a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52ad:	c9                   	leave
    52ae:	c3                   	ret
    52af:	90                   	nop

00000000000052b0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    52b0:	55                   	push   %rbp
    52b1:	48 89 e5             	mov    %rsp,%rbp
    52b4:	48 83 ec 10          	sub    $0x10,%rsp
    52b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    52c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c4:	48 89 c7             	mov    %rax,%rdi
    52c7:	e8 24 00 00 00       	call   52f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    52cc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    52cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52d3:	48 8b 00             	mov    (%rax),%rax
    52d6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52da:	48 89 ce             	mov    %rcx,%rsi
    52dd:	48 89 c7             	mov    %rax,%rdi
    52e0:	e8 7b 01 00 00       	call   5460 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    52e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    52e9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    52ed:	90                   	nop
    52ee:	c9                   	leave
    52ef:	c3                   	ret

00000000000052f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    52f0:	55                   	push   %rbp
    52f1:	48 89 e5             	mov    %rsp,%rbp
    52f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    52f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52fc:	5d                   	pop    %rbp
    52fd:	c3                   	ret

00000000000052fe <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    52fe:	55                   	push   %rbp
    52ff:	48 89 e5             	mov    %rsp,%rbp
    5302:	48 83 ec 20          	sub    $0x20,%rsp
    5306:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    530a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    530e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5312:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531a:	48 89 d6             	mov    %rdx,%rsi
    531d:	48 89 c7             	mov    %rax,%rdi
    5320:	e8 64 01 00 00       	call   5489 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    5325:	90                   	nop
    5326:	c9                   	leave
    5327:	c3                   	ret

0000000000005328 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5328:	55                   	push   %rbp
    5329:	48 89 e5             	mov    %rsp,%rbp
    532c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5330:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5334:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5338:	5d                   	pop    %rbp
    5339:	c3                   	ret

000000000000533a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    533a:	55                   	push   %rbp
    533b:	48 89 e5             	mov    %rsp,%rbp
    533e:	48 83 ec 10          	sub    $0x10,%rsp
    5342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    534a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    534e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5352:	48 89 d6             	mov    %rdx,%rsi
    5355:	48 89 c7             	mov    %rax,%rdi
    5358:	e8 53 01 00 00       	call   54b0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    535d:	90                   	nop
    535e:	c9                   	leave
    535f:	c3                   	ret

0000000000005360 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5360:	55                   	push   %rbp
    5361:	48 89 e5             	mov    %rsp,%rbp
    5364:	48 83 ec 20          	sub    $0x20,%rsp
    5368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    536c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5370:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5374:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5379:	74 17                	je     5392 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    537b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    537f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5383:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5387:	48 89 ce             	mov    %rcx,%rsi
    538a:	48 89 c7             	mov    %rax,%rdi
    538d:	e8 2d 01 00 00       	call   54bf <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5392:	90                   	nop
    5393:	c9                   	leave
    5394:	c3                   	ret

0000000000005395 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5395:	55                   	push   %rbp
    5396:	48 89 e5             	mov    %rsp,%rbp
    5399:	48 83 ec 20          	sub    $0x20,%rsp
    539d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    53a1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    53a8:	ff ff 0f 
    53ab:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    53af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53b3:	48 89 c7             	mov    %rax,%rdi
    53b6:	e8 32 01 00 00       	call   54ed <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    53bb:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    53bf:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    53c3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    53c7:	48 89 d6             	mov    %rdx,%rsi
    53ca:	48 89 c7             	mov    %rax,%rdi
    53cd:	e8 35 01 00 00       	call   5507 <_ZSt3minImERKT_S2_S2_>
    53d2:	48 8b 00             	mov    (%rax),%rax
      }
    53d5:	c9                   	leave
    53d6:	c3                   	ret
    53d7:	90                   	nop

00000000000053d8 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    53d8:	55                   	push   %rbp
    53d9:	48 89 e5             	mov    %rsp,%rbp
    53dc:	48 83 ec 10          	sub    $0x10,%rsp
    53e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    53e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    53ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f0:	48 89 d6             	mov    %rdx,%rsi
    53f3:	48 89 c7             	mov    %rax,%rdi
    53f6:	e8 3f ff ff ff       	call   533a <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    53fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ff:	48 89 c7             	mov    %rax,%rdi
    5402:	e8 2b 01 00 00       	call   5532 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5407:	90                   	nop
    5408:	c9                   	leave
    5409:	c3                   	ret

000000000000540a <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    540a:	55                   	push   %rbp
    540b:	48 89 e5             	mov    %rsp,%rbp
    540e:	48 83 ec 10          	sub    $0x10,%rsp
    5412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    541a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    541e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5422:	48 89 d6             	mov    %rdx,%rsi
    5425:	48 89 c7             	mov    %rax,%rdi
    5428:	e8 33 01 00 00       	call   5560 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    542d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5431:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5438:	48 8b 10             	mov    (%rax),%rdx
    543b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    543f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5447:	48 8b 00             	mov    (%rax),%rax
    544a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    544e:	48 c1 e2 03          	shl    $0x3,%rdx
    5452:	48 01 c2             	add    %rax,%rdx
    5455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5459:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    545d:	90                   	nop
    545e:	c9                   	leave
    545f:	c3                   	ret

0000000000005460 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5460:	55                   	push   %rbp
    5461:	48 89 e5             	mov    %rsp,%rbp
    5464:	48 83 ec 20          	sub    $0x20,%rsp
    5468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    546c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5470:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5474:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    547c:	48 89 d6             	mov    %rdx,%rsi
    547f:	48 89 c7             	mov    %rax,%rdi
    5482:	e8 0c 01 00 00       	call   5593 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    5487:	c9                   	leave
    5488:	c3                   	ret

0000000000005489 <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5489:	55                   	push   %rbp
    548a:	48 89 e5             	mov    %rsp,%rbp
    548d:	48 83 ec 10          	sub    $0x10,%rsp
    5491:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5495:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    5499:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    549d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54a1:	48 89 d6             	mov    %rdx,%rsi
    54a4:	48 89 c7             	mov    %rax,%rdi
    54a7:	e8 10 01 00 00       	call   55bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    54ac:	90                   	nop
    54ad:	c9                   	leave
    54ae:	c3                   	ret
    54af:	90                   	nop

00000000000054b0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    54b0:	55                   	push   %rbp
    54b1:	48 89 e5             	mov    %rsp,%rbp
    54b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54bc:	90                   	nop
    54bd:	5d                   	pop    %rbp
    54be:	c3                   	ret

00000000000054bf <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    54bf:	55                   	push   %rbp
    54c0:	48 89 e5             	mov    %rsp,%rbp
    54c3:	48 83 ec 20          	sub    $0x20,%rsp
    54c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    54d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    54d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    54db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54df:	48 89 ce             	mov    %rcx,%rsi
    54e2:	48 89 c7             	mov    %rax,%rdi
    54e5:	e8 e2 00 00 00       	call   55cc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    54ea:	90                   	nop
    54eb:	c9                   	leave
    54ec:	c3                   	ret

00000000000054ed <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    54ed:	55                   	push   %rbp
    54ee:	48 89 e5             	mov    %rsp,%rbp
    54f1:	48 83 ec 10          	sub    $0x10,%rsp
    54f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    54f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54fd:	48 89 c7             	mov    %rax,%rdi
    5500:	e8 f9 00 00 00       	call   55fe <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    5505:	c9                   	leave
    5506:	c3                   	ret

0000000000005507 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    5507:	55                   	push   %rbp
    5508:	48 89 e5             	mov    %rsp,%rbp
    550b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    550f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5513:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5517:	48 8b 10             	mov    (%rax),%rdx
    551a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    551e:	48 8b 00             	mov    (%rax),%rax
    5521:	48 39 c2             	cmp    %rax,%rdx
    5524:	73 06                	jae    552c <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    5526:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    552a:	eb 04                	jmp    5530 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    552c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5530:	5d                   	pop    %rbp
    5531:	c3                   	ret

0000000000005532 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5532:	55                   	push   %rbp
    5533:	48 89 e5             	mov    %rsp,%rbp
    5536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    553a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    553e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5549:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5550:	00 
    5551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5555:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    555c:	00 
	{ }
    555d:	90                   	nop
    555e:	5d                   	pop    %rbp
    555f:	c3                   	ret

0000000000005560 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5560:	55                   	push   %rbp
    5561:	48 89 e5             	mov    %rsp,%rbp
    5564:	48 83 ec 10          	sub    $0x10,%rsp
    5568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    556c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5570:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5575:	74 15                	je     558c <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    5577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    557b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    557f:	48 89 d6             	mov    %rdx,%rsi
    5582:	48 89 c7             	mov    %rax,%rdi
    5585:	e8 8e 00 00 00       	call   5618 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    558a:	eb 05                	jmp    5591 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    558c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5591:	c9                   	leave
    5592:	c3                   	ret

0000000000005593 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5593:	55                   	push   %rbp
    5594:	48 89 e5             	mov    %rsp,%rbp
    5597:	48 83 ec 20          	sub    $0x20,%rsp
    559b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    559f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    55a3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    55a7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    55ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55af:	48 89 d6             	mov    %rdx,%rsi
    55b2:	48 89 c7             	mov    %rax,%rdi
    55b5:	e8 88 00 00 00       	call   5642 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    55ba:	c9                   	leave
    55bb:	c3                   	ret

00000000000055bc <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    55bc:	55                   	push   %rbp
    55bd:	48 89 e5             	mov    %rsp,%rbp
    55c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55c8:	90                   	nop
    55c9:	5d                   	pop    %rbp
    55ca:	c3                   	ret
    55cb:	90                   	nop

00000000000055cc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    55cc:	55                   	push   %rbp
    55cd:	48 89 e5             	mov    %rsp,%rbp
    55d0:	48 83 ec 20          	sub    $0x20,%rsp
    55d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    55e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    55e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55eb:	00 
    55ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55f0:	48 89 d6             	mov    %rdx,%rsi
    55f3:	48 89 c7             	mov    %rax,%rdi
    55f6:	e8 f5 ed ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    55fb:	c9                   	leave
    55fc:	c3                   	ret
    55fd:	90                   	nop

00000000000055fe <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    55fe:	55                   	push   %rbp
    55ff:	48 89 e5             	mov    %rsp,%rbp
    5602:	48 83 ec 10          	sub    $0x10,%rsp
    5606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    560a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    560e:	48 89 c7             	mov    %rax,%rdi
    5611:	e8 8a 00 00 00       	call   56a0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    5616:	c9                   	leave
    5617:	c3                   	ret

0000000000005618 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    5618:	55                   	push   %rbp
    5619:	48 89 e5             	mov    %rsp,%rbp
    561c:	48 83 ec 10          	sub    $0x10,%rsp
    5620:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5624:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    5628:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    562c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5630:	ba 00 00 00 00       	mov    $0x0,%edx
    5635:	48 89 ce             	mov    %rcx,%rsi
    5638:	48 89 c7             	mov    %rax,%rdi
    563b:	e8 74 00 00 00       	call   56b4 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5640:	c9                   	leave
    5641:	c3                   	ret

0000000000005642 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5642:	55                   	push   %rbp
    5643:	48 89 e5             	mov    %rsp,%rbp
    5646:	48 83 ec 20          	sub    $0x20,%rsp
    564a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    564e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5652:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    5657:	74 40                	je     5699 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    5659:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    565d:	48 89 c7             	mov    %rax,%rdi
    5660:	e8 b0 00 00 00       	call   5715 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    5665:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    5669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    566d:	48 89 c7             	mov    %rax,%rdi
    5670:	e8 ae 00 00 00       	call   5723 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    5675:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    567a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    567e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5682:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5686:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    568a:	48 89 ce             	mov    %rcx,%rsi
    568d:	48 89 c7             	mov    %rax,%rdi
    5690:	e8 b5 00 00 00       	call   574a <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    5695:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    5699:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    569d:	c9                   	leave
    569e:	c3                   	ret
    569f:	90                   	nop

00000000000056a0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    56a0:	55                   	push   %rbp
    56a1:	48 89 e5             	mov    %rsp,%rbp
    56a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    56a8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    56af:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    56b2:	5d                   	pop    %rbp
    56b3:	c3                   	ret

00000000000056b4 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    56b4:	55                   	push   %rbp
    56b5:	48 89 e5             	mov    %rsp,%rbp
    56b8:	48 83 ec 20          	sub    $0x20,%rsp
    56bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    56c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    56c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    56c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56cc:	48 89 c7             	mov    %rax,%rdi
    56cf:	e8 cc ff ff ff       	call   56a0 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    56d4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56d8:	0f 92 c0             	setb   %al
    56db:	0f b6 c0             	movzbl %al,%eax
    56de:	48 85 c0             	test   %rax,%rax
    56e1:	0f 95 c0             	setne  %al
    56e4:	84 c0                	test   %al,%al
    56e6:	74 1a                	je     5702 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    56e8:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    56ef:	ff ff 1f 
    56f2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    56f6:	73 05                	jae    56fd <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    56f8:	e8 b3 eb ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    56fd:	e8 fe e9 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5702:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5706:	48 c1 e0 03          	shl    $0x3,%rax
    570a:	48 89 c7             	mov    %rax,%rdi
    570d:	e8 be ec ff ff       	call   43d0 <_Znwm@plt>
    5712:	90                   	nop
      }
    5713:	c9                   	leave
    5714:	c3                   	ret

0000000000005715 <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    5715:	55                   	push   %rbp
    5716:	48 89 e5             	mov    %rsp,%rbp
    5719:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    571d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5721:	5d                   	pop    %rbp
    5722:	c3                   	ret

0000000000005723 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5723:	55                   	push   %rbp
    5724:	48 89 e5             	mov    %rsp,%rbp
    5727:	48 83 ec 10          	sub    $0x10,%rsp
    572b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    572f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5733:	48 89 c6             	mov    %rax,%rsi
    5736:	bf 08 00 00 00       	mov    $0x8,%edi
    573b:	e8 f9 f8 ff ff       	call   5039 <_ZnwmPv>
    5740:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    5747:	90                   	nop
    5748:	c9                   	leave
    5749:	c3                   	ret

000000000000574a <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    574a:	55                   	push   %rbp
    574b:	48 89 e5             	mov    %rsp,%rbp
    574e:	48 83 ec 20          	sub    $0x20,%rsp
    5752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5756:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    575a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    575e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5762:	48 89 c7             	mov    %rax,%rdi
    5765:	e8 24 00 00 00       	call   578e <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    576a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    576e:	48 89 c7             	mov    %rax,%rdi
    5771:	e8 d5 f8 ff ff       	call   504b <_ZSt17__size_to_integerm>
    5776:	48 89 c1             	mov    %rax,%rcx
    5779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    577d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5781:	48 89 ce             	mov    %rcx,%rsi
    5784:	48 89 c7             	mov    %rax,%rdi
    5787:	e8 0d 00 00 00       	call   5799 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    578c:	c9                   	leave
    578d:	c3                   	ret

000000000000578e <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    578e:	55                   	push   %rbp
    578f:	48 89 e5             	mov    %rsp,%rbp
    5792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5796:	90                   	nop
    5797:	5d                   	pop    %rbp
    5798:	c3                   	ret

0000000000005799 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    5799:	55                   	push   %rbp
    579a:	48 89 e5             	mov    %rsp,%rbp
    579d:	48 83 ec 20          	sub    $0x20,%rsp
    57a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    57a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    57ad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    57b2:	75 06                	jne    57ba <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    57b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57b8:	eb 3a                	jmp    57f4 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    57ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57be:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    57c5:	00 
    57c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ca:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    57ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    57d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57d6:	48 89 ce             	mov    %rcx,%rsi
    57d9:	48 89 c7             	mov    %rax,%rdi
    57dc:	e8 15 00 00 00       	call   57f6 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    57e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    57e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    57ec:	00 
    57ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57f1:	48 01 d0             	add    %rdx,%rax
    }
    57f4:	c9                   	leave
    57f5:	c3                   	ret

00000000000057f6 <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    57f6:	55                   	push   %rbp
    57f7:	48 89 e5             	mov    %rsp,%rbp
    57fa:	48 83 ec 20          	sub    $0x20,%rsp
    57fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5802:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5806:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    580a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    580e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5816:	48 89 ce             	mov    %rcx,%rsi
    5819:	48 89 c7             	mov    %rax,%rdi
    581c:	e8 03 00 00 00       	call   5824 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5821:	90                   	nop
    5822:	c9                   	leave
    5823:	c3                   	ret

0000000000005824 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    5824:	55                   	push   %rbp
    5825:	48 89 e5             	mov    %rsp,%rbp
    5828:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    582c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5830:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    5834:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5838:	48 8b 00             	mov    (%rax),%rax
    583b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    583f:	eb 10                	jmp    5851 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5841:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5845:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5849:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    584c:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5851:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5855:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    5859:	75 e6                	jne    5841 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    585b:	90                   	nop
    585c:	90                   	nop
    585d:	5d                   	pop    %rbp
    585e:	c3                   	ret

000000000000585f <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    585f:	55                   	push   %rbp
    5860:	48 89 e5             	mov    %rsp,%rbp
    5863:	48 83 ec 20          	sub    $0x20,%rsp
    5867:	89 7d fc             	mov    %edi,-0x4(%rbp)
    586a:	89 75 f8             	mov    %esi,-0x8(%rbp)
    586d:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5871:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    5875:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    5879:	be 00 00 00 00       	mov    $0x0,%esi
    587e:	bf 01 20 02 00       	mov    $0x22001,%edi
    5883:	e8 98 ea ff ff       	call   4320 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    5888:	be 00 00 00 00       	mov    $0x0,%esi
    588d:	bf 03 00 02 00       	mov    $0x20003,%edi
    5892:	e8 89 ea ff ff       	call   4320 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    5897:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    589b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    589f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58a3:	8b 75 f8             	mov    -0x8(%rbp),%esi
    58a6:	8b 45 fc             	mov    -0x4(%rbp),%eax
    58a9:	49 89 f8             	mov    %rdi,%r8
    58ac:	89 c7                	mov    %eax,%edi
    58ae:	e8 0d ee ff ff       	call   46c0 <glfwCreateWindow@plt>
}
    58b3:	c9                   	leave
    58b4:	c3                   	ret

00000000000058b5 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    58b5:	55                   	push   %rbp
    58b6:	48 89 e5             	mov    %rsp,%rbp
    58b9:	41 54                	push   %r12
    58bb:	53                   	push   %rbx
    58bc:	48 83 ec 20          	sub    $0x20,%rsp
    58c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    58c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    58c8:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    58cc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    58d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58d4:	48 89 ce             	mov    %rcx,%rsi
    58d7:	48 89 c7             	mov    %rax,%rdi
    58da:	e8 51 ec ff ff       	call   4530 <vkCreateInstance@plt>
    58df:	85 c0                	test   %eax,%eax
    58e1:	0f 95 c0             	setne  %al
    58e4:	84 c0                	test   %al,%al
    58e6:	74 3b                	je     5923 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    58e8:	bf 10 00 00 00       	mov    $0x10,%edi
    58ed:	e8 ae e8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    58f2:	48 89 c3             	mov    %rax,%rbx
    58f5:	48 8d 05 bc 49 01 00 	lea    0x149bc(%rip),%rax        # 1a2b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    58fc:	48 89 c6             	mov    %rax,%rsi
    58ff:	48 89 df             	mov    %rbx,%rdi
    5902:	e8 19 e8 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5907:	48 8b 05 9a 56 02 00 	mov    0x2569a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    590e:	48 89 c2             	mov    %rax,%rdx
    5911:	48 8d 05 28 54 02 00 	lea    0x25428(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5918:	48 89 c6             	mov    %rax,%rsi
    591b:	48 89 df             	mov    %rbx,%rdi
    591e:	e8 2d ee ff ff       	call   4750 <__cxa_throw@plt>
  }
  return instance;
    5923:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5927:	eb 16                	jmp    593f <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    5929:	49 89 c4             	mov    %rax,%r12
    592c:	48 89 df             	mov    %rbx,%rdi
    592f:	e8 4c e9 ff ff       	call   4280 <__cxa_free_exception@plt>
    5934:	4c 89 e0             	mov    %r12,%rax
    5937:	48 89 c7             	mov    %rax,%rdi
    593a:	e8 71 ee ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    593f:	48 83 c4 20          	add    $0x20,%rsp
    5943:	5b                   	pop    %rbx
    5944:	41 5c                	pop    %r12
    5946:	5d                   	pop    %rbp
    5947:	c3                   	ret

0000000000005948 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    5948:	55                   	push   %rbp
    5949:	48 89 e5             	mov    %rsp,%rbp
    594c:	41 54                	push   %r12
    594e:	53                   	push   %rbx
    594f:	48 83 ec 30          	sub    $0x30,%rsp
    5953:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5957:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    595b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    595f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5963:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5967:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    596b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    596f:	48 89 c7             	mov    %rax,%rdi
    5972:	e8 09 ed ff ff       	call   4680 <vkCreateDevice@plt>
    5977:	85 c0                	test   %eax,%eax
    5979:	0f 95 c0             	setne  %al
    597c:	84 c0                	test   %al,%al
    597e:	74 3b                	je     59bb <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5980:	bf 10 00 00 00       	mov    $0x10,%edi
    5985:	e8 16 e8 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    598a:	48 89 c3             	mov    %rax,%rbx
    598d:	48 8d 05 44 49 01 00 	lea    0x14944(%rip),%rax        # 1a2d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    5994:	48 89 c6             	mov    %rax,%rsi
    5997:	48 89 df             	mov    %rbx,%rdi
    599a:	e8 81 e7 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    599f:	48 8b 05 02 56 02 00 	mov    0x25602(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    59a6:	48 89 c2             	mov    %rax,%rdx
    59a9:	48 8d 05 90 53 02 00 	lea    0x25390(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    59b0:	48 89 c6             	mov    %rax,%rsi
    59b3:	48 89 df             	mov    %rbx,%rdi
    59b6:	e8 95 ed ff ff       	call   4750 <__cxa_throw@plt>
  }
  return device;
    59bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59bf:	eb 16                	jmp    59d7 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    59c1:	49 89 c4             	mov    %rax,%r12
    59c4:	48 89 df             	mov    %rbx,%rdi
    59c7:	e8 b4 e8 ff ff       	call   4280 <__cxa_free_exception@plt>
    59cc:	4c 89 e0             	mov    %r12,%rax
    59cf:	48 89 c7             	mov    %rax,%rdi
    59d2:	e8 d9 ed ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    59d7:	48 83 c4 30          	add    $0x30,%rsp
    59db:	5b                   	pop    %rbx
    59dc:	41 5c                	pop    %r12
    59de:	5d                   	pop    %rbp
    59df:	c3                   	ret

00000000000059e0 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    59e0:	55                   	push   %rbp
    59e1:	48 89 e5             	mov    %rsp,%rbp
    59e4:	41 54                	push   %r12
    59e6:	53                   	push   %rbx
    59e7:	48 83 ec 30          	sub    $0x30,%rsp
    59eb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    59ef:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    59f3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    59f7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    59fb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    59ff:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5a03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a07:	48 89 c7             	mov    %rax,%rdi
    5a0a:	e8 91 ec ff ff       	call   46a0 <glfwCreateWindowSurface@plt>
    5a0f:	85 c0                	test   %eax,%eax
    5a11:	0f 95 c0             	setne  %al
    5a14:	84 c0                	test   %al,%al
    5a16:	74 3b                	je     5a53 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    5a18:	bf 10 00 00 00       	mov    $0x10,%edi
    5a1d:	e8 7e e7 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5a22:	48 89 c3             	mov    %rax,%rbx
    5a25:	48 8d 05 d4 48 01 00 	lea    0x148d4(%rip),%rax        # 1a300 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5a2c:	48 89 c6             	mov    %rax,%rsi
    5a2f:	48 89 df             	mov    %rbx,%rdi
    5a32:	e8 e9 e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5a37:	48 8b 05 6a 55 02 00 	mov    0x2556a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a3e:	48 89 c2             	mov    %rax,%rdx
    5a41:	48 8d 05 f8 52 02 00 	lea    0x252f8(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a48:	48 89 c6             	mov    %rax,%rsi
    5a4b:	48 89 df             	mov    %rbx,%rdi
    5a4e:	e8 fd ec ff ff       	call   4750 <__cxa_throw@plt>
  }
  return surface;
    5a53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a57:	eb 16                	jmp    5a6f <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    5a59:	49 89 c4             	mov    %rax,%r12
    5a5c:	48 89 df             	mov    %rbx,%rdi
    5a5f:	e8 1c e8 ff ff       	call   4280 <__cxa_free_exception@plt>
    5a64:	4c 89 e0             	mov    %r12,%rax
    5a67:	48 89 c7             	mov    %rax,%rdi
    5a6a:	e8 41 ed ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5a6f:	48 83 c4 30          	add    $0x30,%rsp
    5a73:	5b                   	pop    %rbx
    5a74:	41 5c                	pop    %r12
    5a76:	5d                   	pop    %rbp
    5a77:	c3                   	ret

0000000000005a78 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    5a78:	55                   	push   %rbp
    5a79:	48 89 e5             	mov    %rsp,%rbp
    5a7c:	41 54                	push   %r12
    5a7e:	53                   	push   %rbx
    5a7f:	48 83 ec 30          	sub    $0x30,%rsp
    5a83:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5a87:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5a8b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5a8f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5a96:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    5a97:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5a9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5a9f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5aa7:	48 89 c7             	mov    %rax,%rdi
    5aaa:	e8 51 ea ff ff       	call   4500 <vkCreateSwapchainKHR@plt>
    5aaf:	85 c0                	test   %eax,%eax
    5ab1:	0f 95 c0             	setne  %al
    5ab4:	84 c0                	test   %al,%al
    5ab6:	74 3b                	je     5af3 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    5ab8:	bf 10 00 00 00       	mov    $0x10,%edi
    5abd:	e8 de e6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5ac2:	48 89 c3             	mov    %rax,%rbx
    5ac5:	48 8d 05 55 48 01 00 	lea    0x14855(%rip),%rax        # 1a321 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    5acc:	48 89 c6             	mov    %rax,%rsi
    5acf:	48 89 df             	mov    %rbx,%rdi
    5ad2:	e8 49 e6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5ad7:	48 8b 05 ca 54 02 00 	mov    0x254ca(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5ade:	48 89 c2             	mov    %rax,%rdx
    5ae1:	48 8d 05 58 52 02 00 	lea    0x25258(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5ae8:	48 89 c6             	mov    %rax,%rsi
    5aeb:	48 89 df             	mov    %rbx,%rdi
    5aee:	e8 5d ec ff ff       	call   4750 <__cxa_throw@plt>
  }
  return swapchain;
    5af3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5af7:	eb 16                	jmp    5b0f <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    5af9:	49 89 c4             	mov    %rax,%r12
    5afc:	48 89 df             	mov    %rbx,%rdi
    5aff:	e8 7c e7 ff ff       	call   4280 <__cxa_free_exception@plt>
    5b04:	4c 89 e0             	mov    %r12,%rax
    5b07:	48 89 c7             	mov    %rax,%rdi
    5b0a:	e8 a1 ec ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5b0f:	48 83 c4 30          	add    $0x30,%rsp
    5b13:	5b                   	pop    %rbx
    5b14:	41 5c                	pop    %r12
    5b16:	5d                   	pop    %rbp
    5b17:	c3                   	ret

0000000000005b18 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    5b18:	55                   	push   %rbp
    5b19:	48 89 e5             	mov    %rsp,%rbp
    5b1c:	41 54                	push   %r12
    5b1e:	53                   	push   %rbx
    5b1f:	48 83 ec 30          	sub    $0x30,%rsp
    5b23:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5b27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5b2b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5b2f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5b33:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5b37:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5b3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5b3f:	48 89 c7             	mov    %rax,%rdi
    5b42:	e8 d9 e8 ff ff       	call   4420 <vkCreateImageView@plt>
    5b47:	85 c0                	test   %eax,%eax
    5b49:	0f 95 c0             	setne  %al
    5b4c:	84 c0                	test   %al,%al
    5b4e:	74 3b                	je     5b8b <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5b50:	bf 10 00 00 00       	mov    $0x10,%edi
    5b55:	e8 46 e6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5b5a:	48 89 c3             	mov    %rax,%rbx
    5b5d:	48 8d 05 dc 47 01 00 	lea    0x147dc(%rip),%rax        # 1a340 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    5b64:	48 89 c6             	mov    %rax,%rsi
    5b67:	48 89 df             	mov    %rbx,%rdi
    5b6a:	e8 b1 e5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5b6f:	48 8b 05 32 54 02 00 	mov    0x25432(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b76:	48 89 c2             	mov    %rax,%rdx
    5b79:	48 8d 05 c0 51 02 00 	lea    0x251c0(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b80:	48 89 c6             	mov    %rax,%rsi
    5b83:	48 89 df             	mov    %rbx,%rdi
    5b86:	e8 c5 eb ff ff       	call   4750 <__cxa_throw@plt>
  }
  return imageView;
    5b8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b8f:	eb 16                	jmp    5ba7 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5b91:	49 89 c4             	mov    %rax,%r12
    5b94:	48 89 df             	mov    %rbx,%rdi
    5b97:	e8 e4 e6 ff ff       	call   4280 <__cxa_free_exception@plt>
    5b9c:	4c 89 e0             	mov    %r12,%rax
    5b9f:	48 89 c7             	mov    %rax,%rdi
    5ba2:	e8 09 ec ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5ba7:	48 83 c4 30          	add    $0x30,%rsp
    5bab:	5b                   	pop    %rbx
    5bac:	41 5c                	pop    %r12
    5bae:	5d                   	pop    %rbp
    5baf:	c3                   	ret

0000000000005bb0 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    5bb0:	55                   	push   %rbp
    5bb1:	48 89 e5             	mov    %rsp,%rbp
    5bb4:	41 54                	push   %r12
    5bb6:	53                   	push   %rbx
    5bb7:	48 83 ec 60          	sub    $0x60,%rsp
    5bbb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    5bbf:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    5bc3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    5bc7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5bcb:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    5bcf:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    5bd3:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    5bd8:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    5bdf:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5be3:	48 89 c7             	mov    %rax,%rdi
    5be6:	e8 7f 06 00 00       	call   626a <_ZNKSt6vectorIcSaIcEE4sizeEv>
    5beb:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    5bef:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5bf3:	48 89 c7             	mov    %rax,%rdi
    5bf6:	e8 8f 06 00 00       	call   628a <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5bfb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5bff:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5c06:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5c07:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5c0b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5c0f:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5c13:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5c17:	48 89 c7             	mov    %rax,%rdi
    5c1a:	e8 a1 e6 ff ff       	call   42c0 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5c1f:	85 c0                	test   %eax,%eax
    5c21:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5c24:	84 c0                	test   %al,%al
    5c26:	74 3b                	je     5c63 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5c28:	bf 10 00 00 00       	mov    $0x10,%edi
    5c2d:	e8 6e e5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5c32:	48 89 c3             	mov    %rax,%rbx
    5c35:	48 8d 05 24 47 01 00 	lea    0x14724(%rip),%rax        # 1a360 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5c3c:	48 89 c6             	mov    %rax,%rsi
    5c3f:	48 89 df             	mov    %rbx,%rdi
    5c42:	e8 d9 e4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5c47:	48 8b 05 5a 53 02 00 	mov    0x2535a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5c4e:	48 89 c2             	mov    %rax,%rdx
    5c51:	48 8d 05 e8 50 02 00 	lea    0x250e8(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5c58:	48 89 c6             	mov    %rax,%rsi
    5c5b:	48 89 df             	mov    %rbx,%rdi
    5c5e:	e8 ed ea ff ff       	call   4750 <__cxa_throw@plt>
  }
  return shaderModule;
    5c63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5c67:	eb 16                	jmp    5c7f <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5c69:	49 89 c4             	mov    %rax,%r12
    5c6c:	48 89 df             	mov    %rbx,%rdi
    5c6f:	e8 0c e6 ff ff       	call   4280 <__cxa_free_exception@plt>
    5c74:	4c 89 e0             	mov    %r12,%rax
    5c77:	48 89 c7             	mov    %rax,%rdi
    5c7a:	e8 31 eb ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5c7f:	48 83 c4 60          	add    $0x60,%rsp
    5c83:	5b                   	pop    %rbx
    5c84:	41 5c                	pop    %r12
    5c86:	5d                   	pop    %rbp
    5c87:	c3                   	ret

0000000000005c88 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5c88:	55                   	push   %rbp
    5c89:	48 89 e5             	mov    %rsp,%rbp
    5c8c:	41 54                	push   %r12
    5c8e:	53                   	push   %rbx
    5c8f:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5c96:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5c9d:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5ca4:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5cab:	be 04 00 00 00       	mov    $0x4,%esi
    5cb0:	bf 02 00 00 00       	mov    $0x2,%edi
    5cb5:	e8 9e 05 00 00       	call   6258 <_ZStorSt13_Ios_OpenmodeS_>
    5cba:	89 c2                	mov    %eax,%edx
    5cbc:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5cc3:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5cca:	48 89 ce             	mov    %rcx,%rsi
    5ccd:	48 89 c7             	mov    %rax,%rdi
    5cd0:	e8 2b ea ff ff       	call   4700 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5cd5:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5cdc:	48 89 c7             	mov    %rax,%rdi
    5cdf:	e8 0c ea ff ff       	call   46f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5ce4:	83 f0 01             	xor    $0x1,%eax
    5ce7:	84 c0                	test   %al,%al
    5ce9:	74 61                	je     5d4c <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5ceb:	bf 10 00 00 00       	mov    $0x10,%edi
    5cf0:	e8 ab e4 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5cf5:	48 89 c3             	mov    %rax,%rbx
    5cf8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5cfc:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5d03:	48 8d 0d 76 46 01 00 	lea    0x14676(%rip),%rcx        # 1a380 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5d0a:	48 89 ce             	mov    %rcx,%rsi
    5d0d:	48 89 c7             	mov    %rax,%rdi
    5d10:	e8 99 05 00 00       	call   62ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5d15:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d19:	48 89 c6             	mov    %rax,%rsi
    5d1c:	48 89 df             	mov    %rbx,%rdi
    5d1f:	e8 ec e9 ff ff       	call   4710 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5d24:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d28:	48 89 c7             	mov    %rax,%rdi
    5d2b:	e8 f0 e4 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5d30:	48 8b 05 71 52 02 00 	mov    0x25271(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d37:	48 89 c2             	mov    %rax,%rdx
    5d3a:	48 8d 05 ff 4f 02 00 	lea    0x24fff(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d41:	48 89 c6             	mov    %rax,%rsi
    5d44:	48 89 df             	mov    %rbx,%rdi
    5d47:	e8 04 ea ff ff       	call   4750 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5d4c:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5d53:	48 89 c7             	mov    %rax,%rdi
    5d56:	e8 35 ea ff ff       	call   4790 <_ZNSi5tellgEv@plt>
    5d5b:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5d5f:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5d63:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5d67:	48 89 c7             	mov    %rax,%rdi
    5d6a:	e8 41 06 00 00       	call   63b0 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5d6f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5d73:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5d77:	48 89 c7             	mov    %rax,%rdi
    5d7a:	e8 41 ea ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    5d7f:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5d83:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5d87:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5d8e:	48 89 ce             	mov    %rcx,%rsi
    5d91:	48 89 c7             	mov    %rax,%rdi
    5d94:	e8 29 06 00 00       	call   63c2 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5d99:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5d9d:	48 89 c7             	mov    %rax,%rdi
    5da0:	e8 db e6 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5da5:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5da9:	be 00 00 00 00       	mov    $0x0,%esi
    5dae:	48 89 c7             	mov    %rax,%rdi
    5db1:	e8 c6 06 00 00       	call   647c <_ZNSt4fposI11__mbstate_tEC1El>
    5db6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5dba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5dbe:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5dc5:	48 89 ce             	mov    %rcx,%rsi
    5dc8:	48 89 c7             	mov    %rax,%rdi
    5dcb:	e8 c0 e7 ff ff       	call   4590 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5dd0:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5dd4:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5ddb:	48 89 c7             	mov    %rax,%rdi
    5dde:	e8 c9 06 00 00       	call   64ac <_ZNSt6vectorIcSaIcEE4dataEv>
    5de3:	48 89 c1             	mov    %rax,%rcx
    5de6:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ded:	48 89 da             	mov    %rbx,%rdx
    5df0:	48 89 ce             	mov    %rcx,%rsi
    5df3:	48 89 c7             	mov    %rax,%rdi
    5df6:	e8 85 e7 ff ff       	call   4580 <_ZNSi4readEPcl@plt>
  file.close();
    5dfb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e02:	48 89 c7             	mov    %rax,%rdi
    5e05:	e8 76 e2 ff ff       	call   4080 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5e0a:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5e11:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5e18:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5e1f:	48 89 ce             	mov    %rcx,%rsi
    5e22:	48 89 c7             	mov    %rax,%rdi
    5e25:	e8 86 fd ff ff       	call   5bb0 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5e2a:	48 89 c3             	mov    %rax,%rbx
    5e2d:	90                   	nop
}
    5e2e:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5e35:	48 89 c7             	mov    %rax,%rdi
    5e38:	e8 fb 05 00 00       	call   6438 <_ZNSt6vectorIcSaIcEED1Ev>
    5e3d:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5e44:	48 89 c7             	mov    %rax,%rdi
    5e47:	e8 74 e2 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5e4c:	48 89 d8             	mov    %rbx,%rax
    5e4f:	eb 63                	jmp    5eb4 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5e51:	49 89 c4             	mov    %rax,%r12
    5e54:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5e58:	48 89 c7             	mov    %rax,%rdi
    5e5b:	e8 c0 e3 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5e60:	eb 03                	jmp    5e65 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5e62:	49 89 c4             	mov    %rax,%r12
    5e65:	48 89 df             	mov    %rbx,%rdi
    5e68:	e8 13 e4 ff ff       	call   4280 <__cxa_free_exception@plt>
    5e6d:	4c 89 e3             	mov    %r12,%rbx
    5e70:	eb 28                	jmp    5e9a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5e72:	48 89 c3             	mov    %rax,%rbx
    5e75:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5e79:	48 89 c7             	mov    %rax,%rdi
    5e7c:	e8 ff e5 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    5e81:	eb 17                	jmp    5e9a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5e83:	48 89 c3             	mov    %rax,%rbx
    5e86:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5e8d:	48 89 c7             	mov    %rax,%rdi
    5e90:	e8 a3 05 00 00       	call   6438 <_ZNSt6vectorIcSaIcEED1Ev>
    5e95:	eb 03                	jmp    5e9a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5e97:	48 89 c3             	mov    %rax,%rbx
    5e9a:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ea1:	48 89 c7             	mov    %rax,%rdi
    5ea4:	e8 17 e2 ff ff       	call   40c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5ea9:	48 89 d8             	mov    %rbx,%rax
    5eac:	48 89 c7             	mov    %rax,%rdi
    5eaf:	e8 fc e8 ff ff       	call   47b0 <_Unwind_Resume@plt>
    5eb4:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5ebb:	5b                   	pop    %rbx
    5ebc:	41 5c                	pop    %r12
    5ebe:	5d                   	pop    %rbp
    5ebf:	c3                   	ret

0000000000005ec0 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5ec0:	55                   	push   %rbp
    5ec1:	48 89 e5             	mov    %rsp,%rbp
    5ec4:	41 54                	push   %r12
    5ec6:	53                   	push   %rbx
    5ec7:	48 83 ec 30          	sub    $0x30,%rsp
    5ecb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ecf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5ed3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5ed7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5edb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5edf:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ee3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ee7:	48 89 c7             	mov    %rax,%rdi
    5eea:	e8 01 e4 ff ff       	call   42f0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5eef:	85 c0                	test   %eax,%eax
    5ef1:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5ef4:	84 c0                	test   %al,%al
    5ef6:	74 3b                	je     5f33 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5ef8:	bf 10 00 00 00       	mov    $0x10,%edi
    5efd:	e8 9e e2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5f02:	48 89 c3             	mov    %rax,%rbx
    5f05:	48 8d 05 84 44 01 00 	lea    0x14484(%rip),%rax        # 1a390 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5f0c:	48 89 c6             	mov    %rax,%rsi
    5f0f:	48 89 df             	mov    %rbx,%rdi
    5f12:	e8 09 e2 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5f17:	48 8b 05 8a 50 02 00 	mov    0x2508a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5f1e:	48 89 c2             	mov    %rax,%rdx
    5f21:	48 8d 05 18 4e 02 00 	lea    0x24e18(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5f28:	48 89 c6             	mov    %rax,%rsi
    5f2b:	48 89 df             	mov    %rbx,%rdi
    5f2e:	e8 1d e8 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5f33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5f37:	eb 16                	jmp    5f4f <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5f39:	49 89 c4             	mov    %rax,%r12
    5f3c:	48 89 df             	mov    %rbx,%rdi
    5f3f:	e8 3c e3 ff ff       	call   4280 <__cxa_free_exception@plt>
    5f44:	4c 89 e0             	mov    %r12,%rax
    5f47:	48 89 c7             	mov    %rax,%rdi
    5f4a:	e8 61 e8 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5f4f:	48 83 c4 30          	add    $0x30,%rsp
    5f53:	5b                   	pop    %rbx
    5f54:	41 5c                	pop    %r12
    5f56:	5d                   	pop    %rbp
    5f57:	c3                   	ret

0000000000005f58 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5f58:	55                   	push   %rbp
    5f59:	48 89 e5             	mov    %rsp,%rbp
    5f5c:	41 54                	push   %r12
    5f5e:	53                   	push   %rbx
    5f5f:	48 83 ec 30          	sub    $0x30,%rsp
    5f63:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f67:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5f6b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5f6f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5f73:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f77:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5f7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f7f:	48 89 c7             	mov    %rax,%rdi
    5f82:	e8 a9 e2 ff ff       	call   4230 <vkCreateRenderPass@plt>
    5f87:	85 c0                	test   %eax,%eax
    5f89:	0f 95 c0             	setne  %al
    5f8c:	84 c0                	test   %al,%al
    5f8e:	74 3b                	je     5fcb <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5f90:	bf 10 00 00 00       	mov    $0x10,%edi
    5f95:	e8 06 e2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    5f9a:	48 89 c3             	mov    %rax,%rbx
    5f9d:	48 8d 05 ec 43 01 00 	lea    0x143ec(%rip),%rax        # 1a390 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5fa4:	48 89 c6             	mov    %rax,%rsi
    5fa7:	48 89 df             	mov    %rbx,%rdi
    5faa:	e8 71 e1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    5faf:	48 8b 05 f2 4f 02 00 	mov    0x24ff2(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5fb6:	48 89 c2             	mov    %rax,%rdx
    5fb9:	48 8d 05 80 4d 02 00 	lea    0x24d80(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5fc0:	48 89 c6             	mov    %rax,%rsi
    5fc3:	48 89 df             	mov    %rbx,%rdi
    5fc6:	e8 85 e7 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return renderPass;
    5fcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5fcf:	eb 16                	jmp    5fe7 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5fd1:	49 89 c4             	mov    %rax,%r12
    5fd4:	48 89 df             	mov    %rbx,%rdi
    5fd7:	e8 a4 e2 ff ff       	call   4280 <__cxa_free_exception@plt>
    5fdc:	4c 89 e0             	mov    %r12,%rax
    5fdf:	48 89 c7             	mov    %rax,%rdi
    5fe2:	e8 c9 e7 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    5fe7:	48 83 c4 30          	add    $0x30,%rsp
    5feb:	5b                   	pop    %rbx
    5fec:	41 5c                	pop    %r12
    5fee:	5d                   	pop    %rbp
    5fef:	c3                   	ret

0000000000005ff0 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>:

VkFramebuffer createFramebuffer(VkDevice device,
                                const VkFramebufferCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5ff0:	55                   	push   %rbp
    5ff1:	48 89 e5             	mov    %rsp,%rbp
    5ff4:	41 54                	push   %r12
    5ff6:	53                   	push   %rbx
    5ff7:	48 83 ec 30          	sub    $0x30,%rsp
    5ffb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5fff:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6003:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFramebuffer framebuffer;
  if (vkCreateFramebuffer(device, pCreateInfo, pAllocator, &framebuffer) !=
    6007:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    600b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    600f:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    6013:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6017:	48 89 c7             	mov    %rax,%rdi
    601a:	e8 d1 e5 ff ff       	call   45f0 <vkCreateFramebuffer@plt>
    601f:	85 c0                	test   %eax,%eax
    6021:	0f 95 c0             	setne  %al
    6024:	84 c0                	test   %al,%al
    6026:	74 3b                	je     6063 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create framebuffer.");
    6028:	bf 10 00 00 00       	mov    $0x10,%edi
    602d:	e8 6e e1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6032:	48 89 c3             	mov    %rax,%rbx
    6035:	48 8d 05 76 43 01 00 	lea    0x14376(%rip),%rax        # 1a3b2 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x102>
    603c:	48 89 c6             	mov    %rax,%rsi
    603f:	48 89 df             	mov    %rbx,%rdi
    6042:	e8 d9 e0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6047:	48 8b 05 5a 4f 02 00 	mov    0x24f5a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    604e:	48 89 c2             	mov    %rax,%rdx
    6051:	48 8d 05 e8 4c 02 00 	lea    0x24ce8(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6058:	48 89 c6             	mov    %rax,%rsi
    605b:	48 89 df             	mov    %rbx,%rdi
    605e:	e8 ed e6 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return framebuffer;
    6063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6067:	eb 16                	jmp    607f <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create framebuffer.");
    6069:	49 89 c4             	mov    %rax,%r12
    606c:	48 89 df             	mov    %rbx,%rdi
    606f:	e8 0c e2 ff ff       	call   4280 <__cxa_free_exception@plt>
    6074:	4c 89 e0             	mov    %r12,%rax
    6077:	48 89 c7             	mov    %rax,%rdi
    607a:	e8 31 e7 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    607f:	48 83 c4 30          	add    $0x30,%rsp
    6083:	5b                   	pop    %rbx
    6084:	41 5c                	pop    %r12
    6086:	5d                   	pop    %rbp
    6087:	c3                   	ret

0000000000006088 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    6088:	55                   	push   %rbp
    6089:	48 89 e5             	mov    %rsp,%rbp
    608c:	41 54                	push   %r12
    608e:	53                   	push   %rbx
    608f:	48 83 ec 30          	sub    $0x30,%rsp
    6093:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6097:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    609b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    609f:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    60a6:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    60a7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    60ab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    60af:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    60b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    60b7:	48 89 c7             	mov    %rax,%rdi
    60ba:	e8 a1 e0 ff ff       	call   4160 <vkCreateCommandPool@plt>
    60bf:	85 c0                	test   %eax,%eax
    60c1:	0f 95 c0             	setne  %al
    60c4:	84 c0                	test   %al,%al
    60c6:	74 3b                	je     6103 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    60c8:	bf 10 00 00 00       	mov    $0x10,%edi
    60cd:	e8 ce e0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    60d2:	48 89 c3             	mov    %rax,%rbx
    60d5:	48 8d 05 f4 42 01 00 	lea    0x142f4(%rip),%rax        # 1a3d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x120>
    60dc:	48 89 c6             	mov    %rax,%rsi
    60df:	48 89 df             	mov    %rbx,%rdi
    60e2:	e8 39 e0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    60e7:	48 8b 05 ba 4e 02 00 	mov    0x24eba(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    60ee:	48 89 c2             	mov    %rax,%rdx
    60f1:	48 8d 05 48 4c 02 00 	lea    0x24c48(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    60f8:	48 89 c6             	mov    %rax,%rsi
    60fb:	48 89 df             	mov    %rbx,%rdi
    60fe:	e8 4d e6 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return commandPool;
    6103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6107:	eb 16                	jmp    611f <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    6109:	49 89 c4             	mov    %rax,%r12
    610c:	48 89 df             	mov    %rbx,%rdi
    610f:	e8 6c e1 ff ff       	call   4280 <__cxa_free_exception@plt>
    6114:	4c 89 e0             	mov    %r12,%rax
    6117:	48 89 c7             	mov    %rax,%rdi
    611a:	e8 91 e6 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    611f:	48 83 c4 30          	add    $0x30,%rsp
    6123:	5b                   	pop    %rbx
    6124:	41 5c                	pop    %r12
    6126:	5d                   	pop    %rbp
    6127:	c3                   	ret

0000000000006128 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>:

VkSemaphore createSemaphore(VkDevice device,
                            const VkSemaphoreCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    6128:	55                   	push   %rbp
    6129:	48 89 e5             	mov    %rsp,%rbp
    612c:	41 54                	push   %r12
    612e:	53                   	push   %rbx
    612f:	48 83 ec 30          	sub    $0x30,%rsp
    6133:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6137:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    613b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSemaphore semaphore;
  if (vkCreateSemaphore(device, pCreateInfo, pAllocator, &semaphore) !=
    613f:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6143:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6147:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    614b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    614f:	48 89 c7             	mov    %rax,%rdi
    6152:	e8 d9 e4 ff ff       	call   4630 <vkCreateSemaphore@plt>
    6157:	85 c0                	test   %eax,%eax
    6159:	0f 95 c0             	setne  %al
    615c:	84 c0                	test   %al,%al
    615e:	74 3b                	je     619b <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create semaphore.");
    6160:	bf 10 00 00 00       	mov    $0x10,%edi
    6165:	e8 36 e0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    616a:	48 89 c3             	mov    %rax,%rbx
    616d:	48 8d 05 7b 42 01 00 	lea    0x1427b(%rip),%rax        # 1a3ef <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x13f>
    6174:	48 89 c6             	mov    %rax,%rsi
    6177:	48 89 df             	mov    %rbx,%rdi
    617a:	e8 a1 df ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    617f:	48 8b 05 22 4e 02 00 	mov    0x24e22(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6186:	48 89 c2             	mov    %rax,%rdx
    6189:	48 8d 05 b0 4b 02 00 	lea    0x24bb0(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6190:	48 89 c6             	mov    %rax,%rsi
    6193:	48 89 df             	mov    %rbx,%rdi
    6196:	e8 b5 e5 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return semaphore;
    619b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    619f:	eb 16                	jmp    61b7 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create semaphore.");
    61a1:	49 89 c4             	mov    %rax,%r12
    61a4:	48 89 df             	mov    %rbx,%rdi
    61a7:	e8 d4 e0 ff ff       	call   4280 <__cxa_free_exception@plt>
    61ac:	4c 89 e0             	mov    %r12,%rax
    61af:	48 89 c7             	mov    %rax,%rdi
    61b2:	e8 f9 e5 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    61b7:	48 83 c4 30          	add    $0x30,%rsp
    61bb:	5b                   	pop    %rbx
    61bc:	41 5c                	pop    %r12
    61be:	5d                   	pop    %rbp
    61bf:	c3                   	ret

00000000000061c0 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>:

VkFence createFence(VkDevice device, const VkFenceCreateInfo *pCreateInfo,
                    const VkAllocationCallbacks *pAllocator) {
    61c0:	55                   	push   %rbp
    61c1:	48 89 e5             	mov    %rsp,%rbp
    61c4:	41 54                	push   %r12
    61c6:	53                   	push   %rbx
    61c7:	48 83 ec 30          	sub    $0x30,%rsp
    61cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    61cf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    61d3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkFence fence;
  if (vkCreateFence(device, pCreateInfo, pAllocator, &fence) != VK_SUCCESS) {
    61d7:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    61db:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    61df:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    61e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    61e7:	48 89 c7             	mov    %rax,%rdi
    61ea:	e8 61 e3 ff ff       	call   4550 <vkCreateFence@plt>
    61ef:	85 c0                	test   %eax,%eax
    61f1:	0f 95 c0             	setne  %al
    61f4:	84 c0                	test   %al,%al
    61f6:	74 3b                	je     6233 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create fence.");
    61f8:	bf 10 00 00 00       	mov    $0x10,%edi
    61fd:	e8 9e df ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    6202:	48 89 c3             	mov    %rax,%rbx
    6205:	48 8d 05 ff 41 01 00 	lea    0x141ff(%rip),%rax        # 1a40b <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x15b>
    620c:	48 89 c6             	mov    %rax,%rsi
    620f:	48 89 df             	mov    %rbx,%rdi
    6212:	e8 09 df ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    6217:	48 8b 05 8a 4d 02 00 	mov    0x24d8a(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    621e:	48 89 c2             	mov    %rax,%rdx
    6221:	48 8d 05 18 4b 02 00 	lea    0x24b18(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6228:	48 89 c6             	mov    %rax,%rsi
    622b:	48 89 df             	mov    %rbx,%rdi
    622e:	e8 1d e5 ff ff       	call   4750 <__cxa_throw@plt>
  }
  return fence;
    6233:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6237:	eb 16                	jmp    624f <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create fence.");
    6239:	49 89 c4             	mov    %rax,%r12
    623c:	48 89 df             	mov    %rbx,%rdi
    623f:	e8 3c e0 ff ff       	call   4280 <__cxa_free_exception@plt>
    6244:	4c 89 e0             	mov    %r12,%rax
    6247:	48 89 c7             	mov    %rax,%rdi
    624a:	e8 61 e5 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    624f:	48 83 c4 30          	add    $0x30,%rsp
    6253:	5b                   	pop    %rbx
    6254:	41 5c                	pop    %r12
    6256:	5d                   	pop    %rbp
    6257:	c3                   	ret

0000000000006258 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    6258:	55                   	push   %rbp
    6259:	48 89 e5             	mov    %rsp,%rbp
    625c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    625f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6262:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6265:	0b 45 f8             	or     -0x8(%rbp),%eax
    6268:	5d                   	pop    %rbp
    6269:	c3                   	ret

000000000000626a <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    626a:	55                   	push   %rbp
    626b:	48 89 e5             	mov    %rsp,%rbp
    626e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    6272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6276:	48 8b 50 08          	mov    0x8(%rax),%rdx
    627a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    627e:	48 8b 00             	mov    (%rax),%rax
    6281:	48 29 c2             	sub    %rax,%rdx
    6284:	48 89 d0             	mov    %rdx,%rax
    6287:	5d                   	pop    %rbp
    6288:	c3                   	ret
    6289:	90                   	nop

000000000000628a <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    628a:	55                   	push   %rbp
    628b:	48 89 e5             	mov    %rsp,%rbp
    628e:	48 83 ec 10          	sub    $0x10,%rsp
    6292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    6296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    629a:	48 8b 10             	mov    (%rax),%rdx
    629d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a1:	48 89 d6             	mov    %rdx,%rsi
    62a4:	48 89 c7             	mov    %rax,%rdi
    62a7:	e8 24 02 00 00       	call   64d0 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    62ac:	c9                   	leave
    62ad:	c3                   	ret

00000000000062ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    62ae:	55                   	push   %rbp
    62af:	48 89 e5             	mov    %rsp,%rbp
    62b2:	53                   	push   %rbx
    62b3:	48 83 ec 38          	sub    $0x38,%rsp
    62b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    62bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    62bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    62c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    62c7:	48 89 c7             	mov    %rax,%rdi
    62ca:	e8 8a e8 ff ff       	call   4b59 <_ZNSt11char_traitsIcE6lengthEPKc>
    62cf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    62d3:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    62d7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    62db:	48 89 d6             	mov    %rdx,%rsi
    62de:	48 89 c7             	mov    %rax,%rdi
    62e1:	e8 2a de ff ff       	call   4110 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    62e6:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    62ea:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    62ee:	48 89 d6             	mov    %rdx,%rsi
    62f1:	48 89 c7             	mov    %rax,%rdi
    62f4:	e8 e9 01 00 00       	call   64e2 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    62f9:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    62fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6301:	48 89 d6             	mov    %rdx,%rsi
    6304:	48 89 c7             	mov    %rax,%rdi
    6307:	e8 54 e4 ff ff       	call   4760 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    630c:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    6310:	48 89 c7             	mov    %rax,%rdi
    6313:	e8 68 e1 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    6318:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    631c:	48 89 c7             	mov    %rax,%rdi
    631f:	e8 5c e1 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    6324:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6328:	48 89 c7             	mov    %rax,%rdi
    632b:	e8 30 df ff ff       	call   4260 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    6330:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6334:	48 01 c2             	add    %rax,%rdx
    6337:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    633b:	48 89 d6             	mov    %rdx,%rsi
    633e:	48 89 c7             	mov    %rax,%rdi
    6341:	e8 8a e3 ff ff       	call   46d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    6346:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    634a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    634e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6352:	48 89 ce             	mov    %rcx,%rsi
    6355:	48 89 c7             	mov    %rax,%rdi
    6358:	e8 e3 dc ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    635d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6361:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6365:	48 89 d6             	mov    %rdx,%rsi
    6368:	48 89 c7             	mov    %rax,%rdi
    636b:	e8 b0 e4 ff ff       	call   4820 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    6370:	eb 34                	jmp    63a6 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    6372:	48 89 c3             	mov    %rax,%rbx
    6375:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    6379:	48 89 c7             	mov    %rax,%rdi
    637c:	e8 ff e0 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    6381:	48 89 d8             	mov    %rbx,%rax
    6384:	48 89 c7             	mov    %rax,%rdi
    6387:	e8 24 e4 ff ff       	call   47b0 <_Unwind_Resume@plt>
    }
    638c:	48 89 c3             	mov    %rax,%rbx
    638f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6393:	48 89 c7             	mov    %rax,%rdi
    6396:	e8 85 de ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    639b:	48 89 d8             	mov    %rbx,%rax
    639e:	48 89 c7             	mov    %rax,%rdi
    63a1:	e8 0a e4 ff ff       	call   47b0 <_Unwind_Resume@plt>
    63a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    63ae:	c9                   	leave
    63af:	c3                   	ret

00000000000063b0 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    63b0:	55                   	push   %rbp
    63b1:	48 89 e5             	mov    %rsp,%rbp
    63b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63bc:	48 8b 00             	mov    (%rax),%rax
    63bf:	5d                   	pop    %rbp
    63c0:	c3                   	ret
    63c1:	90                   	nop

00000000000063c2 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    63c2:	55                   	push   %rbp
    63c3:	48 89 e5             	mov    %rsp,%rbp
    63c6:	53                   	push   %rbx
    63c7:	48 83 ec 28          	sub    $0x28,%rsp
    63cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63cf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    63d3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    63d7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    63db:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    63df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    63e3:	48 89 d6             	mov    %rdx,%rsi
    63e6:	48 89 c7             	mov    %rax,%rdi
    63e9:	e8 1d 01 00 00       	call   650b <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    63ee:	48 89 c1             	mov    %rax,%rcx
    63f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    63f5:	48 89 c2             	mov    %rax,%rdx
    63f8:	48 89 ce             	mov    %rcx,%rsi
    63fb:	48 89 df             	mov    %rbx,%rdi
    63fe:	e8 85 01 00 00       	call   6588 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6403:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    640b:	48 89 d6             	mov    %rdx,%rsi
    640e:	48 89 c7             	mov    %rax,%rdi
    6411:	e8 14 02 00 00       	call   662a <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6416:	eb 1a                	jmp    6432 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6418:	48 89 c3             	mov    %rax,%rbx
    641b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    641f:	48 89 c7             	mov    %rax,%rdi
    6422:	e8 bf 01 00 00       	call   65e6 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6427:	48 89 d8             	mov    %rbx,%rax
    642a:	48 89 c7             	mov    %rax,%rdi
    642d:	e8 7e e3 ff ff       	call   47b0 <_Unwind_Resume@plt>
    6432:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6436:	c9                   	leave
    6437:	c3                   	ret

0000000000006438 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6438:	55                   	push   %rbp
    6439:	48 89 e5             	mov    %rsp,%rbp
    643c:	48 83 ec 10          	sub    $0x10,%rsp
    6440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6444:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6448:	48 89 c7             	mov    %rax,%rdi
    644b:	e8 1a 02 00 00       	call   666a <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6450:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6453:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6457:	48 8b 48 08          	mov    0x8(%rax),%rcx
    645b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645f:	48 8b 00             	mov    (%rax),%rax
    6462:	48 89 ce             	mov    %rcx,%rsi
    6465:	48 89 c7             	mov    %rax,%rdi
    6468:	e8 0b 02 00 00       	call   6678 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    646d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6471:	48 89 c7             	mov    %rax,%rdi
    6474:	e8 6d 01 00 00       	call   65e6 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6479:	90                   	nop
    647a:	c9                   	leave
    647b:	c3                   	ret

000000000000647c <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    647c:	55                   	push   %rbp
    647d:	48 89 e5             	mov    %rsp,%rbp
    6480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6484:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    6488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    648c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6490:	48 89 10             	mov    %rdx,(%rax)
    6493:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6497:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    649e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    64a9:	90                   	nop
    64aa:	5d                   	pop    %rbp
    64ab:	c3                   	ret

00000000000064ac <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    64ac:	55                   	push   %rbp
    64ad:	48 89 e5             	mov    %rsp,%rbp
    64b0:	48 83 ec 10          	sub    $0x10,%rsp
    64b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    64b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64bc:	48 8b 10             	mov    (%rax),%rdx
    64bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c3:	48 89 d6             	mov    %rdx,%rsi
    64c6:	48 89 c7             	mov    %rax,%rdi
    64c9:	e8 02 00 00 00       	call   64d0 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    64ce:	c9                   	leave
    64cf:	c3                   	ret

00000000000064d0 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    64d0:	55                   	push   %rbp
    64d1:	48 89 e5             	mov    %rsp,%rbp
    64d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    64dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    64e0:	5d                   	pop    %rbp
    64e1:	c3                   	ret

00000000000064e2 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    64e2:	55                   	push   %rbp
    64e3:	48 89 e5             	mov    %rsp,%rbp
    64e6:	48 83 ec 10          	sub    $0x10,%rsp
    64ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    64f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64fa:	48 89 d6             	mov    %rdx,%rsi
    64fd:	48 89 c7             	mov    %rax,%rdi
    6500:	e8 a8 01 00 00       	call   66ad <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6509:	c9                   	leave
    650a:	c3                   	ret

000000000000650b <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    650b:	55                   	push   %rbp
    650c:	48 89 e5             	mov    %rsp,%rbp
    650f:	53                   	push   %rbx
    6510:	48 83 ec 28          	sub    $0x28,%rsp
    6514:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6518:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    651c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6520:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6524:	48 89 d6             	mov    %rdx,%rsi
    6527:	48 89 c7             	mov    %rax,%rdi
    652a:	e8 b1 dc ff ff       	call   41e0 <_ZNSaIcEC1ERKS_@plt>
    652f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6533:	48 89 c7             	mov    %rax,%rdi
    6536:	e8 9b 01 00 00       	call   66d6 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    653b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    653f:	0f 92 c3             	setb   %bl
    6542:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6546:	48 89 c7             	mov    %rax,%rdi
    6549:	e8 32 df ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    654e:	84 db                	test   %bl,%bl
    6550:	74 0f                	je     6561 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6552:	48 8d 05 cf 3e 01 00 	lea    0x13ecf(%rip),%rax        # 1a428 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x178>
    6559:	48 89 c7             	mov    %rax,%rdi
    655c:	e8 4f dc ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6561:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6565:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6569:	c9                   	leave
    656a:	c3                   	ret
    656b:	90                   	nop

000000000000656c <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    656c:	55                   	push   %rbp
    656d:	48 89 e5             	mov    %rsp,%rbp
    6570:	48 83 ec 10          	sub    $0x10,%rsp
    6574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    657c:	48 89 c7             	mov    %rax,%rdi
    657f:	e8 ec da ff ff       	call   4070 <_ZNSaIcED2Ev@plt>
    6584:	90                   	nop
    6585:	c9                   	leave
    6586:	c3                   	ret
    6587:	90                   	nop

0000000000006588 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    6588:	55                   	push   %rbp
    6589:	48 89 e5             	mov    %rsp,%rbp
    658c:	53                   	push   %rbx
    658d:	48 83 ec 28          	sub    $0x28,%rsp
    6591:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6595:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6599:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    659d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65a1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    65a5:	48 89 d6             	mov    %rdx,%rsi
    65a8:	48 89 c7             	mov    %rax,%rdi
    65ab:	e8 68 01 00 00       	call   6718 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    65b0:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    65b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65b8:	48 89 d6             	mov    %rdx,%rsi
    65bb:	48 89 c7             	mov    %rax,%rdi
    65be:	e8 87 01 00 00       	call   674a <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    65c3:	eb 1a                	jmp    65df <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    65c5:	48 89 c3             	mov    %rax,%rbx
    65c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65cc:	48 89 c7             	mov    %rax,%rdi
    65cf:	e8 98 ff ff ff       	call   656c <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    65d4:	48 89 d8             	mov    %rbx,%rax
    65d7:	48 89 c7             	mov    %rax,%rdi
    65da:	e8 d1 e1 ff ff       	call   47b0 <_Unwind_Resume@plt>
    65df:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    65e3:	c9                   	leave
    65e4:	c3                   	ret
    65e5:	90                   	nop

00000000000065e6 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    65e6:	55                   	push   %rbp
    65e7:	48 89 e5             	mov    %rsp,%rbp
    65ea:	48 83 ec 10          	sub    $0x10,%rsp
    65ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    65f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65f6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    65fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65fe:	48 8b 00             	mov    (%rax),%rax
    6601:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6608:	48 8b 08             	mov    (%rax),%rcx
    660b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    660f:	48 89 ce             	mov    %rcx,%rsi
    6612:	48 89 c7             	mov    %rax,%rdi
    6615:	e8 82 01 00 00       	call   679c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    661a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    661e:	48 89 c7             	mov    %rax,%rdi
    6621:	e8 46 ff ff ff       	call   656c <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6626:	90                   	nop
    6627:	c9                   	leave
    6628:	c3                   	ret
    6629:	90                   	nop

000000000000662a <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    662a:	55                   	push   %rbp
    662b:	48 89 e5             	mov    %rsp,%rbp
    662e:	48 83 ec 10          	sub    $0x10,%rsp
    6632:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6636:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    663a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    663e:	48 89 c7             	mov    %rax,%rdi
    6641:	e8 24 00 00 00       	call   666a <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6646:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    664d:	48 8b 00             	mov    (%rax),%rax
    6650:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6654:	48 89 ce             	mov    %rcx,%rsi
    6657:	48 89 c7             	mov    %rax,%rdi
    665a:	e8 72 01 00 00       	call   67d1 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    665f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6663:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6667:	90                   	nop
    6668:	c9                   	leave
    6669:	c3                   	ret

000000000000666a <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    666a:	55                   	push   %rbp
    666b:	48 89 e5             	mov    %rsp,%rbp
    666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6676:	5d                   	pop    %rbp
    6677:	c3                   	ret

0000000000006678 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6678:	55                   	push   %rbp
    6679:	48 89 e5             	mov    %rsp,%rbp
    667c:	48 83 ec 20          	sub    $0x20,%rsp
    6680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6688:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    668c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6694:	48 89 d6             	mov    %rdx,%rsi
    6697:	48 89 c7             	mov    %rax,%rdi
    669a:	e8 5b 01 00 00       	call   67fa <_ZSt8_DestroyIPcEvT_S1_>
    }
    669f:	90                   	nop
    66a0:	c9                   	leave
    66a1:	c3                   	ret

00000000000066a2 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    66a2:	55                   	push   %rbp
    66a3:	48 89 e5             	mov    %rsp,%rbp
    66a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    66aa:	90                   	nop
    66ab:	5d                   	pop    %rbp
    66ac:	c3                   	ret

00000000000066ad <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    66ad:	55                   	push   %rbp
    66ae:	48 89 e5             	mov    %rsp,%rbp
    66b1:	48 83 ec 10          	sub    $0x10,%rsp
    66b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    66bd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    66c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c5:	48 89 d6             	mov    %rdx,%rsi
    66c8:	48 89 c7             	mov    %rax,%rdi
    66cb:	e8 10 db ff ff       	call   41e0 <_ZNSaIcEC1ERKS_@plt>
    66d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66d4:	c9                   	leave
    66d5:	c3                   	ret

00000000000066d6 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    66d6:	55                   	push   %rbp
    66d7:	48 89 e5             	mov    %rsp,%rbp
    66da:	48 83 ec 20          	sub    $0x20,%rsp
    66de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    66e2:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    66e9:	ff ff 7f 
    66ec:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    66f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    66f4:	48 89 c7             	mov    %rax,%rdi
    66f7:	e8 52 01 00 00       	call   684e <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    66fc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6700:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6704:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6708:	48 89 d6             	mov    %rdx,%rsi
    670b:	48 89 c7             	mov    %rax,%rdi
    670e:	e8 f4 ed ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    6713:	48 8b 00             	mov    (%rax),%rax
      }
    6716:	c9                   	leave
    6717:	c3                   	ret

0000000000006718 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6718:	55                   	push   %rbp
    6719:	48 89 e5             	mov    %rsp,%rbp
    671c:	48 83 ec 10          	sub    $0x10,%rsp
    6720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6724:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6728:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    672c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6730:	48 89 d6             	mov    %rdx,%rsi
    6733:	48 89 c7             	mov    %rax,%rdi
    6736:	e8 25 df ff ff       	call   4660 <_ZNSaIcEC2ERKS_@plt>
    673b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    673f:	48 89 c7             	mov    %rax,%rdi
    6742:	e8 21 01 00 00       	call   6868 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6747:	90                   	nop
    6748:	c9                   	leave
    6749:	c3                   	ret

000000000000674a <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    674a:	55                   	push   %rbp
    674b:	48 89 e5             	mov    %rsp,%rbp
    674e:	48 83 ec 10          	sub    $0x10,%rsp
    6752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6756:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    675a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    675e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6762:	48 89 d6             	mov    %rdx,%rsi
    6765:	48 89 c7             	mov    %rax,%rdi
    6768:	e8 29 01 00 00       	call   6896 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    676d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6771:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6778:	48 8b 10             	mov    (%rax),%rdx
    677b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    677f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6783:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6787:	48 8b 10             	mov    (%rax),%rdx
    678a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    678e:	48 01 c2             	add    %rax,%rdx
    6791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6795:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6799:	90                   	nop
    679a:	c9                   	leave
    679b:	c3                   	ret

000000000000679c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    679c:	55                   	push   %rbp
    679d:	48 89 e5             	mov    %rsp,%rbp
    67a0:	48 83 ec 20          	sub    $0x20,%rsp
    67a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    67b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    67b5:	74 17                	je     67ce <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    67b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    67bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    67c3:	48 89 ce             	mov    %rcx,%rsi
    67c6:	48 89 c7             	mov    %rax,%rdi
    67c9:	e8 52 00 00 00       	call   6820 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    67ce:	90                   	nop
    67cf:	c9                   	leave
    67d0:	c3                   	ret

00000000000067d1 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    67d1:	55                   	push   %rbp
    67d2:	48 89 e5             	mov    %rsp,%rbp
    67d5:	48 83 ec 20          	sub    $0x20,%rsp
    67d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    67e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67ed:	48 89 d6             	mov    %rdx,%rsi
    67f0:	48 89 c7             	mov    %rax,%rdi
    67f3:	e8 d1 00 00 00       	call   68c9 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    67f8:	c9                   	leave
    67f9:	c3                   	ret

00000000000067fa <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    67fa:	55                   	push   %rbp
    67fb:	48 89 e5             	mov    %rsp,%rbp
    67fe:	48 83 ec 10          	sub    $0x10,%rsp
    6802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    680a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    680e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6812:	48 89 d6             	mov    %rdx,%rsi
    6815:	48 89 c7             	mov    %rax,%rdi
    6818:	e8 d5 00 00 00       	call   68f2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    681d:	90                   	nop
    681e:	c9                   	leave
    681f:	c3                   	ret

0000000000006820 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6820:	55                   	push   %rbp
    6821:	48 89 e5             	mov    %rsp,%rbp
    6824:	48 83 ec 20          	sub    $0x20,%rsp
    6828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    682c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6830:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6834:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6838:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    683c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6840:	48 89 ce             	mov    %rcx,%rsi
    6843:	48 89 c7             	mov    %rax,%rdi
    6846:	e8 c5 00 00 00       	call   6910 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    684b:	90                   	nop
    684c:	c9                   	leave
    684d:	c3                   	ret

000000000000684e <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    684e:	55                   	push   %rbp
    684f:	48 89 e5             	mov    %rsp,%rbp
    6852:	48 83 ec 10          	sub    $0x10,%rsp
    6856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    685a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    685e:	48 89 c7             	mov    %rax,%rdi
    6861:	e8 d4 00 00 00       	call   693a <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    6866:	c9                   	leave
    6867:	c3                   	ret

0000000000006868 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6868:	55                   	push   %rbp
    6869:	48 89 e5             	mov    %rsp,%rbp
    686c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6874:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    687b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    687f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6886:	00 
    6887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    688b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6892:	00 
	{ }
    6893:	90                   	nop
    6894:	5d                   	pop    %rbp
    6895:	c3                   	ret

0000000000006896 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6896:	55                   	push   %rbp
    6897:	48 89 e5             	mov    %rsp,%rbp
    689a:	48 83 ec 10          	sub    $0x10,%rsp
    689e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    68a6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    68ab:	74 15                	je     68c2 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    68ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    68b5:	48 89 d6             	mov    %rdx,%rsi
    68b8:	48 89 c7             	mov    %rax,%rdi
    68bb:	e8 94 00 00 00       	call   6954 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    68c0:	eb 05                	jmp    68c7 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    68c2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    68c7:	c9                   	leave
    68c8:	c3                   	ret

00000000000068c9 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    68c9:	55                   	push   %rbp
    68ca:	48 89 e5             	mov    %rsp,%rbp
    68cd:	48 83 ec 20          	sub    $0x20,%rsp
    68d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    68d9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    68dd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    68e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68e5:	48 89 d6             	mov    %rdx,%rsi
    68e8:	48 89 c7             	mov    %rax,%rdi
    68eb:	e8 8e 00 00 00       	call   697e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    68f0:	c9                   	leave
    68f1:	c3                   	ret

00000000000068f2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    68f2:	55                   	push   %rbp
    68f3:	48 89 e5             	mov    %rsp,%rbp
    68f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68fe:	90                   	nop
    68ff:	5d                   	pop    %rbp
    6900:	c3                   	ret

0000000000006901 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    6901:	55                   	push   %rbp
    6902:	48 89 e5             	mov    %rsp,%rbp
    6905:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    690d:	5d                   	pop    %rbp
    690e:	c3                   	ret
    690f:	90                   	nop

0000000000006910 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6910:	55                   	push   %rbp
    6911:	48 89 e5             	mov    %rsp,%rbp
    6914:	48 83 ec 20          	sub    $0x20,%rsp
    6918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    691c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6920:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6924:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    692c:	48 89 d6             	mov    %rdx,%rsi
    692f:	48 89 c7             	mov    %rax,%rdi
    6932:	e8 b9 da ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    6937:	c9                   	leave
    6938:	c3                   	ret
    6939:	90                   	nop

000000000000693a <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    693a:	55                   	push   %rbp
    693b:	48 89 e5             	mov    %rsp,%rbp
    693e:	48 83 ec 10          	sub    $0x10,%rsp
    6942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    694a:	48 89 c7             	mov    %rax,%rdi
    694d:	e8 8a 00 00 00       	call   69dc <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6952:	c9                   	leave
    6953:	c3                   	ret

0000000000006954 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6954:	55                   	push   %rbp
    6955:	48 89 e5             	mov    %rsp,%rbp
    6958:	48 83 ec 10          	sub    $0x10,%rsp
    695c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6960:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6964:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696c:	ba 00 00 00 00       	mov    $0x0,%edx
    6971:	48 89 ce             	mov    %rcx,%rsi
    6974:	48 89 c7             	mov    %rax,%rdi
    6977:	e8 74 00 00 00       	call   69f0 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    697c:	c9                   	leave
    697d:	c3                   	ret

000000000000697e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    697e:	55                   	push   %rbp
    697f:	48 89 e5             	mov    %rsp,%rbp
    6982:	48 83 ec 20          	sub    $0x20,%rsp
    6986:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    698a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    698e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6993:	74 40                	je     69d5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    6995:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6999:	48 89 c7             	mov    %rax,%rdi
    699c:	e8 60 ff ff ff       	call   6901 <_ZSt11__addressofIcEPT_RS0_>
    69a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    69a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69a9:	48 89 c7             	mov    %rax,%rdi
    69ac:	e8 87 00 00 00       	call   6a38 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    69b1:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    69b6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69ba:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    69be:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    69c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69c6:	48 89 ce             	mov    %rcx,%rsi
    69c9:	48 89 c7             	mov    %rax,%rdi
    69cc:	e8 8a 00 00 00       	call   6a5b <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    69d1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    69d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    69d9:	c9                   	leave
    69da:	c3                   	ret
    69db:	90                   	nop

00000000000069dc <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    69dc:	55                   	push   %rbp
    69dd:	48 89 e5             	mov    %rsp,%rbp
    69e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    69e4:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    69eb:	ff ff 7f 
      }
    69ee:	5d                   	pop    %rbp
    69ef:	c3                   	ret

00000000000069f0 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    69f0:	55                   	push   %rbp
    69f1:	48 89 e5             	mov    %rsp,%rbp
    69f4:	48 83 ec 20          	sub    $0x20,%rsp
    69f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a08:	48 89 c7             	mov    %rax,%rdi
    6a0b:	e8 cc ff ff ff       	call   69dc <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6a10:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6a14:	0f 92 c0             	setb   %al
    6a17:	0f b6 c0             	movzbl %al,%eax
    6a1a:	48 85 c0             	test   %rax,%rax
    6a1d:	0f 95 c0             	setne  %al
    6a20:	84 c0                	test   %al,%al
    6a22:	74 05                	je     6a29 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6a24:	e8 d7 d6 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6a29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a2d:	48 89 c7             	mov    %rax,%rdi
    6a30:	e8 9b d9 ff ff       	call   43d0 <_Znwm@plt>
    6a35:	90                   	nop
      }
    6a36:	c9                   	leave
    6a37:	c3                   	ret

0000000000006a38 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6a38:	55                   	push   %rbp
    6a39:	48 89 e5             	mov    %rsp,%rbp
    6a3c:	48 83 ec 10          	sub    $0x10,%rsp
    6a40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a48:	48 89 c6             	mov    %rax,%rsi
    6a4b:	bf 01 00 00 00       	mov    $0x1,%edi
    6a50:	e8 e4 e5 ff ff       	call   5039 <_ZnwmPv>
    6a55:	c6 00 00             	movb   $0x0,(%rax)
    }
    6a58:	90                   	nop
    6a59:	c9                   	leave
    6a5a:	c3                   	ret

0000000000006a5b <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6a5b:	55                   	push   %rbp
    6a5c:	48 89 e5             	mov    %rsp,%rbp
    6a5f:	48 83 ec 20          	sub    $0x20,%rsp
    6a63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    6a6f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a73:	48 89 c7             	mov    %rax,%rdi
    6a76:	e8 27 fc ff ff       	call   66a2 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6a7b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a7f:	48 89 c7             	mov    %rax,%rdi
    6a82:	e8 c4 e5 ff ff       	call   504b <_ZSt17__size_to_integerm>
    6a87:	48 89 c1             	mov    %rax,%rcx
    6a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a8e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a92:	48 89 ce             	mov    %rcx,%rsi
    6a95:	48 89 c7             	mov    %rax,%rdi
    6a98:	e8 02 00 00 00       	call   6a9f <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    6a9d:	c9                   	leave
    6a9e:	c3                   	ret

0000000000006a9f <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6a9f:	55                   	push   %rbp
    6aa0:	48 89 e5             	mov    %rsp,%rbp
    6aa3:	48 83 ec 20          	sub    $0x20,%rsp
    6aa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aaf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6ab3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6ab8:	75 06                	jne    6ac0 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    6aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6abe:	eb 2a                	jmp    6aea <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    6ac0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ac4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ac8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6acc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad4:	48 89 ce             	mov    %rcx,%rsi
    6ad7:	48 89 c7             	mov    %rax,%rdi
    6ada:	e8 0d 00 00 00       	call   6aec <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    6adf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ae7:	48 01 d0             	add    %rdx,%rax
    }
    6aea:	c9                   	leave
    6aeb:	c3                   	ret

0000000000006aec <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6aec:	55                   	push   %rbp
    6aed:	48 89 e5             	mov    %rsp,%rbp
    6af0:	48 83 ec 20          	sub    $0x20,%rsp
    6af4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6af8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6afc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6b00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b0c:	48 89 ce             	mov    %rcx,%rsi
    6b0f:	48 89 c7             	mov    %rax,%rdi
    6b12:	e8 03 00 00 00       	call   6b1a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6b17:	90                   	nop
    6b18:	c9                   	leave
    6b19:	c3                   	ret

0000000000006b1a <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6b1a:	55                   	push   %rbp
    6b1b:	48 89 e5             	mov    %rsp,%rbp
    6b1e:	48 83 ec 30          	sub    $0x30,%rsp
    6b22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6b2a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    6b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b32:	0f b6 00             	movzbl (%rax),%eax
    6b35:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6b38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6b3c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6b40:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6b44:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6b49:	74 19                	je     6b64 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6b4b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    6b4f:	0f b6 c8             	movzbl %al,%ecx
    6b52:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b5a:	89 ce                	mov    %ecx,%esi
    6b5c:	48 89 c7             	mov    %rax,%rdi
    6b5f:	e8 6c d6 ff ff       	call   41d0 <memset@plt>
    }
    6b64:	90                   	nop
    6b65:	c9                   	leave
    6b66:	c3                   	ret

0000000000006b67 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    6b67:	55                   	push   %rbp
    6b68:	48 89 e5             	mov    %rsp,%rbp
    6b6b:	48 83 ec 10          	sub    $0x10,%rsp
    6b6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b77:	48 89 c7             	mov    %rax,%rdi
    6b7a:	e8 71 d5 ff ff       	call   40f0 <glfwDestroyWindow@plt>
    6b7f:	90                   	nop
    6b80:	c9                   	leave
    6b81:	c3                   	ret

0000000000006b82 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    6b82:	55                   	push   %rbp
    6b83:	48 89 e5             	mov    %rsp,%rbp
    6b86:	48 83 ec 10          	sub    $0x10,%rsp
    6b8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    6b92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b9a:	48 89 d6             	mov    %rdx,%rsi
    6b9d:	48 89 c7             	mov    %rax,%rdi
    6ba0:	e8 5b d8 ff ff       	call   4400 <vkDestroyInstance@plt>
}
    6ba5:	90                   	nop
    6ba6:	c9                   	leave
    6ba7:	c3                   	ret

0000000000006ba8 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    6ba8:	55                   	push   %rbp
    6ba9:	48 89 e5             	mov    %rsp,%rbp
    6bac:	48 83 ec 10          	sub    $0x10,%rsp
    6bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    6bb8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bc0:	48 89 d6             	mov    %rdx,%rsi
    6bc3:	48 89 c7             	mov    %rax,%rdi
    6bc6:	e8 15 d7 ff ff       	call   42e0 <vkDestroyDevice@plt>
}
    6bcb:	90                   	nop
    6bcc:	c9                   	leave
    6bcd:	c3                   	ret

0000000000006bce <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    6bce:	55                   	push   %rbp
    6bcf:	48 89 e5             	mov    %rsp,%rbp
    6bd2:	48 83 ec 20          	sub    $0x20,%rsp
    6bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6be2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6be6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bee:	48 89 ce             	mov    %rcx,%rsi
    6bf1:	48 89 c7             	mov    %rax,%rdi
    6bf4:	e8 a7 db ff ff       	call   47a0 <vkDestroySurfaceKHR@plt>
}
    6bf9:	90                   	nop
    6bfa:	c9                   	leave
    6bfb:	c3                   	ret

0000000000006bfc <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    6bfc:	55                   	push   %rbp
    6bfd:	48 89 e5             	mov    %rsp,%rbp
    6c00:	48 83 ec 20          	sub    $0x20,%rsp
    6c04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    6c10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c14:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c1c:	48 89 ce             	mov    %rcx,%rsi
    6c1f:	48 89 c7             	mov    %rax,%rdi
    6c22:	e8 a9 d4 ff ff       	call   40d0 <vkDestroySwapchainKHR@plt>
}
    6c27:	90                   	nop
    6c28:	c9                   	leave
    6c29:	c3                   	ret

0000000000006c2a <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6c2a:	55                   	push   %rbp
    6c2b:	48 89 e5             	mov    %rsp,%rbp
    6c2e:	48 83 ec 20          	sub    $0x20,%rsp
    6c32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    6c3e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c42:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4a:	48 89 ce             	mov    %rcx,%rsi
    6c4d:	48 89 c7             	mov    %rax,%rdi
    6c50:	e8 7b db ff ff       	call   47d0 <vkDestroyImageView@plt>
}
    6c55:	90                   	nop
    6c56:	c9                   	leave
    6c57:	c3                   	ret

0000000000006c58 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6c58:	55                   	push   %rbp
    6c59:	48 89 e5             	mov    %rsp,%rbp
    6c5c:	48 83 ec 20          	sub    $0x20,%rsp
    6c60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c64:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c68:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    6c6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c70:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6c74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c78:	48 89 ce             	mov    %rcx,%rsi
    6c7b:	48 89 c7             	mov    %rax,%rdi
    6c7e:	e8 9d d8 ff ff       	call   4520 <vkDestroyShaderModule@plt>
}
    6c83:	90                   	nop
    6c84:	c9                   	leave
    6c85:	c3                   	ret

0000000000006c86 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    6c86:	55                   	push   %rbp
    6c87:	48 89 e5             	mov    %rsp,%rbp
    6c8a:	48 83 ec 20          	sub    $0x20,%rsp
    6c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    6c9a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6c9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ca6:	48 89 ce             	mov    %rcx,%rsi
    6ca9:	48 89 c7             	mov    %rax,%rdi
    6cac:	e8 bf d8 ff ff       	call   4570 <vkDestroyPipelineLayout@plt>
}
    6cb1:	90                   	nop
    6cb2:	c9                   	leave
    6cb3:	c3                   	ret

0000000000006cb4 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    6cb4:	55                   	push   %rbp
    6cb5:	48 89 e5             	mov    %rsp,%rbp
    6cb8:	48 83 ec 20          	sub    $0x20,%rsp
    6cbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    6cc8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ccc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cd4:	48 89 ce             	mov    %rcx,%rsi
    6cd7:	48 89 c7             	mov    %rax,%rdi
    6cda:	e8 d1 d6 ff ff       	call   43b0 <vkDestroyRenderPass@plt>
}
    6cdf:	90                   	nop
    6ce0:	c9                   	leave
    6ce1:	c3                   	ret

0000000000006ce2 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6ce2:	55                   	push   %rbp
    6ce3:	48 89 e5             	mov    %rsp,%rbp
    6ce6:	48 83 ec 20          	sub    $0x20,%rsp
    6cea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6cee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6cf2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6cf6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6cfa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d02:	48 89 ce             	mov    %rcx,%rsi
    6d05:	48 89 c7             	mov    %rax,%rdi
    6d08:	e8 93 d7 ff ff       	call   44a0 <vkDestroyPipeline@plt>
}
    6d0d:	90                   	nop
    6d0e:	c9                   	leave
    6d0f:	c3                   	ret

0000000000006d10 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    6d10:	55                   	push   %rbp
    6d11:	48 89 e5             	mov    %rsp,%rbp
    6d14:	48 83 ec 40          	sub    $0x40,%rsp
    6d18:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d1c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d20:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6d24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d28:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    6d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d30:	48 89 c7             	mov    %rax,%rdi
    6d33:	e8 20 01 00 00       	call   6e58 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6d38:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    6d3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d40:	48 89 c7             	mov    %rax,%rdi
    6d43:	e8 36 01 00 00       	call   6e7e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6d48:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    6d4c:	eb 36                	jmp    6d84 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6d4e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d52:	48 89 c7             	mov    %rax,%rdi
    6d55:	e8 a8 01 00 00       	call   6f02 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6d5a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6d5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6d62:	48 8b 08             	mov    (%rax),%rcx
    6d65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6d69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d6d:	48 89 ce             	mov    %rcx,%rsi
    6d70:	48 89 c7             	mov    %rax,%rdi
    6d73:	e8 28 d7 ff ff       	call   44a0 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    6d78:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d7c:	48 89 c7             	mov    %rax,%rdi
    6d7f:	e8 5e 01 00 00       	call   6ee2 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6d84:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6d88:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6d8c:	48 89 d6             	mov    %rdx,%rsi
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 10 01 00 00       	call   6ea7 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6d97:	84 c0                	test   %al,%al
    6d99:	75 b3                	jne    6d4e <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    6d9b:	90                   	nop
    6d9c:	90                   	nop
    6d9d:	c9                   	leave
    6d9e:	c3                   	ret

0000000000006d9f <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>:

void destroyFramebuffer(VkDevice device, VkFramebuffer framebuffer,
                        const VkAllocationCallbacks *pAllocator) {
    6d9f:	55                   	push   %rbp
    6da0:	48 89 e5             	mov    %rsp,%rbp
    6da3:	48 83 ec 20          	sub    $0x20,%rsp
    6da7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6daf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFramebuffer(device, framebuffer, pAllocator);
    6db3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6db7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6dbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dbf:	48 89 ce             	mov    %rcx,%rsi
    6dc2:	48 89 c7             	mov    %rax,%rdi
    6dc5:	e8 76 d9 ff ff       	call   4740 <vkDestroyFramebuffer@plt>
}
    6dca:	90                   	nop
    6dcb:	c9                   	leave
    6dcc:	c3                   	ret

0000000000006dcd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6dcd:	55                   	push   %rbp
    6dce:	48 89 e5             	mov    %rsp,%rbp
    6dd1:	48 83 ec 20          	sub    $0x20,%rsp
    6dd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ddd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6de1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6de5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6de9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ded:	48 89 ce             	mov    %rcx,%rsi
    6df0:	48 89 c7             	mov    %rax,%rdi
    6df3:	e8 58 d8 ff ff       	call   4650 <vkDestroyCommandPool@plt>
}
    6df8:	90                   	nop
    6df9:	c9                   	leave
    6dfa:	c3                   	ret

0000000000006dfb <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>:

void destroySemaphore(VkDevice device, VkSemaphore semaphore,
                      const VkAllocationCallbacks *pAllocator) {
    6dfb:	55                   	push   %rbp
    6dfc:	48 89 e5             	mov    %rsp,%rbp
    6dff:	48 83 ec 20          	sub    $0x20,%rsp
    6e03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e07:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e0b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySemaphore(device, semaphore, pAllocator);
    6e0f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e13:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e1b:	48 89 ce             	mov    %rcx,%rsi
    6e1e:	48 89 c7             	mov    %rax,%rdi
    6e21:	e8 ba d2 ff ff       	call   40e0 <vkDestroySemaphore@plt>
}
    6e26:	90                   	nop
    6e27:	c9                   	leave
    6e28:	c3                   	ret

0000000000006e29 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>:

void destroyFence(VkDevice device, VkFence fence,
                  const VkAllocationCallbacks *pAllocator) {
    6e29:	55                   	push   %rbp
    6e2a:	48 89 e5             	mov    %rsp,%rbp
    6e2d:	48 83 ec 20          	sub    $0x20,%rsp
    6e31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyFence(device, fence, pAllocator);
    6e3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e41:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e49:	48 89 ce             	mov    %rcx,%rsi
    6e4c:	48 89 c7             	mov    %rax,%rdi
    6e4f:	e8 3c d6 ff ff       	call   4490 <vkDestroyFence@plt>
}
    6e54:	90                   	nop
    6e55:	c9                   	leave
    6e56:	c3                   	ret
    6e57:	90                   	nop

0000000000006e58 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6e58:	55                   	push   %rbp
    6e59:	48 89 e5             	mov    %rsp,%rbp
    6e5c:	48 83 ec 20          	sub    $0x20,%rsp
    6e60:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6e64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6e6c:	48 89 d6             	mov    %rdx,%rsi
    6e6f:	48 89 c7             	mov    %rax,%rdi
    6e72:	e8 9d 00 00 00       	call   6f14 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6e77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e7b:	c9                   	leave
    6e7c:	c3                   	ret
    6e7d:	90                   	nop

0000000000006e7e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6e7e:	55                   	push   %rbp
    6e7f:	48 89 e5             	mov    %rsp,%rbp
    6e82:	48 83 ec 20          	sub    $0x20,%rsp
    6e86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6e8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e8e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6e92:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6e96:	48 89 d6             	mov    %rdx,%rsi
    6e99:	48 89 c7             	mov    %rax,%rdi
    6e9c:	e8 73 00 00 00       	call   6f14 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ea5:	c9                   	leave
    6ea6:	c3                   	ret

0000000000006ea7 <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6ea7:	55                   	push   %rbp
    6ea8:	48 89 e5             	mov    %rsp,%rbp
    6eab:	53                   	push   %rbx
    6eac:	48 83 ec 18          	sub    $0x18,%rsp
    6eb0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6eb4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ebc:	48 89 c7             	mov    %rax,%rdi
    6ebf:	e8 6e 00 00 00       	call   6f32 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6ec4:	48 8b 18             	mov    (%rax),%rbx
    6ec7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6ecb:	48 89 c7             	mov    %rax,%rdi
    6ece:	e8 5f 00 00 00       	call   6f32 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6ed3:	48 8b 00             	mov    (%rax),%rax
    6ed6:	48 39 c3             	cmp    %rax,%rbx
    6ed9:	0f 95 c0             	setne  %al
    6edc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ee0:	c9                   	leave
    6ee1:	c3                   	ret

0000000000006ee2 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6ee2:	55                   	push   %rbp
    6ee3:	48 89 e5             	mov    %rsp,%rbp
    6ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eee:	48 8b 00             	mov    (%rax),%rax
    6ef1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6ef5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ef9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6f00:	5d                   	pop    %rbp
    6f01:	c3                   	ret

0000000000006f02 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6f02:	55                   	push   %rbp
    6f03:	48 89 e5             	mov    %rsp,%rbp
    6f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f0e:	48 8b 00             	mov    (%rax),%rax
    6f11:	5d                   	pop    %rbp
    6f12:	c3                   	ret
    6f13:	90                   	nop

0000000000006f14 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6f14:	55                   	push   %rbp
    6f15:	48 89 e5             	mov    %rsp,%rbp
    6f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6f1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6f20:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6f24:	48 8b 10             	mov    (%rax),%rdx
    6f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f2b:	48 89 10             	mov    %rdx,(%rax)
    6f2e:	90                   	nop
    6f2f:	5d                   	pop    %rbp
    6f30:	c3                   	ret
    6f31:	90                   	nop

0000000000006f32 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6f32:	55                   	push   %rbp
    6f33:	48 89 e5             	mov    %rsp,%rbp
    6f36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f3e:	5d                   	pop    %rbp
    6f3f:	c3                   	ret

0000000000006f40 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6f40:	55                   	push   %rbp
    6f41:	48 89 e5             	mov    %rsp,%rbp
    6f44:	53                   	push   %rbx
    6f45:	48 83 ec 28          	sub    $0x28,%rsp
    6f49:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6f4d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f51:	be 00 00 00 00       	mov    $0x0,%esi
    6f56:	48 89 c7             	mov    %rax,%rdi
    6f59:	e8 72 d5 ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f5e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6f61:	89 c3                	mov    %eax,%ebx
    6f63:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f67:	48 89 c7             	mov    %rax,%rdi
    6f6a:	e8 47 11 00 00       	call   80b6 <_ZNSaI17VkLayerPropertiesEC1Ev>
    6f6f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6f73:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f77:	48 89 de             	mov    %rbx,%rsi
    6f7a:	48 89 c7             	mov    %rax,%rdi
    6f7d:	e8 6c 11 00 00       	call   80ee <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6f82:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f86:	48 89 c7             	mov    %rax,%rdi
    6f89:	e8 44 11 00 00       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6f8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f92:	48 89 c7             	mov    %rax,%rdi
    6f95:	e8 0e 12 00 00       	call   81a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6f9a:	48 89 c2             	mov    %rax,%rdx
    6f9d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6fa1:	48 89 d6             	mov    %rdx,%rsi
    6fa4:	48 89 c7             	mov    %rax,%rdi
    6fa7:	e8 24 d5 ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6fac:	eb 34                	jmp    6fe2 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6fae:	48 89 c3             	mov    %rax,%rbx
    6fb1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fb5:	48 89 c7             	mov    %rax,%rdi
    6fb8:	e8 15 11 00 00       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
    6fbd:	48 89 d8             	mov    %rbx,%rax
    6fc0:	48 89 c7             	mov    %rax,%rdi
    6fc3:	e8 e8 d7 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    6fc8:	48 89 c3             	mov    %rax,%rbx
    6fcb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fcf:	48 89 c7             	mov    %rax,%rdi
    6fd2:	e8 8d 11 00 00       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6fd7:	48 89 d8             	mov    %rbx,%rax
    6fda:	48 89 c7             	mov    %rax,%rdi
    6fdd:	e8 ce d7 ff ff       	call   47b0 <_Unwind_Resume@plt>
    6fe2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fe6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fea:	c9                   	leave
    6feb:	c3                   	ret

0000000000006fec <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6fec:	55                   	push   %rbp
    6fed:	48 89 e5             	mov    %rsp,%rbp
    6ff0:	41 54                	push   %r12
    6ff2:	53                   	push   %rbx
    6ff3:	48 83 ec 20          	sub    $0x20,%rsp
    6ff7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ffb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6fff:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7003:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7007:	ba 00 00 00 00       	mov    $0x0,%edx
    700c:	48 89 ce             	mov    %rcx,%rsi
    700f:	48 89 c7             	mov    %rax,%rdi
    7012:	e8 e9 d2 ff ff       	call   4300 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    7017:	85 c0                	test   %eax,%eax
    7019:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    701c:	84 c0                	test   %al,%al
    701e:	74 3b                	je     705b <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    7020:	bf 10 00 00 00       	mov    $0x10,%edi
    7025:	e8 76 d1 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    702a:	48 89 c3             	mov    %rax,%rbx
    702d:	48 8d 05 dc 3f 01 00 	lea    0x13fdc(%rip),%rax        # 1b010 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    7034:	48 89 c6             	mov    %rax,%rsi
    7037:	48 89 df             	mov    %rbx,%rdi
    703a:	e8 e1 d0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    703f:	48 8b 05 62 3f 02 00 	mov    0x23f62(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7046:	48 89 c2             	mov    %rax,%rdx
    7049:	48 8d 05 f0 3c 02 00 	lea    0x23cf0(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7050:	48 89 c6             	mov    %rax,%rsi
    7053:	48 89 df             	mov    %rbx,%rdi
    7056:	e8 f5 d6 ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    705b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    705e:	89 c3                	mov    %eax,%ebx
    7060:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7064:	48 89 c7             	mov    %rax,%rdi
    7067:	e8 b8 11 00 00       	call   8224 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    706c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7070:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7074:	48 89 de             	mov    %rbx,%rsi
    7077:	48 89 c7             	mov    %rax,%rdi
    707a:	e8 dd 11 00 00       	call   825c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    707f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7083:	48 89 c7             	mov    %rax,%rdi
    7086:	e8 b5 11 00 00       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    708b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    708f:	48 89 c7             	mov    %rax,%rdi
    7092:	e8 7f 12 00 00       	call   8316 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7097:	48 89 c2             	mov    %rax,%rdx
    709a:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    709e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    70a2:	48 89 ce             	mov    %rcx,%rsi
    70a5:	48 89 c7             	mov    %rax,%rdi
    70a8:	e8 53 d2 ff ff       	call   4300 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    70ad:	85 c0                	test   %eax,%eax
    70af:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    70b2:	84 c0                	test   %al,%al
    70b4:	0f 84 95 00 00 00    	je     714f <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    70ba:	bf 10 00 00 00       	mov    $0x10,%edi
    70bf:	e8 dc d0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    70c4:	48 89 c3             	mov    %rax,%rbx
    70c7:	48 8d 05 42 3f 01 00 	lea    0x13f42(%rip),%rax        # 1b010 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    70ce:	48 89 c6             	mov    %rax,%rsi
    70d1:	48 89 df             	mov    %rbx,%rdi
    70d4:	e8 47 d0 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    70d9:	48 8b 05 c8 3e 02 00 	mov    0x23ec8(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    70e0:	48 89 c2             	mov    %rax,%rdx
    70e3:	48 8d 05 56 3c 02 00 	lea    0x23c56(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    70ea:	48 89 c6             	mov    %rax,%rsi
    70ed:	48 89 df             	mov    %rbx,%rdi
    70f0:	e8 5b d6 ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    70f5:	49 89 c4             	mov    %rax,%r12
    70f8:	48 89 df             	mov    %rbx,%rdi
    70fb:	e8 80 d1 ff ff       	call   4280 <__cxa_free_exception@plt>
    7100:	4c 89 e0             	mov    %r12,%rax
    7103:	48 89 c7             	mov    %rax,%rdi
    7106:	e8 a5 d6 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    710b:	48 89 c3             	mov    %rax,%rbx
    710e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7112:	48 89 c7             	mov    %rax,%rdi
    7115:	e8 26 11 00 00       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
    711a:	48 89 d8             	mov    %rbx,%rax
    711d:	48 89 c7             	mov    %rax,%rdi
    7120:	e8 8b d6 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    7125:	49 89 c4             	mov    %rax,%r12
    7128:	48 89 df             	mov    %rbx,%rdi
    712b:	e8 50 d1 ff ff       	call   4280 <__cxa_free_exception@plt>
    7130:	4c 89 e3             	mov    %r12,%rbx
    7133:	eb 03                	jmp    7138 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    7135:	48 89 c3             	mov    %rax,%rbx
    7138:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    713c:	48 89 c7             	mov    %rax,%rdi
    713f:	e8 8e 11 00 00       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7144:	48 89 d8             	mov    %rbx,%rax
    7147:	48 89 c7             	mov    %rax,%rdi
    714a:	e8 61 d6 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return instanceExtensions;
    714f:	90                   	nop
}
    7150:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7154:	48 83 c4 20          	add    $0x20,%rsp
    7158:	5b                   	pop    %rbx
    7159:	41 5c                	pop    %r12
    715b:	5d                   	pop    %rbp
    715c:	c3                   	ret

000000000000715d <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    715d:	55                   	push   %rbp
    715e:	48 89 e5             	mov    %rsp,%rbp
    7161:	41 54                	push   %r12
    7163:	53                   	push   %rbx
    7164:	48 83 ec 30          	sub    $0x30,%rsp
    7168:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    716c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7170:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    7174:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7178:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    717c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7180:	b9 00 00 00 00       	mov    $0x0,%ecx
    7185:	48 89 c7             	mov    %rax,%rdi
    7188:	e8 93 d4 ff ff       	call   4620 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    718d:	85 c0                	test   %eax,%eax
    718f:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7192:	84 c0                	test   %al,%al
    7194:	74 3b                	je     71d1 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    7196:	bf 10 00 00 00       	mov    $0x10,%edi
    719b:	e8 00 d0 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    71a0:	48 89 c3             	mov    %rax,%rbx
    71a3:	48 8d 05 8e 3e 01 00 	lea    0x13e8e(%rip),%rax        # 1b038 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    71aa:	48 89 c6             	mov    %rax,%rsi
    71ad:	48 89 df             	mov    %rbx,%rdi
    71b0:	e8 6b cf ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    71b5:	48 8b 05 ec 3d 02 00 	mov    0x23dec(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    71bc:	48 89 c2             	mov    %rax,%rdx
    71bf:	48 8d 05 7a 3b 02 00 	lea    0x23b7a(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    71c6:	48 89 c6             	mov    %rax,%rsi
    71c9:	48 89 df             	mov    %rbx,%rdi
    71cc:	e8 7f d5 ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    71d1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    71d4:	89 c3                	mov    %eax,%ebx
    71d6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71da:	48 89 c7             	mov    %rax,%rdi
    71dd:	e8 42 10 00 00       	call   8224 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    71e2:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    71e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71ea:	48 89 de             	mov    %rbx,%rsi
    71ed:	48 89 c7             	mov    %rax,%rdi
    71f0:	e8 67 10 00 00       	call   825c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    71f5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71f9:	48 89 c7             	mov    %rax,%rdi
    71fc:	e8 3f 10 00 00       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    7201:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7205:	48 89 c7             	mov    %rax,%rdi
    7208:	e8 09 11 00 00       	call   8316 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    720d:	48 89 c1             	mov    %rax,%rcx
    7210:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7214:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7218:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    721c:	48 89 c7             	mov    %rax,%rdi
    721f:	e8 fc d3 ff ff       	call   4620 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    7224:	85 c0                	test   %eax,%eax
    7226:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    7229:	84 c0                	test   %al,%al
    722b:	0f 84 95 00 00 00    	je     72c6 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    7231:	bf 10 00 00 00       	mov    $0x10,%edi
    7236:	e8 65 cf ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    723b:	48 89 c3             	mov    %rax,%rbx
    723e:	48 8d 05 f3 3d 01 00 	lea    0x13df3(%rip),%rax        # 1b038 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    7245:	48 89 c6             	mov    %rax,%rsi
    7248:	48 89 df             	mov    %rbx,%rdi
    724b:	e8 d0 ce ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7250:	48 8b 05 51 3d 02 00 	mov    0x23d51(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7257:	48 89 c2             	mov    %rax,%rdx
    725a:	48 8d 05 df 3a 02 00 	lea    0x23adf(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7261:	48 89 c6             	mov    %rax,%rsi
    7264:	48 89 df             	mov    %rbx,%rdi
    7267:	e8 e4 d4 ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    726c:	49 89 c4             	mov    %rax,%r12
    726f:	48 89 df             	mov    %rbx,%rdi
    7272:	e8 09 d0 ff ff       	call   4280 <__cxa_free_exception@plt>
    7277:	4c 89 e0             	mov    %r12,%rax
    727a:	48 89 c7             	mov    %rax,%rdi
    727d:	e8 2e d5 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    7282:	48 89 c3             	mov    %rax,%rbx
    7285:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7289:	48 89 c7             	mov    %rax,%rdi
    728c:	e8 af 0f 00 00       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7291:	48 89 d8             	mov    %rbx,%rax
    7294:	48 89 c7             	mov    %rax,%rdi
    7297:	e8 14 d5 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    729c:	49 89 c4             	mov    %rax,%r12
    729f:	48 89 df             	mov    %rbx,%rdi
    72a2:	e8 d9 cf ff ff       	call   4280 <__cxa_free_exception@plt>
    72a7:	4c 89 e3             	mov    %r12,%rbx
    72aa:	eb 03                	jmp    72af <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    72ac:	48 89 c3             	mov    %rax,%rbx
    72af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72b3:	48 89 c7             	mov    %rax,%rdi
    72b6:	e8 17 10 00 00       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    72bb:	48 89 d8             	mov    %rbx,%rax
    72be:	48 89 c7             	mov    %rax,%rdi
    72c1:	e8 ea d4 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return deviceExtensions;
    72c6:	90                   	nop
}
    72c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72cb:	48 83 c4 30          	add    $0x30,%rsp
    72cf:	5b                   	pop    %rbx
    72d0:	41 5c                	pop    %r12
    72d2:	5d                   	pop    %rbp
    72d3:	c3                   	ret

00000000000072d4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    72d4:	55                   	push   %rbp
    72d5:	48 89 e5             	mov    %rsp,%rbp
    72d8:	53                   	push   %rbx
    72d9:	48 83 ec 38          	sub    $0x38,%rsp
    72dd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    72e1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    72e5:	48 89 c7             	mov    %rax,%rdi
    72e8:	e8 b3 cf ff ff       	call   42a0 <glfwGetRequiredInstanceExtensions@plt>
    72ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    72f1:	8b 45 d8             	mov    -0x28(%rbp),%eax
    72f4:	89 c3                	mov    %eax,%ebx
    72f6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    72fa:	48 89 c7             	mov    %rax,%rdi
    72fd:	e8 90 10 00 00       	call   8392 <_ZNSaIPKcEC1Ev>
    7302:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7306:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    730a:	48 89 de             	mov    %rbx,%rsi
    730d:	48 89 c7             	mov    %rax,%rdi
    7310:	e8 b5 10 00 00       	call   83ca <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    7315:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7319:	48 89 c7             	mov    %rax,%rdi
    731c:	e8 8d 10 00 00       	call   83ae <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7321:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    7328:	eb 2e                	jmp    7358 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    732a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    732d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    7334:	00 
    7335:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7339:	48 01 d0             	add    %rdx,%rax
    733c:	48 8b 18             	mov    (%rax),%rbx
    733f:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7342:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7346:	48 89 d6             	mov    %rdx,%rsi
    7349:	48 89 c7             	mov    %rax,%rdi
    734c:	e8 ef 10 00 00       	call   8440 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    7351:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    7354:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    7358:	8b 45 d8             	mov    -0x28(%rbp),%eax
    735b:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    735e:	72 ca                	jb     732a <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    7360:	eb 1a                	jmp    737c <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    7362:	48 89 c3             	mov    %rax,%rbx
    7365:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7369:	48 89 c7             	mov    %rax,%rdi
    736c:	e8 3d 10 00 00       	call   83ae <_ZNSaIPKcED1Ev>
    7371:	48 89 d8             	mov    %rbx,%rax
    7374:	48 89 c7             	mov    %rax,%rdi
    7377:	e8 34 d4 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    737c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7380:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7384:	c9                   	leave
    7385:	c3                   	ret

0000000000007386 <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    7386:	55                   	push   %rbp
    7387:	48 89 e5             	mov    %rsp,%rbp
    738a:	53                   	push   %rbx
    738b:	48 83 ec 28          	sub    $0x28,%rsp
    738f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    7393:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    7397:	be 00 00 00 00       	mov    $0x0,%esi
    739c:	48 89 c7             	mov    %rax,%rdi
    739f:	e8 2c d1 ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    73a4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    73a7:	89 c3                	mov    %eax,%ebx
    73a9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    73ad:	48 89 c7             	mov    %rax,%rdi
    73b0:	e8 01 0d 00 00       	call   80b6 <_ZNSaI17VkLayerPropertiesEC1Ev>
    73b5:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    73b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73bd:	48 89 de             	mov    %rbx,%rsi
    73c0:	48 89 c7             	mov    %rax,%rdi
    73c3:	e8 26 0d 00 00       	call   80ee <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    73c8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    73cc:	48 89 c7             	mov    %rax,%rdi
    73cf:	e8 fe 0c 00 00       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    73d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73d8:	48 89 c7             	mov    %rax,%rdi
    73db:	e8 c8 0d 00 00       	call   81a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    73e0:	48 89 c2             	mov    %rax,%rdx
    73e3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    73e7:	48 89 d6             	mov    %rdx,%rsi
    73ea:	48 89 c7             	mov    %rax,%rdi
    73ed:	e8 de d0 ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    73f2:	eb 34                	jmp    7428 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    73f4:	48 89 c3             	mov    %rax,%rbx
    73f7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    73fb:	48 89 c7             	mov    %rax,%rdi
    73fe:	e8 cf 0c 00 00       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
    7403:	48 89 d8             	mov    %rbx,%rax
    7406:	48 89 c7             	mov    %rax,%rdi
    7409:	e8 a2 d3 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    740e:	48 89 c3             	mov    %rax,%rbx
    7411:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7415:	48 89 c7             	mov    %rax,%rdi
    7418:	e8 47 0d 00 00       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    741d:	48 89 d8             	mov    %rbx,%rax
    7420:	48 89 c7             	mov    %rax,%rdi
    7423:	e8 88 d3 ff ff       	call   47b0 <_Unwind_Resume@plt>
    7428:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    742c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7430:	c9                   	leave
    7431:	c3                   	ret

0000000000007432 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    7432:	55                   	push   %rbp
    7433:	48 89 e5             	mov    %rsp,%rbp
    7436:	41 54                	push   %r12
    7438:	53                   	push   %rbx
    7439:	48 83 ec 20          	sub    $0x20,%rsp
    743d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7441:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    7445:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7449:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    744d:	ba 00 00 00 00       	mov    $0x0,%edx
    7452:	48 89 ce             	mov    %rcx,%rsi
    7455:	48 89 c7             	mov    %rax,%rdi
    7458:	e8 63 cd ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    745d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7460:	85 c0                	test   %eax,%eax
    7462:	75 3b                	jne    749f <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7464:	bf 10 00 00 00       	mov    $0x10,%edi
    7469:	e8 32 cd ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    746e:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7471:	48 8d 05 e8 3b 01 00 	lea    0x13be8(%rip),%rax        # 1b060 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    7478:	48 89 c6             	mov    %rax,%rsi
    747b:	48 89 df             	mov    %rbx,%rdi
    747e:	e8 9d cc ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7483:	48 8b 05 1e 3b 02 00 	mov    0x23b1e(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    748a:	48 89 c2             	mov    %rax,%rdx
    748d:	48 8d 05 ac 38 02 00 	lea    0x238ac(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7494:	48 89 c6             	mov    %rax,%rsi
    7497:	48 89 df             	mov    %rbx,%rdi
    749a:	e8 b1 d2 ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    749f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    74a2:	89 c3                	mov    %eax,%ebx
    74a4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    74a8:	48 89 c7             	mov    %rax,%rdi
    74ab:	e8 fe 0f 00 00       	call   84ae <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    74b0:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    74b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74b8:	48 89 de             	mov    %rbx,%rsi
    74bb:	48 89 c7             	mov    %rax,%rdi
    74be:	e8 23 10 00 00       	call   84e6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    74c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    74c7:	48 89 c7             	mov    %rax,%rdi
    74ca:	e8 fb 0f 00 00       	call   84ca <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    74cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    74d3:	48 89 c7             	mov    %rax,%rdi
    74d6:	e8 c5 10 00 00       	call   85a0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    74db:	48 89 c2             	mov    %rax,%rdx
    74de:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    74e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    74e6:	48 89 ce             	mov    %rcx,%rsi
    74e9:	48 89 c7             	mov    %rax,%rdi
    74ec:	e8 cf cc ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    74f1:	85 c0                	test   %eax,%eax
    74f3:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    74f6:	84 c0                	test   %al,%al
    74f8:	0f 84 95 00 00 00    	je     7593 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    74fe:	bf 10 00 00 00       	mov    $0x10,%edi
    7503:	e8 98 cc ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7508:	48 89 c3             	mov    %rax,%rbx
    750b:	48 8d 05 86 3b 01 00 	lea    0x13b86(%rip),%rax        # 1b098 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    7512:	48 89 c6             	mov    %rax,%rsi
    7515:	48 89 df             	mov    %rbx,%rdi
    7518:	e8 03 cc ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    751d:	48 8b 05 84 3a 02 00 	mov    0x23a84(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7524:	48 89 c2             	mov    %rax,%rdx
    7527:	48 8d 05 12 38 02 00 	lea    0x23812(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    752e:	48 89 c6             	mov    %rax,%rsi
    7531:	48 89 df             	mov    %rbx,%rdi
    7534:	e8 17 d2 ff ff       	call   4750 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    7539:	49 89 c4             	mov    %rax,%r12
    753c:	48 89 df             	mov    %rbx,%rdi
    753f:	e8 3c cd ff ff       	call   4280 <__cxa_free_exception@plt>
    7544:	4c 89 e0             	mov    %r12,%rax
    7547:	48 89 c7             	mov    %rax,%rdi
    754a:	e8 61 d2 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    754f:	48 89 c3             	mov    %rax,%rbx
    7552:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7556:	48 89 c7             	mov    %rax,%rdi
    7559:	e8 6c 0f 00 00       	call   84ca <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    755e:	48 89 d8             	mov    %rbx,%rax
    7561:	48 89 c7             	mov    %rax,%rdi
    7564:	e8 47 d2 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    7569:	49 89 c4             	mov    %rax,%r12
    756c:	48 89 df             	mov    %rbx,%rdi
    756f:	e8 0c cd ff ff       	call   4280 <__cxa_free_exception@plt>
    7574:	4c 89 e3             	mov    %r12,%rbx
    7577:	eb 03                	jmp    757c <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    7579:	48 89 c3             	mov    %rax,%rbx
    757c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7580:	48 89 c7             	mov    %rax,%rdi
    7583:	e8 d4 0f 00 00       	call   855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    7588:	48 89 d8             	mov    %rbx,%rax
    758b:	48 89 c7             	mov    %rax,%rdi
    758e:	e8 1d d2 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return physicalDevices;
    7593:	90                   	nop
}
    7594:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7598:	48 83 c4 20          	add    $0x20,%rsp
    759c:	5b                   	pop    %rbx
    759d:	41 5c                	pop    %r12
    759f:	5d                   	pop    %rbp
    75a0:	c3                   	ret

00000000000075a1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    75a1:	55                   	push   %rbp
    75a2:	48 89 e5             	mov    %rsp,%rbp
    75a5:	48 83 ec 10          	sub    $0x10,%rsp
    75a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    75b1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    75b5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75b9:	48 89 d6             	mov    %rdx,%rsi
    75bc:	48 89 c7             	mov    %rax,%rdi
    75bf:	e8 6c cb ff ff       	call   4130 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    75c4:	90                   	nop
}
    75c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75c9:	c9                   	leave
    75ca:	c3                   	ret

00000000000075cb <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    75cb:	55                   	push   %rbp
    75cc:	48 89 e5             	mov    %rsp,%rbp
    75cf:	48 83 ec 20          	sub    $0x20,%rsp
    75d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75db:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    75df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75e3:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    75e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    75f1:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    75f5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    75f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75fd:	48 89 d6             	mov    %rdx,%rsi
    7600:	48 89 c7             	mov    %rax,%rdi
    7603:	e8 78 cd ff ff       	call   4380 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    7608:	90                   	nop
}
    7609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    760d:	c9                   	leave
    760e:	c3                   	ret

000000000000760f <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    760f:	55                   	push   %rbp
    7610:	48 89 e5             	mov    %rsp,%rbp
    7613:	53                   	push   %rbx
    7614:	48 83 ec 28          	sub    $0x28,%rsp
    7618:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    761c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    7620:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7624:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7628:	ba 00 00 00 00       	mov    $0x0,%edx
    762d:	48 89 ce             	mov    %rcx,%rsi
    7630:	48 89 c7             	mov    %rax,%rdi
    7633:	e8 58 cc ff ff       	call   4290 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    7638:	8b 45 e8             	mov    -0x18(%rbp),%eax
    763b:	89 c3                	mov    %eax,%ebx
    763d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7641:	48 89 c7             	mov    %rax,%rdi
    7644:	e8 c9 0f 00 00       	call   8612 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    7649:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    764d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7651:	48 89 de             	mov    %rbx,%rsi
    7654:	48 89 c7             	mov    %rax,%rdi
    7657:	e8 ee 0f 00 00       	call   864a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    765c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7660:	48 89 c7             	mov    %rax,%rdi
    7663:	e8 c6 0f 00 00       	call   862e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    7668:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    766c:	48 89 c7             	mov    %rax,%rdi
    766f:	e8 90 10 00 00       	call   8704 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    7674:	48 89 c2             	mov    %rax,%rdx
    7677:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    767b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    767f:	48 89 ce             	mov    %rcx,%rsi
    7682:	48 89 c7             	mov    %rax,%rdi
    7685:	e8 06 cc ff ff       	call   4290 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    768a:	eb 34                	jmp    76c0 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    768c:	48 89 c3             	mov    %rax,%rbx
    768f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7693:	48 89 c7             	mov    %rax,%rdi
    7696:	e8 93 0f 00 00       	call   862e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    769b:	48 89 d8             	mov    %rbx,%rax
    769e:	48 89 c7             	mov    %rax,%rdi
    76a1:	e8 0a d1 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    76a6:	48 89 c3             	mov    %rax,%rbx
    76a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76ad:	48 89 c7             	mov    %rax,%rdi
    76b0:	e8 0b 10 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    76b5:	48 89 d8             	mov    %rbx,%rax
    76b8:	48 89 c7             	mov    %rax,%rdi
    76bb:	e8 f0 d0 ff ff       	call   47b0 <_Unwind_Resume@plt>
    76c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    76c8:	c9                   	leave
    76c9:	c3                   	ret

00000000000076ca <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    76ca:	55                   	push   %rbp
    76cb:	48 89 e5             	mov    %rsp,%rbp
    76ce:	53                   	push   %rbx
    76cf:	48 83 ec 68          	sub    $0x68,%rsp
    76d3:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    76d7:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    76db:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    76df:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    76e3:	48 89 d6             	mov    %rdx,%rsi
    76e6:	48 89 c7             	mov    %rax,%rdi
    76e9:	e8 21 ff ff ff       	call   760f <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    76ee:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    76f2:	48 89 c7             	mov    %rax,%rdi
    76f5:	e8 86 10 00 00       	call   8780 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    76fa:	48 89 c3             	mov    %rax,%rbx
    76fd:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7701:	48 89 c7             	mov    %rax,%rdi
    7704:	e8 a5 10 00 00       	call   87ae <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7709:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    770d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7711:	48 89 de             	mov    %rbx,%rsi
    7714:	48 89 c7             	mov    %rax,%rdi
    7717:	e8 ca 10 00 00       	call   87e6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    771c:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7720:	48 89 c7             	mov    %rax,%rdi
    7723:	e8 a2 10 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7728:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    772f:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7730:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7734:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7738:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    773c:	48 89 c7             	mov    %rax,%rdi
    773f:	e8 5c 11 00 00       	call   88a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7744:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7748:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    774c:	48 89 c7             	mov    %rax,%rdi
    774f:	e8 72 11 00 00       	call   88c6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7754:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7758:	eb 4e                	jmp    77a8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    775a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    775e:	48 89 c7             	mov    %rax,%rdi
    7761:	e8 e4 11 00 00       	call   894a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7766:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    776a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    776e:	8b 00                	mov    (%rax),%eax
    7770:	83 e0 01             	and    $0x1,%eax
    7773:	85 c0                	test   %eax,%eax
    7775:	74 25                	je     779c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    7777:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    777b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    777f:	48 89 d6             	mov    %rdx,%rsi
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 d2 11 00 00       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    778a:	48 89 c2             	mov    %rax,%rdx
    778d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7791:	48 89 c6             	mov    %rax,%rsi
    7794:	48 89 d7             	mov    %rdx,%rdi
    7797:	e8 ea 11 00 00       	call   8986 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    779c:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77a0:	48 89 c7             	mov    %rax,%rdi
    77a3:	e8 82 11 00 00       	call   892a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    77a8:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    77ac:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    77b0:	48 89 d6             	mov    %rdx,%rsi
    77b3:	48 89 c7             	mov    %rax,%rdi
    77b6:	e8 34 11 00 00       	call   88ef <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    77bb:	84 c0                	test   %al,%al
    77bd:	75 9b                	jne    775a <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    77bf:	90                   	nop
}
    77c0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    77c4:	48 89 c7             	mov    %rax,%rdi
    77c7:	e8 f4 0e 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    77cc:	eb 26                	jmp    77f4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    77ce:	48 89 c3             	mov    %rax,%rbx
    77d1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    77d5:	48 89 c7             	mov    %rax,%rdi
    77d8:	e8 ed 0f 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    77dd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    77e1:	48 89 c7             	mov    %rax,%rdi
    77e4:	e8 d7 0e 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    77e9:	48 89 d8             	mov    %rbx,%rax
    77ec:	48 89 c7             	mov    %rax,%rdi
    77ef:	e8 bc cf ff ff       	call   47b0 <_Unwind_Resume@plt>
    77f4:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    77f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    77fc:	c9                   	leave
    77fd:	c3                   	ret

00000000000077fe <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    77fe:	55                   	push   %rbp
    77ff:	48 89 e5             	mov    %rsp,%rbp
    7802:	53                   	push   %rbx
    7803:	48 83 ec 68          	sub    $0x68,%rsp
    7807:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    780b:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    780f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7813:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7817:	48 89 d6             	mov    %rdx,%rsi
    781a:	48 89 c7             	mov    %rax,%rdi
    781d:	e8 ed fd ff ff       	call   760f <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    7822:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7826:	48 89 c7             	mov    %rax,%rdi
    7829:	e8 52 0f 00 00       	call   8780 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    782e:	48 89 c3             	mov    %rax,%rbx
    7831:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7835:	48 89 c7             	mov    %rax,%rdi
    7838:	e8 71 0f 00 00       	call   87ae <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    783d:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7841:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7845:	48 89 de             	mov    %rbx,%rsi
    7848:	48 89 c7             	mov    %rax,%rdi
    784b:	e8 96 0f 00 00       	call   87e6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7850:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7854:	48 89 c7             	mov    %rax,%rdi
    7857:	e8 6e 0f 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    785c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7863:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7864:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7868:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    786c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7870:	48 89 c7             	mov    %rax,%rdi
    7873:	e8 28 10 00 00       	call   88a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    7878:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    787c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7880:	48 89 c7             	mov    %rax,%rdi
    7883:	e8 3e 10 00 00       	call   88c6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7888:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    788c:	eb 53                	jmp    78e1 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    788e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7892:	48 89 c7             	mov    %rax,%rdi
    7895:	e8 b0 10 00 00       	call   894a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    789a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    789e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78a2:	8b 00                	mov    (%rax),%eax
    78a4:	83 e0 02             	and    $0x2,%eax
    78a7:	85 c0                	test   %eax,%eax
    78a9:	74 25                	je     78d0 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    78ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    78af:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    78b3:	48 89 d6             	mov    %rdx,%rsi
    78b6:	48 89 c7             	mov    %rax,%rdi
    78b9:	e8 9e 10 00 00       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    78be:	48 89 c2             	mov    %rax,%rdx
    78c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78c5:	48 89 c6             	mov    %rax,%rsi
    78c8:	48 89 d7             	mov    %rdx,%rdi
    78cb:	e8 b6 10 00 00       	call   8986 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    78d0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    78d5:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    78d9:	48 89 c7             	mov    %rax,%rdi
    78dc:	e8 49 10 00 00       	call   892a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    78e1:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    78e5:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    78e9:	48 89 d6             	mov    %rdx,%rsi
    78ec:	48 89 c7             	mov    %rax,%rdi
    78ef:	e8 fb 0f 00 00       	call   88ef <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    78f4:	84 c0                	test   %al,%al
    78f6:	75 96                	jne    788e <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    78f8:	90                   	nop
}
    78f9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    78fd:	48 89 c7             	mov    %rax,%rdi
    7900:	e8 bb 0d 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    7905:	eb 26                	jmp    792d <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    7907:	48 89 c3             	mov    %rax,%rbx
    790a:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    790e:	48 89 c7             	mov    %rax,%rdi
    7911:	e8 b4 0e 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7916:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    791a:	48 89 c7             	mov    %rax,%rdi
    791d:	e8 9e 0d 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7922:	48 89 d8             	mov    %rbx,%rax
    7925:	48 89 c7             	mov    %rax,%rdi
    7928:	e8 83 ce ff ff       	call   47b0 <_Unwind_Resume@plt>
    792d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7931:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7935:	c9                   	leave
    7936:	c3                   	ret

0000000000007937 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    7937:	55                   	push   %rbp
    7938:	48 89 e5             	mov    %rsp,%rbp
    793b:	53                   	push   %rbx
    793c:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    7943:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    7947:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    794b:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7952:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7956:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    795a:	48 89 d6             	mov    %rdx,%rsi
    795d:	48 89 c7             	mov    %rax,%rdi
    7960:	e8 aa fc ff ff       	call   760f <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    7965:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7969:	48 89 c7             	mov    %rax,%rdi
    796c:	e8 0f 0e 00 00       	call   8780 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7971:	48 89 c3             	mov    %rax,%rbx
    7974:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7978:	48 89 c7             	mov    %rax,%rdi
    797b:	e8 2e 0e 00 00       	call   87ae <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7980:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7984:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7988:	48 89 de             	mov    %rbx,%rsi
    798b:	48 89 c7             	mov    %rax,%rdi
    798e:	e8 53 0e 00 00       	call   87e6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7993:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7997:	48 89 c7             	mov    %rax,%rdi
    799a:	e8 2b 0e 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    799f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    79a6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    79aa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    79ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79b2:	48 89 c7             	mov    %rax,%rdi
    79b5:	e8 e6 0e 00 00       	call   88a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    79ba:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    79be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    79c2:	48 89 c7             	mov    %rax,%rdi
    79c5:	e8 fc 0e 00 00       	call   88c6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    79ca:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    79ce:	eb 6c                	jmp    7a3c <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    79d0:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    79d4:	48 89 c7             	mov    %rax,%rdi
    79d7:	e8 6e 0f 00 00       	call   894a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    79dc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    79e0:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    79e7:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    79eb:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    79f2:	8b 75 ec             	mov    -0x14(%rbp),%esi
    79f5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    79f9:	48 89 c7             	mov    %rax,%rdi
    79fc:	e8 5f ca ff ff       	call   4460 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    7a01:	8b 45 9c             	mov    -0x64(%rbp),%eax
    7a04:	85 c0                	test   %eax,%eax
    7a06:	74 24                	je     7a2c <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    7a08:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7a0b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7a0f:	48 89 d6             	mov    %rdx,%rsi
    7a12:	48 89 c7             	mov    %rax,%rdi
    7a15:	e8 42 0f 00 00       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7a1a:	48 89 c2             	mov    %rax,%rdx
    7a1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a21:	48 89 c6             	mov    %rax,%rsi
    7a24:	48 89 d7             	mov    %rdx,%rdi
    7a27:	e8 5a 0f 00 00       	call   8986 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7a2c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7a30:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7a34:	48 89 c7             	mov    %rax,%rdi
    7a37:	e8 ee 0e 00 00       	call   892a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7a3c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7a40:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7a44:	48 89 d6             	mov    %rdx,%rsi
    7a47:	48 89 c7             	mov    %rax,%rdi
    7a4a:	e8 a0 0e 00 00       	call   88ef <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7a4f:	84 c0                	test   %al,%al
    7a51:	0f 85 79 ff ff ff    	jne    79d0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    7a57:	90                   	nop
}
    7a58:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7a5c:	48 89 c7             	mov    %rax,%rdi
    7a5f:	e8 5c 0c 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    7a64:	eb 37                	jmp    7a9d <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    7a66:	48 89 c3             	mov    %rax,%rbx
    7a69:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7a6d:	48 89 c7             	mov    %rax,%rdi
    7a70:	e8 55 0d 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7a75:	eb 0f                	jmp    7a86 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    7a77:	48 89 c3             	mov    %rax,%rbx
    7a7a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7a7e:	48 89 c7             	mov    %rax,%rdi
    7a81:	e8 d6 0d 00 00       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    7a86:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7a8a:	48 89 c7             	mov    %rax,%rdi
    7a8d:	e8 2e 0c 00 00       	call   86c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7a92:	48 89 d8             	mov    %rbx,%rax
    7a95:	48 89 c7             	mov    %rax,%rdi
    7a98:	e8 13 cd ff ff       	call   47b0 <_Unwind_Resume@plt>
    7a9d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7aa1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7aa5:	c9                   	leave
    7aa6:	c3                   	ret

0000000000007aa7 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    7aa7:	55                   	push   %rbp
    7aa8:	48 89 e5             	mov    %rsp,%rbp
    7aab:	41 54                	push   %r12
    7aad:	53                   	push   %rbx
    7aae:	48 83 ec 20          	sub    $0x20,%rsp
    7ab2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7ab6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7aba:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7abe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ac2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7ac6:	0f 11 00             	movups %xmm0,(%rax)
    7ac9:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7acd:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7ad1:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7ad6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7ada:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7ade:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7ae2:	48 89 ce             	mov    %rcx,%rsi
    7ae5:	48 89 c7             	mov    %rax,%rdi
    7ae8:	e8 43 c8 ff ff       	call   4330 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7aed:	85 c0                	test   %eax,%eax
    7aef:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    7af2:	84 c0                	test   %al,%al
    7af4:	74 51                	je     7b47 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    7af6:	bf 10 00 00 00       	mov    $0x10,%edi
    7afb:	e8 a0 c6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7b00:	48 89 c3             	mov    %rax,%rbx
    7b03:	48 8d 05 b6 35 01 00 	lea    0x135b6(%rip),%rax        # 1b0c0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    7b0a:	48 89 c6             	mov    %rax,%rsi
    7b0d:	48 89 df             	mov    %rbx,%rdi
    7b10:	e8 0b c6 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7b15:	48 8b 05 8c 34 02 00 	mov    0x2348c(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b1c:	48 89 c2             	mov    %rax,%rdx
    7b1f:	48 8d 05 1a 32 02 00 	lea    0x2321a(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b26:	48 89 c6             	mov    %rax,%rsi
    7b29:	48 89 df             	mov    %rbx,%rdi
    7b2c:	e8 1f cc ff ff       	call   4750 <__cxa_throw@plt>
    7b31:	49 89 c4             	mov    %rax,%r12
    7b34:	48 89 df             	mov    %rbx,%rdi
    7b37:	e8 44 c7 ff ff       	call   4280 <__cxa_free_exception@plt>
    7b3c:	4c 89 e0             	mov    %r12,%rax
    7b3f:	48 89 c7             	mov    %rax,%rdi
    7b42:	e8 69 cc ff ff       	call   47b0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    7b47:	90                   	nop
}
    7b48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7b4c:	48 83 c4 20          	add    $0x20,%rsp
    7b50:	5b                   	pop    %rbx
    7b51:	41 5c                	pop    %r12
    7b53:	5d                   	pop    %rbp
    7b54:	c3                   	ret

0000000000007b55 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    7b55:	55                   	push   %rbp
    7b56:	48 89 e5             	mov    %rsp,%rbp
    7b59:	41 54                	push   %r12
    7b5b:	53                   	push   %rbx
    7b5c:	48 83 ec 30          	sub    $0x30,%rsp
    7b60:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7b64:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7b68:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7b6c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7b70:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7b74:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7b78:	b9 00 00 00 00       	mov    $0x0,%ecx
    7b7d:	48 89 c7             	mov    %rax,%rdi
    7b80:	e8 1b ca ff ff       	call   45a0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    7b85:	85 c0                	test   %eax,%eax
    7b87:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7b8a:	84 c0                	test   %al,%al
    7b8c:	74 3b                	je     7bc9 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7b8e:	bf 10 00 00 00       	mov    $0x10,%edi
    7b93:	e8 08 c6 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7b98:	48 89 c3             	mov    %rax,%rbx
    7b9b:	48 8d 05 46 35 01 00 	lea    0x13546(%rip),%rax        # 1b0e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7ba2:	48 89 c6             	mov    %rax,%rsi
    7ba5:	48 89 df             	mov    %rbx,%rdi
    7ba8:	e8 73 c5 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7bad:	48 8b 05 f4 33 02 00 	mov    0x233f4(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7bb4:	48 89 c2             	mov    %rax,%rdx
    7bb7:	48 8d 05 82 31 02 00 	lea    0x23182(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7bbe:	48 89 c6             	mov    %rax,%rsi
    7bc1:	48 89 df             	mov    %rbx,%rdi
    7bc4:	e8 87 cb ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7bc9:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7bcc:	89 c3                	mov    %eax,%ebx
    7bce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7bd2:	48 89 c7             	mov    %rax,%rdi
    7bd5:	e8 84 0e 00 00       	call   8a5e <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7bda:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7bde:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7be2:	48 89 de             	mov    %rbx,%rsi
    7be5:	48 89 c7             	mov    %rax,%rdi
    7be8:	e8 a9 0e 00 00       	call   8a96 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7bed:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7bf1:	48 89 c7             	mov    %rax,%rdi
    7bf4:	e8 81 0e 00 00       	call   8a7a <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7bf9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bfd:	48 89 c7             	mov    %rax,%rdi
    7c00:	e8 4b 0f 00 00       	call   8b50 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    7c05:	48 89 c1             	mov    %rax,%rcx
    7c08:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7c0c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7c10:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7c14:	48 89 c7             	mov    %rax,%rdi
    7c17:	e8 84 c9 ff ff       	call   45a0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    7c1c:	85 c0                	test   %eax,%eax
    7c1e:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7c21:	84 c0                	test   %al,%al
    7c23:	0f 84 95 00 00 00    	je     7cbe <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    7c29:	bf 10 00 00 00       	mov    $0x10,%edi
    7c2e:	e8 6d c5 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7c33:	48 89 c3             	mov    %rax,%rbx
    7c36:	48 8d 05 ab 34 01 00 	lea    0x134ab(%rip),%rax        # 1b0e8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7c3d:	48 89 c6             	mov    %rax,%rsi
    7c40:	48 89 df             	mov    %rbx,%rdi
    7c43:	e8 d8 c4 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7c48:	48 8b 05 59 33 02 00 	mov    0x23359(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c4f:	48 89 c2             	mov    %rax,%rdx
    7c52:	48 8d 05 e7 30 02 00 	lea    0x230e7(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c59:	48 89 c6             	mov    %rax,%rsi
    7c5c:	48 89 df             	mov    %rbx,%rdi
    7c5f:	e8 ec ca ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7c64:	49 89 c4             	mov    %rax,%r12
    7c67:	48 89 df             	mov    %rbx,%rdi
    7c6a:	e8 11 c6 ff ff       	call   4280 <__cxa_free_exception@plt>
    7c6f:	4c 89 e0             	mov    %r12,%rax
    7c72:	48 89 c7             	mov    %rax,%rdi
    7c75:	e8 36 cb ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7c7a:	48 89 c3             	mov    %rax,%rbx
    7c7d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7c81:	48 89 c7             	mov    %rax,%rdi
    7c84:	e8 f1 0d 00 00       	call   8a7a <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7c89:	48 89 d8             	mov    %rbx,%rax
    7c8c:	48 89 c7             	mov    %rax,%rdi
    7c8f:	e8 1c cb ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7c94:	49 89 c4             	mov    %rax,%r12
    7c97:	48 89 df             	mov    %rbx,%rdi
    7c9a:	e8 e1 c5 ff ff       	call   4280 <__cxa_free_exception@plt>
    7c9f:	4c 89 e3             	mov    %r12,%rbx
    7ca2:	eb 03                	jmp    7ca7 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    7ca4:	48 89 c3             	mov    %rax,%rbx
    7ca7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cab:	48 89 c7             	mov    %rax,%rdi
    7cae:	e8 59 0e 00 00       	call   8b0c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7cb3:	48 89 d8             	mov    %rbx,%rax
    7cb6:	48 89 c7             	mov    %rax,%rdi
    7cb9:	e8 f2 ca ff ff       	call   47b0 <_Unwind_Resume@plt>
  return surfaceFormats;
    7cbe:	90                   	nop
}
    7cbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cc3:	48 83 c4 30          	add    $0x30,%rsp
    7cc7:	5b                   	pop    %rbx
    7cc8:	41 5c                	pop    %r12
    7cca:	5d                   	pop    %rbp
    7ccb:	c3                   	ret

0000000000007ccc <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7ccc:	55                   	push   %rbp
    7ccd:	48 89 e5             	mov    %rsp,%rbp
    7cd0:	41 54                	push   %r12
    7cd2:	53                   	push   %rbx
    7cd3:	48 83 ec 30          	sub    $0x30,%rsp
    7cd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7cdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7cdf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    7ce3:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7ce7:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7ceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7cef:	b9 00 00 00 00       	mov    $0x0,%ecx
    7cf4:	48 89 c7             	mov    %rax,%rdi
    7cf7:	e8 b4 c8 ff ff       	call   45b0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7cfc:	85 c0                	test   %eax,%eax
    7cfe:	0f 95 c0             	setne  %al
    7d01:	84 c0                	test   %al,%al
    7d03:	74 3b                	je     7d40 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7d05:	bf 10 00 00 00       	mov    $0x10,%edi
    7d0a:	e8 91 c4 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7d0f:	48 89 c3             	mov    %rax,%rbx
    7d12:	48 8d 05 f7 33 01 00 	lea    0x133f7(%rip),%rax        # 1b110 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7d19:	48 89 c6             	mov    %rax,%rsi
    7d1c:	48 89 df             	mov    %rbx,%rdi
    7d1f:	e8 fc c3 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7d24:	48 8b 05 7d 32 02 00 	mov    0x2327d(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7d2b:	48 89 c2             	mov    %rax,%rdx
    7d2e:	48 8d 05 0b 30 02 00 	lea    0x2300b(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7d35:	48 89 c6             	mov    %rax,%rsi
    7d38:	48 89 df             	mov    %rbx,%rdi
    7d3b:	e8 10 ca ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7d40:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7d43:	89 c3                	mov    %eax,%ebx
    7d45:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d49:	48 89 c7             	mov    %rax,%rdi
    7d4c:	e8 71 0e 00 00       	call   8bc2 <_ZNSaI16VkPresentModeKHREC1Ev>
    7d51:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7d55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d59:	48 89 de             	mov    %rbx,%rsi
    7d5c:	48 89 c7             	mov    %rax,%rdi
    7d5f:	e8 96 0e 00 00       	call   8bfa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    7d64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7d68:	48 89 c7             	mov    %rax,%rdi
    7d6b:	e8 6e 0e 00 00       	call   8bde <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7d74:	48 89 c7             	mov    %rax,%rdi
    7d77:	e8 38 0f 00 00       	call   8cb4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7d7c:	48 89 c1             	mov    %rax,%rcx
    7d7f:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7d83:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7d87:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7d8b:	48 89 c7             	mov    %rax,%rdi
    7d8e:	e8 1d c8 ff ff       	call   45b0 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7d93:	85 c0                	test   %eax,%eax
    7d95:	0f 95 c0             	setne  %al
    7d98:	84 c0                	test   %al,%al
    7d9a:	0f 84 95 00 00 00    	je     7e35 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7da0:	bf 10 00 00 00       	mov    $0x10,%edi
    7da5:	e8 f6 c3 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7daa:	48 89 c3             	mov    %rax,%rbx
    7dad:	48 8d 05 5c 33 01 00 	lea    0x1335c(%rip),%rax        # 1b110 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7db4:	48 89 c6             	mov    %rax,%rsi
    7db7:	48 89 df             	mov    %rbx,%rdi
    7dba:	e8 61 c3 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7dbf:	48 8b 05 e2 31 02 00 	mov    0x231e2(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7dc6:	48 89 c2             	mov    %rax,%rdx
    7dc9:	48 8d 05 70 2f 02 00 	lea    0x22f70(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7dd0:	48 89 c6             	mov    %rax,%rsi
    7dd3:	48 89 df             	mov    %rbx,%rdi
    7dd6:	e8 75 c9 ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7ddb:	49 89 c4             	mov    %rax,%r12
    7dde:	48 89 df             	mov    %rbx,%rdi
    7de1:	e8 9a c4 ff ff       	call   4280 <__cxa_free_exception@plt>
    7de6:	4c 89 e0             	mov    %r12,%rax
    7de9:	48 89 c7             	mov    %rax,%rdi
    7dec:	e8 bf c9 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7df1:	48 89 c3             	mov    %rax,%rbx
    7df4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7df8:	48 89 c7             	mov    %rax,%rdi
    7dfb:	e8 de 0d 00 00       	call   8bde <_ZNSaI16VkPresentModeKHRED1Ev>
    7e00:	48 89 d8             	mov    %rbx,%rax
    7e03:	48 89 c7             	mov    %rax,%rdi
    7e06:	e8 a5 c9 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7e0b:	49 89 c4             	mov    %rax,%r12
    7e0e:	48 89 df             	mov    %rbx,%rdi
    7e11:	e8 6a c4 ff ff       	call   4280 <__cxa_free_exception@plt>
    7e16:	4c 89 e3             	mov    %r12,%rbx
    7e19:	eb 03                	jmp    7e1e <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7e1b:	48 89 c3             	mov    %rax,%rbx
    7e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e22:	48 89 c7             	mov    %rax,%rdi
    7e25:	e8 46 0e 00 00       	call   8c70 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7e2a:	48 89 d8             	mov    %rbx,%rax
    7e2d:	48 89 c7             	mov    %rax,%rdi
    7e30:	e8 7b c9 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return presentModes;
    7e35:	90                   	nop
}
    7e36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e3a:	48 83 c4 30          	add    $0x30,%rsp
    7e3e:	5b                   	pop    %rbx
    7e3f:	41 5c                	pop    %r12
    7e41:	5d                   	pop    %rbp
    7e42:	c3                   	ret

0000000000007e43 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    7e43:	55                   	push   %rbp
    7e44:	48 89 e5             	mov    %rsp,%rbp
    7e47:	41 54                	push   %r12
    7e49:	53                   	push   %rbx
    7e4a:	48 83 ec 30          	sub    $0x30,%rsp
    7e4e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7e52:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7e56:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7e5a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7e5e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7e62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7e66:	b9 00 00 00 00       	mov    $0x0,%ecx
    7e6b:	48 89 c7             	mov    %rax,%rdi
    7e6e:	e8 8d c3 ff ff       	call   4200 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7e73:	85 c0                	test   %eax,%eax
    7e75:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7e78:	84 c0                	test   %al,%al
    7e7a:	74 3b                	je     7eb7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7e7c:	bf 10 00 00 00       	mov    $0x10,%edi
    7e81:	e8 1a c3 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7e86:	48 89 c3             	mov    %rax,%rbx
    7e89:	48 8d 05 b0 32 01 00 	lea    0x132b0(%rip),%rax        # 1b140 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7e90:	48 89 c6             	mov    %rax,%rsi
    7e93:	48 89 df             	mov    %rbx,%rdi
    7e96:	e8 85 c2 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7e9b:	48 8b 05 06 31 02 00 	mov    0x23106(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7ea2:	48 89 c2             	mov    %rax,%rdx
    7ea5:	48 8d 05 94 2e 02 00 	lea    0x22e94(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7eac:	48 89 c6             	mov    %rax,%rsi
    7eaf:	48 89 df             	mov    %rbx,%rdi
    7eb2:	e8 99 c8 ff ff       	call   4750 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7eb7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7eba:	89 c3                	mov    %eax,%ebx
    7ebc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7ec0:	48 89 c7             	mov    %rax,%rdi
    7ec3:	e8 5e 0e 00 00       	call   8d26 <_ZNSaIP9VkImage_TEC1Ev>
    7ec8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7ecc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ed0:	48 89 de             	mov    %rbx,%rsi
    7ed3:	48 89 c7             	mov    %rax,%rdi
    7ed6:	e8 83 0e 00 00       	call   8d5e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7edb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7edf:	48 89 c7             	mov    %rax,%rdi
    7ee2:	e8 5b 0e 00 00       	call   8d42 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ee7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7eeb:	48 89 c7             	mov    %rax,%rdi
    7eee:	e8 25 0f 00 00       	call   8e18 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7ef3:	48 89 c1             	mov    %rax,%rcx
    7ef6:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7efa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7efe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7f02:	48 89 c7             	mov    %rax,%rdi
    7f05:	e8 f6 c2 ff ff       	call   4200 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7f0a:	85 c0                	test   %eax,%eax
    7f0c:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7f0f:	84 c0                	test   %al,%al
    7f11:	0f 84 95 00 00 00    	je     7fac <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7f17:	bf 10 00 00 00       	mov    $0x10,%edi
    7f1c:	e8 7f c2 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    7f21:	48 89 c3             	mov    %rax,%rbx
    7f24:	48 8d 05 15 32 01 00 	lea    0x13215(%rip),%rax        # 1b140 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7f2b:	48 89 c6             	mov    %rax,%rsi
    7f2e:	48 89 df             	mov    %rbx,%rdi
    7f31:	e8 ea c1 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    7f36:	48 8b 05 6b 30 02 00 	mov    0x2306b(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7f3d:	48 89 c2             	mov    %rax,%rdx
    7f40:	48 8d 05 f9 2d 02 00 	lea    0x22df9(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7f47:	48 89 c6             	mov    %rax,%rsi
    7f4a:	48 89 df             	mov    %rbx,%rdi
    7f4d:	e8 fe c7 ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7f52:	49 89 c4             	mov    %rax,%r12
    7f55:	48 89 df             	mov    %rbx,%rdi
    7f58:	e8 23 c3 ff ff       	call   4280 <__cxa_free_exception@plt>
    7f5d:	4c 89 e0             	mov    %r12,%rax
    7f60:	48 89 c7             	mov    %rax,%rdi
    7f63:	e8 48 c8 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7f68:	48 89 c3             	mov    %rax,%rbx
    7f6b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7f6f:	48 89 c7             	mov    %rax,%rdi
    7f72:	e8 cb 0d 00 00       	call   8d42 <_ZNSaIP9VkImage_TED1Ev>
    7f77:	48 89 d8             	mov    %rbx,%rax
    7f7a:	48 89 c7             	mov    %rax,%rdi
    7f7d:	e8 2e c8 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7f82:	49 89 c4             	mov    %rax,%r12
    7f85:	48 89 df             	mov    %rbx,%rdi
    7f88:	e8 f3 c2 ff ff       	call   4280 <__cxa_free_exception@plt>
    7f8d:	4c 89 e3             	mov    %r12,%rbx
    7f90:	eb 03                	jmp    7f95 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7f92:	48 89 c3             	mov    %rax,%rbx
    7f95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f99:	48 89 c7             	mov    %rax,%rdi
    7f9c:	e8 33 0e 00 00       	call   8dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7fa1:	48 89 d8             	mov    %rbx,%rax
    7fa4:	48 89 c7             	mov    %rax,%rdi
    7fa7:	e8 04 c8 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return swapchainImages;
    7fac:	90                   	nop
}
    7fad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fb1:	48 83 c4 30          	add    $0x30,%rsp
    7fb5:	5b                   	pop    %rbx
    7fb6:	41 5c                	pop    %r12
    7fb8:	5d                   	pop    %rbp
    7fb9:	c3                   	ret

0000000000007fba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7fba:	55                   	push   %rbp
    7fbb:	48 89 e5             	mov    %rsp,%rbp
    7fbe:	48 83 ec 10          	sub    $0x10,%rsp
    7fc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fca:	48 89 c7             	mov    %rax,%rdi
    7fcd:	e8 00 01 00 00       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
    7fd2:	90                   	nop
    7fd3:	c9                   	leave
    7fd4:	c3                   	ret
    7fd5:	90                   	nop

0000000000007fd6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7fd6:	55                   	push   %rbp
    7fd7:	48 89 e5             	mov    %rsp,%rbp
    7fda:	48 83 ec 10          	sub    $0x10,%rsp
    7fde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe6:	48 89 c7             	mov    %rax,%rdi
    7fe9:	e8 52 02 00 00       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7fee:	90                   	nop
    7fef:	c9                   	leave
    7ff0:	c3                   	ret
    7ff1:	90                   	nop

0000000000007ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7ff2:	55                   	push   %rbp
    7ff3:	48 89 e5             	mov    %rsp,%rbp
    7ff6:	48 83 ec 10          	sub    $0x10,%rsp
    7ffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8002:	48 89 c7             	mov    %rax,%rdi
    8005:	e8 a4 03 00 00       	call   83ae <_ZNSaIPKcED1Ev>
    800a:	90                   	nop
    800b:	c9                   	leave
    800c:	c3                   	ret
    800d:	90                   	nop

000000000000800e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    800e:	55                   	push   %rbp
    800f:	48 89 e5             	mov    %rsp,%rbp
    8012:	48 83 ec 10          	sub    $0x10,%rsp
    8016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    801a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    801e:	48 89 c7             	mov    %rax,%rdi
    8021:	e8 a4 04 00 00       	call   84ca <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8026:	90                   	nop
    8027:	c9                   	leave
    8028:	c3                   	ret
    8029:	90                   	nop

000000000000802a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    802a:	55                   	push   %rbp
    802b:	48 89 e5             	mov    %rsp,%rbp
    802e:	48 83 ec 10          	sub    $0x10,%rsp
    8032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    803a:	48 89 c7             	mov    %rax,%rdi
    803d:	e8 ec 05 00 00       	call   862e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    8042:	90                   	nop
    8043:	c9                   	leave
    8044:	c3                   	ret
    8045:	90                   	nop

0000000000008046 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    8046:	55                   	push   %rbp
    8047:	48 89 e5             	mov    %rsp,%rbp
    804a:	48 83 ec 10          	sub    $0x10,%rsp
    804e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8056:	48 89 c7             	mov    %rax,%rdi
    8059:	e8 6c 07 00 00       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    805e:	90                   	nop
    805f:	c9                   	leave
    8060:	c3                   	ret
    8061:	90                   	nop

0000000000008062 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    8062:	55                   	push   %rbp
    8063:	48 89 e5             	mov    %rsp,%rbp
    8066:	48 83 ec 10          	sub    $0x10,%rsp
    806a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8072:	48 89 c7             	mov    %rax,%rdi
    8075:	e8 00 0a 00 00       	call   8a7a <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    807a:	90                   	nop
    807b:	c9                   	leave
    807c:	c3                   	ret
    807d:	90                   	nop

000000000000807e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    807e:	55                   	push   %rbp
    807f:	48 89 e5             	mov    %rsp,%rbp
    8082:	48 83 ec 10          	sub    $0x10,%rsp
    8086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    808a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    808e:	48 89 c7             	mov    %rax,%rdi
    8091:	e8 48 0b 00 00       	call   8bde <_ZNSaI16VkPresentModeKHRED1Ev>
    8096:	90                   	nop
    8097:	c9                   	leave
    8098:	c3                   	ret
    8099:	90                   	nop

000000000000809a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    809a:	55                   	push   %rbp
    809b:	48 89 e5             	mov    %rsp,%rbp
    809e:	48 83 ec 10          	sub    $0x10,%rsp
    80a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80aa:	48 89 c7             	mov    %rax,%rdi
    80ad:	e8 90 0c 00 00       	call   8d42 <_ZNSaIP9VkImage_TED1Ev>
    80b2:	90                   	nop
    80b3:	c9                   	leave
    80b4:	c3                   	ret
    80b5:	90                   	nop

00000000000080b6 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    80b6:	55                   	push   %rbp
    80b7:	48 89 e5             	mov    %rsp,%rbp
    80ba:	48 83 ec 10          	sub    $0x10,%rsp
    80be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80c6:	48 89 c7             	mov    %rax,%rdi
    80c9:	e8 bc 0d 00 00       	call   8e8a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    80ce:	90                   	nop
    80cf:	c9                   	leave
    80d0:	c3                   	ret
    80d1:	90                   	nop

00000000000080d2 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    80d2:	55                   	push   %rbp
    80d3:	48 89 e5             	mov    %rsp,%rbp
    80d6:	48 83 ec 10          	sub    $0x10,%rsp
    80da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80e2:	48 89 c7             	mov    %rax,%rdi
    80e5:	e8 ac 0d 00 00       	call   8e96 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    80ea:	90                   	nop
    80eb:	c9                   	leave
    80ec:	c3                   	ret
    80ed:	90                   	nop

00000000000080ee <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    80ee:	55                   	push   %rbp
    80ef:	48 89 e5             	mov    %rsp,%rbp
    80f2:	53                   	push   %rbx
    80f3:	48 83 ec 28          	sub    $0x28,%rsp
    80f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    80fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    80ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8103:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8107:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    810b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    810f:	48 89 d6             	mov    %rdx,%rsi
    8112:	48 89 c7             	mov    %rax,%rdi
    8115:	e8 87 0d 00 00       	call   8ea1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    811a:	48 89 c1             	mov    %rax,%rcx
    811d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8121:	48 89 c2             	mov    %rax,%rdx
    8124:	48 89 ce             	mov    %rcx,%rsi
    8127:	48 89 df             	mov    %rbx,%rdi
    812a:	e8 d3 0d 00 00       	call   8f02 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    812f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8137:	48 89 d6             	mov    %rdx,%rsi
    813a:	48 89 c7             	mov    %rax,%rdi
    813d:	e8 1e 0e 00 00       	call   8f60 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    8142:	eb 1a                	jmp    815e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8144:	48 89 c3             	mov    %rax,%rbx
    8147:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    814b:	48 89 c7             	mov    %rax,%rdi
    814e:	e8 79 00 00 00       	call   81cc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8153:	48 89 d8             	mov    %rbx,%rax
    8156:	48 89 c7             	mov    %rax,%rdi
    8159:	e8 52 c6 ff ff       	call   47b0 <_Unwind_Resume@plt>
    815e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8162:	c9                   	leave
    8163:	c3                   	ret

0000000000008164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8164:	55                   	push   %rbp
    8165:	48 89 e5             	mov    %rsp,%rbp
    8168:	48 83 ec 10          	sub    $0x10,%rsp
    816c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8174:	48 89 c7             	mov    %rax,%rdi
    8177:	e8 24 0e 00 00       	call   8fa0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    817c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    817f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8183:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8187:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    818b:	48 8b 00             	mov    (%rax),%rax
    818e:	48 89 ce             	mov    %rcx,%rsi
    8191:	48 89 c7             	mov    %rax,%rdi
    8194:	e8 15 0e 00 00       	call   8fae <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    819d:	48 89 c7             	mov    %rax,%rdi
    81a0:	e8 27 00 00 00       	call   81cc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    81a5:	90                   	nop
    81a6:	c9                   	leave
    81a7:	c3                   	ret

00000000000081a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    81a8:	55                   	push   %rbp
    81a9:	48 89 e5             	mov    %rsp,%rbp
    81ac:	48 83 ec 10          	sub    $0x10,%rsp
    81b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    81b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81b8:	48 8b 10             	mov    (%rax),%rdx
    81bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81bf:	48 89 d6             	mov    %rdx,%rsi
    81c2:	48 89 c7             	mov    %rax,%rdi
    81c5:	e8 0e 0e 00 00       	call   8fd8 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    81ca:	c9                   	leave
    81cb:	c3                   	ret

00000000000081cc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    81cc:	55                   	push   %rbp
    81cd:	48 89 e5             	mov    %rsp,%rbp
    81d0:	48 83 ec 10          	sub    $0x10,%rsp
    81d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    81d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81dc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    81e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81e4:	48 8b 00             	mov    (%rax),%rax
    81e7:	48 29 c2             	sub    %rax,%rdx
    81ea:	48 c1 fa 03          	sar    $0x3,%rdx
    81ee:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    81f5:	fc c0 0f 
    81f8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    81fc:	48 89 c2             	mov    %rax,%rdx
    81ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8203:	48 8b 08             	mov    (%rax),%rcx
    8206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    820a:	48 89 ce             	mov    %rcx,%rsi
    820d:	48 89 c7             	mov    %rax,%rdi
    8210:	e8 fb 0d 00 00       	call   9010 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8215:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8219:	48 89 c7             	mov    %rax,%rdi
    821c:	e8 99 fd ff ff       	call   7fba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8221:	90                   	nop
    8222:	c9                   	leave
    8223:	c3                   	ret

0000000000008224 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8224:	55                   	push   %rbp
    8225:	48 89 e5             	mov    %rsp,%rbp
    8228:	48 83 ec 10          	sub    $0x10,%rsp
    822c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8234:	48 89 c7             	mov    %rax,%rdi
    8237:	e8 0a 0e 00 00       	call   9046 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    823c:	90                   	nop
    823d:	c9                   	leave
    823e:	c3                   	ret
    823f:	90                   	nop

0000000000008240 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8240:	55                   	push   %rbp
    8241:	48 89 e5             	mov    %rsp,%rbp
    8244:	48 83 ec 10          	sub    $0x10,%rsp
    8248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    824c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8250:	48 89 c7             	mov    %rax,%rdi
    8253:	e8 fa 0d 00 00       	call   9052 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    8258:	90                   	nop
    8259:	c9                   	leave
    825a:	c3                   	ret
    825b:	90                   	nop

000000000000825c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    825c:	55                   	push   %rbp
    825d:	48 89 e5             	mov    %rsp,%rbp
    8260:	53                   	push   %rbx
    8261:	48 83 ec 28          	sub    $0x28,%rsp
    8265:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8269:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    826d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8271:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8275:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8279:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    827d:	48 89 d6             	mov    %rdx,%rsi
    8280:	48 89 c7             	mov    %rax,%rdi
    8283:	e8 d5 0d 00 00       	call   905d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8288:	48 89 c1             	mov    %rax,%rcx
    828b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    828f:	48 89 c2             	mov    %rax,%rdx
    8292:	48 89 ce             	mov    %rcx,%rsi
    8295:	48 89 df             	mov    %rbx,%rdi
    8298:	e8 21 0e 00 00       	call   90be <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    829d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    82a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82a5:	48 89 d6             	mov    %rdx,%rsi
    82a8:	48 89 c7             	mov    %rax,%rdi
    82ab:	e8 6c 0e 00 00       	call   911c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    82b0:	eb 1a                	jmp    82cc <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    82b2:	48 89 c3             	mov    %rax,%rbx
    82b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    82b9:	48 89 c7             	mov    %rax,%rdi
    82bc:	e8 79 00 00 00       	call   833a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    82c1:	48 89 d8             	mov    %rbx,%rax
    82c4:	48 89 c7             	mov    %rax,%rdi
    82c7:	e8 e4 c4 ff ff       	call   47b0 <_Unwind_Resume@plt>
    82cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    82d0:	c9                   	leave
    82d1:	c3                   	ret

00000000000082d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    82d2:	55                   	push   %rbp
    82d3:	48 89 e5             	mov    %rsp,%rbp
    82d6:	48 83 ec 10          	sub    $0x10,%rsp
    82da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    82de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82e2:	48 89 c7             	mov    %rax,%rdi
    82e5:	e8 72 0e 00 00       	call   915c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    82ea:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    82ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    82f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f9:	48 8b 00             	mov    (%rax),%rax
    82fc:	48 89 ce             	mov    %rcx,%rsi
    82ff:	48 89 c7             	mov    %rax,%rdi
    8302:	e8 63 0e 00 00       	call   916a <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    830b:	48 89 c7             	mov    %rax,%rdi
    830e:	e8 27 00 00 00       	call   833a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8313:	90                   	nop
    8314:	c9                   	leave
    8315:	c3                   	ret

0000000000008316 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8316:	55                   	push   %rbp
    8317:	48 89 e5             	mov    %rsp,%rbp
    831a:	48 83 ec 10          	sub    $0x10,%rsp
    831e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8326:	48 8b 10             	mov    (%rax),%rdx
    8329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    832d:	48 89 d6             	mov    %rdx,%rsi
    8330:	48 89 c7             	mov    %rax,%rdi
    8333:	e8 5c 0e 00 00       	call   9194 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8338:	c9                   	leave
    8339:	c3                   	ret

000000000000833a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    833a:	55                   	push   %rbp
    833b:	48 89 e5             	mov    %rsp,%rbp
    833e:	48 83 ec 10          	sub    $0x10,%rsp
    8342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    834a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    834e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8352:	48 8b 00             	mov    (%rax),%rax
    8355:	48 29 c2             	sub    %rax,%rdx
    8358:	48 c1 fa 02          	sar    $0x2,%rdx
    835c:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8363:	fc c0 0f 
    8366:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    836a:	48 89 c2             	mov    %rax,%rdx
    836d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8371:	48 8b 08             	mov    (%rax),%rcx
    8374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8378:	48 89 ce             	mov    %rcx,%rsi
    837b:	48 89 c7             	mov    %rax,%rdi
    837e:	e8 49 0e 00 00       	call   91cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8383:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8387:	48 89 c7             	mov    %rax,%rdi
    838a:	e8 47 fc ff ff       	call   7fd6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    838f:	90                   	nop
    8390:	c9                   	leave
    8391:	c3                   	ret

0000000000008392 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8392:	55                   	push   %rbp
    8393:	48 89 e5             	mov    %rsp,%rbp
    8396:	48 83 ec 10          	sub    $0x10,%rsp
    839a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    839e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a2:	48 89 c7             	mov    %rax,%rdi
    83a5:	e8 58 0e 00 00       	call   9202 <_ZNSt15__new_allocatorIPKcEC1Ev>
    83aa:	90                   	nop
    83ab:	c9                   	leave
    83ac:	c3                   	ret
    83ad:	90                   	nop

00000000000083ae <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    83ae:	55                   	push   %rbp
    83af:	48 89 e5             	mov    %rsp,%rbp
    83b2:	48 83 ec 10          	sub    $0x10,%rsp
    83b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83be:	48 89 c7             	mov    %rax,%rdi
    83c1:	e8 48 0e 00 00       	call   920e <_ZNSt15__new_allocatorIPKcED1Ev>
    83c6:	90                   	nop
    83c7:	c9                   	leave
    83c8:	c3                   	ret
    83c9:	90                   	nop

00000000000083ca <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    83ca:	55                   	push   %rbp
    83cb:	48 89 e5             	mov    %rsp,%rbp
    83ce:	53                   	push   %rbx
    83cf:	48 83 ec 28          	sub    $0x28,%rsp
    83d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    83d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    83db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    83df:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    83e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    83e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83eb:	48 89 d6             	mov    %rdx,%rsi
    83ee:	48 89 c7             	mov    %rax,%rdi
    83f1:	e8 23 0e 00 00       	call   9219 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    83f6:	48 89 c1             	mov    %rax,%rcx
    83f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83fd:	48 89 c2             	mov    %rax,%rdx
    8400:	48 89 ce             	mov    %rcx,%rsi
    8403:	48 89 df             	mov    %rbx,%rdi
    8406:	e8 6f 0e 00 00       	call   927a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    840b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    840f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8413:	48 89 d6             	mov    %rdx,%rsi
    8416:	48 89 c7             	mov    %rax,%rdi
    8419:	e8 ba 0e 00 00       	call   92d8 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    841e:	eb 1a                	jmp    843a <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    8420:	48 89 c3             	mov    %rax,%rbx
    8423:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8427:	48 89 c7             	mov    %rax,%rdi
    842a:	e8 31 00 00 00       	call   8460 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    842f:	48 89 d8             	mov    %rbx,%rax
    8432:	48 89 c7             	mov    %rax,%rdi
    8435:	e8 76 c3 ff ff       	call   47b0 <_Unwind_Resume@plt>
    843a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    843e:	c9                   	leave
    843f:	c3                   	ret

0000000000008440 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8440:	55                   	push   %rbp
    8441:	48 89 e5             	mov    %rsp,%rbp
    8444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8448:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    844c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8450:	48 8b 00             	mov    (%rax),%rax
    8453:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8457:	48 c1 e2 03          	shl    $0x3,%rdx
    845b:	48 01 d0             	add    %rdx,%rax
      }
    845e:	5d                   	pop    %rbp
    845f:	c3                   	ret

0000000000008460 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8460:	55                   	push   %rbp
    8461:	48 89 e5             	mov    %rsp,%rbp
    8464:	48 83 ec 10          	sub    $0x10,%rsp
    8468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    846c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8470:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8478:	48 8b 00             	mov    (%rax),%rax
    847b:	48 29 c2             	sub    %rax,%rdx
    847e:	48 89 d0             	mov    %rdx,%rax
    8481:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8485:	48 89 c2             	mov    %rax,%rdx
    8488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    848c:	48 8b 08             	mov    (%rax),%rcx
    848f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8493:	48 89 ce             	mov    %rcx,%rsi
    8496:	48 89 c7             	mov    %rax,%rdi
    8499:	e8 ae 0e 00 00       	call   934c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    849e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a2:	48 89 c7             	mov    %rax,%rdi
    84a5:	e8 48 fb ff ff       	call   7ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    84aa:	90                   	nop
    84ab:	c9                   	leave
    84ac:	c3                   	ret
    84ad:	90                   	nop

00000000000084ae <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    84ae:	55                   	push   %rbp
    84af:	48 89 e5             	mov    %rsp,%rbp
    84b2:	48 83 ec 10          	sub    $0x10,%rsp
    84b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84be:	48 89 c7             	mov    %rax,%rdi
    84c1:	e8 bc 0e 00 00       	call   9382 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    84c6:	90                   	nop
    84c7:	c9                   	leave
    84c8:	c3                   	ret
    84c9:	90                   	nop

00000000000084ca <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    84ca:	55                   	push   %rbp
    84cb:	48 89 e5             	mov    %rsp,%rbp
    84ce:	48 83 ec 10          	sub    $0x10,%rsp
    84d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    84d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84da:	48 89 c7             	mov    %rax,%rdi
    84dd:	e8 ac 0e 00 00       	call   938e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    84e2:	90                   	nop
    84e3:	c9                   	leave
    84e4:	c3                   	ret
    84e5:	90                   	nop

00000000000084e6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    84e6:	55                   	push   %rbp
    84e7:	48 89 e5             	mov    %rsp,%rbp
    84ea:	53                   	push   %rbx
    84eb:	48 83 ec 28          	sub    $0x28,%rsp
    84ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    84fb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    84ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8503:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8507:	48 89 d6             	mov    %rdx,%rsi
    850a:	48 89 c7             	mov    %rax,%rdi
    850d:	e8 87 0e 00 00       	call   9399 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8512:	48 89 c1             	mov    %rax,%rcx
    8515:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8519:	48 89 c2             	mov    %rax,%rdx
    851c:	48 89 ce             	mov    %rcx,%rsi
    851f:	48 89 df             	mov    %rbx,%rdi
    8522:	e8 d3 0e 00 00       	call   93fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8527:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    852b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    852f:	48 89 d6             	mov    %rdx,%rsi
    8532:	48 89 c7             	mov    %rax,%rdi
    8535:	e8 1e 0f 00 00       	call   9458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    853a:	eb 1a                	jmp    8556 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    853c:	48 89 c3             	mov    %rax,%rbx
    853f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8543:	48 89 c7             	mov    %rax,%rdi
    8546:	e8 79 00 00 00       	call   85c4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    854b:	48 89 d8             	mov    %rbx,%rax
    854e:	48 89 c7             	mov    %rax,%rdi
    8551:	e8 5a c2 ff ff       	call   47b0 <_Unwind_Resume@plt>
    8556:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    855a:	c9                   	leave
    855b:	c3                   	ret

000000000000855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    855c:	55                   	push   %rbp
    855d:	48 89 e5             	mov    %rsp,%rbp
    8560:	48 83 ec 10          	sub    $0x10,%rsp
    8564:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8568:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    856c:	48 89 c7             	mov    %rax,%rdi
    856f:	e8 24 0f 00 00       	call   9498 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8574:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    857b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    857f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8583:	48 8b 00             	mov    (%rax),%rax
    8586:	48 89 ce             	mov    %rcx,%rsi
    8589:	48 89 c7             	mov    %rax,%rdi
    858c:	e8 15 0f 00 00       	call   94a6 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    8591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8595:	48 89 c7             	mov    %rax,%rdi
    8598:	e8 27 00 00 00       	call   85c4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    859d:	90                   	nop
    859e:	c9                   	leave
    859f:	c3                   	ret

00000000000085a0 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    85a0:	55                   	push   %rbp
    85a1:	48 89 e5             	mov    %rsp,%rbp
    85a4:	48 83 ec 10          	sub    $0x10,%rsp
    85a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    85ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b0:	48 8b 10             	mov    (%rax),%rdx
    85b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b7:	48 89 d6             	mov    %rdx,%rsi
    85ba:	48 89 c7             	mov    %rax,%rdi
    85bd:	e8 0e 0f 00 00       	call   94d0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    85c2:	c9                   	leave
    85c3:	c3                   	ret

00000000000085c4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    85c4:	55                   	push   %rbp
    85c5:	48 89 e5             	mov    %rsp,%rbp
    85c8:	48 83 ec 10          	sub    $0x10,%rsp
    85cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    85d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    85d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85dc:	48 8b 00             	mov    (%rax),%rax
    85df:	48 29 c2             	sub    %rax,%rdx
    85e2:	48 89 d0             	mov    %rdx,%rax
    85e5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    85e9:	48 89 c2             	mov    %rax,%rdx
    85ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f0:	48 8b 08             	mov    (%rax),%rcx
    85f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f7:	48 89 ce             	mov    %rcx,%rsi
    85fa:	48 89 c7             	mov    %rax,%rdi
    85fd:	e8 06 0f 00 00       	call   9508 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8606:	48 89 c7             	mov    %rax,%rdi
    8609:	e8 00 fa ff ff       	call   800e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    860e:	90                   	nop
    860f:	c9                   	leave
    8610:	c3                   	ret
    8611:	90                   	nop

0000000000008612 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8612:	55                   	push   %rbp
    8613:	48 89 e5             	mov    %rsp,%rbp
    8616:	48 83 ec 10          	sub    $0x10,%rsp
    861a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    861e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8622:	48 89 c7             	mov    %rax,%rdi
    8625:	e8 14 0f 00 00       	call   953e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    862a:	90                   	nop
    862b:	c9                   	leave
    862c:	c3                   	ret
    862d:	90                   	nop

000000000000862e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    862e:	55                   	push   %rbp
    862f:	48 89 e5             	mov    %rsp,%rbp
    8632:	48 83 ec 10          	sub    $0x10,%rsp
    8636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    863a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    863e:	48 89 c7             	mov    %rax,%rdi
    8641:	e8 04 0f 00 00       	call   954a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    8646:	90                   	nop
    8647:	c9                   	leave
    8648:	c3                   	ret
    8649:	90                   	nop

000000000000864a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    864a:	55                   	push   %rbp
    864b:	48 89 e5             	mov    %rsp,%rbp
    864e:	53                   	push   %rbx
    864f:	48 83 ec 28          	sub    $0x28,%rsp
    8653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8657:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    865b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    865f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8663:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8667:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    866b:	48 89 d6             	mov    %rdx,%rsi
    866e:	48 89 c7             	mov    %rax,%rdi
    8671:	e8 df 0e 00 00       	call   9555 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8676:	48 89 c1             	mov    %rax,%rcx
    8679:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    867d:	48 89 c2             	mov    %rax,%rdx
    8680:	48 89 ce             	mov    %rcx,%rsi
    8683:	48 89 df             	mov    %rbx,%rdi
    8686:	e8 2b 0f 00 00       	call   95b6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    868b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    868f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8693:	48 89 d6             	mov    %rdx,%rsi
    8696:	48 89 c7             	mov    %rax,%rdi
    8699:	e8 76 0f 00 00       	call   9614 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    869e:	eb 1a                	jmp    86ba <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    86a0:	48 89 c3             	mov    %rax,%rbx
    86a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86a7:	48 89 c7             	mov    %rax,%rdi
    86aa:	e8 79 00 00 00       	call   8728 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    86af:	48 89 d8             	mov    %rbx,%rax
    86b2:	48 89 c7             	mov    %rax,%rdi
    86b5:	e8 f6 c0 ff ff       	call   47b0 <_Unwind_Resume@plt>
    86ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86be:	c9                   	leave
    86bf:	c3                   	ret

00000000000086c0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    86c0:	55                   	push   %rbp
    86c1:	48 89 e5             	mov    %rsp,%rbp
    86c4:	48 83 ec 10          	sub    $0x10,%rsp
    86c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    86cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d0:	48 89 c7             	mov    %rax,%rdi
    86d3:	e8 7c 0f 00 00       	call   9654 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    86d8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    86db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86df:	48 8b 48 08          	mov    0x8(%rax),%rcx
    86e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e7:	48 8b 00             	mov    (%rax),%rax
    86ea:	48 89 ce             	mov    %rcx,%rsi
    86ed:	48 89 c7             	mov    %rax,%rdi
    86f0:	e8 6d 0f 00 00       	call   9662 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    86f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f9:	48 89 c7             	mov    %rax,%rdi
    86fc:	e8 27 00 00 00       	call   8728 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8701:	90                   	nop
    8702:	c9                   	leave
    8703:	c3                   	ret

0000000000008704 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8704:	55                   	push   %rbp
    8705:	48 89 e5             	mov    %rsp,%rbp
    8708:	48 83 ec 10          	sub    $0x10,%rsp
    870c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8714:	48 8b 10             	mov    (%rax),%rdx
    8717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    871b:	48 89 d6             	mov    %rdx,%rsi
    871e:	48 89 c7             	mov    %rax,%rdi
    8721:	e8 66 0f 00 00       	call   968c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8726:	c9                   	leave
    8727:	c3                   	ret

0000000000008728 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8728:	55                   	push   %rbp
    8729:	48 89 e5             	mov    %rsp,%rbp
    872c:	48 83 ec 10          	sub    $0x10,%rsp
    8730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8738:	48 8b 50 10          	mov    0x10(%rax),%rdx
    873c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8740:	48 8b 00             	mov    (%rax),%rax
    8743:	48 29 c2             	sub    %rax,%rdx
    8746:	48 c1 fa 03          	sar    $0x3,%rdx
    874a:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8751:	aa aa aa 
    8754:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8758:	48 89 c2             	mov    %rax,%rdx
    875b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875f:	48 8b 08             	mov    (%rax),%rcx
    8762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8766:	48 89 ce             	mov    %rcx,%rsi
    8769:	48 89 c7             	mov    %rax,%rdi
    876c:	e8 53 0f 00 00       	call   96c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8775:	48 89 c7             	mov    %rax,%rdi
    8778:	e8 ad f8 ff ff       	call   802a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    877d:	90                   	nop
    877e:	c9                   	leave
    877f:	c3                   	ret

0000000000008780 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8780:	55                   	push   %rbp
    8781:	48 89 e5             	mov    %rsp,%rbp
    8784:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    8788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    878c:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8794:	48 8b 00             	mov    (%rax),%rax
    8797:	48 29 c2             	sub    %rax,%rdx
    879a:	48 c1 fa 03          	sar    $0x3,%rdx
    879e:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    87a5:	aa aa aa 
    87a8:	48 0f af c2          	imul   %rdx,%rax
    87ac:	5d                   	pop    %rbp
    87ad:	c3                   	ret

00000000000087ae <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    87ae:	55                   	push   %rbp
    87af:	48 89 e5             	mov    %rsp,%rbp
    87b2:	48 83 ec 10          	sub    $0x10,%rsp
    87b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87be:	48 89 c7             	mov    %rax,%rdi
    87c1:	e8 34 0f 00 00       	call   96fa <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    87c6:	90                   	nop
    87c7:	c9                   	leave
    87c8:	c3                   	ret
    87c9:	90                   	nop

00000000000087ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    87ca:	55                   	push   %rbp
    87cb:	48 89 e5             	mov    %rsp,%rbp
    87ce:	48 83 ec 10          	sub    $0x10,%rsp
    87d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    87d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87da:	48 89 c7             	mov    %rax,%rdi
    87dd:	e8 24 0f 00 00       	call   9706 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    87e2:	90                   	nop
    87e3:	c9                   	leave
    87e4:	c3                   	ret
    87e5:	90                   	nop

00000000000087e6 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    87e6:	55                   	push   %rbp
    87e7:	48 89 e5             	mov    %rsp,%rbp
    87ea:	53                   	push   %rbx
    87eb:	48 83 ec 28          	sub    $0x28,%rsp
    87ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    87f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    87fb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    87ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8803:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8807:	48 89 d6             	mov    %rdx,%rsi
    880a:	48 89 c7             	mov    %rax,%rdi
    880d:	e8 ff 0e 00 00       	call   9711 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    8812:	48 89 c1             	mov    %rax,%rcx
    8815:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8819:	48 89 c2             	mov    %rax,%rdx
    881c:	48 89 ce             	mov    %rcx,%rsi
    881f:	48 89 df             	mov    %rbx,%rdi
    8822:	e8 4b 0f 00 00       	call   9772 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    8827:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    882b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    882f:	48 89 d6             	mov    %rdx,%rsi
    8832:	48 89 c7             	mov    %rax,%rdi
    8835:	e8 96 0f 00 00       	call   97d0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    883a:	eb 1a                	jmp    8856 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    883c:	48 89 c3             	mov    %rax,%rbx
    883f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8843:	48 89 c7             	mov    %rax,%rdi
    8846:	e8 bb 01 00 00       	call   8a06 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    884b:	48 89 d8             	mov    %rbx,%rax
    884e:	48 89 c7             	mov    %rax,%rdi
    8851:	e8 5a bf ff ff       	call   47b0 <_Unwind_Resume@plt>
    8856:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    885a:	c9                   	leave
    885b:	c3                   	ret

000000000000885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    885c:	55                   	push   %rbp
    885d:	48 89 e5             	mov    %rsp,%rbp
    8860:	48 83 ec 10          	sub    $0x10,%rsp
    8864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886c:	48 89 c7             	mov    %rax,%rdi
    886f:	e8 9c 0f 00 00       	call   9810 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    8874:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    887b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    887f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8883:	48 8b 00             	mov    (%rax),%rax
    8886:	48 89 ce             	mov    %rcx,%rsi
    8889:	48 89 c7             	mov    %rax,%rdi
    888c:	e8 8d 0f 00 00       	call   981e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    8891:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8895:	48 89 c7             	mov    %rax,%rdi
    8898:	e8 69 01 00 00       	call   8a06 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    889d:	90                   	nop
    889e:	c9                   	leave
    889f:	c3                   	ret

00000000000088a0 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    88a0:	55                   	push   %rbp
    88a1:	48 89 e5             	mov    %rsp,%rbp
    88a4:	48 83 ec 20          	sub    $0x20,%rsp
    88a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    88ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    88b0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    88b4:	48 89 d6             	mov    %rdx,%rsi
    88b7:	48 89 c7             	mov    %rax,%rdi
    88ba:	e8 89 0f 00 00       	call   9848 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    88bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88c3:	c9                   	leave
    88c4:	c3                   	ret
    88c5:	90                   	nop

00000000000088c6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    88c6:	55                   	push   %rbp
    88c7:	48 89 e5             	mov    %rsp,%rbp
    88ca:	48 83 ec 20          	sub    $0x20,%rsp
    88ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    88d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88d6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    88da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    88de:	48 89 d6             	mov    %rdx,%rsi
    88e1:	48 89 c7             	mov    %rax,%rdi
    88e4:	e8 5f 0f 00 00       	call   9848 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    88e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ed:	c9                   	leave
    88ee:	c3                   	ret

00000000000088ef <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    88ef:	55                   	push   %rbp
    88f0:	48 89 e5             	mov    %rsp,%rbp
    88f3:	53                   	push   %rbx
    88f4:	48 83 ec 18          	sub    $0x18,%rsp
    88f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8900:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8904:	48 89 c7             	mov    %rax,%rdi
    8907:	e8 5a 0f 00 00       	call   9866 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    890c:	48 8b 18             	mov    (%rax),%rbx
    890f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8913:	48 89 c7             	mov    %rax,%rdi
    8916:	e8 4b 0f 00 00       	call   9866 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    891b:	48 8b 00             	mov    (%rax),%rax
    891e:	48 39 c3             	cmp    %rax,%rbx
    8921:	0f 95 c0             	setne  %al
    8924:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8928:	c9                   	leave
    8929:	c3                   	ret

000000000000892a <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    892a:	55                   	push   %rbp
    892b:	48 89 e5             	mov    %rsp,%rbp
    892e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8936:	48 8b 00             	mov    (%rax),%rax
    8939:	48 8d 50 18          	lea    0x18(%rax),%rdx
    893d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8941:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8944:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8948:	5d                   	pop    %rbp
    8949:	c3                   	ret

000000000000894a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    894a:	55                   	push   %rbp
    894b:	48 89 e5             	mov    %rsp,%rbp
    894e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8956:	48 8b 00             	mov    (%rax),%rax
    8959:	5d                   	pop    %rbp
    895a:	c3                   	ret
    895b:	90                   	nop

000000000000895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    895c:	55                   	push   %rbp
    895d:	48 89 e5             	mov    %rsp,%rbp
    8960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8964:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    896c:	48 8b 08             	mov    (%rax),%rcx
    896f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8973:	48 89 d0             	mov    %rdx,%rax
    8976:	48 c1 e0 03          	shl    $0x3,%rax
    897a:	48 29 d0             	sub    %rdx,%rax
    897d:	48 c1 e0 02          	shl    $0x2,%rax
    8981:	48 01 c8             	add    %rcx,%rax
      }
    8984:	5d                   	pop    %rbp
    8985:	c3                   	ret

0000000000008986 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    8986:	55                   	push   %rbp
    8987:	48 89 e5             	mov    %rsp,%rbp
    898a:	53                   	push   %rbx
    898b:	48 83 ec 18          	sub    $0x18,%rsp
    898f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8993:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    8997:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    899b:	48 89 c7             	mov    %rax,%rdi
    899e:	e8 d1 0e 00 00       	call   9874 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    89a3:	84 c0                	test   %al,%al
    89a5:	74 36                	je     89dd <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    89a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89ab:	48 89 c7             	mov    %rax,%rdi
    89ae:	e8 17 0f 00 00       	call   98ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    89b3:	48 89 c3             	mov    %rax,%rbx
    89b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89ba:	48 89 c7             	mov    %rax,%rdi
    89bd:	e8 c4 0e 00 00       	call   9886 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    89c2:	48 89 c1             	mov    %rax,%rcx
    89c5:	48 8b 03             	mov    (%rbx),%rax
    89c8:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    89cc:	48 89 01             	mov    %rax,(%rcx)
    89cf:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    89d3:	48 8b 43 10          	mov    0x10(%rbx),%rax
    89d7:	48 89 41 10          	mov    %rax,0x10(%rcx)
    89db:	eb 1e                	jmp    89fb <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    89dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89e1:	48 89 c7             	mov    %rax,%rdi
    89e4:	e8 e1 0e 00 00       	call   98ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    89e9:	48 89 c2             	mov    %rax,%rdx
    89ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    89f0:	48 89 d6             	mov    %rdx,%rsi
    89f3:	48 89 c7             	mov    %rax,%rdi
    89f6:	e8 dd 0e 00 00       	call   98d8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    89fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    89ff:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a03:	c9                   	leave
    8a04:	c3                   	ret
    8a05:	90                   	nop

0000000000008a06 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8a06:	55                   	push   %rbp
    8a07:	48 89 e5             	mov    %rsp,%rbp
    8a0a:	48 83 ec 10          	sub    $0x10,%rsp
    8a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a16:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a1e:	48 8b 00             	mov    (%rax),%rax
    8a21:	48 29 c2             	sub    %rax,%rdx
    8a24:	48 c1 fa 02          	sar    $0x2,%rdx
    8a28:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8a2f:	db b6 6d 
    8a32:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8a36:	48 89 c2             	mov    %rax,%rdx
    8a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a3d:	48 8b 08             	mov    (%rax),%rcx
    8a40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a44:	48 89 ce             	mov    %rcx,%rsi
    8a47:	48 89 c7             	mov    %rax,%rdi
    8a4a:	e8 e3 0e 00 00       	call   9932 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8a4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a53:	48 89 c7             	mov    %rax,%rdi
    8a56:	e8 eb f5 ff ff       	call   8046 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    8a5b:	90                   	nop
    8a5c:	c9                   	leave
    8a5d:	c3                   	ret

0000000000008a5e <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8a5e:	55                   	push   %rbp
    8a5f:	48 89 e5             	mov    %rsp,%rbp
    8a62:	48 83 ec 10          	sub    $0x10,%rsp
    8a66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a6e:	48 89 c7             	mov    %rax,%rdi
    8a71:	e8 f2 0e 00 00       	call   9968 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    8a76:	90                   	nop
    8a77:	c9                   	leave
    8a78:	c3                   	ret
    8a79:	90                   	nop

0000000000008a7a <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8a7a:	55                   	push   %rbp
    8a7b:	48 89 e5             	mov    %rsp,%rbp
    8a7e:	48 83 ec 10          	sub    $0x10,%rsp
    8a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a8a:	48 89 c7             	mov    %rax,%rdi
    8a8d:	e8 e2 0e 00 00       	call   9974 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    8a92:	90                   	nop
    8a93:	c9                   	leave
    8a94:	c3                   	ret
    8a95:	90                   	nop

0000000000008a96 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8a96:	55                   	push   %rbp
    8a97:	48 89 e5             	mov    %rsp,%rbp
    8a9a:	53                   	push   %rbx
    8a9b:	48 83 ec 28          	sub    $0x28,%rsp
    8a9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8aa3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8aa7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8aab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8aaf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ab3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ab7:	48 89 d6             	mov    %rdx,%rsi
    8aba:	48 89 c7             	mov    %rax,%rdi
    8abd:	e8 bd 0e 00 00       	call   997f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8ac2:	48 89 c1             	mov    %rax,%rcx
    8ac5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ac9:	48 89 c2             	mov    %rax,%rdx
    8acc:	48 89 ce             	mov    %rcx,%rsi
    8acf:	48 89 df             	mov    %rbx,%rdi
    8ad2:	e8 09 0f 00 00       	call   99e0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8ad7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8adb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8adf:	48 89 d6             	mov    %rdx,%rsi
    8ae2:	48 89 c7             	mov    %rax,%rdi
    8ae5:	e8 54 0f 00 00       	call   9a3e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    8aea:	eb 1a                	jmp    8b06 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8aec:	48 89 c3             	mov    %rax,%rbx
    8aef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8af3:	48 89 c7             	mov    %rax,%rdi
    8af6:	e8 79 00 00 00       	call   8b74 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8afb:	48 89 d8             	mov    %rbx,%rax
    8afe:	48 89 c7             	mov    %rax,%rdi
    8b01:	e8 aa bc ff ff       	call   47b0 <_Unwind_Resume@plt>
    8b06:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b0a:	c9                   	leave
    8b0b:	c3                   	ret

0000000000008b0c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8b0c:	55                   	push   %rbp
    8b0d:	48 89 e5             	mov    %rsp,%rbp
    8b10:	48 83 ec 10          	sub    $0x10,%rsp
    8b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8b18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b1c:	48 89 c7             	mov    %rax,%rdi
    8b1f:	e8 5a 0f 00 00       	call   9a7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8b24:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b2b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8b2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b33:	48 8b 00             	mov    (%rax),%rax
    8b36:	48 89 ce             	mov    %rcx,%rsi
    8b39:	48 89 c7             	mov    %rax,%rdi
    8b3c:	e8 4b 0f 00 00       	call   9a8c <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    8b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b45:	48 89 c7             	mov    %rax,%rdi
    8b48:	e8 27 00 00 00       	call   8b74 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8b4d:	90                   	nop
    8b4e:	c9                   	leave
    8b4f:	c3                   	ret

0000000000008b50 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8b50:	55                   	push   %rbp
    8b51:	48 89 e5             	mov    %rsp,%rbp
    8b54:	48 83 ec 10          	sub    $0x10,%rsp
    8b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b60:	48 8b 10             	mov    (%rax),%rdx
    8b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b67:	48 89 d6             	mov    %rdx,%rsi
    8b6a:	48 89 c7             	mov    %rax,%rdi
    8b6d:	e8 44 0f 00 00       	call   9ab6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8b72:	c9                   	leave
    8b73:	c3                   	ret

0000000000008b74 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8b74:	55                   	push   %rbp
    8b75:	48 89 e5             	mov    %rsp,%rbp
    8b78:	48 83 ec 10          	sub    $0x10,%rsp
    8b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b84:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8b88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b8c:	48 8b 00             	mov    (%rax),%rax
    8b8f:	48 29 c2             	sub    %rax,%rdx
    8b92:	48 89 d0             	mov    %rdx,%rax
    8b95:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8b99:	48 89 c2             	mov    %rax,%rdx
    8b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba0:	48 8b 08             	mov    (%rax),%rcx
    8ba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ba7:	48 89 ce             	mov    %rcx,%rsi
    8baa:	48 89 c7             	mov    %rax,%rdi
    8bad:	e8 3c 0f 00 00       	call   9aee <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb6:	48 89 c7             	mov    %rax,%rdi
    8bb9:	e8 a4 f4 ff ff       	call   8062 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8bbe:	90                   	nop
    8bbf:	c9                   	leave
    8bc0:	c3                   	ret
    8bc1:	90                   	nop

0000000000008bc2 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8bc2:	55                   	push   %rbp
    8bc3:	48 89 e5             	mov    %rsp,%rbp
    8bc6:	48 83 ec 10          	sub    $0x10,%rsp
    8bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bd2:	48 89 c7             	mov    %rax,%rdi
    8bd5:	e8 4a 0f 00 00       	call   9b24 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    8bda:	90                   	nop
    8bdb:	c9                   	leave
    8bdc:	c3                   	ret
    8bdd:	90                   	nop

0000000000008bde <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8bde:	55                   	push   %rbp
    8bdf:	48 89 e5             	mov    %rsp,%rbp
    8be2:	48 83 ec 10          	sub    $0x10,%rsp
    8be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bee:	48 89 c7             	mov    %rax,%rdi
    8bf1:	e8 3a 0f 00 00       	call   9b30 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    8bf6:	90                   	nop
    8bf7:	c9                   	leave
    8bf8:	c3                   	ret
    8bf9:	90                   	nop

0000000000008bfa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8bfa:	55                   	push   %rbp
    8bfb:	48 89 e5             	mov    %rsp,%rbp
    8bfe:	53                   	push   %rbx
    8bff:	48 83 ec 28          	sub    $0x28,%rsp
    8c03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8c0f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8c13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8c1b:	48 89 d6             	mov    %rdx,%rsi
    8c1e:	48 89 c7             	mov    %rax,%rdi
    8c21:	e8 15 0f 00 00       	call   9b3b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8c26:	48 89 c1             	mov    %rax,%rcx
    8c29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8c2d:	48 89 c2             	mov    %rax,%rdx
    8c30:	48 89 ce             	mov    %rcx,%rsi
    8c33:	48 89 df             	mov    %rbx,%rdi
    8c36:	e8 61 0f 00 00       	call   9b9c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8c3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c43:	48 89 d6             	mov    %rdx,%rsi
    8c46:	48 89 c7             	mov    %rax,%rdi
    8c49:	e8 ac 0f 00 00       	call   9bfa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8c4e:	eb 1a                	jmp    8c6a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8c50:	48 89 c3             	mov    %rax,%rbx
    8c53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c57:	48 89 c7             	mov    %rax,%rdi
    8c5a:	e8 79 00 00 00       	call   8cd8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8c5f:	48 89 d8             	mov    %rbx,%rax
    8c62:	48 89 c7             	mov    %rax,%rdi
    8c65:	e8 46 bb ff ff       	call   47b0 <_Unwind_Resume@plt>
    8c6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c6e:	c9                   	leave
    8c6f:	c3                   	ret

0000000000008c70 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8c70:	55                   	push   %rbp
    8c71:	48 89 e5             	mov    %rsp,%rbp
    8c74:	48 83 ec 10          	sub    $0x10,%rsp
    8c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c80:	48 89 c7             	mov    %rax,%rdi
    8c83:	e8 b2 0f 00 00       	call   9c3a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    8c88:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c8f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c97:	48 8b 00             	mov    (%rax),%rax
    8c9a:	48 89 ce             	mov    %rcx,%rsi
    8c9d:	48 89 c7             	mov    %rax,%rdi
    8ca0:	e8 a3 0f 00 00       	call   9c48 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    8ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca9:	48 89 c7             	mov    %rax,%rdi
    8cac:	e8 27 00 00 00       	call   8cd8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8cb1:	90                   	nop
    8cb2:	c9                   	leave
    8cb3:	c3                   	ret

0000000000008cb4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8cb4:	55                   	push   %rbp
    8cb5:	48 89 e5             	mov    %rsp,%rbp
    8cb8:	48 83 ec 10          	sub    $0x10,%rsp
    8cbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc4:	48 8b 10             	mov    (%rax),%rdx
    8cc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ccb:	48 89 d6             	mov    %rdx,%rsi
    8cce:	48 89 c7             	mov    %rax,%rdi
    8cd1:	e8 9c 0f 00 00       	call   9c72 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8cd6:	c9                   	leave
    8cd7:	c3                   	ret

0000000000008cd8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8cd8:	55                   	push   %rbp
    8cd9:	48 89 e5             	mov    %rsp,%rbp
    8cdc:	48 83 ec 10          	sub    $0x10,%rsp
    8ce0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf0:	48 8b 00             	mov    (%rax),%rax
    8cf3:	48 29 c2             	sub    %rax,%rdx
    8cf6:	48 89 d0             	mov    %rdx,%rax
    8cf9:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8cfd:	48 89 c2             	mov    %rax,%rdx
    8d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d04:	48 8b 08             	mov    (%rax),%rcx
    8d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d0b:	48 89 ce             	mov    %rcx,%rsi
    8d0e:	48 89 c7             	mov    %rax,%rdi
    8d11:	e8 94 0f 00 00       	call   9caa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d1a:	48 89 c7             	mov    %rax,%rdi
    8d1d:	e8 5c f3 ff ff       	call   807e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    8d22:	90                   	nop
    8d23:	c9                   	leave
    8d24:	c3                   	ret
    8d25:	90                   	nop

0000000000008d26 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8d26:	55                   	push   %rbp
    8d27:	48 89 e5             	mov    %rsp,%rbp
    8d2a:	48 83 ec 10          	sub    $0x10,%rsp
    8d2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d36:	48 89 c7             	mov    %rax,%rdi
    8d39:	e8 a2 0f 00 00       	call   9ce0 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    8d3e:	90                   	nop
    8d3f:	c9                   	leave
    8d40:	c3                   	ret
    8d41:	90                   	nop

0000000000008d42 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8d42:	55                   	push   %rbp
    8d43:	48 89 e5             	mov    %rsp,%rbp
    8d46:	48 83 ec 10          	sub    $0x10,%rsp
    8d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d52:	48 89 c7             	mov    %rax,%rdi
    8d55:	e8 92 0f 00 00       	call   9cec <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    8d5a:	90                   	nop
    8d5b:	c9                   	leave
    8d5c:	c3                   	ret
    8d5d:	90                   	nop

0000000000008d5e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8d5e:	55                   	push   %rbp
    8d5f:	48 89 e5             	mov    %rsp,%rbp
    8d62:	53                   	push   %rbx
    8d63:	48 83 ec 28          	sub    $0x28,%rsp
    8d67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8d6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8d6f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8d73:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8d77:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8d7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8d7f:	48 89 d6             	mov    %rdx,%rsi
    8d82:	48 89 c7             	mov    %rax,%rdi
    8d85:	e8 6d 0f 00 00       	call   9cf7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    8d8a:	48 89 c1             	mov    %rax,%rcx
    8d8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d91:	48 89 c2             	mov    %rax,%rdx
    8d94:	48 89 ce             	mov    %rcx,%rsi
    8d97:	48 89 df             	mov    %rbx,%rdi
    8d9a:	e8 b9 0f 00 00       	call   9d58 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8d9f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8da3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8da7:	48 89 d6             	mov    %rdx,%rsi
    8daa:	48 89 c7             	mov    %rax,%rdi
    8dad:	e8 04 10 00 00       	call   9db6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8db2:	eb 1a                	jmp    8dce <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8db4:	48 89 c3             	mov    %rax,%rbx
    8db7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8dbb:	48 89 c7             	mov    %rax,%rdi
    8dbe:	e8 79 00 00 00       	call   8e3c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8dc3:	48 89 d8             	mov    %rbx,%rax
    8dc6:	48 89 c7             	mov    %rax,%rdi
    8dc9:	e8 e2 b9 ff ff       	call   47b0 <_Unwind_Resume@plt>
    8dce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8dd2:	c9                   	leave
    8dd3:	c3                   	ret

0000000000008dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8dd4:	55                   	push   %rbp
    8dd5:	48 89 e5             	mov    %rsp,%rbp
    8dd8:	48 83 ec 10          	sub    $0x10,%rsp
    8ddc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8de0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8de4:	48 89 c7             	mov    %rax,%rdi
    8de7:	e8 0a 10 00 00       	call   9df6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8dec:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8def:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8df3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8df7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8dfb:	48 8b 00             	mov    (%rax),%rax
    8dfe:	48 89 ce             	mov    %rcx,%rsi
    8e01:	48 89 c7             	mov    %rax,%rdi
    8e04:	e8 fb 0f 00 00       	call   9e04 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8e09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e0d:	48 89 c7             	mov    %rax,%rdi
    8e10:	e8 27 00 00 00       	call   8e3c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8e15:	90                   	nop
    8e16:	c9                   	leave
    8e17:	c3                   	ret

0000000000008e18 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8e18:	55                   	push   %rbp
    8e19:	48 89 e5             	mov    %rsp,%rbp
    8e1c:	48 83 ec 10          	sub    $0x10,%rsp
    8e20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8e24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e28:	48 8b 10             	mov    (%rax),%rdx
    8e2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e2f:	48 89 d6             	mov    %rdx,%rsi
    8e32:	48 89 c7             	mov    %rax,%rdi
    8e35:	e8 f4 0f 00 00       	call   9e2e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8e3a:	c9                   	leave
    8e3b:	c3                   	ret

0000000000008e3c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8e3c:	55                   	push   %rbp
    8e3d:	48 89 e5             	mov    %rsp,%rbp
    8e40:	48 83 ec 10          	sub    $0x10,%rsp
    8e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e4c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e54:	48 8b 00             	mov    (%rax),%rax
    8e57:	48 29 c2             	sub    %rax,%rdx
    8e5a:	48 89 d0             	mov    %rdx,%rax
    8e5d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8e61:	48 89 c2             	mov    %rax,%rdx
    8e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e68:	48 8b 08             	mov    (%rax),%rcx
    8e6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e6f:	48 89 ce             	mov    %rcx,%rsi
    8e72:	48 89 c7             	mov    %rax,%rdi
    8e75:	e8 ec 0f 00 00       	call   9e66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8e7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e7e:	48 89 c7             	mov    %rax,%rdi
    8e81:	e8 14 f2 ff ff       	call   809a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8e86:	90                   	nop
    8e87:	c9                   	leave
    8e88:	c3                   	ret
    8e89:	90                   	nop

0000000000008e8a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e8a:	55                   	push   %rbp
    8e8b:	48 89 e5             	mov    %rsp,%rbp
    8e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e92:	90                   	nop
    8e93:	5d                   	pop    %rbp
    8e94:	c3                   	ret
    8e95:	90                   	nop

0000000000008e96 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8e96:	55                   	push   %rbp
    8e97:	48 89 e5             	mov    %rsp,%rbp
    8e9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e9e:	90                   	nop
    8e9f:	5d                   	pop    %rbp
    8ea0:	c3                   	ret

0000000000008ea1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8ea1:	55                   	push   %rbp
    8ea2:	48 89 e5             	mov    %rsp,%rbp
    8ea5:	53                   	push   %rbx
    8ea6:	48 83 ec 28          	sub    $0x28,%rsp
    8eaa:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8eae:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8eb2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8eb6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8eba:	48 89 d6             	mov    %rdx,%rsi
    8ebd:	48 89 c7             	mov    %rax,%rdi
    8ec0:	e8 25 01 00 00       	call   8fea <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8ec5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ec9:	48 89 c7             	mov    %rax,%rdi
    8ecc:	e8 ca 0f 00 00       	call   9e9b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8ed1:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8ed5:	0f 92 c3             	setb   %bl
    8ed8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8edc:	48 89 c7             	mov    %rax,%rdi
    8edf:	e8 ee f1 ff ff       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
    8ee4:	84 db                	test   %bl,%bl
    8ee6:	74 0f                	je     8ef7 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8ee8:	48 8d 05 71 22 01 00 	lea    0x12271(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8eef:	48 89 c7             	mov    %rax,%rdi
    8ef2:	e8 b9 b2 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8ef7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8efb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8eff:	c9                   	leave
    8f00:	c3                   	ret
    8f01:	90                   	nop

0000000000008f02 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f02:	55                   	push   %rbp
    8f03:	48 89 e5             	mov    %rsp,%rbp
    8f06:	53                   	push   %rbx
    8f07:	48 83 ec 28          	sub    $0x28,%rsp
    8f0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f1f:	48 89 d6             	mov    %rdx,%rsi
    8f22:	48 89 c7             	mov    %rax,%rdi
    8f25:	e8 b4 0f 00 00       	call   9ede <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8f2a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f32:	48 89 d6             	mov    %rdx,%rsi
    8f35:	48 89 c7             	mov    %rax,%rdi
    8f38:	e8 d3 0f 00 00       	call   9f10 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8f3d:	eb 1a                	jmp    8f59 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8f3f:	48 89 c3             	mov    %rax,%rbx
    8f42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f46:	48 89 c7             	mov    %rax,%rdi
    8f49:	e8 6c f0 ff ff       	call   7fba <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8f4e:	48 89 d8             	mov    %rbx,%rax
    8f51:	48 89 c7             	mov    %rax,%rdi
    8f54:	e8 57 b8 ff ff       	call   47b0 <_Unwind_Resume@plt>
    8f59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f5d:	c9                   	leave
    8f5e:	c3                   	ret
    8f5f:	90                   	nop

0000000000008f60 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8f60:	55                   	push   %rbp
    8f61:	48 89 e5             	mov    %rsp,%rbp
    8f64:	48 83 ec 10          	sub    $0x10,%rsp
    8f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f74:	48 89 c7             	mov    %rax,%rdi
    8f77:	e8 24 00 00 00       	call   8fa0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8f7c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f83:	48 8b 00             	mov    (%rax),%rax
    8f86:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f8a:	48 89 ce             	mov    %rcx,%rsi
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 dc 0f 00 00       	call   9f71 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8f95:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8f99:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8f9d:	90                   	nop
    8f9e:	c9                   	leave
    8f9f:	c3                   	ret

0000000000008fa0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8fa0:	55                   	push   %rbp
    8fa1:	48 89 e5             	mov    %rsp,%rbp
    8fa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8fa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fac:	5d                   	pop    %rbp
    8fad:	c3                   	ret

0000000000008fae <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8fae:	55                   	push   %rbp
    8faf:	48 89 e5             	mov    %rsp,%rbp
    8fb2:	48 83 ec 20          	sub    $0x20,%rsp
    8fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8fc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fca:	48 89 d6             	mov    %rdx,%rsi
    8fcd:	48 89 c7             	mov    %rax,%rdi
    8fd0:	e8 c5 0f 00 00       	call   9f9a <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8fd5:	90                   	nop
    8fd6:	c9                   	leave
    8fd7:	c3                   	ret

0000000000008fd8 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8fd8:	55                   	push   %rbp
    8fd9:	48 89 e5             	mov    %rsp,%rbp
    8fdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fe0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8fe4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8fe8:	5d                   	pop    %rbp
    8fe9:	c3                   	ret

0000000000008fea <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8fea:	55                   	push   %rbp
    8feb:	48 89 e5             	mov    %rsp,%rbp
    8fee:	48 83 ec 10          	sub    $0x10,%rsp
    8ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ff6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8ffa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9002:	48 89 d6             	mov    %rdx,%rsi
    9005:	48 89 c7             	mov    %rax,%rdi
    9008:	e8 b3 0f 00 00       	call   9fc0 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    900d:	90                   	nop
    900e:	c9                   	leave
    900f:	c3                   	ret

0000000000009010 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9010:	55                   	push   %rbp
    9011:	48 89 e5             	mov    %rsp,%rbp
    9014:	48 83 ec 20          	sub    $0x20,%rsp
    9018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    901c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9020:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9024:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9029:	74 17                	je     9042 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    902b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    902f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9033:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9037:	48 89 ce             	mov    %rcx,%rsi
    903a:	48 89 c7             	mov    %rax,%rdi
    903d:	e8 8d 0f 00 00       	call   9fcf <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    9042:	90                   	nop
    9043:	c9                   	leave
    9044:	c3                   	ret
    9045:	90                   	nop

0000000000009046 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9046:	55                   	push   %rbp
    9047:	48 89 e5             	mov    %rsp,%rbp
    904a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    904e:	90                   	nop
    904f:	5d                   	pop    %rbp
    9050:	c3                   	ret
    9051:	90                   	nop

0000000000009052 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9052:	55                   	push   %rbp
    9053:	48 89 e5             	mov    %rsp,%rbp
    9056:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    905a:	90                   	nop
    905b:	5d                   	pop    %rbp
    905c:	c3                   	ret

000000000000905d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    905d:	55                   	push   %rbp
    905e:	48 89 e5             	mov    %rsp,%rbp
    9061:	53                   	push   %rbx
    9062:	48 83 ec 28          	sub    $0x28,%rsp
    9066:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    906a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    906e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9072:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9076:	48 89 d6             	mov    %rdx,%rsi
    9079:	48 89 c7             	mov    %rax,%rdi
    907c:	e8 25 01 00 00       	call   91a6 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9081:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9085:	48 89 c7             	mov    %rax,%rdi
    9088:	e8 70 0f 00 00       	call   9ffd <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    908d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9091:	0f 92 c3             	setb   %bl
    9094:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9098:	48 89 c7             	mov    %rax,%rdi
    909b:	e8 a0 f1 ff ff       	call   8240 <_ZNSaI21VkExtensionPropertiesED1Ev>
    90a0:	84 db                	test   %bl,%bl
    90a2:	74 0f                	je     90b3 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    90a4:	48 8d 05 b5 20 01 00 	lea    0x120b5(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    90ab:	48 89 c7             	mov    %rax,%rdi
    90ae:	e8 fd b0 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    90b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    90b7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90bb:	c9                   	leave
    90bc:	c3                   	ret
    90bd:	90                   	nop

00000000000090be <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    90be:	55                   	push   %rbp
    90bf:	48 89 e5             	mov    %rsp,%rbp
    90c2:	53                   	push   %rbx
    90c3:	48 83 ec 28          	sub    $0x28,%rsp
    90c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    90d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    90db:	48 89 d6             	mov    %rdx,%rsi
    90de:	48 89 c7             	mov    %rax,%rdi
    90e1:	e8 5a 0f 00 00       	call   a040 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    90e6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    90ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90ee:	48 89 d6             	mov    %rdx,%rsi
    90f1:	48 89 c7             	mov    %rax,%rdi
    90f4:	e8 79 0f 00 00       	call   a072 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    90f9:	eb 1a                	jmp    9115 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    90fb:	48 89 c3             	mov    %rax,%rbx
    90fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9102:	48 89 c7             	mov    %rax,%rdi
    9105:	e8 cc ee ff ff       	call   7fd6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    910a:	48 89 d8             	mov    %rbx,%rax
    910d:	48 89 c7             	mov    %rax,%rdi
    9110:	e8 9b b6 ff ff       	call   47b0 <_Unwind_Resume@plt>
    9115:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9119:	c9                   	leave
    911a:	c3                   	ret
    911b:	90                   	nop

000000000000911c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    911c:	55                   	push   %rbp
    911d:	48 89 e5             	mov    %rsp,%rbp
    9120:	48 83 ec 10          	sub    $0x10,%rsp
    9124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9128:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    912c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9130:	48 89 c7             	mov    %rax,%rdi
    9133:	e8 24 00 00 00       	call   915c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9138:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    913b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    913f:	48 8b 00             	mov    (%rax),%rax
    9142:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9146:	48 89 ce             	mov    %rcx,%rsi
    9149:	48 89 c7             	mov    %rax,%rdi
    914c:	e8 82 0f 00 00       	call   a0d3 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9151:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9155:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9159:	90                   	nop
    915a:	c9                   	leave
    915b:	c3                   	ret

000000000000915c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    915c:	55                   	push   %rbp
    915d:	48 89 e5             	mov    %rsp,%rbp
    9160:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9168:	5d                   	pop    %rbp
    9169:	c3                   	ret

000000000000916a <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    916a:	55                   	push   %rbp
    916b:	48 89 e5             	mov    %rsp,%rbp
    916e:	48 83 ec 20          	sub    $0x20,%rsp
    9172:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9176:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    917a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    917e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9182:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9186:	48 89 d6             	mov    %rdx,%rsi
    9189:	48 89 c7             	mov    %rax,%rdi
    918c:	e8 6b 0f 00 00       	call   a0fc <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    9191:	90                   	nop
    9192:	c9                   	leave
    9193:	c3                   	ret

0000000000009194 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9194:	55                   	push   %rbp
    9195:	48 89 e5             	mov    %rsp,%rbp
    9198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    919c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    91a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91a4:	5d                   	pop    %rbp
    91a5:	c3                   	ret

00000000000091a6 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    91a6:	55                   	push   %rbp
    91a7:	48 89 e5             	mov    %rsp,%rbp
    91aa:	48 83 ec 10          	sub    $0x10,%rsp
    91ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    91b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91be:	48 89 d6             	mov    %rdx,%rsi
    91c1:	48 89 c7             	mov    %rax,%rdi
    91c4:	e8 59 0f 00 00       	call   a122 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    91c9:	90                   	nop
    91ca:	c9                   	leave
    91cb:	c3                   	ret

00000000000091cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    91cc:	55                   	push   %rbp
    91cd:	48 89 e5             	mov    %rsp,%rbp
    91d0:	48 83 ec 20          	sub    $0x20,%rsp
    91d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    91e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    91e5:	74 17                	je     91fe <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    91e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    91ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91f3:	48 89 ce             	mov    %rcx,%rsi
    91f6:	48 89 c7             	mov    %rax,%rdi
    91f9:	e8 33 0f 00 00       	call   a131 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    91fe:	90                   	nop
    91ff:	c9                   	leave
    9200:	c3                   	ret
    9201:	90                   	nop

0000000000009202 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9202:	55                   	push   %rbp
    9203:	48 89 e5             	mov    %rsp,%rbp
    9206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    920a:	90                   	nop
    920b:	5d                   	pop    %rbp
    920c:	c3                   	ret
    920d:	90                   	nop

000000000000920e <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    920e:	55                   	push   %rbp
    920f:	48 89 e5             	mov    %rsp,%rbp
    9212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9216:	90                   	nop
    9217:	5d                   	pop    %rbp
    9218:	c3                   	ret

0000000000009219 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9219:	55                   	push   %rbp
    921a:	48 89 e5             	mov    %rsp,%rbp
    921d:	53                   	push   %rbx
    921e:	48 83 ec 28          	sub    $0x28,%rsp
    9222:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9226:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    922a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    922e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9232:	48 89 d6             	mov    %rdx,%rsi
    9235:	48 89 c7             	mov    %rax,%rdi
    9238:	e8 e9 00 00 00       	call   9326 <_ZNSaIPKcEC1ERKS1_>
    923d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9241:	48 89 c7             	mov    %rax,%rdi
    9244:	e8 16 0f 00 00       	call   a15f <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9249:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    924d:	0f 92 c3             	setb   %bl
    9250:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9254:	48 89 c7             	mov    %rax,%rdi
    9257:	e8 52 f1 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    925c:	84 db                	test   %bl,%bl
    925e:	74 0f                	je     926f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9260:	48 8d 05 f9 1e 01 00 	lea    0x11ef9(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9267:	48 89 c7             	mov    %rax,%rdi
    926a:	e8 41 af ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    926f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9273:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9277:	c9                   	leave
    9278:	c3                   	ret
    9279:	90                   	nop

000000000000927a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    927a:	55                   	push   %rbp
    927b:	48 89 e5             	mov    %rsp,%rbp
    927e:	53                   	push   %rbx
    927f:	48 83 ec 28          	sub    $0x28,%rsp
    9283:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9287:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    928b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    928f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9293:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9297:	48 89 d6             	mov    %rdx,%rsi
    929a:	48 89 c7             	mov    %rax,%rdi
    929d:	e8 00 0f 00 00       	call   a1a2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    92a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92aa:	48 89 d6             	mov    %rdx,%rsi
    92ad:	48 89 c7             	mov    %rax,%rdi
    92b0:	e8 1f 0f 00 00       	call   a1d4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    92b5:	eb 1a                	jmp    92d1 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    92b7:	48 89 c3             	mov    %rax,%rbx
    92ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92be:	48 89 c7             	mov    %rax,%rdi
    92c1:	e8 2c ed ff ff       	call   7ff2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    92c6:	48 89 d8             	mov    %rbx,%rax
    92c9:	48 89 c7             	mov    %rax,%rdi
    92cc:	e8 df b4 ff ff       	call   47b0 <_Unwind_Resume@plt>
    92d1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92d5:	c9                   	leave
    92d6:	c3                   	ret
    92d7:	90                   	nop

00000000000092d8 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    92d8:	55                   	push   %rbp
    92d9:	48 89 e5             	mov    %rsp,%rbp
    92dc:	48 83 ec 10          	sub    $0x10,%rsp
    92e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    92e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ec:	48 89 c7             	mov    %rax,%rdi
    92ef:	e8 24 00 00 00       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    92f4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    92f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92fb:	48 8b 00             	mov    (%rax),%rax
    92fe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9302:	48 89 ce             	mov    %rcx,%rsi
    9305:	48 89 c7             	mov    %rax,%rdi
    9308:	e8 1d 0f 00 00       	call   a22a <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    930d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9311:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9315:	90                   	nop
    9316:	c9                   	leave
    9317:	c3                   	ret

0000000000009318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9318:	55                   	push   %rbp
    9319:	48 89 e5             	mov    %rsp,%rbp
    931c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9324:	5d                   	pop    %rbp
    9325:	c3                   	ret

0000000000009326 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9326:	55                   	push   %rbp
    9327:	48 89 e5             	mov    %rsp,%rbp
    932a:	48 83 ec 10          	sub    $0x10,%rsp
    932e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9336:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    933a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    933e:	48 89 d6             	mov    %rdx,%rsi
    9341:	48 89 c7             	mov    %rax,%rdi
    9344:	e8 0b 0f 00 00       	call   a254 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    9349:	90                   	nop
    934a:	c9                   	leave
    934b:	c3                   	ret

000000000000934c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    934c:	55                   	push   %rbp
    934d:	48 89 e5             	mov    %rsp,%rbp
    9350:	48 83 ec 20          	sub    $0x20,%rsp
    9354:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9358:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    935c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9360:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9365:	74 17                	je     937e <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9367:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    936b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    936f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9373:	48 89 ce             	mov    %rcx,%rsi
    9376:	48 89 c7             	mov    %rax,%rdi
    9379:	e8 e5 0e 00 00       	call   a263 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    937e:	90                   	nop
    937f:	c9                   	leave
    9380:	c3                   	ret
    9381:	90                   	nop

0000000000009382 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9382:	55                   	push   %rbp
    9383:	48 89 e5             	mov    %rsp,%rbp
    9386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    938a:	90                   	nop
    938b:	5d                   	pop    %rbp
    938c:	c3                   	ret
    938d:	90                   	nop

000000000000938e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    938e:	55                   	push   %rbp
    938f:	48 89 e5             	mov    %rsp,%rbp
    9392:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9396:	90                   	nop
    9397:	5d                   	pop    %rbp
    9398:	c3                   	ret

0000000000009399 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9399:	55                   	push   %rbp
    939a:	48 89 e5             	mov    %rsp,%rbp
    939d:	53                   	push   %rbx
    939e:	48 83 ec 28          	sub    $0x28,%rsp
    93a2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    93a6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    93aa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    93ae:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93b2:	48 89 d6             	mov    %rdx,%rsi
    93b5:	48 89 c7             	mov    %rax,%rdi
    93b8:	e8 25 01 00 00       	call   94e2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    93bd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93c1:	48 89 c7             	mov    %rax,%rdi
    93c4:	e8 c8 0e 00 00       	call   a291 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    93c9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    93cd:	0f 92 c3             	setb   %bl
    93d0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    93d4:	48 89 c7             	mov    %rax,%rdi
    93d7:	e8 ee f0 ff ff       	call   84ca <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    93dc:	84 db                	test   %bl,%bl
    93de:	74 0f                	je     93ef <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    93e0:	48 8d 05 79 1d 01 00 	lea    0x11d79(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    93e7:	48 89 c7             	mov    %rax,%rdi
    93ea:	e8 c1 ad ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    93ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    93f3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    93f7:	c9                   	leave
    93f8:	c3                   	ret
    93f9:	90                   	nop

00000000000093fa <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    93fa:	55                   	push   %rbp
    93fb:	48 89 e5             	mov    %rsp,%rbp
    93fe:	53                   	push   %rbx
    93ff:	48 83 ec 28          	sub    $0x28,%rsp
    9403:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9407:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    940b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    940f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9413:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9417:	48 89 d6             	mov    %rdx,%rsi
    941a:	48 89 c7             	mov    %rax,%rdi
    941d:	e8 b2 0e 00 00       	call   a2d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9422:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    942a:	48 89 d6             	mov    %rdx,%rsi
    942d:	48 89 c7             	mov    %rax,%rdi
    9430:	e8 d1 0e 00 00       	call   a306 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    9435:	eb 1a                	jmp    9451 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    9437:	48 89 c3             	mov    %rax,%rbx
    943a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    943e:	48 89 c7             	mov    %rax,%rdi
    9441:	e8 c8 eb ff ff       	call   800e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    9446:	48 89 d8             	mov    %rbx,%rax
    9449:	48 89 c7             	mov    %rax,%rdi
    944c:	e8 5f b3 ff ff       	call   47b0 <_Unwind_Resume@plt>
    9451:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9455:	c9                   	leave
    9456:	c3                   	ret
    9457:	90                   	nop

0000000000009458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9458:	55                   	push   %rbp
    9459:	48 89 e5             	mov    %rsp,%rbp
    945c:	48 83 ec 10          	sub    $0x10,%rsp
    9460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    946c:	48 89 c7             	mov    %rax,%rdi
    946f:	e8 24 00 00 00       	call   9498 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9474:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    947b:	48 8b 00             	mov    (%rax),%rax
    947e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9482:	48 89 ce             	mov    %rcx,%rsi
    9485:	48 89 c7             	mov    %rax,%rdi
    9488:	e8 cf 0e 00 00       	call   a35c <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    948d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9491:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9495:	90                   	nop
    9496:	c9                   	leave
    9497:	c3                   	ret

0000000000009498 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9498:	55                   	push   %rbp
    9499:	48 89 e5             	mov    %rsp,%rbp
    949c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    94a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94a4:	5d                   	pop    %rbp
    94a5:	c3                   	ret

00000000000094a6 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    94a6:	55                   	push   %rbp
    94a7:	48 89 e5             	mov    %rsp,%rbp
    94aa:	48 83 ec 20          	sub    $0x20,%rsp
    94ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    94ba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94c2:	48 89 d6             	mov    %rdx,%rsi
    94c5:	48 89 c7             	mov    %rax,%rdi
    94c8:	e8 b8 0e 00 00       	call   a385 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    94cd:	90                   	nop
    94ce:	c9                   	leave
    94cf:	c3                   	ret

00000000000094d0 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    94d0:	55                   	push   %rbp
    94d1:	48 89 e5             	mov    %rsp,%rbp
    94d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    94dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    94e0:	5d                   	pop    %rbp
    94e1:	c3                   	ret

00000000000094e2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    94e2:	55                   	push   %rbp
    94e3:	48 89 e5             	mov    %rsp,%rbp
    94e6:	48 83 ec 10          	sub    $0x10,%rsp
    94ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    94f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94fa:	48 89 d6             	mov    %rdx,%rsi
    94fd:	48 89 c7             	mov    %rax,%rdi
    9500:	e8 a7 0e 00 00       	call   a3ac <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    9505:	90                   	nop
    9506:	c9                   	leave
    9507:	c3                   	ret

0000000000009508 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9508:	55                   	push   %rbp
    9509:	48 89 e5             	mov    %rsp,%rbp
    950c:	48 83 ec 20          	sub    $0x20,%rsp
    9510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9514:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9518:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    951c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9521:	74 17                	je     953a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9527:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    952b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    952f:	48 89 ce             	mov    %rcx,%rsi
    9532:	48 89 c7             	mov    %rax,%rdi
    9535:	e8 81 0e 00 00       	call   a3bb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    953a:	90                   	nop
    953b:	c9                   	leave
    953c:	c3                   	ret
    953d:	90                   	nop

000000000000953e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    953e:	55                   	push   %rbp
    953f:	48 89 e5             	mov    %rsp,%rbp
    9542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9546:	90                   	nop
    9547:	5d                   	pop    %rbp
    9548:	c3                   	ret
    9549:	90                   	nop

000000000000954a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    954a:	55                   	push   %rbp
    954b:	48 89 e5             	mov    %rsp,%rbp
    954e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9552:	90                   	nop
    9553:	5d                   	pop    %rbp
    9554:	c3                   	ret

0000000000009555 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9555:	55                   	push   %rbp
    9556:	48 89 e5             	mov    %rsp,%rbp
    9559:	53                   	push   %rbx
    955a:	48 83 ec 28          	sub    $0x28,%rsp
    955e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9562:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9566:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    956a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    956e:	48 89 d6             	mov    %rdx,%rsi
    9571:	48 89 c7             	mov    %rax,%rdi
    9574:	e8 25 01 00 00       	call   969e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9579:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    957d:	48 89 c7             	mov    %rax,%rdi
    9580:	e8 64 0e 00 00       	call   a3e9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9585:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9589:	0f 92 c3             	setb   %bl
    958c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9590:	48 89 c7             	mov    %rax,%rdi
    9593:	e8 96 f0 ff ff       	call   862e <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    9598:	84 db                	test   %bl,%bl
    959a:	74 0f                	je     95ab <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    959c:	48 8d 05 bd 1b 01 00 	lea    0x11bbd(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    95a3:	48 89 c7             	mov    %rax,%rdi
    95a6:	e8 05 ac ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    95ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    95af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95b3:	c9                   	leave
    95b4:	c3                   	ret
    95b5:	90                   	nop

00000000000095b6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    95b6:	55                   	push   %rbp
    95b7:	48 89 e5             	mov    %rsp,%rbp
    95ba:	53                   	push   %rbx
    95bb:	48 83 ec 28          	sub    $0x28,%rsp
    95bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    95c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    95cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95cf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    95d3:	48 89 d6             	mov    %rdx,%rsi
    95d6:	48 89 c7             	mov    %rax,%rdi
    95d9:	e8 4e 0e 00 00       	call   a42c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    95de:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95e6:	48 89 d6             	mov    %rdx,%rsi
    95e9:	48 89 c7             	mov    %rax,%rdi
    95ec:	e8 6d 0e 00 00       	call   a45e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    95f1:	eb 1a                	jmp    960d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    95f3:	48 89 c3             	mov    %rax,%rbx
    95f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95fa:	48 89 c7             	mov    %rax,%rdi
    95fd:	e8 28 ea ff ff       	call   802a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    9602:	48 89 d8             	mov    %rbx,%rax
    9605:	48 89 c7             	mov    %rax,%rdi
    9608:	e8 a3 b1 ff ff       	call   47b0 <_Unwind_Resume@plt>
    960d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9611:	c9                   	leave
    9612:	c3                   	ret
    9613:	90                   	nop

0000000000009614 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9614:	55                   	push   %rbp
    9615:	48 89 e5             	mov    %rsp,%rbp
    9618:	48 83 ec 10          	sub    $0x10,%rsp
    961c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9620:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9628:	48 89 c7             	mov    %rax,%rdi
    962b:	e8 24 00 00 00       	call   9654 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9630:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9633:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9637:	48 8b 00             	mov    (%rax),%rax
    963a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    963e:	48 89 ce             	mov    %rcx,%rsi
    9641:	48 89 c7             	mov    %rax,%rdi
    9644:	e8 75 0e 00 00       	call   a4be <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9649:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    964d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9651:	90                   	nop
    9652:	c9                   	leave
    9653:	c3                   	ret

0000000000009654 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9654:	55                   	push   %rbp
    9655:	48 89 e5             	mov    %rsp,%rbp
    9658:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    965c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9660:	5d                   	pop    %rbp
    9661:	c3                   	ret

0000000000009662 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9662:	55                   	push   %rbp
    9663:	48 89 e5             	mov    %rsp,%rbp
    9666:	48 83 ec 20          	sub    $0x20,%rsp
    966a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    966e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9672:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9676:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    967a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    967e:	48 89 d6             	mov    %rdx,%rsi
    9681:	48 89 c7             	mov    %rax,%rdi
    9684:	e8 5e 0e 00 00       	call   a4e7 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    9689:	90                   	nop
    968a:	c9                   	leave
    968b:	c3                   	ret

000000000000968c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    968c:	55                   	push   %rbp
    968d:	48 89 e5             	mov    %rsp,%rbp
    9690:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9694:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9698:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    969c:	5d                   	pop    %rbp
    969d:	c3                   	ret

000000000000969e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    969e:	55                   	push   %rbp
    969f:	48 89 e5             	mov    %rsp,%rbp
    96a2:	48 83 ec 10          	sub    $0x10,%rsp
    96a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    96ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    96b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96b6:	48 89 d6             	mov    %rdx,%rsi
    96b9:	48 89 c7             	mov    %rax,%rdi
    96bc:	e8 4d 0e 00 00       	call   a50e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    96c1:	90                   	nop
    96c2:	c9                   	leave
    96c3:	c3                   	ret

00000000000096c4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    96c4:	55                   	push   %rbp
    96c5:	48 89 e5             	mov    %rsp,%rbp
    96c8:	48 83 ec 20          	sub    $0x20,%rsp
    96cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    96d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    96dd:	74 17                	je     96f6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    96df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96eb:	48 89 ce             	mov    %rcx,%rsi
    96ee:	48 89 c7             	mov    %rax,%rdi
    96f1:	e8 27 0e 00 00       	call   a51d <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    96f6:	90                   	nop
    96f7:	c9                   	leave
    96f8:	c3                   	ret
    96f9:	90                   	nop

00000000000096fa <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96fa:	55                   	push   %rbp
    96fb:	48 89 e5             	mov    %rsp,%rbp
    96fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9702:	90                   	nop
    9703:	5d                   	pop    %rbp
    9704:	c3                   	ret
    9705:	90                   	nop

0000000000009706 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9706:	55                   	push   %rbp
    9707:	48 89 e5             	mov    %rsp,%rbp
    970a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    970e:	90                   	nop
    970f:	5d                   	pop    %rbp
    9710:	c3                   	ret

0000000000009711 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9711:	55                   	push   %rbp
    9712:	48 89 e5             	mov    %rsp,%rbp
    9715:	53                   	push   %rbx
    9716:	48 83 ec 28          	sub    $0x28,%rsp
    971a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    971e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9722:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9726:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    972a:	48 89 d6             	mov    %rdx,%rsi
    972d:	48 89 c7             	mov    %rax,%rdi
    9730:	e8 d7 01 00 00       	call   990c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    9735:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9739:	48 89 c7             	mov    %rax,%rdi
    973c:	e8 0a 0e 00 00       	call   a54b <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    9741:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9745:	0f 92 c3             	setb   %bl
    9748:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    974c:	48 89 c7             	mov    %rax,%rdi
    974f:	e8 76 f0 ff ff       	call   87ca <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9754:	84 db                	test   %bl,%bl
    9756:	74 0f                	je     9767 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    9758:	48 8d 05 01 1a 01 00 	lea    0x11a01(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    975f:	48 89 c7             	mov    %rax,%rdi
    9762:	e8 49 aa ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9767:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    976b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    976f:	c9                   	leave
    9770:	c3                   	ret
    9771:	90                   	nop

0000000000009772 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9772:	55                   	push   %rbp
    9773:	48 89 e5             	mov    %rsp,%rbp
    9776:	53                   	push   %rbx
    9777:	48 83 ec 28          	sub    $0x28,%rsp
    977b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    977f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9783:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9787:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    978b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    978f:	48 89 d6             	mov    %rdx,%rsi
    9792:	48 89 c7             	mov    %rax,%rdi
    9795:	e8 f4 0d 00 00       	call   a58e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    979a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    979e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97a2:	48 89 d6             	mov    %rdx,%rsi
    97a5:	48 89 c7             	mov    %rax,%rdi
    97a8:	e8 13 0e 00 00       	call   a5c0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    97ad:	eb 1a                	jmp    97c9 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    97af:	48 89 c3             	mov    %rax,%rbx
    97b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97b6:	48 89 c7             	mov    %rax,%rdi
    97b9:	e8 88 e8 ff ff       	call   8046 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    97be:	48 89 d8             	mov    %rbx,%rax
    97c1:	48 89 c7             	mov    %rax,%rdi
    97c4:	e8 e7 af ff ff       	call   47b0 <_Unwind_Resume@plt>
    97c9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97cd:	c9                   	leave
    97ce:	c3                   	ret
    97cf:	90                   	nop

00000000000097d0 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    97d0:	55                   	push   %rbp
    97d1:	48 89 e5             	mov    %rsp,%rbp
    97d4:	48 83 ec 10          	sub    $0x10,%rsp
    97d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    97e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97e4:	48 89 c7             	mov    %rax,%rdi
    97e7:	e8 24 00 00 00       	call   9810 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    97ec:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    97ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97f3:	48 8b 00             	mov    (%rax),%rax
    97f6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97fa:	48 89 ce             	mov    %rcx,%rsi
    97fd:	48 89 c7             	mov    %rax,%rdi
    9800:	e8 1c 0e 00 00       	call   a621 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9805:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9809:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    980d:	90                   	nop
    980e:	c9                   	leave
    980f:	c3                   	ret

0000000000009810 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9810:	55                   	push   %rbp
    9811:	48 89 e5             	mov    %rsp,%rbp
    9814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    981c:	5d                   	pop    %rbp
    981d:	c3                   	ret

000000000000981e <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    981e:	55                   	push   %rbp
    981f:	48 89 e5             	mov    %rsp,%rbp
    9822:	48 83 ec 20          	sub    $0x20,%rsp
    9826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    982a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    982e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9832:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    983a:	48 89 d6             	mov    %rdx,%rsi
    983d:	48 89 c7             	mov    %rax,%rdi
    9840:	e8 05 0e 00 00       	call   a64a <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    9845:	90                   	nop
    9846:	c9                   	leave
    9847:	c3                   	ret

0000000000009848 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9848:	55                   	push   %rbp
    9849:	48 89 e5             	mov    %rsp,%rbp
    984c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9854:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9858:	48 8b 10             	mov    (%rax),%rdx
    985b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    985f:	48 89 10             	mov    %rdx,(%rax)
    9862:	90                   	nop
    9863:	5d                   	pop    %rbp
    9864:	c3                   	ret
    9865:	90                   	nop

0000000000009866 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    9866:	55                   	push   %rbp
    9867:	48 89 e5             	mov    %rsp,%rbp
    986a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    986e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9872:	5d                   	pop    %rbp
    9873:	c3                   	ret

0000000000009874 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    9874:	55                   	push   %rbp
    9875:	48 89 e5             	mov    %rsp,%rbp
    9878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    987c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9880:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    9884:	5d                   	pop    %rbp
    9885:	c3                   	ret

0000000000009886 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    9886:	55                   	push   %rbp
    9887:	48 89 e5             	mov    %rsp,%rbp
    988a:	48 83 ec 10          	sub    $0x10,%rsp
    988e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    9892:	e8 b7 b2 ff ff       	call   4b4e <_ZSt23__is_constant_evaluatedv>
    9897:	84 c0                	test   %al,%al
    9899:	74 1a                	je     98b5 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    989b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    989f:	48 89 c7             	mov    %rax,%rdi
    98a2:	e8 cd ff ff ff       	call   9874 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    98a7:	83 f0 01             	xor    $0x1,%eax
    98aa:	84 c0                	test   %al,%al
    98ac:	74 07                	je     98b5 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    98ae:	b8 01 00 00 00       	mov    $0x1,%eax
    98b3:	eb 05                	jmp    98ba <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    98b5:	b8 00 00 00 00       	mov    $0x0,%eax
    98ba:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    98bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98c0:	48 89 c7             	mov    %rax,%rdi
    98c3:	e8 a8 0d 00 00       	call   a670 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    98c8:	c9                   	leave
    98c9:	c3                   	ret

00000000000098ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    98ca:	55                   	push   %rbp
    98cb:	48 89 e5             	mov    %rsp,%rbp
    98ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    98d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98d6:	5d                   	pop    %rbp
    98d7:	c3                   	ret

00000000000098d8 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    98d8:	55                   	push   %rbp
    98d9:	48 89 e5             	mov    %rsp,%rbp
    98dc:	53                   	push   %rbx
    98dd:	48 83 ec 18          	sub    $0x18,%rsp
    98e1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    98e5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    98e9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    98ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98f1:	48 89 c7             	mov    %rax,%rdi
    98f4:	e8 d1 ff ff ff       	call   98ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    98f9:	48 89 c6             	mov    %rax,%rsi
    98fc:	48 89 df             	mov    %rbx,%rdi
    98ff:	e8 7a 0d 00 00       	call   a67e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    9904:	90                   	nop
    9905:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9909:	c9                   	leave
    990a:	c3                   	ret
    990b:	90                   	nop

000000000000990c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    990c:	55                   	push   %rbp
    990d:	48 89 e5             	mov    %rsp,%rbp
    9910:	48 83 ec 10          	sub    $0x10,%rsp
    9914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9918:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    991c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9924:	48 89 d6             	mov    %rdx,%rsi
    9927:	48 89 c7             	mov    %rax,%rdi
    992a:	e8 95 0d 00 00       	call   a6c4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    992f:	90                   	nop
    9930:	c9                   	leave
    9931:	c3                   	ret

0000000000009932 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    9932:	55                   	push   %rbp
    9933:	48 89 e5             	mov    %rsp,%rbp
    9936:	48 83 ec 20          	sub    $0x20,%rsp
    993a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    993e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9942:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9946:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    994b:	74 17                	je     9964 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    994d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9951:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9955:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9959:	48 89 ce             	mov    %rcx,%rsi
    995c:	48 89 c7             	mov    %rax,%rdi
    995f:	e8 6f 0d 00 00       	call   a6d3 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    9964:	90                   	nop
    9965:	c9                   	leave
    9966:	c3                   	ret
    9967:	90                   	nop

0000000000009968 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9968:	55                   	push   %rbp
    9969:	48 89 e5             	mov    %rsp,%rbp
    996c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9970:	90                   	nop
    9971:	5d                   	pop    %rbp
    9972:	c3                   	ret
    9973:	90                   	nop

0000000000009974 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9974:	55                   	push   %rbp
    9975:	48 89 e5             	mov    %rsp,%rbp
    9978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    997c:	90                   	nop
    997d:	5d                   	pop    %rbp
    997e:	c3                   	ret

000000000000997f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    997f:	55                   	push   %rbp
    9980:	48 89 e5             	mov    %rsp,%rbp
    9983:	53                   	push   %rbx
    9984:	48 83 ec 28          	sub    $0x28,%rsp
    9988:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    998c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9990:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9994:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9998:	48 89 d6             	mov    %rdx,%rsi
    999b:	48 89 c7             	mov    %rax,%rdi
    999e:	e8 25 01 00 00       	call   9ac8 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    99a3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99a7:	48 89 c7             	mov    %rax,%rdi
    99aa:	e8 52 0d 00 00       	call   a701 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    99af:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    99b3:	0f 92 c3             	setb   %bl
    99b6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    99ba:	48 89 c7             	mov    %rax,%rdi
    99bd:	e8 b8 f0 ff ff       	call   8a7a <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    99c2:	84 db                	test   %bl,%bl
    99c4:	74 0f                	je     99d5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    99c6:	48 8d 05 93 17 01 00 	lea    0x11793(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    99cd:	48 89 c7             	mov    %rax,%rdi
    99d0:	e8 db a7 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    99d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    99d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99dd:	c9                   	leave
    99de:	c3                   	ret
    99df:	90                   	nop

00000000000099e0 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    99e0:	55                   	push   %rbp
    99e1:	48 89 e5             	mov    %rsp,%rbp
    99e4:	53                   	push   %rbx
    99e5:	48 83 ec 28          	sub    $0x28,%rsp
    99e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    99ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    99f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    99f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    99fd:	48 89 d6             	mov    %rdx,%rsi
    9a00:	48 89 c7             	mov    %rax,%rdi
    9a03:	e8 3c 0d 00 00       	call   a744 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9a08:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a10:	48 89 d6             	mov    %rdx,%rsi
    9a13:	48 89 c7             	mov    %rax,%rdi
    9a16:	e8 5b 0d 00 00       	call   a776 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    9a1b:	eb 1a                	jmp    9a37 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    9a1d:	48 89 c3             	mov    %rax,%rbx
    9a20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a24:	48 89 c7             	mov    %rax,%rdi
    9a27:	e8 36 e6 ff ff       	call   8062 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9a2c:	48 89 d8             	mov    %rbx,%rax
    9a2f:	48 89 c7             	mov    %rax,%rdi
    9a32:	e8 79 ad ff ff       	call   47b0 <_Unwind_Resume@plt>
    9a37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a3b:	c9                   	leave
    9a3c:	c3                   	ret
    9a3d:	90                   	nop

0000000000009a3e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9a3e:	55                   	push   %rbp
    9a3f:	48 89 e5             	mov    %rsp,%rbp
    9a42:	48 83 ec 10          	sub    $0x10,%rsp
    9a46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9a4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a52:	48 89 c7             	mov    %rax,%rdi
    9a55:	e8 24 00 00 00       	call   9a7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9a5a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9a5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a61:	48 8b 00             	mov    (%rax),%rax
    9a64:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a68:	48 89 ce             	mov    %rcx,%rsi
    9a6b:	48 89 c7             	mov    %rax,%rdi
    9a6e:	e8 59 0d 00 00       	call   a7cc <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9a73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a77:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9a7b:	90                   	nop
    9a7c:	c9                   	leave
    9a7d:	c3                   	ret

0000000000009a7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9a7e:	55                   	push   %rbp
    9a7f:	48 89 e5             	mov    %rsp,%rbp
    9a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a8a:	5d                   	pop    %rbp
    9a8b:	c3                   	ret

0000000000009a8c <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9a8c:	55                   	push   %rbp
    9a8d:	48 89 e5             	mov    %rsp,%rbp
    9a90:	48 83 ec 20          	sub    $0x20,%rsp
    9a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9aa0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa8:	48 89 d6             	mov    %rdx,%rsi
    9aab:	48 89 c7             	mov    %rax,%rdi
    9aae:	e8 42 0d 00 00       	call   a7f5 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    9ab3:	90                   	nop
    9ab4:	c9                   	leave
    9ab5:	c3                   	ret

0000000000009ab6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9ab6:	55                   	push   %rbp
    9ab7:	48 89 e5             	mov    %rsp,%rbp
    9aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9abe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9ac2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ac6:	5d                   	pop    %rbp
    9ac7:	c3                   	ret

0000000000009ac8 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9ac8:	55                   	push   %rbp
    9ac9:	48 89 e5             	mov    %rsp,%rbp
    9acc:	48 83 ec 10          	sub    $0x10,%rsp
    9ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ad4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9ad8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae0:	48 89 d6             	mov    %rdx,%rsi
    9ae3:	48 89 c7             	mov    %rax,%rdi
    9ae6:	e8 31 0d 00 00       	call   a81c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    9aeb:	90                   	nop
    9aec:	c9                   	leave
    9aed:	c3                   	ret

0000000000009aee <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9aee:	55                   	push   %rbp
    9aef:	48 89 e5             	mov    %rsp,%rbp
    9af2:	48 83 ec 20          	sub    $0x20,%rsp
    9af6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9afa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9afe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9b02:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9b07:	74 17                	je     9b20 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9b09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b0d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b11:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b15:	48 89 ce             	mov    %rcx,%rsi
    9b18:	48 89 c7             	mov    %rax,%rdi
    9b1b:	e8 0b 0d 00 00       	call   a82b <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    9b20:	90                   	nop
    9b21:	c9                   	leave
    9b22:	c3                   	ret
    9b23:	90                   	nop

0000000000009b24 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b24:	55                   	push   %rbp
    9b25:	48 89 e5             	mov    %rsp,%rbp
    9b28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b2c:	90                   	nop
    9b2d:	5d                   	pop    %rbp
    9b2e:	c3                   	ret
    9b2f:	90                   	nop

0000000000009b30 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9b30:	55                   	push   %rbp
    9b31:	48 89 e5             	mov    %rsp,%rbp
    9b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b38:	90                   	nop
    9b39:	5d                   	pop    %rbp
    9b3a:	c3                   	ret

0000000000009b3b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9b3b:	55                   	push   %rbp
    9b3c:	48 89 e5             	mov    %rsp,%rbp
    9b3f:	53                   	push   %rbx
    9b40:	48 83 ec 28          	sub    $0x28,%rsp
    9b44:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9b48:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9b4c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9b50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b54:	48 89 d6             	mov    %rdx,%rsi
    9b57:	48 89 c7             	mov    %rax,%rdi
    9b5a:	e8 25 01 00 00       	call   9c84 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9b5f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b63:	48 89 c7             	mov    %rax,%rdi
    9b66:	e8 ee 0c 00 00       	call   a859 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    9b6b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9b6f:	0f 92 c3             	setb   %bl
    9b72:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9b76:	48 89 c7             	mov    %rax,%rdi
    9b79:	e8 60 f0 ff ff       	call   8bde <_ZNSaI16VkPresentModeKHRED1Ev>
    9b7e:	84 db                	test   %bl,%bl
    9b80:	74 0f                	je     9b91 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9b82:	48 8d 05 d7 15 01 00 	lea    0x115d7(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9b89:	48 89 c7             	mov    %rax,%rdi
    9b8c:	e8 1f a6 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9b91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9b95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b99:	c9                   	leave
    9b9a:	c3                   	ret
    9b9b:	90                   	nop

0000000000009b9c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9b9c:	55                   	push   %rbp
    9b9d:	48 89 e5             	mov    %rsp,%rbp
    9ba0:	53                   	push   %rbx
    9ba1:	48 83 ec 28          	sub    $0x28,%rsp
    9ba5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9ba9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bad:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bb5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9bb9:	48 89 d6             	mov    %rdx,%rsi
    9bbc:	48 89 c7             	mov    %rax,%rdi
    9bbf:	e8 d8 0c 00 00       	call   a89c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9bc4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9bc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bcc:	48 89 d6             	mov    %rdx,%rsi
    9bcf:	48 89 c7             	mov    %rax,%rdi
    9bd2:	e8 f7 0c 00 00       	call   a8ce <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    9bd7:	eb 1a                	jmp    9bf3 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    9bd9:	48 89 c3             	mov    %rax,%rbx
    9bdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9be0:	48 89 c7             	mov    %rax,%rdi
    9be3:	e8 96 e4 ff ff       	call   807e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9be8:	48 89 d8             	mov    %rbx,%rax
    9beb:	48 89 c7             	mov    %rax,%rdi
    9bee:	e8 bd ab ff ff       	call   47b0 <_Unwind_Resume@plt>
    9bf3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9bf7:	c9                   	leave
    9bf8:	c3                   	ret
    9bf9:	90                   	nop

0000000000009bfa <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9bfa:	55                   	push   %rbp
    9bfb:	48 89 e5             	mov    %rsp,%rbp
    9bfe:	48 83 ec 10          	sub    $0x10,%rsp
    9c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0e:	48 89 c7             	mov    %rax,%rdi
    9c11:	e8 24 00 00 00       	call   9c3a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9c16:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9c19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c1d:	48 8b 00             	mov    (%rax),%rax
    9c20:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c24:	48 89 ce             	mov    %rcx,%rsi
    9c27:	48 89 c7             	mov    %rax,%rdi
    9c2a:	e8 f5 0c 00 00       	call   a924 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9c2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c33:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9c37:	90                   	nop
    9c38:	c9                   	leave
    9c39:	c3                   	ret

0000000000009c3a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9c3a:	55                   	push   %rbp
    9c3b:	48 89 e5             	mov    %rsp,%rbp
    9c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c46:	5d                   	pop    %rbp
    9c47:	c3                   	ret

0000000000009c48 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9c48:	55                   	push   %rbp
    9c49:	48 89 e5             	mov    %rsp,%rbp
    9c4c:	48 83 ec 20          	sub    $0x20,%rsp
    9c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9c5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c64:	48 89 d6             	mov    %rdx,%rsi
    9c67:	48 89 c7             	mov    %rax,%rdi
    9c6a:	e8 de 0c 00 00       	call   a94d <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9c6f:	90                   	nop
    9c70:	c9                   	leave
    9c71:	c3                   	ret

0000000000009c72 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9c72:	55                   	push   %rbp
    9c73:	48 89 e5             	mov    %rsp,%rbp
    9c76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9c7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c82:	5d                   	pop    %rbp
    9c83:	c3                   	ret

0000000000009c84 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9c84:	55                   	push   %rbp
    9c85:	48 89 e5             	mov    %rsp,%rbp
    9c88:	48 83 ec 10          	sub    $0x10,%rsp
    9c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9c94:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c9c:	48 89 d6             	mov    %rdx,%rsi
    9c9f:	48 89 c7             	mov    %rax,%rdi
    9ca2:	e8 cd 0c 00 00       	call   a974 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    9ca7:	90                   	nop
    9ca8:	c9                   	leave
    9ca9:	c3                   	ret

0000000000009caa <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9caa:	55                   	push   %rbp
    9cab:	48 89 e5             	mov    %rsp,%rbp
    9cae:	48 83 ec 20          	sub    $0x20,%rsp
    9cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9cbe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9cc3:	74 17                	je     9cdc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9cc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cc9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9ccd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9cd1:	48 89 ce             	mov    %rcx,%rsi
    9cd4:	48 89 c7             	mov    %rax,%rdi
    9cd7:	e8 a7 0c 00 00       	call   a983 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9cdc:	90                   	nop
    9cdd:	c9                   	leave
    9cde:	c3                   	ret
    9cdf:	90                   	nop

0000000000009ce0 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9ce0:	55                   	push   %rbp
    9ce1:	48 89 e5             	mov    %rsp,%rbp
    9ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce8:	90                   	nop
    9ce9:	5d                   	pop    %rbp
    9cea:	c3                   	ret
    9ceb:	90                   	nop

0000000000009cec <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9cec:	55                   	push   %rbp
    9ced:	48 89 e5             	mov    %rsp,%rbp
    9cf0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf4:	90                   	nop
    9cf5:	5d                   	pop    %rbp
    9cf6:	c3                   	ret

0000000000009cf7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9cf7:	55                   	push   %rbp
    9cf8:	48 89 e5             	mov    %rsp,%rbp
    9cfb:	53                   	push   %rbx
    9cfc:	48 83 ec 28          	sub    $0x28,%rsp
    9d00:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9d04:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9d08:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9d0c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d10:	48 89 d6             	mov    %rdx,%rsi
    9d13:	48 89 c7             	mov    %rax,%rdi
    9d16:	e8 25 01 00 00       	call   9e40 <_ZNSaIP9VkImage_TEC1ERKS1_>
    9d1b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d1f:	48 89 c7             	mov    %rax,%rdi
    9d22:	e8 8a 0c 00 00       	call   a9b1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    9d27:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9d2b:	0f 92 c3             	setb   %bl
    9d2e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d32:	48 89 c7             	mov    %rax,%rdi
    9d35:	e8 08 f0 ff ff       	call   8d42 <_ZNSaIP9VkImage_TED1Ev>
    9d3a:	84 db                	test   %bl,%bl
    9d3c:	74 0f                	je     9d4d <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9d3e:	48 8d 05 1b 14 01 00 	lea    0x1141b(%rip),%rax        # 1b160 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9d45:	48 89 c7             	mov    %rax,%rdi
    9d48:	e8 63 a4 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9d4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9d51:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9d55:	c9                   	leave
    9d56:	c3                   	ret
    9d57:	90                   	nop

0000000000009d58 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9d58:	55                   	push   %rbp
    9d59:	48 89 e5             	mov    %rsp,%rbp
    9d5c:	53                   	push   %rbx
    9d5d:	48 83 ec 28          	sub    $0x28,%rsp
    9d61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9d65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9d6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d71:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9d75:	48 89 d6             	mov    %rdx,%rsi
    9d78:	48 89 c7             	mov    %rax,%rdi
    9d7b:	e8 74 0c 00 00       	call   a9f4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9d80:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9d84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d88:	48 89 d6             	mov    %rdx,%rsi
    9d8b:	48 89 c7             	mov    %rax,%rdi
    9d8e:	e8 93 0c 00 00       	call   aa26 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9d93:	eb 1a                	jmp    9daf <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9d95:	48 89 c3             	mov    %rax,%rbx
    9d98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d9c:	48 89 c7             	mov    %rax,%rdi
    9d9f:	e8 f6 e2 ff ff       	call   809a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9da4:	48 89 d8             	mov    %rbx,%rax
    9da7:	48 89 c7             	mov    %rax,%rdi
    9daa:	e8 01 aa ff ff       	call   47b0 <_Unwind_Resume@plt>
    9daf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9db3:	c9                   	leave
    9db4:	c3                   	ret
    9db5:	90                   	nop

0000000000009db6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9db6:	55                   	push   %rbp
    9db7:	48 89 e5             	mov    %rsp,%rbp
    9dba:	48 83 ec 10          	sub    $0x10,%rsp
    9dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9dc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dca:	48 89 c7             	mov    %rax,%rdi
    9dcd:	e8 24 00 00 00       	call   9df6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9dd2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd9:	48 8b 00             	mov    (%rax),%rax
    9ddc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9de0:	48 89 ce             	mov    %rcx,%rsi
    9de3:	48 89 c7             	mov    %rax,%rdi
    9de6:	e8 91 0c 00 00       	call   aa7c <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9deb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9def:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9df3:	90                   	nop
    9df4:	c9                   	leave
    9df5:	c3                   	ret

0000000000009df6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9df6:	55                   	push   %rbp
    9df7:	48 89 e5             	mov    %rsp,%rbp
    9dfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9dfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e02:	5d                   	pop    %rbp
    9e03:	c3                   	ret

0000000000009e04 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9e04:	55                   	push   %rbp
    9e05:	48 89 e5             	mov    %rsp,%rbp
    9e08:	48 83 ec 20          	sub    $0x20,%rsp
    9e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9e18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e20:	48 89 d6             	mov    %rdx,%rsi
    9e23:	48 89 c7             	mov    %rax,%rdi
    9e26:	e8 7a 0c 00 00       	call   aaa5 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9e2b:	90                   	nop
    9e2c:	c9                   	leave
    9e2d:	c3                   	ret

0000000000009e2e <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9e2e:	55                   	push   %rbp
    9e2f:	48 89 e5             	mov    %rsp,%rbp
    9e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9e3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e3e:	5d                   	pop    %rbp
    9e3f:	c3                   	ret

0000000000009e40 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9e40:	55                   	push   %rbp
    9e41:	48 89 e5             	mov    %rsp,%rbp
    9e44:	48 83 ec 10          	sub    $0x10,%rsp
    9e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9e50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e58:	48 89 d6             	mov    %rdx,%rsi
    9e5b:	48 89 c7             	mov    %rax,%rdi
    9e5e:	e8 69 0c 00 00       	call   aacc <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9e63:	90                   	nop
    9e64:	c9                   	leave
    9e65:	c3                   	ret

0000000000009e66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9e66:	55                   	push   %rbp
    9e67:	48 89 e5             	mov    %rsp,%rbp
    9e6a:	48 83 ec 20          	sub    $0x20,%rsp
    9e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9e7a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9e7f:	74 17                	je     9e98 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e85:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e89:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e8d:	48 89 ce             	mov    %rcx,%rsi
    9e90:	48 89 c7             	mov    %rax,%rdi
    9e93:	e8 43 0c 00 00       	call   aadb <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9e98:	90                   	nop
    9e99:	c9                   	leave
    9e9a:	c3                   	ret

0000000000009e9b <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9e9b:	55                   	push   %rbp
    9e9c:	48 89 e5             	mov    %rsp,%rbp
    9e9f:	48 83 ec 20          	sub    $0x20,%rsp
    9ea3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9ea7:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9eae:	03 3f 00 
    9eb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9eb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9eb9:	48 89 c7             	mov    %rax,%rdi
    9ebc:	e8 48 0c 00 00       	call   ab09 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9ec1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9ec5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9ec9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9ecd:	48 89 d6             	mov    %rdx,%rsi
    9ed0:	48 89 c7             	mov    %rax,%rdi
    9ed3:	e8 2f b6 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    9ed8:	48 8b 00             	mov    (%rax),%rax
      }
    9edb:	c9                   	leave
    9edc:	c3                   	ret
    9edd:	90                   	nop

0000000000009ede <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9ede:	55                   	push   %rbp
    9edf:	48 89 e5             	mov    %rsp,%rbp
    9ee2:	48 83 ec 10          	sub    $0x10,%rsp
    9ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9eee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef6:	48 89 d6             	mov    %rdx,%rsi
    9ef9:	48 89 c7             	mov    %rax,%rdi
    9efc:	e8 e9 f0 ff ff       	call   8fea <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f05:	48 89 c7             	mov    %rax,%rdi
    9f08:	e8 17 0c 00 00       	call   ab24 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9f0d:	90                   	nop
    9f0e:	c9                   	leave
    9f0f:	c3                   	ret

0000000000009f10 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9f10:	55                   	push   %rbp
    9f11:	48 89 e5             	mov    %rsp,%rbp
    9f14:	48 83 ec 10          	sub    $0x10,%rsp
    9f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9f20:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f28:	48 89 d6             	mov    %rdx,%rsi
    9f2b:	48 89 c7             	mov    %rax,%rdi
    9f2e:	e8 1f 0c 00 00       	call   ab52 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9f33:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9f37:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f3e:	48 8b 10             	mov    (%rax),%rdx
    9f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f45:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f4d:	48 8b 08             	mov    (%rax),%rcx
    9f50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f54:	48 89 d0             	mov    %rdx,%rax
    9f57:	48 c1 e0 06          	shl    $0x6,%rax
    9f5b:	48 01 d0             	add    %rdx,%rax
    9f5e:	48 c1 e0 03          	shl    $0x3,%rax
    9f62:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f6a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9f6e:	90                   	nop
    9f6f:	c9                   	leave
    9f70:	c3                   	ret

0000000000009f71 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9f71:	55                   	push   %rbp
    9f72:	48 89 e5             	mov    %rsp,%rbp
    9f75:	48 83 ec 20          	sub    $0x20,%rsp
    9f79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f7d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f81:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9f85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8d:	48 89 d6             	mov    %rdx,%rsi
    9f90:	48 89 c7             	mov    %rax,%rdi
    9f93:	e8 ed 0b 00 00       	call   ab85 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9f98:	c9                   	leave
    9f99:	c3                   	ret

0000000000009f9a <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9f9a:	55                   	push   %rbp
    9f9b:	48 89 e5             	mov    %rsp,%rbp
    9f9e:	48 83 ec 10          	sub    $0x10,%rsp
    9fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9faa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb2:	48 89 d6             	mov    %rdx,%rsi
    9fb5:	48 89 c7             	mov    %rax,%rdi
    9fb8:	e8 f1 0b 00 00       	call   abae <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9fbd:	90                   	nop
    9fbe:	c9                   	leave
    9fbf:	c3                   	ret

0000000000009fc0 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9fc0:	55                   	push   %rbp
    9fc1:	48 89 e5             	mov    %rsp,%rbp
    9fc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fcc:	90                   	nop
    9fcd:	5d                   	pop    %rbp
    9fce:	c3                   	ret

0000000000009fcf <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9fcf:	55                   	push   %rbp
    9fd0:	48 89 e5             	mov    %rsp,%rbp
    9fd3:	48 83 ec 20          	sub    $0x20,%rsp
    9fd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fdb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9fdf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9fe3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9fe7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fef:	48 89 ce             	mov    %rcx,%rsi
    9ff2:	48 89 c7             	mov    %rax,%rdi
    9ff5:	e8 c4 0b 00 00       	call   abbe <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9ffa:	90                   	nop
    9ffb:	c9                   	leave
    9ffc:	c3                   	ret

0000000000009ffd <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9ffd:	55                   	push   %rbp
    9ffe:	48 89 e5             	mov    %rsp,%rbp
    a001:	48 83 ec 20          	sub    $0x20,%rsp
    a005:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a009:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    a010:	07 7e 00 
    a013:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a01b:	48 89 c7             	mov    %rax,%rdi
    a01e:	e8 d5 0b 00 00       	call   abf8 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    a023:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a027:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a02b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a02f:	48 89 d6             	mov    %rdx,%rsi
    a032:	48 89 c7             	mov    %rax,%rdi
    a035:	e8 cd b4 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a03a:	48 8b 00             	mov    (%rax),%rax
      }
    a03d:	c9                   	leave
    a03e:	c3                   	ret
    a03f:	90                   	nop

000000000000a040 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a040:	55                   	push   %rbp
    a041:	48 89 e5             	mov    %rsp,%rbp
    a044:	48 83 ec 10          	sub    $0x10,%rsp
    a048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a04c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a050:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a058:	48 89 d6             	mov    %rdx,%rsi
    a05b:	48 89 c7             	mov    %rax,%rdi
    a05e:	e8 43 f1 ff ff       	call   91a6 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    a063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a067:	48 89 c7             	mov    %rax,%rdi
    a06a:	e8 a3 0b 00 00       	call   ac12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a06f:	90                   	nop
    a070:	c9                   	leave
    a071:	c3                   	ret

000000000000a072 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a072:	55                   	push   %rbp
    a073:	48 89 e5             	mov    %rsp,%rbp
    a076:	48 83 ec 10          	sub    $0x10,%rsp
    a07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a082:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a08a:	48 89 d6             	mov    %rdx,%rsi
    a08d:	48 89 c7             	mov    %rax,%rdi
    a090:	e8 ab 0b 00 00       	call   ac40 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    a095:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a099:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a09c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a0:	48 8b 10             	mov    (%rax),%rdx
    a0a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0a7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a0ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0af:	48 8b 08             	mov    (%rax),%rcx
    a0b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0b6:	48 89 d0             	mov    %rdx,%rax
    a0b9:	48 c1 e0 06          	shl    $0x6,%rax
    a0bd:	48 01 d0             	add    %rdx,%rax
    a0c0:	48 c1 e0 02          	shl    $0x2,%rax
    a0c4:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a0c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0cc:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a0d0:	90                   	nop
    a0d1:	c9                   	leave
    a0d2:	c3                   	ret

000000000000a0d3 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a0d3:	55                   	push   %rbp
    a0d4:	48 89 e5             	mov    %rsp,%rbp
    a0d7:	48 83 ec 20          	sub    $0x20,%rsp
    a0db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a0e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ef:	48 89 d6             	mov    %rdx,%rsi
    a0f2:	48 89 c7             	mov    %rax,%rdi
    a0f5:	e8 79 0b 00 00       	call   ac73 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    a0fa:	c9                   	leave
    a0fb:	c3                   	ret

000000000000a0fc <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a0fc:	55                   	push   %rbp
    a0fd:	48 89 e5             	mov    %rsp,%rbp
    a100:	48 83 ec 10          	sub    $0x10,%rsp
    a104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a108:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a10c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a114:	48 89 d6             	mov    %rdx,%rsi
    a117:	48 89 c7             	mov    %rax,%rdi
    a11a:	e8 7d 0b 00 00       	call   ac9c <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    a11f:	90                   	nop
    a120:	c9                   	leave
    a121:	c3                   	ret

000000000000a122 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    a122:	55                   	push   %rbp
    a123:	48 89 e5             	mov    %rsp,%rbp
    a126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a12a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a12e:	90                   	nop
    a12f:	5d                   	pop    %rbp
    a130:	c3                   	ret

000000000000a131 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a131:	55                   	push   %rbp
    a132:	48 89 e5             	mov    %rsp,%rbp
    a135:	48 83 ec 20          	sub    $0x20,%rsp
    a139:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a13d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a141:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a145:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a149:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a14d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a151:	48 89 ce             	mov    %rcx,%rsi
    a154:	48 89 c7             	mov    %rax,%rdi
    a157:	e8 50 0b 00 00       	call   acac <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    a15c:	90                   	nop
    a15d:	c9                   	leave
    a15e:	c3                   	ret

000000000000a15f <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a15f:	55                   	push   %rbp
    a160:	48 89 e5             	mov    %rsp,%rbp
    a163:	48 83 ec 20          	sub    $0x20,%rsp
    a167:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a16b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a172:	ff ff 0f 
    a175:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a17d:	48 89 c7             	mov    %rax,%rdi
    a180:	e8 61 0b 00 00       	call   ace6 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    a185:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a189:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a18d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a191:	48 89 d6             	mov    %rdx,%rsi
    a194:	48 89 c7             	mov    %rax,%rdi
    a197:	e8 6b b3 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a19c:	48 8b 00             	mov    (%rax),%rax
      }
    a19f:	c9                   	leave
    a1a0:	c3                   	ret
    a1a1:	90                   	nop

000000000000a1a2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a1a2:	55                   	push   %rbp
    a1a3:	48 89 e5             	mov    %rsp,%rbp
    a1a6:	48 83 ec 10          	sub    $0x10,%rsp
    a1aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a1b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ba:	48 89 d6             	mov    %rdx,%rsi
    a1bd:	48 89 c7             	mov    %rax,%rdi
    a1c0:	e8 61 f1 ff ff       	call   9326 <_ZNSaIPKcEC1ERKS1_>
    a1c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1c9:	48 89 c7             	mov    %rax,%rdi
    a1cc:	e8 2f 0b 00 00       	call   ad00 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a1d1:	90                   	nop
    a1d2:	c9                   	leave
    a1d3:	c3                   	ret

000000000000a1d4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a1d4:	55                   	push   %rbp
    a1d5:	48 89 e5             	mov    %rsp,%rbp
    a1d8:	48 83 ec 10          	sub    $0x10,%rsp
    a1dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a1e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ec:	48 89 d6             	mov    %rdx,%rsi
    a1ef:	48 89 c7             	mov    %rax,%rdi
    a1f2:	e8 37 0b 00 00       	call   ad2e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    a1f7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a1fb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a1fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a202:	48 8b 10             	mov    (%rax),%rdx
    a205:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a209:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a20d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a211:	48 8b 00             	mov    (%rax),%rax
    a214:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a218:	48 c1 e2 03          	shl    $0x3,%rdx
    a21c:	48 01 c2             	add    %rax,%rdx
    a21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a223:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a227:	90                   	nop
    a228:	c9                   	leave
    a229:	c3                   	ret

000000000000a22a <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a22a:	55                   	push   %rbp
    a22b:	48 89 e5             	mov    %rsp,%rbp
    a22e:	48 83 ec 20          	sub    $0x20,%rsp
    a232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a236:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a23a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a23e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a246:	48 89 d6             	mov    %rdx,%rsi
    a249:	48 89 c7             	mov    %rax,%rdi
    a24c:	e8 10 0b 00 00       	call   ad61 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    a251:	c9                   	leave
    a252:	c3                   	ret
    a253:	90                   	nop

000000000000a254 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    a254:	55                   	push   %rbp
    a255:	48 89 e5             	mov    %rsp,%rbp
    a258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a25c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a260:	90                   	nop
    a261:	5d                   	pop    %rbp
    a262:	c3                   	ret

000000000000a263 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a263:	55                   	push   %rbp
    a264:	48 89 e5             	mov    %rsp,%rbp
    a267:	48 83 ec 20          	sub    $0x20,%rsp
    a26b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a26f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a273:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a277:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a27b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a283:	48 89 ce             	mov    %rcx,%rsi
    a286:	48 89 c7             	mov    %rax,%rdi
    a289:	e8 fc 0a 00 00       	call   ad8a <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    a28e:	90                   	nop
    a28f:	c9                   	leave
    a290:	c3                   	ret

000000000000a291 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a291:	55                   	push   %rbp
    a292:	48 89 e5             	mov    %rsp,%rbp
    a295:	48 83 ec 20          	sub    $0x20,%rsp
    a299:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a29d:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a2a4:	ff ff 0f 
    a2a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a2ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2af:	48 89 c7             	mov    %rax,%rdi
    a2b2:	e8 04 0b 00 00       	call   adbb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    a2b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a2bb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a2bf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a2c3:	48 89 d6             	mov    %rdx,%rsi
    a2c6:	48 89 c7             	mov    %rax,%rdi
    a2c9:	e8 39 b2 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a2ce:	48 8b 00             	mov    (%rax),%rax
      }
    a2d1:	c9                   	leave
    a2d2:	c3                   	ret
    a2d3:	90                   	nop

000000000000a2d4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a2d4:	55                   	push   %rbp
    a2d5:	48 89 e5             	mov    %rsp,%rbp
    a2d8:	48 83 ec 10          	sub    $0x10,%rsp
    a2dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a2e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2ec:	48 89 d6             	mov    %rdx,%rsi
    a2ef:	48 89 c7             	mov    %rax,%rdi
    a2f2:	e8 eb f1 ff ff       	call   94e2 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    a2f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fb:	48 89 c7             	mov    %rax,%rdi
    a2fe:	e8 d3 0a 00 00       	call   add6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a303:	90                   	nop
    a304:	c9                   	leave
    a305:	c3                   	ret

000000000000a306 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a306:	55                   	push   %rbp
    a307:	48 89 e5             	mov    %rsp,%rbp
    a30a:	48 83 ec 10          	sub    $0x10,%rsp
    a30e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a312:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a316:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a31a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a31e:	48 89 d6             	mov    %rdx,%rsi
    a321:	48 89 c7             	mov    %rax,%rdi
    a324:	e8 db 0a 00 00       	call   ae04 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    a329:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a32d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a334:	48 8b 10             	mov    (%rax),%rdx
    a337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a33b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a33f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a343:	48 8b 00             	mov    (%rax),%rax
    a346:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a34a:	48 c1 e2 03          	shl    $0x3,%rdx
    a34e:	48 01 c2             	add    %rax,%rdx
    a351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a355:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a359:	90                   	nop
    a35a:	c9                   	leave
    a35b:	c3                   	ret

000000000000a35c <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a35c:	55                   	push   %rbp
    a35d:	48 89 e5             	mov    %rsp,%rbp
    a360:	48 83 ec 20          	sub    $0x20,%rsp
    a364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a368:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a36c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a370:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a378:	48 89 d6             	mov    %rdx,%rsi
    a37b:	48 89 c7             	mov    %rax,%rdi
    a37e:	e8 b4 0a 00 00       	call   ae37 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    a383:	c9                   	leave
    a384:	c3                   	ret

000000000000a385 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a385:	55                   	push   %rbp
    a386:	48 89 e5             	mov    %rsp,%rbp
    a389:	48 83 ec 10          	sub    $0x10,%rsp
    a38d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a391:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a395:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a39d:	48 89 d6             	mov    %rdx,%rsi
    a3a0:	48 89 c7             	mov    %rax,%rdi
    a3a3:	e8 b8 0a 00 00       	call   ae60 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    a3a8:	90                   	nop
    a3a9:	c9                   	leave
    a3aa:	c3                   	ret
    a3ab:	90                   	nop

000000000000a3ac <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    a3ac:	55                   	push   %rbp
    a3ad:	48 89 e5             	mov    %rsp,%rbp
    a3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3b8:	90                   	nop
    a3b9:	5d                   	pop    %rbp
    a3ba:	c3                   	ret

000000000000a3bb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a3bb:	55                   	push   %rbp
    a3bc:	48 89 e5             	mov    %rsp,%rbp
    a3bf:	48 83 ec 20          	sub    $0x20,%rsp
    a3c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a3cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3db:	48 89 ce             	mov    %rcx,%rsi
    a3de:	48 89 c7             	mov    %rax,%rdi
    a3e1:	e8 8a 0a 00 00       	call   ae70 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    a3e6:	90                   	nop
    a3e7:	c9                   	leave
    a3e8:	c3                   	ret

000000000000a3e9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a3e9:	55                   	push   %rbp
    a3ea:	48 89 e5             	mov    %rsp,%rbp
    a3ed:	48 83 ec 20          	sub    $0x20,%rsp
    a3f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a3f5:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    a3fc:	55 55 05 
    a3ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a403:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a407:	48 89 c7             	mov    %rax,%rdi
    a40a:	e8 92 0a 00 00       	call   aea1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    a40f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a413:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a417:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a41b:	48 89 d6             	mov    %rdx,%rsi
    a41e:	48 89 c7             	mov    %rax,%rdi
    a421:	e8 e1 b0 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a426:	48 8b 00             	mov    (%rax),%rax
      }
    a429:	c9                   	leave
    a42a:	c3                   	ret
    a42b:	90                   	nop

000000000000a42c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a42c:	55                   	push   %rbp
    a42d:	48 89 e5             	mov    %rsp,%rbp
    a430:	48 83 ec 10          	sub    $0x10,%rsp
    a434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a438:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a43c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a444:	48 89 d6             	mov    %rdx,%rsi
    a447:	48 89 c7             	mov    %rax,%rdi
    a44a:	e8 4f f2 ff ff       	call   969e <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a44f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a453:	48 89 c7             	mov    %rax,%rdi
    a456:	e8 61 0a 00 00       	call   aebc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a45b:	90                   	nop
    a45c:	c9                   	leave
    a45d:	c3                   	ret

000000000000a45e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a45e:	55                   	push   %rbp
    a45f:	48 89 e5             	mov    %rsp,%rbp
    a462:	48 83 ec 10          	sub    $0x10,%rsp
    a466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a46a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a46e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a472:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a476:	48 89 d6             	mov    %rdx,%rsi
    a479:	48 89 c7             	mov    %rax,%rdi
    a47c:	e8 69 0a 00 00       	call   aeea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a481:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a485:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a48c:	48 8b 10             	mov    (%rax),%rdx
    a48f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a493:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49b:	48 8b 08             	mov    (%rax),%rcx
    a49e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4a2:	48 89 d0             	mov    %rdx,%rax
    a4a5:	48 01 c0             	add    %rax,%rax
    a4a8:	48 01 d0             	add    %rdx,%rax
    a4ab:	48 c1 e0 03          	shl    $0x3,%rax
    a4af:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a4bb:	90                   	nop
    a4bc:	c9                   	leave
    a4bd:	c3                   	ret

000000000000a4be <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a4be:	55                   	push   %rbp
    a4bf:	48 89 e5             	mov    %rsp,%rbp
    a4c2:	48 83 ec 20          	sub    $0x20,%rsp
    a4c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a4d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4da:	48 89 d6             	mov    %rdx,%rsi
    a4dd:	48 89 c7             	mov    %rax,%rdi
    a4e0:	e8 38 0a 00 00       	call   af1d <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a4e5:	c9                   	leave
    a4e6:	c3                   	ret

000000000000a4e7 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a4e7:	55                   	push   %rbp
    a4e8:	48 89 e5             	mov    %rsp,%rbp
    a4eb:	48 83 ec 10          	sub    $0x10,%rsp
    a4ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a4f7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4ff:	48 89 d6             	mov    %rdx,%rsi
    a502:	48 89 c7             	mov    %rax,%rdi
    a505:	e8 3c 0a 00 00       	call   af46 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a50a:	90                   	nop
    a50b:	c9                   	leave
    a50c:	c3                   	ret
    a50d:	90                   	nop

000000000000a50e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a50e:	55                   	push   %rbp
    a50f:	48 89 e5             	mov    %rsp,%rbp
    a512:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a516:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a51a:	90                   	nop
    a51b:	5d                   	pop    %rbp
    a51c:	c3                   	ret

000000000000a51d <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a51d:	55                   	push   %rbp
    a51e:	48 89 e5             	mov    %rsp,%rbp
    a521:	48 83 ec 20          	sub    $0x20,%rsp
    a525:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a529:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a52d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a531:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a535:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a539:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a53d:	48 89 ce             	mov    %rcx,%rsi
    a540:	48 89 c7             	mov    %rax,%rdi
    a543:	e8 0e 0a 00 00       	call   af56 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a548:	90                   	nop
    a549:	c9                   	leave
    a54a:	c3                   	ret

000000000000a54b <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a54b:	55                   	push   %rbp
    a54c:	48 89 e5             	mov    %rsp,%rbp
    a54f:	48 83 ec 20          	sub    $0x20,%rsp
    a553:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a557:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a55e:	49 92 04 
    a561:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a565:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a569:	48 89 c7             	mov    %rax,%rdi
    a56c:	e8 1e 0a 00 00       	call   af8f <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a571:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a575:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a579:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a57d:	48 89 d6             	mov    %rdx,%rsi
    a580:	48 89 c7             	mov    %rax,%rdi
    a583:	e8 7f af ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a588:	48 8b 00             	mov    (%rax),%rax
      }
    a58b:	c9                   	leave
    a58c:	c3                   	ret
    a58d:	90                   	nop

000000000000a58e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a58e:	55                   	push   %rbp
    a58f:	48 89 e5             	mov    %rsp,%rbp
    a592:	48 83 ec 10          	sub    $0x10,%rsp
    a596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a59a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a59e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a6:	48 89 d6             	mov    %rdx,%rsi
    a5a9:	48 89 c7             	mov    %rax,%rdi
    a5ac:	e8 5b f3 ff ff       	call   990c <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a5b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5b5:	48 89 c7             	mov    %rax,%rdi
    a5b8:	e8 ed 09 00 00       	call   afaa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a5bd:	90                   	nop
    a5be:	c9                   	leave
    a5bf:	c3                   	ret

000000000000a5c0 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a5c0:	55                   	push   %rbp
    a5c1:	48 89 e5             	mov    %rsp,%rbp
    a5c4:	48 83 ec 10          	sub    $0x10,%rsp
    a5c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a5d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d8:	48 89 d6             	mov    %rdx,%rsi
    a5db:	48 89 c7             	mov    %rax,%rdi
    a5de:	e8 f5 09 00 00       	call   afd8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a5e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5e7:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a5ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ee:	48 8b 10             	mov    (%rax),%rdx
    a5f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a5f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5fd:	48 8b 08             	mov    (%rax),%rcx
    a600:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a604:	48 89 d0             	mov    %rdx,%rax
    a607:	48 c1 e0 03          	shl    $0x3,%rax
    a60b:	48 29 d0             	sub    %rdx,%rax
    a60e:	48 c1 e0 02          	shl    $0x2,%rax
    a612:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a61a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a61e:	90                   	nop
    a61f:	c9                   	leave
    a620:	c3                   	ret

000000000000a621 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a621:	55                   	push   %rbp
    a622:	48 89 e5             	mov    %rsp,%rbp
    a625:	48 83 ec 20          	sub    $0x20,%rsp
    a629:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a62d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a631:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a635:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a639:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a63d:	48 89 d6             	mov    %rdx,%rsi
    a640:	48 89 c7             	mov    %rax,%rdi
    a643:	e8 c3 09 00 00       	call   b00b <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a648:	c9                   	leave
    a649:	c3                   	ret

000000000000a64a <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a64a:	55                   	push   %rbp
    a64b:	48 89 e5             	mov    %rsp,%rbp
    a64e:	48 83 ec 10          	sub    $0x10,%rsp
    a652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a656:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a65a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a65e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a662:	48 89 d6             	mov    %rdx,%rsi
    a665:	48 89 c7             	mov    %rax,%rdi
    a668:	e8 c7 09 00 00       	call   b034 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a66d:	90                   	nop
    a66e:	c9                   	leave
    a66f:	c3                   	ret

000000000000a670 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a670:	55                   	push   %rbp
    a671:	48 89 e5             	mov    %rsp,%rbp
    a674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a67c:	5d                   	pop    %rbp
    a67d:	c3                   	ret

000000000000a67e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a67e:	55                   	push   %rbp
    a67f:	48 89 e5             	mov    %rsp,%rbp
    a682:	53                   	push   %rbx
    a683:	48 83 ec 18          	sub    $0x18,%rsp
    a687:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a68b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a68f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a693:	48 89 c7             	mov    %rax,%rdi
    a696:	e8 2f f2 ff ff       	call   98ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a69b:	48 89 c3             	mov    %rax,%rbx
    a69e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6a2:	48 89 c7             	mov    %rax,%rdi
    a6a5:	e8 99 09 00 00       	call   b043 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a6aa:	48 89 de             	mov    %rbx,%rsi
    a6ad:	48 89 c7             	mov    %rax,%rdi
    a6b0:	e8 9c 09 00 00       	call   b051 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a6b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6b9:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a6bd:	90                   	nop
    a6be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a6c2:	c9                   	leave
    a6c3:	c3                   	ret

000000000000a6c4 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a6c4:	55                   	push   %rbp
    a6c5:	48 89 e5             	mov    %rsp,%rbp
    a6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6d0:	90                   	nop
    a6d1:	5d                   	pop    %rbp
    a6d2:	c3                   	ret

000000000000a6d3 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a6d3:	55                   	push   %rbp
    a6d4:	48 89 e5             	mov    %rsp,%rbp
    a6d7:	48 83 ec 20          	sub    $0x20,%rsp
    a6db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a6e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a6eb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a6ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6f3:	48 89 ce             	mov    %rcx,%rsi
    a6f6:	48 89 c7             	mov    %rax,%rdi
    a6f9:	e8 a4 09 00 00       	call   b0a2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a6fe:	90                   	nop
    a6ff:	c9                   	leave
    a700:	c3                   	ret

000000000000a701 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a701:	55                   	push   %rbp
    a702:	48 89 e5             	mov    %rsp,%rbp
    a705:	48 83 ec 20          	sub    $0x20,%rsp
    a709:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a70d:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a714:	ff ff 0f 
    a717:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a71b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a71f:	48 89 c7             	mov    %rax,%rdi
    a722:	e8 b5 09 00 00       	call   b0dc <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a727:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a72b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a72f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a733:	48 89 d6             	mov    %rdx,%rsi
    a736:	48 89 c7             	mov    %rax,%rdi
    a739:	e8 c9 ad ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a73e:	48 8b 00             	mov    (%rax),%rax
      }
    a741:	c9                   	leave
    a742:	c3                   	ret
    a743:	90                   	nop

000000000000a744 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a744:	55                   	push   %rbp
    a745:	48 89 e5             	mov    %rsp,%rbp
    a748:	48 83 ec 10          	sub    $0x10,%rsp
    a74c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a750:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a754:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a75c:	48 89 d6             	mov    %rdx,%rsi
    a75f:	48 89 c7             	mov    %rax,%rdi
    a762:	e8 61 f3 ff ff       	call   9ac8 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a767:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76b:	48 89 c7             	mov    %rax,%rdi
    a76e:	e8 83 09 00 00       	call   b0f6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a773:	90                   	nop
    a774:	c9                   	leave
    a775:	c3                   	ret

000000000000a776 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a776:	55                   	push   %rbp
    a777:	48 89 e5             	mov    %rsp,%rbp
    a77a:	48 83 ec 10          	sub    $0x10,%rsp
    a77e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a786:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a78a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a78e:	48 89 d6             	mov    %rdx,%rsi
    a791:	48 89 c7             	mov    %rax,%rdi
    a794:	e8 8b 09 00 00       	call   b124 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a799:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a79d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a7a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7a4:	48 8b 10             	mov    (%rax),%rdx
    a7a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a7af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7b3:	48 8b 00             	mov    (%rax),%rax
    a7b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7ba:	48 c1 e2 03          	shl    $0x3,%rdx
    a7be:	48 01 c2             	add    %rax,%rdx
    a7c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7c5:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a7c9:	90                   	nop
    a7ca:	c9                   	leave
    a7cb:	c3                   	ret

000000000000a7cc <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a7cc:	55                   	push   %rbp
    a7cd:	48 89 e5             	mov    %rsp,%rbp
    a7d0:	48 83 ec 20          	sub    $0x20,%rsp
    a7d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a7e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a7e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e8:	48 89 d6             	mov    %rdx,%rsi
    a7eb:	48 89 c7             	mov    %rax,%rdi
    a7ee:	e8 64 09 00 00       	call   b157 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a7f3:	c9                   	leave
    a7f4:	c3                   	ret

000000000000a7f5 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a7f5:	55                   	push   %rbp
    a7f6:	48 89 e5             	mov    %rsp,%rbp
    a7f9:	48 83 ec 10          	sub    $0x10,%rsp
    a7fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a801:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a805:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a80d:	48 89 d6             	mov    %rdx,%rsi
    a810:	48 89 c7             	mov    %rax,%rdi
    a813:	e8 68 09 00 00       	call   b180 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a818:	90                   	nop
    a819:	c9                   	leave
    a81a:	c3                   	ret
    a81b:	90                   	nop

000000000000a81c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a81c:	55                   	push   %rbp
    a81d:	48 89 e5             	mov    %rsp,%rbp
    a820:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a824:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a828:	90                   	nop
    a829:	5d                   	pop    %rbp
    a82a:	c3                   	ret

000000000000a82b <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a82b:	55                   	push   %rbp
    a82c:	48 89 e5             	mov    %rsp,%rbp
    a82f:	48 83 ec 20          	sub    $0x20,%rsp
    a833:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a837:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a83b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a83f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a843:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a84b:	48 89 ce             	mov    %rcx,%rsi
    a84e:	48 89 c7             	mov    %rax,%rdi
    a851:	e8 3a 09 00 00       	call   b190 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a856:	90                   	nop
    a857:	c9                   	leave
    a858:	c3                   	ret

000000000000a859 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a859:	55                   	push   %rbp
    a85a:	48 89 e5             	mov    %rsp,%rbp
    a85d:	48 83 ec 20          	sub    $0x20,%rsp
    a861:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a865:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a86c:	ff ff 1f 
    a86f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a873:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a877:	48 89 c7             	mov    %rax,%rdi
    a87a:	e8 42 09 00 00       	call   b1c1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a87f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a883:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a887:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a88b:	48 89 d6             	mov    %rdx,%rsi
    a88e:	48 89 c7             	mov    %rax,%rdi
    a891:	e8 71 ac ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a896:	48 8b 00             	mov    (%rax),%rax
      }
    a899:	c9                   	leave
    a89a:	c3                   	ret
    a89b:	90                   	nop

000000000000a89c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a89c:	55                   	push   %rbp
    a89d:	48 89 e5             	mov    %rsp,%rbp
    a8a0:	48 83 ec 10          	sub    $0x10,%rsp
    a8a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a8ac:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8b4:	48 89 d6             	mov    %rdx,%rsi
    a8b7:	48 89 c7             	mov    %rax,%rdi
    a8ba:	e8 c5 f3 ff ff       	call   9c84 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a8bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c3:	48 89 c7             	mov    %rax,%rdi
    a8c6:	e8 11 09 00 00       	call   b1dc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a8cb:	90                   	nop
    a8cc:	c9                   	leave
    a8cd:	c3                   	ret

000000000000a8ce <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a8ce:	55                   	push   %rbp
    a8cf:	48 89 e5             	mov    %rsp,%rbp
    a8d2:	48 83 ec 10          	sub    $0x10,%rsp
    a8d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a8de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a8e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8e6:	48 89 d6             	mov    %rdx,%rsi
    a8e9:	48 89 c7             	mov    %rax,%rdi
    a8ec:	e8 19 09 00 00       	call   b20a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a8f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a8f5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fc:	48 8b 10             	mov    (%rax),%rdx
    a8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a903:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a90b:	48 8b 00             	mov    (%rax),%rax
    a90e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a912:	48 c1 e2 02          	shl    $0x2,%rdx
    a916:	48 01 c2             	add    %rax,%rdx
    a919:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a91d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a921:	90                   	nop
    a922:	c9                   	leave
    a923:	c3                   	ret

000000000000a924 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a924:	55                   	push   %rbp
    a925:	48 89 e5             	mov    %rsp,%rbp
    a928:	48 83 ec 20          	sub    $0x20,%rsp
    a92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a934:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a938:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a93c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a940:	48 89 d6             	mov    %rdx,%rsi
    a943:	48 89 c7             	mov    %rax,%rdi
    a946:	e8 f2 08 00 00       	call   b23d <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a94b:	c9                   	leave
    a94c:	c3                   	ret

000000000000a94d <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a94d:	55                   	push   %rbp
    a94e:	48 89 e5             	mov    %rsp,%rbp
    a951:	48 83 ec 10          	sub    $0x10,%rsp
    a955:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a959:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a95d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a961:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a965:	48 89 d6             	mov    %rdx,%rsi
    a968:	48 89 c7             	mov    %rax,%rdi
    a96b:	e8 f6 08 00 00       	call   b266 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a970:	90                   	nop
    a971:	c9                   	leave
    a972:	c3                   	ret
    a973:	90                   	nop

000000000000a974 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a974:	55                   	push   %rbp
    a975:	48 89 e5             	mov    %rsp,%rbp
    a978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a97c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a980:	90                   	nop
    a981:	5d                   	pop    %rbp
    a982:	c3                   	ret

000000000000a983 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a983:	55                   	push   %rbp
    a984:	48 89 e5             	mov    %rsp,%rbp
    a987:	48 83 ec 20          	sub    $0x20,%rsp
    a98b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a98f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a993:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a997:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a99b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a99f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a3:	48 89 ce             	mov    %rcx,%rsi
    a9a6:	48 89 c7             	mov    %rax,%rdi
    a9a9:	e8 c8 08 00 00       	call   b276 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a9ae:	90                   	nop
    a9af:	c9                   	leave
    a9b0:	c3                   	ret

000000000000a9b1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a9b1:	55                   	push   %rbp
    a9b2:	48 89 e5             	mov    %rsp,%rbp
    a9b5:	48 83 ec 20          	sub    $0x20,%rsp
    a9b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a9bd:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a9c4:	ff ff 0f 
    a9c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a9cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9cf:	48 89 c7             	mov    %rax,%rdi
    a9d2:	e8 d0 08 00 00       	call   b2a7 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a9d7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a9db:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a9df:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a9e3:	48 89 d6             	mov    %rdx,%rsi
    a9e6:	48 89 c7             	mov    %rax,%rdi
    a9e9:	e8 19 ab ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    a9ee:	48 8b 00             	mov    (%rax),%rax
      }
    a9f1:	c9                   	leave
    a9f2:	c3                   	ret
    a9f3:	90                   	nop

000000000000a9f4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a9f4:	55                   	push   %rbp
    a9f5:	48 89 e5             	mov    %rsp,%rbp
    a9f8:	48 83 ec 10          	sub    $0x10,%rsp
    a9fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    aa04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0c:	48 89 d6             	mov    %rdx,%rsi
    aa0f:	48 89 c7             	mov    %rax,%rdi
    aa12:	e8 29 f4 ff ff       	call   9e40 <_ZNSaIP9VkImage_TEC1ERKS1_>
    aa17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa1b:	48 89 c7             	mov    %rax,%rdi
    aa1e:	e8 9f 08 00 00       	call   b2c2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    aa23:	90                   	nop
    aa24:	c9                   	leave
    aa25:	c3                   	ret

000000000000aa26 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    aa26:	55                   	push   %rbp
    aa27:	48 89 e5             	mov    %rsp,%rbp
    aa2a:	48 83 ec 10          	sub    $0x10,%rsp
    aa2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    aa36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa3e:	48 89 d6             	mov    %rdx,%rsi
    aa41:	48 89 c7             	mov    %rax,%rdi
    aa44:	e8 a7 08 00 00       	call   b2f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    aa49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aa4d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    aa50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa54:	48 8b 10             	mov    (%rax),%rdx
    aa57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa5b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    aa5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa63:	48 8b 00             	mov    (%rax),%rax
    aa66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa6a:	48 c1 e2 03          	shl    $0x3,%rdx
    aa6e:	48 01 c2             	add    %rax,%rdx
    aa71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa75:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    aa79:	90                   	nop
    aa7a:	c9                   	leave
    aa7b:	c3                   	ret

000000000000aa7c <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    aa7c:	55                   	push   %rbp
    aa7d:	48 89 e5             	mov    %rsp,%rbp
    aa80:	48 83 ec 20          	sub    $0x20,%rsp
    aa84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    aa90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa98:	48 89 d6             	mov    %rdx,%rsi
    aa9b:	48 89 c7             	mov    %rax,%rdi
    aa9e:	e8 80 08 00 00       	call   b323 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    aaa3:	c9                   	leave
    aaa4:	c3                   	ret

000000000000aaa5 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    aaa5:	55                   	push   %rbp
    aaa6:	48 89 e5             	mov    %rsp,%rbp
    aaa9:	48 83 ec 10          	sub    $0x10,%rsp
    aaad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aab1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    aab5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aabd:	48 89 d6             	mov    %rdx,%rsi
    aac0:	48 89 c7             	mov    %rax,%rdi
    aac3:	e8 84 08 00 00       	call   b34c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    aac8:	90                   	nop
    aac9:	c9                   	leave
    aaca:	c3                   	ret
    aacb:	90                   	nop

000000000000aacc <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    aacc:	55                   	push   %rbp
    aacd:	48 89 e5             	mov    %rsp,%rbp
    aad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aad4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aad8:	90                   	nop
    aad9:	5d                   	pop    %rbp
    aada:	c3                   	ret

000000000000aadb <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    aadb:	55                   	push   %rbp
    aadc:	48 89 e5             	mov    %rsp,%rbp
    aadf:	48 83 ec 20          	sub    $0x20,%rsp
    aae3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aae7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aaeb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    aaef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aaf3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aaf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aafb:	48 89 ce             	mov    %rcx,%rsi
    aafe:	48 89 c7             	mov    %rax,%rdi
    ab01:	e8 56 08 00 00       	call   b35c <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    ab06:	90                   	nop
    ab07:	c9                   	leave
    ab08:	c3                   	ret

000000000000ab09 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab09:	55                   	push   %rbp
    ab0a:	48 89 e5             	mov    %rsp,%rbp
    ab0d:	48 83 ec 10          	sub    $0x10,%rsp
    ab11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab19:	48 89 c7             	mov    %rax,%rdi
    ab1c:	e8 6d 08 00 00       	call   b38e <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    ab21:	c9                   	leave
    ab22:	c3                   	ret
    ab23:	90                   	nop

000000000000ab24 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab24:	55                   	push   %rbp
    ab25:	48 89 e5             	mov    %rsp,%rbp
    ab28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab30:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab3b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab42:	00 
    ab43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab47:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab4e:	00 
	{ }
    ab4f:	90                   	nop
    ab50:	5d                   	pop    %rbp
    ab51:	c3                   	ret

000000000000ab52 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab52:	55                   	push   %rbp
    ab53:	48 89 e5             	mov    %rsp,%rbp
    ab56:	48 83 ec 10          	sub    $0x10,%rsp
    ab5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab62:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab67:	74 15                	je     ab7e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ab69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab71:	48 89 d6             	mov    %rdx,%rsi
    ab74:	48 89 c7             	mov    %rax,%rdi
    ab77:	e8 2c 08 00 00       	call   b3a8 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    ab7c:	eb 05                	jmp    ab83 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ab7e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ab83:	c9                   	leave
    ab84:	c3                   	ret

000000000000ab85 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ab85:	55                   	push   %rbp
    ab86:	48 89 e5             	mov    %rsp,%rbp
    ab89:	48 83 ec 20          	sub    $0x20,%rsp
    ab8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ab95:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ab99:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aba1:	48 89 d6             	mov    %rdx,%rsi
    aba4:	48 89 c7             	mov    %rax,%rdi
    aba7:	e8 26 08 00 00       	call   b3d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    abac:	c9                   	leave
    abad:	c3                   	ret

000000000000abae <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    abae:	55                   	push   %rbp
    abaf:	48 89 e5             	mov    %rsp,%rbp
    abb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abba:	90                   	nop
    abbb:	5d                   	pop    %rbp
    abbc:	c3                   	ret
    abbd:	90                   	nop

000000000000abbe <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    abbe:	55                   	push   %rbp
    abbf:	48 89 e5             	mov    %rsp,%rbp
    abc2:	48 83 ec 20          	sub    $0x20,%rsp
    abc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    abd2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abd6:	48 89 d0             	mov    %rdx,%rax
    abd9:	48 c1 e0 06          	shl    $0x6,%rax
    abdd:	48 01 d0             	add    %rdx,%rax
    abe0:	48 c1 e0 03          	shl    $0x3,%rax
    abe4:	48 89 c2             	mov    %rax,%rdx
    abe7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    abeb:	48 89 d6             	mov    %rdx,%rsi
    abee:	48 89 c7             	mov    %rax,%rdi
    abf1:	e8 fa 97 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    abf6:	c9                   	leave
    abf7:	c3                   	ret

000000000000abf8 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    abf8:	55                   	push   %rbp
    abf9:	48 89 e5             	mov    %rsp,%rbp
    abfc:	48 83 ec 10          	sub    $0x10,%rsp
    ac00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac08:	48 89 c7             	mov    %rax,%rdi
    ac0b:	e8 22 08 00 00       	call   b432 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    ac10:	c9                   	leave
    ac11:	c3                   	ret

000000000000ac12 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac12:	55                   	push   %rbp
    ac13:	48 89 e5             	mov    %rsp,%rbp
    ac16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ac1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac1e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ac25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac29:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ac30:	00 
    ac31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac35:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac3c:	00 
	{ }
    ac3d:	90                   	nop
    ac3e:	5d                   	pop    %rbp
    ac3f:	c3                   	ret

000000000000ac40 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac40:	55                   	push   %rbp
    ac41:	48 89 e5             	mov    %rsp,%rbp
    ac44:	48 83 ec 10          	sub    $0x10,%rsp
    ac48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac50:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac55:	74 15                	je     ac6c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ac57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac5b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac5f:	48 89 d6             	mov    %rdx,%rsi
    ac62:	48 89 c7             	mov    %rax,%rdi
    ac65:	e8 e2 07 00 00       	call   b44c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    ac6a:	eb 05                	jmp    ac71 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ac6c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ac71:	c9                   	leave
    ac72:	c3                   	ret

000000000000ac73 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ac73:	55                   	push   %rbp
    ac74:	48 89 e5             	mov    %rsp,%rbp
    ac77:	48 83 ec 20          	sub    $0x20,%rsp
    ac7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac7f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ac83:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ac87:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ac8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac8f:	48 89 d6             	mov    %rdx,%rsi
    ac92:	48 89 c7             	mov    %rax,%rdi
    ac95:	e8 dc 07 00 00       	call   b476 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    ac9a:	c9                   	leave
    ac9b:	c3                   	ret

000000000000ac9c <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    ac9c:	55                   	push   %rbp
    ac9d:	48 89 e5             	mov    %rsp,%rbp
    aca0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aca4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aca8:	90                   	nop
    aca9:	5d                   	pop    %rbp
    acaa:	c3                   	ret
    acab:	90                   	nop

000000000000acac <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    acac:	55                   	push   %rbp
    acad:	48 89 e5             	mov    %rsp,%rbp
    acb0:	48 83 ec 20          	sub    $0x20,%rsp
    acb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acbc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    acc0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    acc4:	48 89 d0             	mov    %rdx,%rax
    acc7:	48 c1 e0 06          	shl    $0x6,%rax
    accb:	48 01 d0             	add    %rdx,%rax
    acce:	48 c1 e0 02          	shl    $0x2,%rax
    acd2:	48 89 c2             	mov    %rax,%rdx
    acd5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acd9:	48 89 d6             	mov    %rdx,%rsi
    acdc:	48 89 c7             	mov    %rax,%rdi
    acdf:	e8 0c 97 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    ace4:	c9                   	leave
    ace5:	c3                   	ret

000000000000ace6 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ace6:	55                   	push   %rbp
    ace7:	48 89 e5             	mov    %rsp,%rbp
    acea:	48 83 ec 10          	sub    $0x10,%rsp
    acee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    acf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acf6:	48 89 c7             	mov    %rax,%rdi
    acf9:	e8 d8 07 00 00       	call   b4d6 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    acfe:	c9                   	leave
    acff:	c3                   	ret

000000000000ad00 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad00:	55                   	push   %rbp
    ad01:	48 89 e5             	mov    %rsp,%rbp
    ad04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad0c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ad13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad17:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ad1e:	00 
    ad1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad23:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ad2a:	00 
	{ }
    ad2b:	90                   	nop
    ad2c:	5d                   	pop    %rbp
    ad2d:	c3                   	ret

000000000000ad2e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ad2e:	55                   	push   %rbp
    ad2f:	48 89 e5             	mov    %rsp,%rbp
    ad32:	48 83 ec 10          	sub    $0x10,%rsp
    ad36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ad3e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ad43:	74 15                	je     ad5a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    ad45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad4d:	48 89 d6             	mov    %rdx,%rsi
    ad50:	48 89 c7             	mov    %rax,%rdi
    ad53:	e8 98 07 00 00       	call   b4f0 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    ad58:	eb 05                	jmp    ad5f <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    ad5a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ad5f:	c9                   	leave
    ad60:	c3                   	ret

000000000000ad61 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ad61:	55                   	push   %rbp
    ad62:	48 89 e5             	mov    %rsp,%rbp
    ad65:	48 83 ec 20          	sub    $0x20,%rsp
    ad69:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad6d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad71:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad75:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad7d:	48 89 d6             	mov    %rdx,%rsi
    ad80:	48 89 c7             	mov    %rax,%rdi
    ad83:	e8 92 07 00 00       	call   b51a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    ad88:	c9                   	leave
    ad89:	c3                   	ret

000000000000ad8a <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad8a:	55                   	push   %rbp
    ad8b:	48 89 e5             	mov    %rsp,%rbp
    ad8e:	48 83 ec 20          	sub    $0x20,%rsp
    ad92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ada9:	00 
    adaa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    adae:	48 89 d6             	mov    %rdx,%rsi
    adb1:	48 89 c7             	mov    %rax,%rdi
    adb4:	e8 37 96 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    adb9:	c9                   	leave
    adba:	c3                   	ret

000000000000adbb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    adbb:	55                   	push   %rbp
    adbc:	48 89 e5             	mov    %rsp,%rbp
    adbf:	48 83 ec 10          	sub    $0x10,%rsp
    adc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    adc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adcb:	48 89 c7             	mov    %rax,%rdi
    adce:	e8 a5 07 00 00       	call   b578 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    add3:	c9                   	leave
    add4:	c3                   	ret
    add5:	90                   	nop

000000000000add6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    add6:	55                   	push   %rbp
    add7:	48 89 e5             	mov    %rsp,%rbp
    adda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    adde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ade2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ade9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aded:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    adf4:	00 
    adf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ae00:	00 
	{ }
    ae01:	90                   	nop
    ae02:	5d                   	pop    %rbp
    ae03:	c3                   	ret

000000000000ae04 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ae04:	55                   	push   %rbp
    ae05:	48 89 e5             	mov    %rsp,%rbp
    ae08:	48 83 ec 10          	sub    $0x10,%rsp
    ae0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ae14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae19:	74 15                	je     ae30 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    ae1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae23:	48 89 d6             	mov    %rdx,%rsi
    ae26:	48 89 c7             	mov    %rax,%rdi
    ae29:	e8 64 07 00 00       	call   b592 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    ae2e:	eb 05                	jmp    ae35 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    ae30:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ae35:	c9                   	leave
    ae36:	c3                   	ret

000000000000ae37 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ae37:	55                   	push   %rbp
    ae38:	48 89 e5             	mov    %rsp,%rbp
    ae3b:	48 83 ec 20          	sub    $0x20,%rsp
    ae3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae47:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae4b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae53:	48 89 d6             	mov    %rdx,%rsi
    ae56:	48 89 c7             	mov    %rax,%rdi
    ae59:	e8 5e 07 00 00       	call   b5bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    ae5e:	c9                   	leave
    ae5f:	c3                   	ret

000000000000ae60 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    ae60:	55                   	push   %rbp
    ae61:	48 89 e5             	mov    %rsp,%rbp
    ae64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae6c:	90                   	nop
    ae6d:	5d                   	pop    %rbp
    ae6e:	c3                   	ret
    ae6f:	90                   	nop

000000000000ae70 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae70:	55                   	push   %rbp
    ae71:	48 89 e5             	mov    %rsp,%rbp
    ae74:	48 83 ec 20          	sub    $0x20,%rsp
    ae78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ae84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae88:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ae8f:	00 
    ae90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae94:	48 89 d6             	mov    %rdx,%rsi
    ae97:	48 89 c7             	mov    %rax,%rdi
    ae9a:	e8 51 95 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    ae9f:	c9                   	leave
    aea0:	c3                   	ret

000000000000aea1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aea1:	55                   	push   %rbp
    aea2:	48 89 e5             	mov    %rsp,%rbp
    aea5:	48 83 ec 10          	sub    $0x10,%rsp
    aea9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aead:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeb1:	48 89 c7             	mov    %rax,%rdi
    aeb4:	e8 61 07 00 00       	call   b61a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    aeb9:	c9                   	leave
    aeba:	c3                   	ret
    aebb:	90                   	nop

000000000000aebc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aebc:	55                   	push   %rbp
    aebd:	48 89 e5             	mov    %rsp,%rbp
    aec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aec8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aeda:	00 
    aedb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aedf:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aee6:	00 
	{ }
    aee7:	90                   	nop
    aee8:	5d                   	pop    %rbp
    aee9:	c3                   	ret

000000000000aeea <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aeea:	55                   	push   %rbp
    aeeb:	48 89 e5             	mov    %rsp,%rbp
    aeee:	48 83 ec 10          	sub    $0x10,%rsp
    aef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aef6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aefa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aeff:	74 15                	je     af16 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    af01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af05:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    af09:	48 89 d6             	mov    %rdx,%rsi
    af0c:	48 89 c7             	mov    %rax,%rdi
    af0f:	e8 20 07 00 00       	call   b634 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    af14:	eb 05                	jmp    af1b <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    af16:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    af1b:	c9                   	leave
    af1c:	c3                   	ret

000000000000af1d <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    af1d:	55                   	push   %rbp
    af1e:	48 89 e5             	mov    %rsp,%rbp
    af21:	48 83 ec 20          	sub    $0x20,%rsp
    af25:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af29:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    af2d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    af31:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    af35:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af39:	48 89 d6             	mov    %rdx,%rsi
    af3c:	48 89 c7             	mov    %rax,%rdi
    af3f:	e8 1a 07 00 00       	call   b65e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    af44:	c9                   	leave
    af45:	c3                   	ret

000000000000af46 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    af46:	55                   	push   %rbp
    af47:	48 89 e5             	mov    %rsp,%rbp
    af4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af52:	90                   	nop
    af53:	5d                   	pop    %rbp
    af54:	c3                   	ret
    af55:	90                   	nop

000000000000af56 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af56:	55                   	push   %rbp
    af57:	48 89 e5             	mov    %rsp,%rbp
    af5a:	48 83 ec 20          	sub    $0x20,%rsp
    af5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af66:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    af6e:	48 89 d0             	mov    %rdx,%rax
    af71:	48 01 c0             	add    %rax,%rax
    af74:	48 01 d0             	add    %rdx,%rax
    af77:	48 c1 e0 03          	shl    $0x3,%rax
    af7b:	48 89 c2             	mov    %rax,%rdx
    af7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af82:	48 89 d6             	mov    %rdx,%rsi
    af85:	48 89 c7             	mov    %rax,%rdi
    af88:	e8 63 94 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    af8d:	c9                   	leave
    af8e:	c3                   	ret

000000000000af8f <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    af8f:	55                   	push   %rbp
    af90:	48 89 e5             	mov    %rsp,%rbp
    af93:	48 83 ec 10          	sub    $0x10,%rsp
    af97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    af9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af9f:	48 89 c7             	mov    %rax,%rdi
    afa2:	e8 15 07 00 00       	call   b6bc <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    afa7:	c9                   	leave
    afa8:	c3                   	ret
    afa9:	90                   	nop

000000000000afaa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    afaa:	55                   	push   %rbp
    afab:	48 89 e5             	mov    %rsp,%rbp
    afae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    afb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    afbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afc1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    afc8:	00 
    afc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afcd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    afd4:	00 
	{ }
    afd5:	90                   	nop
    afd6:	5d                   	pop    %rbp
    afd7:	c3                   	ret

000000000000afd8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    afd8:	55                   	push   %rbp
    afd9:	48 89 e5             	mov    %rsp,%rbp
    afdc:	48 83 ec 10          	sub    $0x10,%rsp
    afe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afe4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    afe8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    afed:	74 15                	je     b004 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    afef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aff7:	48 89 d6             	mov    %rdx,%rsi
    affa:	48 89 c7             	mov    %rax,%rdi
    affd:	e8 d4 06 00 00       	call   b6d6 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    b002:	eb 05                	jmp    b009 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    b004:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b009:	c9                   	leave
    b00a:	c3                   	ret

000000000000b00b <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b00b:	55                   	push   %rbp
    b00c:	48 89 e5             	mov    %rsp,%rbp
    b00f:	48 83 ec 20          	sub    $0x20,%rsp
    b013:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b017:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b01b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b01f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b023:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b027:	48 89 d6             	mov    %rdx,%rsi
    b02a:	48 89 c7             	mov    %rax,%rdi
    b02d:	e8 ce 06 00 00       	call   b700 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    b032:	c9                   	leave
    b033:	c3                   	ret

000000000000b034 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    b034:	55                   	push   %rbp
    b035:	48 89 e5             	mov    %rsp,%rbp
    b038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b03c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b040:	90                   	nop
    b041:	5d                   	pop    %rbp
    b042:	c3                   	ret

000000000000b043 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b043:	55                   	push   %rbp
    b044:	48 89 e5             	mov    %rsp,%rbp
    b047:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b04f:	5d                   	pop    %rbp
    b050:	c3                   	ret

000000000000b051 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b051:	55                   	push   %rbp
    b052:	48 89 e5             	mov    %rsp,%rbp
    b055:	53                   	push   %rbx
    b056:	48 83 ec 18          	sub    $0x18,%rsp
    b05a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b05e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b062:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b066:	48 89 c6             	mov    %rax,%rsi
    b069:	bf 18 00 00 00       	mov    $0x18,%edi
    b06e:	e8 c6 9f ff ff       	call   5039 <_ZnwmPv>
    b073:	48 89 c3             	mov    %rax,%rbx
    b076:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b07a:	48 89 c7             	mov    %rax,%rdi
    b07d:	e8 48 e8 ff ff       	call   98ca <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    b082:	48 89 c1             	mov    %rax,%rcx
    b085:	48 8b 01             	mov    (%rcx),%rax
    b088:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    b08c:	48 89 03             	mov    %rax,(%rbx)
    b08f:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    b093:	48 8b 41 10          	mov    0x10(%rcx),%rax
    b097:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    b09b:	90                   	nop
    b09c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b0a0:	c9                   	leave
    b0a1:	c3                   	ret

000000000000b0a2 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b0a2:	55                   	push   %rbp
    b0a3:	48 89 e5             	mov    %rsp,%rbp
    b0a6:	48 83 ec 20          	sub    $0x20,%rsp
    b0aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b0b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b0b6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b0ba:	48 89 d0             	mov    %rdx,%rax
    b0bd:	48 c1 e0 03          	shl    $0x3,%rax
    b0c1:	48 29 d0             	sub    %rdx,%rax
    b0c4:	48 c1 e0 02          	shl    $0x2,%rax
    b0c8:	48 89 c2             	mov    %rax,%rdx
    b0cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b0cf:	48 89 d6             	mov    %rdx,%rsi
    b0d2:	48 89 c7             	mov    %rax,%rdi
    b0d5:	e8 16 93 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    b0da:	c9                   	leave
    b0db:	c3                   	ret

000000000000b0dc <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b0dc:	55                   	push   %rbp
    b0dd:	48 89 e5             	mov    %rsp,%rbp
    b0e0:	48 83 ec 10          	sub    $0x10,%rsp
    b0e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b0e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0ec:	48 89 c7             	mov    %rax,%rdi
    b0ef:	e8 52 06 00 00       	call   b746 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    b0f4:	c9                   	leave
    b0f5:	c3                   	ret

000000000000b0f6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b0f6:	55                   	push   %rbp
    b0f7:	48 89 e5             	mov    %rsp,%rbp
    b0fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b0fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b102:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b10d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b114:	00 
    b115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b119:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b120:	00 
	{ }
    b121:	90                   	nop
    b122:	5d                   	pop    %rbp
    b123:	c3                   	ret

000000000000b124 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b124:	55                   	push   %rbp
    b125:	48 89 e5             	mov    %rsp,%rbp
    b128:	48 83 ec 10          	sub    $0x10,%rsp
    b12c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b130:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b134:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b139:	74 15                	je     b150 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    b13b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b13f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b143:	48 89 d6             	mov    %rdx,%rsi
    b146:	48 89 c7             	mov    %rax,%rdi
    b149:	e8 12 06 00 00       	call   b760 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    b14e:	eb 05                	jmp    b155 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    b150:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b155:	c9                   	leave
    b156:	c3                   	ret

000000000000b157 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b157:	55                   	push   %rbp
    b158:	48 89 e5             	mov    %rsp,%rbp
    b15b:	48 83 ec 20          	sub    $0x20,%rsp
    b15f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b163:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b167:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b16b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b16f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b173:	48 89 d6             	mov    %rdx,%rsi
    b176:	48 89 c7             	mov    %rax,%rdi
    b179:	e8 0c 06 00 00       	call   b78a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    b17e:	c9                   	leave
    b17f:	c3                   	ret

000000000000b180 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    b180:	55                   	push   %rbp
    b181:	48 89 e5             	mov    %rsp,%rbp
    b184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b18c:	90                   	nop
    b18d:	5d                   	pop    %rbp
    b18e:	c3                   	ret
    b18f:	90                   	nop

000000000000b190 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b190:	55                   	push   %rbp
    b191:	48 89 e5             	mov    %rsp,%rbp
    b194:	48 83 ec 20          	sub    $0x20,%rsp
    b198:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b19c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b1a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1a8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b1af:	00 
    b1b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b1b4:	48 89 d6             	mov    %rdx,%rsi
    b1b7:	48 89 c7             	mov    %rax,%rdi
    b1ba:	e8 31 92 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    b1bf:	c9                   	leave
    b1c0:	c3                   	ret

000000000000b1c1 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b1c1:	55                   	push   %rbp
    b1c2:	48 89 e5             	mov    %rsp,%rbp
    b1c5:	48 83 ec 10          	sub    $0x10,%rsp
    b1c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b1cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1d1:	48 89 c7             	mov    %rax,%rdi
    b1d4:	e8 0f 06 00 00       	call   b7e8 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    b1d9:	c9                   	leave
    b1da:	c3                   	ret
    b1db:	90                   	nop

000000000000b1dc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b1dc:	55                   	push   %rbp
    b1dd:	48 89 e5             	mov    %rsp,%rbp
    b1e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b1e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1e8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b1ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1f3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b1fa:	00 
    b1fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ff:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b206:	00 
	{ }
    b207:	90                   	nop
    b208:	5d                   	pop    %rbp
    b209:	c3                   	ret

000000000000b20a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b20a:	55                   	push   %rbp
    b20b:	48 89 e5             	mov    %rsp,%rbp
    b20e:	48 83 ec 10          	sub    $0x10,%rsp
    b212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b21a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b21f:	74 15                	je     b236 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    b221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b225:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b229:	48 89 d6             	mov    %rdx,%rsi
    b22c:	48 89 c7             	mov    %rax,%rdi
    b22f:	e8 ce 05 00 00       	call   b802 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    b234:	eb 05                	jmp    b23b <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    b236:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b23b:	c9                   	leave
    b23c:	c3                   	ret

000000000000b23d <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b23d:	55                   	push   %rbp
    b23e:	48 89 e5             	mov    %rsp,%rbp
    b241:	48 83 ec 20          	sub    $0x20,%rsp
    b245:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b249:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b24d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b251:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b255:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b259:	48 89 d6             	mov    %rdx,%rsi
    b25c:	48 89 c7             	mov    %rax,%rdi
    b25f:	e8 c8 05 00 00       	call   b82c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    b264:	c9                   	leave
    b265:	c3                   	ret

000000000000b266 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    b266:	55                   	push   %rbp
    b267:	48 89 e5             	mov    %rsp,%rbp
    b26a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b26e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b272:	90                   	nop
    b273:	5d                   	pop    %rbp
    b274:	c3                   	ret
    b275:	90                   	nop

000000000000b276 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b276:	55                   	push   %rbp
    b277:	48 89 e5             	mov    %rsp,%rbp
    b27a:	48 83 ec 20          	sub    $0x20,%rsp
    b27e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b282:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b286:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b28a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b28e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    b295:	00 
    b296:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b29a:	48 89 d6             	mov    %rdx,%rsi
    b29d:	48 89 c7             	mov    %rax,%rdi
    b2a0:	e8 4b 91 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    b2a5:	c9                   	leave
    b2a6:	c3                   	ret

000000000000b2a7 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    b2a7:	55                   	push   %rbp
    b2a8:	48 89 e5             	mov    %rsp,%rbp
    b2ab:	48 83 ec 10          	sub    $0x10,%rsp
    b2af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    b2b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b7:	48 89 c7             	mov    %rax,%rdi
    b2ba:	e8 cb 05 00 00       	call   b88a <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    b2bf:	c9                   	leave
    b2c0:	c3                   	ret
    b2c1:	90                   	nop

000000000000b2c2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b2c2:	55                   	push   %rbp
    b2c3:	48 89 e5             	mov    %rsp,%rbp
    b2c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b2ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b2d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b2e0:	00 
    b2e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b2ec:	00 
	{ }
    b2ed:	90                   	nop
    b2ee:	5d                   	pop    %rbp
    b2ef:	c3                   	ret

000000000000b2f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    b2f0:	55                   	push   %rbp
    b2f1:	48 89 e5             	mov    %rsp,%rbp
    b2f4:	48 83 ec 10          	sub    $0x10,%rsp
    b2f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    b300:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b305:	74 15                	je     b31c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    b307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b30f:	48 89 d6             	mov    %rdx,%rsi
    b312:	48 89 c7             	mov    %rax,%rdi
    b315:	e8 8a 05 00 00       	call   b8a4 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    b31a:	eb 05                	jmp    b321 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    b31c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    b321:	c9                   	leave
    b322:	c3                   	ret

000000000000b323 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    b323:	55                   	push   %rbp
    b324:	48 89 e5             	mov    %rsp,%rbp
    b327:	48 83 ec 20          	sub    $0x20,%rsp
    b32b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b32f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    b333:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    b337:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b33b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b33f:	48 89 d6             	mov    %rdx,%rsi
    b342:	48 89 c7             	mov    %rax,%rdi
    b345:	e8 84 05 00 00       	call   b8ce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    b34a:	c9                   	leave
    b34b:	c3                   	ret

000000000000b34c <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    b34c:	55                   	push   %rbp
    b34d:	48 89 e5             	mov    %rsp,%rbp
    b350:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b354:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b358:	90                   	nop
    b359:	5d                   	pop    %rbp
    b35a:	c3                   	ret
    b35b:	90                   	nop

000000000000b35c <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    b35c:	55                   	push   %rbp
    b35d:	48 89 e5             	mov    %rsp,%rbp
    b360:	48 83 ec 20          	sub    $0x20,%rsp
    b364:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b368:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b36c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    b370:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b374:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b37b:	00 
    b37c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b380:	48 89 d6             	mov    %rdx,%rsi
    b383:	48 89 c7             	mov    %rax,%rdi
    b386:	e8 65 90 ff ff       	call   43f0 <_ZdlPvm@plt>
      }
    b38b:	c9                   	leave
    b38c:	c3                   	ret
    b38d:	90                   	nop

000000000000b38e <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b38e:	55                   	push   %rbp
    b38f:	48 89 e5             	mov    %rsp,%rbp
    b392:	48 83 ec 10          	sub    $0x10,%rsp
    b396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b39a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b39e:	48 89 c7             	mov    %rax,%rdi
    b3a1:	e8 86 05 00 00       	call   b92c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b3a6:	c9                   	leave
    b3a7:	c3                   	ret

000000000000b3a8 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3a8:	55                   	push   %rbp
    b3a9:	48 89 e5             	mov    %rsp,%rbp
    b3ac:	48 83 ec 10          	sub    $0x10,%rsp
    b3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3b8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3c0:	ba 00 00 00 00       	mov    $0x0,%edx
    b3c5:	48 89 ce             	mov    %rcx,%rsi
    b3c8:	48 89 c7             	mov    %rax,%rdi
    b3cb:	e8 70 05 00 00       	call   b940 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    b3d0:	c9                   	leave
    b3d1:	c3                   	ret

000000000000b3d2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b3d2:	55                   	push   %rbp
    b3d3:	48 89 e5             	mov    %rsp,%rbp
    b3d6:	48 83 ec 20          	sub    $0x20,%rsp
    b3da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b3e2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3e7:	74 43                	je     b42c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b3e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ed:	48 89 c7             	mov    %rax,%rdi
    b3f0:	e8 b6 05 00 00       	call   b9ab <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    b3f5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b3f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3fd:	48 89 c7             	mov    %rax,%rdi
    b400:	e8 b4 05 00 00       	call   b9b9 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b405:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    b40c:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b40d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b411:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b415:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b41d:	48 89 ce             	mov    %rcx,%rsi
    b420:	48 89 c7             	mov    %rax,%rdi
    b423:	e8 eb 05 00 00       	call   ba13 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    b428:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b42c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b430:	c9                   	leave
    b431:	c3                   	ret

000000000000b432 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b432:	55                   	push   %rbp
    b433:	48 89 e5             	mov    %rsp,%rbp
    b436:	48 83 ec 10          	sub    $0x10,%rsp
    b43a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b43e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b442:	48 89 c7             	mov    %rax,%rdi
    b445:	e8 0e 06 00 00       	call   ba58 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b44a:	c9                   	leave
    b44b:	c3                   	ret

000000000000b44c <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b44c:	55                   	push   %rbp
    b44d:	48 89 e5             	mov    %rsp,%rbp
    b450:	48 83 ec 10          	sub    $0x10,%rsp
    b454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b458:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b45c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b460:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b464:	ba 00 00 00 00       	mov    $0x0,%edx
    b469:	48 89 ce             	mov    %rcx,%rsi
    b46c:	48 89 c7             	mov    %rax,%rdi
    b46f:	e8 f8 05 00 00       	call   ba6c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b474:	c9                   	leave
    b475:	c3                   	ret

000000000000b476 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b476:	55                   	push   %rbp
    b477:	48 89 e5             	mov    %rsp,%rbp
    b47a:	48 83 ec 20          	sub    $0x20,%rsp
    b47e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b482:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b486:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b48b:	74 43                	je     b4d0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b48d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b491:	48 89 c7             	mov    %rax,%rdi
    b494:	e8 3e 06 00 00       	call   bad7 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b499:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b49d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4a1:	48 89 c7             	mov    %rax,%rdi
    b4a4:	e8 3c 06 00 00       	call   bae5 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b4a9:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b4b0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4b5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b4b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4c1:	48 89 ce             	mov    %rcx,%rsi
    b4c4:	48 89 c7             	mov    %rax,%rdi
    b4c7:	e8 73 06 00 00       	call   bb3f <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b4cc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b4d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b4d4:	c9                   	leave
    b4d5:	c3                   	ret

000000000000b4d6 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b4d6:	55                   	push   %rbp
    b4d7:	48 89 e5             	mov    %rsp,%rbp
    b4da:	48 83 ec 10          	sub    $0x10,%rsp
    b4de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b4e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4e6:	48 89 c7             	mov    %rax,%rdi
    b4e9:	e8 96 06 00 00       	call   bb84 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b4ee:	c9                   	leave
    b4ef:	c3                   	ret

000000000000b4f0 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b4f0:	55                   	push   %rbp
    b4f1:	48 89 e5             	mov    %rsp,%rbp
    b4f4:	48 83 ec 10          	sub    $0x10,%rsp
    b4f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b4fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b500:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b508:	ba 00 00 00 00       	mov    $0x0,%edx
    b50d:	48 89 ce             	mov    %rcx,%rsi
    b510:	48 89 c7             	mov    %rax,%rdi
    b513:	e8 80 06 00 00       	call   bb98 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b518:	c9                   	leave
    b519:	c3                   	ret

000000000000b51a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b51a:	55                   	push   %rbp
    b51b:	48 89 e5             	mov    %rsp,%rbp
    b51e:	48 83 ec 20          	sub    $0x20,%rsp
    b522:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b526:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b52a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b52f:	74 40                	je     b571 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b535:	48 89 c7             	mov    %rax,%rdi
    b538:	e8 bc 06 00 00       	call   bbf9 <_ZSt11__addressofIPKcEPT_RS2_>
    b53d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b541:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b545:	48 89 c7             	mov    %rax,%rdi
    b548:	e8 ba 06 00 00       	call   bc07 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b54d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b552:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b556:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b55a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b562:	48 89 ce             	mov    %rcx,%rsi
    b565:	48 89 c7             	mov    %rax,%rdi
    b568:	e8 c1 06 00 00       	call   bc2e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b56d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b575:	c9                   	leave
    b576:	c3                   	ret
    b577:	90                   	nop

000000000000b578 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b578:	55                   	push   %rbp
    b579:	48 89 e5             	mov    %rsp,%rbp
    b57c:	48 83 ec 10          	sub    $0x10,%rsp
    b580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b588:	48 89 c7             	mov    %rax,%rdi
    b58b:	e8 e2 06 00 00       	call   bc72 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b590:	c9                   	leave
    b591:	c3                   	ret

000000000000b592 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b592:	55                   	push   %rbp
    b593:	48 89 e5             	mov    %rsp,%rbp
    b596:	48 83 ec 10          	sub    $0x10,%rsp
    b59a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b59e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b5a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b5a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5aa:	ba 00 00 00 00       	mov    $0x0,%edx
    b5af:	48 89 ce             	mov    %rcx,%rsi
    b5b2:	48 89 c7             	mov    %rax,%rdi
    b5b5:	e8 cc 06 00 00       	call   bc86 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b5ba:	c9                   	leave
    b5bb:	c3                   	ret

000000000000b5bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b5bc:	55                   	push   %rbp
    b5bd:	48 89 e5             	mov    %rsp,%rbp
    b5c0:	48 83 ec 20          	sub    $0x20,%rsp
    b5c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b5c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b5cc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b5d1:	74 40                	je     b613 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b5d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b5d7:	48 89 c7             	mov    %rax,%rdi
    b5da:	e8 08 07 00 00       	call   bce7 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b5df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b5e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5e7:	48 89 c7             	mov    %rax,%rdi
    b5ea:	e8 06 07 00 00       	call   bcf5 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b5ef:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b5f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b5f8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b5fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b604:	48 89 ce             	mov    %rcx,%rsi
    b607:	48 89 c7             	mov    %rax,%rdi
    b60a:	e8 0d 07 00 00       	call   bd1c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b60f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b617:	c9                   	leave
    b618:	c3                   	ret
    b619:	90                   	nop

000000000000b61a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b61a:	55                   	push   %rbp
    b61b:	48 89 e5             	mov    %rsp,%rbp
    b61e:	48 83 ec 10          	sub    $0x10,%rsp
    b622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b626:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b62a:	48 89 c7             	mov    %rax,%rdi
    b62d:	e8 2e 07 00 00       	call   bd60 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b632:	c9                   	leave
    b633:	c3                   	ret

000000000000b634 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b634:	55                   	push   %rbp
    b635:	48 89 e5             	mov    %rsp,%rbp
    b638:	48 83 ec 10          	sub    $0x10,%rsp
    b63c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b640:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b644:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b64c:	ba 00 00 00 00       	mov    $0x0,%edx
    b651:	48 89 ce             	mov    %rcx,%rsi
    b654:	48 89 c7             	mov    %rax,%rdi
    b657:	e8 18 07 00 00       	call   bd74 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b65c:	c9                   	leave
    b65d:	c3                   	ret

000000000000b65e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b65e:	55                   	push   %rbp
    b65f:	48 89 e5             	mov    %rsp,%rbp
    b662:	48 83 ec 20          	sub    $0x20,%rsp
    b666:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b66a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b66e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b673:	74 40                	je     b6b5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b675:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b679:	48 89 c7             	mov    %rax,%rdi
    b67c:	e8 c2 f9 ff ff       	call   b043 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b681:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b689:	48 89 c7             	mov    %rax,%rdi
    b68c:	e8 4d 07 00 00       	call   bdde <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b691:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b696:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b69a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b69e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b6a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6a6:	48 89 ce             	mov    %rcx,%rsi
    b6a9:	48 89 c7             	mov    %rax,%rdi
    b6ac:	e8 76 07 00 00       	call   be27 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b6b1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b6b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b6b9:	c9                   	leave
    b6ba:	c3                   	ret
    b6bb:	90                   	nop

000000000000b6bc <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b6bc:	55                   	push   %rbp
    b6bd:	48 89 e5             	mov    %rsp,%rbp
    b6c0:	48 83 ec 10          	sub    $0x10,%rsp
    b6c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6cc:	48 89 c7             	mov    %rax,%rdi
    b6cf:	e8 98 07 00 00       	call   be6c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b6d4:	c9                   	leave
    b6d5:	c3                   	ret

000000000000b6d6 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b6d6:	55                   	push   %rbp
    b6d7:	48 89 e5             	mov    %rsp,%rbp
    b6da:	48 83 ec 10          	sub    $0x10,%rsp
    b6de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b6e6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b6ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6ee:	ba 00 00 00 00       	mov    $0x0,%edx
    b6f3:	48 89 ce             	mov    %rcx,%rsi
    b6f6:	48 89 c7             	mov    %rax,%rdi
    b6f9:	e8 82 07 00 00       	call   be80 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b6fe:	c9                   	leave
    b6ff:	c3                   	ret

000000000000b700 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b700:	55                   	push   %rbp
    b701:	48 89 e5             	mov    %rsp,%rbp
    b704:	48 83 ec 20          	sub    $0x20,%rsp
    b708:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b70c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b714:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b718:	eb 1e                	jmp    b738 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b71a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b71e:	48 89 c7             	mov    %rax,%rdi
    b721:	e8 c5 07 00 00       	call   beeb <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b726:	48 89 c7             	mov    %rax,%rdi
    b729:	e8 cb 07 00 00       	call   bef9 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b72e:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b733:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b738:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b73d:	75 db                	jne    b71a <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b73f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b743:	c9                   	leave
    b744:	c3                   	ret
    b745:	90                   	nop

000000000000b746 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b746:	55                   	push   %rbp
    b747:	48 89 e5             	mov    %rsp,%rbp
    b74a:	48 83 ec 10          	sub    $0x10,%rsp
    b74e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b756:	48 89 c7             	mov    %rax,%rdi
    b759:	e8 c4 07 00 00       	call   bf22 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b75e:	c9                   	leave
    b75f:	c3                   	ret

000000000000b760 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b760:	55                   	push   %rbp
    b761:	48 89 e5             	mov    %rsp,%rbp
    b764:	48 83 ec 10          	sub    $0x10,%rsp
    b768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b76c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b770:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b778:	ba 00 00 00 00       	mov    $0x0,%edx
    b77d:	48 89 ce             	mov    %rcx,%rsi
    b780:	48 89 c7             	mov    %rax,%rdi
    b783:	e8 ae 07 00 00       	call   bf36 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b788:	c9                   	leave
    b789:	c3                   	ret

000000000000b78a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b78a:	55                   	push   %rbp
    b78b:	48 89 e5             	mov    %rsp,%rbp
    b78e:	48 83 ec 20          	sub    $0x20,%rsp
    b792:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b796:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b79a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b79f:	74 40                	je     b7e1 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b7a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7a5:	48 89 c7             	mov    %rax,%rdi
    b7a8:	e8 ea 07 00 00       	call   bf97 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b7ad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b7b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7b5:	48 89 c7             	mov    %rax,%rdi
    b7b8:	e8 e8 07 00 00       	call   bfa5 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b7bd:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b7c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b7c6:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b7ca:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b7ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7d2:	48 89 ce             	mov    %rcx,%rsi
    b7d5:	48 89 c7             	mov    %rax,%rdi
    b7d8:	e8 f5 07 00 00       	call   bfd2 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b7dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b7e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b7e5:	c9                   	leave
    b7e6:	c3                   	ret
    b7e7:	90                   	nop

000000000000b7e8 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b7e8:	55                   	push   %rbp
    b7e9:	48 89 e5             	mov    %rsp,%rbp
    b7ec:	48 83 ec 10          	sub    $0x10,%rsp
    b7f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b7f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7f8:	48 89 c7             	mov    %rax,%rdi
    b7fb:	e8 16 08 00 00       	call   c016 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b800:	c9                   	leave
    b801:	c3                   	ret

000000000000b802 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b802:	55                   	push   %rbp
    b803:	48 89 e5             	mov    %rsp,%rbp
    b806:	48 83 ec 10          	sub    $0x10,%rsp
    b80a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b80e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b812:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b816:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b81a:	ba 00 00 00 00       	mov    $0x0,%edx
    b81f:	48 89 ce             	mov    %rcx,%rsi
    b822:	48 89 c7             	mov    %rax,%rdi
    b825:	e8 00 08 00 00       	call   c02a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b82a:	c9                   	leave
    b82b:	c3                   	ret

000000000000b82c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b82c:	55                   	push   %rbp
    b82d:	48 89 e5             	mov    %rsp,%rbp
    b830:	48 83 ec 20          	sub    $0x20,%rsp
    b834:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b838:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b83c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b841:	74 40                	je     b883 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b847:	48 89 c7             	mov    %rax,%rdi
    b84a:	e8 3c 08 00 00       	call   c08b <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b84f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b857:	48 89 c7             	mov    %rax,%rdi
    b85a:	e8 3a 08 00 00       	call   c099 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b85f:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b864:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b868:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b86c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b874:	48 89 ce             	mov    %rcx,%rsi
    b877:	48 89 c7             	mov    %rax,%rdi
    b87a:	e8 40 08 00 00       	call   c0bf <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b87f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b883:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b887:	c9                   	leave
    b888:	c3                   	ret
    b889:	90                   	nop

000000000000b88a <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b88a:	55                   	push   %rbp
    b88b:	48 89 e5             	mov    %rsp,%rbp
    b88e:	48 83 ec 10          	sub    $0x10,%rsp
    b892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b89a:	48 89 c7             	mov    %rax,%rdi
    b89d:	e8 62 08 00 00       	call   c104 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b8a2:	c9                   	leave
    b8a3:	c3                   	ret

000000000000b8a4 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b8a4:	55                   	push   %rbp
    b8a5:	48 89 e5             	mov    %rsp,%rbp
    b8a8:	48 83 ec 10          	sub    $0x10,%rsp
    b8ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b8b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b8b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8bc:	ba 00 00 00 00       	mov    $0x0,%edx
    b8c1:	48 89 ce             	mov    %rcx,%rsi
    b8c4:	48 89 c7             	mov    %rax,%rdi
    b8c7:	e8 4c 08 00 00       	call   c118 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b8cc:	c9                   	leave
    b8cd:	c3                   	ret

000000000000b8ce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b8ce:	55                   	push   %rbp
    b8cf:	48 89 e5             	mov    %rsp,%rbp
    b8d2:	48 83 ec 20          	sub    $0x20,%rsp
    b8d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b8da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b8de:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b8e3:	74 40                	je     b925 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b8e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8e9:	48 89 c7             	mov    %rax,%rdi
    b8ec:	e8 88 08 00 00       	call   c179 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b8f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b8f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8f9:	48 89 c7             	mov    %rax,%rdi
    b8fc:	e8 86 08 00 00       	call   c187 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b901:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b906:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b90a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b90e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b912:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b916:	48 89 ce             	mov    %rcx,%rsi
    b919:	48 89 c7             	mov    %rax,%rdi
    b91c:	e8 8d 08 00 00       	call   c1ae <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b921:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b925:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b929:	c9                   	leave
    b92a:	c3                   	ret
    b92b:	90                   	nop

000000000000b92c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b92c:	55                   	push   %rbp
    b92d:	48 89 e5             	mov    %rsp,%rbp
    b930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b934:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b93b:	03 3f 00 
      }
    b93e:	5d                   	pop    %rbp
    b93f:	c3                   	ret

000000000000b940 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b940:	55                   	push   %rbp
    b941:	48 89 e5             	mov    %rsp,%rbp
    b944:	48 83 ec 20          	sub    $0x20,%rsp
    b948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b94c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b950:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b958:	48 89 c7             	mov    %rax,%rdi
    b95b:	e8 cc ff ff ff       	call   b92c <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b960:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b964:	0f 92 c0             	setb   %al
    b967:	0f b6 c0             	movzbl %al,%eax
    b96a:	48 85 c0             	test   %rax,%rax
    b96d:	0f 95 c0             	setne  %al
    b970:	84 c0                	test   %al,%al
    b972:	74 1a                	je     b98e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b974:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b97b:	07 7e 00 
    b97e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b982:	73 05                	jae    b989 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b984:	e8 27 89 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b989:	e8 72 87 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b98e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b992:	48 89 d0             	mov    %rdx,%rax
    b995:	48 c1 e0 06          	shl    $0x6,%rax
    b999:	48 01 d0             	add    %rdx,%rax
    b99c:	48 c1 e0 03          	shl    $0x3,%rax
    b9a0:	48 89 c7             	mov    %rax,%rdi
    b9a3:	e8 28 8a ff ff       	call   43d0 <_Znwm@plt>
    b9a8:	90                   	nop
      }
    b9a9:	c9                   	leave
    b9aa:	c3                   	ret

000000000000b9ab <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b9ab:	55                   	push   %rbp
    b9ac:	48 89 e5             	mov    %rsp,%rbp
    b9af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b9b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9b7:	5d                   	pop    %rbp
    b9b8:	c3                   	ret

000000000000b9b9 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b9b9:	55                   	push   %rbp
    b9ba:	48 89 e5             	mov    %rsp,%rbp
    b9bd:	48 83 ec 10          	sub    $0x10,%rsp
    b9c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9c9:	48 89 c6             	mov    %rax,%rsi
    b9cc:	bf 08 02 00 00       	mov    $0x208,%edi
    b9d1:	e8 63 96 ff ff       	call   5039 <_ZnwmPv>
    b9d6:	b9 08 02 00 00       	mov    $0x208,%ecx
    b9db:	be 00 00 00 00       	mov    $0x0,%esi
    b9e0:	48 89 30             	mov    %rsi,(%rax)
    b9e3:	89 ca                	mov    %ecx,%edx
    b9e5:	48 01 c2             	add    %rax,%rdx
    b9e8:	48 83 c2 08          	add    $0x8,%rdx
    b9ec:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b9f0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b9f4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b9f8:	48 29 d0             	sub    %rdx,%rax
    b9fb:	01 c1                	add    %eax,%ecx
    b9fd:	83 e1 f8             	and    $0xfffffff8,%ecx
    ba00:	89 c8                	mov    %ecx,%eax
    ba02:	c1 e8 03             	shr    $0x3,%eax
    ba05:	89 c1                	mov    %eax,%ecx
    ba07:	48 89 d7             	mov    %rdx,%rdi
    ba0a:	48 89 f0             	mov    %rsi,%rax
    ba0d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    ba10:	90                   	nop
    ba11:	c9                   	leave
    ba12:	c3                   	ret

000000000000ba13 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    ba13:	55                   	push   %rbp
    ba14:	48 89 e5             	mov    %rsp,%rbp
    ba17:	48 83 ec 20          	sub    $0x20,%rsp
    ba1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    ba27:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ba2b:	48 89 c7             	mov    %rax,%rdi
    ba2e:	e8 bf 07 00 00       	call   c1f2 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    ba33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba37:	48 89 c7             	mov    %rax,%rdi
    ba3a:	e8 0c 96 ff ff       	call   504b <_ZSt17__size_to_integerm>
    ba3f:	48 89 c1             	mov    %rax,%rcx
    ba42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba46:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba4a:	48 89 ce             	mov    %rcx,%rsi
    ba4d:	48 89 c7             	mov    %rax,%rdi
    ba50:	e8 a8 07 00 00       	call   c1fd <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ba55:	c9                   	leave
    ba56:	c3                   	ret
    ba57:	90                   	nop

000000000000ba58 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba58:	55                   	push   %rbp
    ba59:	48 89 e5             	mov    %rsp,%rbp
    ba5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba60:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    ba67:	07 7e 00 
      }
    ba6a:	5d                   	pop    %rbp
    ba6b:	c3                   	ret

000000000000ba6c <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba6c:	55                   	push   %rbp
    ba6d:	48 89 e5             	mov    %rsp,%rbp
    ba70:	48 83 ec 20          	sub    $0x20,%rsp
    ba74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba7c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba84:	48 89 c7             	mov    %rax,%rdi
    ba87:	e8 cc ff ff ff       	call   ba58 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    ba8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba90:	0f 92 c0             	setb   %al
    ba93:	0f b6 c0             	movzbl %al,%eax
    ba96:	48 85 c0             	test   %rax,%rax
    ba99:	0f 95 c0             	setne  %al
    ba9c:	84 c0                	test   %al,%al
    ba9e:	74 1a                	je     baba <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    baa0:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    baa7:	0f fc 00 
    baaa:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    baae:	73 05                	jae    bab5 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bab0:	e8 fb 87 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bab5:	e8 46 86 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    baba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    babe:	48 89 d0             	mov    %rdx,%rax
    bac1:	48 c1 e0 06          	shl    $0x6,%rax
    bac5:	48 01 d0             	add    %rdx,%rax
    bac8:	48 c1 e0 02          	shl    $0x2,%rax
    bacc:	48 89 c7             	mov    %rax,%rdi
    bacf:	e8 fc 88 ff ff       	call   43d0 <_Znwm@plt>
    bad4:	90                   	nop
      }
    bad5:	c9                   	leave
    bad6:	c3                   	ret

000000000000bad7 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bad7:	55                   	push   %rbp
    bad8:	48 89 e5             	mov    %rsp,%rbp
    badb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    badf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bae3:	5d                   	pop    %rbp
    bae4:	c3                   	ret

000000000000bae5 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bae5:	55                   	push   %rbp
    bae6:	48 89 e5             	mov    %rsp,%rbp
    bae9:	48 83 ec 10          	sub    $0x10,%rsp
    baed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    baf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baf5:	48 89 c6             	mov    %rax,%rsi
    baf8:	bf 04 01 00 00       	mov    $0x104,%edi
    bafd:	e8 37 95 ff ff       	call   5039 <_ZnwmPv>
    bb02:	b9 04 01 00 00       	mov    $0x104,%ecx
    bb07:	be 00 00 00 00       	mov    $0x0,%esi
    bb0c:	48 89 30             	mov    %rsi,(%rax)
    bb0f:	89 ca                	mov    %ecx,%edx
    bb11:	48 01 c2             	add    %rax,%rdx
    bb14:	48 83 c2 08          	add    $0x8,%rdx
    bb18:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    bb1c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bb20:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    bb24:	48 29 d0             	sub    %rdx,%rax
    bb27:	01 c1                	add    %eax,%ecx
    bb29:	83 e1 f8             	and    $0xfffffff8,%ecx
    bb2c:	89 c8                	mov    %ecx,%eax
    bb2e:	c1 e8 03             	shr    $0x3,%eax
    bb31:	89 c1                	mov    %eax,%ecx
    bb33:	48 89 d7             	mov    %rdx,%rdi
    bb36:	48 89 f0             	mov    %rsi,%rax
    bb39:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    bb3c:	90                   	nop
    bb3d:	c9                   	leave
    bb3e:	c3                   	ret

000000000000bb3f <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb3f:	55                   	push   %rbp
    bb40:	48 89 e5             	mov    %rsp,%rbp
    bb43:	48 83 ec 20          	sub    $0x20,%rsp
    bb47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb4b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb4f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb53:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb57:	48 89 c7             	mov    %rax,%rdi
    bb5a:	e8 0d 07 00 00       	call   c26c <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bb5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb63:	48 89 c7             	mov    %rax,%rdi
    bb66:	e8 e0 94 ff ff       	call   504b <_ZSt17__size_to_integerm>
    bb6b:	48 89 c1             	mov    %rax,%rcx
    bb6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb72:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb76:	48 89 ce             	mov    %rcx,%rsi
    bb79:	48 89 c7             	mov    %rax,%rdi
    bb7c:	e8 f6 06 00 00       	call   c277 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bb81:	c9                   	leave
    bb82:	c3                   	ret
    bb83:	90                   	nop

000000000000bb84 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bb84:	55                   	push   %rbp
    bb85:	48 89 e5             	mov    %rsp,%rbp
    bb88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bb8c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bb93:	ff ff 0f 
      }
    bb96:	5d                   	pop    %rbp
    bb97:	c3                   	ret

000000000000bb98 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb98:	55                   	push   %rbp
    bb99:	48 89 e5             	mov    %rsp,%rbp
    bb9c:	48 83 ec 20          	sub    $0x20,%rsp
    bba0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bba4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bba8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb0:	48 89 c7             	mov    %rax,%rdi
    bbb3:	e8 cc ff ff ff       	call   bb84 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    bbb8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbbc:	0f 92 c0             	setb   %al
    bbbf:	0f b6 c0             	movzbl %al,%eax
    bbc2:	48 85 c0             	test   %rax,%rax
    bbc5:	0f 95 c0             	setne  %al
    bbc8:	84 c0                	test   %al,%al
    bbca:	74 1a                	je     bbe6 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bbcc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bbd3:	ff ff 1f 
    bbd6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bbda:	73 05                	jae    bbe1 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bbdc:	e8 cf 86 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bbe1:	e8 1a 85 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bbe6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbea:	48 c1 e0 03          	shl    $0x3,%rax
    bbee:	48 89 c7             	mov    %rax,%rdi
    bbf1:	e8 da 87 ff ff       	call   43d0 <_Znwm@plt>
    bbf6:	90                   	nop
      }
    bbf7:	c9                   	leave
    bbf8:	c3                   	ret

000000000000bbf9 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bbf9:	55                   	push   %rbp
    bbfa:	48 89 e5             	mov    %rsp,%rbp
    bbfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc05:	5d                   	pop    %rbp
    bc06:	c3                   	ret

000000000000bc07 <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc07:	55                   	push   %rbp
    bc08:	48 89 e5             	mov    %rsp,%rbp
    bc0b:	48 83 ec 10          	sub    $0x10,%rsp
    bc0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc17:	48 89 c6             	mov    %rax,%rsi
    bc1a:	bf 08 00 00 00       	mov    $0x8,%edi
    bc1f:	e8 15 94 ff ff       	call   5039 <_ZnwmPv>
    bc24:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bc2b:	90                   	nop
    bc2c:	c9                   	leave
    bc2d:	c3                   	ret

000000000000bc2e <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc2e:	55                   	push   %rbp
    bc2f:	48 89 e5             	mov    %rsp,%rbp
    bc32:	48 83 ec 20          	sub    $0x20,%rsp
    bc36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc42:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc46:	48 89 c7             	mov    %rax,%rdi
    bc49:	e8 98 06 00 00       	call   c2e6 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc52:	48 89 c7             	mov    %rax,%rdi
    bc55:	e8 f1 93 ff ff       	call   504b <_ZSt17__size_to_integerm>
    bc5a:	48 89 c1             	mov    %rax,%rcx
    bc5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc65:	48 89 ce             	mov    %rcx,%rsi
    bc68:	48 89 c7             	mov    %rax,%rdi
    bc6b:	e8 81 06 00 00       	call   c2f1 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bc70:	c9                   	leave
    bc71:	c3                   	ret

000000000000bc72 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bc72:	55                   	push   %rbp
    bc73:	48 89 e5             	mov    %rsp,%rbp
    bc76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bc7a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bc81:	ff ff 0f 
      }
    bc84:	5d                   	pop    %rbp
    bc85:	c3                   	ret

000000000000bc86 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bc86:	55                   	push   %rbp
    bc87:	48 89 e5             	mov    %rsp,%rbp
    bc8a:	48 83 ec 20          	sub    $0x20,%rsp
    bc8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bc9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc9e:	48 89 c7             	mov    %rax,%rdi
    bca1:	e8 cc ff ff ff       	call   bc72 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    bca6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcaa:	0f 92 c0             	setb   %al
    bcad:	0f b6 c0             	movzbl %al,%eax
    bcb0:	48 85 c0             	test   %rax,%rax
    bcb3:	0f 95 c0             	setne  %al
    bcb6:	84 c0                	test   %al,%al
    bcb8:	74 1a                	je     bcd4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bcba:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bcc1:	ff ff 1f 
    bcc4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcc8:	73 05                	jae    bccf <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bcca:	e8 e1 85 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bccf:	e8 2c 84 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bcd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bcd8:	48 c1 e0 03          	shl    $0x3,%rax
    bcdc:	48 89 c7             	mov    %rax,%rdi
    bcdf:	e8 ec 86 ff ff       	call   43d0 <_Znwm@plt>
    bce4:	90                   	nop
      }
    bce5:	c9                   	leave
    bce6:	c3                   	ret

000000000000bce7 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bce7:	55                   	push   %rbp
    bce8:	48 89 e5             	mov    %rsp,%rbp
    bceb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bcef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf3:	5d                   	pop    %rbp
    bcf4:	c3                   	ret

000000000000bcf5 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bcf5:	55                   	push   %rbp
    bcf6:	48 89 e5             	mov    %rsp,%rbp
    bcf9:	48 83 ec 10          	sub    $0x10,%rsp
    bcfd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd05:	48 89 c6             	mov    %rax,%rsi
    bd08:	bf 08 00 00 00       	mov    $0x8,%edi
    bd0d:	e8 27 93 ff ff       	call   5039 <_ZnwmPv>
    bd12:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bd19:	90                   	nop
    bd1a:	c9                   	leave
    bd1b:	c3                   	ret

000000000000bd1c <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd1c:	55                   	push   %rbp
    bd1d:	48 89 e5             	mov    %rsp,%rbp
    bd20:	48 83 ec 20          	sub    $0x20,%rsp
    bd24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd34:	48 89 c7             	mov    %rax,%rdi
    bd37:	e8 12 06 00 00       	call   c34e <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd40:	48 89 c7             	mov    %rax,%rdi
    bd43:	e8 03 93 ff ff       	call   504b <_ZSt17__size_to_integerm>
    bd48:	48 89 c1             	mov    %rax,%rcx
    bd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd53:	48 89 ce             	mov    %rcx,%rsi
    bd56:	48 89 c7             	mov    %rax,%rdi
    bd59:	e8 fb 05 00 00       	call   c359 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bd5e:	c9                   	leave
    bd5f:	c3                   	ret

000000000000bd60 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bd60:	55                   	push   %rbp
    bd61:	48 89 e5             	mov    %rsp,%rbp
    bd64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bd68:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    bd6f:	55 55 05 
      }
    bd72:	5d                   	pop    %rbp
    bd73:	c3                   	ret

000000000000bd74 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bd74:	55                   	push   %rbp
    bd75:	48 89 e5             	mov    %rsp,%rbp
    bd78:	48 83 ec 20          	sub    $0x20,%rsp
    bd7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd84:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bd88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd8c:	48 89 c7             	mov    %rax,%rdi
    bd8f:	e8 cc ff ff ff       	call   bd60 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    bd94:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd98:	0f 92 c0             	setb   %al
    bd9b:	0f b6 c0             	movzbl %al,%eax
    bd9e:	48 85 c0             	test   %rax,%rax
    bda1:	0f 95 c0             	setne  %al
    bda4:	84 c0                	test   %al,%al
    bda6:	74 1a                	je     bdc2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bda8:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    bdaf:	aa aa 0a 
    bdb2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bdb6:	73 05                	jae    bdbd <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bdb8:	e8 f3 84 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bdbd:	e8 3e 83 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bdc2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdc6:	48 89 d0             	mov    %rdx,%rax
    bdc9:	48 01 c0             	add    %rax,%rax
    bdcc:	48 01 d0             	add    %rdx,%rax
    bdcf:	48 c1 e0 03          	shl    $0x3,%rax
    bdd3:	48 89 c7             	mov    %rax,%rdi
    bdd6:	e8 f5 85 ff ff       	call   43d0 <_Znwm@plt>
    bddb:	90                   	nop
      }
    bddc:	c9                   	leave
    bddd:	c3                   	ret

000000000000bdde <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bdde:	55                   	push   %rbp
    bddf:	48 89 e5             	mov    %rsp,%rbp
    bde2:	48 83 ec 10          	sub    $0x10,%rsp
    bde6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bdea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdee:	48 89 c6             	mov    %rax,%rsi
    bdf1:	bf 18 00 00 00       	mov    $0x18,%edi
    bdf6:	e8 3e 92 ff ff       	call   5039 <_ZnwmPv>
    bdfb:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    be01:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    be08:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    be0f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    be16:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    be1d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    be24:	90                   	nop
    be25:	c9                   	leave
    be26:	c3                   	ret

000000000000be27 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    be27:	55                   	push   %rbp
    be28:	48 89 e5             	mov    %rsp,%rbp
    be2b:	48 83 ec 20          	sub    $0x20,%rsp
    be2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be33:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be37:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    be3b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    be3f:	48 89 c7             	mov    %rax,%rdi
    be42:	e8 6f 05 00 00       	call   c3b6 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    be47:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be4b:	48 89 c7             	mov    %rax,%rdi
    be4e:	e8 f8 91 ff ff       	call   504b <_ZSt17__size_to_integerm>
    be53:	48 89 c1             	mov    %rax,%rcx
    be56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be5a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be5e:	48 89 ce             	mov    %rcx,%rsi
    be61:	48 89 c7             	mov    %rax,%rdi
    be64:	e8 58 05 00 00       	call   c3c1 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    be69:	c9                   	leave
    be6a:	c3                   	ret
    be6b:	90                   	nop

000000000000be6c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    be6c:	55                   	push   %rbp
    be6d:	48 89 e5             	mov    %rsp,%rbp
    be70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    be74:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    be7b:	49 92 04 
      }
    be7e:	5d                   	pop    %rbp
    be7f:	c3                   	ret

000000000000be80 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    be80:	55                   	push   %rbp
    be81:	48 89 e5             	mov    %rsp,%rbp
    be84:	48 83 ec 20          	sub    $0x20,%rsp
    be88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    be94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be98:	48 89 c7             	mov    %rax,%rdi
    be9b:	e8 cc ff ff ff       	call   be6c <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    bea0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bea4:	0f 92 c0             	setb   %al
    bea7:	0f b6 c0             	movzbl %al,%eax
    beaa:	48 85 c0             	test   %rax,%rax
    bead:	0f 95 c0             	setne  %al
    beb0:	84 c0                	test   %al,%al
    beb2:	74 1a                	je     bece <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    beb4:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    bebb:	92 24 09 
    bebe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bec2:	73 05                	jae    bec9 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bec4:	e8 e7 83 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bec9:	e8 32 82 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bece:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bed2:	48 89 d0             	mov    %rdx,%rax
    bed5:	48 c1 e0 03          	shl    $0x3,%rax
    bed9:	48 29 d0             	sub    %rdx,%rax
    bedc:	48 c1 e0 02          	shl    $0x2,%rax
    bee0:	48 89 c7             	mov    %rax,%rdi
    bee3:	e8 e8 84 ff ff       	call   43d0 <_Znwm@plt>
    bee8:	90                   	nop
      }
    bee9:	c9                   	leave
    beea:	c3                   	ret

000000000000beeb <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    beeb:	55                   	push   %rbp
    beec:	48 89 e5             	mov    %rsp,%rbp
    beef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bef7:	5d                   	pop    %rbp
    bef8:	c3                   	ret

000000000000bef9 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bef9:	55                   	push   %rbp
    befa:	48 89 e5             	mov    %rsp,%rbp
    befd:	48 83 ec 10          	sub    $0x10,%rsp
    bf01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bf05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf09:	48 89 c6             	mov    %rax,%rsi
    bf0c:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bf11:	e8 23 91 ff ff       	call   5039 <_ZnwmPv>
    bf16:	48 89 c7             	mov    %rax,%rdi
    bf19:	e8 6c 05 00 00       	call   c48a <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bf1e:	90                   	nop
    bf1f:	c9                   	leave
    bf20:	c3                   	ret
    bf21:	90                   	nop

000000000000bf22 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bf22:	55                   	push   %rbp
    bf23:	48 89 e5             	mov    %rsp,%rbp
    bf26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bf2a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bf31:	ff ff 0f 
      }
    bf34:	5d                   	pop    %rbp
    bf35:	c3                   	ret

000000000000bf36 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bf36:	55                   	push   %rbp
    bf37:	48 89 e5             	mov    %rsp,%rbp
    bf3a:	48 83 ec 20          	sub    $0x20,%rsp
    bf3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf46:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bf4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4e:	48 89 c7             	mov    %rax,%rdi
    bf51:	e8 cc ff ff ff       	call   bf22 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bf56:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf5a:	0f 92 c0             	setb   %al
    bf5d:	0f b6 c0             	movzbl %al,%eax
    bf60:	48 85 c0             	test   %rax,%rax
    bf63:	0f 95 c0             	setne  %al
    bf66:	84 c0                	test   %al,%al
    bf68:	74 1a                	je     bf84 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bf6a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bf71:	ff ff 1f 
    bf74:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bf78:	73 05                	jae    bf7f <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bf7a:	e8 31 83 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bf7f:	e8 7c 81 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bf84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf88:	48 c1 e0 03          	shl    $0x3,%rax
    bf8c:	48 89 c7             	mov    %rax,%rdi
    bf8f:	e8 3c 84 ff ff       	call   43d0 <_Znwm@plt>
    bf94:	90                   	nop
      }
    bf95:	c9                   	leave
    bf96:	c3                   	ret

000000000000bf97 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bf97:	55                   	push   %rbp
    bf98:	48 89 e5             	mov    %rsp,%rbp
    bf9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bf9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfa3:	5d                   	pop    %rbp
    bfa4:	c3                   	ret

000000000000bfa5 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bfa5:	55                   	push   %rbp
    bfa6:	48 89 e5             	mov    %rsp,%rbp
    bfa9:	48 83 ec 10          	sub    $0x10,%rsp
    bfad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bfb1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfb5:	48 89 c6             	mov    %rax,%rsi
    bfb8:	bf 08 00 00 00       	mov    $0x8,%edi
    bfbd:	e8 77 90 ff ff       	call   5039 <_ZnwmPv>
    bfc2:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bfc8:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bfcf:	90                   	nop
    bfd0:	c9                   	leave
    bfd1:	c3                   	ret

000000000000bfd2 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bfd2:	55                   	push   %rbp
    bfd3:	48 89 e5             	mov    %rsp,%rbp
    bfd6:	48 83 ec 20          	sub    $0x20,%rsp
    bfda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bfe2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bfe6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfea:	48 89 c7             	mov    %rax,%rdi
    bfed:	e8 b3 04 00 00       	call   c4a5 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bff2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bff6:	48 89 c7             	mov    %rax,%rdi
    bff9:	e8 4d 90 ff ff       	call   504b <_ZSt17__size_to_integerm>
    bffe:	48 89 c1             	mov    %rax,%rcx
    c001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c005:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c009:	48 89 ce             	mov    %rcx,%rsi
    c00c:	48 89 c7             	mov    %rax,%rdi
    c00f:	e8 9c 04 00 00       	call   c4b0 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c014:	c9                   	leave
    c015:	c3                   	ret

000000000000c016 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c016:	55                   	push   %rbp
    c017:	48 89 e5             	mov    %rsp,%rbp
    c01a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c01e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c025:	ff ff 1f 
      }
    c028:	5d                   	pop    %rbp
    c029:	c3                   	ret

000000000000c02a <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c02a:	55                   	push   %rbp
    c02b:	48 89 e5             	mov    %rsp,%rbp
    c02e:	48 83 ec 20          	sub    $0x20,%rsp
    c032:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c036:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c03a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c03e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c042:	48 89 c7             	mov    %rax,%rdi
    c045:	e8 cc ff ff ff       	call   c016 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    c04a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c04e:	0f 92 c0             	setb   %al
    c051:	0f b6 c0             	movzbl %al,%eax
    c054:	48 85 c0             	test   %rax,%rax
    c057:	0f 95 c0             	setne  %al
    c05a:	84 c0                	test   %al,%al
    c05c:	74 1a                	je     c078 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c05e:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    c065:	ff ff 3f 
    c068:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c06c:	73 05                	jae    c073 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c06e:	e8 3d 82 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c073:	e8 88 80 ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c07c:	48 c1 e0 02          	shl    $0x2,%rax
    c080:	48 89 c7             	mov    %rax,%rdi
    c083:	e8 48 83 ff ff       	call   43d0 <_Znwm@plt>
    c088:	90                   	nop
      }
    c089:	c9                   	leave
    c08a:	c3                   	ret

000000000000c08b <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c08b:	55                   	push   %rbp
    c08c:	48 89 e5             	mov    %rsp,%rbp
    c08f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c093:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c097:	5d                   	pop    %rbp
    c098:	c3                   	ret

000000000000c099 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c099:	55                   	push   %rbp
    c09a:	48 89 e5             	mov    %rsp,%rbp
    c09d:	48 83 ec 10          	sub    $0x10,%rsp
    c0a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c0a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a9:	48 89 c6             	mov    %rax,%rsi
    c0ac:	bf 04 00 00 00       	mov    $0x4,%edi
    c0b1:	e8 83 8f ff ff       	call   5039 <_ZnwmPv>
    c0b6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    c0bc:	90                   	nop
    c0bd:	c9                   	leave
    c0be:	c3                   	ret

000000000000c0bf <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c0bf:	55                   	push   %rbp
    c0c0:	48 89 e5             	mov    %rsp,%rbp
    c0c3:	48 83 ec 20          	sub    $0x20,%rsp
    c0c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c0d3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c0d7:	48 89 c7             	mov    %rax,%rdi
    c0da:	e8 2e 04 00 00       	call   c50d <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c0df:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0e3:	48 89 c7             	mov    %rax,%rdi
    c0e6:	e8 60 8f ff ff       	call   504b <_ZSt17__size_to_integerm>
    c0eb:	48 89 c1             	mov    %rax,%rcx
    c0ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0f2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f6:	48 89 ce             	mov    %rcx,%rsi
    c0f9:	48 89 c7             	mov    %rax,%rdi
    c0fc:	e8 17 04 00 00       	call   c518 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    c101:	c9                   	leave
    c102:	c3                   	ret
    c103:	90                   	nop

000000000000c104 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    c104:	55                   	push   %rbp
    c105:	48 89 e5             	mov    %rsp,%rbp
    c108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    c10c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    c113:	ff ff 0f 
      }
    c116:	5d                   	pop    %rbp
    c117:	c3                   	ret

000000000000c118 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    c118:	55                   	push   %rbp
    c119:	48 89 e5             	mov    %rsp,%rbp
    c11c:	48 83 ec 20          	sub    $0x20,%rsp
    c120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c124:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c128:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    c12c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c130:	48 89 c7             	mov    %rax,%rdi
    c133:	e8 cc ff ff ff       	call   c104 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    c138:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c13c:	0f 92 c0             	setb   %al
    c13f:	0f b6 c0             	movzbl %al,%eax
    c142:	48 85 c0             	test   %rax,%rax
    c145:	0f 95 c0             	setne  %al
    c148:	84 c0                	test   %al,%al
    c14a:	74 1a                	je     c166 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    c14c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    c153:	ff ff 1f 
    c156:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c15a:	73 05                	jae    c161 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    c15c:	e8 4f 81 ff ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    c161:	e8 9a 7f ff ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    c166:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c16a:	48 c1 e0 03          	shl    $0x3,%rax
    c16e:	48 89 c7             	mov    %rax,%rdi
    c171:	e8 5a 82 ff ff       	call   43d0 <_Znwm@plt>
    c176:	90                   	nop
      }
    c177:	c9                   	leave
    c178:	c3                   	ret

000000000000c179 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    c179:	55                   	push   %rbp
    c17a:	48 89 e5             	mov    %rsp,%rbp
    c17d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    c181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c185:	5d                   	pop    %rbp
    c186:	c3                   	ret

000000000000c187 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    c187:	55                   	push   %rbp
    c188:	48 89 e5             	mov    %rsp,%rbp
    c18b:	48 83 ec 10          	sub    $0x10,%rsp
    c18f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    c193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c197:	48 89 c6             	mov    %rax,%rsi
    c19a:	bf 08 00 00 00       	mov    $0x8,%edi
    c19f:	e8 95 8e ff ff       	call   5039 <_ZnwmPv>
    c1a4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    c1ab:	90                   	nop
    c1ac:	c9                   	leave
    c1ad:	c3                   	ret

000000000000c1ae <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    c1ae:	55                   	push   %rbp
    c1af:	48 89 e5             	mov    %rsp,%rbp
    c1b2:	48 83 ec 20          	sub    $0x20,%rsp
    c1b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    c1c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c1c6:	48 89 c7             	mov    %rax,%rdi
    c1c9:	e8 a7 03 00 00       	call   c575 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    c1ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c1d2:	48 89 c7             	mov    %rax,%rdi
    c1d5:	e8 71 8e ff ff       	call   504b <_ZSt17__size_to_integerm>
    c1da:	48 89 c1             	mov    %rax,%rcx
    c1dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1e5:	48 89 ce             	mov    %rcx,%rsi
    c1e8:	48 89 c7             	mov    %rax,%rdi
    c1eb:	e8 90 03 00 00       	call   c580 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    c1f0:	c9                   	leave
    c1f1:	c3                   	ret

000000000000c1f2 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c1f2:	55                   	push   %rbp
    c1f3:	48 89 e5             	mov    %rsp,%rbp
    c1f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c1fa:	90                   	nop
    c1fb:	5d                   	pop    %rbp
    c1fc:	c3                   	ret

000000000000c1fd <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c1fd:	55                   	push   %rbp
    c1fe:	48 89 e5             	mov    %rsp,%rbp
    c201:	48 83 ec 20          	sub    $0x20,%rsp
    c205:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c209:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c20d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c211:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c216:	75 06                	jne    c21e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c21c:	eb 4c                	jmp    c26a <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c21e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c222:	48 89 d0             	mov    %rdx,%rax
    c225:	48 c1 e0 06          	shl    $0x6,%rax
    c229:	48 01 d0             	add    %rdx,%rax
    c22c:	48 c1 e0 03          	shl    $0x3,%rax
    c230:	48 89 c2             	mov    %rax,%rdx
    c233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c237:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c23b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c23f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c243:	48 89 ce             	mov    %rcx,%rsi
    c246:	48 89 c7             	mov    %rax,%rdi
    c249:	e8 8f 03 00 00       	call   c5dd <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c24e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c252:	48 89 d0             	mov    %rdx,%rax
    c255:	48 c1 e0 06          	shl    $0x6,%rax
    c259:	48 01 d0             	add    %rdx,%rax
    c25c:	48 c1 e0 03          	shl    $0x3,%rax
    c260:	48 89 c2             	mov    %rax,%rdx
    c263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c267:	48 01 d0             	add    %rdx,%rax
    }
    c26a:	c9                   	leave
    c26b:	c3                   	ret

000000000000c26c <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c26c:	55                   	push   %rbp
    c26d:	48 89 e5             	mov    %rsp,%rbp
    c270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c274:	90                   	nop
    c275:	5d                   	pop    %rbp
    c276:	c3                   	ret

000000000000c277 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c277:	55                   	push   %rbp
    c278:	48 89 e5             	mov    %rsp,%rbp
    c27b:	48 83 ec 20          	sub    $0x20,%rsp
    c27f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c283:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c287:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c28b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c290:	75 06                	jne    c298 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c292:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c296:	eb 4c                	jmp    c2e4 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    c298:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c29c:	48 89 d0             	mov    %rdx,%rax
    c29f:	48 c1 e0 06          	shl    $0x6,%rax
    c2a3:	48 01 d0             	add    %rdx,%rax
    c2a6:	48 c1 e0 02          	shl    $0x2,%rax
    c2aa:	48 89 c2             	mov    %rax,%rdx
    c2ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2b1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c2b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2bd:	48 89 ce             	mov    %rcx,%rsi
    c2c0:	48 89 c7             	mov    %rax,%rdi
    c2c3:	e8 43 03 00 00       	call   c60b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c2c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c2cc:	48 89 d0             	mov    %rdx,%rax
    c2cf:	48 c1 e0 06          	shl    $0x6,%rax
    c2d3:	48 01 d0             	add    %rdx,%rax
    c2d6:	48 c1 e0 02          	shl    $0x2,%rax
    c2da:	48 89 c2             	mov    %rax,%rdx
    c2dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e1:	48 01 d0             	add    %rdx,%rax
    }
    c2e4:	c9                   	leave
    c2e5:	c3                   	ret

000000000000c2e6 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c2e6:	55                   	push   %rbp
    c2e7:	48 89 e5             	mov    %rsp,%rbp
    c2ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c2ee:	90                   	nop
    c2ef:	5d                   	pop    %rbp
    c2f0:	c3                   	ret

000000000000c2f1 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c2f1:	55                   	push   %rbp
    c2f2:	48 89 e5             	mov    %rsp,%rbp
    c2f5:	48 83 ec 20          	sub    $0x20,%rsp
    c2f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c301:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c305:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c30a:	75 06                	jne    c312 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c310:	eb 3a                	jmp    c34c <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c312:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c316:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c31d:	00 
    c31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c322:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c326:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c32a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c32e:	48 89 ce             	mov    %rcx,%rsi
    c331:	48 89 c7             	mov    %rax,%rdi
    c334:	e8 00 03 00 00       	call   c639 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    c339:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c33d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c344:	00 
    c345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c349:	48 01 d0             	add    %rdx,%rax
    }
    c34c:	c9                   	leave
    c34d:	c3                   	ret

000000000000c34e <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c34e:	55                   	push   %rbp
    c34f:	48 89 e5             	mov    %rsp,%rbp
    c352:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c356:	90                   	nop
    c357:	5d                   	pop    %rbp
    c358:	c3                   	ret

000000000000c359 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c359:	55                   	push   %rbp
    c35a:	48 89 e5             	mov    %rsp,%rbp
    c35d:	48 83 ec 20          	sub    $0x20,%rsp
    c361:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c365:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c369:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c36d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c372:	75 06                	jne    c37a <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c378:	eb 3a                	jmp    c3b4 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c37a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c37e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c385:	00 
    c386:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c38a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c38e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c396:	48 89 ce             	mov    %rcx,%rsi
    c399:	48 89 c7             	mov    %rax,%rdi
    c39c:	e8 c6 02 00 00       	call   c667 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c3a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c3a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c3ac:	00 
    c3ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3b1:	48 01 d0             	add    %rdx,%rax
    }
    c3b4:	c9                   	leave
    c3b5:	c3                   	ret

000000000000c3b6 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c3b6:	55                   	push   %rbp
    c3b7:	48 89 e5             	mov    %rsp,%rbp
    c3ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c3be:	90                   	nop
    c3bf:	5d                   	pop    %rbp
    c3c0:	c3                   	ret

000000000000c3c1 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c3c1:	55                   	push   %rbp
    c3c2:	48 89 e5             	mov    %rsp,%rbp
    c3c5:	48 83 ec 20          	sub    $0x20,%rsp
    c3c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c3d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c3d5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c3da:	75 06                	jne    c3e2 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c3dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3e0:	eb 4a                	jmp    c42c <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    c3e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c3e6:	48 89 d0             	mov    %rdx,%rax
    c3e9:	48 01 c0             	add    %rax,%rax
    c3ec:	48 01 d0             	add    %rdx,%rax
    c3ef:	48 c1 e0 03          	shl    $0x3,%rax
    c3f3:	48 89 c2             	mov    %rax,%rdx
    c3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3fa:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c3fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c406:	48 89 ce             	mov    %rcx,%rsi
    c409:	48 89 c7             	mov    %rax,%rdi
    c40c:	e8 84 02 00 00       	call   c695 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    c411:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c415:	48 89 d0             	mov    %rdx,%rax
    c418:	48 01 c0             	add    %rax,%rax
    c41b:	48 01 d0             	add    %rdx,%rax
    c41e:	48 c1 e0 03          	shl    $0x3,%rax
    c422:	48 89 c2             	mov    %rax,%rdx
    c425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c429:	48 01 d0             	add    %rdx,%rax
    }
    c42c:	c9                   	leave
    c42d:	c3                   	ret

000000000000c42e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    c42e:	55                   	push   %rbp
    c42f:	48 89 e5             	mov    %rsp,%rbp
    c432:	48 83 ec 10          	sub    $0x10,%rsp
    c436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c43a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c43e:	48 89 c7             	mov    %rax,%rdi
    c441:	e8 7e 02 00 00       	call   c6c4 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    c446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c44a:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c44e:	90                   	nop
    c44f:	c9                   	leave
    c450:	c3                   	ret
    c451:	90                   	nop

000000000000c452 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c452:	55                   	push   %rbp
    c453:	48 89 e5             	mov    %rsp,%rbp
    c456:	48 83 ec 10          	sub    $0x10,%rsp
    c45a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c462:	48 89 c7             	mov    %rax,%rdi
    c465:	e8 c4 ff ff ff       	call   c42e <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c46a:	90                   	nop
    c46b:	c9                   	leave
    c46c:	c3                   	ret
    c46d:	90                   	nop

000000000000c46e <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c46e:	55                   	push   %rbp
    c46f:	48 89 e5             	mov    %rsp,%rbp
    c472:	48 83 ec 10          	sub    $0x10,%rsp
    c476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c47a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c47e:	48 89 c7             	mov    %rax,%rdi
    c481:	e8 cc ff ff ff       	call   c452 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c486:	90                   	nop
    c487:	c9                   	leave
    c488:	c3                   	ret
    c489:	90                   	nop

000000000000c48a <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c48a:	55                   	push   %rbp
    c48b:	48 89 e5             	mov    %rsp,%rbp
    c48e:	48 83 ec 10          	sub    $0x10,%rsp
    c492:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c49a:	48 89 c7             	mov    %rax,%rdi
    c49d:	e8 cc ff ff ff       	call   c46e <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c4a2:	90                   	nop
    c4a3:	c9                   	leave
    c4a4:	c3                   	ret

000000000000c4a5 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c4a5:	55                   	push   %rbp
    c4a6:	48 89 e5             	mov    %rsp,%rbp
    c4a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c4ad:	90                   	nop
    c4ae:	5d                   	pop    %rbp
    c4af:	c3                   	ret

000000000000c4b0 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c4b0:	55                   	push   %rbp
    c4b1:	48 89 e5             	mov    %rsp,%rbp
    c4b4:	48 83 ec 20          	sub    $0x20,%rsp
    c4b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c4c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c4c9:	75 06                	jne    c4d1 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c4cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4cf:	eb 3a                	jmp    c50b <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c4d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4d5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c4dc:	00 
    c4dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4e1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c4e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ed:	48 89 ce             	mov    %rcx,%rsi
    c4f0:	48 89 c7             	mov    %rax,%rdi
    c4f3:	e8 d7 01 00 00       	call   c6cf <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c4f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c4fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c503:	00 
    c504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c508:	48 01 d0             	add    %rdx,%rax
    }
    c50b:	c9                   	leave
    c50c:	c3                   	ret

000000000000c50d <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c50d:	55                   	push   %rbp
    c50e:	48 89 e5             	mov    %rsp,%rbp
    c511:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c515:	90                   	nop
    c516:	5d                   	pop    %rbp
    c517:	c3                   	ret

000000000000c518 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c518:	55                   	push   %rbp
    c519:	48 89 e5             	mov    %rsp,%rbp
    c51c:	48 83 ec 20          	sub    $0x20,%rsp
    c520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c524:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c528:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c52c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c531:	75 06                	jne    c539 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c537:	eb 3a                	jmp    c573 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c539:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c53d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c544:	00 
    c545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c549:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c54d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c555:	48 89 ce             	mov    %rcx,%rsi
    c558:	48 89 c7             	mov    %rax,%rdi
    c55b:	e8 9d 01 00 00       	call   c6fd <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c560:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c564:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c56b:	00 
    c56c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c570:	48 01 d0             	add    %rdx,%rax
    }
    c573:	c9                   	leave
    c574:	c3                   	ret

000000000000c575 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c575:	55                   	push   %rbp
    c576:	48 89 e5             	mov    %rsp,%rbp
    c579:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c57d:	90                   	nop
    c57e:	5d                   	pop    %rbp
    c57f:	c3                   	ret

000000000000c580 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c580:	55                   	push   %rbp
    c581:	48 89 e5             	mov    %rsp,%rbp
    c584:	48 83 ec 20          	sub    $0x20,%rsp
    c588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c58c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c590:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c594:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c599:	75 06                	jne    c5a1 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c59b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c59f:	eb 3a                	jmp    c5db <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c5a1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5a5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c5ac:	00 
    c5ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c5b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5bd:	48 89 ce             	mov    %rcx,%rsi
    c5c0:	48 89 c7             	mov    %rax,%rdi
    c5c3:	e8 63 01 00 00       	call   c72b <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c5c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c5d3:	00 
    c5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5d8:	48 01 d0             	add    %rdx,%rax
    }
    c5db:	c9                   	leave
    c5dc:	c3                   	ret

000000000000c5dd <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c5dd:	55                   	push   %rbp
    c5de:	48 89 e5             	mov    %rsp,%rbp
    c5e1:	48 83 ec 20          	sub    $0x20,%rsp
    c5e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c5ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c5f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c5f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c5f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5fd:	48 89 ce             	mov    %rcx,%rsi
    c600:	48 89 c7             	mov    %rax,%rdi
    c603:	e8 51 01 00 00       	call   c759 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c608:	90                   	nop
    c609:	c9                   	leave
    c60a:	c3                   	ret

000000000000c60b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c60b:	55                   	push   %rbp
    c60c:	48 89 e5             	mov    %rsp,%rbp
    c60f:	48 83 ec 20          	sub    $0x20,%rsp
    c613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c617:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c61b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c61f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c623:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c62b:	48 89 ce             	mov    %rcx,%rsi
    c62e:	48 89 c7             	mov    %rax,%rdi
    c631:	e8 9b 01 00 00       	call   c7d1 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c636:	90                   	nop
    c637:	c9                   	leave
    c638:	c3                   	ret

000000000000c639 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c639:	55                   	push   %rbp
    c63a:	48 89 e5             	mov    %rsp,%rbp
    c63d:	48 83 ec 20          	sub    $0x20,%rsp
    c641:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c645:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c649:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c64d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c651:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c659:	48 89 ce             	mov    %rcx,%rsi
    c65c:	48 89 c7             	mov    %rax,%rdi
    c65f:	e8 e5 01 00 00       	call   c849 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c664:	90                   	nop
    c665:	c9                   	leave
    c666:	c3                   	ret

000000000000c667 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c667:	55                   	push   %rbp
    c668:	48 89 e5             	mov    %rsp,%rbp
    c66b:	48 83 ec 20          	sub    $0x20,%rsp
    c66f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c673:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c677:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c67b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c67f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c687:	48 89 ce             	mov    %rcx,%rsi
    c68a:	48 89 c7             	mov    %rax,%rdi
    c68d:	e8 f2 01 00 00       	call   c884 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c692:	90                   	nop
    c693:	c9                   	leave
    c694:	c3                   	ret

000000000000c695 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c695:	55                   	push   %rbp
    c696:	48 89 e5             	mov    %rsp,%rbp
    c699:	48 83 ec 20          	sub    $0x20,%rsp
    c69d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c6a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b5:	48 89 ce             	mov    %rcx,%rsi
    c6b8:	48 89 c7             	mov    %rax,%rdi
    c6bb:	e8 ff 01 00 00       	call   c8bf <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c6c0:	90                   	nop
    c6c1:	c9                   	leave
    c6c2:	c3                   	ret
    c6c3:	90                   	nop

000000000000c6c4 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c6c4:	55                   	push   %rbp
    c6c5:	48 89 e5             	mov    %rsp,%rbp
    c6c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6cc:	90                   	nop
    c6cd:	5d                   	pop    %rbp
    c6ce:	c3                   	ret

000000000000c6cf <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c6cf:	55                   	push   %rbp
    c6d0:	48 89 e5             	mov    %rsp,%rbp
    c6d3:	48 83 ec 20          	sub    $0x20,%rsp
    c6d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c6db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c6df:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c6e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c6e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c6eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ef:	48 89 ce             	mov    %rcx,%rsi
    c6f2:	48 89 c7             	mov    %rax,%rdi
    c6f5:	e8 08 02 00 00       	call   c902 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c6fa:	90                   	nop
    c6fb:	c9                   	leave
    c6fc:	c3                   	ret

000000000000c6fd <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c6fd:	55                   	push   %rbp
    c6fe:	48 89 e5             	mov    %rsp,%rbp
    c701:	48 83 ec 20          	sub    $0x20,%rsp
    c705:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c709:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c70d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c711:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c715:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c71d:	48 89 ce             	mov    %rcx,%rsi
    c720:	48 89 c7             	mov    %rax,%rdi
    c723:	e8 0d 02 00 00       	call   c935 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c728:	90                   	nop
    c729:	c9                   	leave
    c72a:	c3                   	ret

000000000000c72b <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c72b:	55                   	push   %rbp
    c72c:	48 89 e5             	mov    %rsp,%rbp
    c72f:	48 83 ec 20          	sub    $0x20,%rsp
    c733:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c737:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c73b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c73f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c743:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c74b:	48 89 ce             	mov    %rcx,%rsi
    c74e:	48 89 c7             	mov    %rax,%rdi
    c751:	e8 10 02 00 00       	call   c966 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c756:	90                   	nop
    c757:	c9                   	leave
    c758:	c3                   	ret

000000000000c759 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c759:	55                   	push   %rbp
    c75a:	48 89 e5             	mov    %rsp,%rbp
    c75d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c761:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c765:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c769:	eb 58                	jmp    c7c3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c76f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c773:	b9 08 02 00 00       	mov    $0x208,%ecx
    c778:	48 8b 32             	mov    (%rdx),%rsi
    c77b:	48 89 30             	mov    %rsi,(%rax)
    c77e:	89 ce                	mov    %ecx,%esi
    c780:	48 01 c6             	add    %rax,%rsi
    c783:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c787:	89 ce                	mov    %ecx,%esi
    c789:	48 01 d6             	add    %rdx,%rsi
    c78c:	48 83 c6 08          	add    $0x8,%rsi
    c790:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c794:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c798:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c79c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c7a0:	48 29 f8             	sub    %rdi,%rax
    c7a3:	48 29 c2             	sub    %rax,%rdx
    c7a6:	01 c1                	add    %eax,%ecx
    c7a8:	83 e1 f8             	and    $0xfffffff8,%ecx
    c7ab:	89 c8                	mov    %ecx,%eax
    c7ad:	c1 e8 03             	shr    $0x3,%eax
    c7b0:	89 c0                	mov    %eax,%eax
    c7b2:	48 89 d6             	mov    %rdx,%rsi
    c7b5:	48 89 c1             	mov    %rax,%rcx
    c7b8:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c7bb:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c7c2:	00 
    c7c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7c7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c7cb:	75 9e                	jne    c76b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c7cd:	90                   	nop
    c7ce:	90                   	nop
    c7cf:	5d                   	pop    %rbp
    c7d0:	c3                   	ret

000000000000c7d1 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c7d1:	55                   	push   %rbp
    c7d2:	48 89 e5             	mov    %rsp,%rbp
    c7d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c7d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c7dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c7e1:	eb 58                	jmp    c83b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c7e7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c7eb:	b9 04 01 00 00       	mov    $0x104,%ecx
    c7f0:	48 8b 32             	mov    (%rdx),%rsi
    c7f3:	48 89 30             	mov    %rsi,(%rax)
    c7f6:	89 ce                	mov    %ecx,%esi
    c7f8:	48 01 c6             	add    %rax,%rsi
    c7fb:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c7ff:	89 ce                	mov    %ecx,%esi
    c801:	48 01 d6             	add    %rdx,%rsi
    c804:	48 83 c6 08          	add    $0x8,%rsi
    c808:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c80c:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c810:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c814:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c818:	48 29 f8             	sub    %rdi,%rax
    c81b:	48 29 c2             	sub    %rax,%rdx
    c81e:	01 c1                	add    %eax,%ecx
    c820:	83 e1 f8             	and    $0xfffffff8,%ecx
    c823:	89 c8                	mov    %ecx,%eax
    c825:	c1 e8 03             	shr    $0x3,%eax
    c828:	89 c0                	mov    %eax,%eax
    c82a:	48 89 d6             	mov    %rdx,%rsi
    c82d:	48 89 c1             	mov    %rax,%rcx
    c830:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c833:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c83a:	00 
    c83b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c83f:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c843:	75 9e                	jne    c7e3 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c845:	90                   	nop
    c846:	90                   	nop
    c847:	5d                   	pop    %rbp
    c848:	c3                   	ret

000000000000c849 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c849:	55                   	push   %rbp
    c84a:	48 89 e5             	mov    %rsp,%rbp
    c84d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c851:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c855:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c859:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c85d:	48 8b 00             	mov    (%rax),%rax
    c860:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c864:	eb 10                	jmp    c876 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c866:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c86a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c86e:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c871:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c87a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c87e:	75 e6                	jne    c866 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c880:	90                   	nop
    c881:	90                   	nop
    c882:	5d                   	pop    %rbp
    c883:	c3                   	ret

000000000000c884 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c884:	55                   	push   %rbp
    c885:	48 89 e5             	mov    %rsp,%rbp
    c888:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c88c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c890:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c894:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c898:	48 8b 00             	mov    (%rax),%rax
    c89b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c89f:	eb 10                	jmp    c8b1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c8a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c8a9:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c8ac:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c8b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8b5:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c8b9:	75 e6                	jne    c8a1 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c8bb:	90                   	nop
    c8bc:	90                   	nop
    c8bd:	5d                   	pop    %rbp
    c8be:	c3                   	ret

000000000000c8bf <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c8bf:	55                   	push   %rbp
    c8c0:	48 89 e5             	mov    %rsp,%rbp
    c8c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c8cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c8cf:	eb 23                	jmp    c8f4 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c8d1:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c8d5:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c8d9:	48 8b 06             	mov    (%rsi),%rax
    c8dc:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c8e0:	48 89 01             	mov    %rax,(%rcx)
    c8e3:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c8e7:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c8eb:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c8ef:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c8f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c8fc:	75 d3                	jne    c8d1 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c8fe:	90                   	nop
    c8ff:	90                   	nop
    c900:	5d                   	pop    %rbp
    c901:	c3                   	ret

000000000000c902 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c902:	55                   	push   %rbp
    c903:	48 89 e5             	mov    %rsp,%rbp
    c906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c90a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c90e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c912:	eb 13                	jmp    c927 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c918:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c91c:	48 8b 12             	mov    (%rdx),%rdx
    c91f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c922:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c92b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c92f:	75 e3                	jne    c914 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c931:	90                   	nop
    c932:	90                   	nop
    c933:	5d                   	pop    %rbp
    c934:	c3                   	ret

000000000000c935 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c935:	55                   	push   %rbp
    c936:	48 89 e5             	mov    %rsp,%rbp
    c939:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c93d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c941:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c945:	eb 11                	jmp    c958 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c947:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c94b:	8b 10                	mov    (%rax),%edx
    c94d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c951:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c953:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c958:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c960:	75 e5                	jne    c947 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c962:	90                   	nop
    c963:	90                   	nop
    c964:	5d                   	pop    %rbp
    c965:	c3                   	ret

000000000000c966 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c966:	55                   	push   %rbp
    c967:	48 89 e5             	mov    %rsp,%rbp
    c96a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c96e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c972:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c976:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c97a:	48 8b 00             	mov    (%rax),%rax
    c97d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c981:	eb 10                	jmp    c993 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c983:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c987:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c98b:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c98e:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c997:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c99b:	75 e6                	jne    c983 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c99d:	90                   	nop
    c99e:	90                   	nop
    c99f:	5d                   	pop    %rbp
    c9a0:	c3                   	ret

000000000000c9a1 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c9a1:	55                   	push   %rbp
    c9a2:	48 89 e5             	mov    %rsp,%rbp
    c9a5:	53                   	push   %rbx
    c9a6:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c9aa:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c9ae:	be 00 00 00 00       	mov    $0x0,%esi
    c9b3:	48 89 c7             	mov    %rax,%rdi
    c9b6:	e8 15 7b ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c9bb:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c9be:	89 c3                	mov    %eax,%ebx
    c9c0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c9c4:	48 89 c7             	mov    %rax,%rdi
    c9c7:	e8 ea b6 ff ff       	call   80b6 <_ZNSaI17VkLayerPropertiesEC1Ev>
    c9cc:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c9d0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c9d4:	48 89 de             	mov    %rbx,%rsi
    c9d7:	48 89 c7             	mov    %rax,%rdi
    c9da:	e8 0f b7 ff ff       	call   80ee <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c9df:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c9e3:	48 89 c7             	mov    %rax,%rdi
    c9e6:	e8 e7 b6 ff ff       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c9eb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c9ef:	48 89 c7             	mov    %rax,%rdi
    c9f2:	e8 b1 b7 ff ff       	call   81a8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c9f7:	48 89 c2             	mov    %rax,%rdx
    c9fa:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c9fe:	48 89 d6             	mov    %rdx,%rsi
    ca01:	48 89 c7             	mov    %rax,%rdi
    ca04:	e8 c7 7a ff ff       	call   44d0 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    ca09:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ca0d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ca11:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca15:	48 89 c7             	mov    %rax,%rdi
    ca18:	e8 63 04 00 00       	call   ce80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    ca1d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    ca21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca25:	48 89 c7             	mov    %rax,%rdi
    ca28:	e8 79 04 00 00       	call   cea6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    ca2d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ca31:	eb 5b                	jmp    ca8e <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    ca33:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    ca37:	48 89 c7             	mov    %rax,%rdi
    ca3a:	e8 ef 04 00 00       	call   cf2e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    ca3f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    ca43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca47:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    ca4b:	48 89 d6             	mov    %rdx,%rsi
    ca4e:	48 89 c7             	mov    %rax,%rdi
    ca51:	e8 f8 03 00 00       	call   ce4e <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    ca56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ca5a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ca5e:	48 8b 3d 3b e2 01 00 	mov    0x1e23b(%rip),%rdi        # 2aca0 <_ZN3vkh19validationLayerNameE>
    ca65:	48 8b 35 3c e2 01 00 	mov    0x1e23c(%rip),%rsi        # 2aca8 <_ZN3vkh19validationLayerNameE+0x8>
    ca6c:	48 89 d1             	mov    %rdx,%rcx
    ca6f:	48 89 c2             	mov    %rax,%rdx
    ca72:	e8 da 04 00 00       	call   cf51 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    ca77:	84 c0                	test   %al,%al
    ca79:	74 07                	je     ca82 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    ca7b:	bb 01 00 00 00       	mov    $0x1,%ebx
    ca80:	eb 28                	jmp    caaa <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    ca82:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    ca86:	48 89 c7             	mov    %rax,%rdi
    ca89:	e8 7c 04 00 00       	call   cf0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    ca8e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    ca92:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    ca96:	48 89 d6             	mov    %rdx,%rsi
    ca99:	48 89 c7             	mov    %rax,%rdi
    ca9c:	e8 2e 04 00 00       	call   cecf <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    caa1:	84 c0                	test   %al,%al
    caa3:	75 8e                	jne    ca33 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    caa5:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    caaa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    caae:	48 89 c7             	mov    %rax,%rdi
    cab1:	e8 ae b6 ff ff       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    cab6:	89 d8                	mov    %ebx,%eax
    cab8:	eb 34                	jmp    caee <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    caba:	48 89 c3             	mov    %rax,%rbx
    cabd:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    cac1:	48 89 c7             	mov    %rax,%rdi
    cac4:	e8 09 b6 ff ff       	call   80d2 <_ZNSaI17VkLayerPropertiesED1Ev>
    cac9:	48 89 d8             	mov    %rbx,%rax
    cacc:	48 89 c7             	mov    %rax,%rdi
    cacf:	e8 dc 7c ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    cad4:	48 89 c3             	mov    %rax,%rbx
    cad7:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cadb:	48 89 c7             	mov    %rax,%rdi
    cade:	e8 81 b6 ff ff       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    cae3:	48 89 d8             	mov    %rbx,%rax
    cae6:	48 89 c7             	mov    %rax,%rdi
    cae9:	e8 c2 7c ff ff       	call   47b0 <_Unwind_Resume@plt>
    caee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    caf2:	c9                   	leave
    caf3:	c3                   	ret

000000000000caf4 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    caf4:	55                   	push   %rbp
    caf5:	48 89 e5             	mov    %rsp,%rbp
    caf8:	48 83 ec 20          	sub    $0x20,%rsp
    cafc:	89 7d fc             	mov    %edi,-0x4(%rbp)
    caff:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cb02:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    cb06:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    cb0a:	8b 45 fc             	mov    -0x4(%rbp),%eax
    cb0d:	83 f8 01             	cmp    $0x1,%eax
    cb10:	7e 3c                	jle    cb4e <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    cb12:	be 0a 00 00 00       	mov    $0xa,%esi
    cb17:	48 8d 05 22 e9 01 00 	lea    0x1e922(%rip),%rax        # 2b440 <_ZSt4cerr@GLIBCXX_3.4>
    cb1e:	48 89 c7             	mov    %rax,%rdi
    cb21:	e8 ca 79 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    cb26:	48 89 c2             	mov    %rax,%rdx
    cb29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb2d:	48 8b 40 28          	mov    0x28(%rax),%rax
    cb31:	48 89 c6             	mov    %rax,%rsi
    cb34:	48 89 d7             	mov    %rdx,%rdi
    cb37:	e8 84 78 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    cb3c:	48 8b 15 55 e4 01 00 	mov    0x1e455(%rip),%rdx        # 2af98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    cb43:	48 89 d6             	mov    %rdx,%rsi
    cb46:	48 89 c7             	mov    %rax,%rdi
    cb49:	e8 f2 78 ff ff       	call   4440 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    cb4e:	b8 00 00 00 00       	mov    $0x0,%eax
}
    cb53:	c9                   	leave
    cb54:	c3                   	ret

000000000000cb55 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    cb55:	55                   	push   %rbp
    cb56:	48 89 e5             	mov    %rsp,%rbp
    cb59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    cb5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb61:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cb65:	0f 11 00             	movups %xmm0,(%rax)
    cb68:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    cb6c:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    cb70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb74:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    cb7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb7e:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    cb85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb89:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    cb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb94:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # caf4 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    cb9b:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    cb9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cba3:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    cbaa:	00 
}
    cbab:	90                   	nop
    cbac:	5d                   	pop    %rbp
    cbad:	c3                   	ret

000000000000cbae <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    cbae:	55                   	push   %rbp
    cbaf:	48 89 e5             	mov    %rsp,%rbp
    cbb2:	48 83 ec 30          	sub    $0x30,%rsp
    cbb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cbbe:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    cbc2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    cbc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbca:	48 8d 15 bf eb 00 00 	lea    0xebbf(%rip),%rdx        # 1b790 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    cbd1:	48 89 d6             	mov    %rdx,%rsi
    cbd4:	48 89 c7             	mov    %rax,%rdi
    cbd7:	e8 b4 77 ff ff       	call   4390 <vkGetInstanceProcAddr@plt>
    cbdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    cbe0:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cbe5:	75 07                	jne    cbee <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    cbe7:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    cbec:	eb 1b                	jmp    cc09 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    cbee:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    cbf2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cbf6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cbfa:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    cbfe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc02:	48 89 c7             	mov    %rax,%rdi
    cc05:	41 ff d0             	call   *%r8
    cc08:	90                   	nop
}
    cc09:	c9                   	leave
    cc0a:	c3                   	ret

000000000000cc0b <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    cc0b:	55                   	push   %rbp
    cc0c:	48 89 e5             	mov    %rsp,%rbp
    cc0f:	41 54                	push   %r12
    cc11:	53                   	push   %rbx
    cc12:	48 83 ec 50          	sub    $0x50,%rsp
    cc16:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    cc1a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    cc1e:	48 89 c7             	mov    %rax,%rdi
    cc21:	e8 2f ff ff ff       	call   cb55 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    cc26:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    cc2d:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    cc2e:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    cc32:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    cc36:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    cc3a:	48 89 d1             	mov    %rdx,%rcx
    cc3d:	ba 00 00 00 00       	mov    $0x0,%edx
    cc42:	48 89 c7             	mov    %rax,%rdi
    cc45:	e8 64 ff ff ff       	call   cbae <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    cc4a:	85 c0                	test   %eax,%eax
    cc4c:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    cc4f:	84 c0                	test   %al,%al
    cc51:	74 3b                	je     cc8e <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    cc53:	bf 10 00 00 00       	mov    $0x10,%edi
    cc58:	e8 43 75 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    cc5d:	48 89 c3             	mov    %rax,%rbx
    cc60:	48 8d 05 49 eb 00 00 	lea    0xeb49(%rip),%rax        # 1b7b0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    cc67:	48 89 c6             	mov    %rax,%rsi
    cc6a:	48 89 df             	mov    %rbx,%rdi
    cc6d:	e8 ae 74 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    cc72:	48 8b 05 2f e3 01 00 	mov    0x1e32f(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cc79:	48 89 c2             	mov    %rax,%rdx
    cc7c:	48 8d 05 bd e0 01 00 	lea    0x1e0bd(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cc83:	48 89 c6             	mov    %rax,%rsi
    cc86:	48 89 df             	mov    %rbx,%rdi
    cc89:	e8 c2 7a ff ff       	call   4750 <__cxa_throw@plt>
  }
  return debugMessenger;
    cc8e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    cc92:	eb 16                	jmp    ccaa <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    cc94:	49 89 c4             	mov    %rax,%r12
    cc97:	48 89 df             	mov    %rbx,%rdi
    cc9a:	e8 e1 75 ff ff       	call   4280 <__cxa_free_exception@plt>
    cc9f:	4c 89 e0             	mov    %r12,%rax
    cca2:	48 89 c7             	mov    %rax,%rdi
    cca5:	e8 06 7b ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    ccaa:	48 83 c4 50          	add    $0x50,%rsp
    ccae:	5b                   	pop    %rbx
    ccaf:	41 5c                	pop    %r12
    ccb1:	5d                   	pop    %rbp
    ccb2:	c3                   	ret

000000000000ccb3 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    ccb3:	55                   	push   %rbp
    ccb4:	48 89 e5             	mov    %rsp,%rbp
    ccb7:	48 83 ec 30          	sub    $0x30,%rsp
    ccbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ccbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ccc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    ccc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cccb:	48 8d 15 fe ea 00 00 	lea    0xeafe(%rip),%rdx        # 1b7d0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    ccd2:	48 89 d6             	mov    %rdx,%rsi
    ccd5:	48 89 c7             	mov    %rax,%rdi
    ccd8:	e8 b3 76 ff ff       	call   4390 <vkGetInstanceProcAddr@plt>
    ccdd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    cce1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    cce6:	74 19                	je     cd01 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    cce8:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    ccec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ccf0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ccf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccf8:	48 89 ce             	mov    %rcx,%rsi
    ccfb:	48 89 c7             	mov    %rax,%rdi
    ccfe:	41 ff d0             	call   *%r8
  }
}
    cd01:	90                   	nop
    cd02:	c9                   	leave
    cd03:	c3                   	ret

000000000000cd04 <_Z41__static_initialization_and_destruction_0ii>:

    cd04:	55                   	push   %rbp
    cd05:	48 89 e5             	mov    %rsp,%rbp
    cd08:	48 83 ec 10          	sub    $0x10,%rsp
    cd0c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cd0f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cd12:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cd16:	75 3b                	jne    cd53 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd18:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cd1f:	75 32                	jne    cd53 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cd21:	48 8d 05 2a e8 01 00 	lea    0x1e82a(%rip),%rax        # 2b552 <_ZStL8__ioinit>
    cd28:	48 89 c7             	mov    %rax,%rdi
    cd2b:	e8 60 79 ff ff       	call   4690 <_ZNSt8ios_base4InitC1Ev@plt>
    cd30:	48 8d 05 e1 e6 01 00 	lea    0x1e6e1(%rip),%rax        # 2b418 <__dso_handle>
    cd37:	48 89 c2             	mov    %rax,%rdx
    cd3a:	48 8d 05 11 e8 01 00 	lea    0x1e811(%rip),%rax        # 2b552 <_ZStL8__ioinit>
    cd41:	48 89 c6             	mov    %rax,%rsi
    cd44:	48 8b 05 7d e2 01 00 	mov    0x1e27d(%rip),%rax        # 2afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cd4b:	48 89 c7             	mov    %rax,%rdi
    cd4e:	e8 fd 75 ff ff       	call   4350 <__cxa_atexit@plt>
    cd53:	90                   	nop
    cd54:	c9                   	leave
    cd55:	c3                   	ret

000000000000cd56 <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    cd56:	55                   	push   %rbp
    cd57:	48 89 e5             	mov    %rsp,%rbp
    cd5a:	be ff ff 00 00       	mov    $0xffff,%esi
    cd5f:	bf 01 00 00 00       	mov    $0x1,%edi
    cd64:	e8 9b ff ff ff       	call   cd04 <_Z41__static_initialization_and_destruction_0ii>
    cd69:	5d                   	pop    %rbp
    cd6a:	c3                   	ret

000000000000cd6b <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    cd6b:	55                   	push   %rbp
    cd6c:	48 89 e5             	mov    %rsp,%rbp
    cd6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cd73:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    cd77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd7b:	0f b6 00             	movzbl (%rax),%eax
    cd7e:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    cd80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cd84:	0f b6 00             	movzbl (%rax),%eax
    cd87:	38 c2                	cmp    %al,%dl
    cd89:	0f 92 c0             	setb   %al
      }
    cd8c:	5d                   	pop    %rbp
    cd8d:	c3                   	ret

000000000000cd8e <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    cd8e:	55                   	push   %rbp
    cd8f:	48 89 e5             	mov    %rsp,%rbp
    cd92:	48 83 ec 30          	sub    $0x30,%rsp
    cd96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cd9e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    cda2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    cda7:	75 0a                	jne    cdb3 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    cda9:	b8 00 00 00 00       	mov    $0x0,%eax
    cdae:	e9 99 00 00 00       	jmp    ce4c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    cdb3:	e8 96 7d ff ff       	call   4b4e <_ZSt23__is_constant_evaluatedv>
    cdb8:	84 c0                	test   %al,%al
    cdba:	74 78                	je     ce34 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    cdbc:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    cdc3:	00 
    cdc4:	eb 5d                	jmp    ce23 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    cdc6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    cdca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdce:	48 01 c2             	add    %rax,%rdx
    cdd1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    cdd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdd9:	48 01 c8             	add    %rcx,%rax
    cddc:	48 89 d6             	mov    %rdx,%rsi
    cddf:	48 89 c7             	mov    %rax,%rdi
    cde2:	e8 84 ff ff ff       	call   cd6b <_ZNSt11char_traitsIcE2ltERKcS2_>
    cde7:	84 c0                	test   %al,%al
    cde9:	74 07                	je     cdf2 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    cdeb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    cdf0:	eb 5a                	jmp    ce4c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    cdf2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cdf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdfa:	48 01 c2             	add    %rax,%rdx
    cdfd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ce01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce05:	48 01 c8             	add    %rcx,%rax
    ce08:	48 89 d6             	mov    %rdx,%rsi
    ce0b:	48 89 c7             	mov    %rax,%rdi
    ce0e:	e8 58 ff ff ff       	call   cd6b <_ZNSt11char_traitsIcE2ltERKcS2_>
    ce13:	84 c0                	test   %al,%al
    ce15:	74 07                	je     ce1e <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    ce17:	b8 01 00 00 00       	mov    $0x1,%eax
    ce1c:	eb 2e                	jmp    ce4c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    ce1e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    ce23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce27:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ce2b:	72 99                	jb     cdc6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    ce2d:	b8 00 00 00 00       	mov    $0x0,%eax
    ce32:	eb 18                	jmp    ce4c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    ce34:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ce38:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ce3c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce40:	48 89 ce             	mov    %rcx,%rsi
    ce43:	48 89 c7             	mov    %rax,%rdi
    ce46:	e8 35 73 ff ff       	call   4180 <memcmp@plt>
    ce4b:	90                   	nop
      }
    ce4c:	c9                   	leave
    ce4d:	c3                   	ret

000000000000ce4e <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    ce4e:	55                   	push   %rbp
    ce4f:	48 89 e5             	mov    %rsp,%rbp
    ce52:	48 83 ec 10          	sub    $0x10,%rsp
    ce56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    ce5e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce62:	48 89 c7             	mov    %rax,%rdi
    ce65:	e8 ef 7c ff ff       	call   4b59 <_ZNSt11char_traitsIcE6lengthEPKc>
    ce6a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ce6e:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    ce71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ce79:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    ce7d:	90                   	nop
    ce7e:	c9                   	leave
    ce7f:	c3                   	ret

000000000000ce80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ce80:	55                   	push   %rbp
    ce81:	48 89 e5             	mov    %rsp,%rbp
    ce84:	48 83 ec 20          	sub    $0x20,%rsp
    ce88:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ce8c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ce90:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ce94:	48 89 d6             	mov    %rdx,%rsi
    ce97:	48 89 c7             	mov    %rax,%rdi
    ce9a:	e8 27 01 00 00       	call   cfc6 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ce9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cea3:	c9                   	leave
    cea4:	c3                   	ret
    cea5:	90                   	nop

000000000000cea6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cea6:	55                   	push   %rbp
    cea7:	48 89 e5             	mov    %rsp,%rbp
    ceaa:	48 83 ec 20          	sub    $0x20,%rsp
    ceae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ceb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceb6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ceba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cebe:	48 89 d6             	mov    %rdx,%rsi
    cec1:	48 89 c7             	mov    %rax,%rdi
    cec4:	e8 fd 00 00 00       	call   cfc6 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cec9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cecd:	c9                   	leave
    cece:	c3                   	ret

000000000000cecf <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cecf:	55                   	push   %rbp
    ced0:	48 89 e5             	mov    %rsp,%rbp
    ced3:	53                   	push   %rbx
    ced4:	48 83 ec 18          	sub    $0x18,%rsp
    ced8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cedc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cee0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cee4:	48 89 c7             	mov    %rax,%rdi
    cee7:	e8 f8 00 00 00       	call   cfe4 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ceec:	48 8b 18             	mov    (%rax),%rbx
    ceef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cef3:	48 89 c7             	mov    %rax,%rdi
    cef6:	e8 e9 00 00 00       	call   cfe4 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cefb:	48 8b 00             	mov    (%rax),%rax
    cefe:	48 39 c3             	cmp    %rax,%rbx
    cf01:	0f 95 c0             	setne  %al
    cf04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cf08:	c9                   	leave
    cf09:	c3                   	ret

000000000000cf0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cf0a:	55                   	push   %rbp
    cf0b:	48 89 e5             	mov    %rsp,%rbp
    cf0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cf12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf16:	48 8b 00             	mov    (%rax),%rax
    cf19:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cf20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf24:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cf27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cf2b:	5d                   	pop    %rbp
    cf2c:	c3                   	ret
    cf2d:	90                   	nop

000000000000cf2e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cf2e:	55                   	push   %rbp
    cf2f:	48 89 e5             	mov    %rsp,%rbp
    cf32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cf36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf3a:	48 8b 00             	mov    (%rax),%rax
    cf3d:	5d                   	pop    %rbp
    cf3e:	c3                   	ret
    cf3f:	90                   	nop

000000000000cf40 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    cf40:	55                   	push   %rbp
    cf41:	48 89 e5             	mov    %rsp,%rbp
    cf44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cf48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf4c:	48 8b 00             	mov    (%rax),%rax
    cf4f:	5d                   	pop    %rbp
    cf50:	c3                   	ret

000000000000cf51 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cf51:	55                   	push   %rbp
    cf52:	48 89 e5             	mov    %rsp,%rbp
    cf55:	53                   	push   %rbx
    cf56:	48 83 ec 28          	sub    $0x28,%rsp
    cf5a:	48 89 f0             	mov    %rsi,%rax
    cf5d:	49 89 f8             	mov    %rdi,%r8
    cf60:	4c 89 c6             	mov    %r8,%rsi
    cf63:	4c 89 cf             	mov    %r9,%rdi
    cf66:	48 89 c7             	mov    %rax,%rdi
    cf69:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cf6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cf71:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cf75:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cf79:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cf7d:	48 89 c7             	mov    %rax,%rdi
    cf80:	e8 bb ff ff ff       	call   cf40 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cf85:	48 89 c3             	mov    %rax,%rbx
    cf88:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cf8c:	48 89 c7             	mov    %rax,%rdi
    cf8f:	e8 ac ff ff ff       	call   cf40 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cf94:	48 39 c3             	cmp    %rax,%rbx
    cf97:	75 22                	jne    cfbb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cf99:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cf9d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cfa1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cfa5:	48 89 ce             	mov    %rcx,%rsi
    cfa8:	48 89 c7             	mov    %rax,%rdi
    cfab:	e8 42 00 00 00       	call   cff2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cfb0:	85 c0                	test   %eax,%eax
    cfb2:	75 07                	jne    cfbb <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cfb4:	b8 01 00 00 00       	mov    $0x1,%eax
    cfb9:	eb 05                	jmp    cfc0 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cfbb:	b8 00 00 00 00       	mov    $0x0,%eax
    cfc0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cfc4:	c9                   	leave
    cfc5:	c3                   	ret

000000000000cfc6 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cfc6:	55                   	push   %rbp
    cfc7:	48 89 e5             	mov    %rsp,%rbp
    cfca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cfd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cfd6:	48 8b 10             	mov    (%rax),%rdx
    cfd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfdd:	48 89 10             	mov    %rdx,(%rax)
    cfe0:	90                   	nop
    cfe1:	5d                   	pop    %rbp
    cfe2:	c3                   	ret
    cfe3:	90                   	nop

000000000000cfe4 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cfe4:	55                   	push   %rbp
    cfe5:	48 89 e5             	mov    %rsp,%rbp
    cfe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cfec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff0:	5d                   	pop    %rbp
    cff1:	c3                   	ret

000000000000cff2 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cff2:	55                   	push   %rbp
    cff3:	48 89 e5             	mov    %rsp,%rbp
    cff6:	48 83 ec 30          	sub    $0x30,%rsp
    cffa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cffe:	48 89 d1             	mov    %rdx,%rcx
    d001:	48 89 f0             	mov    %rsi,%rax
    d004:	48 89 fa             	mov    %rdi,%rdx
    d007:	48 89 ca             	mov    %rcx,%rdx
    d00a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    d00e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    d012:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d016:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    d01a:	48 89 d6             	mov    %rdx,%rsi
    d01d:	48 89 c7             	mov    %rax,%rdi
    d020:	e8 e2 84 ff ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
    d025:	48 8b 00             	mov    (%rax),%rax
    d028:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    d02c:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    d030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d034:	48 8b 40 08          	mov    0x8(%rax),%rax
    d038:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d03c:	48 89 ce             	mov    %rcx,%rsi
    d03f:	48 89 c7             	mov    %rax,%rdi
    d042:	e8 47 fd ff ff       	call   cd8e <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    d047:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    d04a:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    d04e:	75 19                	jne    d069 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    d050:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d054:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d058:	48 8b 00             	mov    (%rax),%rax
    d05b:	48 89 d6             	mov    %rdx,%rsi
    d05e:	48 89 c7             	mov    %rax,%rdi
    d061:	e8 08 00 00 00       	call   d06e <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    d066:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    d069:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    d06c:	c9                   	leave
    d06d:	c3                   	ret

000000000000d06e <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    d06e:	55                   	push   %rbp
    d06f:	48 89 e5             	mov    %rsp,%rbp
    d072:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d076:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    d07a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d07e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    d082:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    d086:	b8 00 00 00 80       	mov    $0x80000000,%eax
    d08b:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d08f:	7c 07                	jl     d098 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    d091:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    d096:	eb 1b                	jmp    d0b3 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    d098:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    d09f:	ff ff ff 
    d0a2:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    d0a6:	7f 07                	jg     d0af <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    d0a8:	b8 00 00 00 80       	mov    $0x80000000,%eax
    d0ad:	eb 04                	jmp    d0b3 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    d0af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d0b3:	5d                   	pop    %rbp
    d0b4:	c3                   	ret

000000000000d0b5 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};

} /* namespace vkh */
    d0b5:	55                   	push   %rbp
    d0b6:	48 89 e5             	mov    %rsp,%rbp
    d0b9:	48 83 ec 10          	sub    $0x10,%rsp
    d0bd:	89 7d fc             	mov    %edi,-0x4(%rbp)
    d0c0:	89 75 f8             	mov    %esi,-0x8(%rbp)
    d0c3:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    d0c7:	75 3b                	jne    d104 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d0c9:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    d0d0:	75 32                	jne    d104 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    d0d2:	48 8d 05 7a e4 01 00 	lea    0x1e47a(%rip),%rax        # 2b553 <_ZStL8__ioinit>
    d0d9:	48 89 c7             	mov    %rax,%rdi
    d0dc:	e8 af 75 ff ff       	call   4690 <_ZNSt8ios_base4InitC1Ev@plt>
    d0e1:	48 8d 05 30 e3 01 00 	lea    0x1e330(%rip),%rax        # 2b418 <__dso_handle>
    d0e8:	48 89 c2             	mov    %rax,%rdx
    d0eb:	48 8d 05 61 e4 01 00 	lea    0x1e461(%rip),%rax        # 2b553 <_ZStL8__ioinit>
    d0f2:	48 89 c6             	mov    %rax,%rsi
    d0f5:	48 8b 05 cc de 01 00 	mov    0x1decc(%rip),%rax        # 2afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    d0fc:	48 89 c7             	mov    %rax,%rdi
    d0ff:	e8 4c 72 ff ff       	call   4350 <__cxa_atexit@plt>
    d104:	90                   	nop
    d105:	c9                   	leave
    d106:	c3                   	ret

000000000000d107 <_GLOBAL__sub_I_vkh.cpp>:
    d107:	55                   	push   %rbp
    d108:	48 89 e5             	mov    %rsp,%rbp
    d10b:	be ff ff 00 00       	mov    $0xffff,%esi
    d110:	bf 01 00 00 00       	mov    $0x1,%edi
    d115:	e8 9b ff ff ff       	call   d0b5 <_Z41__static_initialization_and_destruction_0ii>
    d11a:	5d                   	pop    %rbp
    d11b:	c3                   	ret

000000000000d11c <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    d11c:	55                   	push   %rbp
    d11d:	48 89 e5             	mov    %rsp,%rbp
    d120:	48 83 ec 10          	sub    $0x10,%rsp
    d124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    d128:	e8 b3 73 ff ff       	call   44e0 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    d12d:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    d133:	b9 00 00 00 00       	mov    $0x0,%ecx
    d138:	48 8d 05 91 f8 00 00 	lea    0xf891(%rip),%rax        # 1c9d0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    d13f:	48 89 c2             	mov    %rax,%rdx
    d142:	be 58 02 00 00       	mov    $0x258,%esi
    d147:	bf 20 03 00 00       	mov    $0x320,%edi
    d14c:	e8 0e 87 ff ff       	call   585f <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    d151:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d155:	48 89 02             	mov    %rax,(%rdx)
}
    d158:	90                   	nop
    d159:	c9                   	leave
    d15a:	c3                   	ret
    d15b:	90                   	nop

000000000000d15c <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    d15c:	55                   	push   %rbp
    d15d:	48 89 e5             	mov    %rsp,%rbp
    d160:	53                   	push   %rbx
    d161:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    d168:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    d16f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d173:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    d177:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    d17b:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    d17f:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    d186:	48 8d 05 43 f8 00 00 	lea    0xf843(%rip),%rax        # 1c9d0 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    d18d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    d191:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    d198:	48 8d 05 44 f8 00 00 	lea    0xf844(%rip),%rax        # 1c9e3 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    d19f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    d1a3:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    d1aa:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    d1b1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d1b5:	48 89 c7             	mov    %rax,%rdi
    d1b8:	e8 17 a1 ff ff       	call   72d4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    d1bd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d1c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d1c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1c9:	48 89 c7             	mov    %rax,%rdi
    d1cc:	e8 cb 41 00 00       	call   1139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d1d1:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    d1d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d1dc:	48 89 c7             	mov    %rax,%rdi
    d1df:	e8 de 41 00 00       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d1e4:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    d1eb:	eb 3c                	jmp    d229 <_ZN9VulkanApp14createInstanceEv+0xcd>
    d1ed:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d1f4:	48 89 c7             	mov    %rax,%rdi
    d1f7:	e8 4a 42 00 00       	call   11446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d1fc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    d200:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d207:	48 8d 50 10          	lea    0x10(%rax),%rdx
    d20b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d20f:	48 89 c6             	mov    %rax,%rsi
    d212:	48 89 d7             	mov    %rdx,%rdi
    d215:	e8 3e 42 00 00       	call   11458 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    d21a:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d221:	48 89 c7             	mov    %rax,%rdi
    d224:	e8 fd 41 00 00       	call   11426 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d229:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    d230:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    d237:	48 89 d6             	mov    %rdx,%rsi
    d23a:	48 89 c7             	mov    %rax,%rdi
    d23d:	e8 a9 41 00 00       	call   113eb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d242:	84 c0                	test   %al,%al
    d244:	75 a7                	jne    d1ed <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    d246:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d24a:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d251:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d258:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    d25c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d263:	48 89 c7             	mov    %rax,%rdi
    d266:	e8 ea f8 ff ff       	call   cb55 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    d26b:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    d272:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    d275:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d27c:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    d283:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d287:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    d28e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d295:	48 83 c0 28          	add    $0x28,%rax
    d299:	48 89 c7             	mov    %rax,%rdi
    d29c:	e8 5b 42 00 00       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    d2a1:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    d2a7:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d2ae:	48 83 c0 28          	add    $0x28,%rax
    d2b2:	48 89 c7             	mov    %rax,%rdi
    d2b5:	e8 66 42 00 00       	call   11520 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d2ba:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    d2c1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d2c8:	48 83 c0 10          	add    $0x10,%rax
    d2cc:	48 89 c7             	mov    %rax,%rdi
    d2cf:	e8 28 42 00 00       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    d2d4:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    d2da:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    d2e1:	48 83 c0 10          	add    $0x10,%rax
    d2e5:	48 89 c7             	mov    %rax,%rdi
    d2e8:	e8 57 42 00 00       	call   11544 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d2ed:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    d2f4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d2fb:	be 00 00 00 00       	mov    $0x0,%esi
    d300:	48 89 c7             	mov    %rax,%rdi
    d303:	e8 ad 85 ff ff       	call   58b5 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    d308:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    d30f:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    d313:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d317:	48 89 c7             	mov    %rax,%rdi
    d31a:	e8 39 40 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d31f:	eb 1a                	jmp    d33b <_ZN9VulkanApp14createInstanceEv+0x1df>
    d321:	48 89 c3             	mov    %rax,%rbx
    d324:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d328:	48 89 c7             	mov    %rax,%rdi
    d32b:	e8 28 40 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    d330:	48 89 d8             	mov    %rbx,%rax
    d333:	48 89 c7             	mov    %rax,%rdi
    d336:	e8 75 74 ff ff       	call   47b0 <_Unwind_Resume@plt>
    d33b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d33f:	c9                   	leave
    d340:	c3                   	ret
    d341:	90                   	nop

000000000000d342 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    d342:	55                   	push   %rbp
    d343:	48 89 e5             	mov    %rsp,%rbp
    d346:	41 54                	push   %r12
    d348:	53                   	push   %rbx
    d349:	48 83 ec 10          	sub    $0x10,%rsp
    d34d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    d351:	e8 4b f6 ff ff       	call   c9a1 <_ZN3vkh27checkValidationLayerSupportEv>
    d356:	0f b6 c0             	movzbl %al,%eax
    d359:	85 c0                	test   %eax,%eax
    d35b:	0f 94 c0             	sete   %al
    d35e:	84 c0                	test   %al,%al
    d360:	74 3b                	je     d39d <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    d362:	bf 10 00 00 00       	mov    $0x10,%edi
    d367:	e8 34 6e ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    d36c:	48 89 c3             	mov    %rax,%rbx
    d36f:	48 8d 05 7a f6 00 00 	lea    0xf67a(%rip),%rax        # 1c9f0 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    d376:	48 89 c6             	mov    %rax,%rsi
    d379:	48 89 df             	mov    %rbx,%rdi
    d37c:	e8 9f 6d ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    d381:	48 8b 05 20 dc 01 00 	mov    0x1dc20(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d388:	48 89 c2             	mov    %rax,%rdx
    d38b:	48 8d 05 ae d9 01 00 	lea    0x1d9ae(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d392:	48 89 c6             	mov    %rax,%rsi
    d395:	48 89 df             	mov    %rbx,%rdi
    d398:	e8 b3 73 ff ff       	call   4750 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    d39d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d3a1:	48 8b 40 08          	mov    0x8(%rax),%rax
    d3a5:	48 89 c7             	mov    %rax,%rdi
    d3a8:	e8 5e f8 ff ff       	call   cc0b <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    d3ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d3b1:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    d3b5:	eb 16                	jmp    d3cd <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    d3b7:	49 89 c4             	mov    %rax,%r12
    d3ba:	48 89 df             	mov    %rbx,%rdi
    d3bd:	e8 be 6e ff ff       	call   4280 <__cxa_free_exception@plt>
    d3c2:	4c 89 e0             	mov    %r12,%rax
    d3c5:	48 89 c7             	mov    %rax,%rdi
    d3c8:	e8 e3 73 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    d3cd:	48 83 c4 10          	add    $0x10,%rsp
    d3d1:	5b                   	pop    %rbx
    d3d2:	41 5c                	pop    %r12
    d3d4:	5d                   	pop    %rbp
    d3d5:	c3                   	ret

000000000000d3d6 <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    d3d6:	55                   	push   %rbp
    d3d7:	48 89 e5             	mov    %rsp,%rbp
    d3da:	48 83 ec 10          	sub    $0x10,%rsp
    d3de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    d3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e6:	48 8b 08             	mov    (%rax),%rcx
    d3e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ed:	48 8b 40 08          	mov    0x8(%rax),%rax
    d3f1:	ba 00 00 00 00       	mov    $0x0,%edx
    d3f6:	48 89 ce             	mov    %rcx,%rsi
    d3f9:	48 89 c7             	mov    %rax,%rdi
    d3fc:	e8 df 85 ff ff       	call   59e0 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    d401:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d405:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    d409:	90                   	nop
    d40a:	c9                   	leave
    d40b:	c3                   	ret

000000000000d40c <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    d40c:	55                   	push   %rbp
    d40d:	48 89 e5             	mov    %rsp,%rbp
    d410:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    d417:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    d41e:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    d425:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    d42c:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    d433:	48 89 d6             	mov    %rdx,%rsi
    d436:	48 89 c7             	mov    %rax,%rdi
    d439:	e8 63 a1 ff ff       	call   75a1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    d43e:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    d444:	83 f8 02             	cmp    $0x2,%eax
    d447:	0f 94 c0             	sete   %al
}
    d44a:	c9                   	leave
    d44b:	c3                   	ret

000000000000d44c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d44c:	55                   	push   %rbp
    d44d:	48 89 e5             	mov    %rsp,%rbp
    d450:	53                   	push   %rbx
    d451:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d458:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d45f:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d466:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d46d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d471:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d478:	48 89 d6             	mov    %rdx,%rsi
    d47b:	48 89 c7             	mov    %rax,%rdi
    d47e:	e8 47 a2 ff ff       	call   76ca <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d483:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d487:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d48e:	48 89 d6             	mov    %rdx,%rsi
    d491:	48 89 c7             	mov    %rax,%rdi
    d494:	e8 65 a3 ff ff       	call   77fe <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d499:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d4a0:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d4a4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d4ab:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d4b2:	48 89 ce             	mov    %rcx,%rsi
    d4b5:	48 89 c7             	mov    %rax,%rdi
    d4b8:	e8 7a a4 ff ff       	call   7937 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d4bd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d4c4:	00 
    d4c5:	e9 c5 00 00 00       	jmp    d58f <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d4ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4ce:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d4d2:	48 89 d6             	mov    %rdx,%rsi
    d4d5:	48 89 c7             	mov    %rax,%rdi
    d4d8:	e8 7f b4 ff ff       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d4dd:	48 89 c7             	mov    %rax,%rdi
    d4e0:	e8 b1 40 00 00       	call   11596 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d4e5:	84 c0                	test   %al,%al
    d4e7:	74 48                	je     d531 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d4e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4ed:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d4f1:	48 89 d6             	mov    %rdx,%rsi
    d4f4:	48 89 c7             	mov    %rax,%rdi
    d4f7:	e8 60 b4 ff ff       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d4fc:	48 89 c7             	mov    %rax,%rdi
    d4ff:	e8 92 40 00 00       	call   11596 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d504:	84 c0                	test   %al,%al
    d506:	74 29                	je     d531 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d508:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d50c:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d513:	48 89 d6             	mov    %rdx,%rsi
    d516:	48 89 c7             	mov    %rax,%rdi
    d519:	e8 3e b4 ff ff       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d51e:	48 89 c7             	mov    %rax,%rdi
    d521:	e8 70 40 00 00       	call   11596 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d526:	84 c0                	test   %al,%al
    d528:	74 07                	je     d531 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d52a:	b8 01 00 00 00       	mov    $0x1,%eax
    d52f:	eb 05                	jmp    d536 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d531:	b8 00 00 00 00       	mov    $0x0,%eax
    d536:	84 c0                	test   %al,%al
    d538:	74 50                	je     d58a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d53a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d53e:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d541:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d545:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d549:	48 89 d6             	mov    %rdx,%rsi
    d54c:	48 89 c7             	mov    %rax,%rdi
    d54f:	e8 08 b4 ff ff       	call   895c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d554:	48 89 c7             	mov    %rax,%rdi
    d557:	e8 54 40 00 00       	call   115b0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d55c:	48 89 c2             	mov    %rax,%rdx
    d55f:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d563:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d567:	48 89 ce             	mov    %rcx,%rsi
    d56a:	48 89 c7             	mov    %rax,%rdi
    d56d:	e8 70 40 00 00       	call   115e2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d572:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d576:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d57d:	48 89 d6             	mov    %rdx,%rsi
    d580:	48 89 c7             	mov    %rax,%rdi
    d583:	e8 b0 40 00 00       	call   11638 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d588:	eb 2f                	jmp    d5b9 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d58a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d58f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d593:	48 89 c7             	mov    %rax,%rdi
    d596:	e8 cd 3f 00 00       	call   11568 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d59b:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d59f:	0f 92 c0             	setb   %al
    d5a2:	84 c0                	test   %al,%al
    d5a4:	0f 85 20 ff ff ff    	jne    d4ca <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d5aa:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d5b1:	48 89 c7             	mov    %rax,%rdi
    d5b4:	e8 f1 39 00 00       	call   10faa <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d5b9:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d5c0:	48 89 c7             	mov    %rax,%rdi
    d5c3:	e8 94 b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d5c8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d5cc:	48 89 c7             	mov    %rax,%rdi
    d5cf:	e8 88 b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d5d4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d5d8:	48 89 c7             	mov    %rax,%rdi
    d5db:	e8 7c b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d5e0:	eb 3f                	jmp    d621 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d5e2:	48 89 c3             	mov    %rax,%rbx
    d5e5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d5ec:	48 89 c7             	mov    %rax,%rdi
    d5ef:	e8 68 b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d5f4:	eb 03                	jmp    d5f9 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d5f6:	48 89 c3             	mov    %rax,%rbx
    d5f9:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d5fd:	48 89 c7             	mov    %rax,%rdi
    d600:	e8 57 b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d605:	eb 03                	jmp    d60a <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d607:	48 89 c3             	mov    %rax,%rbx
    d60a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d60e:	48 89 c7             	mov    %rax,%rdi
    d611:	e8 46 b2 ff ff       	call   885c <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d616:	48 89 d8             	mov    %rbx,%rax
    d619:	48 89 c7             	mov    %rax,%rdi
    d61c:	e8 8f 71 ff ff       	call   47b0 <_Unwind_Resume@plt>
    d621:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d628:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d62c:	c9                   	leave
    d62d:	c3                   	ret

000000000000d62e <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d62e:	55                   	push   %rbp
    d62f:	48 89 e5             	mov    %rsp,%rbp
    d632:	41 54                	push   %r12
    d634:	53                   	push   %rbx
    d635:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d63c:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d643:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d64a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d64e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d652:	48 89 d6             	mov    %rdx,%rsi
    d655:	48 89 c7             	mov    %rax,%rdi
    d658:	e8 d5 9d ff ff       	call   7432 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d65d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d664:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d665:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d669:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d66d:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d671:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d675:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d679:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d67d:	48 89 c7             	mov    %rax,%rdi
    d680:	e8 e7 3f 00 00       	call   1166c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d685:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d68c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d690:	48 89 c7             	mov    %rax,%rdi
    d693:	e8 fa 3f 00 00       	call   11692 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d698:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d69f:	e9 dd 00 00 00       	jmp    d781 <_ZN9VulkanApp12createDeviceEv+0x153>
    d6a4:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d6ab:	48 89 c7             	mov    %rax,%rdi
    d6ae:	e8 63 40 00 00       	call   11716 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d6b3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d6b7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d6bb:	48 8b 10             	mov    (%rax),%rdx
    d6be:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6c5:	48 89 d6             	mov    %rdx,%rsi
    d6c8:	48 89 c7             	mov    %rax,%rdi
    d6cb:	e8 3c fd ff ff       	call   d40c <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d6d0:	84 c0                	test   %al,%al
    d6d2:	74 41                	je     d715 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d6d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d6d8:	48 8b 10             	mov    (%rax),%rdx
    d6db:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6e2:	48 89 d6             	mov    %rdx,%rsi
    d6e5:	48 89 c7             	mov    %rax,%rdi
    d6e8:	e8 f9 02 00 00       	call   d9e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d6ed:	84 c0                	test   %al,%al
    d6ef:	74 24                	je     d715 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d6f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d6f5:	48 8b 10             	mov    (%rax),%rdx
    d6f8:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d6ff:	48 89 d6             	mov    %rdx,%rsi
    d702:	48 89 c7             	mov    %rax,%rdi
    d705:	e8 16 06 00 00       	call   dd20 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d70a:	84 c0                	test   %al,%al
    d70c:	74 07                	je     d715 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d70e:	b8 01 00 00 00       	mov    $0x1,%eax
    d713:	eb 05                	jmp    d71a <_ZN9VulkanApp12createDeviceEv+0xec>
    d715:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d71a:	84 c0                	test   %al,%al
    d71c:	74 54                	je     d772 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d71e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d722:	48 8b 10             	mov    (%rax),%rdx
    d725:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d72c:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d733:	48 89 ce             	mov    %rcx,%rsi
    d736:	48 89 c7             	mov    %rax,%rdi
    d739:	e8 0e fd ff ff       	call   d44c <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d73e:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d745:	48 89 c7             	mov    %rax,%rdi
    d748:	e8 db 3f 00 00       	call   11728 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d74d:	84 c0                	test   %al,%al
    d74f:	74 21                	je     d772 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d751:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d758:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d75c:	48 89 d6             	mov    %rdx,%rsi
    d75f:	48 89 c7             	mov    %rax,%rdi
    d762:	e8 95 38 00 00       	call   10ffc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d767:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d76b:	48 8b 00             	mov    (%rax),%rax
    d76e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d772:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d779:	48 89 c7             	mov    %rax,%rdi
    d77c:	e8 75 3f 00 00       	call   116f6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d781:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d788:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d78f:	48 89 d6             	mov    %rdx,%rsi
    d792:	48 89 c7             	mov    %rax,%rdi
    d795:	e8 21 3f 00 00       	call   116bb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d79a:	84 c0                	test   %al,%al
    d79c:	0f 85 02 ff ff ff    	jne    d6a4 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d7a2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d7a7:	75 3b                	jne    d7e4 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d7a9:	bf 10 00 00 00       	mov    $0x10,%edi
    d7ae:	e8 ed 69 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    d7b3:	48 89 c3             	mov    %rax,%rbx
    d7b6:	48 8d 05 5b f2 00 00 	lea    0xf25b(%rip),%rax        # 1ca18 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d7bd:	48 89 c6             	mov    %rax,%rsi
    d7c0:	48 89 df             	mov    %rbx,%rdi
    d7c3:	e8 58 69 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    d7c8:	48 8b 05 d9 d7 01 00 	mov    0x1d7d9(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d7cf:	48 89 c2             	mov    %rax,%rdx
    d7d2:	48 8d 05 67 d5 01 00 	lea    0x1d567(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d7d9:	48 89 c6             	mov    %rax,%rsi
    d7dc:	48 89 df             	mov    %rbx,%rdi
    d7df:	e8 6c 6f ff ff       	call   4750 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d7e4:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d7e8:	48 89 c7             	mov    %rax,%rdi
    d7eb:	e8 36 38 00 00       	call   11026 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d7f0:	8b 00                	mov    (%rax),%eax
    d7f2:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d7f5:	f3 0f 10 05 c3 f6 00 	movss  0xf6c3(%rip),%xmm0        # 1cec0 <_ZZN9VulkanApp6renderEvE11submitCount+0x340>
    d7fc:	00 
    d7fd:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d802:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d806:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d80d:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d814:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d819:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d820:	00 00 00 
  queueInfo.pNext = nullptr;
    d823:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d82a:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d82e:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d831:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d837:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d83e:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d841:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d845:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d849:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d850:	b8 00 00 00 00       	mov    $0x0,%eax
    d855:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d85a:	48 89 d7             	mov    %rdx,%rdi
    d85d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d860:	48 89 fa             	mov    %rdi,%rdx
    d863:	89 02                	mov    %eax,(%rdx)
    d865:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d869:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d86d:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d874:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d87b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d882:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d889:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d890:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d891:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d898:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d89b:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d8a2:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d8a6:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d8ad:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d8b0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d8b7:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d8be:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d8c5:	48 05 90 00 00 00    	add    $0x90,%rax
    d8cb:	48 89 c7             	mov    %rax,%rdi
    d8ce:	e8 29 3c 00 00       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d8d3:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d8d9:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d8e0:	48 05 90 00 00 00    	add    $0x90,%rax
    d8e6:	48 89 c7             	mov    %rax,%rdi
    d8e9:	e8 56 3c 00 00       	call   11544 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d8ee:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d8f5:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d8fc:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d903:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d90a:	48 83 c0 28          	add    $0x28,%rax
    d90e:	48 89 c7             	mov    %rax,%rdi
    d911:	e8 e6 3b 00 00       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d916:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d91c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d923:	48 83 c0 28          	add    $0x28,%rax
    d927:	48 89 c7             	mov    %rax,%rdi
    d92a:	e8 f1 3b 00 00       	call   11520 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d92f:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d936:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d93d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d941:	ba 00 00 00 00       	mov    $0x0,%edx
    d946:	48 89 ce             	mov    %rcx,%rsi
    d949:	48 89 c7             	mov    %rax,%rdi
    d94c:	e8 f7 7f ff ff       	call   5948 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d951:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d958:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d95c:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d963:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d967:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d96e:	48 8b 40 50          	mov    0x50(%rax),%rax
    d972:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d975:	48 89 d1             	mov    %rdx,%rcx
    d978:	ba 00 00 00 00       	mov    $0x0,%edx
    d97d:	48 89 c7             	mov    %rax,%rdi
    d980:	e8 4b 6c ff ff       	call   45d0 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d985:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d98c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d990:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d994:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d99b:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d99e:	89 50 68             	mov    %edx,0x68(%rax)
}
    d9a1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d9a5:	48 89 c7             	mov    %rax,%rdi
    d9a8:	e8 af ab ff ff       	call   855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d9ad:	eb 2a                	jmp    d9d9 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d9af:	49 89 c4             	mov    %rax,%r12
    d9b2:	48 89 df             	mov    %rbx,%rdi
    d9b5:	e8 c6 68 ff ff       	call   4280 <__cxa_free_exception@plt>
    d9ba:	4c 89 e3             	mov    %r12,%rbx
    d9bd:	eb 03                	jmp    d9c2 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d9bf:	48 89 c3             	mov    %rax,%rbx
    d9c2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d9c6:	48 89 c7             	mov    %rax,%rdi
    d9c9:	e8 8e ab ff ff       	call   855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d9ce:	48 89 d8             	mov    %rbx,%rax
    d9d1:	48 89 c7             	mov    %rax,%rdi
    d9d4:	e8 d7 6d ff ff       	call   47b0 <_Unwind_Resume@plt>
    d9d9:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d9e0:	5b                   	pop    %rbx
    d9e1:	41 5c                	pop    %r12
    d9e3:	5d                   	pop    %rbp
    d9e4:	c3                   	ret
    d9e5:	90                   	nop

000000000000d9e6 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d9e6:	55                   	push   %rbp
    d9e7:	48 89 e5             	mov    %rsp,%rbp
    d9ea:	53                   	push   %rbx
    d9eb:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d9f2:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d9f9:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    da00:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    da07:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    da0e:	ba 00 00 00 00       	mov    $0x0,%edx
    da13:	48 89 ce             	mov    %rcx,%rsi
    da16:	48 89 c7             	mov    %rax,%rdi
    da19:	e8 3f 97 ff ff       	call   715d <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    da1e:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    da25:	48 89 c7             	mov    %rax,%rdi
    da28:	e8 75 36 00 00       	call   110a2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    da2d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    da34:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    da38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da3c:	48 89 c7             	mov    %rax,%rdi
    da3f:	e8 fa 3d 00 00       	call   1183e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    da44:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    da4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da4f:	48 89 c7             	mov    %rax,%rdi
    da52:	e8 0d 3e 00 00       	call   11864 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    da57:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    da5e:	e9 8c 00 00 00       	jmp    daef <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    da63:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    da6a:	48 89 c7             	mov    %rax,%rdi
    da6d:	e8 7a 3e 00 00       	call   118ec <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    da72:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    da76:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    da7d:	48 89 c7             	mov    %rax,%rdi
    da80:	e8 3b 6d ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    da85:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    da89:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    da90:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    da97:	48 89 ce             	mov    %rcx,%rsi
    da9a:	48 89 c7             	mov    %rax,%rdi
    da9d:	e8 6e 71 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    daa2:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    daa9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dab0:	48 89 d6             	mov    %rdx,%rsi
    dab3:	48 89 c7             	mov    %rax,%rdi
    dab6:	e8 43 3e 00 00       	call   118fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    dabb:	8b 10                	mov    (%rax),%edx
    dabd:	83 c2 01             	add    $0x1,%edx
    dac0:	89 10                	mov    %edx,(%rax)
    dac2:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dac9:	48 89 c7             	mov    %rax,%rdi
    dacc:	e8 4f 67 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dad1:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    dad8:	48 89 c7             	mov    %rax,%rdi
    dadb:	e8 a0 69 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    dae0:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    dae7:	48 89 c7             	mov    %rax,%rdi
    daea:	e8 d9 3d 00 00       	call   118c8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    daef:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    daf6:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    dafd:	48 89 d6             	mov    %rdx,%rsi
    db00:	48 89 c7             	mov    %rax,%rdi
    db03:	e8 85 3d 00 00       	call   1188d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    db08:	84 c0                	test   %al,%al
    db0a:	0f 85 53 ff ff ff    	jne    da63 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    db10:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    db17:	48 05 90 00 00 00    	add    $0x90,%rax
    db1d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    db21:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db25:	48 89 c7             	mov    %rax,%rdi
    db28:	e8 6f 38 00 00       	call   1139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    db2d:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    db34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db38:	48 89 c7             	mov    %rax,%rdi
    db3b:	e8 82 38 00 00       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    db40:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    db47:	e9 ed 00 00 00       	jmp    dc39 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    db4c:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    db53:	48 89 c7             	mov    %rax,%rdi
    db56:	e8 eb 38 00 00       	call   11446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    db5b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    db5f:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    db63:	48 89 c7             	mov    %rax,%rdi
    db66:	e8 55 6c ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    db6b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db6f:	48 8b 08             	mov    (%rax),%rcx
    db72:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    db76:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    db7d:	48 89 ce             	mov    %rcx,%rsi
    db80:	48 89 c7             	mov    %rax,%rdi
    db83:	e8 88 70 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    db88:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    db8f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    db96:	48 89 d6             	mov    %rdx,%rsi
    db99:	48 89 c7             	mov    %rax,%rdi
    db9c:	e8 5d 3d 00 00       	call   118fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    dba1:	8b 10                	mov    (%rax),%edx
    dba3:	83 c2 01             	add    $0x1,%edx
    dba6:	89 10                	mov    %edx,(%rax)
    dba8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dbaf:	48 89 c7             	mov    %rax,%rdi
    dbb2:	e8 69 66 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dbb7:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dbbb:	48 89 c7             	mov    %rax,%rdi
    dbbe:	e8 bd 68 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    dbc3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dbc7:	48 89 c7             	mov    %rax,%rdi
    dbca:	e8 f1 6b ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    dbcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbd3:	48 8b 08             	mov    (%rax),%rcx
    dbd6:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    dbda:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dbde:	48 89 ce             	mov    %rcx,%rsi
    dbe1:	48 89 c7             	mov    %rax,%rdi
    dbe4:	e8 27 70 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    dbe9:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    dbed:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dbf4:	48 89 d6             	mov    %rdx,%rsi
    dbf7:	48 89 c7             	mov    %rax,%rdi
    dbfa:	e8 ff 3c 00 00       	call   118fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    dbff:	8b 00                	mov    (%rax),%eax
    dc01:	83 f8 01             	cmp    $0x1,%eax
    dc04:	0f 96 c3             	setbe  %bl
    dc07:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dc0b:	48 89 c7             	mov    %rax,%rdi
    dc0e:	e8 0d 66 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dc13:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dc17:	48 89 c7             	mov    %rax,%rdi
    dc1a:	e8 61 68 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    dc1f:	84 db                	test   %bl,%bl
    dc21:	74 07                	je     dc2a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    dc23:	bb 00 00 00 00       	mov    $0x0,%ebx
    dc28:	eb 35                	jmp    dc5f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    dc2a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    dc31:	48 89 c7             	mov    %rax,%rdi
    dc34:	e8 ed 37 00 00       	call   11426 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    dc39:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    dc40:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    dc47:	48 89 d6             	mov    %rdx,%rsi
    dc4a:	48 89 c7             	mov    %rax,%rdi
    dc4d:	e8 99 37 00 00       	call   113eb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    dc52:	84 c0                	test   %al,%al
    dc54:	0f 85 f2 fe ff ff    	jne    db4c <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    dc5a:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    dc5f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dc66:	48 89 c7             	mov    %rax,%rdi
    dc69:	e8 50 34 00 00       	call   110be <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    dc6e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    dc75:	48 89 c7             	mov    %rax,%rdi
    dc78:	e8 55 a6 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    dc7d:	89 d8                	mov    %ebx,%eax
    dc7f:	e9 96 00 00 00       	jmp    dd1a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    dc84:	48 89 c3             	mov    %rax,%rbx
    dc87:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dc8e:	48 89 c7             	mov    %rax,%rdi
    dc91:	e8 8a 65 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dc96:	eb 03                	jmp    dc9b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    dc98:	48 89 c3             	mov    %rax,%rbx
    dc9b:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    dca2:	48 89 c7             	mov    %rax,%rdi
    dca5:	e8 d6 67 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    dcaa:	eb 45                	jmp    dcf1 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    dcac:	48 89 c3             	mov    %rax,%rbx
    dcaf:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    dcb6:	48 89 c7             	mov    %rax,%rdi
    dcb9:	e8 62 65 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dcbe:	eb 03                	jmp    dcc3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    dcc0:	48 89 c3             	mov    %rax,%rbx
    dcc3:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    dcc7:	48 89 c7             	mov    %rax,%rdi
    dcca:	e8 b1 67 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    dccf:	eb 20                	jmp    dcf1 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    dcd1:	48 89 c3             	mov    %rax,%rbx
    dcd4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    dcd8:	48 89 c7             	mov    %rax,%rdi
    dcdb:	e8 40 65 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    dce0:	eb 03                	jmp    dce5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    dce2:	48 89 c3             	mov    %rax,%rbx
    dce5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    dce9:	48 89 c7             	mov    %rax,%rdi
    dcec:	e8 8f 67 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
}
    dcf1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    dcf8:	48 89 c7             	mov    %rax,%rdi
    dcfb:	e8 be 33 00 00       	call   110be <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    dd00:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    dd07:	48 89 c7             	mov    %rax,%rdi
    dd0a:	e8 c3 a5 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    dd0f:	48 89 d8             	mov    %rbx,%rax
    dd12:	48 89 c7             	mov    %rax,%rdi
    dd15:	e8 96 6a ff ff       	call   47b0 <_Unwind_Resume@plt>
    dd1a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dd1e:	c9                   	leave
    dd1f:	c3                   	ret

000000000000dd20 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    dd20:	55                   	push   %rbp
    dd21:	48 89 e5             	mov    %rsp,%rbp
    dd24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    dd2c:	b8 01 00 00 00       	mov    $0x1,%eax
}
    dd31:	5d                   	pop    %rbp
    dd32:	c3                   	ret
    dd33:	90                   	nop

000000000000dd34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    dd34:	55                   	push   %rbp
    dd35:	48 89 e5             	mov    %rsp,%rbp
    dd38:	41 54                	push   %r12
    dd3a:	53                   	push   %rbx
    dd3b:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    dd42:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    dd49:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    dd50:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dd57:	48 8b 50 48          	mov    0x48(%rax),%rdx
    dd5b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dd62:	48 8b 48 58          	mov    0x58(%rax),%rcx
    dd66:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    dd6a:	48 89 ce             	mov    %rcx,%rsi
    dd6d:	48 89 c7             	mov    %rax,%rdi
    dd70:	e8 32 9d ff ff       	call   7aa7 <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    dd75:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dd7c:	48 8b 50 48          	mov    0x48(%rax),%rdx
    dd80:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dd87:	48 8b 48 58          	mov    0x58(%rax),%rcx
    dd8b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd92:	48 89 ce             	mov    %rcx,%rsi
    dd95:	48 89 c7             	mov    %rax,%rdi
    dd98:	e8 b8 9d ff ff       	call   7b55 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    dd9d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dda4:	48 8b 50 48          	mov    0x48(%rax),%rdx
    dda8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    ddaf:	48 8b 48 58          	mov    0x58(%rax),%rcx
    ddb3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ddba:	48 89 ce             	mov    %rcx,%rsi
    ddbd:	48 89 c7             	mov    %rax,%rdi
    ddc0:	e8 07 9f ff ff       	call   7ccc <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    ddc5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddcc:	48 89 c6             	mov    %rax,%rsi
    ddcf:	b8 00 00 00 00       	mov    $0x0,%eax
    ddd4:	ba 0d 00 00 00       	mov    $0xd,%edx
    ddd9:	48 89 f7             	mov    %rsi,%rdi
    dddc:	48 89 d1             	mov    %rdx,%rcx
    dddf:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    dde2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dde9:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    ddef:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ddf6:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ddfd:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    ddfe:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    de05:	48 8b 50 48          	mov    0x48(%rax),%rdx
    de09:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de10:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    de14:	8b 45 80             	mov    -0x80(%rbp),%eax
    de17:	83 c0 01             	add    $0x1,%eax
    de1a:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    de1d:	8b 45 84             	mov    -0x7c(%rbp),%eax
    de20:	85 c0                	test   %eax,%eax
    de22:	74 0e                	je     de32 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    de24:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    de27:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    de2a:	73 06                	jae    de32 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    de2c:	8b 45 84             	mov    -0x7c(%rbp),%eax
    de2f:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    de32:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    de39:	8b 55 ec             	mov    -0x14(%rbp),%edx
    de3c:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    de3f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    de46:	48 89 c7             	mov    %rax,%rdi
    de49:	e8 b4 3b 00 00       	call   11a02 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    de4e:	84 c0                	test   %al,%al
    de50:	74 3b                	je     de8d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    de52:	bf 10 00 00 00       	mov    $0x10,%edi
    de57:	e8 44 63 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    de5c:	48 89 c3             	mov    %rax,%rbx
    de5f:	48 8d 05 d6 eb 00 00 	lea    0xebd6(%rip),%rax        # 1ca3c <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    de66:	48 89 c6             	mov    %rax,%rsi
    de69:	48 89 df             	mov    %rbx,%rdi
    de6c:	e8 af 62 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    de71:	48 8b 05 30 d1 01 00 	mov    0x1d130(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    de78:	48 89 c2             	mov    %rax,%rdx
    de7b:	48 8d 05 be ce 01 00 	lea    0x1cebe(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    de82:	48 89 c6             	mov    %rax,%rsi
    de85:	48 89 df             	mov    %rbx,%rdi
    de88:	e8 c3 68 ff ff       	call   4750 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    de8d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    de94:	be 00 00 00 00       	mov    $0x0,%esi
    de99:	48 89 c7             	mov    %rax,%rdi
    de9c:	e8 a3 3b 00 00       	call   11a44 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    dea1:	8b 10                	mov    (%rax),%edx
    dea3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    deaa:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    dead:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    deb4:	be 00 00 00 00       	mov    $0x0,%esi
    deb9:	48 89 c7             	mov    %rax,%rdi
    debc:	e8 83 3b 00 00       	call   11a44 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    dec1:	8b 50 04             	mov    0x4(%rax),%edx
    dec4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    decb:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    dece:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ded5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    ded9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dedd:	48 89 c7             	mov    %rax,%rdi
    dee0:	e8 7f 3b 00 00       	call   11a64 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    dee5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    deec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    def0:	48 89 c7             	mov    %rax,%rdi
    def3:	e8 92 3b 00 00       	call   11a8a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    def8:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    deff:	eb 5b                	jmp    df5c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    df01:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    df08:	48 89 c7             	mov    %rax,%rdi
    df0b:	e8 fe 3b 00 00       	call   11b0e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    df10:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    df14:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df18:	8b 00                	mov    (%rax),%eax
    df1a:	83 f8 2b             	cmp    $0x2b,%eax
    df1d:	75 2e                	jne    df4d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    df1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df23:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    df26:	85 c0                	test   %eax,%eax
    df28:	75 23                	jne    df4d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    df2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df2e:	8b 10                	mov    (%rax),%edx
    df30:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df37:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    df3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    df3e:	8b 50 04             	mov    0x4(%rax),%edx
    df41:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df48:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    df4b:	eb 2c                	jmp    df79 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    df4d:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    df54:	48 89 c7             	mov    %rax,%rdi
    df57:	e8 92 3b 00 00       	call   11aee <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    df5c:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    df63:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    df6a:	48 89 d6             	mov    %rdx,%rsi
    df6d:	48 89 c7             	mov    %rax,%rdi
    df70:	e8 3e 3b 00 00       	call   11ab3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    df75:	84 c0                	test   %al,%al
    df77:	75 88                	jne    df01 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    df79:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    df80:	8b 50 24             	mov    0x24(%rax),%edx
    df83:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    df8a:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    df8d:	8b 45 88             	mov    -0x78(%rbp),%eax
    df90:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    df93:	8b 45 8c             	mov    -0x74(%rbp),%eax
    df96:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    df99:	8b 45 98             	mov    -0x68(%rbp),%eax
    df9c:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    df9f:	73 06                	jae    dfa7 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    dfa1:	8b 45 98             	mov    -0x68(%rbp),%eax
    dfa4:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    dfa7:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dfaa:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    dfad:	73 06                	jae    dfb5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    dfaf:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dfb2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    dfb5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dfbc:	8b 55 e8             	mov    -0x18(%rbp),%edx
    dfbf:	89 50 2c             	mov    %edx,0x2c(%rax)
    dfc2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dfc9:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    dfcc:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    dfcf:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dfd6:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    dfdd:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    dfe1:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    dfe5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dfec:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    dff3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dffa:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    e001:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    e008:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e00f:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    e013:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e017:	48 89 c7             	mov    %rax,%rdi
    e01a:	e8 01 3b 00 00       	call   11b20 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    e01f:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    e026:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    e02a:	48 89 c7             	mov    %rax,%rdi
    e02d:	e8 14 3b 00 00       	call   11b46 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    e032:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    e039:	eb 3c                	jmp    e077 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    e03b:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e042:	48 89 c7             	mov    %rax,%rdi
    e045:	e8 80 3b 00 00       	call   11bca <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    e04a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    e04e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e052:	8b 00                	mov    (%rax),%eax
    e054:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    e057:	75 0f                	jne    e068 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    e059:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e060:	8b 55 cc             	mov    -0x34(%rbp),%edx
    e063:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    e066:	eb 2c                	jmp    e094 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    e068:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e06f:	48 89 c7             	mov    %rax,%rdi
    e072:	e8 33 3b 00 00       	call   11baa <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    e077:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    e07e:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    e085:	48 89 d6             	mov    %rdx,%rsi
    e088:	48 89 c7             	mov    %rax,%rdi
    e08b:	e8 df 3a 00 00       	call   11b6f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e090:	84 c0                	test   %al,%al
    e092:	75 a7                	jne    e03b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    e094:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e09b:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    e0a2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e0a9:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    e0b0:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e0b7:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    e0be:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e0c5:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    e0cc:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    e0cd:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    e0d0:	83 e0 01             	and    $0x1,%eax
    e0d3:	85 c0                	test   %eax,%eax
    e0d5:	74 1e                	je     e0f5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    e0d7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e0de:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    e0e5:	8b 45 ac             	mov    -0x54(%rbp),%eax
    e0e8:	83 e0 01             	and    $0x1,%eax
    e0eb:	85 c0                	test   %eax,%eax
    e0ed:	0f 84 9b 00 00 00    	je     e18e <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    e0f3:	eb 3b                	jmp    e130 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e0f5:	bf 10 00 00 00       	mov    $0x10,%edi
    e0fa:	e8 a1 60 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e0ff:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    e102:	48 8d 05 57 e9 00 00 	lea    0xe957(%rip),%rax        # 1ca60 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    e109:	48 89 c6             	mov    %rax,%rsi
    e10c:	48 89 df             	mov    %rbx,%rdi
    e10f:	e8 0c 60 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e114:	48 8b 05 8d ce 01 00 	mov    0x1ce8d(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e11b:	48 89 c2             	mov    %rax,%rdx
    e11e:	48 8d 05 1b cc 01 00 	lea    0x1cc1b(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e125:	48 89 c6             	mov    %rax,%rsi
    e128:	48 89 df             	mov    %rbx,%rdi
    e12b:	e8 20 66 ff ff       	call   4750 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    e130:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e137:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    e13e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e145:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    e14c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e153:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    e15a:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    e15b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e162:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    e169:	00 

  return swapchainCreateInfo;
    e16a:	90                   	nop
}
    e16b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e172:	48 89 c7             	mov    %rax,%rdi
    e175:	e8 f6 aa ff ff       	call   8c70 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    e17a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e181:	48 89 c7             	mov    %rax,%rdi
    e184:	e8 83 a9 ff ff       	call   8b0c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    e189:	e9 9c 00 00 00       	jmp    e22a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e18e:	bf 10 00 00 00       	mov    $0x10,%edi
    e193:	e8 08 60 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    e198:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    e19b:	48 8d 05 f6 e8 00 00 	lea    0xe8f6(%rip),%rax        # 1ca98 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    e1a2:	48 89 c6             	mov    %rax,%rsi
    e1a5:	48 89 df             	mov    %rbx,%rdi
    e1a8:	e8 73 5f ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e1ad:	48 8b 05 f4 cd 01 00 	mov    0x1cdf4(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e1b4:	48 89 c2             	mov    %rax,%rdx
    e1b7:	48 8d 05 82 cb 01 00 	lea    0x1cb82(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e1be:	48 89 c6             	mov    %rax,%rsi
    e1c1:	48 89 df             	mov    %rbx,%rdi
    e1c4:	e8 87 65 ff ff       	call   4750 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    e1c9:	49 89 c4             	mov    %rax,%r12
    e1cc:	48 89 df             	mov    %rbx,%rdi
    e1cf:	e8 ac 60 ff ff       	call   4280 <__cxa_free_exception@plt>
    e1d4:	4c 89 e3             	mov    %r12,%rbx
    e1d7:	eb 23                	jmp    e1fc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    e1d9:	49 89 c4             	mov    %rax,%r12
    e1dc:	48 89 df             	mov    %rbx,%rdi
    e1df:	e8 9c 60 ff ff       	call   4280 <__cxa_free_exception@plt>
    e1e4:	4c 89 e3             	mov    %r12,%rbx
    e1e7:	eb 13                	jmp    e1fc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    e1e9:	49 89 c4             	mov    %rax,%r12
    e1ec:	48 89 df             	mov    %rbx,%rdi
    e1ef:	e8 8c 60 ff ff       	call   4280 <__cxa_free_exception@plt>
    e1f4:	4c 89 e3             	mov    %r12,%rbx
    e1f7:	eb 03                	jmp    e1fc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    e1f9:	48 89 c3             	mov    %rax,%rbx
    e1fc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e203:	48 89 c7             	mov    %rax,%rdi
    e206:	e8 65 aa ff ff       	call   8c70 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    e20b:	eb 03                	jmp    e210 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    e20d:	48 89 c3             	mov    %rax,%rbx
    e210:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e217:	48 89 c7             	mov    %rax,%rdi
    e21a:	e8 ed a8 ff ff       	call   8b0c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    e21f:	48 89 d8             	mov    %rbx,%rax
    e222:	48 89 c7             	mov    %rax,%rdi
    e225:	e8 86 65 ff ff       	call   47b0 <_Unwind_Resume@plt>
    e22a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    e231:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    e238:	5b                   	pop    %rbx
    e239:	41 5c                	pop    %r12
    e23b:	5d                   	pop    %rbp
    e23c:	c3                   	ret
    e23d:	90                   	nop

000000000000e23e <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    e23e:	55                   	push   %rbp
    e23f:	48 89 e5             	mov    %rsp,%rbp
    e242:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    e246:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    e24a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e24e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e252:	48 89 d6             	mov    %rdx,%rsi
    e255:	48 89 c7             	mov    %rax,%rdi
    e258:	e8 d7 fa ff ff       	call   dd34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    e25d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    e261:	48 8b 40 50          	mov    0x50(%rax),%rax
    e265:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e269:	ba 00 00 00 00       	mov    $0x0,%edx
    e26e:	48 89 ce             	mov    %rcx,%rsi
    e271:	48 89 c7             	mov    %rax,%rdi
    e274:	e8 ff 77 ff ff       	call   5a78 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    e279:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    e27d:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    e281:	90                   	nop
    e282:	c9                   	leave
    e283:	c3                   	ret

000000000000e284 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    e284:	55                   	push   %rbp
    e285:	48 89 e5             	mov    %rsp,%rbp
    e288:	53                   	push   %rbx
    e289:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    e290:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    e297:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e29e:	48 8b 50 70          	mov    0x70(%rax),%rdx
    e2a2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e2a9:	48 8b 48 50          	mov    0x50(%rax),%rcx
    e2ad:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e2b1:	48 89 ce             	mov    %rcx,%rsi
    e2b4:	48 89 c7             	mov    %rax,%rdi
    e2b7:	e8 87 9b ff ff       	call   7e43 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    e2bc:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e2c3:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    e2ca:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e2ce:	48 89 c6             	mov    %rax,%rsi
    e2d1:	48 89 d7             	mov    %rdx,%rdi
    e2d4:	e8 03 39 00 00       	call   11bdc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    e2d9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e2dd:	48 89 c7             	mov    %rax,%rdi
    e2e0:	e8 ef aa ff ff       	call   8dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    e2e5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e2ec:	48 05 c0 00 00 00    	add    $0xc0,%rax
    e2f2:	48 89 c7             	mov    %rax,%rdi
    e2f5:	e8 1a 39 00 00       	call   11c14 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e2fa:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    e2fe:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e305:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    e30c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e310:	48 89 c6             	mov    %rax,%rsi
    e313:	48 89 d7             	mov    %rdx,%rdi
    e316:	e8 1d 39 00 00       	call   11c38 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    e31b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e322:	00 
    e323:	e9 f1 00 00 00       	jmp    e419 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    e328:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e32c:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    e333:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    e337:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    e33b:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    e33f:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    e343:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    e34a:	00 00 00 
    imageViewInfo.pNext = nullptr;
    e34d:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    e354:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    e358:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e35f:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    e366:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e36a:	48 89 c6             	mov    %rax,%rsi
    e36d:	48 89 d7             	mov    %rdx,%rdi
    e370:	e8 49 39 00 00       	call   11cbe <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    e375:	48 8b 00             	mov    (%rax),%rax
    e378:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    e37c:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    e383:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e38a:	8b 40 78             	mov    0x78(%rax),%eax
    e38d:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    e390:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    e397:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    e39e:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    e3a5:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    e3ac:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    e3b3:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    e3ba:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    e3c1:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    e3c8:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    e3cf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e3d6:	48 8b 40 50          	mov    0x50(%rax),%rax
    e3da:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    e3e1:	ba 00 00 00 00       	mov    $0x0,%edx
    e3e6:	48 89 ce             	mov    %rcx,%rsi
    e3e9:	48 89 c7             	mov    %rax,%rdi
    e3ec:	e8 27 77 ff ff       	call   5b18 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    e3f1:	48 89 c3             	mov    %rax,%rbx
    e3f4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    e3fb:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    e402:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e406:	48 89 c6             	mov    %rax,%rsi
    e409:	48 89 d7             	mov    %rdx,%rdi
    e40c:	e8 cd 38 00 00       	call   11cde <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    e411:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    e414:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    e419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e41d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    e421:	0f 82 01 ff ff ff    	jb     e328 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    e427:	90                   	nop
    e428:	90                   	nop
    e429:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e42d:	c9                   	leave
    e42e:	c3                   	ret
    e42f:	90                   	nop

000000000000e430 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    e430:	55                   	push   %rbp
    e431:	48 89 e5             	mov    %rsp,%rbp
    e434:	41 55                	push   %r13
    e436:	41 54                	push   %r12
    e438:	53                   	push   %rbx
    e439:	48 81 ec 48 05 00 00 	sub    $0x548,%rsp
    e440:	48 89 bd a8 fa ff ff 	mov    %rdi,-0x558(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    e447:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e44e:	00 00 00 00 
    e452:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e459:	00 00 00 00 
  shaderModule.vertex = vkh::createShaderModule(
    e45d:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e464:	48 89 c7             	mov    %rax,%rdi
    e467:	e8 54 63 ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    e46c:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e473:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e47a:	48 8d 0d 4f e6 00 00 	lea    0xe64f(%rip),%rcx        # 1cad0 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e481:	48 89 ce             	mov    %rcx,%rsi
    e484:	48 89 c7             	mov    %rax,%rdi
    e487:	e8 84 67 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e48c:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e493:	48 8b 40 50          	mov    0x50(%rax),%rax
    e497:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e49e:	ba 00 00 00 00       	mov    $0x0,%edx
    e4a3:	48 89 ce             	mov    %rcx,%rsi
    e4a6:	48 89 c7             	mov    %rax,%rdi
    e4a9:	e8 da 77 ff ff       	call   5c88 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e4ae:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    e4b5:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e4bc:	48 89 c7             	mov    %rax,%rdi
    e4bf:	e8 5c 5d ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e4c4:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e4cb:	48 89 c7             	mov    %rax,%rdi
    e4ce:	e8 ad 5f ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
      device, "/home/xunililak/Code/Projects/4-RTVulkan/build/shaders/"
              "triangle_vert.spv");
  shaderModule.fragment = vkh::createShaderModule(
    e4d3:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e4da:	48 89 c7             	mov    %rax,%rdi
    e4dd:	e8 de 62 ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
    e4e2:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e4e9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e4f0:	48 8d 0d 29 e6 00 00 	lea    0xe629(%rip),%rcx        # 1cb20 <_ZN6__pstl9execution2v1L5unseqE+0x151>
    e4f7:	48 89 ce             	mov    %rcx,%rsi
    e4fa:	48 89 c7             	mov    %rax,%rdi
    e4fd:	e8 0e 67 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e502:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e509:	48 8b 40 50          	mov    0x50(%rax),%rax
    e50d:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e514:	ba 00 00 00 00       	mov    $0x0,%edx
    e519:	48 89 ce             	mov    %rcx,%rsi
    e51c:	48 89 c7             	mov    %rax,%rdi
    e51f:	e8 64 77 ff ff       	call   5c88 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e524:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
    e52b:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e532:	48 89 c7             	mov    %rax,%rdi
    e535:	e8 e6 5c ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e53a:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e541:	48 89 c7             	mov    %rax,%rdi
    e544:	e8 37 5f ff ff       	call   4480 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e549:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e54d:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e554:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e55b:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e562:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e569:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e56c:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e573:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e576:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e57d:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e584:	48 8d 05 de e5 00 00 	lea    0xe5de(%rip),%rax        # 1cb69 <_ZN6__pstl9execution2v1L5unseqE+0x19a>
    e58b:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e592:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e599:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e59d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5a1:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e5a8:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e5af:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e5b6:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e5bd:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e5c0:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e5c7:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e5ca:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e5d1:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e5d8:	48 8d 05 8a e5 00 00 	lea    0xe58a(%rip),%rax        # 1cb69 <_ZN6__pstl9execution2v1L5unseqE+0x19a>
    e5df:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e5e6:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e5ed:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e5f1:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e5f8:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e5ff:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e606:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e60d:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e614:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e61b:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e622:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e629:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e630:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e637:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e63e:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e645:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e64c:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e653:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e65a:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e661:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e668:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e66f:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e676:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e67d:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e684:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e68b:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e692:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e699:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e69d:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e6a4:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e6ab:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e6b2:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e6b9:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e6bc:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e6c3:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e6c6:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e6cd:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e6d1:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e6d8:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e6db:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e6e2:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e6e6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e6ea:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e6f1:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e6f8:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e6ff:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e702:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e709:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e70c:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e713:	00 00 00 

  /*  */
  VkViewport viewport{};
    e716:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e71a:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e721:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e728:	ff 
  viewport.x = 0.0f;
    e729:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e72d:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e734:	ff 
  viewport.y = 0.0f;
    e735:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e739:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e740:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e741:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e748:	8b 40 7c             	mov    0x7c(%rax),%eax
    e74b:	89 c0                	mov    %eax,%eax
    e74d:	48 85 c0             	test   %rax,%rax
    e750:	78 0b                	js     e75d <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e752:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e756:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e75b:	eb 19                	jmp    e776 <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e75d:	48 89 c2             	mov    %rax,%rdx
    e760:	48 d1 ea             	shr    %rdx
    e763:	83 e0 01             	and    $0x1,%eax
    e766:	48 09 c2             	or     %rax,%rdx
    e769:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e76d:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e772:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e776:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e77d:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e77e:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e785:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e78b:	89 c0                	mov    %eax,%eax
    e78d:	48 85 c0             	test   %rax,%rax
    e790:	78 0b                	js     e79d <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e792:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e796:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e79b:	eb 19                	jmp    e7b6 <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e79d:	48 89 c2             	mov    %rax,%rdx
    e7a0:	48 d1 ea             	shr    %rdx
    e7a3:	83 e0 01             	and    $0x1,%eax
    e7a6:	48 09 c2             	or     %rax,%rdx
    e7a9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7ad:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e7b2:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e7b6:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e7bd:	ff 
  viewport.minDepth = 0.0f;
    e7be:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e7c2:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e7c9:	ff 
  viewport.maxDepth = 1.0f;
    e7ca:	f3 0f 10 05 ee e6 00 	movss  0xe6ee(%rip),%xmm0        # 1cec0 <_ZZN9VulkanApp6renderEvE11submitCount+0x340>
    e7d1:	00 
    e7d2:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e7d9:	ff 

  VkRect2D scissor{};
    e7da:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e7e1:	00 00 00 00 
    e7e5:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e7ec:	00 00 00 00 
  scissor.offset = {0, 0};
    e7f0:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e7f7:	00 00 00 
    e7fa:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e801:	00 00 00 
  scissor.extent = swapchain.extent;
    e804:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    e80b:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e80f:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e816:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e81a:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e821:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e828:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e82f:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e836:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e839:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e840:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e843:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e84a:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e851:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e858:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e85b:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e862:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e869:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e86d:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e874:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e87b:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e882:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e889:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e890:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e893:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e89a:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e89e:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e8a5:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e8a8:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e8af:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e8b2:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e8b9:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e8bc:	f3 0f 10 05 fc e5 00 	movss  0xe5fc(%rip),%xmm0        # 1cec0 <_ZZN9VulkanApp6renderEvE11submitCount+0x340>
    e8c3:	00 
    e8c4:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e8cb:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e8cc:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e8d3:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e8d6:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e8dd:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e8e0:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e8e7:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e8ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e8ee:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e8f5:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e8f6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e8fa:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e901:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e902:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e906:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e90d:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e90e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e912:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e919:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e920:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e927:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e92e:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e931:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e938:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e93b:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e942:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e945:	f3 0f 10 05 73 e5 00 	movss  0xe573(%rip),%xmm0        # 1cec0 <_ZZN9VulkanApp6renderEvE11submitCount+0x340>
    e94c:	00 
    e94d:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e954:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e955:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e95c:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e960:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e967:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e96a:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e971:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e974:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e978:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e97f:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    e986:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    e98d:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    e990:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    e997:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e99a:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    e9a1:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    e9a4:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    e9ab:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e9ae:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    e9b5:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e9b8:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    e9bf:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e9c2:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e9c9:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e9cc:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    e9d3:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e9d6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e9da:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    e9e1:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e9e8:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e9ef:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    e9f6:	ff 
  colorBlendState.sType =
    e9f7:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    e9fe:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    ea01:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    ea08:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    ea0b:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    ea12:	00 00 00 
  colorBlendState.attachmentCount = 1;
    ea15:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    ea1c:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    ea1f:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    ea26:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    ea2d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea31:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    ea38:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    ea39:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea3d:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    ea44:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    ea45:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea49:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    ea50:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    ea51:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea55:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    ea5c:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    ea5d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ea61:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    ea68:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    ea6f:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    ea76:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    ea7d:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    ea80:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    ea87:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    ea8a:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    ea91:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    ea95:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    ea9c:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    ea9f:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    eaa6:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    eaaa:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eab1:	48 8b 40 50          	mov    0x50(%rax),%rax
    eab5:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    eabc:	ba 00 00 00 00       	mov    $0x0,%edx
    eac1:	48 89 ce             	mov    %rcx,%rsi
    eac4:	48 89 c7             	mov    %rax,%rdi
    eac7:	e8 f4 73 ff ff       	call   5ec0 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    eacc:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    ead3:	48 89 82 e0 00 00 00 	mov    %rax,0xe0(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    eada:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eade:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    eae5:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    eaec:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    eaf3:	ff 
  colorAttachment.format = swapchain.format;
    eaf4:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eafb:	8b 40 78             	mov    0x78(%rax),%eax
    eafe:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    eb04:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    eb0b:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    eb0e:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    eb15:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    eb18:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    eb1f:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    eb22:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    eb29:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    eb2c:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    eb33:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    eb36:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    eb3d:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    eb40:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    eb47:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    eb4a:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    eb51:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    eb55:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    eb5c:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    eb5f:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    eb66:	00 00 00 

  VkSubpassDescription subpass{};
    eb69:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eb6d:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    eb74:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    eb7b:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    eb82:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    eb89:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    eb90:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    eb91:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    eb98:	00 00 00 
  subpass.colorAttachmentCount = 1;
    eb9b:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    eba2:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    eba5:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    ebac:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkSubpassDependency subPassDep{}; /* Needed when rendering */
    ebb3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ebb7:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    ebbe:	0f 11 85 ac fb ff ff 	movups %xmm0,-0x454(%rbp)
  subPassDep.srcSubpass = VK_SUBPASS_EXTERNAL;
    ebc5:	c7 85 a0 fb ff ff ff 	movl   $0xffffffff,-0x460(%rbp)
    ebcc:	ff ff ff 
  subPassDep.dstSubpass = 0;
    ebcf:	c7 85 a4 fb ff ff 00 	movl   $0x0,-0x45c(%rbp)
    ebd6:	00 00 00 
  subPassDep.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    ebd9:	c7 85 a8 fb ff ff 00 	movl   $0x400,-0x458(%rbp)
    ebe0:	04 00 00 
  subPassDep.srcAccessMask = 0;
    ebe3:	c7 85 b0 fb ff ff 00 	movl   $0x0,-0x450(%rbp)
    ebea:	00 00 00 
  subPassDep.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    ebed:	c7 85 ac fb ff ff 00 	movl   $0x400,-0x454(%rbp)
    ebf4:	04 00 00 
  subPassDep.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    ebf7:	c7 85 b4 fb ff ff 00 	movl   $0x100,-0x44c(%rbp)
    ebfe:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    ec01:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ec05:	0f 29 85 60 fb ff ff 	movaps %xmm0,-0x4a0(%rbp)
    ec0c:	0f 29 85 70 fb ff ff 	movaps %xmm0,-0x490(%rbp)
    ec13:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    ec1a:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    ec21:	c7 85 60 fb ff ff 26 	movl   $0x26,-0x4a0(%rbp)
    ec28:	00 00 00 
  renderPassInfo.pNext = nullptr;
    ec2b:	48 c7 85 68 fb ff ff 	movq   $0x0,-0x498(%rbp)
    ec32:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    ec36:	c7 85 74 fb ff ff 01 	movl   $0x1,-0x48c(%rbp)
    ec3d:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    ec40:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    ec47:	48 89 85 78 fb ff ff 	mov    %rax,-0x488(%rbp)
  renderPassInfo.subpassCount = 1;
    ec4e:	c7 85 80 fb ff ff 01 	movl   $0x1,-0x480(%rbp)
    ec55:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    ec58:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    ec5f:	48 89 85 88 fb ff ff 	mov    %rax,-0x478(%rbp)
  renderPassInfo.dependencyCount = 1;
    ec66:	c7 85 90 fb ff ff 01 	movl   $0x1,-0x470(%rbp)
    ec6d:	00 00 00 
  renderPassInfo.pDependencies = &subPassDep;
    ec70:	48 8d 85 a0 fb ff ff 	lea    -0x460(%rbp),%rax
    ec77:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    ec7e:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ec85:	48 8b 40 50          	mov    0x50(%rax),%rax
    ec89:	48 8d 8d 60 fb ff ff 	lea    -0x4a0(%rbp),%rcx
    ec90:	ba 00 00 00 00       	mov    $0x0,%edx
    ec95:	48 89 ce             	mov    %rcx,%rsi
    ec98:	48 89 c7             	mov    %rax,%rdi
    ec9b:	e8 b8 72 ff ff       	call   5f58 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    eca0:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
    eca7:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    ecae:	48 8d 95 d0 fa ff ff 	lea    -0x530(%rbp),%rdx
    ecb5:	b8 00 00 00 00       	mov    $0x0,%eax
    ecba:	b9 12 00 00 00       	mov    $0x12,%ecx
    ecbf:	48 89 d7             	mov    %rdx,%rdi
    ecc2:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    ecc5:	c7 85 d0 fa ff ff 1c 	movl   $0x1c,-0x530(%rbp)
    eccc:	00 00 00 
  pipelineInfo.pNext = nullptr;
    eccf:	48 c7 85 d8 fa ff ff 	movq   $0x0,-0x528(%rbp)
    ecd6:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    ecda:	c7 85 e4 fa ff ff 02 	movl   $0x2,-0x51c(%rbp)
    ece1:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    ece4:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    eceb:	48 89 85 e8 fa ff ff 	mov    %rax,-0x518(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    ecf2:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    ecf9:	48 89 85 f0 fa ff ff 	mov    %rax,-0x510(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    ed00:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    ed07:	48 89 85 f8 fa ff ff 	mov    %rax,-0x508(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    ed0e:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    ed15:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    ed1c:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    ed23:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    ed2a:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    ed31:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    ed38:	48 c7 85 20 fb ff ff 	movq   $0x0,-0x4e0(%rbp)
    ed3f:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    ed43:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    ed4a:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    ed51:	48 c7 85 30 fb ff ff 	movq   $0x0,-0x4d0(%rbp)
    ed58:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    ed5c:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ed63:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax
    ed6a:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    ed71:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ed78:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    ed7f:	48 89 85 40 fb ff ff 	mov    %rax,-0x4c0(%rbp)
  pipelineInfo.subpass = 0;
    ed86:	c7 85 48 fb ff ff 00 	movl   $0x0,-0x4b8(%rbp)
    ed8d:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    ed90:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    ed97:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    ed9b:	c7 85 58 fb ff ff ff 	movl   $0xffffffff,-0x4a8(%rbp)
    eda2:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    eda5:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
    edac:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
    edb3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    edba:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    edc1:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
    edc8:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
    edcf:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    edd6:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    eddd:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    ede4:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    edeb:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    edf2:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    edf9:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    ee00:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    ee07:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    ee0e:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    ee15:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    ee1c:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    ee23:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    ee2a:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    ee31:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    ee38:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    ee3f:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    ee46:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    ee4d:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    ee54:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    ee5b:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    ee5f:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    ee63:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    ee6a:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    ee71:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    ee75:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    ee79:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    ee80:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    ee87:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ee8b:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    ee8f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ee96:	49 89 c4             	mov    %rax,%r12
    ee99:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    ee9f:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    eea3:	48 89 c7             	mov    %rax,%rdi
    eea6:	e8 53 2e 00 00       	call   11cfe <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    eeab:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    eeaf:	4c 89 e6             	mov    %r12,%rsi
    eeb2:	4c 89 ef             	mov    %r13,%rdi
    eeb5:	4c 89 e1             	mov    %r12,%rcx
    eeb8:	4c 89 eb             	mov    %r13,%rbx
    eebb:	48 89 df             	mov    %rbx,%rdi
    eebe:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    eec5:	48 89 d1             	mov    %rdx,%rcx
    eec8:	48 89 fa             	mov    %rdi,%rdx
    eecb:	48 89 c7             	mov    %rax,%rdi
    eece:	e8 63 2e 00 00       	call   11d36 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    eed3:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    eed7:	48 89 c7             	mov    %rax,%rdi
    eeda:	e8 3b 2e 00 00       	call   11d1a <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    eedf:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eee6:	48 8b 90 e8 00 00 00 	mov    0xe8(%rax),%rdx
    eeed:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    eef4:	48 8b 70 50          	mov    0x50(%rax),%rsi
    eef8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    eefc:	48 8d 8d b0 fa ff ff 	lea    -0x550(%rbp),%rcx
    ef03:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ef09:	48 89 c7             	mov    %rax,%rdi
    ef0c:	e8 0c 2f 00 00       	call   11e1d <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
                                               pipelineInfoWrapper)[0];
    ef11:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ef15:	be 00 00 00 00       	mov    $0x0,%esi
    ef1a:	48 89 c7             	mov    %rax,%rdi
    ef1d:	e8 6c 30 00 00       	call   11f8e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self = vkh::createPipelines(device, graphicsPipeline.cache,
    ef22:	48 8b 10             	mov    (%rax),%rdx
    ef25:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ef2c:	48 89 90 d8 00 00 00 	mov    %rdx,0xd8(%rax)
    ef33:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ef37:	48 89 c7             	mov    %rax,%rdi
    ef3a:	e8 0b 30 00 00       	call   11f4a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    ef3f:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    ef46:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ef4d:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef51:	ba 00 00 00 00       	mov    $0x0,%edx
    ef56:	48 89 ce             	mov    %rcx,%rsi
    ef59:	48 89 c7             	mov    %rax,%rdi
    ef5c:	e8 f7 7c ff ff       	call   6c58 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    ef61:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    ef68:	48 8b 85 a8 fa ff ff 	mov    -0x558(%rbp),%rax
    ef6f:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef73:	ba 00 00 00 00       	mov    $0x0,%edx
    ef78:	48 89 ce             	mov    %rcx,%rsi
    ef7b:	48 89 c7             	mov    %rax,%rdi
    ef7e:	e8 d5 7c ff ff       	call   6c58 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    ef83:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    ef8a:	48 89 c7             	mov    %rax,%rdi
    ef8d:	e8 2c 2e 00 00       	call   11dbe <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    ef92:	e9 99 00 00 00       	jmp    f030 <_ZN9VulkanApp22createGraphicsPipelineEv+0xc00>
  shaderModule.vertex = vkh::createShaderModule(
    ef97:	48 89 c3             	mov    %rax,%rbx
    ef9a:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    efa1:	48 89 c7             	mov    %rax,%rdi
    efa4:	e8 77 52 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    efa9:	eb 03                	jmp    efae <_ZN9VulkanApp22createGraphicsPipelineEv+0xb7e>
    efab:	48 89 c3             	mov    %rax,%rbx
    efae:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    efb5:	48 89 c7             	mov    %rax,%rdi
    efb8:	e8 c3 54 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    efbd:	48 89 d8             	mov    %rbx,%rax
    efc0:	48 89 c7             	mov    %rax,%rdi
    efc3:	e8 e8 57 ff ff       	call   47b0 <_Unwind_Resume@plt>
  shaderModule.fragment = vkh::createShaderModule(
    efc8:	48 89 c3             	mov    %rax,%rbx
    efcb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    efd2:	48 89 c7             	mov    %rax,%rdi
    efd5:	e8 46 52 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    efda:	eb 03                	jmp    efdf <_ZN9VulkanApp22createGraphicsPipelineEv+0xbaf>
    efdc:	48 89 c3             	mov    %rax,%rbx
    efdf:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    efe6:	48 89 c7             	mov    %rax,%rdi
    efe9:	e8 92 54 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
    efee:	48 89 d8             	mov    %rbx,%rax
    eff1:	48 89 c7             	mov    %rax,%rdi
    eff4:	e8 b7 57 ff ff       	call   47b0 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    eff9:	48 89 c3             	mov    %rax,%rbx
    effc:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f000:	48 89 c7             	mov    %rax,%rdi
    f003:	e8 12 2d 00 00       	call   11d1a <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    f008:	48 89 d8             	mov    %rbx,%rax
    f00b:	48 89 c7             	mov    %rax,%rdi
    f00e:	e8 9d 57 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    f013:	48 89 c3             	mov    %rax,%rbx
    f016:	48 8d 85 b0 fa ff ff 	lea    -0x550(%rbp),%rax
    f01d:	48 89 c7             	mov    %rax,%rdi
    f020:	e8 99 2d 00 00       	call   11dbe <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    f025:	48 89 d8             	mov    %rbx,%rax
    f028:	48 89 c7             	mov    %rax,%rdi
    f02b:	e8 80 57 ff ff       	call   47b0 <_Unwind_Resume@plt>
    f030:	48 81 c4 48 05 00 00 	add    $0x548,%rsp
    f037:	5b                   	pop    %rbx
    f038:	41 5c                	pop    %r12
    f03a:	41 5d                	pop    %r13
    f03c:	5d                   	pop    %rbp
    f03d:	c3                   	ret

000000000000f03e <_ZN9VulkanApp17createFramebufferEv>:

void VulkanApp::createFramebuffer() {
    f03e:	55                   	push   %rbp
    f03f:	48 89 e5             	mov    %rsp,%rbp
    f042:	41 55                	push   %r13
    f044:	41 54                	push   %r12
    f046:	53                   	push   %rbx
    f047:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    f04e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  framebuffers.resize(imageViews.size());
    f055:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f05c:	48 8d 98 00 01 00 00 	lea    0x100(%rax),%rbx
    f063:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f06a:	48 05 a8 00 00 00    	add    $0xa8,%rax
    f070:	48 89 c7             	mov    %rax,%rdi
    f073:	e8 36 2f 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f078:	48 89 c6             	mov    %rax,%rsi
    f07b:	48 89 df             	mov    %rbx,%rdi
    f07e:	e8 4f 2f 00 00       	call   11fd2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    f083:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    f08a:	00 
    f08b:	e9 3a 01 00 00       	jmp    f1ca <_ZN9VulkanApp17createFramebufferEv+0x18c>
    std::vector<VkImageView> attachments{imageViews[i]};
    f090:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f097:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    f09e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0a2:	48 89 c6             	mov    %rax,%rsi
    f0a5:	48 89 d7             	mov    %rdx,%rdi
    f0a8:	e8 31 2c 00 00       	call   11cde <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    f0ad:	48 8b 00             	mov    (%rax),%rax
    f0b0:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f0b4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    f0b8:	49 89 c4             	mov    %rax,%r12
    f0bb:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    f0c1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f0c5:	48 89 c7             	mov    %rax,%rdi
    f0c8:	e8 8b 2f 00 00       	call   12058 <_ZNSaIP13VkImageView_TEC1Ev>
    f0cd:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    f0d1:	4c 89 e6             	mov    %r12,%rsi
    f0d4:	4c 89 ef             	mov    %r13,%rdi
    f0d7:	4c 89 e1             	mov    %r12,%rcx
    f0da:	4c 89 eb             	mov    %r13,%rbx
    f0dd:	48 89 df             	mov    %rbx,%rdi
    f0e0:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f0e4:	48 89 d1             	mov    %rdx,%rcx
    f0e7:	48 89 fa             	mov    %rdi,%rdx
    f0ea:	48 89 c7             	mov    %rax,%rdi
    f0ed:	e8 9e 2f 00 00       	call   12090 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f0f2:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f0f6:	48 89 c7             	mov    %rax,%rdi
    f0f9:	e8 76 2f 00 00       	call   12074 <_ZNSaIP13VkImageView_TED1Ev>
    VkFramebufferCreateInfo framebufferInfo{};
    f0fe:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f102:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    f109:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    f10d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f111:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    f115:	c7 85 70 ff ff ff 25 	movl   $0x25,-0x90(%rbp)
    f11c:	00 00 00 
    framebufferInfo.renderPass = graphicsPipeline.renderPass;
    f11f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f126:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f12d:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    framebufferInfo.attachmentCount = static_cast<uint32_t>(attachments.size());
    f131:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f135:	48 89 c7             	mov    %rax,%rdi
    f138:	e8 71 2e 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f13d:	89 45 90             	mov    %eax,-0x70(%rbp)
    framebufferInfo.pAttachments = attachments.data();
    f140:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f144:	48 89 c7             	mov    %rax,%rdi
    f147:	e8 10 30 00 00       	call   1215c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>
    f14c:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    framebufferInfo.width = swapchain.extent.width;
    f150:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f157:	8b 40 7c             	mov    0x7c(%rax),%eax
    f15a:	89 45 a0             	mov    %eax,-0x60(%rbp)
    framebufferInfo.height = swapchain.extent.height;
    f15d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f164:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    f16a:	89 45 a4             	mov    %eax,-0x5c(%rbp)
    framebufferInfo.layers = 1;
    f16d:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)
    framebuffers[i] = vkh::createFramebuffer(device, &framebufferInfo);
    f174:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f17b:	48 8b 40 50          	mov    0x50(%rax),%rax
    f17f:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    f186:	ba 00 00 00 00       	mov    $0x0,%edx
    f18b:	48 89 ce             	mov    %rcx,%rsi
    f18e:	48 89 c7             	mov    %rax,%rdi
    f191:	e8 5a 6e ff ff       	call   5ff0 <_ZN3vkh17createFramebufferEP10VkDevice_TPK23VkFramebufferCreateInfoPK21VkAllocationCallbacks>
    f196:	48 89 c3             	mov    %rax,%rbx
    f199:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1a0:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    f1a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f1ab:	48 89 c6             	mov    %rax,%rsi
    f1ae:	48 89 d7             	mov    %rdx,%rdi
    f1b1:	e8 ca 2f 00 00       	call   12180 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    f1b6:	48 89 18             	mov    %rbx,(%rax)
  }
    f1b9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f1bd:	48 89 c7             	mov    %rax,%rdi
    f1c0:	e8 53 2f 00 00       	call   12118 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
  for (size_t i = 0; i < imageViews.size(); ++i) {
    f1c5:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    f1ca:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    f1d1:	48 05 a8 00 00 00    	add    $0xa8,%rax
    f1d7:	48 89 c7             	mov    %rax,%rdi
    f1da:	e8 cf 2d 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    f1df:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    f1e3:	0f 92 c0             	setb   %al
    f1e6:	84 c0                	test   %al,%al
    f1e8:	0f 85 a2 fe ff ff    	jne    f090 <_ZN9VulkanApp17createFramebufferEv+0x52>
}
    f1ee:	eb 34                	jmp    f224 <_ZN9VulkanApp17createFramebufferEv+0x1e6>
    std::vector<VkImageView> attachments{imageViews[i]};
    f1f0:	48 89 c3             	mov    %rax,%rbx
    f1f3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    f1f7:	48 89 c7             	mov    %rax,%rdi
    f1fa:	e8 75 2e 00 00       	call   12074 <_ZNSaIP13VkImageView_TED1Ev>
    f1ff:	48 89 d8             	mov    %rbx,%rax
    f202:	48 89 c7             	mov    %rax,%rdi
    f205:	e8 a6 55 ff ff       	call   47b0 <_Unwind_Resume@plt>
  }
    f20a:	48 89 c3             	mov    %rax,%rbx
    f20d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f211:	48 89 c7             	mov    %rax,%rdi
    f214:	e8 ff 2e 00 00       	call   12118 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f219:	48 89 d8             	mov    %rbx,%rax
    f21c:	48 89 c7             	mov    %rax,%rdi
    f21f:	e8 8c 55 ff ff       	call   47b0 <_Unwind_Resume@plt>
}
    f224:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    f22b:	5b                   	pop    %rbx
    f22c:	41 5c                	pop    %r12
    f22e:	41 5d                	pop    %r13
    f230:	5d                   	pop    %rbp
    f231:	c3                   	ret

000000000000f232 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    f232:	55                   	push   %rbp
    f233:	48 89 e5             	mov    %rsp,%rbp
    f236:	48 83 ec 30          	sub    $0x30,%rsp
    f23a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    f23e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f242:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f246:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    f24b:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    f252:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    f259:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    f25a:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    f261:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f265:	8b 40 68             	mov    0x68(%rax),%eax
    f268:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    f26b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f26f:	48 8b 40 50          	mov    0x50(%rax),%rax
    f273:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    f277:	ba 00 00 00 00       	mov    $0x0,%edx
    f27c:	48 89 ce             	mov    %rcx,%rsi
    f27f:	48 89 c7             	mov    %rax,%rdi
    f282:	e8 01 6e ff ff       	call   6088 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    f287:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f28b:	48 89 82 20 01 00 00 	mov    %rax,0x120(%rdx)
}
    f292:	90                   	nop
    f293:	c9                   	leave
    f294:	c3                   	ret
    f295:	90                   	nop

000000000000f296 <_ZN9VulkanApp19createCommandBufferEv>:

void VulkanApp::createCommandBuffer() {
    f296:	55                   	push   %rbp
    f297:	48 89 e5             	mov    %rsp,%rbp
    f29a:	48 83 ec 50          	sub    $0x50,%rsp
    f29e:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkCommandBufferAllocateInfo cmdBufferAllocInfo{};
    f2a2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f2a6:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    f2aa:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  cmdBufferAllocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    f2ae:	c7 45 c0 28 00 00 00 	movl   $0x28,-0x40(%rbp)
  cmdBufferAllocInfo.commandPool = commandPool;
    f2b5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2b9:	48 8b 80 20 01 00 00 	mov    0x120(%rax),%rax
    f2c0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  cmdBufferAllocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    f2c4:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  cmdBufferAllocInfo.commandBufferCount = commandBufferCount;
    f2cb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2cf:	8b 80 28 01 00 00    	mov    0x128(%rax),%eax
    f2d5:	89 45 dc             	mov    %eax,-0x24(%rbp)
  commandBuffer = vkh::allocateCommandBuffers(device, &cmdBufferAllocInfo)[0];
    f2d8:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f2dc:	48 8b 48 50          	mov    0x50(%rax),%rcx
    f2e0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f2e4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    f2e8:	48 89 ce             	mov    %rcx,%rsi
    f2eb:	48 89 c7             	mov    %rax,%rdi
    f2ee:	e8 3a 5b ff ff       	call   4e2d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>
    f2f3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f2f7:	be 00 00 00 00       	mov    $0x0,%esi
    f2fc:	48 89 c7             	mov    %rax,%rdi
    f2ff:	e8 9c 2e 00 00       	call   121a0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    f304:	48 8b 10             	mov    (%rax),%rdx
    f307:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f30b:	48 89 90 18 01 00 00 	mov    %rdx,0x118(%rax)
    f312:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    f316:	48 89 c7             	mov    %rax,%rdi
    f319:	e8 06 5e ff ff       	call   5124 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
}
    f31e:	90                   	nop
    f31f:	c9                   	leave
    f320:	c3                   	ret
    f321:	90                   	nop

000000000000f322 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>:

void VulkanApp::recordCommandBuffer(VkCommandBuffer cmdBuffer,
                                    uint32_t imageIndex) {
    f322:	55                   	push   %rbp
    f323:	48 89 e5             	mov    %rsp,%rbp
    f326:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    f32d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    f331:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    f335:	89 95 7c ff ff ff    	mov    %edx,-0x84(%rbp)
  /* Begin recording a command buffer */
  VkCommandBufferBeginInfo cmdBufferBeginInfo{};
    f33b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f33f:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f343:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  cmdBufferBeginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    f347:	c7 45 e0 2a 00 00 00 	movl   $0x2a,-0x20(%rbp)
  cmdBufferBeginInfo.flags = 0;
    f34e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  cmdBufferBeginInfo.pInheritanceInfo = nullptr;
    f355:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    f35c:	00 
  vkh::beginCommandBuffer(cmdBuffer, &cmdBufferBeginInfo);
    f35d:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    f361:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f365:	48 89 d6             	mov    %rdx,%rsi
    f368:	48 89 c7             	mov    %rax,%rdi
    f36b:	e8 c0 5b ff ff       	call   4f30 <_ZN3vkh18beginCommandBufferEP17VkCommandBuffer_TPK24VkCommandBufferBeginInfo>

  /* Start a render pass */
  VkClearValue clearColor = {{{0.0f, 0.0f, 0.0f, 1.0f}}};
    f370:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f374:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    f379:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f37d:	f3 0f 11 45 d4       	movss  %xmm0,-0x2c(%rbp)
    f382:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f386:	f3 0f 11 45 d8       	movss  %xmm0,-0x28(%rbp)
    f38b:	f3 0f 10 05 2d db 00 	movss  0xdb2d(%rip),%xmm0        # 1cec0 <_ZZN9VulkanApp6renderEvE11submitCount+0x340>
    f392:	00 
    f393:	f3 0f 11 45 dc       	movss  %xmm0,-0x24(%rbp)

  VkRenderPassBeginInfo renderPassBeginInfo{};
    f398:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f39c:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    f3a0:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    f3a4:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    f3a8:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassBeginInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    f3ac:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassBeginInfo.renderPass = graphicsPipeline.renderPass;
    f3b3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f3b7:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    f3be:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassBeginInfo.framebuffer = framebuffers[imageIndex];
    f3c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f3c6:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    f3cd:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    f3d3:	48 89 c6             	mov    %rax,%rsi
    f3d6:	48 89 d7             	mov    %rdx,%rdi
    f3d9:	e8 a2 2d 00 00       	call   12180 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    f3de:	48 8b 00             	mov    (%rax),%rax
    f3e1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassBeginInfo.renderArea.offset = {0, 0};
    f3e5:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    f3ec:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassBeginInfo.renderArea.extent = swapchain.extent;
    f3f3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f3f7:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    f3fb:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  renderPassBeginInfo.clearValueCount = 1;
    f3ff:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassBeginInfo.pClearValues = &clearColor;
    f406:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f40a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(cmdBuffer, &renderPassBeginInfo,
    f40e:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f412:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f416:	ba 00 00 00 00       	mov    $0x0,%edx
    f41b:	48 89 ce             	mov    %rcx,%rsi
    f41e:	48 89 c7             	mov    %rax,%rdi
    f421:	e8 1a 52 ff ff       	call   4640 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  /* Drawing commands */
  vkCmdBindPipeline(cmdBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    f426:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f42a:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
    f431:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f435:	be 00 00 00 00       	mov    $0x0,%esi
    f43a:	48 89 c7             	mov    %rax,%rdi
    f43d:	e8 fe 4e ff ff       	call   4340 <vkCmdBindPipeline@plt>

  static const uint32_t vertexCount = 3;
  static const uint32_t instanceCount = 1;
  static const uint32_t firstVertex = 0;
  static const uint32_t firstInstance = 0;
  vkCmdDraw(cmdBuffer, vertexCount, instanceCount, firstVertex, firstInstance);
    f442:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f446:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f44c:	b9 00 00 00 00       	mov    $0x0,%ecx
    f451:	ba 01 00 00 00       	mov    $0x1,%edx
    f456:	be 03 00 00 00       	mov    $0x3,%esi
    f45b:	48 89 c7             	mov    %rax,%rdi
    f45e:	e8 cd 53 ff ff       	call   4830 <vkCmdDraw@plt>

  /* End recording the command buffer */
  vkCmdEndRenderPass(cmdBuffer);
    f463:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f467:	48 89 c7             	mov    %rax,%rdi
    f46a:	e8 e1 4b ff ff       	call   4050 <vkCmdEndRenderPass@plt>
  vkh::endCommandBuffer(cmdBuffer);
    f46f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f473:	48 89 c7             	mov    %rax,%rdi
    f476:	e8 3f 5b ff ff       	call   4fba <_ZN3vkh16endCommandBufferEP17VkCommandBuffer_T>
}
    f47b:	90                   	nop
    f47c:	c9                   	leave
    f47d:	c3                   	ret

000000000000f47e <_ZN9VulkanApp28createSynchronizationObjectsEv>:

void VulkanApp::createSynchronizationObjects() {
    f47e:	55                   	push   %rbp
    f47f:	48 89 e5             	mov    %rsp,%rbp
    f482:	48 83 ec 50          	sub    $0x50,%rsp
    f486:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  VkSemaphoreCreateInfo semaphoreInfo{};
    f48a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f48e:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    f492:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    f497:	c7 45 e0 09 00 00 00 	movl   $0x9,-0x20(%rbp)
  sync.imageAvailableSemaphore = vkh::createSemaphore(device, &semaphoreInfo);
    f49e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4a2:	48 8b 40 50          	mov    0x50(%rax),%rax
    f4a6:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    f4aa:	ba 00 00 00 00       	mov    $0x0,%edx
    f4af:	48 89 ce             	mov    %rcx,%rsi
    f4b2:	48 89 c7             	mov    %rax,%rdi
    f4b5:	e8 6e 6c ff ff       	call   6128 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
    f4ba:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f4be:	48 89 82 30 01 00 00 	mov    %rax,0x130(%rdx)
  sync.renderFinisedSemaphore = vkh::createSemaphore(device, &semaphoreInfo);
    f4c5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4c9:	48 8b 40 50          	mov    0x50(%rax),%rax
    f4cd:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    f4d1:	ba 00 00 00 00       	mov    $0x0,%edx
    f4d6:	48 89 ce             	mov    %rcx,%rsi
    f4d9:	48 89 c7             	mov    %rax,%rdi
    f4dc:	e8 47 6c ff ff       	call   6128 <_ZN3vkh15createSemaphoreEP10VkDevice_TPK21VkSemaphoreCreateInfoPK21VkAllocationCallbacks>
    f4e1:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f4e5:	48 89 82 38 01 00 00 	mov    %rax,0x138(%rdx)

  VkFenceCreateInfo fenceInfo{};
    f4ec:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f4f0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    f4f4:	66 0f d6 45 d0       	movq   %xmm0,-0x30(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    f4f9:	c7 45 c0 08 00 00 00 	movl   $0x8,-0x40(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    f500:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
  sync.inFlightFence = vkh::createFence(device, &fenceInfo);
    f507:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f50b:	48 8b 40 50          	mov    0x50(%rax),%rax
    f50f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
    f513:	ba 00 00 00 00       	mov    $0x0,%edx
    f518:	48 89 ce             	mov    %rcx,%rsi
    f51b:	48 89 c7             	mov    %rax,%rdi
    f51e:	e8 9d 6c ff ff       	call   61c0 <_ZN3vkh11createFenceEP10VkDevice_TPK17VkFenceCreateInfoPK21VkAllocationCallbacks>
    f523:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f527:	48 89 82 40 01 00 00 	mov    %rax,0x140(%rdx)
}
    f52e:	90                   	nop
    f52f:	c9                   	leave
    f530:	c3                   	ret
    f531:	90                   	nop

000000000000f532 <_ZN9VulkanApp6renderEv>:

void VulkanApp::render() {
    f532:	55                   	push   %rbp
    f533:	48 89 e5             	mov    %rsp,%rbp
    f536:	41 57                	push   %r15
    f538:	41 56                	push   %r14
    f53a:	41 55                	push   %r13
    f53c:	41 54                	push   %r12
    f53e:	53                   	push   %rbx
    f53f:	48 81 ec 48 01 00 00 	sub    $0x148,%rsp
    f546:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
  /* Wait for the previous frame to finish */
  vkWaitForFences(device, 1, &sync.inFlightFence, VK_TRUE, UINT64_MAX);
    f54d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f554:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    f55b:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f562:	48 8b 40 50          	mov    0x50(%rax),%rax
    f566:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    f56d:	b9 01 00 00 00       	mov    $0x1,%ecx
    f572:	be 01 00 00 00       	mov    $0x1,%esi
    f577:	48 89 c7             	mov    %rax,%rdi
    f57a:	e8 71 4c ff ff       	call   41f0 <vkWaitForFences@plt>
  vkResetFences(device, 1, &sync.inFlightFence);
    f57f:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f586:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    f58d:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f594:	48 8b 40 50          	mov    0x50(%rax),%rax
    f598:	be 01 00 00 00       	mov    $0x1,%esi
    f59d:	48 89 c7             	mov    %rax,%rdi
    f5a0:	e8 0b 51 ff ff       	call   46b0 <vkResetFences@plt>

  /* Acquire an image frome the swapchain */
  uint32_t imageIndex;
  vkAcquireNextImageKHR(device, swapchain.self, UINT64_MAX,
    f5a5:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f5ac:	48 8b 90 30 01 00 00 	mov    0x130(%rax),%rdx
    f5b3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f5ba:	48 8b 70 70          	mov    0x70(%rax),%rsi
    f5be:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f5c5:	48 8b 40 50          	mov    0x50(%rax),%rax
    f5c9:	48 8d 4d a4          	lea    -0x5c(%rbp),%rcx
    f5cd:	49 89 c9             	mov    %rcx,%r9
    f5d0:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    f5d6:	48 89 d1             	mov    %rdx,%rcx
    f5d9:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    f5e0:	48 89 c7             	mov    %rax,%rdi
    f5e3:	e8 68 4b ff ff       	call   4150 <vkAcquireNextImageKHR@plt>
                        sync.imageAvailableSemaphore, VK_NULL_HANDLE,
                        &imageIndex);

  /* Record a command buffer which draws the scene onto that image */
  vkResetCommandBuffer(commandBuffer, 0);
    f5e8:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f5ef:	48 8b 80 18 01 00 00 	mov    0x118(%rax),%rax
    f5f6:	be 00 00 00 00       	mov    $0x0,%esi
    f5fb:	48 89 c7             	mov    %rax,%rdi
    f5fe:	e8 5d 4f ff ff       	call   4560 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffer, imageIndex);
    f603:	8b 55 a4             	mov    -0x5c(%rbp),%edx
    f606:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f60d:	48 8b 88 18 01 00 00 	mov    0x118(%rax),%rcx
    f614:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f61b:	48 89 ce             	mov    %rcx,%rsi
    f61e:	48 89 c7             	mov    %rax,%rdi
    f621:	e8 fc fc ff ff       	call   f322 <_ZN9VulkanApp19recordCommandBufferEP17VkCommandBuffer_Tj>

  /* Submit the recorded command buffer */
  static const uint32_t submitCount = 1;
  std::vector<VkSemaphore> waitSemaphores = {sync.imageAvailableSemaphore};
    f626:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f62d:	48 8b 80 30 01 00 00 	mov    0x130(%rax),%rax
    f634:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f638:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    f63c:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    f643:	48 c7 85 98 fe ff ff 	movq   $0x1,-0x168(%rbp)
    f64a:	01 00 00 00 
    f64e:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    f652:	48 89 c7             	mov    %rax,%rdi
    f655:	e8 66 2b 00 00       	call   121c0 <_ZNSaIP13VkSemaphore_TEC1Ev>
    f65a:	48 8d 55 b7          	lea    -0x49(%rbp),%rdx
    f65e:	48 8b 8d 90 fe ff ff 	mov    -0x170(%rbp),%rcx
    f665:	48 8b 9d 98 fe ff ff 	mov    -0x168(%rbp),%rbx
    f66c:	48 89 ce             	mov    %rcx,%rsi
    f66f:	48 89 df             	mov    %rbx,%rdi
    f672:	48 89 df             	mov    %rbx,%rdi
    f675:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f679:	48 89 d1             	mov    %rdx,%rcx
    f67c:	48 89 fa             	mov    %rdi,%rdx
    f67f:	48 89 c7             	mov    %rax,%rdi
    f682:	e8 71 2b 00 00       	call   121f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f687:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    f68b:	48 89 c7             	mov    %rax,%rdi
    f68e:	e8 49 2b 00 00       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>
  std::vector<VkPipelineStageFlags> waitStages = {
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
    f693:	c7 45 b8 00 04 00 00 	movl   $0x400,-0x48(%rbp)
    f69a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    f69e:	49 89 c6             	mov    %rax,%r14
    f6a1:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    f6a7:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f6ab:	48 89 c7             	mov    %rax,%rdi
    f6ae:	e8 11 2c 00 00       	call   122c4 <_ZNSaIjEC1Ev>
    f6b3:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    f6b7:	4c 89 f6             	mov    %r14,%rsi
    f6ba:	4c 89 ff             	mov    %r15,%rdi
    f6bd:	4c 89 f1             	mov    %r14,%rcx
    f6c0:	4c 89 fb             	mov    %r15,%rbx
    f6c3:	48 89 df             	mov    %rbx,%rdi
    f6c6:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f6cd:	48 89 d1             	mov    %rdx,%rcx
    f6d0:	48 89 fa             	mov    %rdi,%rdx
    f6d3:	48 89 c7             	mov    %rax,%rdi
    f6d6:	e8 05 2c 00 00       	call   122e0 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>
    f6db:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f6df:	48 89 c7             	mov    %rax,%rdi
    f6e2:	e8 3b 1b 00 00       	call   11222 <_ZNSaIjED1Ev>
  std::vector<VkSemaphore> signalSemaphores = {sync.renderFinisedSemaphore};
    f6e7:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f6ee:	48 8b 80 38 01 00 00 	mov    0x138(%rax),%rax
    f6f5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f6f9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f6fd:	49 89 c4             	mov    %rax,%r12
    f700:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    f706:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f70a:	48 89 c7             	mov    %rax,%rdi
    f70d:	e8 ae 2a 00 00       	call   121c0 <_ZNSaIP13VkSemaphore_TEC1Ev>
    f712:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    f716:	4c 89 e6             	mov    %r12,%rsi
    f719:	4c 89 ef             	mov    %r13,%rdi
    f71c:	4c 89 e1             	mov    %r12,%rcx
    f71f:	4c 89 eb             	mov    %r13,%rbx
    f722:	48 89 df             	mov    %rbx,%rdi
    f725:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f72c:	48 89 d1             	mov    %rdx,%rcx
    f72f:	48 89 fa             	mov    %rdi,%rdx
    f732:	48 89 c7             	mov    %rax,%rdi
    f735:	e8 be 2a 00 00       	call   121f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    f73a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f73e:	48 89 c7             	mov    %rax,%rdi
    f741:	e8 96 2a 00 00       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>

  VkSubmitInfo submitInfo{};
    f746:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f74a:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    f751:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    f758:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    f75f:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    f766:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
    f76d:	ff 
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    f76e:	c7 85 f0 fe ff ff 04 	movl   $0x4,-0x110(%rbp)
    f775:	00 00 00 
  submitInfo.waitSemaphoreCount = static_cast<uint32_t>(waitSemaphores.size());
    f778:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f77c:	48 89 c7             	mov    %rax,%rdi
    f77f:	e8 e4 2b 00 00       	call   12368 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    f784:	89 85 00 ff ff ff    	mov    %eax,-0x100(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores.data();
    f78a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f78e:	48 89 c7             	mov    %rax,%rdi
    f791:	e8 f6 2b 00 00       	call   1238c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    f796:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
  submitInfo.pWaitDstStageMask = waitStages.data();
    f79d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f7a4:	48 89 c7             	mov    %rax,%rdi
    f7a7:	e8 04 2c 00 00       	call   123b0 <_ZNSt6vectorIjSaIjEE4dataEv>
    f7ac:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
  submitInfo.commandBufferCount = commandBufferCount;
    f7b3:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f7ba:	8b 80 28 01 00 00    	mov    0x128(%rax),%eax
    f7c0:	89 85 18 ff ff ff    	mov    %eax,-0xe8(%rbp)
  submitInfo.pCommandBuffers = &commandBuffer;
    f7c6:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f7cd:	48 05 18 01 00 00    	add    $0x118,%rax
    f7d3:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  submitInfo.signalSemaphoreCount =
      static_cast<uint32_t>(signalSemaphores.size());
    f7da:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f7e1:	48 89 c7             	mov    %rax,%rdi
    f7e4:	e8 7f 2b 00 00       	call   12368 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  submitInfo.signalSemaphoreCount =
    f7e9:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores.data();
    f7ef:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f7f6:	48 89 c7             	mov    %rax,%rdi
    f7f9:	e8 8e 2b 00 00       	call   1238c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    f7fe:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)

  if (vkQueueSubmit(queue, submitCount, &submitInfo, sync.inFlightFence) !=
    f805:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f80c:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    f813:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f81a:	48 8b 40 60          	mov    0x60(%rax),%rax
    f81e:	48 8d 95 f0 fe ff ff 	lea    -0x110(%rbp),%rdx
    f825:	be 01 00 00 00       	mov    $0x1,%esi
    f82a:	48 89 c7             	mov    %rax,%rdi
    f82d:	e8 8e 4d ff ff       	call   45c0 <vkQueueSubmit@plt>
    f832:	85 c0                	test   %eax,%eax
    f834:	0f 95 c0             	setne  %al
    f837:	84 c0                	test   %al,%al
    f839:	74 3b                	je     f876 <_ZN9VulkanApp6renderEv+0x344>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to submit draw command buffer.");
    f83b:	bf 10 00 00 00       	mov    $0x10,%edi
    f840:	e8 5b 49 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
    f845:	48 89 c3             	mov    %rax,%rbx
    f848:	48 8d 05 39 d3 00 00 	lea    0xd339(%rip),%rax        # 1cb88 <_ZZN9VulkanApp6renderEvE11submitCount+0x8>
    f84f:	48 89 c6             	mov    %rax,%rsi
    f852:	48 89 df             	mov    %rbx,%rdi
    f855:	e8 c6 48 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
    f85a:	48 8b 05 47 b7 01 00 	mov    0x1b747(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f861:	48 89 c2             	mov    %rax,%rdx
    f864:	48 8d 05 d5 b4 01 00 	lea    0x1b4d5(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f86b:	48 89 c6             	mov    %rax,%rsi
    f86e:	48 89 df             	mov    %rbx,%rdi
    f871:	e8 da 4e ff ff       	call   4750 <__cxa_throw@plt>
  }

  /* Present the swapchain image */
  VkPresentInfoKHR presentInfo{};
    f876:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f87a:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    f881:	0f 29 85 c0 fe ff ff 	movaps %xmm0,-0x140(%rbp)
    f888:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    f88f:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    f896:	c7 85 b0 fe ff ff e9 	movl   $0x3b9acde9,-0x150(%rbp)
    f89d:	cd 9a 3b 
  presentInfo.waitSemaphoreCount =
      static_cast<uint32_t>(signalSemaphores.size());
    f8a0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f8a7:	48 89 c7             	mov    %rax,%rdi
    f8aa:	e8 b9 2a 00 00       	call   12368 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
  presentInfo.waitSemaphoreCount =
    f8af:	89 85 c0 fe ff ff    	mov    %eax,-0x140(%rbp)
  presentInfo.pWaitSemaphores = signalSemaphores.data();
    f8b5:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f8bc:	48 89 c7             	mov    %rax,%rdi
    f8bf:	e8 c8 2a 00 00       	call   1238c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>
    f8c4:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
  presentInfo.swapchainCount = swapchainCount;
    f8cb:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f8d2:	8b 80 88 00 00 00    	mov    0x88(%rax),%eax
    f8d8:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%rbp)
  presentInfo.pSwapchains = &swapchain.self;
    f8de:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f8e5:	48 83 c0 70          	add    $0x70,%rax
    f8e9:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
  presentInfo.pImageIndices = &imageIndex;
    f8f0:	48 8d 45 a4          	lea    -0x5c(%rbp),%rax
    f8f4:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
  presentInfo.pResults = nullptr;
    f8fb:	48 c7 85 e8 fe ff ff 	movq   $0x0,-0x118(%rbp)
    f902:	00 00 00 00 
  vkQueuePresentKHR(queue, &presentInfo);
    f906:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    f90d:	48 8b 40 60          	mov    0x60(%rax),%rax
    f911:	48 8d 95 b0 fe ff ff 	lea    -0x150(%rbp),%rdx
    f918:	48 89 d6             	mov    %rdx,%rsi
    f91b:	48 89 c7             	mov    %rax,%rdi
    f91e:	e8 bd 4d ff ff       	call   46e0 <vkQueuePresentKHR@plt>
}
    f923:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f92a:	48 89 c7             	mov    %rax,%rdi
    f92d:	e8 4e 29 00 00       	call   12280 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    f932:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f939:	48 89 c7             	mov    %rax,%rdi
    f93c:	e8 4b 19 00 00       	call   1128c <_ZNSt6vectorIjSaIjEED1Ev>
    f941:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f945:	48 89 c7             	mov    %rax,%rdi
    f948:	e8 33 29 00 00       	call   12280 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    f94d:	e9 84 00 00 00       	jmp    f9d6 <_ZN9VulkanApp6renderEv+0x4a4>
  std::vector<VkSemaphore> waitSemaphores = {sync.imageAvailableSemaphore};
    f952:	48 89 c3             	mov    %rax,%rbx
    f955:	48 8d 45 b7          	lea    -0x49(%rbp),%rax
    f959:	48 89 c7             	mov    %rax,%rdi
    f95c:	e8 7b 28 00 00       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>
    f961:	48 89 d8             	mov    %rbx,%rax
    f964:	48 89 c7             	mov    %rax,%rdi
    f967:	e8 44 4e ff ff       	call   47b0 <_Unwind_Resume@plt>
      VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
    f96c:	48 89 c3             	mov    %rax,%rbx
    f96f:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    f973:	48 89 c7             	mov    %rax,%rdi
    f976:	e8 a7 18 00 00       	call   11222 <_ZNSaIjED1Ev>
    f97b:	eb 42                	jmp    f9bf <_ZN9VulkanApp6renderEv+0x48d>
  std::vector<VkSemaphore> signalSemaphores = {sync.renderFinisedSemaphore};
    f97d:	48 89 c3             	mov    %rax,%rbx
    f980:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    f984:	48 89 c7             	mov    %rax,%rdi
    f987:	e8 50 28 00 00       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>
    f98c:	eb 22                	jmp    f9b0 <_ZN9VulkanApp6renderEv+0x47e>
    throw std::runtime_error("Failed to submit draw command buffer.");
    f98e:	49 89 c4             	mov    %rax,%r12
    f991:	48 89 df             	mov    %rbx,%rdi
    f994:	e8 e7 48 ff ff       	call   4280 <__cxa_free_exception@plt>
    f999:	4c 89 e3             	mov    %r12,%rbx
    f99c:	eb 03                	jmp    f9a1 <_ZN9VulkanApp6renderEv+0x46f>
}
    f99e:	48 89 c3             	mov    %rax,%rbx
    f9a1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f9a8:	48 89 c7             	mov    %rax,%rdi
    f9ab:	e8 d0 28 00 00       	call   12280 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    f9b0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    f9b7:	48 89 c7             	mov    %rax,%rdi
    f9ba:	e8 cd 18 00 00       	call   1128c <_ZNSt6vectorIjSaIjEED1Ev>
    f9bf:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f9c3:	48 89 c7             	mov    %rax,%rdi
    f9c6:	e8 b5 28 00 00       	call   12280 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    f9cb:	48 89 d8             	mov    %rbx,%rax
    f9ce:	48 89 c7             	mov    %rax,%rdi
    f9d1:	e8 da 4d ff ff       	call   47b0 <_Unwind_Resume@plt>
    f9d6:	48 81 c4 48 01 00 00 	add    $0x148,%rsp
    f9dd:	5b                   	pop    %rbx
    f9de:	41 5c                	pop    %r12
    f9e0:	41 5d                	pop    %r13
    f9e2:	41 5e                	pop    %r14
    f9e4:	41 5f                	pop    %r15
    f9e6:	5d                   	pop    %rbp
    f9e7:	c3                   	ret

000000000000f9e8 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    f9e8:	55                   	push   %rbp
    f9e9:	48 89 e5             	mov    %rsp,%rbp
    f9ec:	41 57                	push   %r15
    f9ee:	41 56                	push   %r14
    f9f0:	41 55                	push   %r13
    f9f2:	41 54                	push   %r12
    f9f4:	53                   	push   %rbx
    f9f5:	48 83 ec 38          	sub    $0x38,%rsp
    f9f9:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    f9fd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fa01:	48 8d 58 10          	lea    0x10(%rax),%rbx
    fa05:	48 8d 05 a2 d1 00 00 	lea    0xd1a2(%rip),%rax        # 1cbae <_ZZN9VulkanApp6renderEvE11submitCount+0x2e>
    fa0c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    fa10:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    fa14:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fa18:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    fa1f:	00 
    fa20:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    fa24:	48 89 c7             	mov    %rax,%rdi
    fa27:	e8 66 89 ff ff       	call   8392 <_ZNSaIPKcEC1Ev>
    fa2c:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    fa30:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    fa34:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    fa38:	49 89 f0             	mov    %rsi,%r8
    fa3b:	49 89 f9             	mov    %rdi,%r9
    fa3e:	48 89 fa             	mov    %rdi,%rdx
    fa41:	48 89 c1             	mov    %rax,%rcx
    fa44:	4c 89 c6             	mov    %r8,%rsi
    fa47:	48 89 df             	mov    %rbx,%rdi
    fa4a:	e8 81 18 00 00       	call   112d0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fa4f:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    fa53:	48 89 c7             	mov    %rax,%rdi
    fa56:	e8 53 89 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    fa5b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fa5f:	48 8d 58 28          	lea    0x28(%rax),%rbx
    fa63:	4c 8d 35 76 b2 01 00 	lea    0x1b276(%rip),%r14        # 2ace0 <C.118.0>
    fa6a:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    fa70:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    fa74:	48 89 c7             	mov    %rax,%rdi
    fa77:	e8 16 89 ff ff       	call   8392 <_ZNSaIPKcEC1Ev>
    fa7c:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    fa80:	4d 89 f0             	mov    %r14,%r8
    fa83:	4d 89 f9             	mov    %r15,%r9
    fa86:	4c 89 f6             	mov    %r14,%rsi
    fa89:	4c 89 ff             	mov    %r15,%rdi
    fa8c:	48 89 fa             	mov    %rdi,%rdx
    fa8f:	48 89 c1             	mov    %rax,%rcx
    fa92:	4c 89 c6             	mov    %r8,%rsi
    fa95:	48 89 df             	mov    %rbx,%rdi
    fa98:	e8 33 18 00 00       	call   112d0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fa9d:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    faa1:	48 89 c7             	mov    %rax,%rdi
    faa4:	e8 05 89 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    faa9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    faad:	c7 80 88 00 00 00 01 	movl   $0x1,0x88(%rax)
    fab4:	00 00 00 
    fab7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fabb:	48 8d 98 90 00 00 00 	lea    0x90(%rax),%rbx
    fac2:	4c 8d 25 27 b2 01 00 	lea    0x1b227(%rip),%r12        # 2acf0 <C.119.1>
    fac9:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    facf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fad3:	48 89 c7             	mov    %rax,%rdi
    fad6:	e8 b7 88 ff ff       	call   8392 <_ZNSaIPKcEC1Ev>
    fadb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fadf:	4d 89 e0             	mov    %r12,%r8
    fae2:	4d 89 e9             	mov    %r13,%r9
    fae5:	4c 89 e6             	mov    %r12,%rsi
    fae8:	4c 89 ef             	mov    %r13,%rdi
    faeb:	48 89 fa             	mov    %rdi,%rdx
    faee:	48 89 c1             	mov    %rax,%rcx
    faf1:	4c 89 c6             	mov    %r8,%rsi
    faf4:	48 89 df             	mov    %rbx,%rdi
    faf7:	e8 d4 17 00 00       	call   112d0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    fafc:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fb00:	48 89 c7             	mov    %rax,%rdi
    fb03:	e8 a6 88 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    fb08:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb0c:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fb12:	48 89 c7             	mov    %rax,%rdi
    fb15:	e8 f8 15 00 00       	call   11112 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    fb1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb1e:	48 05 c0 00 00 00    	add    $0xc0,%rax
    fb24:	48 89 c7             	mov    %rax,%rdi
    fb27:	e8 1e 16 00 00       	call   1114a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    fb2c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb30:	48 05 d8 00 00 00    	add    $0xd8,%rax
    fb36:	48 89 c7             	mov    %rax,%rdi
    fb39:	e8 28 16 00 00       	call   11166 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
    fb3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb42:	c7 80 f8 00 00 00 01 	movl   $0x1,0xf8(%rax)
    fb49:	00 00 00 
    fb4c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb50:	48 05 00 01 00 00    	add    $0x100,%rax
    fb56:	48 89 c7             	mov    %rax,%rdi
    fb59:	e8 7a 16 00 00       	call   111d8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
    fb5e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb62:	c7 80 28 01 00 00 01 	movl   $0x1,0x128(%rax)
    fb69:	00 00 00 
    fb6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb70:	48 05 30 01 00 00    	add    $0x130,%rax
    fb76:	48 89 c7             	mov    %rax,%rdi
    fb79:	e8 76 16 00 00       	call   111f4 <_ZN9VulkanApp11SyncWrapperC1Ev>
  createWindow();
    fb7e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb82:	48 89 c7             	mov    %rax,%rdi
    fb85:	e8 92 d5 ff ff       	call   d11c <_ZN9VulkanApp12createWindowEv>
  createInstance();
    fb8a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb8e:	48 89 c7             	mov    %rax,%rdi
    fb91:	e8 c6 d5 ff ff       	call   d15c <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    fb96:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fb9a:	48 89 c7             	mov    %rax,%rdi
    fb9d:	e8 a0 d7 ff ff       	call   d342 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    fba2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fba6:	48 89 c7             	mov    %rax,%rdi
    fba9:	e8 28 d8 ff ff       	call   d3d6 <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    fbae:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbb2:	48 89 c7             	mov    %rax,%rdi
    fbb5:	e8 74 da ff ff       	call   d62e <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    fbba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbbe:	48 89 c7             	mov    %rax,%rdi
    fbc1:	e8 78 e6 ff ff       	call   e23e <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    fbc6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbca:	48 89 c7             	mov    %rax,%rdi
    fbcd:	e8 b2 e6 ff ff       	call   e284 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    fbd2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbd6:	48 89 c7             	mov    %rax,%rdi
    fbd9:	e8 52 e8 ff ff       	call   e430 <_ZN9VulkanApp22createGraphicsPipelineEv>
  createFramebuffer();
    fbde:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbe2:	48 89 c7             	mov    %rax,%rdi
    fbe5:	e8 54 f4 ff ff       	call   f03e <_ZN9VulkanApp17createFramebufferEv>
  createCommandPool();
    fbea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbee:	48 89 c7             	mov    %rax,%rdi
    fbf1:	e8 3c f6 ff ff       	call   f232 <_ZN9VulkanApp17createCommandPoolEv>
  createCommandBuffer();
    fbf6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fbfa:	48 89 c7             	mov    %rax,%rdi
    fbfd:	e8 94 f6 ff ff       	call   f296 <_ZN9VulkanApp19createCommandBufferEv>
  createSynchronizationObjects();
    fc02:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc06:	48 89 c7             	mov    %rax,%rdi
    fc09:	e8 70 f8 ff ff       	call   f47e <_ZN9VulkanApp28createSynchronizationObjectsEv>
}
    fc0e:	e9 b2 00 00 00       	jmp    fcc5 <_ZN9VulkanAppC1Ev+0x2dd>
VulkanApp::VulkanApp() {
    fc13:	48 89 c3             	mov    %rax,%rbx
    fc16:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    fc1a:	48 89 c7             	mov    %rax,%rdi
    fc1d:	e8 8c 87 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    fc22:	48 89 d8             	mov    %rbx,%rax
    fc25:	48 89 c7             	mov    %rax,%rdi
    fc28:	e8 83 4b ff ff       	call   47b0 <_Unwind_Resume@plt>
    fc2d:	48 89 c3             	mov    %rax,%rbx
    fc30:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    fc34:	48 89 c7             	mov    %rax,%rdi
    fc37:	e8 72 87 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    fc3c:	eb 6c                	jmp    fcaa <_ZN9VulkanAppC1Ev+0x2c2>
    fc3e:	48 89 c3             	mov    %rax,%rbx
    fc41:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    fc45:	48 89 c7             	mov    %rax,%rdi
    fc48:	e8 61 87 ff ff       	call   83ae <_ZNSaIPKcED1Ev>
    fc4d:	eb 4b                	jmp    fc9a <_ZN9VulkanAppC1Ev+0x2b2>
}
    fc4f:	48 89 c3             	mov    %rax,%rbx
    fc52:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc56:	48 05 00 01 00 00    	add    $0x100,%rax
    fc5c:	48 89 c7             	mov    %rax,%rdi
    fc5f:	e8 a0 28 00 00       	call   12504 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    fc64:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc68:	48 05 c0 00 00 00    	add    $0xc0,%rax
    fc6e:	48 89 c7             	mov    %rax,%rdi
    fc71:	e8 5e 91 ff ff       	call   8dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    fc76:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc7a:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fc80:	48 89 c7             	mov    %rax,%rdi
    fc83:	e8 90 24 00 00       	call   12118 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    fc88:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc8c:	48 05 90 00 00 00    	add    $0x90,%rax
    fc92:	48 89 c7             	mov    %rax,%rdi
    fc95:	e8 be 16 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    fc9a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fc9e:	48 83 c0 28          	add    $0x28,%rax
}
    fca2:	48 89 c7             	mov    %rax,%rdi
    fca5:	e8 ae 16 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fcaa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fcae:	48 83 c0 10          	add    $0x10,%rax
    fcb2:	48 89 c7             	mov    %rax,%rdi
    fcb5:	e8 9e 16 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    fcba:	48 89 d8             	mov    %rbx,%rax
    fcbd:	48 89 c7             	mov    %rax,%rdi
    fcc0:	e8 eb 4a ff ff       	call   47b0 <_Unwind_Resume@plt>
    fcc5:	48 83 c4 38          	add    $0x38,%rsp
    fcc9:	5b                   	pop    %rbx
    fcca:	41 5c                	pop    %r12
    fccc:	41 5d                	pop    %r13
    fcce:	41 5e                	pop    %r14
    fcd0:	41 5f                	pop    %r15
    fcd2:	5d                   	pop    %rbp
    fcd3:	c3                   	ret

000000000000fcd4 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    fcd4:	55                   	push   %rbp
    fcd5:	48 89 e5             	mov    %rsp,%rbp
    fcd8:	48 83 ec 50          	sub    $0x50,%rsp
    fcdc:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  vkh::destroySemaphore(device, sync.imageAvailableSemaphore);
    fce0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fce4:	48 8b 88 30 01 00 00 	mov    0x130(%rax),%rcx
    fceb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fcef:	48 8b 40 50          	mov    0x50(%rax),%rax
    fcf3:	ba 00 00 00 00       	mov    $0x0,%edx
    fcf8:	48 89 ce             	mov    %rcx,%rsi
    fcfb:	48 89 c7             	mov    %rax,%rdi
    fcfe:	e8 f8 70 ff ff       	call   6dfb <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
  vkh::destroySemaphore(device, sync.renderFinisedSemaphore);
    fd03:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd07:	48 8b 88 38 01 00 00 	mov    0x138(%rax),%rcx
    fd0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd12:	48 8b 40 50          	mov    0x50(%rax),%rax
    fd16:	ba 00 00 00 00       	mov    $0x0,%edx
    fd1b:	48 89 ce             	mov    %rcx,%rsi
    fd1e:	48 89 c7             	mov    %rax,%rdi
    fd21:	e8 d5 70 ff ff       	call   6dfb <_ZN3vkh16destroySemaphoreEP10VkDevice_TP13VkSemaphore_TPK21VkAllocationCallbacks>
  vkh::destroyFence(device, sync.inFlightFence);
    fd26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd2a:	48 8b 88 40 01 00 00 	mov    0x140(%rax),%rcx
    fd31:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd35:	48 8b 40 50          	mov    0x50(%rax),%rax
    fd39:	ba 00 00 00 00       	mov    $0x0,%edx
    fd3e:	48 89 ce             	mov    %rcx,%rsi
    fd41:	48 89 c7             	mov    %rax,%rdi
    fd44:	e8 e0 70 ff ff       	call   6e29 <_ZN3vkh12destroyFenceEP10VkDevice_TP9VkFence_TPK21VkAllocationCallbacks>
  vkh::destroyCommandPool(device, commandPool);
    fd49:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd4d:	48 8b 88 20 01 00 00 	mov    0x120(%rax),%rcx
    fd54:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd58:	48 8b 40 50          	mov    0x50(%rax),%rax
    fd5c:	ba 00 00 00 00       	mov    $0x0,%edx
    fd61:	48 89 ce             	mov    %rcx,%rsi
    fd64:	48 89 c7             	mov    %rax,%rdi
    fd67:	e8 61 70 ff ff       	call   6dcd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    fd6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fd70:	48 05 00 01 00 00    	add    $0x100,%rax
    fd76:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fd7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd7e:	48 89 c7             	mov    %rax,%rdi
    fd81:	e8 c2 27 00 00       	call   12548 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    fd86:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    fd8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd8e:	48 89 c7             	mov    %rax,%rdi
    fd91:	e8 d8 27 00 00       	call   1256e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    fd96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    fd9a:	eb 3b                	jmp    fdd7 <_ZN9VulkanAppD1Ev+0x103>
    fd9c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fda0:	48 89 c7             	mov    %rax,%rdi
    fda3:	e8 4a 28 00 00       	call   125f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    fda8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    vkh::destroyFramebuffer(device, framebuffer);
    fdac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fdb0:	48 8b 08             	mov    (%rax),%rcx
    fdb3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fdb7:	48 8b 40 50          	mov    0x50(%rax),%rax
    fdbb:	ba 00 00 00 00       	mov    $0x0,%edx
    fdc0:	48 89 ce             	mov    %rcx,%rsi
    fdc3:	48 89 c7             	mov    %rax,%rdi
    fdc6:	e8 d4 6f ff ff       	call   6d9f <_ZN3vkh18destroyFramebufferEP10VkDevice_TP15VkFramebuffer_TPK21VkAllocationCallbacks>
  for (auto &framebuffer : framebuffers) {
    fdcb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fdcf:	48 89 c7             	mov    %rax,%rdi
    fdd2:	e8 fb 27 00 00       	call   125d2 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    fdd7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    fddb:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    fddf:	48 89 d6             	mov    %rdx,%rsi
    fde2:	48 89 c7             	mov    %rax,%rdi
    fde5:	e8 ad 27 00 00       	call   12597 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fdea:	84 c0                	test   %al,%al
    fdec:	75 ae                	jne    fd9c <_ZN9VulkanAppD1Ev+0xc8>
  }
  vkh::destroyPipeline(device, graphicsPipeline.self);
    fdee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fdf2:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    fdf9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fdfd:	48 8b 40 50          	mov    0x50(%rax),%rax
    fe01:	ba 00 00 00 00       	mov    $0x0,%edx
    fe06:	48 89 ce             	mov    %rcx,%rsi
    fe09:	48 89 c7             	mov    %rax,%rdi
    fe0c:	e8 d1 6e ff ff       	call   6ce2 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    fe11:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe15:	48 8b 88 e0 00 00 00 	mov    0xe0(%rax),%rcx
    fe1c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe20:	48 8b 40 50          	mov    0x50(%rax),%rax
    fe24:	ba 00 00 00 00       	mov    $0x0,%edx
    fe29:	48 89 ce             	mov    %rcx,%rsi
    fe2c:	48 89 c7             	mov    %rax,%rdi
    fe2f:	e8 52 6e ff ff       	call   6c86 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    fe34:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe38:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    fe3f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe43:	48 8b 40 50          	mov    0x50(%rax),%rax
    fe47:	ba 00 00 00 00       	mov    $0x0,%edx
    fe4c:	48 89 ce             	mov    %rcx,%rsi
    fe4f:	48 89 c7             	mov    %rax,%rdi
    fe52:	e8 5d 6e ff ff       	call   6cb4 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    fe57:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fe5b:	48 05 a8 00 00 00    	add    $0xa8,%rax
    fe61:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    fe65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe69:	48 89 c7             	mov    %rax,%rdi
    fe6c:	e8 93 27 00 00       	call   12604 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    fe71:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    fe75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe79:	48 89 c7             	mov    %rax,%rdi
    fe7c:	e8 a9 27 00 00       	call   1262a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    fe81:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    fe85:	eb 3b                	jmp    fec2 <_ZN9VulkanAppD1Ev+0x1ee>
    fe87:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    fe8b:	48 89 c7             	mov    %rax,%rdi
    fe8e:	e8 1b 28 00 00       	call   126ae <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    fe93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    vkh::destroyImageView(device, imageView);
    fe97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe9b:	48 8b 08             	mov    (%rax),%rcx
    fe9e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fea2:	48 8b 40 50          	mov    0x50(%rax),%rax
    fea6:	ba 00 00 00 00       	mov    $0x0,%edx
    feab:	48 89 ce             	mov    %rcx,%rsi
    feae:	48 89 c7             	mov    %rax,%rdi
    feb1:	e8 74 6d ff ff       	call   6c2a <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    feb6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    feba:	48 89 c7             	mov    %rax,%rdi
    febd:	e8 cc 27 00 00       	call   1268e <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    fec2:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    fec6:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    feca:	48 89 d6             	mov    %rdx,%rsi
    fecd:	48 89 c7             	mov    %rax,%rdi
    fed0:	e8 7e 27 00 00       	call   12653 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fed5:	84 c0                	test   %al,%al
    fed7:	75 ae                	jne    fe87 <_ZN9VulkanAppD1Ev+0x1b3>
  }
  vkh::destroySwapchain(device, swapchain.self);
    fed9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fedd:	48 8b 48 70          	mov    0x70(%rax),%rcx
    fee1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fee5:	48 8b 40 50          	mov    0x50(%rax),%rax
    fee9:	ba 00 00 00 00       	mov    $0x0,%edx
    feee:	48 89 ce             	mov    %rcx,%rsi
    fef1:	48 89 c7             	mov    %rax,%rdi
    fef4:	e8 03 6d ff ff       	call   6bfc <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    fef9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    fefd:	48 8b 40 50          	mov    0x50(%rax),%rax
    ff01:	be 00 00 00 00       	mov    $0x0,%esi
    ff06:	48 89 c7             	mov    %rax,%rdi
    ff09:	e8 9a 6c ff ff       	call   6ba8 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    ff0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff12:	48 8b 48 40          	mov    0x40(%rax),%rcx
    ff16:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff1a:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff1e:	ba 00 00 00 00       	mov    $0x0,%edx
    ff23:	48 89 ce             	mov    %rcx,%rsi
    ff26:	48 89 c7             	mov    %rax,%rdi
    ff29:	e8 85 cd ff ff       	call   ccb3 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    ff2e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff32:	48 8b 48 48          	mov    0x48(%rax),%rcx
    ff36:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff3a:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff3e:	ba 00 00 00 00       	mov    $0x0,%edx
    ff43:	48 89 ce             	mov    %rcx,%rsi
    ff46:	48 89 c7             	mov    %rax,%rdi
    ff49:	e8 80 6c ff ff       	call   6bce <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    ff4e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff52:	48 8b 40 08          	mov    0x8(%rax),%rax
    ff56:	be 00 00 00 00       	mov    $0x0,%esi
    ff5b:	48 89 c7             	mov    %rax,%rdi
    ff5e:	e8 1f 6c ff ff       	call   6b82 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    ff63:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff67:	48 8b 00             	mov    (%rax),%rax
    ff6a:	48 89 c7             	mov    %rax,%rdi
    ff6d:	e8 f5 6b ff ff       	call   6b67 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    ff72:	e8 99 44 ff ff       	call   4410 <glfwTerminate@plt>
}
    ff77:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff7b:	48 05 00 01 00 00    	add    $0x100,%rax
    ff81:	48 89 c7             	mov    %rax,%rdi
    ff84:	e8 7b 25 00 00       	call   12504 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    ff89:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff8d:	48 05 c0 00 00 00    	add    $0xc0,%rax
    ff93:	48 89 c7             	mov    %rax,%rdi
    ff96:	e8 39 8e ff ff       	call   8dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    ff9b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ff9f:	48 05 a8 00 00 00    	add    $0xa8,%rax
    ffa5:	48 89 c7             	mov    %rax,%rdi
    ffa8:	e8 6b 21 00 00       	call   12118 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ffad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffb1:	48 05 90 00 00 00    	add    $0x90,%rax
    ffb7:	48 89 c7             	mov    %rax,%rdi
    ffba:	e8 99 13 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    ffbf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffc3:	48 83 c0 28          	add    $0x28,%rax
}
    ffc7:	48 89 c7             	mov    %rax,%rdi
    ffca:	e8 89 13 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ffcf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ffd3:	48 83 c0 10          	add    $0x10,%rax
    ffd7:	48 89 c7             	mov    %rax,%rdi
    ffda:	e8 79 13 00 00       	call   11358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ffdf:	90                   	nop
    ffe0:	c9                   	leave
    ffe1:	c3                   	ret

000000000000ffe2 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    ffe2:	55                   	push   %rbp
    ffe3:	48 89 e5             	mov    %rsp,%rbp
    ffe6:	48 83 ec 10          	sub    $0x10,%rsp
    ffea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(window)) {
    ffee:	eb 11                	jmp    10001 <_ZN9VulkanApp3runEv+0x1f>
    glfwPollEvents();
    fff0:	e8 ab 43 ff ff       	call   43a0 <glfwPollEvents@plt>
    render();
    fff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fff9:	48 89 c7             	mov    %rax,%rdi
    fffc:	e8 31 f5 ff ff       	call   f532 <_ZN9VulkanApp6renderEv>
  while (!glfwWindowShouldClose(window)) {
   10001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10005:	48 8b 00             	mov    (%rax),%rax
   10008:	48 89 c7             	mov    %rax,%rdi
   1000b:	e8 f0 47 ff ff       	call   4800 <glfwWindowShouldClose@plt>
   10010:	85 c0                	test   %eax,%eax
   10012:	0f 94 c0             	sete   %al
   10015:	84 c0                	test   %al,%al
   10017:	75 d7                	jne    fff0 <_ZN9VulkanApp3runEv+0xe>
  }
  vkDeviceWaitIdle(device);
   10019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1001d:	48 8b 40 50          	mov    0x50(%rax),%rax
   10021:	48 89 c7             	mov    %rax,%rdi
   10024:	e8 87 40 ff ff       	call   40b0 <vkDeviceWaitIdle@plt>
}
   10029:	90                   	nop
   1002a:	c9                   	leave
   1002b:	c3                   	ret

000000000001002c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
   1002c:	55                   	push   %rbp
   1002d:	48 89 e5             	mov    %rsp,%rbp
   10030:	41 54                	push   %r12
   10032:	53                   	push   %rbx
   10033:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
   1003a:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
   10041:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
   10048:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1004f:	48 89 c7             	mov    %rax,%rdi
   10052:	e8 b9 44 ff ff       	call   4510 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
   10057:	be 10 00 00 00       	mov    $0x10,%esi
   1005c:	bf 08 00 00 00       	mov    $0x8,%edi
   10061:	e8 f2 61 ff ff       	call   6258 <_ZStorSt13_Ios_OpenmodeS_>
   10066:	89 c2                	mov    %eax,%edx
   10068:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
   1006f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10076:	48 89 ce             	mov    %rcx,%rsi
   10079:	48 89 c7             	mov    %rax,%rdi
   1007c:	e8 8f 45 ff ff       	call   4610 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
   10081:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10088:	48 89 c7             	mov    %rax,%rdi
   1008b:	e8 e0 46 ff ff       	call   4770 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
   10090:	83 f0 01             	xor    $0x1,%eax
   10093:	84 c0                	test   %al,%al
   10095:	0f 84 97 00 00 00    	je     10132 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   1009b:	bf 10 00 00 00       	mov    $0x10,%edi
   100a0:	e8 fb 40 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   100a5:	48 89 c3             	mov    %rax,%rbx
   100a8:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   100af:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
   100b6:	48 8d 0d 04 cb 00 00 	lea    0xcb04(%rip),%rcx        # 1cbc1 <_ZZN9VulkanApp6renderEvE11submitCount+0x41>
   100bd:	48 89 ce             	mov    %rcx,%rsi
   100c0:	48 89 c7             	mov    %rax,%rdi
   100c3:	e8 e6 61 ff ff       	call   62ae <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
   100c8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   100cf:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
   100d6:	ba 0a 00 00 00       	mov    $0xa,%edx
   100db:	48 89 ce             	mov    %rcx,%rsi
   100de:	48 89 c7             	mov    %rax,%rdi
   100e1:	e8 d9 25 00 00       	call   126bf <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
   100e6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   100ed:	48 89 c6             	mov    %rax,%rsi
   100f0:	48 89 df             	mov    %rbx,%rdi
   100f3:	e8 18 46 ff ff       	call   4710 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
   100f8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   100ff:	48 89 c7             	mov    %rax,%rdi
   10102:	e8 19 41 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10107:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1010e:	48 89 c7             	mov    %rax,%rdi
   10111:	e8 0a 41 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10116:	48 8b 05 8b ae 01 00 	mov    0x1ae8b(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   1011d:	48 89 c2             	mov    %rax,%rdx
   10120:	48 8d 05 19 ac 01 00 	lea    0x1ac19(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10127:	48 89 c6             	mov    %rax,%rsi
   1012a:	48 89 df             	mov    %rbx,%rdi
   1012d:	e8 1e 46 ff ff       	call   4750 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
   10132:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10139:	48 83 c0 10          	add    $0x10,%rax
   1013d:	48 8d 15 8d ca 00 00 	lea    0xca8d(%rip),%rdx        # 1cbd1 <_ZZN9VulkanApp6renderEvE11submitCount+0x51>
   10144:	48 89 d6             	mov    %rdx,%rsi
   10147:	48 89 c7             	mov    %rax,%rdi
   1014a:	e8 71 42 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
   1014f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10156:	48 83 c0 10          	add    $0x10,%rax
   1015a:	48 8d 15 89 ca 00 00 	lea    0xca89(%rip),%rdx        # 1cbea <_ZZN9VulkanApp6renderEvE11submitCount+0x6a>
   10161:	48 89 d6             	mov    %rdx,%rsi
   10164:	48 89 c7             	mov    %rax,%rdi
   10167:	e8 54 42 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
   1016c:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10173:	be 00 00 00 00       	mov    $0x0,%esi
   10178:	48 89 c7             	mov    %rax,%rdi
   1017b:	e8 6c 6e ff ff       	call   6fec <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
   10180:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10187:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
   1018b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1018f:	48 89 c7             	mov    %rax,%rdi
   10192:	e8 a7 16 00 00       	call   1183e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   10197:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
   1019e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101a2:	48 89 c7             	mov    %rax,%rdi
   101a5:	e8 ba 16 00 00       	call   11864 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   101aa:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
   101b1:	eb 64                	jmp    10217 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
   101b3:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   101ba:	48 89 c7             	mov    %rax,%rdi
   101bd:	e8 2a 17 00 00       	call   118ec <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   101c2:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
   101c9:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   101d0:	48 83 c0 10          	add    $0x10,%rax
   101d4:	48 8d 15 20 ca 00 00 	lea    0xca20(%rip),%rdx        # 1cbfb <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   101db:	48 89 d6             	mov    %rdx,%rsi
   101de:	48 89 c7             	mov    %rax,%rdi
   101e1:	e8 da 41 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   101e6:	48 89 c2             	mov    %rax,%rdx
   101e9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   101f0:	48 89 c6             	mov    %rax,%rsi
   101f3:	48 89 d7             	mov    %rdx,%rdi
   101f6:	e8 c5 41 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   101fb:	be 0a 00 00 00       	mov    $0xa,%esi
   10200:	48 89 c7             	mov    %rax,%rdi
   10203:	e8 e8 42 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
   10208:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   1020f:	48 89 c7             	mov    %rax,%rdi
   10212:	e8 b1 16 00 00       	call   118c8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10217:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
   1021e:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
   10225:	48 89 d6             	mov    %rdx,%rsi
   10228:	48 89 c7             	mov    %rax,%rdi
   1022b:	e8 5d 16 00 00       	call   1188d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   10230:	84 c0                	test   %al,%al
   10232:	0f 85 7b ff ff ff    	jne    101b3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
   10238:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1023f:	48 83 c0 10          	add    $0x10,%rax
   10243:	48 8d 15 b4 c9 00 00 	lea    0xc9b4(%rip),%rdx        # 1cbfe <_ZZN9VulkanApp6renderEvE11submitCount+0x7e>
   1024a:	48 89 d6             	mov    %rdx,%rsi
   1024d:	48 89 c7             	mov    %rax,%rdi
   10250:	e8 6b 41 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
   10255:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1025c:	48 83 c0 10          	add    $0x10,%rax
   10260:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10264:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10268:	48 89 c7             	mov    %rax,%rdi
   1026b:	e8 2c 11 00 00       	call   1139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   10270:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
   10277:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1027b:	48 89 c7             	mov    %rax,%rdi
   1027e:	e8 3f 11 00 00       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10283:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
   1028a:	eb 67                	jmp    102f3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
   1028c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   10293:	48 89 c7             	mov    %rax,%rdi
   10296:	e8 ab 11 00 00       	call   11446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   1029b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
   102a2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   102a9:	48 83 c0 10          	add    $0x10,%rax
   102ad:	48 8d 15 47 c9 00 00 	lea    0xc947(%rip),%rdx        # 1cbfb <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   102b4:	48 89 d6             	mov    %rdx,%rsi
   102b7:	48 89 c7             	mov    %rax,%rdi
   102ba:	e8 01 41 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   102bf:	48 89 c2             	mov    %rax,%rdx
   102c2:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   102c9:	48 8b 00             	mov    (%rax),%rax
   102cc:	48 89 c6             	mov    %rax,%rsi
   102cf:	48 89 d7             	mov    %rdx,%rdi
   102d2:	e8 e9 40 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   102d7:	be 0a 00 00 00       	mov    $0xa,%esi
   102dc:	48 89 c7             	mov    %rax,%rdi
   102df:	e8 0c 42 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
   102e4:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   102eb:	48 89 c7             	mov    %rax,%rdi
   102ee:	e8 33 11 00 00       	call   11426 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   102f3:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
   102fa:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
   10301:	48 89 d6             	mov    %rdx,%rsi
   10304:	48 89 c7             	mov    %rax,%rdi
   10307:	e8 df 10 00 00       	call   113eb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   1030c:	84 c0                	test   %al,%al
   1030e:	0f 85 78 ff ff ff    	jne    1028c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
   10314:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1031b:	48 83 c0 10          	add    $0x10,%rax
   1031f:	be 0a 00 00 00       	mov    $0xa,%esi
   10324:	48 89 c7             	mov    %rax,%rdi
   10327:	e8 c4 41 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
   1032c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10333:	48 83 c0 10          	add    $0x10,%rax
   10337:	48 8d 15 d0 c8 00 00 	lea    0xc8d0(%rip),%rdx        # 1cc0e <_ZZN9VulkanApp6renderEvE11submitCount+0x8e>
   1033e:	48 89 d6             	mov    %rdx,%rsi
   10341:	48 89 c7             	mov    %rax,%rdi
   10344:	e8 77 40 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
   10349:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10350:	48 83 c0 10          	add    $0x10,%rax
   10354:	48 8d 15 c8 c8 00 00 	lea    0xc8c8(%rip),%rdx        # 1cc23 <_ZZN9VulkanApp6renderEvE11submitCount+0xa3>
   1035b:	48 89 d6             	mov    %rdx,%rsi
   1035e:	48 89 c7             	mov    %rax,%rdi
   10361:	e8 5a 40 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
   10366:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1036d:	48 89 c7             	mov    %rax,%rdi
   10370:	e8 11 70 ff ff       	call   7386 <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
   10375:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   1037c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   10380:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10384:	48 89 c7             	mov    %rax,%rdi
   10387:	e8 f4 ca ff ff       	call   ce80 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
   1038c:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
   10393:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10397:	48 89 c7             	mov    %rax,%rdi
   1039a:	e8 07 cb ff ff       	call   cea6 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
   1039f:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
   103a6:	eb 5e                	jmp    10406 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
   103a8:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   103af:	48 89 c7             	mov    %rax,%rdi
   103b2:	e8 77 cb ff ff       	call   cf2e <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   103b7:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
   103bb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   103c2:	48 83 c0 10          	add    $0x10,%rax
   103c6:	48 8d 15 2e c8 00 00 	lea    0xc82e(%rip),%rdx        # 1cbfb <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   103cd:	48 89 d6             	mov    %rdx,%rsi
   103d0:	48 89 c7             	mov    %rax,%rdi
   103d3:	e8 e8 3f ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   103d8:	48 89 c2             	mov    %rax,%rdx
   103db:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   103df:	48 89 c6             	mov    %rax,%rsi
   103e2:	48 89 d7             	mov    %rdx,%rdi
   103e5:	e8 d6 3f ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   103ea:	be 0a 00 00 00       	mov    $0xa,%esi
   103ef:	48 89 c7             	mov    %rax,%rdi
   103f2:	e8 f9 40 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
   103f7:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   103fe:	48 89 c7             	mov    %rax,%rdi
   10401:	e8 04 cb ff ff       	call   cf0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10406:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
   1040d:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
   10414:	48 89 d6             	mov    %rdx,%rsi
   10417:	48 89 c7             	mov    %rax,%rdi
   1041a:	e8 b0 ca ff ff       	call   cecf <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   1041f:	84 c0                	test   %al,%al
   10421:	75 85                	jne    103a8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
   10423:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1042a:	48 83 c0 10          	add    $0x10,%rax
   1042e:	48 8d 15 ff c7 00 00 	lea    0xc7ff(%rip),%rdx        # 1cc34 <_ZZN9VulkanApp6renderEvE11submitCount+0xb4>
   10435:	48 89 d6             	mov    %rdx,%rsi
   10438:	48 89 c7             	mov    %rax,%rdi
   1043b:	e8 80 3f ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
   10440:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   10447:	48 83 c0 28          	add    $0x28,%rax
   1044b:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1044f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10453:	48 89 c7             	mov    %rax,%rdi
   10456:	e8 af 22 00 00       	call   1270a <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
   1045b:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
   10462:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10466:	48 89 c7             	mov    %rax,%rdi
   10469:	e8 c2 22 00 00       	call   12730 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
   1046e:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
   10475:	eb 61                	jmp    104d8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
   10477:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   1047e:	48 89 c7             	mov    %rax,%rdi
   10481:	e8 2e 23 00 00       	call   127b4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
   10486:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
   1048a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10491:	48 83 c0 10          	add    $0x10,%rax
   10495:	48 8d 15 5f c7 00 00 	lea    0xc75f(%rip),%rdx        # 1cbfb <_ZZN9VulkanApp6renderEvE11submitCount+0x7b>
   1049c:	48 89 d6             	mov    %rdx,%rsi
   1049f:	48 89 c7             	mov    %rax,%rdi
   104a2:	e8 19 3f ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   104a7:	48 89 c2             	mov    %rax,%rdx
   104aa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   104ae:	48 8b 00             	mov    (%rax),%rax
   104b1:	48 89 c6             	mov    %rax,%rsi
   104b4:	48 89 d7             	mov    %rdx,%rdi
   104b7:	e8 04 3f ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   104bc:	be 0a 00 00 00       	mov    $0xa,%esi
   104c1:	48 89 c7             	mov    %rax,%rdi
   104c4:	e8 27 40 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
   104c9:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   104d0:	48 89 c7             	mov    %rax,%rdi
   104d3:	e8 bc 22 00 00       	call   12794 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
   104d8:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
   104df:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
   104e6:	48 89 d6             	mov    %rdx,%rsi
   104e9:	48 89 c7             	mov    %rax,%rdi
   104ec:	e8 68 22 00 00       	call   12759 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
   104f1:	84 c0                	test   %al,%al
   104f3:	75 82                	jne    10477 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
   104f5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   104fc:	48 83 c0 10          	add    $0x10,%rax
   10500:	be 0a 00 00 00       	mov    $0xa,%esi
   10505:	48 89 c7             	mov    %rax,%rdi
   10508:	e8 e3 3f ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
   1050d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10514:	48 83 c0 10          	add    $0x10,%rax
   10518:	48 8d 15 25 c7 00 00 	lea    0xc725(%rip),%rdx        # 1cc44 <_ZZN9VulkanApp6renderEvE11submitCount+0xc4>
   1051f:	48 89 d6             	mov    %rdx,%rsi
   10522:	48 89 c7             	mov    %rax,%rdi
   10525:	e8 96 3e ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
   1052a:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   10531:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10535:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1053c:	48 89 d6             	mov    %rdx,%rsi
   1053f:	48 89 c7             	mov    %rax,%rdi
   10542:	e8 eb 6e ff ff       	call   7432 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
   10547:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   1054e:	48 8b 50 58          	mov    0x58(%rax),%rdx
   10552:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
   10559:	48 89 d6             	mov    %rdx,%rsi
   1055c:	48 89 c7             	mov    %rax,%rdi
   1055f:	e8 3d 70 ff ff       	call   75a1 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
   10564:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
   1056b:	00 
  size_t selectedDeviceIndex = 0;
   1056c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   10573:	00 
  for (const auto &physDev : physicalDeviceList) {
   10574:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   1057b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1057f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10583:	48 89 c7             	mov    %rax,%rdi
   10586:	e8 e1 10 00 00       	call   1166c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
   1058b:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
   10592:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10596:	48 89 c7             	mov    %rax,%rdi
   10599:	e8 f4 10 00 00       	call   11692 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
   1059e:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
   105a5:	e9 c7 06 00 00       	jmp    10c71 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
   105aa:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   105b1:	48 89 c7             	mov    %rax,%rdi
   105b4:	e8 5d 11 00 00       	call   11716 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
   105b9:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
   105bd:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   105c4:	48 89 c7             	mov    %rax,%rdi
   105c7:	e8 f4 41 ff ff       	call   47c0 <_ZNSaIcEC1Ev@plt>
   105cc:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
   105d3:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   105da:	48 8d 0d 79 c6 00 00 	lea    0xc679(%rip),%rcx        # 1cc5a <_ZZN9VulkanApp6renderEvE11submitCount+0xda>
   105e1:	48 89 ce             	mov    %rcx,%rsi
   105e4:	48 89 c7             	mov    %rax,%rdi
   105e7:	e8 24 46 ff ff       	call   4c10 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   105ec:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   105f3:	48 89 c7             	mov    %rax,%rdi
   105f6:	e8 85 3e ff ff       	call   4480 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
   105fb:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
   10602:	b8 00 00 00 00       	mov    $0x0,%eax
   10607:	b9 0e 00 00 00       	mov    $0xe,%ecx
   1060c:	48 89 d7             	mov    %rdx,%rdi
   1060f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
   10612:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
   10619:	00 00 00 
    vk11Props.pNext = nullptr;
   1061c:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
   10623:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
   10627:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
   1062e:	b8 00 00 00 00       	mov    $0x0,%eax
   10633:	b9 5c 00 00 00       	mov    $0x5c,%ecx
   10638:	48 89 d7             	mov    %rdx,%rdi
   1063b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
   1063e:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
   10645:	00 00 00 
    vk12Props.pNext = &vk11Props;
   10648:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
   1064f:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
   10656:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   1065d:	b8 00 00 00 00       	mov    $0x0,%eax
   10662:	b9 1b 00 00 00       	mov    $0x1b,%ecx
   10667:	48 89 d7             	mov    %rdx,%rdi
   1066a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
   1066d:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
   10674:	00 00 00 
    vk13Props.pNext = &vk12Props;
   10677:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   1067e:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
   10685:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10689:	48 8b 08             	mov    (%rax),%rcx
   1068c:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   10693:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
   1069a:	48 89 ce             	mov    %rcx,%rsi
   1069d:	48 89 c7             	mov    %rax,%rdi
   106a0:	e8 26 6f ff ff       	call   75cb <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
   106a5:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
   106ab:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
   106b1:	39 c2                	cmp    %eax,%edx
   106b3:	75 08                	jne    106bd <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
   106b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106b9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
   106bd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   106c1:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   106c5:	75 19                	jne    106e0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
   106c7:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   106ce:	48 8d 15 86 c5 00 00 	lea    0xc586(%rip),%rdx        # 1cc5b <_ZZN9VulkanApp6renderEvE11submitCount+0xdb>
   106d5:	48 89 d6             	mov    %rdx,%rsi
   106d8:	48 89 c7             	mov    %rax,%rdi
   106db:	e8 20 3f ff ff       	call   4600 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
   106e0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   106e7:	48 83 c0 10          	add    $0x10,%rax
   106eb:	48 8d 15 75 c5 00 00 	lea    0xc575(%rip),%rdx        # 1cc67 <_ZZN9VulkanApp6renderEvE11submitCount+0xe7>
   106f2:	48 89 d6             	mov    %rdx,%rsi
   106f5:	48 89 c7             	mov    %rax,%rdi
   106f8:	e8 c3 3c ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   106fd:	48 89 c2             	mov    %rax,%rdx
   10700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10704:	48 89 c6             	mov    %rax,%rsi
   10707:	48 89 d7             	mov    %rdx,%rdi
   1070a:	e8 91 39 ff ff       	call   40a0 <_ZNSolsEm@plt>
   1070f:	48 89 c2             	mov    %rax,%rdx
   10712:	48 8d 05 52 c5 00 00 	lea    0xc552(%rip),%rax        # 1cc6b <_ZZN9VulkanApp6renderEvE11submitCount+0xeb>
   10719:	48 89 c6             	mov    %rax,%rsi
   1071c:	48 89 d7             	mov    %rdx,%rdi
   1071f:	e8 9c 3c ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10724:	48 89 c2             	mov    %rax,%rdx
   10727:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1072b:	48 89 c6             	mov    %rax,%rsi
   1072e:	48 89 d7             	mov    %rdx,%rdi
   10731:	e8 6a 39 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10736:	48 89 c2             	mov    %rax,%rdx
   10739:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10740:	48 89 c6             	mov    %rax,%rsi
   10743:	48 89 d7             	mov    %rdx,%rdi
   10746:	e8 15 3c ff ff       	call   4360 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
   1074b:	48 89 c2             	mov    %rax,%rdx
   1074e:	48 8d 05 1f c5 00 00 	lea    0xc51f(%rip),%rax        # 1cc74 <_ZZN9VulkanApp6renderEvE11submitCount+0xf4>
   10755:	48 89 c6             	mov    %rax,%rsi
   10758:	48 89 d7             	mov    %rdx,%rdi
   1075b:	e8 60 3c ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
   10760:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10767:	48 83 c0 10          	add    $0x10,%rax
   1076b:	48 8d 15 05 c5 00 00 	lea    0xc505(%rip),%rdx        # 1cc77 <_ZZN9VulkanApp6renderEvE11submitCount+0xf7>
   10772:	48 89 d6             	mov    %rdx,%rsi
   10775:	48 89 c7             	mov    %rax,%rdi
   10778:	e8 43 3c ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1077d:	48 89 c2             	mov    %rax,%rdx
   10780:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10784:	48 89 c6             	mov    %rax,%rsi
   10787:	48 89 d7             	mov    %rdx,%rdi
   1078a:	e8 11 39 ff ff       	call   40a0 <_ZNSolsEm@plt>
   1078f:	48 89 c2             	mov    %rax,%rdx
   10792:	48 8d 05 e3 c4 00 00 	lea    0xc4e3(%rip),%rax        # 1cc7c <_ZZN9VulkanApp6renderEvE11submitCount+0xfc>
   10799:	48 89 c6             	mov    %rax,%rsi
   1079c:	48 89 d7             	mov    %rdx,%rdi
   1079f:	e8 1c 3c ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
   107a4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   107ab:	48 83 c0 10          	add    $0x10,%rax
   107af:	48 8d 15 dd c4 00 00 	lea    0xc4dd(%rip),%rdx        # 1cc93 <_ZZN9VulkanApp6renderEvE11submitCount+0x113>
   107b6:	48 89 d6             	mov    %rdx,%rsi
   107b9:	48 89 c7             	mov    %rax,%rdi
   107bc:	e8 ff 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   107c1:	48 89 c2             	mov    %rax,%rdx
   107c4:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
   107ca:	89 c6                	mov    %eax,%esi
   107cc:	48 89 d7             	mov    %rdx,%rdi
   107cf:	e8 0c 3e ff ff       	call   45e0 <_ZNSolsEj@plt>
   107d4:	be 0a 00 00 00       	mov    $0xa,%esi
   107d9:	48 89 c7             	mov    %rax,%rdi
   107dc:	e8 0f 3d ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
   107e1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   107e8:	48 83 c0 10          	add    $0x10,%rax
   107ec:	48 8d 15 af c4 00 00 	lea    0xc4af(%rip),%rdx        # 1cca2 <_ZZN9VulkanApp6renderEvE11submitCount+0x122>
   107f3:	48 89 d6             	mov    %rdx,%rsi
   107f6:	48 89 c7             	mov    %rax,%rdi
   107f9:	e8 c2 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   107fe:	48 89 c2             	mov    %rax,%rdx
   10801:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
   10808:	48 83 c0 24          	add    $0x24,%rax
   1080c:	48 89 c6             	mov    %rax,%rsi
   1080f:	48 89 d7             	mov    %rdx,%rdi
   10812:	e8 a9 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10817:	be 0a 00 00 00       	mov    $0xa,%esi
   1081c:	48 89 c7             	mov    %rax,%rdi
   1081f:	e8 cc 3c ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
   10824:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1082b:	48 83 c0 10          	add    $0x10,%rax
   1082f:	48 8d 15 7d c4 00 00 	lea    0xc47d(%rip),%rdx        # 1ccb3 <_ZZN9VulkanApp6renderEvE11submitCount+0x133>
   10836:	48 89 d6             	mov    %rdx,%rsi
   10839:	48 89 c7             	mov    %rax,%rdi
   1083c:	e8 7f 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
   10841:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
   10847:	83 f8 04             	cmp    $0x4,%eax
   1084a:	0f 84 80 00 00 00    	je     108d0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
   10850:	83 f8 04             	cmp    $0x4,%eax
   10853:	0f 8f 96 00 00 00    	jg     108ef <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   10859:	83 f8 03             	cmp    $0x3,%eax
   1085c:	74 53                	je     108b1 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
   1085e:	83 f8 03             	cmp    $0x3,%eax
   10861:	0f 8f 88 00 00 00    	jg     108ef <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
   10867:	83 f8 01             	cmp    $0x1,%eax
   1086a:	74 07                	je     10873 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
   1086c:	83 f8 02             	cmp    $0x2,%eax
   1086f:	74 21                	je     10892 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
   10871:	eb 7c                	jmp    108ef <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
   10873:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1087a:	48 83 c0 10          	add    $0x10,%rax
   1087e:	48 8d 15 3f c4 00 00 	lea    0xc43f(%rip),%rdx        # 1ccc4 <_ZZN9VulkanApp6renderEvE11submitCount+0x144>
   10885:	48 89 d6             	mov    %rdx,%rsi
   10888:	48 89 c7             	mov    %rax,%rdi
   1088b:	e8 30 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   10890:	eb 7b                	jmp    1090d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
   10892:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10899:	48 83 c0 10          	add    $0x10,%rax
   1089d:	48 8d 15 30 c4 00 00 	lea    0xc430(%rip),%rdx        # 1ccd4 <_ZZN9VulkanApp6renderEvE11submitCount+0x154>
   108a4:	48 89 d6             	mov    %rdx,%rsi
   108a7:	48 89 c7             	mov    %rax,%rdi
   108aa:	e8 11 3b ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   108af:	eb 5c                	jmp    1090d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
   108b1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   108b8:	48 83 c0 10          	add    $0x10,%rax
   108bc:	48 8d 15 1f c4 00 00 	lea    0xc41f(%rip),%rdx        # 1cce2 <_ZZN9VulkanApp6renderEvE11submitCount+0x162>
   108c3:	48 89 d6             	mov    %rdx,%rsi
   108c6:	48 89 c7             	mov    %rax,%rdi
   108c9:	e8 f2 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   108ce:	eb 3d                	jmp    1090d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
   108d0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   108d7:	48 83 c0 10          	add    $0x10,%rax
   108db:	48 8d 15 0d c4 00 00 	lea    0xc40d(%rip),%rdx        # 1ccef <_ZZN9VulkanApp6renderEvE11submitCount+0x16f>
   108e2:	48 89 d6             	mov    %rdx,%rsi
   108e5:	48 89 c7             	mov    %rax,%rdi
   108e8:	e8 d3 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   108ed:	eb 1e                	jmp    1090d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
   108ef:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   108f6:	48 83 c0 10          	add    $0x10,%rax
   108fa:	48 8d 15 f3 c3 00 00 	lea    0xc3f3(%rip),%rdx        # 1ccf4 <_ZZN9VulkanApp6renderEvE11submitCount+0x174>
   10901:	48 89 d6             	mov    %rdx,%rsi
   10904:	48 89 c7             	mov    %rax,%rdi
   10907:	e8 b4 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
   1090c:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
   1090d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10914:	48 83 c0 10          	add    $0x10,%rax
   10918:	48 8d 15 dc c3 00 00 	lea    0xc3dc(%rip),%rdx        # 1ccfb <_ZZN9VulkanApp6renderEvE11submitCount+0x17b>
   1091f:	48 89 d6             	mov    %rdx,%rsi
   10922:	48 89 c7             	mov    %rax,%rdi
   10925:	e8 96 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1092a:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
   10930:	89 d6                	mov    %edx,%esi
   10932:	48 89 c7             	mov    %rax,%rdi
   10935:	e8 46 3e ff ff       	call   4780 <_ZNSolsEi@plt>
   1093a:	be 0a 00 00 00       	mov    $0xa,%esi
   1093f:	48 89 c7             	mov    %rax,%rdi
   10942:	e8 a9 3b ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
   10947:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   1094e:	48 83 c0 10          	add    $0x10,%rax
   10952:	48 8d 15 b1 c3 00 00 	lea    0xc3b1(%rip),%rdx        # 1cd0a <_ZZN9VulkanApp6renderEvE11submitCount+0x18a>
   10959:	48 89 d6             	mov    %rdx,%rsi
   1095c:	48 89 c7             	mov    %rax,%rdi
   1095f:	e8 5c 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10964:	48 89 c2             	mov    %rax,%rdx
   10967:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   1096e:	48 83 c0 14          	add    $0x14,%rax
   10972:	48 89 c6             	mov    %rax,%rsi
   10975:	48 89 d7             	mov    %rdx,%rdi
   10978:	e8 43 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   1097d:	be 0a 00 00 00       	mov    $0xa,%esi
   10982:	48 89 c7             	mov    %rax,%rdi
   10985:	e8 66 3b ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
   1098a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10991:	48 83 c0 10          	add    $0x10,%rax
   10995:	48 8d 15 7f c3 00 00 	lea    0xc37f(%rip),%rdx        # 1cd1b <_ZZN9VulkanApp6renderEvE11submitCount+0x19b>
   1099c:	48 89 d6             	mov    %rdx,%rsi
   1099f:	48 89 c7             	mov    %rax,%rdi
   109a2:	e8 19 3a ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   109a7:	48 89 c2             	mov    %rax,%rdx
   109aa:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
   109b1:	48 05 14 01 00 00    	add    $0x114,%rax
   109b7:	48 89 c6             	mov    %rax,%rsi
   109ba:	48 89 d7             	mov    %rdx,%rdi
   109bd:	e8 fe 39 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   109c2:	be 0a 00 00 00       	mov    $0xa,%esi
   109c7:	48 89 c7             	mov    %rax,%rdi
   109ca:	e8 21 3b ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
   109cf:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   109d6:	48 83 c0 10          	add    $0x10,%rax
   109da:	48 8d 15 4f c3 00 00 	lea    0xc34f(%rip),%rdx        # 1cd30 <_ZZN9VulkanApp6renderEvE11submitCount+0x1b0>
   109e1:	48 89 d6             	mov    %rdx,%rsi
   109e4:	48 89 c7             	mov    %rax,%rdi
   109e7:	e8 d4 39 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   109ec:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
   109ef:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
   109f6:	48 89 c6             	mov    %rax,%rsi
   109f9:	48 89 d7             	mov    %rdx,%rdi
   109fc:	e8 9f 36 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10a01:	be 0a 00 00 00       	mov    $0xa,%esi
   10a06:	48 89 c7             	mov    %rax,%rdi
   10a09:	e8 e2 3a ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
   10a0e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10a15:	48 83 c0 10          	add    $0x10,%rax
   10a19:	48 8d 15 57 c2 00 00 	lea    0xc257(%rip),%rdx        # 1cc77 <_ZZN9VulkanApp6renderEvE11submitCount+0xf7>
   10a20:	48 89 d6             	mov    %rdx,%rsi
   10a23:	48 89 c7             	mov    %rax,%rdi
   10a26:	e8 95 39 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10a2b:	48 89 c2             	mov    %rax,%rdx
   10a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a32:	48 89 c6             	mov    %rax,%rsi
   10a35:	48 89 d7             	mov    %rdx,%rdi
   10a38:	e8 63 36 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10a3d:	48 89 c2             	mov    %rax,%rdx
   10a40:	48 8d 05 11 c3 00 00 	lea    0xc311(%rip),%rax        # 1cd58 <_ZZN9VulkanApp6renderEvE11submitCount+0x1d8>
   10a47:	48 89 c6             	mov    %rax,%rsi
   10a4a:	48 89 d7             	mov    %rdx,%rdi
   10a4d:	e8 6e 39 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
   10a52:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10a56:	48 8b 08             	mov    (%rax),%rcx
   10a59:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10a60:	ba 00 00 00 00       	mov    $0x0,%edx
   10a65:	48 89 ce             	mov    %rcx,%rsi
   10a68:	48 89 c7             	mov    %rax,%rdi
   10a6b:	e8 ed 66 ff ff       	call   715d <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
   10a70:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10a77:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   10a7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10a7f:	48 89 c7             	mov    %rax,%rdi
   10a82:	e8 b7 0d 00 00       	call   1183e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
   10a87:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
   10a8e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10a92:	48 89 c7             	mov    %rax,%rdi
   10a95:	e8 ca 0d 00 00       	call   11864 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
   10a9a:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
   10aa1:	eb 5e                	jmp    10b01 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
   10aa3:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10aaa:	48 89 c7             	mov    %rax,%rdi
   10aad:	e8 3a 0e 00 00       	call   118ec <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
   10ab2:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
   10ab6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10abd:	48 83 c0 10          	add    $0x10,%rax
   10ac1:	48 8d 15 b1 c2 00 00 	lea    0xc2b1(%rip),%rdx        # 1cd79 <_ZZN9VulkanApp6renderEvE11submitCount+0x1f9>
   10ac8:	48 89 d6             	mov    %rdx,%rsi
   10acb:	48 89 c7             	mov    %rax,%rdi
   10ace:	e8 ed 38 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10ad3:	48 89 c2             	mov    %rax,%rdx
   10ad6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   10ada:	48 89 c6             	mov    %rax,%rsi
   10add:	48 89 d7             	mov    %rdx,%rdi
   10ae0:	e8 db 38 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10ae5:	be 0a 00 00 00       	mov    $0xa,%esi
   10aea:	48 89 c7             	mov    %rax,%rdi
   10aed:	e8 fe 39 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
   10af2:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10af9:	48 89 c7             	mov    %rax,%rdi
   10afc:	e8 c7 0d 00 00       	call   118c8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
   10b01:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
   10b08:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
   10b0f:	48 89 d6             	mov    %rdx,%rsi
   10b12:	48 89 c7             	mov    %rax,%rdi
   10b15:	e8 73 0d 00 00       	call   1188d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
   10b1a:	84 c0                	test   %al,%al
   10b1c:	75 85                	jne    10aa3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
   10b1e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10b22:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10b26:	0f 85 fb 00 00 00    	jne    10c27 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
   10b2c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10b33:	48 83 c0 10          	add    $0x10,%rax
   10b37:	48 8d 15 39 c1 00 00 	lea    0xc139(%rip),%rdx        # 1cc77 <_ZZN9VulkanApp6renderEvE11submitCount+0xf7>
   10b3e:	48 89 d6             	mov    %rdx,%rsi
   10b41:	48 89 c7             	mov    %rax,%rdi
   10b44:	e8 77 38 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10b49:	48 89 c2             	mov    %rax,%rdx
   10b4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b50:	48 89 c6             	mov    %rax,%rsi
   10b53:	48 89 d7             	mov    %rdx,%rdi
   10b56:	e8 45 35 ff ff       	call   40a0 <_ZNSolsEm@plt>
   10b5b:	48 89 c2             	mov    %rax,%rdx
   10b5e:	48 8d 05 1b c2 00 00 	lea    0xc21b(%rip),%rax        # 1cd80 <_ZZN9VulkanApp6renderEvE11submitCount+0x200>
   10b65:	48 89 c6             	mov    %rax,%rsi
   10b68:	48 89 d7             	mov    %rdx,%rdi
   10b6b:	e8 50 38 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
   10b70:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
   10b77:	48 05 90 00 00 00    	add    $0x90,%rax
   10b7d:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
   10b81:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10b85:	48 89 c7             	mov    %rax,%rdi
   10b88:	e8 0f 08 00 00       	call   1139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   10b8d:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
   10b94:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   10b98:	48 89 c7             	mov    %rax,%rdi
   10b9b:	e8 22 08 00 00       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10ba0:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
   10ba7:	eb 61                	jmp    10c0a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
   10ba9:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10bb0:	48 89 c7             	mov    %rax,%rdi
   10bb3:	e8 8e 08 00 00       	call   11446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
   10bb8:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
   10bbc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10bc3:	48 83 c0 10          	add    $0x10,%rax
   10bc7:	48 8d 15 ab c1 00 00 	lea    0xc1ab(%rip),%rdx        # 1cd79 <_ZZN9VulkanApp6renderEvE11submitCount+0x1f9>
   10bce:	48 89 d6             	mov    %rdx,%rsi
   10bd1:	48 89 c7             	mov    %rax,%rdi
   10bd4:	e8 e7 37 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10bd9:	48 89 c2             	mov    %rax,%rdx
   10bdc:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   10be0:	48 8b 00             	mov    (%rax),%rax
   10be3:	48 89 c6             	mov    %rax,%rsi
   10be6:	48 89 d7             	mov    %rdx,%rdi
   10be9:	e8 d2 37 ff ff       	call   43c0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   10bee:	be 0a 00 00 00       	mov    $0xa,%esi
   10bf3:	48 89 c7             	mov    %rax,%rdi
   10bf6:	e8 f5 38 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
   10bfb:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10c02:	48 89 c7             	mov    %rax,%rdi
   10c05:	e8 1c 08 00 00       	call   11426 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
   10c0a:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
   10c11:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
   10c18:	48 89 d6             	mov    %rdx,%rsi
   10c1b:	48 89 c7             	mov    %rax,%rdi
   10c1e:	e8 c8 07 00 00       	call   113eb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10c23:	84 c0                	test   %al,%al
   10c25:	75 82                	jne    10ba9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
   10c27:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10c2e:	48 83 c0 10          	add    $0x10,%rax
   10c32:	be 0a 00 00 00       	mov    $0xa,%esi
   10c37:	48 89 c7             	mov    %rax,%rdi
   10c3a:	e8 b1 38 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
   10c3f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
   10c44:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10c4b:	48 89 c7             	mov    %rax,%rdi
   10c4e:	e8 7f 76 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10c53:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10c5a:	48 89 c7             	mov    %rax,%rdi
   10c5d:	e8 be 35 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
   10c62:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   10c69:	48 89 c7             	mov    %rax,%rdi
   10c6c:	e8 85 0a 00 00       	call   116f6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
   10c71:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
   10c78:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
   10c7f:	48 89 d6             	mov    %rdx,%rsi
   10c82:	48 89 c7             	mov    %rax,%rdi
   10c85:	e8 31 0a 00 00       	call   116bb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10c8a:	84 c0                	test   %al,%al
   10c8c:	0f 85 18 f9 ff ff    	jne    105aa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
   10c92:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10c99:	48 83 c0 10          	add    $0x10,%rax
   10c9d:	be 0a 00 00 00       	mov    $0xa,%esi
   10ca2:	48 89 c7             	mov    %rax,%rdi
   10ca5:	e8 46 38 ff ff       	call   44f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
   10caa:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10cb1:	48 89 c7             	mov    %rax,%rdi
   10cb4:	e8 a3 78 ff ff       	call   855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   10cb9:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10cc0:	48 89 c7             	mov    %rax,%rdi
   10cc3:	e8 9c 74 ff ff       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   10cc8:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10ccf:	48 89 c7             	mov    %rax,%rdi
   10cd2:	e8 fb 75 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10cd7:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10cde:	48 89 c7             	mov    %rax,%rdi
   10ce1:	e8 aa 33 ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   10ce6:	e9 cd 00 00 00       	jmp    10db8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
   10ceb:	49 89 c4             	mov    %rax,%r12
   10cee:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   10cf5:	48 89 c7             	mov    %rax,%rdi
   10cf8:	e8 23 35 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10cfd:	eb 03                	jmp    10d02 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
   10cff:	49 89 c4             	mov    %rax,%r12
   10d02:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   10d09:	48 89 c7             	mov    %rax,%rdi
   10d0c:	e8 0f 35 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10d11:	eb 03                	jmp    10d16 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
   10d13:	49 89 c4             	mov    %rax,%r12
   10d16:	48 89 df             	mov    %rbx,%rdi
   10d19:	e8 62 35 ff ff       	call   4280 <__cxa_free_exception@plt>
   10d1e:	4c 89 e3             	mov    %r12,%rbx
   10d21:	eb 7b                	jmp    10d9e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
   10d23:	48 89 c3             	mov    %rax,%rbx
   10d26:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
   10d2d:	48 89 c7             	mov    %rax,%rdi
   10d30:	e8 4b 37 ff ff       	call   4480 <_ZNSaIcED1Ev@plt>
   10d35:	eb 2b                	jmp    10d62 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
   10d37:	48 89 c3             	mov    %rax,%rbx
   10d3a:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
   10d41:	48 89 c7             	mov    %rax,%rdi
   10d44:	e8 89 75 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10d49:	eb 03                	jmp    10d4e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
   10d4b:	48 89 c3             	mov    %rax,%rbx
   10d4e:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
   10d55:	48 89 c7             	mov    %rax,%rdi
   10d58:	e8 c3 34 ff ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   10d5d:	eb 03                	jmp    10d62 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
   10d5f:	48 89 c3             	mov    %rax,%rbx
   10d62:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
   10d69:	48 89 c7             	mov    %rax,%rdi
   10d6c:	e8 eb 77 ff ff       	call   855c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
   10d71:	eb 03                	jmp    10d76 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
   10d73:	48 89 c3             	mov    %rax,%rbx
   10d76:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
   10d7d:	48 89 c7             	mov    %rax,%rdi
   10d80:	e8 df 73 ff ff       	call   8164 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
   10d85:	eb 03                	jmp    10d8a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
   10d87:	48 89 c3             	mov    %rax,%rbx
   10d8a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
   10d91:	48 89 c7             	mov    %rax,%rdi
   10d94:	e8 39 75 ff ff       	call   82d2 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
   10d99:	eb 03                	jmp    10d9e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
   10d9b:	48 89 c3             	mov    %rax,%rbx
   10d9e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
   10da5:	48 89 c7             	mov    %rax,%rdi
   10da8:	e8 e3 32 ff ff       	call   4090 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
   10dad:	48 89 d8             	mov    %rbx,%rax
   10db0:	48 89 c7             	mov    %rax,%rdi
   10db3:	e8 f8 39 ff ff       	call   47b0 <_Unwind_Resume@plt>
   10db8:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
   10dbf:	5b                   	pop    %rbx
   10dc0:	41 5c                	pop    %r12
   10dc2:	5d                   	pop    %rbp
   10dc3:	c3                   	ret

0000000000010dc4 <_Z41__static_initialization_and_destruction_0ii>:
   10dc4:	55                   	push   %rbp
   10dc5:	48 89 e5             	mov    %rsp,%rbp
   10dc8:	48 83 ec 10          	sub    $0x10,%rsp
   10dcc:	89 7d fc             	mov    %edi,-0x4(%rbp)
   10dcf:	89 75 f8             	mov    %esi,-0x8(%rbp)
   10dd2:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   10dd6:	75 3b                	jne    10e13 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10dd8:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   10ddf:	75 32                	jne    10e13 <_Z41__static_initialization_and_destruction_0ii+0x4f>
   10de1:	48 8d 05 6c a7 01 00 	lea    0x1a76c(%rip),%rax        # 2b554 <_ZStL8__ioinit>
   10de8:	48 89 c7             	mov    %rax,%rdi
   10deb:	e8 a0 38 ff ff       	call   4690 <_ZNSt8ios_base4InitC1Ev@plt>
   10df0:	48 8d 05 21 a6 01 00 	lea    0x1a621(%rip),%rax        # 2b418 <__dso_handle>
   10df7:	48 89 c2             	mov    %rax,%rdx
   10dfa:	48 8d 05 53 a7 01 00 	lea    0x1a753(%rip),%rax        # 2b554 <_ZStL8__ioinit>
   10e01:	48 89 c6             	mov    %rax,%rsi
   10e04:	48 8b 05 bd a1 01 00 	mov    0x1a1bd(%rip),%rax        # 2afc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   10e0b:	48 89 c7             	mov    %rax,%rdi
   10e0e:	e8 3d 35 ff ff       	call   4350 <__cxa_atexit@plt>
   10e13:	90                   	nop
   10e14:	c9                   	leave
   10e15:	c3                   	ret

0000000000010e16 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
   10e16:	55                   	push   %rbp
   10e17:	48 89 e5             	mov    %rsp,%rbp
   10e1a:	be ff ff 00 00       	mov    $0xffff,%esi
   10e1f:	bf 01 00 00 00       	mov    $0x1,%edi
   10e24:	e8 9b ff ff ff       	call   10dc4 <_Z41__static_initialization_and_destruction_0ii>
   10e29:	5d                   	pop    %rbp
   10e2a:	c3                   	ret
   10e2b:	90                   	nop

0000000000010e2c <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
   10e2c:	55                   	push   %rbp
   10e2d:	48 89 e5             	mov    %rsp,%rbp
   10e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e34:	48 8d 15 d5 9e 01 00 	lea    0x19ed5(%rip),%rdx        # 2ad10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
   10e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e3f:	48 89 10             	mov    %rdx,(%rax)
   10e42:	90                   	nop
   10e43:	5d                   	pop    %rbp
   10e44:	c3                   	ret

0000000000010e45 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
   10e45:	55                   	push   %rbp
   10e46:	48 89 e5             	mov    %rsp,%rbp
   10e49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10e51:	90                   	nop
   10e52:	5d                   	pop    %rbp
   10e53:	c3                   	ret

0000000000010e54 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
   10e54:	55                   	push   %rbp
   10e55:	48 89 e5             	mov    %rsp,%rbp
   10e58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
   10e5c:	48 8d 05 55 bb 00 00 	lea    0xbb55(%rip),%rax        # 1c9b8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
   10e63:	5d                   	pop    %rbp
   10e64:	c3                   	ret
   10e65:	90                   	nop

0000000000010e66 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
   10e66:	55                   	push   %rbp
   10e67:	48 89 e5             	mov    %rsp,%rbp
   10e6a:	48 83 ec 10          	sub    $0x10,%rsp
   10e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e76:	48 89 c7             	mov    %rax,%rdi
   10e79:	e8 ae ff ff ff       	call   10e2c <_ZNSt9exceptionC1Ev>
   10e7e:	48 8d 15 3b 9e 01 00 	lea    0x19e3b(%rip),%rdx        # 2acc0 <_ZTVSt19bad_optional_access+0x10>
   10e85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e89:	48 89 10             	mov    %rdx,(%rax)
   10e8c:	90                   	nop
   10e8d:	c9                   	leave
   10e8e:	c3                   	ret

0000000000010e8f <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   10e8f:	55                   	push   %rbp
   10e90:	48 89 e5             	mov    %rsp,%rbp
   10e93:	53                   	push   %rbx
   10e94:	48 83 ec 08          	sub    $0x8,%rsp
   10e98:	bf 08 00 00 00       	mov    $0x8,%edi
   10e9d:	e8 fe 32 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   10ea2:	48 89 c3             	mov    %rax,%rbx
   10ea5:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10eac:	48 89 df             	mov    %rbx,%rdi
   10eaf:	e8 b2 ff ff ff       	call   10e66 <_ZNSt19bad_optional_accessC1Ev>
   10eb4:	48 8d 05 f9 73 00 00 	lea    0x73f9(%rip),%rax        # 182b4 <_ZNSt19bad_optional_accessD1Ev>
   10ebb:	48 89 c2             	mov    %rax,%rdx
   10ebe:	48 8d 05 93 9e 01 00 	lea    0x19e93(%rip),%rax        # 2ad58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   10ec5:	48 89 c6             	mov    %rax,%rsi
   10ec8:	48 89 df             	mov    %rbx,%rdi
   10ecb:	e8 80 38 ff ff       	call   4750 <__cxa_throw@plt>

0000000000010ed0 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>:
      struct _Vector_impl
   10ed0:	55                   	push   %rbp
   10ed1:	48 89 e5             	mov    %rsp,%rbp
   10ed4:	48 83 ec 10          	sub    $0x10,%rsp
   10ed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ee0:	48 89 c7             	mov    %rax,%rdi
   10ee3:	e8 3a 03 00 00       	call   11222 <_ZNSaIjED1Ev>
   10ee8:	90                   	nop
   10ee9:	c9                   	leave
   10eea:	c3                   	ret
   10eeb:	90                   	nop

0000000000010eec <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   10eec:	55                   	push   %rbp
   10eed:	48 89 e5             	mov    %rsp,%rbp
   10ef0:	48 83 ec 10          	sub    $0x10,%rsp
   10ef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   10ef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10efc:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   10f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f06:	48 89 c7             	mov    %rax,%rdi
   10f09:	e8 04 00 00 00       	call   10f12 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   10f0e:	90                   	nop
   10f0f:	c9                   	leave
   10f10:	c3                   	ret
   10f11:	90                   	nop

0000000000010f12 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   10f12:	55                   	push   %rbp
   10f13:	48 89 e5             	mov    %rsp,%rbp
   10f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   10f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f1e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10f25:	00 
      _M_header._M_left = &_M_header;
   10f26:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f2e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   10f32:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f3a:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   10f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f42:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   10f49:	00 
    }
   10f4a:	90                   	nop
   10f4b:	5d                   	pop    %rbp
   10f4c:	c3                   	ret
   10f4d:	90                   	nop

0000000000010f4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   10f4e:	55                   	push   %rbp
   10f4f:	48 89 e5             	mov    %rsp,%rbp
   10f52:	48 83 ec 10          	sub    $0x10,%rsp
   10f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f5e:	48 89 c7             	mov    %rax,%rdi
   10f61:	e8 60 00 00 00       	call   10fc6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   10f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f6a:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   10f6e:	90                   	nop
   10f6f:	c9                   	leave
   10f70:	c3                   	ret
   10f71:	90                   	nop

0000000000010f72 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   10f72:	55                   	push   %rbp
   10f73:	48 89 e5             	mov    %rsp,%rbp
   10f76:	48 83 ec 10          	sub    $0x10,%rsp
   10f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f82:	48 89 c7             	mov    %rax,%rdi
   10f85:	e8 c4 ff ff ff       	call   10f4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   10f8a:	90                   	nop
   10f8b:	c9                   	leave
   10f8c:	c3                   	ret
   10f8d:	90                   	nop

0000000000010f8e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   10f8e:	55                   	push   %rbp
   10f8f:	48 89 e5             	mov    %rsp,%rbp
   10f92:	48 83 ec 10          	sub    $0x10,%rsp
   10f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f9e:	48 89 c7             	mov    %rax,%rdi
   10fa1:	e8 cc ff ff ff       	call   10f72 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   10fa6:	90                   	nop
   10fa7:	c9                   	leave
   10fa8:	c3                   	ret
   10fa9:	90                   	nop

0000000000010faa <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   10faa:	55                   	push   %rbp
   10fab:	48 89 e5             	mov    %rsp,%rbp
   10fae:	48 83 ec 10          	sub    $0x10,%rsp
   10fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fba:	48 89 c7             	mov    %rax,%rdi
   10fbd:	e8 cc ff ff ff       	call   10f8e <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   10fc2:	90                   	nop
   10fc3:	c9                   	leave
   10fc4:	c3                   	ret
   10fc5:	90                   	nop

0000000000010fc6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   10fc6:	55                   	push   %rbp
   10fc7:	48 89 e5             	mov    %rsp,%rbp
   10fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fce:	90                   	nop
   10fcf:	5d                   	pop    %rbp
   10fd0:	c3                   	ret
   10fd1:	90                   	nop

0000000000010fd2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   10fd2:	55                   	push   %rbp
   10fd3:	48 89 e5             	mov    %rsp,%rbp
   10fd6:	48 83 ec 10          	sub    $0x10,%rsp
   10fda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10fe2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fea:	48 89 d6             	mov    %rdx,%rsi
   10fed:	48 89 c7             	mov    %rax,%rdi
   10ff0:	e8 4d 07 00 00       	call   11742 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   10ff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ff9:	c9                   	leave
   10ffa:	c3                   	ret
   10ffb:	90                   	nop

0000000000010ffc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   10ffc:	55                   	push   %rbp
   10ffd:	48 89 e5             	mov    %rsp,%rbp
   11000:	48 83 ec 10          	sub    $0x10,%rsp
   11004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1100c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11010:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11014:	48 89 d6             	mov    %rdx,%rsi
   11017:	48 89 c7             	mov    %rax,%rdi
   1101a:	e8 b3 ff ff ff       	call   10fd2 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   1101f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11023:	c9                   	leave
   11024:	c3                   	ret
   11025:	90                   	nop

0000000000011026 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   11026:	55                   	push   %rbp
   11027:	48 89 e5             	mov    %rsp,%rbp
   1102a:	48 83 ec 10          	sub    $0x10,%rsp
   1102e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   11032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11036:	48 89 c7             	mov    %rax,%rdi
   11039:	e8 1a 00 00 00       	call   11058 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1103e:	84 c0                	test   %al,%al
   11040:	74 0e                	je     11050 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   11042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11046:	48 89 c7             	mov    %rax,%rdi
   11049:	e8 1e 07 00 00       	call   1176c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   1104e:	eb 05                	jmp    11055 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   11050:	e8 3a fe ff ff       	call   10e8f <_ZSt27__throw_bad_optional_accessv>
      }
   11055:	c9                   	leave
   11056:	c3                   	ret
   11057:	90                   	nop

0000000000011058 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   11058:	55                   	push   %rbp
   11059:	48 89 e5             	mov    %rsp,%rbp
   1105c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   11060:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11064:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11068:	5d                   	pop    %rbp
   11069:	c3                   	ret

000000000001106a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   1106a:	55                   	push   %rbp
   1106b:	48 89 e5             	mov    %rsp,%rbp
   1106e:	48 83 ec 10          	sub    $0x10,%rsp
   11072:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11076:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1107a:	48 89 c7             	mov    %rax,%rdi
   1107d:	e8 66 07 00 00       	call   117e8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   11082:	90                   	nop
   11083:	c9                   	leave
   11084:	c3                   	ret
   11085:	90                   	nop

0000000000011086 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   11086:	55                   	push   %rbp
   11087:	48 89 e5             	mov    %rsp,%rbp
   1108a:	48 83 ec 10          	sub    $0x10,%rsp
   1108e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11096:	48 89 c7             	mov    %rax,%rdi
   11099:	e8 12 07 00 00       	call   117b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   1109e:	90                   	nop
   1109f:	c9                   	leave
   110a0:	c3                   	ret
   110a1:	90                   	nop

00000000000110a2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   110a2:	55                   	push   %rbp
   110a3:	48 89 e5             	mov    %rsp,%rbp
   110a6:	48 83 ec 10          	sub    $0x10,%rsp
   110aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110b2:	48 89 c7             	mov    %rax,%rdi
   110b5:	e8 cc ff ff ff       	call   11086 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   110ba:	90                   	nop
   110bb:	c9                   	leave
   110bc:	c3                   	ret
   110bd:	90                   	nop

00000000000110be <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   110be:	55                   	push   %rbp
   110bf:	48 89 e5             	mov    %rsp,%rbp
   110c2:	48 83 ec 10          	sub    $0x10,%rsp
   110c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ce:	48 89 c7             	mov    %rax,%rdi
   110d1:	e8 2e 07 00 00       	call   11804 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   110d6:	90                   	nop
   110d7:	c9                   	leave
   110d8:	c3                   	ret
   110d9:	90                   	nop

00000000000110da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
   110da:	55                   	push   %rbp
   110db:	48 89 e5             	mov    %rsp,%rbp
   110de:	48 83 ec 10          	sub    $0x10,%rsp
   110e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ea:	48 89 c7             	mov    %rax,%rdi
   110ed:	e8 82 0f 00 00       	call   12074 <_ZNSaIP13VkImageView_TED1Ev>
   110f2:	90                   	nop
   110f3:	c9                   	leave
   110f4:	c3                   	ret
   110f5:	90                   	nop

00000000000110f6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   110f6:	55                   	push   %rbp
   110f7:	48 89 e5             	mov    %rsp,%rbp
   110fa:	48 83 ec 10          	sub    $0x10,%rsp
   110fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11106:	48 89 c7             	mov    %rax,%rdi
   11109:	e8 c6 12 00 00       	call   123d4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   1110e:	90                   	nop
   1110f:	c9                   	leave
   11110:	c3                   	ret
   11111:	90                   	nop

0000000000011112 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   11112:	55                   	push   %rbp
   11113:	48 89 e5             	mov    %rsp,%rbp
   11116:	48 83 ec 10          	sub    $0x10,%rsp
   1111a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1111e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11122:	48 89 c7             	mov    %rax,%rdi
   11125:	e8 cc ff ff ff       	call   110f6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   1112a:	90                   	nop
   1112b:	c9                   	leave
   1112c:	c3                   	ret
   1112d:	90                   	nop

000000000001112e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1112e:	55                   	push   %rbp
   1112f:	48 89 e5             	mov    %rsp,%rbp
   11132:	48 83 ec 10          	sub    $0x10,%rsp
   11136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1113a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1113e:	48 89 c7             	mov    %rax,%rdi
   11141:	e8 04 13 00 00       	call   1244a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   11146:	90                   	nop
   11147:	c9                   	leave
   11148:	c3                   	ret
   11149:	90                   	nop

000000000001114a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   1114a:	55                   	push   %rbp
   1114b:	48 89 e5             	mov    %rsp,%rbp
   1114e:	48 83 ec 10          	sub    $0x10,%rsp
   11152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1115a:	48 89 c7             	mov    %rax,%rdi
   1115d:	e8 cc ff ff ff       	call   1112e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   11162:	90                   	nop
   11163:	c9                   	leave
   11164:	c3                   	ret
   11165:	90                   	nop

0000000000011166 <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   11166:	55                   	push   %rbp
   11167:	48 89 e5             	mov    %rsp,%rbp
   1116a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1116e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11172:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1117d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11184:	00 
   11185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11189:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   11190:	00 
   11191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11195:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   1119c:	00 
   1119d:	90                   	nop
   1119e:	5d                   	pop    %rbp
   1119f:	c3                   	ret

00000000000111a0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   111a0:	55                   	push   %rbp
   111a1:	48 89 e5             	mov    %rsp,%rbp
   111a4:	48 83 ec 10          	sub    $0x10,%rsp
   111a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111b0:	48 89 c7             	mov    %rax,%rdi
   111b3:	e8 e2 12 00 00       	call   1249a <_ZNSaIP15VkFramebuffer_TED1Ev>
   111b8:	90                   	nop
   111b9:	c9                   	leave
   111ba:	c3                   	ret
   111bb:	90                   	nop

00000000000111bc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   111bc:	55                   	push   %rbp
   111bd:	48 89 e5             	mov    %rsp,%rbp
   111c0:	48 83 ec 10          	sub    $0x10,%rsp
   111c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111cc:	48 89 c7             	mov    %rax,%rdi
   111cf:	e8 9e 12 00 00       	call   12472 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
   111d4:	90                   	nop
   111d5:	c9                   	leave
   111d6:	c3                   	ret
   111d7:	90                   	nop

00000000000111d8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
   111d8:	55                   	push   %rbp
   111d9:	48 89 e5             	mov    %rsp,%rbp
   111dc:	48 83 ec 10          	sub    $0x10,%rsp
   111e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111e8:	48 89 c7             	mov    %rax,%rdi
   111eb:	e8 cc ff ff ff       	call   111bc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
   111f0:	90                   	nop
   111f1:	c9                   	leave
   111f2:	c3                   	ret
   111f3:	90                   	nop

00000000000111f4 <_ZN9VulkanApp11SyncWrapperC1Ev>:
  void createCommandBuffer();

  void recordCommandBuffer(VkCommandBuffer commandBuffer, uint32_t imageIndex);

  /* Step 10: Synchronization and cache control */
  struct SyncWrapper {
   111f4:	55                   	push   %rbp
   111f5:	48 89 e5             	mov    %rsp,%rbp
   111f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11200:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   11207:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1120b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   11212:	00 
   11213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11217:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1121e:	00 
   1121f:	90                   	nop
   11220:	5d                   	pop    %rbp
   11221:	c3                   	ret

0000000000011222 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   11222:	55                   	push   %rbp
   11223:	48 89 e5             	mov    %rsp,%rbp
   11226:	48 83 ec 10          	sub    $0x10,%rsp
   1122a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1122e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11232:	48 89 c7             	mov    %rax,%rdi
   11235:	e8 c8 15 00 00       	call   12802 <_ZNSt15__new_allocatorIjED1Ev>
   1123a:	90                   	nop
   1123b:	c9                   	leave
   1123c:	c3                   	ret
   1123d:	90                   	nop

000000000001123e <_ZNSt12_Vector_baseIjSaIjEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1123e:	55                   	push   %rbp
   1123f:	48 89 e5             	mov    %rsp,%rbp
   11242:	48 83 ec 10          	sub    $0x10,%rsp
   11246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1124a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1124e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11256:	48 8b 00             	mov    (%rax),%rax
   11259:	48 29 c2             	sub    %rax,%rdx
   1125c:	48 89 d0             	mov    %rdx,%rax
   1125f:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   11263:	48 89 c2             	mov    %rax,%rdx
   11266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1126a:	48 8b 08             	mov    (%rax),%rcx
   1126d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11271:	48 89 ce             	mov    %rcx,%rsi
   11274:	48 89 c7             	mov    %rax,%rdi
   11277:	e8 92 15 00 00       	call   1280e <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>
      }
   1127c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11280:	48 89 c7             	mov    %rax,%rdi
   11283:	e8 48 fc ff ff       	call   10ed0 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implD1Ev>
   11288:	90                   	nop
   11289:	c9                   	leave
   1128a:	c3                   	ret
   1128b:	90                   	nop

000000000001128c <_ZNSt6vectorIjSaIjEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1128c:	55                   	push   %rbp
   1128d:	48 89 e5             	mov    %rsp,%rbp
   11290:	48 83 ec 10          	sub    $0x10,%rsp
   11294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1129c:	48 89 c7             	mov    %rax,%rdi
   1129f:	e8 a0 15 00 00       	call   12844 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   112a4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   112a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112ab:	48 8b 48 08          	mov    0x8(%rax),%rcx
   112af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112b3:	48 8b 00             	mov    (%rax),%rax
   112b6:	48 89 ce             	mov    %rcx,%rsi
   112b9:	48 89 c7             	mov    %rax,%rdi
   112bc:	e8 91 15 00 00       	call   12852 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>
      }
   112c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112c5:	48 89 c7             	mov    %rax,%rdi
   112c8:	e8 71 ff ff ff       	call   1123e <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   112cd:	90                   	nop
   112ce:	c9                   	leave
   112cf:	c3                   	ret

00000000000112d0 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   112d0:	55                   	push   %rbp
   112d1:	48 89 e5             	mov    %rsp,%rbp
   112d4:	53                   	push   %rbx
   112d5:	48 83 ec 38          	sub    $0x38,%rsp
   112d9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   112dd:	48 89 f0             	mov    %rsi,%rax
   112e0:	48 89 d6             	mov    %rdx,%rsi
   112e3:	48 89 f2             	mov    %rsi,%rdx
   112e6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   112ea:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   112ee:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   112f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   112f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   112fa:	48 89 d6             	mov    %rdx,%rsi
   112fd:	48 89 c7             	mov    %rax,%rdi
   11300:	e8 77 15 00 00       	call   1287c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   11305:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11309:	48 89 c7             	mov    %rax,%rdi
   1130c:	e8 a3 15 00 00       	call   128b4 <_ZNKSt16initializer_listIPKcE3endEv>
   11311:	48 89 c3             	mov    %rax,%rbx
   11314:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11318:	48 89 c7             	mov    %rax,%rdi
   1131b:	e8 82 15 00 00       	call   128a2 <_ZNKSt16initializer_listIPKcE5beginEv>
   11320:	48 89 c1             	mov    %rax,%rcx
   11323:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11327:	48 89 da             	mov    %rbx,%rdx
   1132a:	48 89 ce             	mov    %rcx,%rsi
   1132d:	48 89 c7             	mov    %rax,%rdi
   11330:	e8 e5 15 00 00       	call   1291a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   11335:	eb 1a                	jmp    11351 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   11337:	48 89 c3             	mov    %rax,%rbx
   1133a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1133e:	48 89 c7             	mov    %rax,%rdi
   11341:	e8 1a 71 ff ff       	call   8460 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   11346:	48 89 d8             	mov    %rbx,%rax
   11349:	48 89 c7             	mov    %rax,%rdi
   1134c:	e8 5f 34 ff ff       	call   47b0 <_Unwind_Resume@plt>
   11351:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11355:	c9                   	leave
   11356:	c3                   	ret
   11357:	90                   	nop

0000000000011358 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11358:	55                   	push   %rbp
   11359:	48 89 e5             	mov    %rsp,%rbp
   1135c:	48 83 ec 10          	sub    $0x10,%rsp
   11360:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11364:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11368:	48 89 c7             	mov    %rax,%rdi
   1136b:	e8 a8 7f ff ff       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11370:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11377:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1137b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1137f:	48 8b 00             	mov    (%rax),%rax
   11382:	48 89 ce             	mov    %rcx,%rsi
   11385:	48 89 c7             	mov    %rax,%rdi
   11388:	e8 3c 16 00 00       	call   129c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   1138d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11391:	48 89 c7             	mov    %rax,%rdi
   11394:	e8 c7 70 ff ff       	call   8460 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   11399:	90                   	nop
   1139a:	c9                   	leave
   1139b:	c3                   	ret

000000000001139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1139c:	55                   	push   %rbp
   1139d:	48 89 e5             	mov    %rsp,%rbp
   113a0:	48 83 ec 20          	sub    $0x20,%rsp
   113a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   113a8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   113ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113b0:	48 89 d6             	mov    %rdx,%rsi
   113b3:	48 89 c7             	mov    %rax,%rdi
   113b6:	e8 39 16 00 00       	call   129f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   113bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113bf:	c9                   	leave
   113c0:	c3                   	ret
   113c1:	90                   	nop

00000000000113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   113c2:	55                   	push   %rbp
   113c3:	48 89 e5             	mov    %rsp,%rbp
   113c6:	48 83 ec 20          	sub    $0x20,%rsp
   113ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   113ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113d2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   113d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113da:	48 89 d6             	mov    %rdx,%rsi
   113dd:	48 89 c7             	mov    %rax,%rdi
   113e0:	e8 0f 16 00 00       	call   129f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   113e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113e9:	c9                   	leave
   113ea:	c3                   	ret

00000000000113eb <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   113eb:	55                   	push   %rbp
   113ec:	48 89 e5             	mov    %rsp,%rbp
   113ef:	53                   	push   %rbx
   113f0:	48 83 ec 18          	sub    $0x18,%rsp
   113f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   113fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11400:	48 89 c7             	mov    %rax,%rdi
   11403:	e8 0a 16 00 00       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11408:	48 8b 18             	mov    (%rax),%rbx
   1140b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1140f:	48 89 c7             	mov    %rax,%rdi
   11412:	e8 fb 15 00 00       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11417:	48 8b 00             	mov    (%rax),%rax
   1141a:	48 39 c3             	cmp    %rax,%rbx
   1141d:	0f 95 c0             	setne  %al
   11420:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11424:	c9                   	leave
   11425:	c3                   	ret

0000000000011426 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11426:	55                   	push   %rbp
   11427:	48 89 e5             	mov    %rsp,%rbp
   1142a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1142e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11432:	48 8b 00             	mov    (%rax),%rax
   11435:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11439:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1143d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11440:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11444:	5d                   	pop    %rbp
   11445:	c3                   	ret

0000000000011446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11446:	55                   	push   %rbp
   11447:	48 89 e5             	mov    %rsp,%rbp
   1144a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1144e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11452:	48 8b 00             	mov    (%rax),%rax
   11455:	5d                   	pop    %rbp
   11456:	c3                   	ret
   11457:	90                   	nop

0000000000011458 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   11458:	55                   	push   %rbp
   11459:	48 89 e5             	mov    %rsp,%rbp
   1145c:	53                   	push   %rbx
   1145d:	48 83 ec 18          	sub    $0x18,%rsp
   11461:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11465:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   11469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1146d:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11471:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11475:	48 8b 40 10          	mov    0x10(%rax),%rax
   11479:	48 39 c2             	cmp    %rax,%rdx
   1147c:	74 3c                	je     114ba <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   1147e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11482:	48 89 c7             	mov    %rax,%rdi
   11485:	e8 96 15 00 00       	call   12a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1148a:	48 89 c2             	mov    %rax,%rdx
   1148d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11491:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11495:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11499:	48 89 ce             	mov    %rcx,%rsi
   1149c:	48 89 c7             	mov    %rax,%rdi
   1149f:	e8 8a 15 00 00       	call   12a2e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   114a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   114ac:	48 8d 50 08          	lea    0x8(%rax),%rdx
   114b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114b4:	48 89 50 08          	mov    %rdx,0x8(%rax)
   114b8:	eb 30                	jmp    114ea <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   114ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   114be:	48 89 c7             	mov    %rax,%rdi
   114c1:	e8 5a 15 00 00       	call   12a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   114c6:	48 89 c3             	mov    %rax,%rbx
   114c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114cd:	48 89 c7             	mov    %rax,%rdi
   114d0:	e8 ed fe ff ff       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   114d5:	48 89 c1             	mov    %rax,%rcx
   114d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114dc:	48 89 da             	mov    %rbx,%rdx
   114df:	48 89 ce             	mov    %rcx,%rsi
   114e2:	48 89 c7             	mov    %rax,%rdi
   114e5:	e8 7e 15 00 00       	call   12a68 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   114ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114ee:	48 89 c7             	mov    %rax,%rdi
   114f1:	e8 04 17 00 00       	call   12bfa <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   114f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   114fa:	c9                   	leave
   114fb:	c3                   	ret

00000000000114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   114fc:	55                   	push   %rbp
   114fd:	48 89 e5             	mov    %rsp,%rbp
   11500:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11504:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11508:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1150c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11510:	48 8b 00             	mov    (%rax),%rax
   11513:	48 29 c2             	sub    %rax,%rdx
   11516:	48 89 d0             	mov    %rdx,%rax
   11519:	48 c1 f8 03          	sar    $0x3,%rax
   1151d:	5d                   	pop    %rbp
   1151e:	c3                   	ret
   1151f:	90                   	nop

0000000000011520 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   11520:	55                   	push   %rbp
   11521:	48 89 e5             	mov    %rsp,%rbp
   11524:	48 83 ec 10          	sub    $0x10,%rsp
   11528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1152c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11530:	48 8b 10             	mov    (%rax),%rdx
   11533:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11537:	48 89 d6             	mov    %rdx,%rsi
   1153a:	48 89 c7             	mov    %rax,%rdi
   1153d:	e8 f8 16 00 00       	call   12c3a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   11542:	c9                   	leave
   11543:	c3                   	ret

0000000000011544 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   11544:	55                   	push   %rbp
   11545:	48 89 e5             	mov    %rsp,%rbp
   11548:	48 83 ec 10          	sub    $0x10,%rsp
   1154c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   11550:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11554:	48 8b 10             	mov    (%rax),%rdx
   11557:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1155b:	48 89 d6             	mov    %rdx,%rsi
   1155e:	48 89 c7             	mov    %rax,%rdi
   11561:	e8 d4 16 00 00       	call   12c3a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   11566:	c9                   	leave
   11567:	c3                   	ret

0000000000011568 <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11568:	55                   	push   %rbp
   11569:	48 89 e5             	mov    %rsp,%rbp
   1156c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11574:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1157c:	48 8b 00             	mov    (%rax),%rax
   1157f:	48 29 c2             	sub    %rax,%rdx
   11582:	48 c1 fa 02          	sar    $0x2,%rdx
   11586:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   1158d:	db b6 6d 
   11590:	48 0f af c2          	imul   %rdx,%rax
   11594:	5d                   	pop    %rbp
   11595:	c3                   	ret

0000000000011596 <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   11596:	55                   	push   %rbp
   11597:	48 89 e5             	mov    %rsp,%rbp
   1159a:	48 83 ec 10          	sub    $0x10,%rsp
   1159e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   115a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115a6:	48 89 c7             	mov    %rax,%rdi
   115a9:	e8 c6 82 ff ff       	call   9874 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   115ae:	c9                   	leave
   115af:	c3                   	ret

00000000000115b0 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   115b0:	55                   	push   %rbp
   115b1:	48 89 e5             	mov    %rsp,%rbp
   115b4:	48 83 ec 10          	sub    $0x10,%rsp
   115b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   115bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115c0:	48 89 c7             	mov    %rax,%rdi
   115c3:	e8 ac 82 ff ff       	call   9874 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   115c8:	84 c0                	test   %al,%al
   115ca:	74 0e                	je     115da <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   115cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115d0:	48 89 c7             	mov    %rax,%rdi
   115d3:	e8 ae 82 ff ff       	call   9886 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   115d8:	eb 05                	jmp    115df <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   115da:	e8 b0 f8 ff ff       	call   10e8f <_ZSt27__throw_bad_optional_accessv>
      }
   115df:	c9                   	leave
   115e0:	c3                   	ret
   115e1:	90                   	nop

00000000000115e2 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   115e2:	55                   	push   %rbp
   115e3:	48 89 e5             	mov    %rsp,%rbp
   115e6:	48 83 ec 20          	sub    $0x20,%rsp
   115ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   115f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   115fa:	48 89 c7             	mov    %rax,%rdi
   115fd:	e8 4a 16 00 00       	call   12c4c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   11602:	8b 10                	mov    (%rax),%edx
   11604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11608:	89 10                	mov    %edx,(%rax)
   1160a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1160e:	48 89 c7             	mov    %rax,%rdi
   11611:	e8 44 16 00 00       	call   12c5a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   11616:	48 89 c1             	mov    %rax,%rcx
   11619:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1161d:	48 8b 01             	mov    (%rcx),%rax
   11620:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   11624:	48 89 46 04          	mov    %rax,0x4(%rsi)
   11628:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   1162c:	48 8b 41 10          	mov    0x10(%rcx),%rax
   11630:	48 89 46 14          	mov    %rax,0x14(%rsi)
   11634:	90                   	nop
   11635:	c9                   	leave
   11636:	c3                   	ret
   11637:	90                   	nop

0000000000011638 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   11638:	55                   	push   %rbp
   11639:	48 89 e5             	mov    %rsp,%rbp
   1163c:	53                   	push   %rbx
   1163d:	48 83 ec 18          	sub    $0x18,%rsp
   11641:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11645:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   11649:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1164d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11651:	48 89 c7             	mov    %rax,%rdi
   11654:	e8 0f 16 00 00       	call   12c68 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   11659:	48 89 c6             	mov    %rax,%rsi
   1165c:	48 89 df             	mov    %rbx,%rdi
   1165f:	e8 38 16 00 00       	call   12c9c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   11664:	90                   	nop
   11665:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11669:	c9                   	leave
   1166a:	c3                   	ret
   1166b:	90                   	nop

000000000001166c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1166c:	55                   	push   %rbp
   1166d:	48 89 e5             	mov    %rsp,%rbp
   11670:	48 83 ec 20          	sub    $0x20,%rsp
   11674:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11678:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1167c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11680:	48 89 d6             	mov    %rdx,%rsi
   11683:	48 89 c7             	mov    %rax,%rdi
   11686:	e8 45 16 00 00       	call   12cd0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1168b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1168f:	c9                   	leave
   11690:	c3                   	ret
   11691:	90                   	nop

0000000000011692 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11692:	55                   	push   %rbp
   11693:	48 89 e5             	mov    %rsp,%rbp
   11696:	48 83 ec 20          	sub    $0x20,%rsp
   1169a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1169e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116a2:	48 8d 50 08          	lea    0x8(%rax),%rdx
   116a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   116aa:	48 89 d6             	mov    %rdx,%rsi
   116ad:	48 89 c7             	mov    %rax,%rdi
   116b0:	e8 1b 16 00 00       	call   12cd0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   116b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116b9:	c9                   	leave
   116ba:	c3                   	ret

00000000000116bb <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   116bb:	55                   	push   %rbp
   116bc:	48 89 e5             	mov    %rsp,%rbp
   116bf:	53                   	push   %rbx
   116c0:	48 83 ec 18          	sub    $0x18,%rsp
   116c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   116c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   116cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   116d0:	48 89 c7             	mov    %rax,%rdi
   116d3:	e8 16 16 00 00       	call   12cee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   116d8:	48 8b 18             	mov    (%rax),%rbx
   116db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   116df:	48 89 c7             	mov    %rax,%rdi
   116e2:	e8 07 16 00 00       	call   12cee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   116e7:	48 8b 00             	mov    (%rax),%rax
   116ea:	48 39 c3             	cmp    %rax,%rbx
   116ed:	0f 95 c0             	setne  %al
   116f0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   116f4:	c9                   	leave
   116f5:	c3                   	ret

00000000000116f6 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   116f6:	55                   	push   %rbp
   116f7:	48 89 e5             	mov    %rsp,%rbp
   116fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   116fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11702:	48 8b 00             	mov    (%rax),%rax
   11705:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11709:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1170d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11714:	5d                   	pop    %rbp
   11715:	c3                   	ret

0000000000011716 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11716:	55                   	push   %rbp
   11717:	48 89 e5             	mov    %rsp,%rbp
   1171a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   1171e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11722:	48 8b 00             	mov    (%rax),%rax
   11725:	5d                   	pop    %rbp
   11726:	c3                   	ret
   11727:	90                   	nop

0000000000011728 <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   11728:	55                   	push   %rbp
   11729:	48 89 e5             	mov    %rsp,%rbp
   1172c:	48 83 ec 10          	sub    $0x10,%rsp
   11730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   11734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11738:	48 89 c7             	mov    %rax,%rdi
   1173b:	e8 18 f9 ff ff       	call   11058 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   11740:	c9                   	leave
   11741:	c3                   	ret

0000000000011742 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   11742:	55                   	push   %rbp
   11743:	48 89 e5             	mov    %rsp,%rbp
   11746:	48 83 ec 10          	sub    $0x10,%rsp
   1174a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1174e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   11752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11756:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1175a:	48 89 d6             	mov    %rdx,%rsi
   1175d:	48 89 c7             	mov    %rax,%rdi
   11760:	e8 97 15 00 00       	call   12cfc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   11765:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11769:	c9                   	leave
   1176a:	c3                   	ret
   1176b:	90                   	nop

000000000001176c <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   1176c:	55                   	push   %rbp
   1176d:	48 89 e5             	mov    %rsp,%rbp
   11770:	48 83 ec 10          	sub    $0x10,%rsp
   11774:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   11778:	e8 d1 33 ff ff       	call   4b4e <_ZSt23__is_constant_evaluatedv>
   1177d:	84 c0                	test   %al,%al
   1177f:	74 1a                	je     1179b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   11781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11785:	48 89 c7             	mov    %rax,%rdi
   11788:	e8 cb f8 ff ff       	call   11058 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   1178d:	83 f0 01             	xor    $0x1,%eax
   11790:	84 c0                	test   %al,%al
   11792:	74 07                	je     1179b <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   11794:	b8 01 00 00 00       	mov    $0x1,%eax
   11799:	eb 05                	jmp    117a0 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   1179b:	b8 00 00 00 00       	mov    $0x0,%eax
   117a0:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   117a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117a6:	48 89 c7             	mov    %rax,%rdi
   117a9:	e8 e0 15 00 00       	call   12d8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   117ae:	c9                   	leave
   117af:	c3                   	ret

00000000000117b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   117b0:	55                   	push   %rbp
   117b1:	48 89 e5             	mov    %rsp,%rbp
   117b4:	48 83 ec 10          	sub    $0x10,%rsp
   117b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   117bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117c0:	48 89 c7             	mov    %rax,%rdi
   117c3:	e8 d4 15 00 00       	call   12d9c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   117c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117cc:	48 89 c7             	mov    %rax,%rdi
   117cf:	e8 e4 15 00 00       	call   12db8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   117d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117d8:	48 83 c0 08          	add    $0x8,%rax
   117dc:	48 89 c7             	mov    %rax,%rdi
   117df:	e8 08 f7 ff ff       	call   10eec <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   117e4:	90                   	nop
   117e5:	c9                   	leave
   117e6:	c3                   	ret
   117e7:	90                   	nop

00000000000117e8 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
   117e8:	55                   	push   %rbp
   117e9:	48 89 e5             	mov    %rsp,%rbp
   117ec:	48 83 ec 10          	sub    $0x10,%rsp
   117f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f8:	48 89 c7             	mov    %rax,%rdi
   117fb:	e8 c4 15 00 00       	call   12dc4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   11800:	90                   	nop
   11801:	c9                   	leave
   11802:	c3                   	ret
   11803:	90                   	nop

0000000000011804 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   11804:	55                   	push   %rbp
   11805:	48 89 e5             	mov    %rsp,%rbp
   11808:	48 83 ec 10          	sub    $0x10,%rsp
   1180c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   11810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11814:	48 89 c7             	mov    %rax,%rdi
   11817:	e8 1a 16 00 00       	call   12e36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   1181c:	48 89 c2             	mov    %rax,%rdx
   1181f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11823:	48 89 d6             	mov    %rdx,%rsi
   11826:	48 89 c7             	mov    %rax,%rdi
   11829:	e8 a2 15 00 00       	call   12dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   1182e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11832:	48 89 c7             	mov    %rax,%rdi
   11835:	e8 30 f8 ff ff       	call   1106a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   1183a:	90                   	nop
   1183b:	c9                   	leave
   1183c:	c3                   	ret
   1183d:	90                   	nop

000000000001183e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   1183e:	55                   	push   %rbp
   1183f:	48 89 e5             	mov    %rsp,%rbp
   11842:	48 83 ec 20          	sub    $0x20,%rsp
   11846:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1184a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1184e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11852:	48 89 d6             	mov    %rdx,%rsi
   11855:	48 89 c7             	mov    %rax,%rdi
   11858:	e8 f3 15 00 00       	call   12e50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1185d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11861:	c9                   	leave
   11862:	c3                   	ret
   11863:	90                   	nop

0000000000011864 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11864:	55                   	push   %rbp
   11865:	48 89 e5             	mov    %rsp,%rbp
   11868:	48 83 ec 20          	sub    $0x20,%rsp
   1186c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11870:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11874:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11878:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1187c:	48 89 d6             	mov    %rdx,%rsi
   1187f:	48 89 c7             	mov    %rax,%rdi
   11882:	e8 c9 15 00 00       	call   12e50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1188b:	c9                   	leave
   1188c:	c3                   	ret

000000000001188d <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1188d:	55                   	push   %rbp
   1188e:	48 89 e5             	mov    %rsp,%rbp
   11891:	53                   	push   %rbx
   11892:	48 83 ec 18          	sub    $0x18,%rsp
   11896:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1189a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1189e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118a2:	48 89 c7             	mov    %rax,%rdi
   118a5:	e8 c4 15 00 00       	call   12e6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   118aa:	48 8b 18             	mov    (%rax),%rbx
   118ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118b1:	48 89 c7             	mov    %rax,%rdi
   118b4:	e8 b5 15 00 00       	call   12e6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   118b9:	48 8b 00             	mov    (%rax),%rax
   118bc:	48 39 c3             	cmp    %rax,%rbx
   118bf:	0f 95 c0             	setne  %al
   118c2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   118c6:	c9                   	leave
   118c7:	c3                   	ret

00000000000118c8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   118c8:	55                   	push   %rbp
   118c9:	48 89 e5             	mov    %rsp,%rbp
   118cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   118d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118d4:	48 8b 00             	mov    (%rax),%rax
   118d7:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   118de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118e2:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   118e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   118e9:	5d                   	pop    %rbp
   118ea:	c3                   	ret
   118eb:	90                   	nop

00000000000118ec <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   118ec:	55                   	push   %rbp
   118ed:	48 89 e5             	mov    %rsp,%rbp
   118f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   118f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118f8:	48 8b 00             	mov    (%rax),%rax
   118fb:	5d                   	pop    %rbp
   118fc:	c3                   	ret
   118fd:	90                   	nop

00000000000118fe <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   118fe:	55                   	push   %rbp
   118ff:	48 89 e5             	mov    %rsp,%rbp
   11902:	53                   	push   %rbx
   11903:	48 83 ec 48          	sub    $0x48,%rsp
   11907:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   1190b:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   1190f:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   11913:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11917:	48 89 d6             	mov    %rdx,%rsi
   1191a:	48 89 c7             	mov    %rax,%rdi
   1191d:	e8 5a 15 00 00       	call   12e7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   11922:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   11926:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1192a:	48 89 c7             	mov    %rax,%rdi
   1192d:	e8 70 15 00 00       	call   12ea2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   11932:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   11936:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1193a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1193e:	48 89 d6             	mov    %rdx,%rsi
   11941:	48 89 c7             	mov    %rax,%rdi
   11944:	e8 73 15 00 00       	call   12ebc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   11949:	84 c0                	test   %al,%al
   1194b:	75 32                	jne    1197f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   1194d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11951:	48 89 c7             	mov    %rax,%rdi
   11954:	e8 85 15 00 00       	call   12ede <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   11959:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1195d:	48 89 c7             	mov    %rax,%rdi
   11960:	e8 95 15 00 00       	call   12efa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   11965:	48 89 c2             	mov    %rax,%rdx
   11968:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   1196c:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   11970:	48 89 ce             	mov    %rcx,%rsi
   11973:	48 89 c7             	mov    %rax,%rdi
   11976:	e8 9d 15 00 00       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1197b:	84 c0                	test   %al,%al
   1197d:	74 07                	je     11986 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   1197f:	b8 01 00 00 00       	mov    $0x1,%eax
   11984:	eb 05                	jmp    1198b <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   11986:	b8 00 00 00 00       	mov    $0x0,%eax
   1198b:	84 c0                	test   %al,%al
   1198d:	74 5d                	je     119ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   1198f:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   11993:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   11997:	48 89 c7             	mov    %rax,%rdi
   1199a:	e8 26 0e 00 00       	call   127c5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   1199f:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   119a2:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   119a6:	48 89 d6             	mov    %rdx,%rsi
   119a9:	48 89 c7             	mov    %rax,%rdi
   119ac:	e8 90 15 00 00       	call   12f41 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   119b1:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   119b5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   119b9:	48 89 d6             	mov    %rdx,%rsi
   119bc:	48 89 c7             	mov    %rax,%rdi
   119bf:	e8 b2 15 00 00       	call   12f76 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   119c4:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   119c8:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   119cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119d0:	49 89 c8             	mov    %rcx,%r8
   119d3:	48 89 d1             	mov    %rdx,%rcx
   119d6:	48 8d 15 e7 b4 00 00 	lea    0xb4e7(%rip),%rdx        # 1cec4 <_ZSt19piecewise_construct>
   119dd:	48 89 c6             	mov    %rax,%rsi
   119e0:	48 89 df             	mov    %rbx,%rdi
   119e3:	e8 ac 15 00 00       	call   12f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   119e8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   119ec:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   119f0:	48 89 c7             	mov    %rax,%rdi
   119f3:	e8 02 15 00 00       	call   12efa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   119f8:	48 83 c0 20          	add    $0x20,%rax
      }
   119fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11a00:	c9                   	leave
   11a01:	c3                   	ret

0000000000011a02 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   11a02:	55                   	push   %rbp
   11a03:	48 89 e5             	mov    %rsp,%rbp
   11a06:	48 83 ec 20          	sub    $0x20,%rsp
   11a0a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   11a0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a12:	48 89 c7             	mov    %rax,%rdi
   11a15:	e8 9c 16 00 00       	call   130b6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   11a1a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a22:	48 89 c7             	mov    %rax,%rdi
   11a25:	e8 66 16 00 00       	call   13090 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   11a2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11a2e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11a32:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11a36:	48 89 d6             	mov    %rdx,%rsi
   11a39:	48 89 c7             	mov    %rax,%rdi
   11a3c:	e8 9e 16 00 00       	call   130df <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   11a41:	c9                   	leave
   11a42:	c3                   	ret
   11a43:	90                   	nop

0000000000011a44 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11a44:	55                   	push   %rbp
   11a45:	48 89 e5             	mov    %rsp,%rbp
   11a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a54:	48 8b 00             	mov    (%rax),%rax
   11a57:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a5b:	48 c1 e2 03          	shl    $0x3,%rdx
   11a5f:	48 01 d0             	add    %rdx,%rax
      }
   11a62:	5d                   	pop    %rbp
   11a63:	c3                   	ret

0000000000011a64 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11a64:	55                   	push   %rbp
   11a65:	48 89 e5             	mov    %rsp,%rbp
   11a68:	48 83 ec 20          	sub    $0x20,%rsp
   11a6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11a70:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11a74:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11a78:	48 89 d6             	mov    %rdx,%rsi
   11a7b:	48 89 c7             	mov    %rax,%rdi
   11a7e:	e8 97 16 00 00       	call   1311a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a87:	c9                   	leave
   11a88:	c3                   	ret
   11a89:	90                   	nop

0000000000011a8a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11a8a:	55                   	push   %rbp
   11a8b:	48 89 e5             	mov    %rsp,%rbp
   11a8e:	48 83 ec 20          	sub    $0x20,%rsp
   11a92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11a96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a9a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11a9e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11aa2:	48 89 d6             	mov    %rdx,%rsi
   11aa5:	48 89 c7             	mov    %rax,%rdi
   11aa8:	e8 6d 16 00 00       	call   1311a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11aad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ab1:	c9                   	leave
   11ab2:	c3                   	ret

0000000000011ab3 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11ab3:	55                   	push   %rbp
   11ab4:	48 89 e5             	mov    %rsp,%rbp
   11ab7:	53                   	push   %rbx
   11ab8:	48 83 ec 18          	sub    $0x18,%rsp
   11abc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ac0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11ac4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ac8:	48 89 c7             	mov    %rax,%rdi
   11acb:	e8 68 16 00 00       	call   13138 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11ad0:	48 8b 18             	mov    (%rax),%rbx
   11ad3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ad7:	48 89 c7             	mov    %rax,%rdi
   11ada:	e8 59 16 00 00       	call   13138 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11adf:	48 8b 00             	mov    (%rax),%rax
   11ae2:	48 39 c3             	cmp    %rax,%rbx
   11ae5:	0f 95 c0             	setne  %al
   11ae8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11aec:	c9                   	leave
   11aed:	c3                   	ret

0000000000011aee <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11aee:	55                   	push   %rbp
   11aef:	48 89 e5             	mov    %rsp,%rbp
   11af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11afa:	48 8b 00             	mov    (%rax),%rax
   11afd:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b05:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11b08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11b0c:	5d                   	pop    %rbp
   11b0d:	c3                   	ret

0000000000011b0e <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11b0e:	55                   	push   %rbp
   11b0f:	48 89 e5             	mov    %rsp,%rbp
   11b12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b1a:	48 8b 00             	mov    (%rax),%rax
   11b1d:	5d                   	pop    %rbp
   11b1e:	c3                   	ret
   11b1f:	90                   	nop

0000000000011b20 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11b20:	55                   	push   %rbp
   11b21:	48 89 e5             	mov    %rsp,%rbp
   11b24:	48 83 ec 20          	sub    $0x20,%rsp
   11b28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11b2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b30:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b34:	48 89 d6             	mov    %rdx,%rsi
   11b37:	48 89 c7             	mov    %rax,%rdi
   11b3a:	e8 07 16 00 00       	call   13146 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b43:	c9                   	leave
   11b44:	c3                   	ret
   11b45:	90                   	nop

0000000000011b46 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11b46:	55                   	push   %rbp
   11b47:	48 89 e5             	mov    %rsp,%rbp
   11b4a:	48 83 ec 20          	sub    $0x20,%rsp
   11b4e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11b52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b56:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11b5a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b5e:	48 89 d6             	mov    %rdx,%rsi
   11b61:	48 89 c7             	mov    %rax,%rdi
   11b64:	e8 dd 15 00 00       	call   13146 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   11b69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b6d:	c9                   	leave
   11b6e:	c3                   	ret

0000000000011b6f <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11b6f:	55                   	push   %rbp
   11b70:	48 89 e5             	mov    %rsp,%rbp
   11b73:	53                   	push   %rbx
   11b74:	48 83 ec 18          	sub    $0x18,%rsp
   11b78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11b7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11b80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b84:	48 89 c7             	mov    %rax,%rdi
   11b87:	e8 d8 15 00 00       	call   13164 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11b8c:	48 8b 18             	mov    (%rax),%rbx
   11b8f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b93:	48 89 c7             	mov    %rax,%rdi
   11b96:	e8 c9 15 00 00       	call   13164 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11b9b:	48 8b 00             	mov    (%rax),%rax
   11b9e:	48 39 c3             	cmp    %rax,%rbx
   11ba1:	0f 95 c0             	setne  %al
   11ba4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11ba8:	c9                   	leave
   11ba9:	c3                   	ret

0000000000011baa <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11baa:	55                   	push   %rbp
   11bab:	48 89 e5             	mov    %rsp,%rbp
   11bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bb6:	48 8b 00             	mov    (%rax),%rax
   11bb9:	48 8d 50 04          	lea    0x4(%rax),%rdx
   11bbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bc1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11bc8:	5d                   	pop    %rbp
   11bc9:	c3                   	ret

0000000000011bca <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11bca:	55                   	push   %rbp
   11bcb:	48 89 e5             	mov    %rsp,%rbp
   11bce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bd6:	48 8b 00             	mov    (%rax),%rax
   11bd9:	5d                   	pop    %rbp
   11bda:	c3                   	ret
   11bdb:	90                   	nop

0000000000011bdc <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   11bdc:	55                   	push   %rbp
   11bdd:	48 89 e5             	mov    %rsp,%rbp
   11be0:	48 83 ec 20          	sub    $0x20,%rsp
   11be4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11be8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   11bec:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   11bf0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11bf4:	48 89 c7             	mov    %rax,%rdi
   11bf7:	e8 76 15 00 00       	call   13172 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   11bfc:	48 89 c2             	mov    %rax,%rdx
   11bff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c03:	48 89 d6             	mov    %rdx,%rsi
   11c06:	48 89 c7             	mov    %rax,%rdi
   11c09:	e8 72 15 00 00       	call   13180 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   11c0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   11c12:	c9                   	leave
   11c13:	c3                   	ret

0000000000011c14 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11c14:	55                   	push   %rbp
   11c15:	48 89 e5             	mov    %rsp,%rbp
   11c18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c20:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c28:	48 8b 00             	mov    (%rax),%rax
   11c2b:	48 29 c2             	sub    %rax,%rdx
   11c2e:	48 89 d0             	mov    %rdx,%rax
   11c31:	48 c1 f8 03          	sar    $0x3,%rax
   11c35:	5d                   	pop    %rbp
   11c36:	c3                   	ret
   11c37:	90                   	nop

0000000000011c38 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   11c38:	55                   	push   %rbp
   11c39:	48 89 e5             	mov    %rsp,%rbp
   11c3c:	48 83 ec 10          	sub    $0x10,%rsp
   11c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   11c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c4c:	48 89 c7             	mov    %rax,%rdi
   11c4f:	e8 5a 03 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11c54:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11c58:	0f 92 c0             	setb   %al
   11c5b:	84 c0                	test   %al,%al
   11c5d:	74 24                	je     11c83 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   11c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c63:	48 89 c7             	mov    %rax,%rdi
   11c66:	e8 43 03 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11c6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c6f:	48 29 c2             	sub    %rax,%rdx
   11c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c76:	48 89 d6             	mov    %rdx,%rsi
   11c79:	48 89 c7             	mov    %rax,%rdi
   11c7c:	e8 a1 15 00 00       	call   13222 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   11c81:	eb 38                	jmp    11cbb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   11c83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c87:	48 89 c7             	mov    %rax,%rdi
   11c8a:	e8 1f 03 00 00       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11c8f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   11c93:	0f 92 c0             	setb   %al
   11c96:	84 c0                	test   %al,%al
   11c98:	74 21                	je     11cbb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   11c9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c9e:	48 8b 00             	mov    (%rax),%rax
   11ca1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11ca5:	48 c1 e2 03          	shl    $0x3,%rdx
   11ca9:	48 01 c2             	add    %rax,%rdx
   11cac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cb0:	48 89 d6             	mov    %rdx,%rsi
   11cb3:	48 89 c7             	mov    %rax,%rdi
   11cb6:	e8 71 17 00 00       	call   1342c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   11cbb:	90                   	nop
   11cbc:	c9                   	leave
   11cbd:	c3                   	ret

0000000000011cbe <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11cbe:	55                   	push   %rbp
   11cbf:	48 89 e5             	mov    %rsp,%rbp
   11cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cce:	48 8b 00             	mov    (%rax),%rax
   11cd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cd5:	48 c1 e2 03          	shl    $0x3,%rdx
   11cd9:	48 01 d0             	add    %rdx,%rax
      }
   11cdc:	5d                   	pop    %rbp
   11cdd:	c3                   	ret

0000000000011cde <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11cde:	55                   	push   %rbp
   11cdf:	48 89 e5             	mov    %rsp,%rbp
   11ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cee:	48 8b 00             	mov    (%rax),%rax
   11cf1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cf5:	48 c1 e2 03          	shl    $0x3,%rdx
   11cf9:	48 01 d0             	add    %rdx,%rax
      }
   11cfc:	5d                   	pop    %rbp
   11cfd:	c3                   	ret

0000000000011cfe <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11cfe:	55                   	push   %rbp
   11cff:	48 89 e5             	mov    %rsp,%rbp
   11d02:	48 83 ec 10          	sub    $0x10,%rsp
   11d06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d0e:	48 89 c7             	mov    %rax,%rdi
   11d11:	e8 76 17 00 00       	call   1348c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   11d16:	90                   	nop
   11d17:	c9                   	leave
   11d18:	c3                   	ret
   11d19:	90                   	nop

0000000000011d1a <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   11d1a:	55                   	push   %rbp
   11d1b:	48 89 e5             	mov    %rsp,%rbp
   11d1e:	48 83 ec 10          	sub    $0x10,%rsp
   11d22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d2a:	48 89 c7             	mov    %rax,%rdi
   11d2d:	e8 66 17 00 00       	call   13498 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   11d32:	90                   	nop
   11d33:	c9                   	leave
   11d34:	c3                   	ret
   11d35:	90                   	nop

0000000000011d36 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   11d36:	55                   	push   %rbp
   11d37:	48 89 e5             	mov    %rsp,%rbp
   11d3a:	53                   	push   %rbx
   11d3b:	48 83 ec 38          	sub    $0x38,%rsp
   11d3f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11d43:	48 89 f0             	mov    %rsi,%rax
   11d46:	48 89 d6             	mov    %rdx,%rsi
   11d49:	48 89 f2             	mov    %rsi,%rdx
   11d4c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11d50:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11d54:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   11d58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d5c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11d60:	48 89 d6             	mov    %rdx,%rsi
   11d63:	48 89 c7             	mov    %rax,%rdi
   11d66:	e8 55 17 00 00       	call   134c0 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   11d6b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11d6f:	48 89 c7             	mov    %rax,%rdi
   11d72:	e8 d9 17 00 00       	call   13550 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   11d77:	48 89 c3             	mov    %rax,%rbx
   11d7a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11d7e:	48 89 c7             	mov    %rax,%rdi
   11d81:	e8 b8 17 00 00       	call   1353e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   11d86:	48 89 c1             	mov    %rax,%rcx
   11d89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d8d:	48 89 da             	mov    %rbx,%rdx
   11d90:	48 89 ce             	mov    %rcx,%rsi
   11d93:	48 89 c7             	mov    %rax,%rdi
   11d96:	e8 29 18 00 00       	call   135c4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   11d9b:	eb 1a                	jmp    11db7 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   11d9d:	48 89 c3             	mov    %rax,%rbx
   11da0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11da4:	48 89 c7             	mov    %rax,%rdi
   11da7:	e8 3a 17 00 00       	call   134e6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11dac:	48 89 d8             	mov    %rbx,%rax
   11daf:	48 89 c7             	mov    %rax,%rdi
   11db2:	e8 f9 29 ff ff       	call   47b0 <_Unwind_Resume@plt>
   11db7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11dbb:	c9                   	leave
   11dbc:	c3                   	ret
   11dbd:	90                   	nop

0000000000011dbe <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11dbe:	55                   	push   %rbp
   11dbf:	48 89 e5             	mov    %rsp,%rbp
   11dc2:	48 83 ec 10          	sub    $0x10,%rsp
   11dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dce:	48 89 c7             	mov    %rax,%rdi
   11dd1:	e8 a8 18 00 00       	call   1367e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   11dd6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11dd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ddd:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11de1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11de5:	48 8b 00             	mov    (%rax),%rax
   11de8:	48 89 ce             	mov    %rcx,%rsi
   11deb:	48 89 c7             	mov    %rax,%rdi
   11dee:	e8 99 18 00 00       	call   1368c <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   11df3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11df7:	48 89 c7             	mov    %rax,%rdi
   11dfa:	e8 e7 16 00 00       	call   134e6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   11dff:	90                   	nop
   11e00:	c9                   	leave
   11e01:	c3                   	ret

0000000000011e02 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   11e02:	55                   	push   %rbp
   11e03:	48 89 e5             	mov    %rsp,%rbp
   11e06:	48 83 ec 10          	sub    $0x10,%rsp
   11e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e12:	48 89 c7             	mov    %rax,%rdi
   11e15:	e8 e6 18 00 00       	call   13700 <_ZNSaIP12VkPipeline_TED1Ev>
   11e1a:	90                   	nop
   11e1b:	c9                   	leave
   11e1c:	c3                   	ret

0000000000011e1d <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   11e1d:	55                   	push   %rbp
   11e1e:	48 89 e5             	mov    %rsp,%rbp
   11e21:	41 54                	push   %r12
   11e23:	53                   	push   %rbx
   11e24:	48 83 ec 40          	sub    $0x40,%rsp
   11e28:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   11e2c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   11e30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   11e34:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   11e38:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   11e3c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11e40:	48 89 c7             	mov    %rax,%rdi
   11e43:	e8 6e 18 00 00       	call   136b6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   11e48:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   11e4b:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   11e4e:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11e52:	48 89 c7             	mov    %rax,%rdi
   11e55:	e8 8a 18 00 00       	call   136e4 <_ZNSaIP12VkPipeline_TEC1Ev>
   11e5a:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   11e5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e62:	48 89 de             	mov    %rbx,%rsi
   11e65:	48 89 c7             	mov    %rax,%rdi
   11e68:	e8 af 18 00 00       	call   1371c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   11e6d:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11e71:	48 89 c7             	mov    %rax,%rdi
   11e74:	e8 87 18 00 00       	call   13700 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   11e79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11e7d:	48 89 c7             	mov    %rax,%rdi
   11e80:	e8 31 19 00 00       	call   137b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   11e85:	48 89 c3             	mov    %rax,%rbx
   11e88:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11e8c:	48 89 c7             	mov    %rax,%rdi
   11e8f:	e8 fe 18 00 00       	call   13792 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   11e94:	48 89 c1             	mov    %rax,%rcx
   11e97:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   11e9b:	8b 55 ec             	mov    -0x14(%rbp),%edx
   11e9e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11ea2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ea6:	49 89 d9             	mov    %rbx,%r9
   11ea9:	49 89 f8             	mov    %rdi,%r8
   11eac:	48 89 c7             	mov    %rax,%rdi
   11eaf:	e8 dc 22 ff ff       	call   4190 <vkCreateGraphicsPipelines@plt>
   11eb4:	89 45 e8             	mov    %eax,-0x18(%rbp)
                                       createInfos.data(), pAllocator,
                                       pipelines.data());
  } else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   11eb7:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   11ebb:	74 7f                	je     11f3c <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   11ebd:	bf 10 00 00 00       	mov    $0x10,%edi
   11ec2:	e8 d9 22 ff ff       	call   41a0 <__cxa_allocate_exception@plt>
   11ec7:	48 89 c3             	mov    %rax,%rbx
   11eca:	48 8d 05 01 af 00 00 	lea    0xaf01(%rip),%rax        # 1cdd2 <_ZZN9VulkanApp6renderEvE11submitCount+0x252>
   11ed1:	48 89 c6             	mov    %rax,%rsi
   11ed4:	48 89 df             	mov    %rbx,%rdi
   11ed7:	e8 44 22 ff ff       	call   4120 <_ZNSt13runtime_errorC1EPKc@plt>
   11edc:	48 8b 05 c5 90 01 00 	mov    0x190c5(%rip),%rax        # 2afa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   11ee3:	48 89 c2             	mov    %rax,%rdx
   11ee6:	48 8d 05 53 8e 01 00 	lea    0x18e53(%rip),%rax        # 2ad40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   11eed:	48 89 c6             	mov    %rax,%rsi
   11ef0:	48 89 df             	mov    %rbx,%rdi
   11ef3:	e8 58 28 ff ff       	call   4750 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   11ef8:	48 89 c3             	mov    %rax,%rbx
   11efb:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   11eff:	48 89 c7             	mov    %rax,%rdi
   11f02:	e8 f9 17 00 00       	call   13700 <_ZNSaIP12VkPipeline_TED1Ev>
   11f07:	48 89 d8             	mov    %rbx,%rax
   11f0a:	48 89 c7             	mov    %rax,%rdi
   11f0d:	e8 9e 28 ff ff       	call   47b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   11f12:	49 89 c4             	mov    %rax,%r12
   11f15:	48 89 df             	mov    %rbx,%rdi
   11f18:	e8 63 23 ff ff       	call   4280 <__cxa_free_exception@plt>
   11f1d:	4c 89 e3             	mov    %r12,%rbx
   11f20:	eb 03                	jmp    11f25 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   11f22:	48 89 c3             	mov    %rax,%rbx
   11f25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11f29:	48 89 c7             	mov    %rax,%rdi
   11f2c:	e8 19 00 00 00       	call   11f4a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   11f31:	48 89 d8             	mov    %rbx,%rax
   11f34:	48 89 c7             	mov    %rax,%rdi
   11f37:	e8 74 28 ff ff       	call   47b0 <_Unwind_Resume@plt>
  return pipelines;
   11f3c:	90                   	nop
}
   11f3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11f41:	48 83 c4 40          	add    $0x40,%rsp
   11f45:	5b                   	pop    %rbx
   11f46:	41 5c                	pop    %r12
   11f48:	5d                   	pop    %rbp
   11f49:	c3                   	ret

0000000000011f4a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11f4a:	55                   	push   %rbp
   11f4b:	48 89 e5             	mov    %rsp,%rbp
   11f4e:	48 83 ec 10          	sub    $0x10,%rsp
   11f52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11f56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f5a:	48 89 c7             	mov    %rax,%rdi
   11f5d:	e8 c6 18 00 00       	call   13828 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f62:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f69:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f71:	48 8b 00             	mov    (%rax),%rax
   11f74:	48 89 ce             	mov    %rcx,%rsi
   11f77:	48 89 c7             	mov    %rax,%rdi
   11f7a:	e8 b7 18 00 00       	call   13836 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   11f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f83:	48 89 c7             	mov    %rax,%rdi
   11f86:	e8 4f 18 00 00       	call   137da <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   11f8b:	90                   	nop
   11f8c:	c9                   	leave
   11f8d:	c3                   	ret

0000000000011f8e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11f8e:	55                   	push   %rbp
   11f8f:	48 89 e5             	mov    %rsp,%rbp
   11f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   11f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f9e:	48 8b 00             	mov    (%rax),%rax
   11fa1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11fa5:	48 c1 e2 03          	shl    $0x3,%rdx
   11fa9:	48 01 d0             	add    %rdx,%rax
      }
   11fac:	5d                   	pop    %rbp
   11fad:	c3                   	ret

0000000000011fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11fae:	55                   	push   %rbp
   11faf:	48 89 e5             	mov    %rsp,%rbp
   11fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fba:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fc2:	48 8b 00             	mov    (%rax),%rax
   11fc5:	48 29 c2             	sub    %rax,%rdx
   11fc8:	48 89 d0             	mov    %rdx,%rax
   11fcb:	48 c1 f8 03          	sar    $0x3,%rax
   11fcf:	5d                   	pop    %rbp
   11fd0:	c3                   	ret
   11fd1:	90                   	nop

0000000000011fd2 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   11fd2:	55                   	push   %rbp
   11fd3:	48 89 e5             	mov    %rsp,%rbp
   11fd6:	48 83 ec 10          	sub    $0x10,%rsp
   11fda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11fde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   11fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fe6:	48 89 c7             	mov    %rax,%rdi
   11fe9:	e8 72 18 00 00       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   11fee:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11ff2:	0f 92 c0             	setb   %al
   11ff5:	84 c0                	test   %al,%al
   11ff7:	74 24                	je     1201d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   11ff9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ffd:	48 89 c7             	mov    %rax,%rdi
   12000:	e8 5b 18 00 00       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12005:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12009:	48 29 c2             	sub    %rax,%rdx
   1200c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12010:	48 89 d6             	mov    %rdx,%rsi
   12013:	48 89 c7             	mov    %rax,%rdi
   12016:	e8 69 18 00 00       	call   13884 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
   1201b:	eb 38                	jmp    12055 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   1201d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12021:	48 89 c7             	mov    %rax,%rdi
   12024:	e8 37 18 00 00       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   12029:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   1202d:	0f 92 c0             	setb   %al
   12030:	84 c0                	test   %al,%al
   12032:	74 21                	je     12055 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   12034:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12038:	48 8b 00             	mov    (%rax),%rax
   1203b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1203f:	48 c1 e2 03          	shl    $0x3,%rdx
   12043:	48 01 c2             	add    %rax,%rdx
   12046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1204a:	48 89 d6             	mov    %rdx,%rsi
   1204d:	48 89 c7             	mov    %rax,%rdi
   12050:	e8 39 1a 00 00       	call   13a8e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   12055:	90                   	nop
   12056:	c9                   	leave
   12057:	c3                   	ret

0000000000012058 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12058:	55                   	push   %rbp
   12059:	48 89 e5             	mov    %rsp,%rbp
   1205c:	48 83 ec 10          	sub    $0x10,%rsp
   12060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12068:	48 89 c7             	mov    %rax,%rdi
   1206b:	e8 7e 1a 00 00       	call   13aee <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   12070:	90                   	nop
   12071:	c9                   	leave
   12072:	c3                   	ret
   12073:	90                   	nop

0000000000012074 <_ZNSaIP13VkImageView_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12074:	55                   	push   %rbp
   12075:	48 89 e5             	mov    %rsp,%rbp
   12078:	48 83 ec 10          	sub    $0x10,%rsp
   1207c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12084:	48 89 c7             	mov    %rax,%rdi
   12087:	e8 6e 1a 00 00       	call   13afa <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   1208c:	90                   	nop
   1208d:	c9                   	leave
   1208e:	c3                   	ret
   1208f:	90                   	nop

0000000000012090 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   12090:	55                   	push   %rbp
   12091:	48 89 e5             	mov    %rsp,%rbp
   12094:	53                   	push   %rbx
   12095:	48 83 ec 38          	sub    $0x38,%rsp
   12099:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1209d:	48 89 f0             	mov    %rsi,%rax
   120a0:	48 89 d6             	mov    %rdx,%rsi
   120a3:	48 89 f2             	mov    %rsi,%rdx
   120a6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   120aa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   120ae:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   120b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120b6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   120ba:	48 89 d6             	mov    %rdx,%rsi
   120bd:	48 89 c7             	mov    %rax,%rdi
   120c0:	e8 41 1a 00 00       	call   13b06 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   120c5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   120c9:	48 89 c7             	mov    %rax,%rdi
   120cc:	e8 6d 1a 00 00       	call   13b3e <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>
   120d1:	48 89 c3             	mov    %rax,%rbx
   120d4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   120d8:	48 89 c7             	mov    %rax,%rdi
   120db:	e8 4c 1a 00 00       	call   13b2c <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   120e0:	48 89 c1             	mov    %rax,%rcx
   120e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120e7:	48 89 da             	mov    %rbx,%rdx
   120ea:	48 89 ce             	mov    %rcx,%rsi
   120ed:	48 89 c7             	mov    %rax,%rdi
   120f0:	e8 af 1a 00 00       	call   13ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   120f5:	eb 1a                	jmp    12111 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   120f7:	48 89 c3             	mov    %rax,%rbx
   120fa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120fe:	48 89 c7             	mov    %rax,%rdi
   12101:	e8 f6 02 00 00       	call   123fc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   12106:	48 89 d8             	mov    %rbx,%rax
   12109:	48 89 c7             	mov    %rax,%rdi
   1210c:	e8 9f 26 ff ff       	call   47b0 <_Unwind_Resume@plt>
   12111:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12115:	c9                   	leave
   12116:	c3                   	ret
   12117:	90                   	nop

0000000000012118 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12118:	55                   	push   %rbp
   12119:	48 89 e5             	mov    %rsp,%rbp
   1211c:	48 83 ec 10          	sub    $0x10,%rsp
   12120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12128:	48 89 c7             	mov    %rax,%rdi
   1212b:	e8 24 1b 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12130:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   12133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12137:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1213b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1213f:	48 8b 00             	mov    (%rax),%rax
   12142:	48 89 ce             	mov    %rcx,%rsi
   12145:	48 89 c7             	mov    %rax,%rdi
   12148:	e8 15 1b 00 00       	call   13c62 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   1214d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12151:	48 89 c7             	mov    %rax,%rdi
   12154:	e8 a3 02 00 00       	call   123fc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   12159:	90                   	nop
   1215a:	c9                   	leave
   1215b:	c3                   	ret

000000000001215c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1215c:	55                   	push   %rbp
   1215d:	48 89 e5             	mov    %rsp,%rbp
   12160:	48 83 ec 10          	sub    $0x10,%rsp
   12164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216c:	48 8b 10             	mov    (%rax),%rdx
   1216f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12173:	48 89 d6             	mov    %rdx,%rsi
   12176:	48 89 c7             	mov    %rax,%rdi
   12179:	e8 0e 1b 00 00       	call   13c8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1217e:	c9                   	leave
   1217f:	c3                   	ret

0000000000012180 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   12180:	55                   	push   %rbp
   12181:	48 89 e5             	mov    %rsp,%rbp
   12184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12188:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1218c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12190:	48 8b 00             	mov    (%rax),%rax
   12193:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12197:	48 c1 e2 03          	shl    $0x3,%rdx
   1219b:	48 01 d0             	add    %rdx,%rax
      }
   1219e:	5d                   	pop    %rbp
   1219f:	c3                   	ret

00000000000121a0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   121a0:	55                   	push   %rbp
   121a1:	48 89 e5             	mov    %rsp,%rbp
   121a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   121ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b0:	48 8b 00             	mov    (%rax),%rax
   121b3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   121b7:	48 c1 e2 03          	shl    $0x3,%rdx
   121bb:	48 01 d0             	add    %rdx,%rax
      }
   121be:	5d                   	pop    %rbp
   121bf:	c3                   	ret

00000000000121c0 <_ZNSaIP13VkSemaphore_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   121c0:	55                   	push   %rbp
   121c1:	48 89 e5             	mov    %rsp,%rbp
   121c4:	48 83 ec 10          	sub    $0x10,%rsp
   121c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121d0:	48 89 c7             	mov    %rax,%rdi
   121d3:	e8 c6 1a 00 00       	call   13c9e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>
   121d8:	90                   	nop
   121d9:	c9                   	leave
   121da:	c3                   	ret
   121db:	90                   	nop

00000000000121dc <_ZNSaIP13VkSemaphore_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   121dc:	55                   	push   %rbp
   121dd:	48 89 e5             	mov    %rsp,%rbp
   121e0:	48 83 ec 10          	sub    $0x10,%rsp
   121e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121ec:	48 89 c7             	mov    %rax,%rdi
   121ef:	e8 b6 1a 00 00       	call   13caa <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
   121f4:	90                   	nop
   121f5:	c9                   	leave
   121f6:	c3                   	ret
   121f7:	90                   	nop

00000000000121f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   121f8:	55                   	push   %rbp
   121f9:	48 89 e5             	mov    %rsp,%rbp
   121fc:	53                   	push   %rbx
   121fd:	48 83 ec 38          	sub    $0x38,%rsp
   12201:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12205:	48 89 f0             	mov    %rsi,%rax
   12208:	48 89 d6             	mov    %rdx,%rsi
   1220b:	48 89 f2             	mov    %rsi,%rdx
   1220e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   12212:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12216:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   1221a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1221e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12222:	48 89 d6             	mov    %rdx,%rsi
   12225:	48 89 c7             	mov    %rax,%rdi
   12228:	e8 a5 1a 00 00       	call   13cd2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   1222d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12231:	48 89 c7             	mov    %rax,%rdi
   12234:	e8 1f 1b 00 00       	call   13d58 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>
   12239:	48 89 c3             	mov    %rax,%rbx
   1223c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12240:	48 89 c7             	mov    %rax,%rdi
   12243:	e8 fe 1a 00 00       	call   13d46 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   12248:	48 89 c1             	mov    %rax,%rcx
   1224b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1224f:	48 89 da             	mov    %rbx,%rdx
   12252:	48 89 ce             	mov    %rcx,%rsi
   12255:	48 89 c7             	mov    %rax,%rdi
   12258:	e8 61 1b 00 00       	call   13dbe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   1225d:	eb 1a                	jmp    12279 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   1225f:	48 89 c3             	mov    %rax,%rbx
   12262:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12266:	48 89 c7             	mov    %rax,%rdi
   12269:	e8 8a 1a 00 00       	call   13cf8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   1226e:	48 89 d8             	mov    %rbx,%rax
   12271:	48 89 c7             	mov    %rax,%rdi
   12274:	e8 37 25 ff ff       	call   47b0 <_Unwind_Resume@plt>
   12279:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1227d:	c9                   	leave
   1227e:	c3                   	ret
   1227f:	90                   	nop

0000000000012280 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12280:	55                   	push   %rbp
   12281:	48 89 e5             	mov    %rsp,%rbp
   12284:	48 83 ec 10          	sub    $0x10,%rsp
   12288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1228c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12290:	48 89 c7             	mov    %rax,%rdi
   12293:	e8 d6 1b 00 00       	call   13e6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12298:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1229b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1229f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   122a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a7:	48 8b 00             	mov    (%rax),%rax
   122aa:	48 89 ce             	mov    %rcx,%rsi
   122ad:	48 89 c7             	mov    %rax,%rdi
   122b0:	e8 c7 1b 00 00       	call   13e7c <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
   122b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122b9:	48 89 c7             	mov    %rax,%rdi
   122bc:	e8 37 1a 00 00       	call   13cf8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
   122c1:	90                   	nop
   122c2:	c9                   	leave
   122c3:	c3                   	ret

00000000000122c4 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   122c4:	55                   	push   %rbp
   122c5:	48 89 e5             	mov    %rsp,%rbp
   122c8:	48 83 ec 10          	sub    $0x10,%rsp
   122cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122d4:	48 89 c7             	mov    %rax,%rdi
   122d7:	e8 ca 1b 00 00       	call   13ea6 <_ZNSt15__new_allocatorIjEC1Ev>
   122dc:	90                   	nop
   122dd:	c9                   	leave
   122de:	c3                   	ret
   122df:	90                   	nop

00000000000122e0 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_>:
      vector(initializer_list<value_type> __l,
   122e0:	55                   	push   %rbp
   122e1:	48 89 e5             	mov    %rsp,%rbp
   122e4:	53                   	push   %rbx
   122e5:	48 83 ec 38          	sub    $0x38,%rsp
   122e9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   122ed:	48 89 f0             	mov    %rsi,%rax
   122f0:	48 89 d6             	mov    %rdx,%rsi
   122f3:	48 89 f2             	mov    %rsi,%rdx
   122f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   122fa:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   122fe:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   12302:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12306:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1230a:	48 89 d6             	mov    %rdx,%rsi
   1230d:	48 89 c7             	mov    %rax,%rdi
   12310:	e8 9d 1b 00 00       	call   13eb2 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
   12315:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12319:	48 89 c7             	mov    %rax,%rdi
   1231c:	e8 c9 1b 00 00       	call   13eea <_ZNKSt16initializer_listIjE3endEv>
   12321:	48 89 c3             	mov    %rax,%rbx
   12324:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12328:	48 89 c7             	mov    %rax,%rdi
   1232b:	e8 a8 1b 00 00       	call   13ed8 <_ZNKSt16initializer_listIjE5beginEv>
   12330:	48 89 c1             	mov    %rax,%rcx
   12333:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12337:	48 89 da             	mov    %rbx,%rdx
   1233a:	48 89 ce             	mov    %rcx,%rsi
   1233d:	48 89 c7             	mov    %rax,%rdi
   12340:	e8 0b 1c 00 00       	call   13f50 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>
      }
   12345:	eb 1a                	jmp    12361 <_ZNSt6vectorIjSaIjEEC1ESt16initializer_listIjERKS0_+0x81>
   12347:	48 89 c3             	mov    %rax,%rbx
   1234a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1234e:	48 89 c7             	mov    %rax,%rdi
   12351:	e8 e8 ee ff ff       	call   1123e <_ZNSt12_Vector_baseIjSaIjEED1Ev>
   12356:	48 89 d8             	mov    %rbx,%rax
   12359:	48 89 c7             	mov    %rax,%rdi
   1235c:	e8 4f 24 ff ff       	call   47b0 <_Unwind_Resume@plt>
   12361:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12365:	c9                   	leave
   12366:	c3                   	ret
   12367:	90                   	nop

0000000000012368 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12368:	55                   	push   %rbp
   12369:	48 89 e5             	mov    %rsp,%rbp
   1236c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   12370:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12374:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1237c:	48 8b 00             	mov    (%rax),%rax
   1237f:	48 29 c2             	sub    %rax,%rdx
   12382:	48 89 d0             	mov    %rdx,%rax
   12385:	48 c1 f8 03          	sar    $0x3,%rax
   12389:	5d                   	pop    %rbp
   1238a:	c3                   	ret
   1238b:	90                   	nop

000000000001238c <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   1238c:	55                   	push   %rbp
   1238d:	48 89 e5             	mov    %rsp,%rbp
   12390:	48 83 ec 10          	sub    $0x10,%rsp
   12394:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   12398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1239c:	48 8b 10             	mov    (%rax),%rdx
   1239f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123a3:	48 89 d6             	mov    %rdx,%rsi
   123a6:	48 89 c7             	mov    %rax,%rdi
   123a9:	e8 52 1c 00 00       	call   14000 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   123ae:	c9                   	leave
   123af:	c3                   	ret

00000000000123b0 <_ZNSt6vectorIjSaIjEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   123b0:	55                   	push   %rbp
   123b1:	48 89 e5             	mov    %rsp,%rbp
   123b4:	48 83 ec 10          	sub    $0x10,%rsp
   123b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   123bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c0:	48 8b 10             	mov    (%rax),%rdx
   123c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c7:	48 89 d6             	mov    %rdx,%rsi
   123ca:	48 89 c7             	mov    %rax,%rdi
   123cd:	e8 40 1c 00 00       	call   14012 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>
   123d2:	c9                   	leave
   123d3:	c3                   	ret

00000000000123d4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   123d4:	55                   	push   %rbp
   123d5:	48 89 e5             	mov    %rsp,%rbp
   123d8:	48 83 ec 10          	sub    $0x10,%rsp
   123dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   123e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e4:	48 89 c7             	mov    %rax,%rdi
   123e7:	e8 6c fc ff ff       	call   12058 <_ZNSaIP13VkImageView_TEC1Ev>
   123ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123f0:	48 89 c7             	mov    %rax,%rdi
   123f3:	e8 2c 1c 00 00       	call   14024 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   123f8:	90                   	nop
   123f9:	c9                   	leave
   123fa:	c3                   	ret
   123fb:	90                   	nop

00000000000123fc <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   123fc:	55                   	push   %rbp
   123fd:	48 89 e5             	mov    %rsp,%rbp
   12400:	48 83 ec 10          	sub    $0x10,%rsp
   12404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1240c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12414:	48 8b 00             	mov    (%rax),%rax
   12417:	48 29 c2             	sub    %rax,%rdx
   1241a:	48 89 d0             	mov    %rdx,%rax
   1241d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12421:	48 89 c2             	mov    %rax,%rdx
   12424:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12428:	48 8b 08             	mov    (%rax),%rcx
   1242b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1242f:	48 89 ce             	mov    %rcx,%rsi
   12432:	48 89 c7             	mov    %rax,%rdi
   12435:	e8 18 1c 00 00       	call   14052 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   1243a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1243e:	48 89 c7             	mov    %rax,%rdi
   12441:	e8 94 ec ff ff       	call   110da <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   12446:	90                   	nop
   12447:	c9                   	leave
   12448:	c3                   	ret
   12449:	90                   	nop

000000000001244a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   1244a:	55                   	push   %rbp
   1244b:	48 89 e5             	mov    %rsp,%rbp
   1244e:	48 83 ec 10          	sub    $0x10,%rsp
   12452:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   12456:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1245a:	48 89 c7             	mov    %rax,%rdi
   1245d:	e8 c4 68 ff ff       	call   8d26 <_ZNSaIP9VkImage_TEC1Ev>
   12462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12466:	48 89 c7             	mov    %rax,%rdi
   12469:	e8 54 8e ff ff       	call   b2c2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1246e:	90                   	nop
   1246f:	c9                   	leave
   12470:	c3                   	ret
   12471:	90                   	nop

0000000000012472 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   12472:	55                   	push   %rbp
   12473:	48 89 e5             	mov    %rsp,%rbp
   12476:	48 83 ec 10          	sub    $0x10,%rsp
   1247a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1247e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12482:	48 89 c7             	mov    %rax,%rdi
   12485:	e8 fe 1b 00 00       	call   14088 <_ZNSaIP15VkFramebuffer_TEC1Ev>
   1248a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1248e:	48 89 c7             	mov    %rax,%rdi
   12491:	e8 0e 1c 00 00       	call   140a4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   12496:	90                   	nop
   12497:	c9                   	leave
   12498:	c3                   	ret
   12499:	90                   	nop

000000000001249a <_ZNSaIP15VkFramebuffer_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   1249a:	55                   	push   %rbp
   1249b:	48 89 e5             	mov    %rsp,%rbp
   1249e:	48 83 ec 10          	sub    $0x10,%rsp
   124a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124aa:	48 89 c7             	mov    %rax,%rdi
   124ad:	e8 20 1c 00 00       	call   140d2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
   124b2:	90                   	nop
   124b3:	c9                   	leave
   124b4:	c3                   	ret
   124b5:	90                   	nop

00000000000124b6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   124b6:	55                   	push   %rbp
   124b7:	48 89 e5             	mov    %rsp,%rbp
   124ba:	48 83 ec 10          	sub    $0x10,%rsp
   124be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   124c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   124ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124ce:	48 8b 00             	mov    (%rax),%rax
   124d1:	48 29 c2             	sub    %rax,%rdx
   124d4:	48 89 d0             	mov    %rdx,%rax
   124d7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   124db:	48 89 c2             	mov    %rax,%rdx
   124de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e2:	48 8b 08             	mov    (%rax),%rcx
   124e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e9:	48 89 ce             	mov    %rcx,%rsi
   124ec:	48 89 c7             	mov    %rax,%rdi
   124ef:	e8 ea 1b 00 00       	call   140de <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   124f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f8:	48 89 c7             	mov    %rax,%rdi
   124fb:	e8 a0 ec ff ff       	call   111a0 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
   12500:	90                   	nop
   12501:	c9                   	leave
   12502:	c3                   	ret
   12503:	90                   	nop

0000000000012504 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   12504:	55                   	push   %rbp
   12505:	48 89 e5             	mov    %rsp,%rbp
   12508:	48 83 ec 10          	sub    $0x10,%rsp
   1250c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   12510:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12514:	48 89 c7             	mov    %rax,%rdi
   12517:	e8 f8 1b 00 00       	call   14114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1251c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1251f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12523:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1252b:	48 8b 00             	mov    (%rax),%rax
   1252e:	48 89 ce             	mov    %rcx,%rsi
   12531:	48 89 c7             	mov    %rax,%rdi
   12534:	e8 e9 1b 00 00       	call   14122 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
   12539:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1253d:	48 89 c7             	mov    %rax,%rdi
   12540:	e8 71 ff ff ff       	call   124b6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
   12545:	90                   	nop
   12546:	c9                   	leave
   12547:	c3                   	ret

0000000000012548 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12548:	55                   	push   %rbp
   12549:	48 89 e5             	mov    %rsp,%rbp
   1254c:	48 83 ec 20          	sub    $0x20,%rsp
   12550:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12554:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12558:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1255c:	48 89 d6             	mov    %rdx,%rsi
   1255f:	48 89 c7             	mov    %rax,%rdi
   12562:	e8 e5 1b 00 00       	call   1414c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1256b:	c9                   	leave
   1256c:	c3                   	ret
   1256d:	90                   	nop

000000000001256e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1256e:	55                   	push   %rbp
   1256f:	48 89 e5             	mov    %rsp,%rbp
   12572:	48 83 ec 20          	sub    $0x20,%rsp
   12576:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1257a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1257e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12582:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12586:	48 89 d6             	mov    %rdx,%rsi
   12589:	48 89 c7             	mov    %rax,%rdi
   1258c:	e8 bb 1b 00 00       	call   1414c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12595:	c9                   	leave
   12596:	c3                   	ret

0000000000012597 <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12597:	55                   	push   %rbp
   12598:	48 89 e5             	mov    %rsp,%rbp
   1259b:	53                   	push   %rbx
   1259c:	48 83 ec 18          	sub    $0x18,%rsp
   125a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   125a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   125a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   125ac:	48 89 c7             	mov    %rax,%rdi
   125af:	e8 b6 1b 00 00       	call   1416a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   125b4:	48 8b 18             	mov    (%rax),%rbx
   125b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   125bb:	48 89 c7             	mov    %rax,%rdi
   125be:	e8 a7 1b 00 00       	call   1416a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
   125c3:	48 8b 00             	mov    (%rax),%rax
   125c6:	48 39 c3             	cmp    %rax,%rbx
   125c9:	0f 95 c0             	setne  %al
   125cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   125d0:	c9                   	leave
   125d1:	c3                   	ret

00000000000125d2 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   125d2:	55                   	push   %rbp
   125d3:	48 89 e5             	mov    %rsp,%rbp
   125d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   125da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125de:	48 8b 00             	mov    (%rax),%rax
   125e1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   125e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125e9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   125ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   125f0:	5d                   	pop    %rbp
   125f1:	c3                   	ret

00000000000125f2 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   125f2:	55                   	push   %rbp
   125f3:	48 89 e5             	mov    %rsp,%rbp
   125f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   125fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125fe:	48 8b 00             	mov    (%rax),%rax
   12601:	5d                   	pop    %rbp
   12602:	c3                   	ret
   12603:	90                   	nop

0000000000012604 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12604:	55                   	push   %rbp
   12605:	48 89 e5             	mov    %rsp,%rbp
   12608:	48 83 ec 20          	sub    $0x20,%rsp
   1260c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12610:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12614:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12618:	48 89 d6             	mov    %rdx,%rsi
   1261b:	48 89 c7             	mov    %rax,%rdi
   1261e:	e8 55 1b 00 00       	call   14178 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12627:	c9                   	leave
   12628:	c3                   	ret
   12629:	90                   	nop

000000000001262a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1262a:	55                   	push   %rbp
   1262b:	48 89 e5             	mov    %rsp,%rbp
   1262e:	48 83 ec 20          	sub    $0x20,%rsp
   12632:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   12636:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1263a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1263e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12642:	48 89 d6             	mov    %rdx,%rsi
   12645:	48 89 c7             	mov    %rax,%rdi
   12648:	e8 2b 1b 00 00       	call   14178 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1264d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12651:	c9                   	leave
   12652:	c3                   	ret

0000000000012653 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12653:	55                   	push   %rbp
   12654:	48 89 e5             	mov    %rsp,%rbp
   12657:	53                   	push   %rbx
   12658:	48 83 ec 18          	sub    $0x18,%rsp
   1265c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12660:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   12664:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12668:	48 89 c7             	mov    %rax,%rdi
   1266b:	e8 26 1b 00 00       	call   14196 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   12670:	48 8b 18             	mov    (%rax),%rbx
   12673:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12677:	48 89 c7             	mov    %rax,%rdi
   1267a:	e8 17 1b 00 00       	call   14196 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1267f:	48 8b 00             	mov    (%rax),%rax
   12682:	48 39 c3             	cmp    %rax,%rbx
   12685:	0f 95 c0             	setne  %al
   12688:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1268c:	c9                   	leave
   1268d:	c3                   	ret

000000000001268e <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1268e:	55                   	push   %rbp
   1268f:	48 89 e5             	mov    %rsp,%rbp
   12692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   12696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1269a:	48 8b 00             	mov    (%rax),%rax
   1269d:	48 8d 50 08          	lea    0x8(%rax),%rdx
   126a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126a5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   126a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   126ac:	5d                   	pop    %rbp
   126ad:	c3                   	ret

00000000000126ae <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   126ae:	55                   	push   %rbp
   126af:	48 89 e5             	mov    %rsp,%rbp
   126b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   126b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126ba:	48 8b 00             	mov    (%rax),%rax
   126bd:	5d                   	pop    %rbp
   126be:	c3                   	ret

00000000000126bf <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   126bf:	55                   	push   %rbp
   126c0:	48 89 e5             	mov    %rsp,%rbp
   126c3:	48 83 ec 20          	sub    $0x20,%rsp
   126c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   126cf:	89 d0                	mov    %edx,%eax
   126d1:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   126d4:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   126d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126dc:	be 01 00 00 00       	mov    $0x1,%esi
   126e1:	48 89 c7             	mov    %rax,%rdi
   126e4:	e8 87 1d ff ff       	call   4470 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   126e9:	48 89 c7             	mov    %rax,%rdi
   126ec:	e8 d4 00 00 00       	call   127c5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   126f1:	48 89 c2             	mov    %rax,%rdx
   126f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126f8:	48 89 d6             	mov    %rdx,%rsi
   126fb:	48 89 c7             	mov    %rax,%rdi
   126fe:	e8 0d 1b ff ff       	call   4210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   12703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12707:	c9                   	leave
   12708:	c3                   	ret
   12709:	90                   	nop

000000000001270a <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   1270a:	55                   	push   %rbp
   1270b:	48 89 e5             	mov    %rsp,%rbp
   1270e:	48 83 ec 20          	sub    $0x20,%rsp
   12712:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   12716:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1271a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1271e:	48 89 d6             	mov    %rdx,%rsi
   12721:	48 89 c7             	mov    %rax,%rdi
   12724:	e8 7b 1a 00 00       	call   141a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   12729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1272d:	c9                   	leave
   1272e:	c3                   	ret
   1272f:	90                   	nop

0000000000012730 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   12730:	55                   	push   %rbp
   12731:	48 89 e5             	mov    %rsp,%rbp
   12734:	48 83 ec 20          	sub    $0x20,%rsp
   12738:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   1273c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12740:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12744:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12748:	48 89 d6             	mov    %rdx,%rsi
   1274b:	48 89 c7             	mov    %rax,%rdi
   1274e:	e8 51 1a 00 00       	call   141a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   12753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12757:	c9                   	leave
   12758:	c3                   	ret

0000000000012759 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   12759:	55                   	push   %rbp
   1275a:	48 89 e5             	mov    %rsp,%rbp
   1275d:	53                   	push   %rbx
   1275e:	48 83 ec 18          	sub    $0x18,%rsp
   12762:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12766:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1276a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1276e:	48 89 c7             	mov    %rax,%rdi
   12771:	e8 4c 1a 00 00       	call   141c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12776:	48 8b 18             	mov    (%rax),%rbx
   12779:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1277d:	48 89 c7             	mov    %rax,%rdi
   12780:	e8 3d 1a 00 00       	call   141c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12785:	48 8b 00             	mov    (%rax),%rax
   12788:	48 39 c3             	cmp    %rax,%rbx
   1278b:	0f 95 c0             	setne  %al
   1278e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12792:	c9                   	leave
   12793:	c3                   	ret

0000000000012794 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   12794:	55                   	push   %rbp
   12795:	48 89 e5             	mov    %rsp,%rbp
   12798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   1279c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a0:	48 8b 00             	mov    (%rax),%rax
   127a3:	48 8d 50 08          	lea    0x8(%rax),%rdx
   127a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127ab:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   127ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   127b2:	5d                   	pop    %rbp
   127b3:	c3                   	ret

00000000000127b4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   127b4:	55                   	push   %rbp
   127b5:	48 89 e5             	mov    %rsp,%rbp
   127b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   127bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127c0:	48 8b 00             	mov    (%rax),%rax
   127c3:	5d                   	pop    %rbp
   127c4:	c3                   	ret

00000000000127c5 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   127c5:	55                   	push   %rbp
   127c6:	48 89 e5             	mov    %rsp,%rbp
   127c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   127cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127d1:	5d                   	pop    %rbp
   127d2:	c3                   	ret
   127d3:	90                   	nop

00000000000127d4 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   127d4:	55                   	push   %rbp
   127d5:	48 89 e5             	mov    %rsp,%rbp
   127d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   127dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   127e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127eb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   127f2:	00 
   127f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127f7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   127fe:	00 
	{ }
   127ff:	90                   	nop
   12800:	5d                   	pop    %rbp
   12801:	c3                   	ret

0000000000012802 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12802:	55                   	push   %rbp
   12803:	48 89 e5             	mov    %rsp,%rbp
   12806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1280a:	90                   	nop
   1280b:	5d                   	pop    %rbp
   1280c:	c3                   	ret
   1280d:	90                   	nop

000000000001280e <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm>:
      _M_deallocate(pointer __p, size_t __n)
   1280e:	55                   	push   %rbp
   1280f:	48 89 e5             	mov    %rsp,%rbp
   12812:	48 83 ec 20          	sub    $0x20,%rsp
   12816:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1281a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1281e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   12822:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12827:	74 17                	je     12840 <_ZNSt12_Vector_baseIjSaIjEE13_M_deallocateEPjm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   12829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1282d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12831:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12835:	48 89 ce             	mov    %rcx,%rsi
   12838:	48 89 c7             	mov    %rax,%rdi
   1283b:	e8 90 19 00 00       	call   141d0 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>
      }
   12840:	90                   	nop
   12841:	c9                   	leave
   12842:	c3                   	ret
   12843:	90                   	nop

0000000000012844 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12844:	55                   	push   %rbp
   12845:	48 89 e5             	mov    %rsp,%rbp
   12848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1284c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12850:	5d                   	pop    %rbp
   12851:	c3                   	ret

0000000000012852 <_ZSt8_DestroyIPjjEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12852:	55                   	push   %rbp
   12853:	48 89 e5             	mov    %rsp,%rbp
   12856:	48 83 ec 20          	sub    $0x20,%rsp
   1285a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1285e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12862:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12866:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1286a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1286e:	48 89 d6             	mov    %rdx,%rsi
   12871:	48 89 c7             	mov    %rax,%rdi
   12874:	e8 85 19 00 00       	call   141fe <_ZSt8_DestroyIPjEvT_S1_>
    }
   12879:	90                   	nop
   1287a:	c9                   	leave
   1287b:	c3                   	ret

000000000001287c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1287c:	55                   	push   %rbp
   1287d:	48 89 e5             	mov    %rsp,%rbp
   12880:	48 83 ec 10          	sub    $0x10,%rsp
   12884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12888:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   1288c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12890:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12894:	48 89 d6             	mov    %rdx,%rsi
   12897:	48 89 c7             	mov    %rax,%rdi
   1289a:	e8 03 79 ff ff       	call   a1a2 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   1289f:	90                   	nop
   128a0:	c9                   	leave
   128a1:	c3                   	ret

00000000000128a2 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   128a2:	55                   	push   %rbp
   128a3:	48 89 e5             	mov    %rsp,%rbp
   128a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128ae:	48 8b 00             	mov    (%rax),%rax
   128b1:	5d                   	pop    %rbp
   128b2:	c3                   	ret
   128b3:	90                   	nop

00000000000128b4 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   128b4:	55                   	push   %rbp
   128b5:	48 89 e5             	mov    %rsp,%rbp
   128b8:	53                   	push   %rbx
   128b9:	48 83 ec 18          	sub    $0x18,%rsp
   128bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   128c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128c5:	48 89 c7             	mov    %rax,%rdi
   128c8:	e8 d5 ff ff ff       	call   128a2 <_ZNKSt16initializer_listIPKcE5beginEv>
   128cd:	48 89 c3             	mov    %rax,%rbx
   128d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128d4:	48 89 c7             	mov    %rax,%rdi
   128d7:	e8 48 19 00 00       	call   14224 <_ZNKSt16initializer_listIPKcE4sizeEv>
   128dc:	48 c1 e0 03          	shl    $0x3,%rax
   128e0:	48 01 d8             	add    %rbx,%rax
   128e3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   128e7:	c9                   	leave
   128e8:	c3                   	ret

00000000000128e9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   128e9:	55                   	push   %rbp
   128ea:	48 89 e5             	mov    %rsp,%rbp
   128ed:	48 83 ec 10          	sub    $0x10,%rsp
   128f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   128f9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   128fd:	48 89 c7             	mov    %rax,%rdi
   12900:	e8 31 19 00 00       	call   14236 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   12905:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12909:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1290d:	48 89 d6             	mov    %rdx,%rsi
   12910:	48 89 c7             	mov    %rax,%rdi
   12913:	e8 29 19 00 00       	call   14241 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   12918:	c9                   	leave
   12919:	c3                   	ret

000000000001291a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1291a:	55                   	push   %rbp
   1291b:	48 89 e5             	mov    %rsp,%rbp
   1291e:	53                   	push   %rbx
   1291f:	48 83 ec 38          	sub    $0x38,%rsp
   12923:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12927:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1292b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   1292f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12933:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12937:	48 89 d6             	mov    %rdx,%rsi
   1293a:	48 89 c7             	mov    %rax,%rdi
   1293d:	e8 a7 ff ff ff       	call   128e9 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   12942:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12946:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1294a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1294e:	48 89 c7             	mov    %rax,%rdi
   12951:	e8 c2 69 ff ff       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12956:	48 89 c2             	mov    %rax,%rdx
   12959:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1295d:	48 89 d6             	mov    %rdx,%rsi
   12960:	48 89 c7             	mov    %rax,%rdi
   12963:	e8 b1 68 ff ff       	call   9219 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   12968:	48 89 c6             	mov    %rax,%rsi
   1296b:	48 89 df             	mov    %rbx,%rdi
   1296e:	e8 bb 83 ff ff       	call   ad2e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   12973:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12977:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1297a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1297e:	48 8b 00             	mov    (%rax),%rax
   12981:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12985:	48 c1 e2 03          	shl    $0x3,%rdx
   12989:	48 01 c2             	add    %rax,%rdx
   1298c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12990:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   12994:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12998:	48 89 c7             	mov    %rax,%rdi
   1299b:	e8 78 69 ff ff       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   129a0:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   129a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129a7:	48 8b 10             	mov    (%rax),%rdx
   129aa:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   129ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   129b2:	48 89 c7             	mov    %rax,%rdi
   129b5:	e8 a1 18 00 00       	call   1425b <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   129ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   129be:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   129c2:	90                   	nop
   129c3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   129c7:	c9                   	leave
   129c8:	c3                   	ret

00000000000129c9 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   129c9:	55                   	push   %rbp
   129ca:	48 89 e5             	mov    %rsp,%rbp
   129cd:	48 83 ec 20          	sub    $0x20,%rsp
   129d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129d5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   129d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   129dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   129e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129e5:	48 89 d6             	mov    %rdx,%rsi
   129e8:	48 89 c7             	mov    %rax,%rdi
   129eb:	e8 9c 18 00 00       	call   1428c <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   129f0:	90                   	nop
   129f1:	c9                   	leave
   129f2:	c3                   	ret
   129f3:	90                   	nop

00000000000129f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   129f4:	55                   	push   %rbp
   129f5:	48 89 e5             	mov    %rsp,%rbp
   129f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12a00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a04:	48 8b 10             	mov    (%rax),%rdx
   12a07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a0b:	48 89 10             	mov    %rdx,(%rax)
   12a0e:	90                   	nop
   12a0f:	5d                   	pop    %rbp
   12a10:	c3                   	ret
   12a11:	90                   	nop

0000000000012a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12a12:	55                   	push   %rbp
   12a13:	48 89 e5             	mov    %rsp,%rbp
   12a16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12a1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a1e:	5d                   	pop    %rbp
   12a1f:	c3                   	ret

0000000000012a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12a20:	55                   	push   %rbp
   12a21:	48 89 e5             	mov    %rsp,%rbp
   12a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a2c:	5d                   	pop    %rbp
   12a2d:	c3                   	ret

0000000000012a2e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   12a2e:	55                   	push   %rbp
   12a2f:	48 89 e5             	mov    %rsp,%rbp
   12a32:	48 83 ec 20          	sub    $0x20,%rsp
   12a36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12a3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   12a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a46:	48 89 c7             	mov    %rax,%rdi
   12a49:	e8 d2 ff ff ff       	call   12a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12a4e:	48 89 c2             	mov    %rax,%rdx
   12a51:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a59:	48 89 ce             	mov    %rcx,%rsi
   12a5c:	48 89 c7             	mov    %rax,%rdi
   12a5f:	e8 4e 18 00 00       	call   142b2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   12a64:	90                   	nop
   12a65:	c9                   	leave
   12a66:	c3                   	ret
   12a67:	90                   	nop

0000000000012a68 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   12a68:	55                   	push   %rbp
   12a69:	48 89 e5             	mov    %rsp,%rbp
   12a6c:	53                   	push   %rbx
   12a6d:	48 83 ec 68          	sub    $0x68,%rsp
   12a71:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   12a75:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   12a79:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   12a7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12a81:	48 8d 15 66 a3 00 00 	lea    0xa366(%rip),%rdx        # 1cdee <_ZZN9VulkanApp6renderEvE11submitCount+0x26e>
   12a88:	be 01 00 00 00       	mov    $0x1,%esi
   12a8d:	48 89 c7             	mov    %rax,%rdi
   12a90:	e8 5f 18 00 00       	call   142f4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   12a95:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   12a99:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12a9d:	48 8b 00             	mov    (%rax),%rax
   12aa0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   12aa4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12aa8:	48 8b 40 08          	mov    0x8(%rax),%rax
   12aac:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   12ab0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12ab4:	48 89 c7             	mov    %rax,%rdi
   12ab7:	e8 e0 e8 ff ff       	call   1139c <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   12abc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   12ac0:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   12ac4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12ac8:	48 89 d6             	mov    %rdx,%rsi
   12acb:	48 89 c7             	mov    %rax,%rdi
   12ace:	e8 e9 18 00 00       	call   143bc <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   12ad3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   12ad7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12adb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12adf:	48 89 d6             	mov    %rdx,%rsi
   12ae2:	48 89 c7             	mov    %rax,%rdi
   12ae5:	e8 44 82 ff ff       	call   ad2e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   12aea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   12aee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12af2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   12af6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12afa:	48 89 c7             	mov    %rax,%rdi
   12afd:	e8 1e ff ff ff       	call   12a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12b02:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   12b05:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12b09:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   12b10:	00 
	  _Alloc_traits::construct(this->_M_impl,
   12b11:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12b15:	48 01 c1             	add    %rax,%rcx
   12b18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b1c:	48 89 ce             	mov    %rcx,%rsi
   12b1f:	48 89 c7             	mov    %rax,%rdi
   12b22:	e8 07 ff ff ff       	call   12a2e <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   12b27:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   12b2e:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   12b2f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b33:	48 89 c7             	mov    %rax,%rdi
   12b36:	e8 dd 67 ff ff       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12b3b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   12b3e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12b42:	48 89 c7             	mov    %rax,%rdi
   12b45:	e8 c8 fe ff ff       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12b4a:	48 8b 30             	mov    (%rax),%rsi
   12b4d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12b51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b55:	48 89 d9             	mov    %rbx,%rcx
   12b58:	48 89 c7             	mov    %rax,%rdi
   12b5b:	e8 9e 18 00 00       	call   143fe <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   12b60:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   12b64:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   12b69:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12b6d:	48 89 c7             	mov    %rax,%rdi
   12b70:	e8 a3 67 ff ff       	call   9318 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   12b75:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   12b78:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   12b7c:	48 89 c7             	mov    %rax,%rdi
   12b7f:	e8 8e fe ff ff       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12b84:	48 8b 00             	mov    (%rax),%rax
   12b87:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12b8b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   12b8f:	48 89 d9             	mov    %rbx,%rcx
   12b92:	48 89 c7             	mov    %rax,%rdi
   12b95:	e8 64 18 00 00       	call   143fe <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   12b9a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   12b9e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   12ba2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   12ba6:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   12baa:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   12bae:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   12bb2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12bb6:	48 89 ce             	mov    %rcx,%rsi
   12bb9:	48 89 c7             	mov    %rax,%rdi
   12bbc:	e8 8b 67 ff ff       	call   934c <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   12bc1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12bc5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12bc9:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   12bcc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12bd0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   12bd4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   12bd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bdc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12be3:	00 
   12be4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12be8:	48 01 c2             	add    %rax,%rdx
   12beb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12bef:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12bf3:	90                   	nop
   12bf4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12bf8:	c9                   	leave
   12bf9:	c3                   	ret

0000000000012bfa <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   12bfa:	55                   	push   %rbp
   12bfb:	48 89 e5             	mov    %rsp,%rbp
   12bfe:	48 83 ec 20          	sub    $0x20,%rsp
   12c02:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   12c06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c0a:	48 89 c7             	mov    %rax,%rdi
   12c0d:	e8 b0 e7 ff ff       	call   113c2 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   12c12:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12c16:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12c1a:	be 01 00 00 00       	mov    $0x1,%esi
   12c1f:	48 89 c7             	mov    %rax,%rdi
   12c22:	e8 09 18 00 00       	call   14430 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   12c27:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   12c2b:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   12c2f:	48 89 c7             	mov    %rax,%rdi
   12c32:	e8 0f e8 ff ff       	call   11446 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   12c37:	c9                   	leave
   12c38:	c3                   	ret
   12c39:	90                   	nop

0000000000012c3a <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   12c3a:	55                   	push   %rbp
   12c3b:	48 89 e5             	mov    %rsp,%rbp
   12c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   12c46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c4a:	5d                   	pop    %rbp
   12c4b:	c3                   	ret

0000000000012c4c <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c4c:	55                   	push   %rbp
   12c4d:	48 89 e5             	mov    %rsp,%rbp
   12c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c58:	5d                   	pop    %rbp
   12c59:	c3                   	ret

0000000000012c5a <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c5a:	55                   	push   %rbp
   12c5b:	48 89 e5             	mov    %rsp,%rbp
   12c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c66:	5d                   	pop    %rbp
   12c67:	c3                   	ret

0000000000012c68 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c68:	55                   	push   %rbp
   12c69:	48 89 e5             	mov    %rsp,%rbp
   12c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c74:	5d                   	pop    %rbp
   12c75:	c3                   	ret

0000000000012c76 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   12c76:	55                   	push   %rbp
   12c77:	48 89 e5             	mov    %rsp,%rbp
   12c7a:	48 83 ec 20          	sub    $0x20,%rsp
   12c7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c82:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   12c86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c8a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c8e:	48 89 d6             	mov    %rdx,%rsi
   12c91:	48 89 c7             	mov    %rax,%rdi
   12c94:	e8 d9 17 00 00       	call   14472 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   12c99:	90                   	nop
   12c9a:	c9                   	leave
   12c9b:	c3                   	ret

0000000000012c9c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   12c9c:	55                   	push   %rbp
   12c9d:	48 89 e5             	mov    %rsp,%rbp
   12ca0:	53                   	push   %rbx
   12ca1:	48 83 ec 18          	sub    $0x18,%rsp
   12ca5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ca9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   12cad:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12cb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12cb5:	48 89 c7             	mov    %rax,%rdi
   12cb8:	e8 ab ff ff ff       	call   12c68 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12cbd:	48 89 c6             	mov    %rax,%rsi
   12cc0:	48 89 df             	mov    %rbx,%rdi
   12cc3:	e8 ae ff ff ff       	call   12c76 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   12cc8:	90                   	nop
   12cc9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ccd:	c9                   	leave
   12cce:	c3                   	ret
   12ccf:	90                   	nop

0000000000012cd0 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12cd0:	55                   	push   %rbp
   12cd1:	48 89 e5             	mov    %rsp,%rbp
   12cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12cd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12cdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ce0:	48 8b 10             	mov    (%rax),%rdx
   12ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ce7:	48 89 10             	mov    %rdx,(%rax)
   12cea:	90                   	nop
   12ceb:	5d                   	pop    %rbp
   12cec:	c3                   	ret
   12ced:	90                   	nop

0000000000012cee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12cee:	55                   	push   %rbp
   12cef:	48 89 e5             	mov    %rsp,%rbp
   12cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cfa:	5d                   	pop    %rbp
   12cfb:	c3                   	ret

0000000000012cfc <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   12cfc:	55                   	push   %rbp
   12cfd:	48 89 e5             	mov    %rsp,%rbp
   12d00:	53                   	push   %rbx
   12d01:	48 83 ec 18          	sub    $0x18,%rsp
   12d05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   12d0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d11:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12d15:	84 c0                	test   %al,%al
   12d17:	74 35                	je     12d4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   12d19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d1d:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12d21:	84 c0                	test   %al,%al
   12d23:	74 29                	je     12d4e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   12d25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d29:	48 89 c7             	mov    %rax,%rdi
   12d2c:	e8 7d 17 00 00       	call   144ae <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   12d31:	48 89 c3             	mov    %rax,%rbx
   12d34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d38:	48 89 c7             	mov    %rax,%rdi
   12d3b:	e8 4e 00 00 00       	call   12d8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   12d40:	48 89 de             	mov    %rbx,%rsi
   12d43:	48 89 c7             	mov    %rax,%rdi
   12d46:	e8 71 17 00 00       	call   144bc <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   12d4b:	90                   	nop
      }
   12d4c:	eb 38                	jmp    12d86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   12d4e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d52:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12d56:	84 c0                	test   %al,%al
   12d58:	74 20                	je     12d7a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   12d5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d5e:	48 89 c7             	mov    %rax,%rdi
   12d61:	e8 48 17 00 00       	call   144ae <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   12d66:	48 89 c2             	mov    %rax,%rdx
   12d69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d6d:	48 89 d6             	mov    %rdx,%rsi
   12d70:	48 89 c7             	mov    %rax,%rdi
   12d73:	e8 82 17 00 00       	call   144fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   12d78:	eb 0c                	jmp    12d86 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   12d7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12d7e:	48 89 c7             	mov    %rax,%rdi
   12d81:	e8 ba 17 00 00       	call   14540 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   12d86:	90                   	nop
   12d87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d8b:	c9                   	leave
   12d8c:	c3                   	ret
   12d8d:	90                   	nop

0000000000012d8e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   12d8e:	55                   	push   %rbp
   12d8f:	48 89 e5             	mov    %rsp,%rbp
   12d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   12d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d9a:	5d                   	pop    %rbp
   12d9b:	c3                   	ret

0000000000012d9c <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12d9c:	55                   	push   %rbp
   12d9d:	48 89 e5             	mov    %rsp,%rbp
   12da0:	48 83 ec 10          	sub    $0x10,%rsp
   12da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dac:	48 89 c7             	mov    %rax,%rdi
   12daf:	e8 b4 17 00 00       	call   14568 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   12db4:	90                   	nop
   12db5:	c9                   	leave
   12db6:	c3                   	ret
   12db7:	90                   	nop

0000000000012db8 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   12db8:	55                   	push   %rbp
   12db9:	48 89 e5             	mov    %rsp,%rbp
   12dbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   12dc0:	90                   	nop
   12dc1:	5d                   	pop    %rbp
   12dc2:	c3                   	ret
   12dc3:	90                   	nop

0000000000012dc4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
   12dc4:	55                   	push   %rbp
   12dc5:	48 89 e5             	mov    %rsp,%rbp
   12dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12dcc:	90                   	nop
   12dcd:	5d                   	pop    %rbp
   12dce:	c3                   	ret
   12dcf:	90                   	nop

0000000000012dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12dd0:	55                   	push   %rbp
   12dd1:	48 89 e5             	mov    %rsp,%rbp
   12dd4:	48 83 ec 20          	sub    $0x20,%rsp
   12dd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12ddc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   12de0:	eb 49                	jmp    12e2b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   12de2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12de6:	48 89 c7             	mov    %rax,%rdi
   12de9:	e8 85 17 00 00       	call   14573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12dee:	48 89 c2             	mov    %rax,%rdx
   12df1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12df5:	48 89 d6             	mov    %rdx,%rsi
   12df8:	48 89 c7             	mov    %rax,%rdi
   12dfb:	e8 d0 ff ff ff       	call   12dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   12e00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12e04:	48 89 c7             	mov    %rax,%rdi
   12e07:	e8 79 17 00 00       	call   14585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   12e0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   12e10:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12e14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12e18:	48 89 d6             	mov    %rdx,%rsi
   12e1b:	48 89 c7             	mov    %rax,%rdi
   12e1e:	e8 75 17 00 00       	call   14598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   12e23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   12e2b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   12e30:	75 b0                	jne    12de2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   12e32:	90                   	nop
   12e33:	90                   	nop
   12e34:	c9                   	leave
   12e35:	c3                   	ret

0000000000012e36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   12e36:	55                   	push   %rbp
   12e37:	48 89 e5             	mov    %rsp,%rbp
   12e3a:	48 83 ec 10          	sub    $0x10,%rsp
   12e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   12e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e46:	48 89 c7             	mov    %rax,%rdi
   12e49:	e8 84 17 00 00       	call   145d2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   12e4e:	c9                   	leave
   12e4f:	c3                   	ret

0000000000012e50 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12e50:	55                   	push   %rbp
   12e51:	48 89 e5             	mov    %rsp,%rbp
   12e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12e5c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e60:	48 8b 10             	mov    (%rax),%rdx
   12e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e67:	48 89 10             	mov    %rdx,(%rax)
   12e6a:	90                   	nop
   12e6b:	5d                   	pop    %rbp
   12e6c:	c3                   	ret
   12e6d:	90                   	nop

0000000000012e6e <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12e6e:	55                   	push   %rbp
   12e6f:	48 89 e5             	mov    %rsp,%rbp
   12e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e7a:	5d                   	pop    %rbp
   12e7b:	c3                   	ret

0000000000012e7c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   12e7c:	55                   	push   %rbp
   12e7d:	48 89 e5             	mov    %rsp,%rbp
   12e80:	48 83 ec 10          	sub    $0x10,%rsp
   12e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   12e8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12e94:	48 89 d6             	mov    %rdx,%rsi
   12e97:	48 89 c7             	mov    %rax,%rdi
   12e9a:	e8 45 17 00 00       	call   145e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   12e9f:	c9                   	leave
   12ea0:	c3                   	ret
   12ea1:	90                   	nop

0000000000012ea2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12ea2:	55                   	push   %rbp
   12ea3:	48 89 e5             	mov    %rsp,%rbp
   12ea6:	48 83 ec 10          	sub    $0x10,%rsp
   12eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   12eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eb2:	48 89 c7             	mov    %rax,%rdi
   12eb5:	e8 76 17 00 00       	call   14630 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   12eba:	c9                   	leave
   12ebb:	c3                   	ret

0000000000012ebc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   12ebc:	55                   	push   %rbp
   12ebd:	48 89 e5             	mov    %rsp,%rbp
   12ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ec4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   12ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ecc:	48 8b 10             	mov    (%rax),%rdx
   12ecf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ed3:	48 8b 00             	mov    (%rax),%rax
   12ed6:	48 39 c2             	cmp    %rax,%rdx
   12ed9:	0f 94 c0             	sete   %al
   12edc:	5d                   	pop    %rbp
   12edd:	c3                   	ret

0000000000012ede <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   12ede:	55                   	push   %rbp
   12edf:	48 89 e5             	mov    %rsp,%rbp
   12ee2:	48 83 ec 10          	sub    $0x10,%rsp
   12ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   12eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12eee:	48 89 c7             	mov    %rax,%rdi
   12ef1:	e8 64 17 00 00       	call   1465a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   12ef6:	90                   	nop
   12ef7:	c9                   	leave
   12ef8:	c3                   	ret
   12ef9:	90                   	nop

0000000000012efa <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   12efa:	55                   	push   %rbp
   12efb:	48 89 e5             	mov    %rsp,%rbp
   12efe:	48 83 ec 10          	sub    $0x10,%rsp
   12f02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   12f06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f0a:	48 8b 00             	mov    (%rax),%rax
   12f0d:	48 89 c7             	mov    %rax,%rdi
   12f10:	e8 51 17 00 00       	call   14666 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   12f15:	c9                   	leave
   12f16:	c3                   	ret
   12f17:	90                   	nop

0000000000012f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   12f18:	55                   	push   %rbp
   12f19:	48 89 e5             	mov    %rsp,%rbp
   12f1c:	48 83 ec 20          	sub    $0x20,%rsp
   12f20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12f28:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   12f2c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12f30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f34:	48 89 d6             	mov    %rdx,%rsi
   12f37:	48 89 c7             	mov    %rax,%rdi
   12f3a:	e8 45 17 00 00       	call   14684 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   12f3f:	c9                   	leave
   12f40:	c3                   	ret

0000000000012f41 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   12f41:	55                   	push   %rbp
   12f42:	48 89 e5             	mov    %rsp,%rbp
   12f45:	48 83 ec 10          	sub    $0x10,%rsp
   12f49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   12f51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f55:	48 89 c7             	mov    %rax,%rdi
   12f58:	e8 4f 17 00 00       	call   146ac <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   12f5d:	48 89 c2             	mov    %rax,%rdx
   12f60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f64:	48 89 d6             	mov    %rdx,%rsi
   12f67:	48 89 c7             	mov    %rax,%rdi
   12f6a:	e8 4b 17 00 00       	call   146ba <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   12f6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f73:	c9                   	leave
   12f74:	c3                   	ret
   12f75:	90                   	nop

0000000000012f76 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   12f76:	55                   	push   %rbp
   12f77:	48 89 e5             	mov    %rsp,%rbp
   12f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   12f82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f86:	48 8b 10             	mov    (%rax),%rdx
   12f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f8d:	48 89 10             	mov    %rdx,(%rax)
   12f90:	90                   	nop
   12f91:	5d                   	pop    %rbp
   12f92:	c3                   	ret
   12f93:	90                   	nop

0000000000012f94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12f94:	55                   	push   %rbp
   12f95:	48 89 e5             	mov    %rsp,%rbp
   12f98:	41 54                	push   %r12
   12f9a:	53                   	push   %rbx
   12f9b:	48 83 ec 60          	sub    $0x60,%rsp
   12f9f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   12fa3:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   12fa7:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   12fab:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   12faf:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   12fb3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   12fb7:	48 89 c7             	mov    %rax,%rdi
   12fba:	e8 4a 17 00 00       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12fbf:	49 89 c4             	mov    %rax,%r12
   12fc2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   12fc6:	48 89 c7             	mov    %rax,%rdi
   12fc9:	e8 2d 17 00 00       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12fce:	48 89 c3             	mov    %rax,%rbx
   12fd1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   12fd5:	48 89 c7             	mov    %rax,%rdi
   12fd8:	e8 10 17 00 00       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12fdd:	48 89 c2             	mov    %rax,%rdx
   12fe0:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   12fe4:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12fe8:	4d 89 e0             	mov    %r12,%r8
   12feb:	48 89 d9             	mov    %rbx,%rcx
   12fee:	48 89 c7             	mov    %rax,%rdi
   12ff1:	e8 22 17 00 00       	call   14718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   12ff6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12ffa:	48 89 c7             	mov    %rax,%rdi
   12ffd:	e8 16 1c 00 00       	call   14c18 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   13002:	48 89 c2             	mov    %rax,%rdx
   13005:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   13009:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1300d:	48 89 ce             	mov    %rcx,%rsi
   13010:	48 89 c7             	mov    %rax,%rdi
   13013:	e8 b2 17 00 00       	call   147ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   13018:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   1301c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   13020:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13024:	48 85 c0             	test   %rax,%rax
   13027:	74 1c                	je     13045 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   13029:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   1302d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13031:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13035:	48 89 ce             	mov    %rcx,%rsi
   13038:	48 89 c7             	mov    %rax,%rdi
   1303b:	e8 f6 1b 00 00       	call   14c36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   13040:	48 89 c3             	mov    %rax,%rbx
   13043:	eb 17                	jmp    1305c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   13045:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13049:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1304d:	48 89 d6             	mov    %rdx,%rsi
   13050:	48 89 c7             	mov    %rax,%rdi
   13053:	e8 34 1c 00 00       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13058:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   1305c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13060:	48 89 c7             	mov    %rax,%rdi
   13063:	e8 2c 17 00 00       	call   14794 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   13068:	48 89 d8             	mov    %rbx,%rax
   1306b:	eb 1a                	jmp    13087 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   1306d:	48 89 c3             	mov    %rax,%rbx
   13070:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13074:	48 89 c7             	mov    %rax,%rdi
   13077:	e8 18 17 00 00       	call   14794 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   1307c:	48 89 d8             	mov    %rbx,%rax
   1307f:	48 89 c7             	mov    %rax,%rdi
   13082:	e8 29 17 ff ff       	call   47b0 <_Unwind_Resume@plt>
   13087:	48 83 c4 60          	add    $0x60,%rsp
   1308b:	5b                   	pop    %rbx
   1308c:	41 5c                	pop    %r12
   1308e:	5d                   	pop    %rbp
   1308f:	c3                   	ret

0000000000013090 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   13090:	55                   	push   %rbp
   13091:	48 89 e5             	mov    %rsp,%rbp
   13094:	48 83 ec 20          	sub    $0x20,%rsp
   13098:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   1309c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   130a4:	48 89 d6             	mov    %rdx,%rsi
   130a7:	48 89 c7             	mov    %rax,%rdi
   130aa:	e8 f7 1b 00 00       	call   14ca6 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   130af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130b3:	c9                   	leave
   130b4:	c3                   	ret
   130b5:	90                   	nop

00000000000130b6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   130b6:	55                   	push   %rbp
   130b7:	48 89 e5             	mov    %rsp,%rbp
   130ba:	48 83 ec 20          	sub    $0x20,%rsp
   130be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   130c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130c6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   130ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   130ce:	48 89 d6             	mov    %rdx,%rsi
   130d1:	48 89 c7             	mov    %rax,%rdi
   130d4:	e8 cd 1b 00 00       	call   14ca6 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   130d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130dd:	c9                   	leave
   130de:	c3                   	ret

00000000000130df <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   130df:	55                   	push   %rbp
   130e0:	48 89 e5             	mov    %rsp,%rbp
   130e3:	53                   	push   %rbx
   130e4:	48 83 ec 18          	sub    $0x18,%rsp
   130e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   130ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   130f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130f4:	48 89 c7             	mov    %rax,%rdi
   130f7:	e8 c8 1b 00 00       	call   14cc4 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   130fc:	48 8b 18             	mov    (%rax),%rbx
   130ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13103:	48 89 c7             	mov    %rax,%rdi
   13106:	e8 b9 1b 00 00       	call   14cc4 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   1310b:	48 8b 00             	mov    (%rax),%rax
   1310e:	48 39 c3             	cmp    %rax,%rbx
   13111:	0f 94 c0             	sete   %al
   13114:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13118:	c9                   	leave
   13119:	c3                   	ret

000000000001311a <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1311a:	55                   	push   %rbp
   1311b:	48 89 e5             	mov    %rsp,%rbp
   1311e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13122:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13126:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1312a:	48 8b 10             	mov    (%rax),%rdx
   1312d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13131:	48 89 10             	mov    %rdx,(%rax)
   13134:	90                   	nop
   13135:	5d                   	pop    %rbp
   13136:	c3                   	ret
   13137:	90                   	nop

0000000000013138 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13138:	55                   	push   %rbp
   13139:	48 89 e5             	mov    %rsp,%rbp
   1313c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13144:	5d                   	pop    %rbp
   13145:	c3                   	ret

0000000000013146 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13146:	55                   	push   %rbp
   13147:	48 89 e5             	mov    %rsp,%rbp
   1314a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1314e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13152:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13156:	48 8b 10             	mov    (%rax),%rdx
   13159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1315d:	48 89 10             	mov    %rdx,(%rax)
   13160:	90                   	nop
   13161:	5d                   	pop    %rbp
   13162:	c3                   	ret
   13163:	90                   	nop

0000000000013164 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13164:	55                   	push   %rbp
   13165:	48 89 e5             	mov    %rsp,%rbp
   13168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1316c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13170:	5d                   	pop    %rbp
   13171:	c3                   	ret

0000000000013172 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   13172:	55                   	push   %rbp
   13173:	48 89 e5             	mov    %rsp,%rbp
   13176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   1317a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1317e:	5d                   	pop    %rbp
   1317f:	c3                   	ret

0000000000013180 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   13180:	55                   	push   %rbp
   13181:	48 89 e5             	mov    %rsp,%rbp
   13184:	53                   	push   %rbx
   13185:	48 83 ec 38          	sub    $0x38,%rsp
   13189:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1318d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   13191:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13195:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13199:	48 89 d6             	mov    %rdx,%rsi
   1319c:	48 89 c7             	mov    %rax,%rdi
   1319f:	e8 2e 1b 00 00       	call   14cd2 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   131a4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   131a8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   131ac:	48 89 d6             	mov    %rdx,%rsi
   131af:	48 89 c7             	mov    %rax,%rdi
   131b2:	e8 4f 1b 00 00       	call   14d06 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   131b7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   131bb:	48 89 c7             	mov    %rax,%rdi
   131be:	e8 7f 5b ff ff       	call   8d42 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   131c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131c7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   131cb:	48 89 d6             	mov    %rdx,%rsi
   131ce:	48 89 c7             	mov    %rax,%rdi
   131d1:	e8 56 1b 00 00       	call   14d2c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   131d6:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   131da:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   131de:	48 89 d6             	mov    %rdx,%rsi
   131e1:	48 89 c7             	mov    %rax,%rdi
   131e4:	e8 43 1b 00 00       	call   14d2c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   131e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   131ed:	48 89 c7             	mov    %rax,%rdi
   131f0:	e8 01 6c ff ff       	call   9df6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   131f5:	48 89 c3             	mov    %rax,%rbx
   131f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   131fc:	48 89 c7             	mov    %rax,%rdi
   131ff:	e8 f2 6b ff ff       	call   9df6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13204:	48 89 de             	mov    %rbx,%rsi
   13207:	48 89 c7             	mov    %rax,%rdi
   1320a:	e8 75 1b 00 00       	call   14d84 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   1320f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13213:	48 89 c7             	mov    %rax,%rdi
   13216:	e8 b9 5b ff ff       	call   8dd4 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   1321b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1321f:	c9                   	leave
   13220:	c3                   	ret
   13221:	90                   	nop

0000000000013222 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   13222:	55                   	push   %rbp
   13223:	48 89 e5             	mov    %rsp,%rbp
   13226:	53                   	push   %rbx
   13227:	48 83 ec 38          	sub    $0x38,%rsp
   1322b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1322f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   13233:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   13238:	0f 84 e7 01 00 00    	je     13425 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   1323e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13242:	48 89 c7             	mov    %rax,%rdi
   13245:	e8 64 ed ff ff       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1324a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1324e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13252:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   13256:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1325a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1325e:	48 29 c2             	sub    %rax,%rdx
   13261:	48 89 d0             	mov    %rdx,%rax
   13264:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   13268:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   1326c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13270:	48 89 c7             	mov    %rax,%rdi
   13273:	e8 2c 1b 00 00       	call   14da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13278:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1327c:	72 16                	jb     13294 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   1327e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13282:	48 89 c7             	mov    %rax,%rdi
   13285:	e8 1a 1b 00 00       	call   14da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1328a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1328e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13292:	73 07                	jae    1329b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   13294:	b8 01 00 00 00       	mov    $0x1,%eax
   13299:	eb 05                	jmp    132a0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   1329b:	b8 00 00 00 00       	mov    $0x0,%eax
   132a0:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   132a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   132a6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   132aa:	72 33                	jb     132df <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   132ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   132b0:	48 89 c7             	mov    %rax,%rdi
   132b3:	e8 9c 09 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   132b8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   132bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   132bf:	48 8b 40 08          	mov    0x8(%rax),%rax
   132c3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   132c7:	48 89 ce             	mov    %rcx,%rsi
   132ca:	48 89 c7             	mov    %rax,%rdi
   132cd:	e8 f4 1a 00 00       	call   14dc6 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   132d2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   132d6:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   132da:	e9 46 01 00 00       	jmp    13425 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   132df:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   132e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   132e7:	48 8d 15 1a 9b 00 00 	lea    0x9b1a(%rip),%rdx        # 1ce08 <_ZZN9VulkanApp6renderEvE11submitCount+0x288>
   132ee:	48 89 ce             	mov    %rcx,%rsi
   132f1:	48 89 c7             	mov    %rax,%rdi
   132f4:	e8 f7 1a 00 00       	call   14df0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   132f9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   132fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13301:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13305:	48 89 d6             	mov    %rdx,%rsi
   13308:	48 89 c7             	mov    %rax,%rdi
   1330b:	e8 a8 1b 00 00       	call   14eb8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   13310:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   13314:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13318:	48 89 c7             	mov    %rax,%rdi
   1331b:	e8 34 09 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13320:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   13323:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13327:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1332e:	00 
   1332f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13333:	48 01 c1             	add    %rax,%rcx
   13336:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1333a:	48 89 c6             	mov    %rax,%rsi
   1333d:	48 89 cf             	mov    %rcx,%rdi
   13340:	e8 81 1a 00 00       	call   14dc6 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   13345:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13349:	48 89 c7             	mov    %rax,%rdi
   1334c:	e8 03 09 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13351:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   13354:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13358:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1335c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13360:	48 8b 00             	mov    (%rax),%rax
   13363:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13367:	48 89 c7             	mov    %rax,%rdi
   1336a:	e8 7c 1b 00 00       	call   14eeb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1336f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   13373:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13377:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1337b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1337f:	48 8b 12             	mov    (%rdx),%rdx
   13382:	48 29 d1             	sub    %rdx,%rcx
   13385:	48 c1 f9 03          	sar    $0x3,%rcx
   13389:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1338c:	48 89 d6             	mov    %rdx,%rsi
   1338f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13393:	48 8b 0a             	mov    (%rdx),%rcx
   13396:	48 89 f2             	mov    %rsi,%rdx
   13399:	48 89 ce             	mov    %rcx,%rsi
   1339c:	48 89 c7             	mov    %rax,%rdi
   1339f:	e8 ae 0c 00 00       	call   14052 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   133a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133a8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   133ac:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   133af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   133b3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   133b7:	48 01 d0             	add    %rdx,%rax
   133ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   133c1:	00 
   133c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   133c6:	48 01 c2             	add    %rax,%rdx
   133c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133cd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   133d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133d5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   133dc:	00 
   133dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   133e1:	48 01 c2             	add    %rax,%rdx
   133e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133e8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   133ec:	eb 37                	jmp    13425 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   133ee:	48 89 c7             	mov    %rax,%rdi
   133f1:	e8 4a 0d ff ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   133f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133fa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   133fe:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   13402:	48 89 ce             	mov    %rcx,%rsi
   13405:	48 89 c7             	mov    %rax,%rdi
   13408:	e8 45 0c 00 00       	call   14052 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1340d:	e8 5e 12 ff ff       	call   4670 <__cxa_rethrow@plt>
		  __catch(...)
   13412:	48 89 c3             	mov    %rax,%rbx
   13415:	e8 16 13 ff ff       	call   4730 <__cxa_end_catch@plt>
   1341a:	48 89 d8             	mov    %rbx,%rax
   1341d:	48 89 c7             	mov    %rax,%rdi
   13420:	e8 8b 13 ff ff       	call   47b0 <_Unwind_Resume@plt>
    }
   13425:	90                   	nop
   13426:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1342a:	c9                   	leave
   1342b:	c3                   	ret

000000000001342c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1342c:	55                   	push   %rbp
   1342d:	48 89 e5             	mov    %rsp,%rbp
   13430:	48 83 ec 20          	sub    $0x20,%rsp
   13434:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13438:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1343c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13440:	48 8b 40 08          	mov    0x8(%rax),%rax
   13444:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   13448:	48 c1 f8 03          	sar    $0x3,%rax
   1344c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13450:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13455:	74 32                	je     13489 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   13457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1345b:	48 89 c7             	mov    %rax,%rdi
   1345e:	e8 f1 07 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13463:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   13466:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1346a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1346e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13472:	48 89 ce             	mov    %rcx,%rsi
   13475:	48 89 c7             	mov    %rax,%rdi
   13478:	e8 e5 07 00 00       	call   13c62 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1347d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13481:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13485:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   13489:	90                   	nop
   1348a:	c9                   	leave
   1348b:	c3                   	ret

000000000001348c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1348c:	55                   	push   %rbp
   1348d:	48 89 e5             	mov    %rsp,%rbp
   13490:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13494:	90                   	nop
   13495:	5d                   	pop    %rbp
   13496:	c3                   	ret
   13497:	90                   	nop

0000000000013498 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13498:	55                   	push   %rbp
   13499:	48 89 e5             	mov    %rsp,%rbp
   1349c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134a0:	90                   	nop
   134a1:	5d                   	pop    %rbp
   134a2:	c3                   	ret
   134a3:	90                   	nop

00000000000134a4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   134a4:	55                   	push   %rbp
   134a5:	48 89 e5             	mov    %rsp,%rbp
   134a8:	48 83 ec 10          	sub    $0x10,%rsp
   134ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134b4:	48 89 c7             	mov    %rax,%rdi
   134b7:	e8 5e e8 ff ff       	call   11d1a <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   134bc:	90                   	nop
   134bd:	c9                   	leave
   134be:	c3                   	ret
   134bf:	90                   	nop

00000000000134c0 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   134c0:	55                   	push   %rbp
   134c1:	48 89 e5             	mov    %rsp,%rbp
   134c4:	48 83 ec 10          	sub    $0x10,%rsp
   134c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   134d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   134d8:	48 89 d6             	mov    %rdx,%rsi
   134db:	48 89 c7             	mov    %rax,%rdi
   134de:	e8 3b 1a 00 00       	call   14f1e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   134e3:	90                   	nop
   134e4:	c9                   	leave
   134e5:	c3                   	ret

00000000000134e6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   134e6:	55                   	push   %rbp
   134e7:	48 89 e5             	mov    %rsp,%rbp
   134ea:	48 83 ec 10          	sub    $0x10,%rsp
   134ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   134f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134f6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   134fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134fe:	48 8b 00             	mov    (%rax),%rax
   13501:	48 29 c2             	sub    %rax,%rdx
   13504:	48 c1 fa 04          	sar    $0x4,%rdx
   13508:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1350f:	e3 38 8e 
   13512:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   13516:	48 89 c2             	mov    %rax,%rdx
   13519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1351d:	48 8b 08             	mov    (%rax),%rcx
   13520:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13524:	48 89 ce             	mov    %rcx,%rsi
   13527:	48 89 c7             	mov    %rax,%rdi
   1352a:	e8 21 1a 00 00       	call   14f50 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   1352f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13533:	48 89 c7             	mov    %rax,%rdi
   13536:	e8 69 ff ff ff       	call   134a4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   1353b:	90                   	nop
   1353c:	c9                   	leave
   1353d:	c3                   	ret

000000000001353e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   1353e:	55                   	push   %rbp
   1353f:	48 89 e5             	mov    %rsp,%rbp
   13542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13546:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1354a:	48 8b 00             	mov    (%rax),%rax
   1354d:	5d                   	pop    %rbp
   1354e:	c3                   	ret
   1354f:	90                   	nop

0000000000013550 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   13550:	55                   	push   %rbp
   13551:	48 89 e5             	mov    %rsp,%rbp
   13554:	53                   	push   %rbx
   13555:	48 83 ec 18          	sub    $0x18,%rsp
   13559:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1355d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13561:	48 89 c7             	mov    %rax,%rdi
   13564:	e8 d5 ff ff ff       	call   1353e <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   13569:	48 89 c3             	mov    %rax,%rbx
   1356c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13570:	48 89 c7             	mov    %rax,%rdi
   13573:	e8 0e 1a 00 00       	call   14f86 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   13578:	48 89 c2             	mov    %rax,%rdx
   1357b:	48 89 d0             	mov    %rdx,%rax
   1357e:	48 c1 e0 03          	shl    $0x3,%rax
   13582:	48 01 d0             	add    %rdx,%rax
   13585:	48 c1 e0 04          	shl    $0x4,%rax
   13589:	48 01 d8             	add    %rbx,%rax
   1358c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13590:	c9                   	leave
   13591:	c3                   	ret

0000000000013592 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   13592:	55                   	push   %rbp
   13593:	48 89 e5             	mov    %rsp,%rbp
   13596:	48 83 ec 10          	sub    $0x10,%rsp
   1359a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1359e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   135a2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   135a6:	48 89 c7             	mov    %rax,%rdi
   135a9:	e8 ea 19 00 00       	call   14f98 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   135ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135b6:	48 89 d6             	mov    %rdx,%rsi
   135b9:	48 89 c7             	mov    %rax,%rdi
   135bc:	e8 e2 19 00 00       	call   14fa3 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   135c1:	c9                   	leave
   135c2:	c3                   	ret
   135c3:	90                   	nop

00000000000135c4 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   135c4:	55                   	push   %rbp
   135c5:	48 89 e5             	mov    %rsp,%rbp
   135c8:	53                   	push   %rbx
   135c9:	48 83 ec 38          	sub    $0x38,%rsp
   135cd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   135d1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   135d5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   135d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   135dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   135e1:	48 89 d6             	mov    %rdx,%rsi
   135e4:	48 89 c7             	mov    %rax,%rdi
   135e7:	e8 a6 ff ff ff       	call   13592 <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   135ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   135f0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   135f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   135f8:	48 89 c7             	mov    %rax,%rdi
   135fb:	e8 7e 00 00 00       	call   1367e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   13600:	48 89 c2             	mov    %rax,%rdx
   13603:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13607:	48 89 d6             	mov    %rdx,%rsi
   1360a:	48 89 c7             	mov    %rax,%rdi
   1360d:	e8 bc 19 00 00       	call   14fce <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   13612:	48 89 c6             	mov    %rax,%rsi
   13615:	48 89 df             	mov    %rbx,%rdi
   13618:	e8 11 1a 00 00       	call   1502e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   1361d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13621:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13624:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13628:	48 8b 08             	mov    (%rax),%rcx
   1362b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1362f:	48 89 d0             	mov    %rdx,%rax
   13632:	48 c1 e0 03          	shl    $0x3,%rax
   13636:	48 01 d0             	add    %rdx,%rax
   13639:	48 c1 e0 04          	shl    $0x4,%rax
   1363d:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   13641:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13645:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13649:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1364d:	48 89 c7             	mov    %rax,%rdi
   13650:	e8 29 00 00 00       	call   1367e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   13655:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   13658:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1365c:	48 8b 10             	mov    (%rax),%rdx
   1365f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13663:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13667:	48 89 c7             	mov    %rax,%rdi
   1366a:	e8 f2 19 00 00       	call   15061 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   1366f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13673:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   13677:	90                   	nop
   13678:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1367c:	c9                   	leave
   1367d:	c3                   	ret

000000000001367e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1367e:	55                   	push   %rbp
   1367f:	48 89 e5             	mov    %rsp,%rbp
   13682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1368a:	5d                   	pop    %rbp
   1368b:	c3                   	ret

000000000001368c <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1368c:	55                   	push   %rbp
   1368d:	48 89 e5             	mov    %rsp,%rbp
   13690:	48 83 ec 20          	sub    $0x20,%rsp
   13694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13698:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1369c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   136a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   136a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136a8:	48 89 d6             	mov    %rdx,%rsi
   136ab:	48 89 c7             	mov    %rax,%rdi
   136ae:	e8 df 19 00 00       	call   15092 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   136b3:	90                   	nop
   136b4:	c9                   	leave
   136b5:	c3                   	ret

00000000000136b6 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   136b6:	55                   	push   %rbp
   136b7:	48 89 e5             	mov    %rsp,%rbp
   136ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   136be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
   136c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136ca:	48 8b 00             	mov    (%rax),%rax
   136cd:	48 29 c2             	sub    %rax,%rdx
   136d0:	48 c1 fa 04          	sar    $0x4,%rdx
   136d4:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   136db:	e3 38 8e 
   136de:	48 0f af c2          	imul   %rdx,%rax
   136e2:	5d                   	pop    %rbp
   136e3:	c3                   	ret

00000000000136e4 <_ZNSaIP12VkPipeline_TEC1Ev>:
   136e4:	55                   	push   %rbp
   136e5:	48 89 e5             	mov    %rsp,%rbp
   136e8:	48 83 ec 10          	sub    $0x10,%rsp
   136ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136f4:	48 89 c7             	mov    %rax,%rdi
   136f7:	e8 bc 19 00 00       	call   150b8 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   136fc:	90                   	nop
   136fd:	c9                   	leave
   136fe:	c3                   	ret
   136ff:	90                   	nop

0000000000013700 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   13700:	55                   	push   %rbp
   13701:	48 89 e5             	mov    %rsp,%rbp
   13704:	48 83 ec 10          	sub    $0x10,%rsp
   13708:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1370c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13710:	48 89 c7             	mov    %rax,%rdi
   13713:	e8 ac 19 00 00       	call   150c4 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   13718:	90                   	nop
   13719:	c9                   	leave
   1371a:	c3                   	ret
   1371b:	90                   	nop

000000000001371c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   1371c:	55                   	push   %rbp
   1371d:	48 89 e5             	mov    %rsp,%rbp
   13720:	53                   	push   %rbx
   13721:	48 83 ec 28          	sub    $0x28,%rsp
   13725:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13729:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1372d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   13731:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13735:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13739:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1373d:	48 89 d6             	mov    %rdx,%rsi
   13740:	48 89 c7             	mov    %rax,%rdi
   13743:	e8 87 19 00 00       	call   150cf <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   13748:	48 89 c1             	mov    %rax,%rcx
   1374b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1374f:	48 89 c2             	mov    %rax,%rdx
   13752:	48 89 ce             	mov    %rcx,%rsi
   13755:	48 89 df             	mov    %rbx,%rdi
   13758:	e8 d3 19 00 00       	call   15130 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   1375d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13761:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13765:	48 89 d6             	mov    %rdx,%rsi
   13768:	48 89 c7             	mov    %rax,%rdi
   1376b:	e8 1e 1a 00 00       	call   1518e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   13770:	eb 1a                	jmp    1378c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   13772:	48 89 c3             	mov    %rax,%rbx
   13775:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13779:	48 89 c7             	mov    %rax,%rdi
   1377c:	e8 59 00 00 00       	call   137da <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   13781:	48 89 d8             	mov    %rbx,%rax
   13784:	48 89 c7             	mov    %rax,%rdi
   13787:	e8 24 10 ff ff       	call   47b0 <_Unwind_Resume@plt>
   1378c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13790:	c9                   	leave
   13791:	c3                   	ret

0000000000013792 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   13792:	55                   	push   %rbp
   13793:	48 89 e5             	mov    %rsp,%rbp
   13796:	48 83 ec 10          	sub    $0x10,%rsp
   1379a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   1379e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a2:	48 8b 10             	mov    (%rax),%rdx
   137a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a9:	48 89 d6             	mov    %rdx,%rsi
   137ac:	48 89 c7             	mov    %rax,%rdi
   137af:	e8 1a 1a 00 00       	call   151ce <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   137b4:	c9                   	leave
   137b5:	c3                   	ret

00000000000137b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   137b6:	55                   	push   %rbp
   137b7:	48 89 e5             	mov    %rsp,%rbp
   137ba:	48 83 ec 10          	sub    $0x10,%rsp
   137be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   137c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c6:	48 8b 10             	mov    (%rax),%rdx
   137c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137cd:	48 89 d6             	mov    %rdx,%rsi
   137d0:	48 89 c7             	mov    %rax,%rdi
   137d3:	e8 08 1a 00 00       	call   151e0 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   137d8:	c9                   	leave
   137d9:	c3                   	ret

00000000000137da <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   137da:	55                   	push   %rbp
   137db:	48 89 e5             	mov    %rsp,%rbp
   137de:	48 83 ec 10          	sub    $0x10,%rsp
   137e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   137e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
   137ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f2:	48 8b 00             	mov    (%rax),%rax
   137f5:	48 29 c2             	sub    %rax,%rdx
   137f8:	48 89 d0             	mov    %rdx,%rax
   137fb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   137ff:	48 89 c2             	mov    %rax,%rdx
   13802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13806:	48 8b 08             	mov    (%rax),%rcx
   13809:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1380d:	48 89 ce             	mov    %rcx,%rsi
   13810:	48 89 c7             	mov    %rax,%rdi
   13813:	e8 00 1a 00 00       	call   15218 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1381c:	48 89 c7             	mov    %rax,%rdi
   1381f:	e8 de e5 ff ff       	call   11e02 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   13824:	90                   	nop
   13825:	c9                   	leave
   13826:	c3                   	ret
   13827:	90                   	nop

0000000000013828 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   13828:	55                   	push   %rbp
   13829:	48 89 e5             	mov    %rsp,%rbp
   1382c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13834:	5d                   	pop    %rbp
   13835:	c3                   	ret

0000000000013836 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13836:	55                   	push   %rbp
   13837:	48 89 e5             	mov    %rsp,%rbp
   1383a:	48 83 ec 20          	sub    $0x20,%rsp
   1383e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13846:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1384a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1384e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13852:	48 89 d6             	mov    %rdx,%rsi
   13855:	48 89 c7             	mov    %rax,%rdi
   13858:	e8 f0 19 00 00       	call   1524d <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   1385d:	90                   	nop
   1385e:	c9                   	leave
   1385f:	c3                   	ret

0000000000013860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13860:	55                   	push   %rbp
   13861:	48 89 e5             	mov    %rsp,%rbp
   13864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   13868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1386c:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13874:	48 8b 00             	mov    (%rax),%rax
   13877:	48 29 c2             	sub    %rax,%rdx
   1387a:	48 89 d0             	mov    %rdx,%rax
   1387d:	48 c1 f8 03          	sar    $0x3,%rax
   13881:	5d                   	pop    %rbp
   13882:	c3                   	ret
   13883:	90                   	nop

0000000000013884 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   13884:	55                   	push   %rbp
   13885:	48 89 e5             	mov    %rsp,%rbp
   13888:	53                   	push   %rbx
   13889:	48 83 ec 38          	sub    $0x38,%rsp
   1388d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   13891:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   13895:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1389a:	0f 84 e7 01 00 00    	je     13a87 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   138a0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138a4:	48 89 c7             	mov    %rax,%rdi
   138a7:	e8 b4 ff ff ff       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   138ac:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   138b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138b4:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   138b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138bc:	48 8b 40 08          	mov    0x8(%rax),%rax
   138c0:	48 29 c2             	sub    %rax,%rdx
   138c3:	48 89 d0             	mov    %rdx,%rax
   138c6:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   138ca:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   138ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138d2:	48 89 c7             	mov    %rax,%rdi
   138d5:	e8 9a 19 00 00       	call   15274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   138da:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   138de:	72 16                	jb     138f6 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   138e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138e4:	48 89 c7             	mov    %rax,%rdi
   138e7:	e8 88 19 00 00       	call   15274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   138ec:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   138f0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   138f4:	73 07                	jae    138fd <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   138f6:	b8 01 00 00 00       	mov    $0x1,%eax
   138fb:	eb 05                	jmp    13902 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   138fd:	b8 00 00 00 00       	mov    $0x0,%eax
   13902:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   13904:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13908:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1390c:	72 33                	jb     13941 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1390e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13912:	48 89 c7             	mov    %rax,%rdi
   13915:	e8 fa 07 00 00       	call   14114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1391a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1391d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13921:	48 8b 40 08          	mov    0x8(%rax),%rax
   13925:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13929:	48 89 ce             	mov    %rcx,%rsi
   1392c:	48 89 c7             	mov    %rax,%rdi
   1392f:	e8 62 19 00 00       	call   15296 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   13934:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13938:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1393c:	e9 46 01 00 00       	jmp    13a87 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   13941:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   13945:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13949:	48 8d 15 b8 94 00 00 	lea    0x94b8(%rip),%rdx        # 1ce08 <_ZZN9VulkanApp6renderEvE11submitCount+0x288>
   13950:	48 89 ce             	mov    %rcx,%rsi
   13953:	48 89 c7             	mov    %rax,%rdi
   13956:	e8 65 19 00 00       	call   152c0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   1395b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1395f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13963:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13967:	48 89 d6             	mov    %rdx,%rsi
   1396a:	48 89 c7             	mov    %rax,%rdi
   1396d:	e8 16 1a 00 00       	call   15388 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   13972:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   13976:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1397a:	48 89 c7             	mov    %rax,%rdi
   1397d:	e8 92 07 00 00       	call   14114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13982:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   13985:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13989:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   13990:	00 
   13991:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13995:	48 01 c1             	add    %rax,%rcx
   13998:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1399c:	48 89 c6             	mov    %rax,%rsi
   1399f:	48 89 cf             	mov    %rcx,%rdi
   139a2:	e8 ef 18 00 00       	call   15296 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   139a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139ab:	48 89 c7             	mov    %rax,%rdi
   139ae:	e8 61 07 00 00       	call   14114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   139b3:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   139b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139ba:	48 8b 70 08          	mov    0x8(%rax),%rsi
   139be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   139c2:	48 8b 00             	mov    (%rax),%rax
   139c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   139c9:	48 89 c7             	mov    %rax,%rdi
   139cc:	e8 ea 19 00 00       	call   153bb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   139d1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   139d5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139d9:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   139dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139e1:	48 8b 12             	mov    (%rdx),%rdx
   139e4:	48 29 d1             	sub    %rdx,%rcx
   139e7:	48 c1 f9 03          	sar    $0x3,%rcx
   139eb:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   139ee:	48 89 d6             	mov    %rdx,%rsi
   139f1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   139f5:	48 8b 0a             	mov    (%rdx),%rcx
   139f8:	48 89 f2             	mov    %rsi,%rdx
   139fb:	48 89 ce             	mov    %rcx,%rsi
   139fe:	48 89 c7             	mov    %rax,%rdi
   13a01:	e8 d8 06 00 00       	call   140de <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   13a06:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a0a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13a0e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   13a11:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a15:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13a19:	48 01 d0             	add    %rdx,%rax
   13a1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13a23:	00 
   13a24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13a28:	48 01 c2             	add    %rax,%rdx
   13a2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a2f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   13a33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13a37:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13a3e:	00 
   13a3f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13a43:	48 01 c2             	add    %rax,%rdx
   13a46:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a4a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   13a4e:	eb 37                	jmp    13a87 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   13a50:	48 89 c7             	mov    %rax,%rdi
   13a53:	e8 e8 06 ff ff       	call   4140 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   13a58:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13a5c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13a60:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   13a64:	48 89 ce             	mov    %rcx,%rsi
   13a67:	48 89 c7             	mov    %rax,%rdi
   13a6a:	e8 6f 06 00 00       	call   140de <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   13a6f:	e8 fc 0b ff ff       	call   4670 <__cxa_rethrow@plt>
		  __catch(...)
   13a74:	48 89 c3             	mov    %rax,%rbx
   13a77:	e8 b4 0c ff ff       	call   4730 <__cxa_end_catch@plt>
   13a7c:	48 89 d8             	mov    %rbx,%rax
   13a7f:	48 89 c7             	mov    %rax,%rdi
   13a82:	e8 29 0d ff ff       	call   47b0 <_Unwind_Resume@plt>
    }
   13a87:	90                   	nop
   13a88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a8c:	c9                   	leave
   13a8d:	c3                   	ret

0000000000013a8e <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   13a8e:	55                   	push   %rbp
   13a8f:	48 89 e5             	mov    %rsp,%rbp
   13a92:	48 83 ec 20          	sub    $0x20,%rsp
   13a96:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a9a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   13a9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13aa2:	48 8b 40 08          	mov    0x8(%rax),%rax
   13aa6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   13aaa:	48 c1 f8 03          	sar    $0x3,%rax
   13aae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13ab2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   13ab7:	74 32                	je     13aeb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   13ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13abd:	48 89 c7             	mov    %rax,%rdi
   13ac0:	e8 4f 06 00 00       	call   14114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13ac5:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   13ac8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13acc:	48 8b 48 08          	mov    0x8(%rax),%rcx
   13ad0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13ad4:	48 89 ce             	mov    %rcx,%rsi
   13ad7:	48 89 c7             	mov    %rax,%rdi
   13ada:	e8 43 06 00 00       	call   14122 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   13adf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ae3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13ae7:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   13aeb:	90                   	nop
   13aec:	c9                   	leave
   13aed:	c3                   	ret

0000000000013aee <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13aee:	55                   	push   %rbp
   13aef:	48 89 e5             	mov    %rsp,%rbp
   13af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13af6:	90                   	nop
   13af7:	5d                   	pop    %rbp
   13af8:	c3                   	ret
   13af9:	90                   	nop

0000000000013afa <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13afa:	55                   	push   %rbp
   13afb:	48 89 e5             	mov    %rsp,%rbp
   13afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b02:	90                   	nop
   13b03:	5d                   	pop    %rbp
   13b04:	c3                   	ret
   13b05:	90                   	nop

0000000000013b06 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13b06:	55                   	push   %rbp
   13b07:	48 89 e5             	mov    %rsp,%rbp
   13b0a:	48 83 ec 10          	sub    $0x10,%rsp
   13b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13b1e:	48 89 d6             	mov    %rdx,%rsi
   13b21:	48 89 c7             	mov    %rax,%rdi
   13b24:	e8 c5 18 00 00       	call   153ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>
   13b29:	90                   	nop
   13b2a:	c9                   	leave
   13b2b:	c3                   	ret

0000000000013b2c <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   13b2c:	55                   	push   %rbp
   13b2d:	48 89 e5             	mov    %rsp,%rbp
   13b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b38:	48 8b 00             	mov    (%rax),%rax
   13b3b:	5d                   	pop    %rbp
   13b3c:	c3                   	ret
   13b3d:	90                   	nop

0000000000013b3e <_ZNKSt16initializer_listIP13VkImageView_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   13b3e:	55                   	push   %rbp
   13b3f:	48 89 e5             	mov    %rsp,%rbp
   13b42:	53                   	push   %rbx
   13b43:	48 83 ec 18          	sub    $0x18,%rsp
   13b47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b4f:	48 89 c7             	mov    %rax,%rdi
   13b52:	e8 d5 ff ff ff       	call   13b2c <_ZNKSt16initializer_listIP13VkImageView_TE5beginEv>
   13b57:	48 89 c3             	mov    %rax,%rbx
   13b5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b5e:	48 89 c7             	mov    %rax,%rdi
   13b61:	e8 ba 18 00 00       	call   15420 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>
   13b66:	48 c1 e0 03          	shl    $0x3,%rax
   13b6a:	48 01 d8             	add    %rbx,%rax
   13b6d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13b71:	c9                   	leave
   13b72:	c3                   	ret

0000000000013b73 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   13b73:	55                   	push   %rbp
   13b74:	48 89 e5             	mov    %rsp,%rbp
   13b77:	48 83 ec 10          	sub    $0x10,%rsp
   13b7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13b83:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13b87:	48 89 c7             	mov    %rax,%rdi
   13b8a:	e8 a3 18 00 00       	call   15432 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   13b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b93:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13b97:	48 89 d6             	mov    %rdx,%rsi
   13b9a:	48 89 c7             	mov    %rax,%rdi
   13b9d:	e8 9b 18 00 00       	call   1543d <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   13ba2:	c9                   	leave
   13ba3:	c3                   	ret

0000000000013ba4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   13ba4:	55                   	push   %rbp
   13ba5:	48 89 e5             	mov    %rsp,%rbp
   13ba8:	53                   	push   %rbx
   13ba9:	48 83 ec 38          	sub    $0x38,%rsp
   13bad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13bb1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13bb5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   13bb9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13bbd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13bc1:	48 89 d6             	mov    %rdx,%rsi
   13bc4:	48 89 c7             	mov    %rax,%rdi
   13bc7:	e8 a7 ff ff ff       	call   13b73 <_ZSt8distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   13bcc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   13bd0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13bd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13bd8:	48 89 c7             	mov    %rax,%rdi
   13bdb:	e8 74 00 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13be0:	48 89 c2             	mov    %rax,%rdx
   13be3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13be7:	48 89 d6             	mov    %rdx,%rsi
   13bea:	48 89 c7             	mov    %rax,%rdi
   13bed:	e8 65 18 00 00       	call   15457 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   13bf2:	48 89 c6             	mov    %rax,%rsi
   13bf5:	48 89 df             	mov    %rbx,%rdi
   13bf8:	e8 bb 12 00 00       	call   14eb8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   13bfd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13c01:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13c04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c08:	48 8b 00             	mov    (%rax),%rax
   13c0b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13c0f:	48 c1 e2 03          	shl    $0x3,%rdx
   13c13:	48 01 c2             	add    %rax,%rdx
   13c16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c1a:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13c1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c22:	48 89 c7             	mov    %rax,%rdi
   13c25:	e8 2a 00 00 00       	call   13c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13c2a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   13c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c31:	48 8b 10             	mov    (%rax),%rdx
   13c34:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13c38:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13c3c:	48 89 c7             	mov    %rax,%rdi
   13c3f:	e8 73 18 00 00       	call   154b7 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   13c44:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13c48:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   13c4c:	90                   	nop
   13c4d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13c51:	c9                   	leave
   13c52:	c3                   	ret
   13c53:	90                   	nop

0000000000013c54 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   13c54:	55                   	push   %rbp
   13c55:	48 89 e5             	mov    %rsp,%rbp
   13c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c60:	5d                   	pop    %rbp
   13c61:	c3                   	ret

0000000000013c62 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13c62:	55                   	push   %rbp
   13c63:	48 89 e5             	mov    %rsp,%rbp
   13c66:	48 83 ec 20          	sub    $0x20,%rsp
   13c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13c72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   13c76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13c7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c7e:	48 89 d6             	mov    %rdx,%rsi
   13c81:	48 89 c7             	mov    %rax,%rdi
   13c84:	e8 5f 18 00 00       	call   154e8 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   13c89:	90                   	nop
   13c8a:	c9                   	leave
   13c8b:	c3                   	ret

0000000000013c8c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   13c8c:	55                   	push   %rbp
   13c8d:	48 89 e5             	mov    %rsp,%rbp
   13c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13c94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   13c98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13c9c:	5d                   	pop    %rbp
   13c9d:	c3                   	ret

0000000000013c9e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13c9e:	55                   	push   %rbp
   13c9f:	48 89 e5             	mov    %rsp,%rbp
   13ca2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ca6:	90                   	nop
   13ca7:	5d                   	pop    %rbp
   13ca8:	c3                   	ret
   13ca9:	90                   	nop

0000000000013caa <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13caa:	55                   	push   %rbp
   13cab:	48 89 e5             	mov    %rsp,%rbp
   13cae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cb2:	90                   	nop
   13cb3:	5d                   	pop    %rbp
   13cb4:	c3                   	ret
   13cb5:	90                   	nop

0000000000013cb6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   13cb6:	55                   	push   %rbp
   13cb7:	48 89 e5             	mov    %rsp,%rbp
   13cba:	48 83 ec 10          	sub    $0x10,%rsp
   13cbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cc6:	48 89 c7             	mov    %rax,%rdi
   13cc9:	e8 0e e5 ff ff       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>
   13cce:	90                   	nop
   13ccf:	c9                   	leave
   13cd0:	c3                   	ret
   13cd1:	90                   	nop

0000000000013cd2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13cd2:	55                   	push   %rbp
   13cd3:	48 89 e5             	mov    %rsp,%rbp
   13cd6:	48 83 ec 10          	sub    $0x10,%rsp
   13cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ce6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13cea:	48 89 d6             	mov    %rdx,%rsi
   13ced:	48 89 c7             	mov    %rax,%rdi
   13cf0:	e8 19 18 00 00       	call   1550e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>
   13cf5:	90                   	nop
   13cf6:	c9                   	leave
   13cf7:	c3                   	ret

0000000000013cf8 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   13cf8:	55                   	push   %rbp
   13cf9:	48 89 e5             	mov    %rsp,%rbp
   13cfc:	48 83 ec 10          	sub    $0x10,%rsp
   13d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   13d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d08:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13d0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d10:	48 8b 00             	mov    (%rax),%rax
   13d13:	48 29 c2             	sub    %rax,%rdx
   13d16:	48 89 d0             	mov    %rdx,%rax
   13d19:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   13d1d:	48 89 c2             	mov    %rax,%rdx
   13d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d24:	48 8b 08             	mov    (%rax),%rcx
   13d27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d2b:	48 89 ce             	mov    %rcx,%rsi
   13d2e:	48 89 c7             	mov    %rax,%rdi
   13d31:	e8 0a 18 00 00       	call   15540 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   13d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d3a:	48 89 c7             	mov    %rax,%rdi
   13d3d:	e8 74 ff ff ff       	call   13cb6 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
   13d42:	90                   	nop
   13d43:	c9                   	leave
   13d44:	c3                   	ret
   13d45:	90                   	nop

0000000000013d46 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>:
      begin() const noexcept { return _M_array; }
   13d46:	55                   	push   %rbp
   13d47:	48 89 e5             	mov    %rsp,%rbp
   13d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d52:	48 8b 00             	mov    (%rax),%rax
   13d55:	5d                   	pop    %rbp
   13d56:	c3                   	ret
   13d57:	90                   	nop

0000000000013d58 <_ZNKSt16initializer_listIP13VkSemaphore_TE3endEv>:
      end() const noexcept { return begin() + size(); }
   13d58:	55                   	push   %rbp
   13d59:	48 89 e5             	mov    %rsp,%rbp
   13d5c:	53                   	push   %rbx
   13d5d:	48 83 ec 18          	sub    $0x18,%rsp
   13d61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d65:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d69:	48 89 c7             	mov    %rax,%rdi
   13d6c:	e8 d5 ff ff ff       	call   13d46 <_ZNKSt16initializer_listIP13VkSemaphore_TE5beginEv>
   13d71:	48 89 c3             	mov    %rax,%rbx
   13d74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d78:	48 89 c7             	mov    %rax,%rdi
   13d7b:	e8 f6 17 00 00       	call   15576 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>
   13d80:	48 c1 e0 03          	shl    $0x3,%rax
   13d84:	48 01 d8             	add    %rbx,%rax
   13d87:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d8b:	c9                   	leave
   13d8c:	c3                   	ret

0000000000013d8d <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   13d8d:	55                   	push   %rbp
   13d8e:	48 89 e5             	mov    %rsp,%rbp
   13d91:	48 83 ec 10          	sub    $0x10,%rsp
   13d95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d99:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13d9d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13da1:	48 89 c7             	mov    %rax,%rdi
   13da4:	e8 df 17 00 00       	call   15588 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   13da9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13dad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13db1:	48 89 d6             	mov    %rdx,%rsi
   13db4:	48 89 c7             	mov    %rax,%rdi
   13db7:	e8 d7 17 00 00       	call   15593 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   13dbc:	c9                   	leave
   13dbd:	c3                   	ret

0000000000013dbe <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   13dbe:	55                   	push   %rbp
   13dbf:	48 89 e5             	mov    %rsp,%rbp
   13dc2:	53                   	push   %rbx
   13dc3:	48 83 ec 38          	sub    $0x38,%rsp
   13dc7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13dcb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13dcf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   13dd3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13dd7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13ddb:	48 89 d6             	mov    %rdx,%rsi
   13dde:	48 89 c7             	mov    %rax,%rdi
   13de1:	e8 a7 ff ff ff       	call   13d8d <_ZSt8distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   13de6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   13dea:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13dee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13df2:	48 89 c7             	mov    %rax,%rdi
   13df5:	e8 74 00 00 00       	call   13e6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13dfa:	48 89 c2             	mov    %rax,%rdx
   13dfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e01:	48 89 d6             	mov    %rdx,%rsi
   13e04:	48 89 c7             	mov    %rax,%rdi
   13e07:	e8 a1 17 00 00       	call   155ad <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   13e0c:	48 89 c6             	mov    %rax,%rsi
   13e0f:	48 89 df             	mov    %rbx,%rdi
   13e12:	e8 f7 17 00 00       	call   1560e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   13e17:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13e1b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e22:	48 8b 00             	mov    (%rax),%rax
   13e25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13e29:	48 c1 e2 03          	shl    $0x3,%rdx
   13e2d:	48 01 c2             	add    %rax,%rdx
   13e30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e34:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13e38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e3c:	48 89 c7             	mov    %rax,%rdi
   13e3f:	e8 2a 00 00 00       	call   13e6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13e44:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   13e47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e4b:	48 8b 10             	mov    (%rax),%rdx
   13e4e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13e52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13e56:	48 89 c7             	mov    %rax,%rdi
   13e59:	e8 e3 17 00 00       	call   15641 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   13e5e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13e62:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   13e66:	90                   	nop
   13e67:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13e6b:	c9                   	leave
   13e6c:	c3                   	ret
   13e6d:	90                   	nop

0000000000013e6e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   13e6e:	55                   	push   %rbp
   13e6f:	48 89 e5             	mov    %rsp,%rbp
   13e72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13e76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e7a:	5d                   	pop    %rbp
   13e7b:	c3                   	ret

0000000000013e7c <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   13e7c:	55                   	push   %rbp
   13e7d:	48 89 e5             	mov    %rsp,%rbp
   13e80:	48 83 ec 20          	sub    $0x20,%rsp
   13e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e88:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e8c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   13e90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e98:	48 89 d6             	mov    %rdx,%rsi
   13e9b:	48 89 c7             	mov    %rax,%rdi
   13e9e:	e8 cf 17 00 00       	call   15672 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
   13ea3:	90                   	nop
   13ea4:	c9                   	leave
   13ea5:	c3                   	ret

0000000000013ea6 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13ea6:	55                   	push   %rbp
   13ea7:	48 89 e5             	mov    %rsp,%rbp
   13eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13eae:	90                   	nop
   13eaf:	5d                   	pop    %rbp
   13eb0:	c3                   	ret
   13eb1:	90                   	nop

0000000000013eb2 <_ZNSt12_Vector_baseIjSaIjEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13eb2:	55                   	push   %rbp
   13eb3:	48 89 e5             	mov    %rsp,%rbp
   13eb6:	48 83 ec 10          	sub    $0x10,%rsp
   13eba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ebe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ec6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13eca:	48 89 d6             	mov    %rdx,%rsi
   13ecd:	48 89 c7             	mov    %rax,%rdi
   13ed0:	e8 c3 17 00 00       	call   15698 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>
   13ed5:	90                   	nop
   13ed6:	c9                   	leave
   13ed7:	c3                   	ret

0000000000013ed8 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
   13ed8:	55                   	push   %rbp
   13ed9:	48 89 e5             	mov    %rsp,%rbp
   13edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee4:	48 8b 00             	mov    (%rax),%rax
   13ee7:	5d                   	pop    %rbp
   13ee8:	c3                   	ret
   13ee9:	90                   	nop

0000000000013eea <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
   13eea:	55                   	push   %rbp
   13eeb:	48 89 e5             	mov    %rsp,%rbp
   13eee:	53                   	push   %rbx
   13eef:	48 83 ec 18          	sub    $0x18,%rsp
   13ef3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ef7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13efb:	48 89 c7             	mov    %rax,%rdi
   13efe:	e8 d5 ff ff ff       	call   13ed8 <_ZNKSt16initializer_listIjE5beginEv>
   13f03:	48 89 c3             	mov    %rax,%rbx
   13f06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f0a:	48 89 c7             	mov    %rax,%rdi
   13f0d:	e8 b8 17 00 00       	call   156ca <_ZNKSt16initializer_listIjE4sizeEv>
   13f12:	48 c1 e0 02          	shl    $0x2,%rax
   13f16:	48 01 d8             	add    %rbx,%rax
   13f19:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13f1d:	c9                   	leave
   13f1e:	c3                   	ret

0000000000013f1f <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   13f1f:	55                   	push   %rbp
   13f20:	48 89 e5             	mov    %rsp,%rbp
   13f23:	48 83 ec 10          	sub    $0x10,%rsp
   13f27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f2b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   13f2f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f33:	48 89 c7             	mov    %rax,%rdi
   13f36:	e8 a1 17 00 00       	call   156dc <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   13f3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f43:	48 89 d6             	mov    %rdx,%rsi
   13f46:	48 89 c7             	mov    %rax,%rdi
   13f49:	e8 99 17 00 00       	call   156e7 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   13f4e:	c9                   	leave
   13f4f:	c3                   	ret

0000000000013f50 <_ZNSt6vectorIjSaIjEE19_M_range_initializeIPKjEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   13f50:	55                   	push   %rbp
   13f51:	48 89 e5             	mov    %rsp,%rbp
   13f54:	53                   	push   %rbx
   13f55:	48 83 ec 38          	sub    $0x38,%rsp
   13f59:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13f5d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13f61:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   13f65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13f69:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13f6d:	48 89 d6             	mov    %rdx,%rsi
   13f70:	48 89 c7             	mov    %rax,%rdi
   13f73:	e8 a7 ff ff ff       	call   13f1f <_ZSt8distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_>
   13f78:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   13f7c:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13f80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13f84:	48 89 c7             	mov    %rax,%rdi
   13f87:	e8 b8 e8 ff ff       	call   12844 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   13f8c:	48 89 c2             	mov    %rax,%rdx
   13f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f93:	48 89 d6             	mov    %rdx,%rsi
   13f96:	48 89 c7             	mov    %rax,%rdi
   13f99:	e8 63 17 00 00       	call   15701 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>
   13f9e:	48 89 c6             	mov    %rax,%rsi
   13fa1:	48 89 df             	mov    %rbx,%rdi
   13fa4:	e8 b9 17 00 00       	call   15762 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>
   13fa9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13fad:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   13fb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fb4:	48 8b 00             	mov    (%rax),%rax
   13fb7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13fbb:	48 c1 e2 02          	shl    $0x2,%rdx
   13fbf:	48 01 c2             	add    %rax,%rdx
   13fc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fc6:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   13fca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fce:	48 89 c7             	mov    %rax,%rdi
   13fd1:	e8 6e e8 ff ff       	call   12844 <_ZNSt12_Vector_baseIjSaIjEE19_M_get_Tp_allocatorEv>
   13fd6:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   13fd9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13fdd:	48 8b 10             	mov    (%rax),%rdx
   13fe0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   13fe4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13fe8:	48 89 c7             	mov    %rax,%rdi
   13feb:	e8 a5 17 00 00       	call   15795 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
   13ff0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13ff4:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   13ff8:	90                   	nop
   13ff9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13ffd:	c9                   	leave
   13ffe:	c3                   	ret
   13fff:	90                   	nop

0000000000014000 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14000:	55                   	push   %rbp
   14001:	48 89 e5             	mov    %rsp,%rbp
   14004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1400c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14010:	5d                   	pop    %rbp
   14011:	c3                   	ret

0000000000014012 <_ZNKSt6vectorIjSaIjEE11_M_data_ptrIjEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   14012:	55                   	push   %rbp
   14013:	48 89 e5             	mov    %rsp,%rbp
   14016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1401a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1401e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14022:	5d                   	pop    %rbp
   14023:	c3                   	ret

0000000000014024 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14024:	55                   	push   %rbp
   14025:	48 89 e5             	mov    %rsp,%rbp
   14028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1402c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14030:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1403b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14042:	00 
   14043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14047:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1404e:	00 
	{ }
   1404f:	90                   	nop
   14050:	5d                   	pop    %rbp
   14051:	c3                   	ret

0000000000014052 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   14052:	55                   	push   %rbp
   14053:	48 89 e5             	mov    %rsp,%rbp
   14056:	48 83 ec 20          	sub    $0x20,%rsp
   1405a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1405e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14062:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   14066:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1406b:	74 17                	je     14084 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1406d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14071:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14075:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14079:	48 89 ce             	mov    %rcx,%rsi
   1407c:	48 89 c7             	mov    %rax,%rdi
   1407f:	e8 42 17 00 00       	call   157c6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   14084:	90                   	nop
   14085:	c9                   	leave
   14086:	c3                   	ret
   14087:	90                   	nop

0000000000014088 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   14088:	55                   	push   %rbp
   14089:	48 89 e5             	mov    %rsp,%rbp
   1408c:	48 83 ec 10          	sub    $0x10,%rsp
   14090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14094:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14098:	48 89 c7             	mov    %rax,%rdi
   1409b:	e8 54 17 00 00       	call   157f4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
   140a0:	90                   	nop
   140a1:	c9                   	leave
   140a2:	c3                   	ret
   140a3:	90                   	nop

00000000000140a4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   140a4:	55                   	push   %rbp
   140a5:	48 89 e5             	mov    %rsp,%rbp
   140a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   140ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   140b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140bb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   140c2:	00 
   140c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140c7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   140ce:	00 
	{ }
   140cf:	90                   	nop
   140d0:	5d                   	pop    %rbp
   140d1:	c3                   	ret

00000000000140d2 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   140d2:	55                   	push   %rbp
   140d3:	48 89 e5             	mov    %rsp,%rbp
   140d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140da:	90                   	nop
   140db:	5d                   	pop    %rbp
   140dc:	c3                   	ret
   140dd:	90                   	nop

00000000000140de <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   140de:	55                   	push   %rbp
   140df:	48 89 e5             	mov    %rsp,%rbp
   140e2:	48 83 ec 20          	sub    $0x20,%rsp
   140e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   140ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   140f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   140f7:	74 17                	je     14110 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   140f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14101:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14105:	48 89 ce             	mov    %rcx,%rsi
   14108:	48 89 c7             	mov    %rax,%rdi
   1410b:	e8 ef 16 00 00       	call   157ff <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
   14110:	90                   	nop
   14111:	c9                   	leave
   14112:	c3                   	ret
   14113:	90                   	nop

0000000000014114 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   14114:	55                   	push   %rbp
   14115:	48 89 e5             	mov    %rsp,%rbp
   14118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1411c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14120:	5d                   	pop    %rbp
   14121:	c3                   	ret

0000000000014122 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   14122:	55                   	push   %rbp
   14123:	48 89 e5             	mov    %rsp,%rbp
   14126:	48 83 ec 20          	sub    $0x20,%rsp
   1412a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1412e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14132:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   14136:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1413a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1413e:	48 89 d6             	mov    %rdx,%rsi
   14141:	48 89 c7             	mov    %rax,%rdi
   14144:	e8 e4 16 00 00       	call   1582d <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
   14149:	90                   	nop
   1414a:	c9                   	leave
   1414b:	c3                   	ret

000000000001414c <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1414c:	55                   	push   %rbp
   1414d:	48 89 e5             	mov    %rsp,%rbp
   14150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14154:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14158:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1415c:	48 8b 10             	mov    (%rax),%rdx
   1415f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14163:	48 89 10             	mov    %rdx,(%rax)
   14166:	90                   	nop
   14167:	5d                   	pop    %rbp
   14168:	c3                   	ret
   14169:	90                   	nop

000000000001416a <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1416a:	55                   	push   %rbp
   1416b:	48 89 e5             	mov    %rsp,%rbp
   1416e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14176:	5d                   	pop    %rbp
   14177:	c3                   	ret

0000000000014178 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14178:	55                   	push   %rbp
   14179:	48 89 e5             	mov    %rsp,%rbp
   1417c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14180:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14184:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14188:	48 8b 10             	mov    (%rax),%rdx
   1418b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1418f:	48 89 10             	mov    %rdx,(%rax)
   14192:	90                   	nop
   14193:	5d                   	pop    %rbp
   14194:	c3                   	ret
   14195:	90                   	nop

0000000000014196 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14196:	55                   	push   %rbp
   14197:	48 89 e5             	mov    %rsp,%rbp
   1419a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1419e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141a2:	5d                   	pop    %rbp
   141a3:	c3                   	ret

00000000000141a4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   141a4:	55                   	push   %rbp
   141a5:	48 89 e5             	mov    %rsp,%rbp
   141a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   141b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   141b4:	48 8b 10             	mov    (%rax),%rdx
   141b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141bb:	48 89 10             	mov    %rdx,(%rax)
   141be:	90                   	nop
   141bf:	5d                   	pop    %rbp
   141c0:	c3                   	ret
   141c1:	90                   	nop

00000000000141c2 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   141c2:	55                   	push   %rbp
   141c3:	48 89 e5             	mov    %rsp,%rbp
   141c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   141ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141ce:	5d                   	pop    %rbp
   141cf:	c3                   	ret

00000000000141d0 <_ZNSt16allocator_traitsISaIjEE10deallocateERS0_Pjm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   141d0:	55                   	push   %rbp
   141d1:	48 89 e5             	mov    %rsp,%rbp
   141d4:	48 83 ec 20          	sub    $0x20,%rsp
   141d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   141e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   141e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   141e8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   141ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f0:	48 89 ce             	mov    %rcx,%rsi
   141f3:	48 89 c7             	mov    %rax,%rdi
   141f6:	e8 59 16 00 00       	call   15854 <_ZNSt15__new_allocatorIjE10deallocateEPjm>
   141fb:	90                   	nop
   141fc:	c9                   	leave
   141fd:	c3                   	ret

00000000000141fe <_ZSt8_DestroyIPjEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   141fe:	55                   	push   %rbp
   141ff:	48 89 e5             	mov    %rsp,%rbp
   14202:	48 83 ec 10          	sub    $0x10,%rsp
   14206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1420a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1420e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14216:	48 89 d6             	mov    %rdx,%rsi
   14219:	48 89 c7             	mov    %rax,%rdi
   1421c:	e8 64 16 00 00       	call   15885 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>
    }
   14221:	90                   	nop
   14222:	c9                   	leave
   14223:	c3                   	ret

0000000000014224 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   14224:	55                   	push   %rbp
   14225:	48 89 e5             	mov    %rsp,%rbp
   14228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1422c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14230:	48 8b 40 08          	mov    0x8(%rax),%rax
   14234:	5d                   	pop    %rbp
   14235:	c3                   	ret

0000000000014236 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   14236:	55                   	push   %rbp
   14237:	48 89 e5             	mov    %rsp,%rbp
   1423a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1423e:	90                   	nop
   1423f:	5d                   	pop    %rbp
   14240:	c3                   	ret

0000000000014241 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   14241:	55                   	push   %rbp
   14242:	48 89 e5             	mov    %rsp,%rbp
   14245:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14249:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1424d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14251:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14255:	48 c1 f8 03          	sar    $0x3,%rax
    }
   14259:	5d                   	pop    %rbp
   1425a:	c3                   	ret

000000000001425b <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1425b:	55                   	push   %rbp
   1425c:	48 89 e5             	mov    %rsp,%rbp
   1425f:	48 83 ec 20          	sub    $0x20,%rsp
   14263:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14267:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1426b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1426f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   14273:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14277:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1427b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1427f:	48 89 ce             	mov    %rcx,%rsi
   14282:	48 89 c7             	mov    %rax,%rdi
   14285:	e8 35 16 00 00       	call   158bf <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   1428a:	c9                   	leave
   1428b:	c3                   	ret

000000000001428c <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1428c:	55                   	push   %rbp
   1428d:	48 89 e5             	mov    %rsp,%rbp
   14290:	48 83 ec 10          	sub    $0x10,%rsp
   14294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14298:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1429c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   142a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142a4:	48 89 d6             	mov    %rdx,%rsi
   142a7:	48 89 c7             	mov    %rax,%rdi
   142aa:	e8 45 16 00 00       	call   158f4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   142af:	90                   	nop
   142b0:	c9                   	leave
   142b1:	c3                   	ret

00000000000142b2 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   142b2:	55                   	push   %rbp
   142b3:	48 89 e5             	mov    %rsp,%rbp
   142b6:	53                   	push   %rbx
   142b7:	48 83 ec 28          	sub    $0x28,%rsp
   142bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   142bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   142c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   142c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   142cb:	48 89 c6             	mov    %rax,%rsi
   142ce:	bf 08 00 00 00       	mov    $0x8,%edi
   142d3:	e8 61 0d ff ff       	call   5039 <_ZnwmPv>
   142d8:	48 89 c3             	mov    %rax,%rbx
   142db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   142df:	48 89 c7             	mov    %rax,%rdi
   142e2:	e8 39 e7 ff ff       	call   12a20 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   142e7:	48 8b 00             	mov    (%rax),%rax
   142ea:	48 89 03             	mov    %rax,(%rbx)
   142ed:	90                   	nop
   142ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   142f2:	c9                   	leave
   142f3:	c3                   	ret

00000000000142f4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   142f4:	55                   	push   %rbp
   142f5:	48 89 e5             	mov    %rsp,%rbp
   142f8:	53                   	push   %rbx
   142f9:	48 83 ec 38          	sub    $0x38,%rsp
   142fd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14301:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14305:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   14309:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1430d:	48 89 c7             	mov    %rax,%rdi
   14310:	e8 ef 15 00 00       	call   15904 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   14315:	48 89 c3             	mov    %rax,%rbx
   14318:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1431c:	48 89 c7             	mov    %rax,%rdi
   1431f:	e8 d8 d1 ff ff       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   14324:	48 29 c3             	sub    %rax,%rbx
   14327:	48 89 da             	mov    %rbx,%rdx
   1432a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1432e:	48 39 c2             	cmp    %rax,%rdx
   14331:	0f 92 c0             	setb   %al
   14334:	84 c0                	test   %al,%al
   14336:	74 0c                	je     14344 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   14338:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1433c:	48 89 c7             	mov    %rax,%rdi
   1433f:	e8 6c fe fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   14344:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14348:	48 89 c7             	mov    %rax,%rdi
   1434b:	e8 ac d1 ff ff       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   14350:	48 89 c3             	mov    %rax,%rbx
   14353:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14357:	48 89 c7             	mov    %rax,%rdi
   1435a:	e8 9d d1 ff ff       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1435f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14363:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   14367:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1436b:	48 89 d6             	mov    %rdx,%rsi
   1436e:	48 89 c7             	mov    %rax,%rdi
   14371:	e8 1e 15 00 00       	call   15894 <_ZSt3maxImERKT_S2_S2_>
   14376:	48 8b 00             	mov    (%rax),%rax
   14379:	48 01 d8             	add    %rbx,%rax
   1437c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   14380:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14384:	48 89 c7             	mov    %rax,%rdi
   14387:	e8 70 d1 ff ff       	call   114fc <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   1438c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14390:	72 12                	jb     143a4 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   14392:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14396:	48 89 c7             	mov    %rax,%rdi
   14399:	e8 66 15 00 00       	call   15904 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1439e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   143a2:	73 0e                	jae    143b2 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   143a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143a8:	48 89 c7             	mov    %rax,%rdi
   143ab:	e8 54 15 00 00       	call   15904 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   143b0:	eb 04                	jmp    143b6 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   143b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   143b6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   143ba:	c9                   	leave
   143bb:	c3                   	ret

00000000000143bc <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   143bc:	55                   	push   %rbp
   143bd:	48 89 e5             	mov    %rsp,%rbp
   143c0:	53                   	push   %rbx
   143c1:	48 83 ec 18          	sub    $0x18,%rsp
   143c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   143c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   143cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   143d1:	48 89 c7             	mov    %rax,%rdi
   143d4:	e8 39 e6 ff ff       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   143d9:	48 8b 18             	mov    (%rax),%rbx
   143dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   143e0:	48 89 c7             	mov    %rax,%rdi
   143e3:	e8 2a e6 ff ff       	call   12a12 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   143e8:	48 8b 00             	mov    (%rax),%rax
   143eb:	48 89 da             	mov    %rbx,%rdx
   143ee:	48 29 c2             	sub    %rax,%rdx
   143f1:	48 89 d0             	mov    %rdx,%rax
   143f4:	48 c1 f8 03          	sar    $0x3,%rax
   143f8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   143fc:	c9                   	leave
   143fd:	c3                   	ret

00000000000143fe <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   143fe:	55                   	push   %rbp
   143ff:	48 89 e5             	mov    %rsp,%rbp
   14402:	48 83 ec 20          	sub    $0x20,%rsp
   14406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1440a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1440e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   14412:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   14416:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1441a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1441e:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   14422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14426:	48 89 c7             	mov    %rax,%rdi
   14429:	e8 f8 14 00 00       	call   15926 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1442e:	c9                   	leave
   1442f:	c3                   	ret

0000000000014430 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   14430:	55                   	push   %rbp
   14431:	48 89 e5             	mov    %rsp,%rbp
   14434:	48 83 ec 20          	sub    $0x20,%rsp
   14438:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1443c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   14440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14444:	48 8b 00             	mov    (%rax),%rax
   14447:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1444b:	48 c1 e2 03          	shl    $0x3,%rdx
   1444f:	48 f7 da             	neg    %rdx
   14452:	48 01 d0             	add    %rdx,%rax
   14455:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   14459:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1445d:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   14461:	48 89 d6             	mov    %rdx,%rsi
   14464:	48 89 c7             	mov    %rax,%rdi
   14467:	e8 88 e5 ff ff       	call   129f4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1446c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14470:	c9                   	leave
   14471:	c3                   	ret

0000000000014472 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   14472:	55                   	push   %rbp
   14473:	48 89 e5             	mov    %rsp,%rbp
   14476:	53                   	push   %rbx
   14477:	48 83 ec 28          	sub    $0x28,%rsp
   1447b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1447f:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   14483:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   14487:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1448b:	48 89 c7             	mov    %rax,%rdi
   1448e:	e8 d5 e7 ff ff       	call   12c68 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   14493:	48 89 c6             	mov    %rax,%rsi
   14496:	48 89 df             	mov    %rbx,%rdi
   14499:	e8 ec 14 00 00       	call   1598a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   1449e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144a2:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   144a6:	90                   	nop
   144a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   144ab:	c9                   	leave
   144ac:	c3                   	ret
   144ad:	90                   	nop

00000000000144ae <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   144ae:	55                   	push   %rbp
   144af:	48 89 e5             	mov    %rsp,%rbp
   144b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   144b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ba:	5d                   	pop    %rbp
   144bb:	c3                   	ret

00000000000144bc <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   144bc:	55                   	push   %rbp
   144bd:	48 89 e5             	mov    %rsp,%rbp
   144c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   144c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   144cc:	8b 10                	mov    (%rax),%edx
   144ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144d2:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   144d4:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   144d8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   144dc:	48 8b 46 04          	mov    0x4(%rsi),%rax
   144e0:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   144e4:	48 89 41 04          	mov    %rax,0x4(%rcx)
   144e8:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   144ec:	48 8b 46 14          	mov    0x14(%rsi),%rax
   144f0:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   144f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   144f8:	5d                   	pop    %rbp
   144f9:	c3                   	ret

00000000000144fa <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   144fa:	55                   	push   %rbp
   144fb:	48 89 e5             	mov    %rsp,%rbp
   144fe:	53                   	push   %rbx
   144ff:	48 83 ec 18          	sub    $0x18,%rsp
   14503:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14507:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   1450b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1450f:	48 89 c7             	mov    %rax,%rdi
   14512:	e8 c5 14 00 00       	call   159dc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   14517:	48 89 c3             	mov    %rax,%rbx
   1451a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1451e:	48 89 c7             	mov    %rax,%rdi
   14521:	e8 a8 14 00 00       	call   159ce <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   14526:	48 89 de             	mov    %rbx,%rsi
   14529:	48 89 c7             	mov    %rax,%rdi
   1452c:	e8 b9 14 00 00       	call   159ea <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   14531:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14535:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   14539:	90                   	nop
   1453a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1453e:	c9                   	leave
   1453f:	c3                   	ret

0000000000014540 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   14540:	55                   	push   %rbp
   14541:	48 89 e5             	mov    %rsp,%rbp
   14544:	48 83 ec 10          	sub    $0x10,%rsp
   14548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   1454c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14550:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   14554:	84 c0                	test   %al,%al
   14556:	74 0c                	je     14564 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   14558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1455c:	48 89 c7             	mov    %rax,%rdi
   1455f:	e8 e0 14 00 00       	call   15a44 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   14564:	90                   	nop
   14565:	c9                   	leave
   14566:	c3                   	ret
   14567:	90                   	nop

0000000000014568 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   14568:	55                   	push   %rbp
   14569:	48 89 e5             	mov    %rsp,%rbp
   1456c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14570:	90                   	nop
   14571:	5d                   	pop    %rbp
   14572:	c3                   	ret

0000000000014573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14573:	55                   	push   %rbp
   14574:	48 89 e5             	mov    %rsp,%rbp
   14577:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   1457b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1457f:	48 8b 40 18          	mov    0x18(%rax),%rax
   14583:	5d                   	pop    %rbp
   14584:	c3                   	ret

0000000000014585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14585:	55                   	push   %rbp
   14586:	48 89 e5             	mov    %rsp,%rbp
   14589:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1458d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14591:	48 8b 40 10          	mov    0x10(%rax),%rax
   14595:	5d                   	pop    %rbp
   14596:	c3                   	ret
   14597:	90                   	nop

0000000000014598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14598:	55                   	push   %rbp
   14599:	48 89 e5             	mov    %rsp,%rbp
   1459c:	48 83 ec 10          	sub    $0x10,%rsp
   145a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   145a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   145ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b0:	48 89 d6             	mov    %rdx,%rsi
   145b3:	48 89 c7             	mov    %rax,%rdi
   145b6:	e8 9d 14 00 00       	call   15a58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   145bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   145bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145c3:	48 89 d6             	mov    %rdx,%rsi
   145c6:	48 89 c7             	mov    %rax,%rdi
   145c9:	e8 c8 14 00 00       	call   15a96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   145ce:	90                   	nop
   145cf:	c9                   	leave
   145d0:	c3                   	ret
   145d1:	90                   	nop

00000000000145d2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   145d2:	55                   	push   %rbp
   145d3:	48 89 e5             	mov    %rsp,%rbp
   145d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   145da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145de:	48 8b 40 10          	mov    0x10(%rax),%rax
   145e2:	5d                   	pop    %rbp
   145e3:	c3                   	ret

00000000000145e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   145e4:	55                   	push   %rbp
   145e5:	48 89 e5             	mov    %rsp,%rbp
   145e8:	53                   	push   %rbx
   145e9:	48 83 ec 18          	sub    $0x18,%rsp
   145ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   145f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   145f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   145f9:	48 89 c7             	mov    %rax,%rdi
   145fc:	e8 cb 14 00 00       	call   15acc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14601:	48 89 c3             	mov    %rax,%rbx
   14604:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14608:	48 89 c7             	mov    %rax,%rdi
   1460b:	e8 26 e8 ff ff       	call   12e36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   14610:	48 89 c6             	mov    %rax,%rsi
   14613:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1461b:	48 89 d1             	mov    %rdx,%rcx
   1461e:	48 89 da             	mov    %rbx,%rdx
   14621:	48 89 c7             	mov    %rax,%rdi
   14624:	e8 b5 14 00 00       	call   15ade <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   14629:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1462d:	c9                   	leave
   1462e:	c3                   	ret
   1462f:	90                   	nop

0000000000014630 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14630:	55                   	push   %rbp
   14631:	48 89 e5             	mov    %rsp,%rbp
   14634:	48 83 ec 20          	sub    $0x20,%rsp
   14638:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   1463c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14640:	48 8d 50 08          	lea    0x8(%rax),%rdx
   14644:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14648:	48 89 d6             	mov    %rdx,%rsi
   1464b:	48 89 c7             	mov    %rax,%rdi
   1464e:	e8 39 06 00 00       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14657:	c9                   	leave
   14658:	c3                   	ret
   14659:	90                   	nop

000000000001465a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   1465a:	55                   	push   %rbp
   1465b:	48 89 e5             	mov    %rsp,%rbp
   1465e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   14662:	90                   	nop
   14663:	5d                   	pop    %rbp
   14664:	c3                   	ret
   14665:	90                   	nop

0000000000014666 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   14666:	55                   	push   %rbp
   14667:	48 89 e5             	mov    %rsp,%rbp
   1466a:	48 83 ec 10          	sub    $0x10,%rsp
   1466e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   14672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14676:	48 83 c0 20          	add    $0x20,%rax
   1467a:	48 89 c7             	mov    %rax,%rdi
   1467d:	e8 f2 14 00 00       	call   15b74 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   14682:	c9                   	leave
   14683:	c3                   	ret

0000000000014684 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   14684:	55                   	push   %rbp
   14685:	48 89 e5             	mov    %rsp,%rbp
   14688:	48 83 ec 10          	sub    $0x10,%rsp
   1468c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14690:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   14694:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1469c:	48 89 d6             	mov    %rdx,%rsi
   1469f:	48 89 c7             	mov    %rax,%rdi
   146a2:	e8 89 f9 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   146a7:	c1 e8 1f             	shr    $0x1f,%eax
   146aa:	c9                   	leave
   146ab:	c3                   	ret

00000000000146ac <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   146ac:	55                   	push   %rbp
   146ad:	48 89 e5             	mov    %rsp,%rbp
   146b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   146b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146b8:	5d                   	pop    %rbp
   146b9:	c3                   	ret

00000000000146ba <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   146ba:	55                   	push   %rbp
   146bb:	48 89 e5             	mov    %rsp,%rbp
   146be:	53                   	push   %rbx
   146bf:	48 83 ec 18          	sub    $0x18,%rsp
   146c3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146c7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   146cb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   146cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146d3:	48 89 c7             	mov    %rax,%rdi
   146d6:	e8 d1 ff ff ff       	call   146ac <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   146db:	48 89 c6             	mov    %rax,%rsi
   146de:	48 89 df             	mov    %rbx,%rdi
   146e1:	e8 a8 14 00 00       	call   15b8e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   146e6:	90                   	nop
   146e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   146eb:	c9                   	leave
   146ec:	c3                   	ret

00000000000146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   146ed:	55                   	push   %rbp
   146ee:	48 89 e5             	mov    %rsp,%rbp
   146f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   146f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146f9:	5d                   	pop    %rbp
   146fa:	c3                   	ret

00000000000146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   146fb:	55                   	push   %rbp
   146fc:	48 89 e5             	mov    %rsp,%rbp
   146ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14707:	5d                   	pop    %rbp
   14708:	c3                   	ret

0000000000014709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14709:	55                   	push   %rbp
   1470a:	48 89 e5             	mov    %rsp,%rbp
   1470d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14715:	5d                   	pop    %rbp
   14716:	c3                   	ret
   14717:	90                   	nop

0000000000014718 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   14718:	55                   	push   %rbp
   14719:	48 89 e5             	mov    %rsp,%rbp
   1471c:	41 54                	push   %r12
   1471e:	53                   	push   %rbx
   1471f:	48 83 ec 30          	sub    $0x30,%rsp
   14723:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14727:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1472b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1472f:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14733:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   14737:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1473b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1473f:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   14742:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14746:	48 89 c7             	mov    %rax,%rdi
   14749:	e8 bb ff ff ff       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1474e:	49 89 c4             	mov    %rax,%r12
   14751:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14755:	48 89 c7             	mov    %rax,%rdi
   14758:	e8 9e ff ff ff       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1475d:	48 89 c3             	mov    %rax,%rbx
   14760:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14764:	48 89 c7             	mov    %rax,%rdi
   14767:	e8 81 ff ff ff       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1476c:	48 89 c6             	mov    %rax,%rsi
   1476f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14773:	4c 89 e1             	mov    %r12,%rcx
   14776:	48 89 da             	mov    %rbx,%rdx
   14779:	48 89 c7             	mov    %rax,%rdi
   1477c:	e8 41 14 00 00       	call   15bc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   14781:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14785:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   14789:	90                   	nop
   1478a:	48 83 c4 30          	add    $0x30,%rsp
   1478e:	5b                   	pop    %rbx
   1478f:	41 5c                	pop    %r12
   14791:	5d                   	pop    %rbp
   14792:	c3                   	ret
   14793:	90                   	nop

0000000000014794 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   14794:	55                   	push   %rbp
   14795:	48 89 e5             	mov    %rsp,%rbp
   14798:	48 83 ec 10          	sub    $0x10,%rsp
   1479c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   147a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147a4:	48 8b 40 08          	mov    0x8(%rax),%rax
   147a8:	48 85 c0             	test   %rax,%rax
   147ab:	74 1a                	je     147c7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   147ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147b1:	48 8b 00             	mov    (%rax),%rax
   147b4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   147b8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   147bc:	48 89 d6             	mov    %rdx,%rsi
   147bf:	48 89 c7             	mov    %rax,%rdi
   147c2:	e8 d1 fd ff ff       	call   14598 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   147c7:	90                   	nop
   147c8:	c9                   	leave
   147c9:	c3                   	ret

00000000000147ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   147ca:	55                   	push   %rbp
   147cb:	48 89 e5             	mov    %rsp,%rbp
   147ce:	53                   	push   %rbx
   147cf:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   147d6:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   147dd:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   147e4:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   147eb:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   147f2:	48 89 c7             	mov    %rax,%rdi
   147f5:	e8 44 14 00 00       	call   15c3e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   147fa:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   14801:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14808:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1480f:	48 89 c7             	mov    %rax,%rdi
   14812:	e8 b5 12 00 00       	call   15acc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14817:	48 39 c3             	cmp    %rax,%rbx
   1481a:	0f 94 c0             	sete   %al
   1481d:	84 c0                	test   %al,%al
   1481f:	0f 84 c8 00 00 00    	je     148ed <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   14825:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1482c:	48 89 c7             	mov    %rax,%rdi
   1482f:	e8 32 14 00 00       	call   15c66 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   14834:	48 85 c0             	test   %rax,%rax
   14837:	74 44                	je     1487d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   14839:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14840:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14847:	48 89 c7             	mov    %rax,%rdi
   1484a:	e8 29 14 00 00       	call   15c78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1484f:	48 8b 00             	mov    (%rax),%rax
   14852:	48 89 c7             	mov    %rax,%rdi
   14855:	e8 30 14 00 00       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   1485a:	48 89 c1             	mov    %rax,%rcx
   1485d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14864:	48 89 c2             	mov    %rax,%rdx
   14867:	48 89 ce             	mov    %rcx,%rsi
   1486a:	48 89 df             	mov    %rbx,%rdi
   1486d:	e8 a6 e6 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14872:	84 c0                	test   %al,%al
   14874:	74 07                	je     1487d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   14876:	b8 01 00 00 00       	mov    $0x1,%eax
   1487b:	eb 05                	jmp    14882 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   1487d:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   14882:	84 c0                	test   %al,%al
   14884:	74 49                	je     148cf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   14886:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1488d:	48 89 c7             	mov    %rax,%rdi
   14890:	e8 e3 13 00 00       	call   15c78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   14895:	48 89 c2             	mov    %rax,%rdx
   14898:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   1489f:	00 00 00 00 
   148a3:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   148aa:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   148b1:	48 89 ce             	mov    %rcx,%rsi
   148b4:	48 89 c7             	mov    %rax,%rdi
   148b7:	e8 e8 13 00 00       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   148bc:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   148c3:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   148ca:	e9 43 03 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   148cf:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   148d6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   148dd:	48 89 d6             	mov    %rdx,%rsi
   148e0:	48 89 c7             	mov    %rax,%rdi
   148e3:	e8 ec 13 00 00       	call   15cd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   148e8:	e9 25 03 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   148ed:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   148f4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   148fb:	48 89 c7             	mov    %rax,%rdi
   148fe:	e8 87 13 00 00       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14903:	48 89 c2             	mov    %rax,%rdx
   14906:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   1490d:	48 89 c6             	mov    %rax,%rsi
   14910:	48 89 df             	mov    %rbx,%rdi
   14913:	e8 00 e6 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14918:	84 c0                	test   %al,%al
   1491a:	0f 84 66 01 00 00    	je     14a86 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   14920:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14927:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   1492e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14935:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1493c:	48 89 c7             	mov    %rax,%rdi
   1493f:	e8 06 15 00 00       	call   15e4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   14944:	48 8b 00             	mov    (%rax),%rax
   14947:	48 39 c3             	cmp    %rax,%rbx
   1494a:	0f 94 c0             	sete   %al
   1494d:	84 c0                	test   %al,%al
   1494f:	74 4c                	je     1499d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   14951:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14958:	48 89 c7             	mov    %rax,%rdi
   1495b:	e8 ea 14 00 00       	call   15e4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   14960:	48 89 c3             	mov    %rax,%rbx
   14963:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1496a:	48 89 c7             	mov    %rax,%rdi
   1496d:	e8 d8 14 00 00       	call   15e4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   14972:	48 89 c1             	mov    %rax,%rcx
   14975:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   1497c:	48 89 da             	mov    %rbx,%rdx
   1497f:	48 89 ce             	mov    %rcx,%rsi
   14982:	48 89 c7             	mov    %rax,%rdi
   14985:	e8 d2 14 00 00       	call   15e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1498a:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   14991:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   14998:	e9 75 02 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   1499d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   149a4:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   149ab:	48 89 c7             	mov    %rax,%rdi
   149ae:	e8 ed 14 00 00       	call   15ea0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   149b3:	48 8b 00             	mov    (%rax),%rax
   149b6:	48 89 c7             	mov    %rax,%rdi
   149b9:	e8 cc 12 00 00       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   149be:	48 89 c1             	mov    %rax,%rcx
   149c1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   149c8:	48 89 c2             	mov    %rax,%rdx
   149cb:	48 89 ce             	mov    %rcx,%rsi
   149ce:	48 89 df             	mov    %rbx,%rdi
   149d1:	e8 42 e5 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   149d6:	84 c0                	test   %al,%al
   149d8:	0f 84 8a 00 00 00    	je     14a68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   149de:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   149e5:	48 89 c7             	mov    %rax,%rdi
   149e8:	e8 86 fb ff ff       	call   14573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   149ed:	48 85 c0             	test   %rax,%rax
   149f0:	0f 94 c0             	sete   %al
   149f3:	84 c0                	test   %al,%al
   149f5:	74 3e                	je     14a35 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   149f7:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   149fe:	00 00 00 00 
   14a02:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   14a09:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   14a10:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   14a17:	48 89 ce             	mov    %rcx,%rsi
   14a1a:	48 89 c7             	mov    %rax,%rdi
   14a1d:	e8 82 12 00 00       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14a22:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   14a29:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   14a30:	e9 dd 01 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   14a35:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   14a3c:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   14a43:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   14a4a:	48 89 ce             	mov    %rcx,%rsi
   14a4d:	48 89 c7             	mov    %rax,%rdi
   14a50:	e8 07 14 00 00       	call   15e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14a55:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14a5c:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14a63:	e9 aa 01 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   14a68:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14a6f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14a76:	48 89 d6             	mov    %rdx,%rsi
   14a79:	48 89 c7             	mov    %rax,%rdi
   14a7c:	e8 53 12 00 00       	call   15cd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   14a81:	e9 8c 01 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   14a86:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14a8d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14a94:	48 89 c7             	mov    %rax,%rdi
   14a97:	e8 ee 11 00 00       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14a9c:	48 89 c1             	mov    %rax,%rcx
   14a9f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14aa6:	48 89 c2             	mov    %rax,%rdx
   14aa9:	48 89 ce             	mov    %rcx,%rsi
   14aac:	48 89 df             	mov    %rbx,%rdi
   14aaf:	e8 64 e4 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14ab4:	84 c0                	test   %al,%al
   14ab6:	0f 84 2c 01 00 00    	je     14be8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   14abc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14ac3:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   14aca:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14ad1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14ad8:	48 89 c7             	mov    %rax,%rdi
   14adb:	e8 98 11 00 00       	call   15c78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   14ae0:	48 8b 00             	mov    (%rax),%rax
   14ae3:	48 39 c3             	cmp    %rax,%rbx
   14ae6:	0f 94 c0             	sete   %al
   14ae9:	84 c0                	test   %al,%al
   14aeb:	74 3a                	je     14b27 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   14aed:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14af4:	48 89 c7             	mov    %rax,%rdi
   14af7:	e8 7c 11 00 00       	call   15c78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   14afc:	48 89 c2             	mov    %rax,%rdx
   14aff:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   14b06:	00 
   14b07:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   14b0b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   14b0f:	48 89 ce             	mov    %rcx,%rsi
   14b12:	48 89 c7             	mov    %rax,%rdi
   14b15:	e8 8a 11 00 00       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14b1a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14b1e:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   14b22:	e9 eb 00 00 00       	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   14b27:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14b2e:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   14b35:	48 89 c7             	mov    %rax,%rdi
   14b38:	e8 8b 13 00 00       	call   15ec8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   14b3d:	48 8b 00             	mov    (%rax),%rax
   14b40:	48 89 c7             	mov    %rax,%rdi
   14b43:	e8 42 11 00 00       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14b48:	48 89 c2             	mov    %rax,%rdx
   14b4b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14b52:	48 89 c6             	mov    %rax,%rsi
   14b55:	48 89 df             	mov    %rbx,%rdi
   14b58:	e8 bb e3 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14b5d:	84 c0                	test   %al,%al
   14b5f:	74 6c                	je     14bcd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   14b61:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14b68:	48 89 c7             	mov    %rax,%rdi
   14b6b:	e8 03 fa ff ff       	call   14573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   14b70:	48 85 c0             	test   %rax,%rax
   14b73:	0f 94 c0             	sete   %al
   14b76:	84 c0                	test   %al,%al
   14b78:	74 2c                	je     14ba6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   14b7a:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   14b81:	00 
   14b82:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   14b89:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   14b8d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14b91:	48 89 ce             	mov    %rcx,%rsi
   14b94:	48 89 c7             	mov    %rax,%rdi
   14b97:	e8 08 11 00 00       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14b9c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14ba0:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14ba4:	eb 6c                	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   14ba6:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   14bad:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   14bb4:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14bb8:	48 89 ce             	mov    %rcx,%rsi
   14bbb:	48 89 c7             	mov    %rax,%rdi
   14bbe:	e8 99 12 00 00       	call   15e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14bc3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14bc7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14bcb:	eb 45                	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   14bcd:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14bd4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14bdb:	48 89 d6             	mov    %rdx,%rsi
   14bde:	48 89 c7             	mov    %rax,%rdi
   14be1:	e8 ee 10 00 00       	call   15cd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   14be6:	eb 2a                	jmp    14c12 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   14be8:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14bef:	00 
   14bf0:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   14bf4:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   14bfb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14bff:	48 89 ce             	mov    %rcx,%rsi
   14c02:	48 89 c7             	mov    %rax,%rdi
   14c05:	e8 9a 10 00 00       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14c0a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14c0e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   14c12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14c16:	c9                   	leave
   14c17:	c3                   	ret

0000000000014c18 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   14c18:	55                   	push   %rbp
   14c19:	48 89 e5             	mov    %rsp,%rbp
   14c1c:	48 83 ec 10          	sub    $0x10,%rsp
   14c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   14c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c28:	48 8b 40 08          	mov    0x8(%rax),%rax
   14c2c:	48 89 c7             	mov    %rax,%rdi
   14c2f:	e8 bc 12 00 00       	call   15ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14c34:	c9                   	leave
   14c35:	c3                   	ret

0000000000014c36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   14c36:	55                   	push   %rbp
   14c37:	48 89 e5             	mov    %rsp,%rbp
   14c3a:	48 83 ec 30          	sub    $0x30,%rsp
   14c3e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c42:	48 89 d1             	mov    %rdx,%rcx
   14c45:	48 89 f0             	mov    %rsi,%rax
   14c48:	48 89 fa             	mov    %rdi,%rdx
   14c4b:	48 89 ca             	mov    %rcx,%rdx
   14c4e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   14c52:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   14c56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c5a:	48 8b 00             	mov    (%rax),%rax
   14c5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14c61:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   14c65:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14c69:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   14c6d:	48 89 c7             	mov    %rax,%rdi
   14c70:	e8 a7 12 00 00       	call   15f1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   14c75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   14c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c7d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14c84:	00 
	  return __it;
   14c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   14c89:	c9                   	leave
   14c8a:	c3                   	ret
   14c8b:	90                   	nop

0000000000014c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14c8c:	55                   	push   %rbp
   14c8d:	48 89 e5             	mov    %rsp,%rbp
   14c90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   14c98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14ca0:	48 89 10             	mov    %rdx,(%rax)
   14ca3:	90                   	nop
   14ca4:	5d                   	pop    %rbp
   14ca5:	c3                   	ret

0000000000014ca6 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   14ca6:	55                   	push   %rbp
   14ca7:	48 89 e5             	mov    %rsp,%rbp
   14caa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   14cb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14cb6:	48 8b 10             	mov    (%rax),%rdx
   14cb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cbd:	48 89 10             	mov    %rdx,(%rax)
   14cc0:	90                   	nop
   14cc1:	5d                   	pop    %rbp
   14cc2:	c3                   	ret
   14cc3:	90                   	nop

0000000000014cc4 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   14cc4:	55                   	push   %rbp
   14cc5:	48 89 e5             	mov    %rsp,%rbp
   14cc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   14ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cd0:	5d                   	pop    %rbp
   14cd1:	c3                   	ret

0000000000014cd2 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   14cd2:	55                   	push   %rbp
   14cd3:	48 89 e5             	mov    %rsp,%rbp
   14cd6:	48 83 ec 10          	sub    $0x10,%rsp
   14cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   14ce2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14ce6:	48 89 c7             	mov    %rax,%rdi
   14ce9:	e8 f2 12 00 00       	call   15fe0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14cee:	48 89 c2             	mov    %rax,%rdx
   14cf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cf5:	48 89 d6             	mov    %rdx,%rsi
   14cf8:	48 89 c7             	mov    %rax,%rdi
   14cfb:	e8 40 51 ff ff       	call   9e40 <_ZNSaIP9VkImage_TEC1ERKS1_>
   14d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d04:	c9                   	leave
   14d05:	c3                   	ret

0000000000014d06 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14d06:	55                   	push   %rbp
   14d07:	48 89 e5             	mov    %rsp,%rbp
   14d0a:	48 83 ec 10          	sub    $0x10,%rsp
   14d0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   14d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d1e:	48 89 d6             	mov    %rdx,%rsi
   14d21:	48 89 c7             	mov    %rax,%rdi
   14d24:	e8 c5 12 00 00       	call   15fee <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   14d29:	90                   	nop
   14d2a:	c9                   	leave
   14d2b:	c3                   	ret

0000000000014d2c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   14d2c:	55                   	push   %rbp
   14d2d:	48 89 e5             	mov    %rsp,%rbp
   14d30:	48 83 ec 30          	sub    $0x30,%rsp
   14d34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14d38:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   14d3c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14d40:	48 89 c7             	mov    %rax,%rdi
   14d43:	e8 7a 65 ff ff       	call   b2c2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   14d48:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14d4c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14d50:	48 89 d6             	mov    %rdx,%rsi
   14d53:	48 89 c7             	mov    %rax,%rdi
   14d56:	e8 b9 12 00 00       	call   16014 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   14d5b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14d5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14d63:	48 89 d6             	mov    %rdx,%rsi
   14d66:	48 89 c7             	mov    %rax,%rdi
   14d69:	e8 a6 12 00 00       	call   16014 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   14d6e:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   14d72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14d76:	48 89 d6             	mov    %rdx,%rsi
   14d79:	48 89 c7             	mov    %rax,%rdi
   14d7c:	e8 93 12 00 00       	call   16014 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   14d81:	90                   	nop
   14d82:	c9                   	leave
   14d83:	c3                   	ret

0000000000014d84 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   14d84:	55                   	push   %rbp
   14d85:	48 89 e5             	mov    %rsp,%rbp
   14d88:	48 83 ec 10          	sub    $0x10,%rsp
   14d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   14d94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14d98:	48 89 c7             	mov    %rax,%rdi
   14d9b:	e8 b1 12 00 00       	call   16051 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   14da0:	90                   	nop
   14da1:	c9                   	leave
   14da2:	c3                   	ret
   14da3:	90                   	nop

0000000000014da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   14da4:	55                   	push   %rbp
   14da5:	48 89 e5             	mov    %rsp,%rbp
   14da8:	48 83 ec 10          	sub    $0x10,%rsp
   14dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14db4:	48 89 c7             	mov    %rax,%rdi
   14db7:	e8 e6 12 00 00       	call   160a2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14dbc:	48 89 c7             	mov    %rax,%rdi
   14dbf:	e8 9b 12 00 00       	call   1605f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   14dc4:	c9                   	leave
   14dc5:	c3                   	ret

0000000000014dc6 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   14dc6:	55                   	push   %rbp
   14dc7:	48 89 e5             	mov    %rsp,%rbp
   14dca:	48 83 ec 20          	sub    $0x20,%rsp
   14dce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14dd2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14dd6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   14dda:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14de2:	48 89 d6             	mov    %rdx,%rsi
   14de5:	48 89 c7             	mov    %rax,%rdi
   14de8:	e8 c3 12 00 00       	call   160b0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   14ded:	c9                   	leave
   14dee:	c3                   	ret
   14def:	90                   	nop

0000000000014df0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   14df0:	55                   	push   %rbp
   14df1:	48 89 e5             	mov    %rsp,%rbp
   14df4:	53                   	push   %rbx
   14df5:	48 83 ec 38          	sub    $0x38,%rsp
   14df9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14dfd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14e01:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   14e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e09:	48 89 c7             	mov    %rax,%rdi
   14e0c:	e8 93 ff ff ff       	call   14da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14e11:	48 89 c3             	mov    %rax,%rbx
   14e14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e18:	48 89 c7             	mov    %rax,%rdi
   14e1b:	e8 8e d1 ff ff       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14e20:	48 29 c3             	sub    %rax,%rbx
   14e23:	48 89 da             	mov    %rbx,%rdx
   14e26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14e2a:	48 39 c2             	cmp    %rax,%rdx
   14e2d:	0f 92 c0             	setb   %al
   14e30:	84 c0                	test   %al,%al
   14e32:	74 0c                	je     14e40 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   14e34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14e38:	48 89 c7             	mov    %rax,%rdi
   14e3b:	e8 70 f3 fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   14e40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e44:	48 89 c7             	mov    %rax,%rdi
   14e47:	e8 62 d1 ff ff       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14e4c:	48 89 c3             	mov    %rax,%rbx
   14e4f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e53:	48 89 c7             	mov    %rax,%rdi
   14e56:	e8 53 d1 ff ff       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14e5b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14e5f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   14e63:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   14e67:	48 89 d6             	mov    %rdx,%rsi
   14e6a:	48 89 c7             	mov    %rax,%rdi
   14e6d:	e8 22 0a 00 00       	call   15894 <_ZSt3maxImERKT_S2_S2_>
   14e72:	48 8b 00             	mov    (%rax),%rax
   14e75:	48 01 d8             	add    %rbx,%rax
   14e78:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   14e7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e80:	48 89 c7             	mov    %rax,%rdi
   14e83:	e8 26 d1 ff ff       	call   11fae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   14e88:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14e8c:	72 12                	jb     14ea0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   14e8e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e92:	48 89 c7             	mov    %rax,%rdi
   14e95:	e8 0a ff ff ff       	call   14da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14e9a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14e9e:	73 0e                	jae    14eae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14ea0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14ea4:	48 89 c7             	mov    %rax,%rdi
   14ea7:	e8 f8 fe ff ff       	call   14da4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   14eac:	eb 04                	jmp    14eb2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   14eae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   14eb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14eb6:	c9                   	leave
   14eb7:	c3                   	ret

0000000000014eb8 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14eb8:	55                   	push   %rbp
   14eb9:	48 89 e5             	mov    %rsp,%rbp
   14ebc:	48 83 ec 10          	sub    $0x10,%rsp
   14ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ec4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14ec8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14ecd:	74 15                	je     14ee4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   14ecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ed3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14ed7:	48 89 d6             	mov    %rdx,%rsi
   14eda:	48 89 c7             	mov    %rax,%rdi
   14edd:	e8 f7 11 00 00       	call   160d9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   14ee2:	eb 05                	jmp    14ee9 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   14ee4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14ee9:	c9                   	leave
   14eea:	c3                   	ret

0000000000014eeb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   14eeb:	55                   	push   %rbp
   14eec:	48 89 e5             	mov    %rsp,%rbp
   14eef:	48 83 ec 20          	sub    $0x20,%rsp
   14ef3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ef7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14efb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   14eff:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   14f03:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14f07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f0b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   14f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f13:	48 89 c7             	mov    %rax,%rdi
   14f16:	e8 e8 11 00 00       	call   16103 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   14f1b:	c9                   	leave
   14f1c:	c3                   	ret
   14f1d:	90                   	nop

0000000000014f1e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   14f1e:	55                   	push   %rbp
   14f1f:	48 89 e5             	mov    %rsp,%rbp
   14f22:	48 83 ec 10          	sub    $0x10,%rsp
   14f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   14f2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14f32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f36:	48 89 d6             	mov    %rdx,%rsi
   14f39:	48 89 c7             	mov    %rax,%rdi
   14f3c:	e8 25 12 00 00       	call   16166 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   14f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f45:	48 89 c7             	mov    %rax,%rdi
   14f48:	e8 3f 12 00 00       	call   1618c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   14f4d:	90                   	nop
   14f4e:	c9                   	leave
   14f4f:	c3                   	ret

0000000000014f50 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   14f50:	55                   	push   %rbp
   14f51:	48 89 e5             	mov    %rsp,%rbp
   14f54:	48 83 ec 20          	sub    $0x20,%rsp
   14f58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   14f64:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14f69:	74 17                	je     14f82 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   14f6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f73:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14f77:	48 89 ce             	mov    %rcx,%rsi
   14f7a:	48 89 c7             	mov    %rax,%rdi
   14f7d:	e8 38 12 00 00       	call   161ba <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   14f82:	90                   	nop
   14f83:	c9                   	leave
   14f84:	c3                   	ret
   14f85:	90                   	nop

0000000000014f86 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   14f86:	55                   	push   %rbp
   14f87:	48 89 e5             	mov    %rsp,%rbp
   14f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f92:	48 8b 40 08          	mov    0x8(%rax),%rax
   14f96:	5d                   	pop    %rbp
   14f97:	c3                   	ret

0000000000014f98 <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   14f98:	55                   	push   %rbp
   14f99:	48 89 e5             	mov    %rsp,%rbp
   14f9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14fa0:	90                   	nop
   14fa1:	5d                   	pop    %rbp
   14fa2:	c3                   	ret

0000000000014fa3 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   14fa3:	55                   	push   %rbp
   14fa4:	48 89 e5             	mov    %rsp,%rbp
   14fa7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   14faf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14fb3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   14fb7:	48 c1 f8 04          	sar    $0x4,%rax
   14fbb:	48 89 c2             	mov    %rax,%rdx
   14fbe:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   14fc5:	e3 38 8e 
   14fc8:	48 0f af c2          	imul   %rdx,%rax
    }
   14fcc:	5d                   	pop    %rbp
   14fcd:	c3                   	ret

0000000000014fce <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   14fce:	55                   	push   %rbp
   14fcf:	48 89 e5             	mov    %rsp,%rbp
   14fd2:	53                   	push   %rbx
   14fd3:	48 83 ec 28          	sub    $0x28,%rsp
   14fd7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14fdb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   14fdf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14fe3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14fe7:	48 89 d6             	mov    %rdx,%rsi
   14fea:	48 89 c7             	mov    %rax,%rdi
   14fed:	e8 74 11 00 00       	call   16166 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   14ff2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   14ff6:	48 89 c7             	mov    %rax,%rdi
   14ff9:	e8 ea 11 00 00       	call   161e8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   14ffe:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   15002:	0f 92 c3             	setb   %bl
   15005:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15009:	48 89 c7             	mov    %rax,%rdi
   1500c:	e8 09 cd ff ff       	call   11d1a <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   15011:	84 db                	test   %bl,%bl
   15013:	74 0f                	je     15024 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   15015:	48 8d 05 0c 7e 00 00 	lea    0x7e0c(%rip),%rax        # 1ce28 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a8>
   1501c:	48 89 c7             	mov    %rax,%rdi
   1501f:	e8 8c f1 fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   15024:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   15028:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1502c:	c9                   	leave
   1502d:	c3                   	ret

000000000001502e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1502e:	55                   	push   %rbp
   1502f:	48 89 e5             	mov    %rsp,%rbp
   15032:	48 83 ec 10          	sub    $0x10,%rsp
   15036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1503a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1503e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15043:	74 15                	je     1505a <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   15045:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15049:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1504d:	48 89 d6             	mov    %rdx,%rsi
   15050:	48 89 c7             	mov    %rax,%rdi
   15053:	e8 d2 11 00 00       	call   1622a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   15058:	eb 05                	jmp    1505f <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   1505a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1505f:	c9                   	leave
   15060:	c3                   	ret

0000000000015061 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   15061:	55                   	push   %rbp
   15062:	48 89 e5             	mov    %rsp,%rbp
   15065:	48 83 ec 20          	sub    $0x20,%rsp
   15069:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1506d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15071:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15075:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   15079:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1507d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15085:	48 89 ce             	mov    %rcx,%rsi
   15088:	48 89 c7             	mov    %rax,%rdi
   1508b:	e8 c4 11 00 00       	call   16254 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   15090:	c9                   	leave
   15091:	c3                   	ret

0000000000015092 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   15092:	55                   	push   %rbp
   15093:	48 89 e5             	mov    %rsp,%rbp
   15096:	48 83 ec 10          	sub    $0x10,%rsp
   1509a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1509e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   150a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   150a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150aa:	48 89 d6             	mov    %rdx,%rsi
   150ad:	48 89 c7             	mov    %rax,%rdi
   150b0:	e8 d4 11 00 00       	call   16289 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   150b5:	90                   	nop
   150b6:	c9                   	leave
   150b7:	c3                   	ret

00000000000150b8 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   150b8:	55                   	push   %rbp
   150b9:	48 89 e5             	mov    %rsp,%rbp
   150bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150c0:	90                   	nop
   150c1:	5d                   	pop    %rbp
   150c2:	c3                   	ret
   150c3:	90                   	nop

00000000000150c4 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   150c4:	55                   	push   %rbp
   150c5:	48 89 e5             	mov    %rsp,%rbp
   150c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150cc:	90                   	nop
   150cd:	5d                   	pop    %rbp
   150ce:	c3                   	ret

00000000000150cf <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   150cf:	55                   	push   %rbp
   150d0:	48 89 e5             	mov    %rsp,%rbp
   150d3:	53                   	push   %rbx
   150d4:	48 83 ec 28          	sub    $0x28,%rsp
   150d8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   150dc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   150e0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   150e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   150e8:	48 89 d6             	mov    %rdx,%rsi
   150eb:	48 89 c7             	mov    %rax,%rdi
   150ee:	e8 ff 00 00 00       	call   151f2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   150f3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   150f7:	48 89 c7             	mov    %rax,%rdi
   150fa:	e8 99 11 00 00       	call   16298 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   150ff:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   15103:	0f 92 c3             	setb   %bl
   15106:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1510a:	48 89 c7             	mov    %rax,%rdi
   1510d:	e8 ee e5 ff ff       	call   13700 <_ZNSaIP12VkPipeline_TED1Ev>
   15112:	84 db                	test   %bl,%bl
   15114:	74 0f                	je     15125 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   15116:	48 8d 05 0b 7d 00 00 	lea    0x7d0b(%rip),%rax        # 1ce28 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a8>
   1511d:	48 89 c7             	mov    %rax,%rdi
   15120:	e8 8b f0 fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   15125:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   15129:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1512d:	c9                   	leave
   1512e:	c3                   	ret
   1512f:	90                   	nop

0000000000015130 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   15130:	55                   	push   %rbp
   15131:	48 89 e5             	mov    %rsp,%rbp
   15134:	53                   	push   %rbx
   15135:	48 83 ec 28          	sub    $0x28,%rsp
   15139:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1513d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15141:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   15145:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15149:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1514d:	48 89 d6             	mov    %rdx,%rsi
   15150:	48 89 c7             	mov    %rax,%rdi
   15153:	e8 82 11 00 00       	call   162da <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   15158:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1515c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15160:	48 89 d6             	mov    %rdx,%rsi
   15163:	48 89 c7             	mov    %rax,%rdi
   15166:	e8 a1 11 00 00       	call   1630c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   1516b:	eb 1a                	jmp    15187 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   1516d:	48 89 c3             	mov    %rax,%rbx
   15170:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15174:	48 89 c7             	mov    %rax,%rdi
   15177:	e8 86 cc ff ff       	call   11e02 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1517c:	48 89 d8             	mov    %rbx,%rax
   1517f:	48 89 c7             	mov    %rax,%rdi
   15182:	e8 29 f6 fe ff       	call   47b0 <_Unwind_Resume@plt>
   15187:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1518b:	c9                   	leave
   1518c:	c3                   	ret
   1518d:	90                   	nop

000000000001518e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1518e:	55                   	push   %rbp
   1518f:	48 89 e5             	mov    %rsp,%rbp
   15192:	48 83 ec 10          	sub    $0x10,%rsp
   15196:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1519a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1519e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151a2:	48 89 c7             	mov    %rax,%rdi
   151a5:	e8 7e e6 ff ff       	call   13828 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   151aa:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   151ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151b1:	48 8b 00             	mov    (%rax),%rax
   151b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   151b8:	48 89 ce             	mov    %rcx,%rsi
   151bb:	48 89 c7             	mov    %rax,%rdi
   151be:	e8 9f 11 00 00       	call   16362 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   151c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   151c7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   151cb:	90                   	nop
   151cc:	c9                   	leave
   151cd:	c3                   	ret

00000000000151ce <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   151ce:	55                   	push   %rbp
   151cf:	48 89 e5             	mov    %rsp,%rbp
   151d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   151da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151de:	5d                   	pop    %rbp
   151df:	c3                   	ret

00000000000151e0 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   151e0:	55                   	push   %rbp
   151e1:	48 89 e5             	mov    %rsp,%rbp
   151e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   151ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151f0:	5d                   	pop    %rbp
   151f1:	c3                   	ret

00000000000151f2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   151f2:	55                   	push   %rbp
   151f3:	48 89 e5             	mov    %rsp,%rbp
   151f6:	48 83 ec 10          	sub    $0x10,%rsp
   151fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   15202:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1520a:	48 89 d6             	mov    %rdx,%rsi
   1520d:	48 89 c7             	mov    %rax,%rdi
   15210:	e8 77 11 00 00       	call   1638c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   15215:	90                   	nop
   15216:	c9                   	leave
   15217:	c3                   	ret

0000000000015218 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15218:	55                   	push   %rbp
   15219:	48 89 e5             	mov    %rsp,%rbp
   1521c:	48 83 ec 20          	sub    $0x20,%rsp
   15220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15224:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15228:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1522c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15231:	74 17                	je     1524a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   15233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15237:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1523b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1523f:	48 89 ce             	mov    %rcx,%rsi
   15242:	48 89 c7             	mov    %rax,%rdi
   15245:	e8 51 11 00 00       	call   1639b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   1524a:	90                   	nop
   1524b:	c9                   	leave
   1524c:	c3                   	ret

000000000001524d <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1524d:	55                   	push   %rbp
   1524e:	48 89 e5             	mov    %rsp,%rbp
   15251:	48 83 ec 10          	sub    $0x10,%rsp
   15255:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15259:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1525d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15265:	48 89 d6             	mov    %rdx,%rsi
   15268:	48 89 c7             	mov    %rax,%rdi
   1526b:	e8 59 11 00 00       	call   163c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   15270:	90                   	nop
   15271:	c9                   	leave
   15272:	c3                   	ret
   15273:	90                   	nop

0000000000015274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   15274:	55                   	push   %rbp
   15275:	48 89 e5             	mov    %rsp,%rbp
   15278:	48 83 ec 10          	sub    $0x10,%rsp
   1527c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15284:	48 89 c7             	mov    %rax,%rdi
   15287:	e8 8e 11 00 00       	call   1641a <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1528c:	48 89 c7             	mov    %rax,%rdi
   1528f:	e8 44 11 00 00       	call   163d8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   15294:	c9                   	leave
   15295:	c3                   	ret

0000000000015296 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   15296:	55                   	push   %rbp
   15297:	48 89 e5             	mov    %rsp,%rbp
   1529a:	48 83 ec 20          	sub    $0x20,%rsp
   1529e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   152a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   152aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   152ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152b2:	48 89 d6             	mov    %rdx,%rsi
   152b5:	48 89 c7             	mov    %rax,%rdi
   152b8:	e8 6b 11 00 00       	call   16428 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   152bd:	c9                   	leave
   152be:	c3                   	ret
   152bf:	90                   	nop

00000000000152c0 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   152c0:	55                   	push   %rbp
   152c1:	48 89 e5             	mov    %rsp,%rbp
   152c4:	53                   	push   %rbx
   152c5:	48 83 ec 38          	sub    $0x38,%rsp
   152c9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   152cd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   152d1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   152d5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152d9:	48 89 c7             	mov    %rax,%rdi
   152dc:	e8 93 ff ff ff       	call   15274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   152e1:	48 89 c3             	mov    %rax,%rbx
   152e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152e8:	48 89 c7             	mov    %rax,%rdi
   152eb:	e8 70 e5 ff ff       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   152f0:	48 29 c3             	sub    %rax,%rbx
   152f3:	48 89 da             	mov    %rbx,%rdx
   152f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   152fa:	48 39 c2             	cmp    %rax,%rdx
   152fd:	0f 92 c0             	setb   %al
   15300:	84 c0                	test   %al,%al
   15302:	74 0c                	je     15310 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   15304:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15308:	48 89 c7             	mov    %rax,%rdi
   1530b:	e8 a0 ee fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   15310:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15314:	48 89 c7             	mov    %rax,%rdi
   15317:	e8 44 e5 ff ff       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1531c:	48 89 c3             	mov    %rax,%rbx
   1531f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15323:	48 89 c7             	mov    %rax,%rdi
   15326:	e8 35 e5 ff ff       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1532b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1532f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   15333:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15337:	48 89 d6             	mov    %rdx,%rsi
   1533a:	48 89 c7             	mov    %rax,%rdi
   1533d:	e8 52 05 00 00       	call   15894 <_ZSt3maxImERKT_S2_S2_>
   15342:	48 8b 00             	mov    (%rax),%rax
   15345:	48 01 d8             	add    %rbx,%rax
   15348:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1534c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15350:	48 89 c7             	mov    %rax,%rdi
   15353:	e8 08 e5 ff ff       	call   13860 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   15358:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1535c:	72 12                	jb     15370 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1535e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15362:	48 89 c7             	mov    %rax,%rdi
   15365:	e8 0a ff ff ff       	call   15274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1536a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1536e:	73 0e                	jae    1537e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   15370:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15374:	48 89 c7             	mov    %rax,%rdi
   15377:	e8 f8 fe ff ff       	call   15274 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   1537c:	eb 04                	jmp    15382 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1537e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   15382:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15386:	c9                   	leave
   15387:	c3                   	ret

0000000000015388 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15388:	55                   	push   %rbp
   15389:	48 89 e5             	mov    %rsp,%rbp
   1538c:	48 83 ec 10          	sub    $0x10,%rsp
   15390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15398:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1539d:	74 15                	je     153b4 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   1539f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153a3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153a7:	48 89 d6             	mov    %rdx,%rsi
   153aa:	48 89 c7             	mov    %rax,%rdi
   153ad:	e8 9f 10 00 00       	call   16451 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   153b2:	eb 05                	jmp    153b9 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   153b4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   153b9:	c9                   	leave
   153ba:	c3                   	ret

00000000000153bb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   153bb:	55                   	push   %rbp
   153bc:	48 89 e5             	mov    %rsp,%rbp
   153bf:	48 83 ec 20          	sub    $0x20,%rsp
   153c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   153cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   153cf:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   153d3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   153d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   153db:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   153df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153e3:	48 89 c7             	mov    %rax,%rdi
   153e6:	e8 90 10 00 00       	call   1647b <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   153eb:	c9                   	leave
   153ec:	c3                   	ret
   153ed:	90                   	nop

00000000000153ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   153ee:	55                   	push   %rbp
   153ef:	48 89 e5             	mov    %rsp,%rbp
   153f2:	48 83 ec 10          	sub    $0x10,%rsp
   153f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   153fe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15406:	48 89 d6             	mov    %rdx,%rsi
   15409:	48 89 c7             	mov    %rax,%rdi
   1540c:	e8 cd 10 00 00       	call   164de <_ZNSaIP13VkImageView_TEC1ERKS1_>
   15411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15415:	48 89 c7             	mov    %rax,%rdi
   15418:	e8 07 ec ff ff       	call   14024 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1541d:	90                   	nop
   1541e:	c9                   	leave
   1541f:	c3                   	ret

0000000000015420 <_ZNKSt16initializer_listIP13VkImageView_TE4sizeEv>:
   15420:	55                   	push   %rbp
   15421:	48 89 e5             	mov    %rsp,%rbp
   15424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1542c:	48 8b 40 08          	mov    0x8(%rax),%rax
   15430:	5d                   	pop    %rbp
   15431:	c3                   	ret

0000000000015432 <_ZSt19__iterator_categoryIPKP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   15432:	55                   	push   %rbp
   15433:	48 89 e5             	mov    %rsp,%rbp
   15436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1543a:	90                   	nop
   1543b:	5d                   	pop    %rbp
   1543c:	c3                   	ret

000000000001543d <_ZSt10__distanceIPKP13VkImageView_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   1543d:	55                   	push   %rbp
   1543e:	48 89 e5             	mov    %rsp,%rbp
   15441:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15445:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   15449:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1544d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   15451:	48 c1 f8 03          	sar    $0x3,%rax
    }
   15455:	5d                   	pop    %rbp
   15456:	c3                   	ret

0000000000015457 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   15457:	55                   	push   %rbp
   15458:	48 89 e5             	mov    %rsp,%rbp
   1545b:	53                   	push   %rbx
   1545c:	48 83 ec 28          	sub    $0x28,%rsp
   15460:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15464:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   15468:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1546c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15470:	48 89 d6             	mov    %rdx,%rsi
   15473:	48 89 c7             	mov    %rax,%rdi
   15476:	e8 63 10 00 00       	call   164de <_ZNSaIP13VkImageView_TEC1ERKS1_>
   1547b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1547f:	48 89 c7             	mov    %rax,%rdi
   15482:	e8 d8 0b 00 00       	call   1605f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   15487:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1548b:	0f 92 c3             	setb   %bl
   1548e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15492:	48 89 c7             	mov    %rax,%rdi
   15495:	e8 da cb ff ff       	call   12074 <_ZNSaIP13VkImageView_TED1Ev>
   1549a:	84 db                	test   %bl,%bl
   1549c:	74 0f                	je     154ad <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1549e:	48 8d 05 83 79 00 00 	lea    0x7983(%rip),%rax        # 1ce28 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a8>
   154a5:	48 89 c7             	mov    %rax,%rdi
   154a8:	e8 03 ed fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   154ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   154b1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   154b5:	c9                   	leave
   154b6:	c3                   	ret

00000000000154b7 <_ZSt22__uninitialized_copy_aIPKP13VkImageView_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   154b7:	55                   	push   %rbp
   154b8:	48 89 e5             	mov    %rsp,%rbp
   154bb:	48 83 ec 20          	sub    $0x20,%rsp
   154bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154c7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   154cb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   154cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   154d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   154d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   154db:	48 89 ce             	mov    %rcx,%rsi
   154de:	48 89 c7             	mov    %rax,%rdi
   154e1:	e8 1e 10 00 00       	call   16504 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
    }
   154e6:	c9                   	leave
   154e7:	c3                   	ret

00000000000154e8 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   154e8:	55                   	push   %rbp
   154e9:	48 89 e5             	mov    %rsp,%rbp
   154ec:	48 83 ec 10          	sub    $0x10,%rsp
   154f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   154f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   154fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15500:	48 89 d6             	mov    %rdx,%rsi
   15503:	48 89 c7             	mov    %rax,%rdi
   15506:	e8 2e 10 00 00       	call   16539 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   1550b:	90                   	nop
   1550c:	c9                   	leave
   1550d:	c3                   	ret

000000000001550e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1550e:	55                   	push   %rbp
   1550f:	48 89 e5             	mov    %rsp,%rbp
   15512:	48 83 ec 10          	sub    $0x10,%rsp
   15516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1551a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1551e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15526:	48 89 d6             	mov    %rdx,%rsi
   15529:	48 89 c7             	mov    %rax,%rdi
   1552c:	e8 17 10 00 00       	call   16548 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   15531:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15535:	48 89 c7             	mov    %rax,%rdi
   15538:	e8 31 10 00 00       	call   1656e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1553d:	90                   	nop
   1553e:	c9                   	leave
   1553f:	c3                   	ret

0000000000015540 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   15540:	55                   	push   %rbp
   15541:	48 89 e5             	mov    %rsp,%rbp
   15544:	48 83 ec 20          	sub    $0x20,%rsp
   15548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1554c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15550:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   15554:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15559:	74 17                	je     15572 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1555b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1555f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15563:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15567:	48 89 ce             	mov    %rcx,%rsi
   1556a:	48 89 c7             	mov    %rax,%rdi
   1556d:	e8 2a 10 00 00       	call   1659c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
   15572:	90                   	nop
   15573:	c9                   	leave
   15574:	c3                   	ret
   15575:	90                   	nop

0000000000015576 <_ZNKSt16initializer_listIP13VkSemaphore_TE4sizeEv>:
   15576:	55                   	push   %rbp
   15577:	48 89 e5             	mov    %rsp,%rbp
   1557a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1557e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15582:	48 8b 40 08          	mov    0x8(%rax),%rax
   15586:	5d                   	pop    %rbp
   15587:	c3                   	ret

0000000000015588 <_ZSt19__iterator_categoryIPKP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   15588:	55                   	push   %rbp
   15589:	48 89 e5             	mov    %rsp,%rbp
   1558c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15590:	90                   	nop
   15591:	5d                   	pop    %rbp
   15592:	c3                   	ret

0000000000015593 <_ZSt10__distanceIPKP13VkSemaphore_TENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   15593:	55                   	push   %rbp
   15594:	48 89 e5             	mov    %rsp,%rbp
   15597:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1559b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   1559f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155a3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   155a7:	48 c1 f8 03          	sar    $0x3,%rax
    }
   155ab:	5d                   	pop    %rbp
   155ac:	c3                   	ret

00000000000155ad <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   155ad:	55                   	push   %rbp
   155ae:	48 89 e5             	mov    %rsp,%rbp
   155b1:	53                   	push   %rbx
   155b2:	48 83 ec 28          	sub    $0x28,%rsp
   155b6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   155ba:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   155be:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   155c2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   155c6:	48 89 d6             	mov    %rdx,%rsi
   155c9:	48 89 c7             	mov    %rax,%rdi
   155cc:	e8 77 0f 00 00       	call   16548 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>
   155d1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   155d5:	48 89 c7             	mov    %rax,%rdi
   155d8:	e8 ed 0f 00 00       	call   165ca <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   155dd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   155e1:	0f 92 c3             	setb   %bl
   155e4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   155e8:	48 89 c7             	mov    %rax,%rdi
   155eb:	e8 ec cb ff ff       	call   121dc <_ZNSaIP13VkSemaphore_TED1Ev>
   155f0:	84 db                	test   %bl,%bl
   155f2:	74 0f                	je     15603 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   155f4:	48 8d 05 2d 78 00 00 	lea    0x782d(%rip),%rax        # 1ce28 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a8>
   155fb:	48 89 c7             	mov    %rax,%rdi
   155fe:	e8 ad eb fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   15603:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   15607:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1560b:	c9                   	leave
   1560c:	c3                   	ret
   1560d:	90                   	nop

000000000001560e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1560e:	55                   	push   %rbp
   1560f:	48 89 e5             	mov    %rsp,%rbp
   15612:	48 83 ec 10          	sub    $0x10,%rsp
   15616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1561a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1561e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15623:	74 15                	je     1563a <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   15625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15629:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1562d:	48 89 d6             	mov    %rdx,%rsi
   15630:	48 89 c7             	mov    %rax,%rdi
   15633:	e8 d4 0f 00 00       	call   1660c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   15638:	eb 05                	jmp    1563f <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   1563a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1563f:	c9                   	leave
   15640:	c3                   	ret

0000000000015641 <_ZSt22__uninitialized_copy_aIPKP13VkSemaphore_TPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   15641:	55                   	push   %rbp
   15642:	48 89 e5             	mov    %rsp,%rbp
   15645:	48 83 ec 20          	sub    $0x20,%rsp
   15649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1564d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15651:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   15655:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   15659:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1565d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15661:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15665:	48 89 ce             	mov    %rcx,%rsi
   15668:	48 89 c7             	mov    %rax,%rdi
   1566b:	e8 c6 0f 00 00       	call   16636 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
    }
   15670:	c9                   	leave
   15671:	c3                   	ret

0000000000015672 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   15672:	55                   	push   %rbp
   15673:	48 89 e5             	mov    %rsp,%rbp
   15676:	48 83 ec 10          	sub    $0x10,%rsp
   1567a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1567e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   15682:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1568a:	48 89 d6             	mov    %rdx,%rsi
   1568d:	48 89 c7             	mov    %rax,%rdi
   15690:	e8 d6 0f 00 00       	call   1666b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   15695:	90                   	nop
   15696:	c9                   	leave
   15697:	c3                   	ret

0000000000015698 <_ZNSt12_Vector_baseIjSaIjEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   15698:	55                   	push   %rbp
   15699:	48 89 e5             	mov    %rsp,%rbp
   1569c:	48 83 ec 10          	sub    $0x10,%rsp
   156a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   156a8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   156ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156b0:	48 89 d6             	mov    %rdx,%rsi
   156b3:	48 89 c7             	mov    %rax,%rdi
   156b6:	e8 bf 0f 00 00       	call   1667a <_ZNSaIjEC1ERKS_>
   156bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156bf:	48 89 c7             	mov    %rax,%rdi
   156c2:	e8 0d d1 ff ff       	call   127d4 <_ZNSt12_Vector_baseIjSaIjEE17_Vector_impl_dataC1Ev>
	{ }
   156c7:	90                   	nop
   156c8:	c9                   	leave
   156c9:	c3                   	ret

00000000000156ca <_ZNKSt16initializer_listIjE4sizeEv>:
   156ca:	55                   	push   %rbp
   156cb:	48 89 e5             	mov    %rsp,%rbp
   156ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156d6:	48 8b 40 08          	mov    0x8(%rax),%rax
   156da:	5d                   	pop    %rbp
   156db:	c3                   	ret

00000000000156dc <_ZSt19__iterator_categoryIPKjENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   156dc:	55                   	push   %rbp
   156dd:	48 89 e5             	mov    %rsp,%rbp
   156e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   156e4:	90                   	nop
   156e5:	5d                   	pop    %rbp
   156e6:	c3                   	ret

00000000000156e7 <_ZSt10__distanceIPKjENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   156e7:	55                   	push   %rbp
   156e8:	48 89 e5             	mov    %rsp,%rbp
   156eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   156f3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   156f7:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   156fb:	48 c1 f8 02          	sar    $0x2,%rax
    }
   156ff:	5d                   	pop    %rbp
   15700:	c3                   	ret

0000000000015701 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   15701:	55                   	push   %rbp
   15702:	48 89 e5             	mov    %rsp,%rbp
   15705:	53                   	push   %rbx
   15706:	48 83 ec 28          	sub    $0x28,%rsp
   1570a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1570e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   15712:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   15716:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1571a:	48 89 d6             	mov    %rdx,%rsi
   1571d:	48 89 c7             	mov    %rax,%rdi
   15720:	e8 55 0f 00 00       	call   1667a <_ZNSaIjEC1ERKS_>
   15725:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   15729:	48 89 c7             	mov    %rax,%rdi
   1572c:	e8 6f 0f 00 00       	call   166a0 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>
   15731:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   15735:	0f 92 c3             	setb   %bl
   15738:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1573c:	48 89 c7             	mov    %rax,%rdi
   1573f:	e8 de ba ff ff       	call   11222 <_ZNSaIjED1Ev>
   15744:	84 db                	test   %bl,%bl
   15746:	74 0f                	je     15757 <_ZNSt6vectorIjSaIjEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   15748:	48 8d 05 d9 76 00 00 	lea    0x76d9(%rip),%rax        # 1ce28 <_ZZN9VulkanApp6renderEvE11submitCount+0x2a8>
   1574f:	48 89 c7             	mov    %rax,%rdi
   15752:	e8 59 ea fe ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   15757:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   1575b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1575f:	c9                   	leave
   15760:	c3                   	ret
   15761:	90                   	nop

0000000000015762 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15762:	55                   	push   %rbp
   15763:	48 89 e5             	mov    %rsp,%rbp
   15766:	48 83 ec 10          	sub    $0x10,%rsp
   1576a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1576e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15772:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   15777:	74 15                	je     1578e <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x2c>
   15779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1577d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15781:	48 89 d6             	mov    %rdx,%rsi
   15784:	48 89 c7             	mov    %rax,%rdi
   15787:	e8 56 0f 00 00       	call   166e2 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>
   1578c:	eb 05                	jmp    15793 <_ZNSt12_Vector_baseIjSaIjEE11_M_allocateEm+0x31>
   1578e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   15793:	c9                   	leave
   15794:	c3                   	ret

0000000000015795 <_ZSt22__uninitialized_copy_aIPKjPjjET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   15795:	55                   	push   %rbp
   15796:	48 89 e5             	mov    %rsp,%rbp
   15799:	48 83 ec 20          	sub    $0x20,%rsp
   1579d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   157a9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   157ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157b1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   157b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157b9:	48 89 ce             	mov    %rcx,%rsi
   157bc:	48 89 c7             	mov    %rax,%rdi
   157bf:	e8 48 0f 00 00       	call   1670c <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>
    }
   157c4:	c9                   	leave
   157c5:	c3                   	ret

00000000000157c6 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   157c6:	55                   	push   %rbp
   157c7:	48 89 e5             	mov    %rsp,%rbp
   157ca:	48 83 ec 20          	sub    $0x20,%rsp
   157ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   157da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157de:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   157e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157e6:	48 89 ce             	mov    %rcx,%rsi
   157e9:	48 89 c7             	mov    %rax,%rdi
   157ec:	e8 51 0f 00 00       	call   16742 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   157f1:	90                   	nop
   157f2:	c9                   	leave
   157f3:	c3                   	ret

00000000000157f4 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   157f4:	55                   	push   %rbp
   157f5:	48 89 e5             	mov    %rsp,%rbp
   157f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157fc:	90                   	nop
   157fd:	5d                   	pop    %rbp
   157fe:	c3                   	ret

00000000000157ff <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   157ff:	55                   	push   %rbp
   15800:	48 89 e5             	mov    %rsp,%rbp
   15803:	48 83 ec 20          	sub    $0x20,%rsp
   15807:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1580b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1580f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15813:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15817:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1581b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1581f:	48 89 ce             	mov    %rcx,%rsi
   15822:	48 89 c7             	mov    %rax,%rdi
   15825:	e8 4a 0f 00 00       	call   16774 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   1582a:	90                   	nop
   1582b:	c9                   	leave
   1582c:	c3                   	ret

000000000001582d <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1582d:	55                   	push   %rbp
   1582e:	48 89 e5             	mov    %rsp,%rbp
   15831:	48 83 ec 10          	sub    $0x10,%rsp
   15835:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15839:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1583d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15845:	48 89 d6             	mov    %rdx,%rsi
   15848:	48 89 c7             	mov    %rax,%rdi
   1584b:	e8 55 0f 00 00       	call   167a5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   15850:	90                   	nop
   15851:	c9                   	leave
   15852:	c3                   	ret
   15853:	90                   	nop

0000000000015854 <_ZNSt15__new_allocatorIjE10deallocateEPjm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15854:	55                   	push   %rbp
   15855:	48 89 e5             	mov    %rsp,%rbp
   15858:	48 83 ec 20          	sub    $0x20,%rsp
   1585c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15864:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15868:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1586c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15873:	00 
   15874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15878:	48 89 d6             	mov    %rdx,%rsi
   1587b:	48 89 c7             	mov    %rax,%rdi
   1587e:	e8 6d eb fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   15883:	c9                   	leave
   15884:	c3                   	ret

0000000000015885 <_ZNSt12_Destroy_auxILb1EE9__destroyIPjEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   15885:	55                   	push   %rbp
   15886:	48 89 e5             	mov    %rsp,%rbp
   15889:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1588d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15891:	90                   	nop
   15892:	5d                   	pop    %rbp
   15893:	c3                   	ret

0000000000015894 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   15894:	55                   	push   %rbp
   15895:	48 89 e5             	mov    %rsp,%rbp
   15898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1589c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   158a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   158a4:	48 8b 10             	mov    (%rax),%rdx
   158a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   158ab:	48 8b 00             	mov    (%rax),%rax
   158ae:	48 39 c2             	cmp    %rax,%rdx
   158b1:	73 06                	jae    158b9 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   158b3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   158b7:	eb 04                	jmp    158bd <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   158b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   158bd:	5d                   	pop    %rbp
   158be:	c3                   	ret

00000000000158bf <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   158bf:	55                   	push   %rbp
   158c0:	48 89 e5             	mov    %rsp,%rbp
   158c3:	48 83 ec 30          	sub    $0x30,%rsp
   158c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   158cf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   158d3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   158d7:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   158db:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   158df:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   158e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158e7:	48 89 ce             	mov    %rcx,%rsi
   158ea:	48 89 c7             	mov    %rax,%rdi
   158ed:	e8 c2 0e 00 00       	call   167b4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   158f2:	c9                   	leave
   158f3:	c3                   	ret

00000000000158f4 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
   158f4:	55                   	push   %rbp
   158f5:	48 89 e5             	mov    %rsp,%rbp
   158f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   158fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15900:	90                   	nop
   15901:	5d                   	pop    %rbp
   15902:	c3                   	ret
   15903:	90                   	nop

0000000000015904 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   15904:	55                   	push   %rbp
   15905:	48 89 e5             	mov    %rsp,%rbp
   15908:	48 83 ec 10          	sub    $0x10,%rsp
   1590c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15914:	48 89 c7             	mov    %rax,%rdi
   15917:	e8 c6 0e 00 00       	call   167e2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1591c:	48 89 c7             	mov    %rax,%rdi
   1591f:	e8 3b 48 ff ff       	call   a15f <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   15924:	c9                   	leave
   15925:	c3                   	ret

0000000000015926 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15926:	55                   	push   %rbp
   15927:	48 89 e5             	mov    %rsp,%rbp
   1592a:	41 54                	push   %r12
   1592c:	53                   	push   %rbx
   1592d:	48 83 ec 20          	sub    $0x20,%rsp
   15931:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15935:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15939:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1593d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   15941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15945:	48 89 c7             	mov    %rax,%rdi
   15948:	e8 a3 0e 00 00       	call   167f0 <_ZSt12__niter_baseIPPKcET_S3_>
   1594d:	49 89 c4             	mov    %rax,%r12
   15950:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15954:	48 89 c7             	mov    %rax,%rdi
   15957:	e8 94 0e 00 00       	call   167f0 <_ZSt12__niter_baseIPPKcET_S3_>
   1595c:	48 89 c3             	mov    %rax,%rbx
   1595f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15963:	48 89 c7             	mov    %rax,%rdi
   15966:	e8 85 0e 00 00       	call   167f0 <_ZSt12__niter_baseIPPKcET_S3_>
   1596b:	48 89 c7             	mov    %rax,%rdi
   1596e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15972:	48 89 c1             	mov    %rax,%rcx
   15975:	4c 89 e2             	mov    %r12,%rdx
   15978:	48 89 de             	mov    %rbx,%rsi
   1597b:	e8 7e 0e 00 00       	call   167fe <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   15980:	48 83 c4 20          	add    $0x20,%rsp
   15984:	5b                   	pop    %rbx
   15985:	41 5c                	pop    %r12
   15987:	5d                   	pop    %rbp
   15988:	c3                   	ret
   15989:	90                   	nop

000000000001598a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   1598a:	55                   	push   %rbp
   1598b:	48 89 e5             	mov    %rsp,%rbp
   1598e:	48 83 ec 10          	sub    $0x10,%rsp
   15992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   1599a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1599e:	48 89 c7             	mov    %rax,%rdi
   159a1:	e8 c2 d2 ff ff       	call   12c68 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   159a6:	48 89 c1             	mov    %rax,%rcx
   159a9:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   159ad:	48 8b 01             	mov    (%rcx),%rax
   159b0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   159b4:	48 89 06             	mov    %rax,(%rsi)
   159b7:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   159bb:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   159bf:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   159c3:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   159c7:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   159cb:	90                   	nop
   159cc:	c9                   	leave
   159cd:	c3                   	ret

00000000000159ce <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   159ce:	55                   	push   %rbp
   159cf:	48 89 e5             	mov    %rsp,%rbp
   159d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   159d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159da:	5d                   	pop    %rbp
   159db:	c3                   	ret

00000000000159dc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   159dc:	55                   	push   %rbp
   159dd:	48 89 e5             	mov    %rsp,%rbp
   159e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   159e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159e8:	5d                   	pop    %rbp
   159e9:	c3                   	ret

00000000000159ea <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   159ea:	55                   	push   %rbp
   159eb:	48 89 e5             	mov    %rsp,%rbp
   159ee:	53                   	push   %rbx
   159ef:	48 83 ec 18          	sub    $0x18,%rsp
   159f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   159fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159ff:	48 89 c6             	mov    %rax,%rsi
   15a02:	bf 1c 00 00 00       	mov    $0x1c,%edi
   15a07:	e8 2d f6 fe ff       	call   5039 <_ZnwmPv>
   15a0c:	48 89 c3             	mov    %rax,%rbx
   15a0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a13:	48 89 c7             	mov    %rax,%rdi
   15a16:	e8 c1 ff ff ff       	call   159dc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   15a1b:	48 89 c1             	mov    %rax,%rcx
   15a1e:	48 8b 01             	mov    (%rcx),%rax
   15a21:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   15a25:	48 89 03             	mov    %rax,(%rbx)
   15a28:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   15a2c:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   15a30:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   15a34:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   15a38:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   15a3c:	90                   	nop
   15a3d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15a41:	c9                   	leave
   15a42:	c3                   	ret
   15a43:	90                   	nop

0000000000015a44 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   15a44:	55                   	push   %rbp
   15a45:	48 89 e5             	mov    %rsp,%rbp
   15a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   15a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a50:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   15a54:	90                   	nop
   15a55:	5d                   	pop    %rbp
   15a56:	c3                   	ret
   15a57:	90                   	nop

0000000000015a58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   15a58:	55                   	push   %rbp
   15a59:	48 89 e5             	mov    %rsp,%rbp
   15a5c:	53                   	push   %rbx
   15a5d:	48 83 ec 18          	sub    $0x18,%rsp
   15a61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15a65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   15a69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a6d:	48 89 c7             	mov    %rax,%rdi
   15a70:	e8 f1 eb ff ff       	call   14666 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15a75:	48 89 c3             	mov    %rax,%rbx
   15a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a7c:	48 89 c7             	mov    %rax,%rdi
   15a7f:	e8 de 0d 00 00       	call   16862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   15a84:	48 89 de             	mov    %rbx,%rsi
   15a87:	48 89 c7             	mov    %rax,%rdi
   15a8a:	e8 e1 0d 00 00       	call   16870 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   15a8f:	90                   	nop
   15a90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15a94:	c9                   	leave
   15a95:	c3                   	ret

0000000000015a96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   15a96:	55                   	push   %rbp
   15a97:	48 89 e5             	mov    %rsp,%rbp
   15a9a:	48 83 ec 10          	sub    $0x10,%rsp
   15a9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15aa2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   15aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aaa:	48 89 c7             	mov    %rax,%rdi
   15aad:	e8 b0 0d 00 00       	call   16862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   15ab2:	48 89 c1             	mov    %rax,%rcx
   15ab5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15ab9:	ba 01 00 00 00       	mov    $0x1,%edx
   15abe:	48 89 c6             	mov    %rax,%rsi
   15ac1:	48 89 cf             	mov    %rcx,%rdi
   15ac4:	e8 cd 0d 00 00       	call   16896 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   15ac9:	90                   	nop
   15aca:	c9                   	leave
   15acb:	c3                   	ret

0000000000015acc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   15acc:	55                   	push   %rbp
   15acd:	48 89 e5             	mov    %rsp,%rbp
   15ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   15ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ad8:	48 83 c0 08          	add    $0x8,%rax
   15adc:	5d                   	pop    %rbp
   15add:	c3                   	ret

0000000000015ade <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15ade:	55                   	push   %rbp
   15adf:	48 89 e5             	mov    %rsp,%rbp
   15ae2:	53                   	push   %rbx
   15ae3:	48 83 ec 38          	sub    $0x38,%rsp
   15ae7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15aeb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15aef:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15af3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   15af7:	eb 56                	jmp    15b4f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   15af9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15afd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b01:	48 89 c7             	mov    %rax,%rdi
   15b04:	e8 e7 03 00 00       	call   15ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   15b09:	48 89 c1             	mov    %rax,%rcx
   15b0c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15b10:	48 89 c2             	mov    %rax,%rdx
   15b13:	48 89 ce             	mov    %rcx,%rsi
   15b16:	48 89 df             	mov    %rbx,%rdi
   15b19:	e8 fa d3 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15b1e:	83 f0 01             	xor    $0x1,%eax
   15b21:	84 c0                	test   %al,%al
   15b23:	74 1a                	je     15b3f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   15b25:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b29:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   15b2d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b31:	48 89 c7             	mov    %rax,%rdi
   15b34:	e8 4c ea ff ff       	call   14585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   15b39:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   15b3d:	eb 10                	jmp    15b4f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   15b3f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15b43:	48 89 c7             	mov    %rax,%rdi
   15b46:	e8 28 ea ff ff       	call   14573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   15b4b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   15b4f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15b54:	75 a3                	jne    15af9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   15b56:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15b5a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   15b5e:	48 89 d6             	mov    %rdx,%rsi
   15b61:	48 89 c7             	mov    %rax,%rdi
   15b64:	e8 23 f1 ff ff       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15b69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   15b6d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15b71:	c9                   	leave
   15b72:	c3                   	ret
   15b73:	90                   	nop

0000000000015b74 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   15b74:	55                   	push   %rbp
   15b75:	48 89 e5             	mov    %rsp,%rbp
   15b78:	48 83 ec 10          	sub    $0x10,%rsp
   15b7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   15b80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b84:	48 89 c7             	mov    %rax,%rdi
   15b87:	e8 38 0d 00 00       	call   168c4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   15b8c:	c9                   	leave
   15b8d:	c3                   	ret

0000000000015b8e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   15b8e:	55                   	push   %rbp
   15b8f:	48 89 e5             	mov    %rsp,%rbp
   15b92:	53                   	push   %rbx
   15b93:	48 83 ec 18          	sub    $0x18,%rsp
   15b97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15b9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   15b9f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   15ba3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15ba7:	48 89 c7             	mov    %rax,%rdi
   15baa:	e8 fd ea ff ff       	call   146ac <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   15baf:	48 89 c6             	mov    %rax,%rsi
   15bb2:	48 89 df             	mov    %rbx,%rdi
   15bb5:	e8 18 0d 00 00       	call   168d2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   15bba:	90                   	nop
   15bbb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15bbf:	c9                   	leave
   15bc0:	c3                   	ret
   15bc1:	90                   	nop

0000000000015bc2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   15bc2:	55                   	push   %rbp
   15bc3:	48 89 e5             	mov    %rsp,%rbp
   15bc6:	41 54                	push   %r12
   15bc8:	53                   	push   %rbx
   15bc9:	48 83 ec 30          	sub    $0x30,%rsp
   15bcd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15bd1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15bd5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15bd9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   15bdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15be1:	48 89 c7             	mov    %rax,%rdi
   15be4:	e8 0f 0d 00 00       	call   168f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   15be9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   15bed:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15bf1:	48 89 c7             	mov    %rax,%rdi
   15bf4:	e8 10 eb ff ff       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   15bf9:	49 89 c4             	mov    %rax,%r12
   15bfc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15c00:	48 89 c7             	mov    %rax,%rdi
   15c03:	e8 f3 ea ff ff       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   15c08:	48 89 c3             	mov    %rax,%rbx
   15c0b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15c0f:	48 89 c7             	mov    %rax,%rdi
   15c12:	e8 d6 ea ff ff       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   15c17:	48 89 c2             	mov    %rax,%rdx
   15c1a:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   15c1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15c22:	4d 89 e0             	mov    %r12,%r8
   15c25:	48 89 d9             	mov    %rbx,%rcx
   15c28:	48 89 c7             	mov    %rax,%rdi
   15c2b:	e8 f0 0c 00 00       	call   16920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   15c30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15c34:	48 83 c4 30          	add    $0x30,%rsp
   15c38:	5b                   	pop    %rbx
   15c39:	41 5c                	pop    %r12
   15c3b:	5d                   	pop    %rbp
   15c3c:	c3                   	ret
   15c3d:	90                   	nop

0000000000015c3e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   15c3e:	55                   	push   %rbp
   15c3f:	48 89 e5             	mov    %rsp,%rbp
   15c42:	48 83 ec 20          	sub    $0x20,%rsp
   15c46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   15c4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c4e:	48 8b 10             	mov    (%rax),%rdx
   15c51:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15c55:	48 89 d6             	mov    %rdx,%rsi
   15c58:	48 89 c7             	mov    %rax,%rdi
   15c5b:	e8 2c f0 ff ff       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c64:	c9                   	leave
   15c65:	c3                   	ret

0000000000015c66 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   15c66:	55                   	push   %rbp
   15c67:	48 89 e5             	mov    %rsp,%rbp
   15c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   15c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c72:	48 8b 40 28          	mov    0x28(%rax),%rax
   15c76:	5d                   	pop    %rbp
   15c77:	c3                   	ret

0000000000015c78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   15c78:	55                   	push   %rbp
   15c79:	48 89 e5             	mov    %rsp,%rbp
   15c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   15c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c84:	48 83 c0 20          	add    $0x20,%rax
   15c88:	5d                   	pop    %rbp
   15c89:	c3                   	ret

0000000000015c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   15c8a:	55                   	push   %rbp
   15c8b:	48 89 e5             	mov    %rsp,%rbp
   15c8e:	48 83 ec 10          	sub    $0x10,%rsp
   15c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   15c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c9a:	48 89 c7             	mov    %rax,%rdi
   15c9d:	e8 4e 02 00 00       	call   15ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   15ca2:	c9                   	leave
   15ca3:	c3                   	ret

0000000000015ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   15ca4:	55                   	push   %rbp
   15ca5:	48 89 e5             	mov    %rsp,%rbp
   15ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cb0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   15cb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cb8:	48 8b 10             	mov    (%rax),%rdx
   15cbb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cbf:	48 89 10             	mov    %rdx,(%rax)
   15cc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15cc6:	48 8b 10             	mov    (%rax),%rdx
   15cc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ccd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15cd1:	90                   	nop
   15cd2:	5d                   	pop    %rbp
   15cd3:	c3                   	ret

0000000000015cd4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15cd4:	55                   	push   %rbp
   15cd5:	48 89 e5             	mov    %rsp,%rbp
   15cd8:	53                   	push   %rbx
   15cd9:	48 83 ec 78          	sub    $0x78,%rsp
   15cdd:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   15ce1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   15ce5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15ce9:	48 89 c7             	mov    %rax,%rdi
   15cec:	e8 45 d1 ff ff       	call   12e36 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   15cf1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   15cf5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15cf9:	48 89 c7             	mov    %rax,%rdi
   15cfc:	e8 cb fd ff ff       	call   15acc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   15d01:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   15d05:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   15d09:	eb 51                	jmp    15d5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   15d0b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15d0f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   15d13:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   15d17:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15d1b:	48 89 c7             	mov    %rax,%rdi
   15d1e:	e8 cd 01 00 00       	call   15ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   15d23:	48 89 c2             	mov    %rax,%rdx
   15d26:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15d2a:	48 89 c6             	mov    %rax,%rsi
   15d2d:	48 89 df             	mov    %rbx,%rdi
   15d30:	e8 e3 d1 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15d35:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   15d38:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   15d3c:	74 0e                	je     15d4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   15d3e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15d42:	48 89 c7             	mov    %rax,%rdi
   15d45:	e8 3b e8 ff ff       	call   14585 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   15d4a:	eb 0c                	jmp    15d58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   15d4c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15d50:	48 89 c7             	mov    %rax,%rdi
   15d53:	e8 1b e8 ff ff       	call   14573 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   15d58:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   15d5c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   15d60:	48 85 c0             	test   %rax,%rax
   15d63:	75 a6                	jne    15d0b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   15d65:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   15d69:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15d6d:	48 89 d6             	mov    %rdx,%rsi
   15d70:	48 89 c7             	mov    %rax,%rdi
   15d73:	e8 14 ef ff ff       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   15d78:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   15d7c:	74 54                	je     15dd2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   15d7e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   15d82:	48 89 c7             	mov    %rax,%rdi
   15d85:	e8 68 0c 00 00       	call   169f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   15d8a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   15d8e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   15d92:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15d96:	48 89 d6             	mov    %rdx,%rsi
   15d99:	48 89 c7             	mov    %rax,%rdi
   15d9c:	e8 1b d1 ff ff       	call   12ebc <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   15da1:	84 c0                	test   %al,%al
   15da3:	74 21                	je     15dc6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   15da5:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   15da9:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   15dad:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   15db1:	48 89 ce             	mov    %rcx,%rsi
   15db4:	48 89 c7             	mov    %rax,%rdi
   15db7:	e8 60 0c 00 00       	call   16a1c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   15dbc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   15dc0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   15dc4:	eb 7d                	jmp    15e43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   15dc6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   15dca:	48 89 c7             	mov    %rax,%rdi
   15dcd:	e8 ce 00 00 00       	call   15ea0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   15dd2:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   15dd6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   15dda:	48 89 c7             	mov    %rax,%rdi
   15ddd:	e8 a8 fe ff ff       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15de2:	48 89 c1             	mov    %rax,%rcx
   15de5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   15de9:	48 89 c2             	mov    %rax,%rdx
   15dec:	48 89 ce             	mov    %rcx,%rsi
   15def:	48 89 df             	mov    %rbx,%rdi
   15df2:	e8 21 d1 ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15df7:	84 c0                	test   %al,%al
   15df9:	74 21                	je     15e1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   15dfb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   15dff:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   15e03:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   15e07:	48 89 ce             	mov    %rcx,%rsi
   15e0a:	48 89 c7             	mov    %rax,%rdi
   15e0d:	e8 0a 0c 00 00       	call   16a1c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   15e12:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15e16:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15e1a:	eb 27                	jmp    15e43 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   15e1c:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   15e23:	00 
   15e24:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   15e28:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   15e2c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   15e30:	48 89 ce             	mov    %rcx,%rsi
   15e33:	48 89 c7             	mov    %rax,%rdi
   15e36:	e8 69 fe ff ff       	call   15ca4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   15e3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15e3f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   15e43:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   15e47:	c9                   	leave
   15e48:	c3                   	ret
   15e49:	90                   	nop

0000000000015e4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   15e4a:	55                   	push   %rbp
   15e4b:	48 89 e5             	mov    %rsp,%rbp
   15e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   15e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e56:	48 83 c0 18          	add    $0x18,%rax
   15e5a:	5d                   	pop    %rbp
   15e5b:	c3                   	ret

0000000000015e5c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   15e5c:	55                   	push   %rbp
   15e5d:	48 89 e5             	mov    %rsp,%rbp
   15e60:	48 83 ec 20          	sub    $0x20,%rsp
   15e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e6c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   15e70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e74:	48 89 c7             	mov    %rax,%rdi
   15e77:	e8 e4 0b 00 00       	call   16a60 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15e7c:	48 8b 10             	mov    (%rax),%rdx
   15e7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e83:	48 89 10             	mov    %rdx,(%rax)
   15e86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15e8a:	48 89 c7             	mov    %rax,%rdi
   15e8d:	e8 ce 0b 00 00       	call   16a60 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15e92:	48 8b 10             	mov    (%rax),%rdx
   15e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e99:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15e9d:	90                   	nop
   15e9e:	c9                   	leave
   15e9f:	c3                   	ret

0000000000015ea0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   15ea0:	55                   	push   %rbp
   15ea1:	48 89 e5             	mov    %rsp,%rbp
   15ea4:	48 83 ec 10          	sub    $0x10,%rsp
   15ea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   15eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15eb0:	48 8b 00             	mov    (%rax),%rax
   15eb3:	48 89 c7             	mov    %rax,%rdi
   15eb6:	e8 75 e5 fe ff       	call   4430 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   15ebb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ebf:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   15ec2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15ec6:	c9                   	leave
   15ec7:	c3                   	ret

0000000000015ec8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   15ec8:	55                   	push   %rbp
   15ec9:	48 89 e5             	mov    %rsp,%rbp
   15ecc:	48 83 ec 10          	sub    $0x10,%rsp
   15ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   15ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ed8:	48 8b 00             	mov    (%rax),%rax
   15edb:	48 89 c7             	mov    %rax,%rdi
   15ede:	e8 6d e3 fe ff       	call   4250 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   15ee3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ee7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   15eea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15eee:	c9                   	leave
   15eef:	c3                   	ret

0000000000015ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   15ef0:	55                   	push   %rbp
   15ef1:	48 89 e5             	mov    %rsp,%rbp
   15ef4:	48 83 ec 20          	sub    $0x20,%rsp
   15ef8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   15efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f00:	48 89 c7             	mov    %rax,%rdi
   15f03:	e8 66 0b 00 00       	call   16a6e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   15f08:	48 89 c2             	mov    %rax,%rdx
   15f0b:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   15f0f:	48 89 d6             	mov    %rdx,%rsi
   15f12:	48 89 c7             	mov    %rax,%rdi
   15f15:	e8 72 0b 00 00       	call   16a8c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   15f1a:	c9                   	leave
   15f1b:	c3                   	ret

0000000000015f1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15f1c:	55                   	push   %rbp
   15f1d:	48 89 e5             	mov    %rsp,%rbp
   15f20:	41 54                	push   %r12
   15f22:	53                   	push   %rbx
   15f23:	48 83 ec 30          	sub    $0x30,%rsp
   15f27:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15f2b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15f2f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15f33:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   15f37:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15f3c:	75 43                	jne    15f81 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   15f3e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f42:	48 89 c7             	mov    %rax,%rdi
   15f45:	e8 82 fb ff ff       	call   15acc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   15f4a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   15f4e:	74 31                	je     15f81 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   15f50:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15f54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15f58:	48 89 c7             	mov    %rax,%rdi
   15f5b:	e8 2a fd ff ff       	call   15c8a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15f60:	49 89 c4             	mov    %rax,%r12
   15f63:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15f67:	48 89 c7             	mov    %rax,%rdi
   15f6a:	e8 81 ff ff ff       	call   15ef0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   15f6f:	4c 89 e2             	mov    %r12,%rdx
   15f72:	48 89 c6             	mov    %rax,%rsi
   15f75:	48 89 df             	mov    %rbx,%rdi
   15f78:	e8 9b cf ff ff       	call   12f18 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15f7d:	84 c0                	test   %al,%al
   15f7f:	74 07                	je     15f88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   15f81:	b8 01 00 00 00       	mov    $0x1,%eax
   15f86:	eb 05                	jmp    15f8d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   15f88:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   15f8d:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   15f90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15f94:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   15f98:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   15f9c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15fa0:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   15fa4:	89 c7                	mov    %eax,%edi
   15fa6:	e8 b5 e0 fe ff       	call   4060 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   15fab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15faf:	48 8b 40 28          	mov    0x28(%rax),%rax
   15fb3:	48 8d 50 01          	lea    0x1(%rax),%rdx
   15fb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15fbb:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   15fbf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15fc3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15fc7:	48 89 d6             	mov    %rdx,%rsi
   15fca:	48 89 c7             	mov    %rax,%rdi
   15fcd:	e8 ba ec ff ff       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   15fd2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   15fd6:	48 83 c4 30          	add    $0x30,%rsp
   15fda:	5b                   	pop    %rbx
   15fdb:	41 5c                	pop    %r12
   15fdd:	5d                   	pop    %rbp
   15fde:	c3                   	ret
   15fdf:	90                   	nop

0000000000015fe0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15fe0:	55                   	push   %rbp
   15fe1:	48 89 e5             	mov    %rsp,%rbp
   15fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15fe8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fec:	5d                   	pop    %rbp
   15fed:	c3                   	ret

0000000000015fee <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   15fee:	55                   	push   %rbp
   15fef:	48 89 e5             	mov    %rsp,%rbp
   15ff2:	48 83 ec 10          	sub    $0x10,%rsp
   15ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ffa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   15ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16002:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16006:	48 89 d6             	mov    %rdx,%rsi
   16009:	48 89 c7             	mov    %rax,%rdi
   1600c:	e8 e3 49 ff ff       	call   a9f4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   16011:	90                   	nop
   16012:	c9                   	leave
   16013:	c3                   	ret

0000000000016014 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   16014:	55                   	push   %rbp
   16015:	48 89 e5             	mov    %rsp,%rbp
   16018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1601c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   16020:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16024:	48 8b 10             	mov    (%rax),%rdx
   16027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1602b:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   1602e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16032:	48 8b 50 08          	mov    0x8(%rax),%rdx
   16036:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1603a:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   1603e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16042:	48 8b 50 10          	mov    0x10(%rax),%rdx
   16046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1604a:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   1604e:	90                   	nop
   1604f:	5d                   	pop    %rbp
   16050:	c3                   	ret

0000000000016051 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   16051:	55                   	push   %rbp
   16052:	48 89 e5             	mov    %rsp,%rbp
   16055:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   16059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1605d:	5d                   	pop    %rbp
   1605e:	c3                   	ret

000000000001605f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1605f:	55                   	push   %rbp
   16060:	48 89 e5             	mov    %rsp,%rbp
   16063:	48 83 ec 20          	sub    $0x20,%rsp
   16067:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1606b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   16072:	ff ff 0f 
   16075:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   16079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1607d:	48 89 c7             	mov    %rax,%rdi
   16080:	e8 19 0a 00 00       	call   16a9e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   16085:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   16089:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1608d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16091:	48 89 d6             	mov    %rdx,%rsi
   16094:	48 89 c7             	mov    %rax,%rdi
   16097:	e8 6b f4 fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   1609c:	48 8b 00             	mov    (%rax),%rax
      }
   1609f:	c9                   	leave
   160a0:	c3                   	ret
   160a1:	90                   	nop

00000000000160a2 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   160a2:	55                   	push   %rbp
   160a3:	48 89 e5             	mov    %rsp,%rbp
   160a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   160aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160ae:	5d                   	pop    %rbp
   160af:	c3                   	ret

00000000000160b0 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   160b0:	55                   	push   %rbp
   160b1:	48 89 e5             	mov    %rsp,%rbp
   160b4:	48 83 ec 20          	sub    $0x20,%rsp
   160b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   160c0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   160c4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   160c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   160cc:	48 89 d6             	mov    %rdx,%rsi
   160cf:	48 89 c7             	mov    %rax,%rdi
   160d2:	e8 e1 09 00 00       	call   16ab8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   160d7:	c9                   	leave
   160d8:	c3                   	ret

00000000000160d9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   160d9:	55                   	push   %rbp
   160da:	48 89 e5             	mov    %rsp,%rbp
   160dd:	48 83 ec 10          	sub    $0x10,%rsp
   160e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   160e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   160e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   160ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160f1:	ba 00 00 00 00       	mov    $0x0,%edx
   160f6:	48 89 ce             	mov    %rcx,%rsi
   160f9:	48 89 c7             	mov    %rax,%rdi
   160fc:	e8 15 0a 00 00       	call   16b16 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   16101:	c9                   	leave
   16102:	c3                   	ret

0000000000016103 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   16103:	55                   	push   %rbp
   16104:	48 89 e5             	mov    %rsp,%rbp
   16107:	41 54                	push   %r12
   16109:	53                   	push   %rbx
   1610a:	48 83 ec 20          	sub    $0x20,%rsp
   1610e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16112:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16116:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1611a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1611e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16122:	48 89 c7             	mov    %rax,%rdi
   16125:	e8 4d 0a 00 00       	call   16b77 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1612a:	49 89 c4             	mov    %rax,%r12
   1612d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16131:	48 89 c7             	mov    %rax,%rdi
   16134:	e8 3e 0a 00 00       	call   16b77 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   16139:	48 89 c3             	mov    %rax,%rbx
   1613c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16140:	48 89 c7             	mov    %rax,%rdi
   16143:	e8 2f 0a 00 00       	call   16b77 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   16148:	48 89 c7             	mov    %rax,%rdi
   1614b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1614f:	48 89 c1             	mov    %rax,%rcx
   16152:	4c 89 e2             	mov    %r12,%rdx
   16155:	48 89 de             	mov    %rbx,%rsi
   16158:	e8 28 0a 00 00       	call   16b85 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1615d:	48 83 c4 20          	add    $0x20,%rsp
   16161:	5b                   	pop    %rbx
   16162:	41 5c                	pop    %r12
   16164:	5d                   	pop    %rbp
   16165:	c3                   	ret

0000000000016166 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   16166:	55                   	push   %rbp
   16167:	48 89 e5             	mov    %rsp,%rbp
   1616a:	48 83 ec 10          	sub    $0x10,%rsp
   1616e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   16176:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1617a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1617e:	48 89 d6             	mov    %rdx,%rsi
   16181:	48 89 c7             	mov    %rax,%rdi
   16184:	e8 5f 0a 00 00       	call   16be8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   16189:	90                   	nop
   1618a:	c9                   	leave
   1618b:	c3                   	ret

000000000001618c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1618c:	55                   	push   %rbp
   1618d:	48 89 e5             	mov    %rsp,%rbp
   16190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16198:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1619f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161a3:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   161aa:	00 
   161ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161af:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   161b6:	00 
	{ }
   161b7:	90                   	nop
   161b8:	5d                   	pop    %rbp
   161b9:	c3                   	ret

00000000000161ba <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   161ba:	55                   	push   %rbp
   161bb:	48 89 e5             	mov    %rsp,%rbp
   161be:	48 83 ec 20          	sub    $0x20,%rsp
   161c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   161c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   161ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   161ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   161d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   161d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161da:	48 89 ce             	mov    %rcx,%rsi
   161dd:	48 89 c7             	mov    %rax,%rdi
   161e0:	e8 13 0a 00 00       	call   16bf8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   161e5:	90                   	nop
   161e6:	c9                   	leave
   161e7:	c3                   	ret

00000000000161e8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   161e8:	55                   	push   %rbp
   161e9:	48 89 e5             	mov    %rsp,%rbp
   161ec:	48 83 ec 20          	sub    $0x20,%rsp
   161f0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   161f4:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   161fb:	8e e3 00 
   161fe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   16202:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16206:	48 89 c7             	mov    %rax,%rdi
   16209:	e8 24 0a 00 00       	call   16c32 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   1620e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   16212:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   16216:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1621a:	48 89 d6             	mov    %rdx,%rsi
   1621d:	48 89 c7             	mov    %rax,%rdi
   16220:	e8 e2 f2 fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   16225:	48 8b 00             	mov    (%rax),%rax
      }
   16228:	c9                   	leave
   16229:	c3                   	ret

000000000001622a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1622a:	55                   	push   %rbp
   1622b:	48 89 e5             	mov    %rsp,%rbp
   1622e:	48 83 ec 10          	sub    $0x10,%rsp
   16232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16236:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1623a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1623e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16242:	ba 00 00 00 00       	mov    $0x0,%edx
   16247:	48 89 ce             	mov    %rcx,%rsi
   1624a:	48 89 c7             	mov    %rax,%rdi
   1624d:	e8 fa 09 00 00       	call   16c4c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   16252:	c9                   	leave
   16253:	c3                   	ret

0000000000016254 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   16254:	55                   	push   %rbp
   16255:	48 89 e5             	mov    %rsp,%rbp
   16258:	48 83 ec 30          	sub    $0x30,%rsp
   1625c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16260:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16264:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   16268:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1626c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   16270:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16274:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16278:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1627c:	48 89 ce             	mov    %rcx,%rsi
   1627f:	48 89 c7             	mov    %rax,%rdi
   16282:	e8 30 0a 00 00       	call   16cb7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   16287:	c9                   	leave
   16288:	c3                   	ret

0000000000016289 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   16289:	55                   	push   %rbp
   1628a:	48 89 e5             	mov    %rsp,%rbp
   1628d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16291:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16295:	90                   	nop
   16296:	5d                   	pop    %rbp
   16297:	c3                   	ret

0000000000016298 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   16298:	55                   	push   %rbp
   16299:	48 89 e5             	mov    %rsp,%rbp
   1629c:	48 83 ec 20          	sub    $0x20,%rsp
   162a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   162a4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   162ab:	ff ff 0f 
   162ae:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   162b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162b6:	48 89 c7             	mov    %rax,%rdi
   162b9:	e8 26 0a 00 00       	call   16ce4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   162be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   162c2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   162c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   162ca:	48 89 d6             	mov    %rdx,%rsi
   162cd:	48 89 c7             	mov    %rax,%rdi
   162d0:	e8 32 f2 fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   162d5:	48 8b 00             	mov    (%rax),%rax
      }
   162d8:	c9                   	leave
   162d9:	c3                   	ret

00000000000162da <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   162da:	55                   	push   %rbp
   162db:	48 89 e5             	mov    %rsp,%rbp
   162de:	48 83 ec 10          	sub    $0x10,%rsp
   162e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   162ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   162ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   162f2:	48 89 d6             	mov    %rdx,%rsi
   162f5:	48 89 c7             	mov    %rax,%rdi
   162f8:	e8 f5 ee ff ff       	call   151f2 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   162fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16301:	48 89 c7             	mov    %rax,%rdi
   16304:	e8 f5 09 00 00       	call   16cfe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   16309:	90                   	nop
   1630a:	c9                   	leave
   1630b:	c3                   	ret

000000000001630c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   1630c:	55                   	push   %rbp
   1630d:	48 89 e5             	mov    %rsp,%rbp
   16310:	48 83 ec 10          	sub    $0x10,%rsp
   16314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16318:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   1631c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16324:	48 89 d6             	mov    %rdx,%rsi
   16327:	48 89 c7             	mov    %rax,%rdi
   1632a:	e8 fd 09 00 00       	call   16d2c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1632f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16333:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   16336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1633a:	48 8b 10             	mov    (%rax),%rdx
   1633d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16341:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   16345:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16349:	48 8b 00             	mov    (%rax),%rax
   1634c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16350:	48 c1 e2 03          	shl    $0x3,%rdx
   16354:	48 01 c2             	add    %rax,%rdx
   16357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1635b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1635f:	90                   	nop
   16360:	c9                   	leave
   16361:	c3                   	ret

0000000000016362 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   16362:	55                   	push   %rbp
   16363:	48 89 e5             	mov    %rsp,%rbp
   16366:	48 83 ec 20          	sub    $0x20,%rsp
   1636a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1636e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16372:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   16376:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1637a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1637e:	48 89 d6             	mov    %rdx,%rsi
   16381:	48 89 c7             	mov    %rax,%rdi
   16384:	e8 d6 09 00 00       	call   16d5f <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   16389:	c9                   	leave
   1638a:	c3                   	ret
   1638b:	90                   	nop

000000000001638c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1638c:	55                   	push   %rbp
   1638d:	48 89 e5             	mov    %rsp,%rbp
   16390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16398:	90                   	nop
   16399:	5d                   	pop    %rbp
   1639a:	c3                   	ret

000000000001639b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1639b:	55                   	push   %rbp
   1639c:	48 89 e5             	mov    %rsp,%rbp
   1639f:	48 83 ec 20          	sub    $0x20,%rsp
   163a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   163af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   163b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   163b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   163bb:	48 89 ce             	mov    %rcx,%rsi
   163be:	48 89 c7             	mov    %rax,%rdi
   163c1:	e8 c2 09 00 00       	call   16d88 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   163c6:	90                   	nop
   163c7:	c9                   	leave
   163c8:	c3                   	ret

00000000000163c9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   163c9:	55                   	push   %rbp
   163ca:	48 89 e5             	mov    %rsp,%rbp
   163cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   163d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   163d5:	90                   	nop
   163d6:	5d                   	pop    %rbp
   163d7:	c3                   	ret

00000000000163d8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   163d8:	55                   	push   %rbp
   163d9:	48 89 e5             	mov    %rsp,%rbp
   163dc:	48 83 ec 20          	sub    $0x20,%rsp
   163e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   163e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   163eb:	ff ff 0f 
   163ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   163f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   163f6:	48 89 c7             	mov    %rax,%rdi
   163f9:	e8 bb 09 00 00       	call   16db9 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   163fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   16402:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   16406:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1640a:	48 89 d6             	mov    %rdx,%rsi
   1640d:	48 89 c7             	mov    %rax,%rdi
   16410:	e8 f2 f0 fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   16415:	48 8b 00             	mov    (%rax),%rax
      }
   16418:	c9                   	leave
   16419:	c3                   	ret

000000000001641a <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1641a:	55                   	push   %rbp
   1641b:	48 89 e5             	mov    %rsp,%rbp
   1641e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16426:	5d                   	pop    %rbp
   16427:	c3                   	ret

0000000000016428 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   16428:	55                   	push   %rbp
   16429:	48 89 e5             	mov    %rsp,%rbp
   1642c:	48 83 ec 20          	sub    $0x20,%rsp
   16430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16434:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   16438:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1643c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16440:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16444:	48 89 d6             	mov    %rdx,%rsi
   16447:	48 89 c7             	mov    %rax,%rdi
   1644a:	e8 84 09 00 00       	call   16dd3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   1644f:	c9                   	leave
   16450:	c3                   	ret

0000000000016451 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   16451:	55                   	push   %rbp
   16452:	48 89 e5             	mov    %rsp,%rbp
   16455:	48 83 ec 10          	sub    $0x10,%rsp
   16459:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1645d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   16461:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16469:	ba 00 00 00 00       	mov    $0x0,%edx
   1646e:	48 89 ce             	mov    %rcx,%rsi
   16471:	48 89 c7             	mov    %rax,%rdi
   16474:	e8 b7 09 00 00       	call   16e30 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   16479:	c9                   	leave
   1647a:	c3                   	ret

000000000001647b <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1647b:	55                   	push   %rbp
   1647c:	48 89 e5             	mov    %rsp,%rbp
   1647f:	41 54                	push   %r12
   16481:	53                   	push   %rbx
   16482:	48 83 ec 20          	sub    $0x20,%rsp
   16486:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1648a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1648e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16492:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   16496:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1649a:	48 89 c7             	mov    %rax,%rdi
   1649d:	e8 ef 09 00 00       	call   16e91 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   164a2:	49 89 c4             	mov    %rax,%r12
   164a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   164a9:	48 89 c7             	mov    %rax,%rdi
   164ac:	e8 e0 09 00 00       	call   16e91 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   164b1:	48 89 c3             	mov    %rax,%rbx
   164b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164b8:	48 89 c7             	mov    %rax,%rdi
   164bb:	e8 d1 09 00 00       	call   16e91 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   164c0:	48 89 c7             	mov    %rax,%rdi
   164c3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   164c7:	48 89 c1             	mov    %rax,%rcx
   164ca:	4c 89 e2             	mov    %r12,%rdx
   164cd:	48 89 de             	mov    %rbx,%rsi
   164d0:	e8 ca 09 00 00       	call   16e9f <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   164d5:	48 83 c4 20          	add    $0x20,%rsp
   164d9:	5b                   	pop    %rbx
   164da:	41 5c                	pop    %r12
   164dc:	5d                   	pop    %rbp
   164dd:	c3                   	ret

00000000000164de <_ZNSaIP13VkImageView_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   164de:	55                   	push   %rbp
   164df:	48 89 e5             	mov    %rsp,%rbp
   164e2:	48 83 ec 10          	sub    $0x10,%rsp
   164e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   164ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   164ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   164f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164f6:	48 89 d6             	mov    %rdx,%rsi
   164f9:	48 89 c7             	mov    %rax,%rdi
   164fc:	e8 01 0a 00 00       	call   16f02 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>
   16501:	90                   	nop
   16502:	c9                   	leave
   16503:	c3                   	ret

0000000000016504 <_ZSt18uninitialized_copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   16504:	55                   	push   %rbp
   16505:	48 89 e5             	mov    %rsp,%rbp
   16508:	48 83 ec 30          	sub    $0x30,%rsp
   1650c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16510:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16514:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   16518:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1651c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   16520:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16524:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1652c:	48 89 ce             	mov    %rcx,%rsi
   1652f:	48 89 c7             	mov    %rax,%rdi
   16532:	e8 da 09 00 00       	call   16f11 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>
    }
   16537:	c9                   	leave
   16538:	c3                   	ret

0000000000016539 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   16539:	55                   	push   %rbp
   1653a:	48 89 e5             	mov    %rsp,%rbp
   1653d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16541:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16545:	90                   	nop
   16546:	5d                   	pop    %rbp
   16547:	c3                   	ret

0000000000016548 <_ZNSaIP13VkSemaphore_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   16548:	55                   	push   %rbp
   16549:	48 89 e5             	mov    %rsp,%rbp
   1654c:	48 83 ec 10          	sub    $0x10,%rsp
   16550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16554:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   16558:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1655c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16560:	48 89 d6             	mov    %rdx,%rsi
   16563:	48 89 c7             	mov    %rax,%rdi
   16566:	e8 d3 09 00 00       	call   16f3e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>
   1656b:	90                   	nop
   1656c:	c9                   	leave
   1656d:	c3                   	ret

000000000001656e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1656e:	55                   	push   %rbp
   1656f:	48 89 e5             	mov    %rsp,%rbp
   16572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16576:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1657a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16585:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1658c:	00 
   1658d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16591:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   16598:	00 
	{ }
   16599:	90                   	nop
   1659a:	5d                   	pop    %rbp
   1659b:	c3                   	ret

000000000001659c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1659c:	55                   	push   %rbp
   1659d:	48 89 e5             	mov    %rsp,%rbp
   165a0:	48 83 ec 20          	sub    $0x20,%rsp
   165a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   165b0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   165b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   165b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165bc:	48 89 ce             	mov    %rcx,%rsi
   165bf:	48 89 c7             	mov    %rax,%rdi
   165c2:	e8 87 09 00 00       	call   16f4e <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   165c7:	90                   	nop
   165c8:	c9                   	leave
   165c9:	c3                   	ret

00000000000165ca <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   165ca:	55                   	push   %rbp
   165cb:	48 89 e5             	mov    %rsp,%rbp
   165ce:	48 83 ec 20          	sub    $0x20,%rsp
   165d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   165d6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   165dd:	ff ff 0f 
   165e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   165e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165e8:	48 89 c7             	mov    %rax,%rdi
   165eb:	e8 8f 09 00 00       	call   16f7f <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   165f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   165f4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   165f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   165fc:	48 89 d6             	mov    %rdx,%rsi
   165ff:	48 89 c7             	mov    %rax,%rdi
   16602:	e8 00 ef fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   16607:	48 8b 00             	mov    (%rax),%rax
      }
   1660a:	c9                   	leave
   1660b:	c3                   	ret

000000000001660c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1660c:	55                   	push   %rbp
   1660d:	48 89 e5             	mov    %rsp,%rbp
   16610:	48 83 ec 10          	sub    $0x10,%rsp
   16614:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16618:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1661c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16620:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16624:	ba 00 00 00 00       	mov    $0x0,%edx
   16629:	48 89 ce             	mov    %rcx,%rsi
   1662c:	48 89 c7             	mov    %rax,%rdi
   1662f:	e8 66 09 00 00       	call   16f9a <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   16634:	c9                   	leave
   16635:	c3                   	ret

0000000000016636 <_ZSt18uninitialized_copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   16636:	55                   	push   %rbp
   16637:	48 89 e5             	mov    %rsp,%rbp
   1663a:	48 83 ec 30          	sub    $0x30,%rsp
   1663e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16642:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16646:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1664a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1664e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   16652:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   16656:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1665a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1665e:	48 89 ce             	mov    %rcx,%rsi
   16661:	48 89 c7             	mov    %rax,%rdi
   16664:	e8 92 09 00 00       	call   16ffb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>
    }
   16669:	c9                   	leave
   1666a:	c3                   	ret

000000000001666b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   1666b:	55                   	push   %rbp
   1666c:	48 89 e5             	mov    %rsp,%rbp
   1666f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16673:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16677:	90                   	nop
   16678:	5d                   	pop    %rbp
   16679:	c3                   	ret

000000000001667a <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   1667a:	55                   	push   %rbp
   1667b:	48 89 e5             	mov    %rsp,%rbp
   1667e:	48 83 ec 10          	sub    $0x10,%rsp
   16682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16686:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1668a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1668e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16692:	48 89 d6             	mov    %rdx,%rsi
   16695:	48 89 c7             	mov    %rax,%rdi
   16698:	e8 8b 09 00 00       	call   17028 <_ZNSt15__new_allocatorIjEC1ERKS0_>
   1669d:	90                   	nop
   1669e:	c9                   	leave
   1669f:	c3                   	ret

00000000000166a0 <_ZNSt6vectorIjSaIjEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   166a0:	55                   	push   %rbp
   166a1:	48 89 e5             	mov    %rsp,%rbp
   166a4:	48 83 ec 20          	sub    $0x20,%rsp
   166a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   166ac:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   166b3:	ff ff 1f 
   166b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   166ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   166be:	48 89 c7             	mov    %rax,%rdi
   166c1:	e8 71 09 00 00       	call   17037 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>
   166c6:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   166ca:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   166ce:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   166d2:	48 89 d6             	mov    %rdx,%rsi
   166d5:	48 89 c7             	mov    %rax,%rdi
   166d8:	e8 2a ee fe ff       	call   5507 <_ZSt3minImERKT_S2_S2_>
   166dd:	48 8b 00             	mov    (%rax),%rax
      }
   166e0:	c9                   	leave
   166e1:	c3                   	ret

00000000000166e2 <_ZNSt16allocator_traitsISaIjEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   166e2:	55                   	push   %rbp
   166e3:	48 89 e5             	mov    %rsp,%rbp
   166e6:	48 83 ec 10          	sub    $0x10,%rsp
   166ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   166ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   166f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   166f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166fa:	ba 00 00 00 00       	mov    $0x0,%edx
   166ff:	48 89 ce             	mov    %rcx,%rsi
   16702:	48 89 c7             	mov    %rax,%rdi
   16705:	e8 48 09 00 00       	call   17052 <_ZNSt15__new_allocatorIjE8allocateEmPKv>
   1670a:	c9                   	leave
   1670b:	c3                   	ret

000000000001670c <_ZSt18uninitialized_copyIPKjPjET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1670c:	55                   	push   %rbp
   1670d:	48 89 e5             	mov    %rsp,%rbp
   16710:	48 83 ec 30          	sub    $0x30,%rsp
   16714:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16718:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1671c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   16720:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   16724:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   16728:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1672c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   16730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16734:	48 89 ce             	mov    %rcx,%rsi
   16737:	48 89 c7             	mov    %rax,%rdi
   1673a:	e8 74 09 00 00       	call   170b3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>
    }
   1673f:	c9                   	leave
   16740:	c3                   	ret
   16741:	90                   	nop

0000000000016742 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16742:	55                   	push   %rbp
   16743:	48 89 e5             	mov    %rsp,%rbp
   16746:	48 83 ec 20          	sub    $0x20,%rsp
   1674a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1674e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16752:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16756:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1675a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16761:	00 
   16762:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16766:	48 89 d6             	mov    %rdx,%rsi
   16769:	48 89 c7             	mov    %rax,%rdi
   1676c:	e8 7f dc fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   16771:	c9                   	leave
   16772:	c3                   	ret
   16773:	90                   	nop

0000000000016774 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16774:	55                   	push   %rbp
   16775:	48 89 e5             	mov    %rsp,%rbp
   16778:	48 83 ec 20          	sub    $0x20,%rsp
   1677c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16780:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16784:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16788:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1678c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16793:	00 
   16794:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16798:	48 89 d6             	mov    %rdx,%rsi
   1679b:	48 89 c7             	mov    %rax,%rdi
   1679e:	e8 4d dc fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   167a3:	c9                   	leave
   167a4:	c3                   	ret

00000000000167a5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   167a5:	55                   	push   %rbp
   167a6:	48 89 e5             	mov    %rsp,%rbp
   167a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   167b1:	90                   	nop
   167b2:	5d                   	pop    %rbp
   167b3:	c3                   	ret

00000000000167b4 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   167b4:	55                   	push   %rbp
   167b5:	48 89 e5             	mov    %rsp,%rbp
   167b8:	48 83 ec 20          	sub    $0x20,%rsp
   167bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   167c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   167c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   167c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   167cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   167d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167d4:	48 89 ce             	mov    %rcx,%rsi
   167d7:	48 89 c7             	mov    %rax,%rdi
   167da:	e8 01 09 00 00       	call   170e0 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   167df:	c9                   	leave
   167e0:	c3                   	ret
   167e1:	90                   	nop

00000000000167e2 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   167e2:	55                   	push   %rbp
   167e3:	48 89 e5             	mov    %rsp,%rbp
   167e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   167ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167ee:	5d                   	pop    %rbp
   167ef:	c3                   	ret

00000000000167f0 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   167f0:	55                   	push   %rbp
   167f1:	48 89 e5             	mov    %rsp,%rbp
   167f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   167f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167fc:	5d                   	pop    %rbp
   167fd:	c3                   	ret

00000000000167fe <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   167fe:	55                   	push   %rbp
   167ff:	48 89 e5             	mov    %rsp,%rbp
   16802:	48 83 ec 30          	sub    $0x30,%rsp
   16806:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1680a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1680e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16812:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16816:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1681a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1681e:	48 c1 f8 03          	sar    $0x3,%rax
   16822:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16826:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1682b:	7e 1f                	jle    1684c <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1682d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16831:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16838:	00 
   16839:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1683d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16841:	48 89 ce             	mov    %rcx,%rsi
   16844:	48 89 c7             	mov    %rax,%rdi
   16847:	e8 d4 de fe ff       	call   4720 <memmove@plt>
      return __result + __count;
   1684c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16850:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16857:	00 
   16858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1685c:	48 01 d0             	add    %rdx,%rax
    }
   1685f:	c9                   	leave
   16860:	c3                   	ret
   16861:	90                   	nop

0000000000016862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   16862:	55                   	push   %rbp
   16863:	48 89 e5             	mov    %rsp,%rbp
   16866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1686a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1686e:	5d                   	pop    %rbp
   1686f:	c3                   	ret

0000000000016870 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   16870:	55                   	push   %rbp
   16871:	48 89 e5             	mov    %rsp,%rbp
   16874:	48 83 ec 10          	sub    $0x10,%rsp
   16878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1687c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   16880:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16888:	48 89 d6             	mov    %rdx,%rsi
   1688b:	48 89 c7             	mov    %rax,%rdi
   1688e:	e8 b5 08 00 00       	call   17148 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   16893:	90                   	nop
   16894:	c9                   	leave
   16895:	c3                   	ret

0000000000016896 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   16896:	55                   	push   %rbp
   16897:	48 89 e5             	mov    %rsp,%rbp
   1689a:	48 83 ec 20          	sub    $0x20,%rsp
   1689e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   168a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   168aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   168ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   168b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168b6:	48 89 ce             	mov    %rcx,%rsi
   168b9:	48 89 c7             	mov    %rax,%rdi
   168bc:	e8 a7 08 00 00       	call   17168 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   168c1:	90                   	nop
   168c2:	c9                   	leave
   168c3:	c3                   	ret

00000000000168c4 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   168c4:	55                   	push   %rbp
   168c5:	48 89 e5             	mov    %rsp,%rbp
   168c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   168cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168d0:	5d                   	pop    %rbp
   168d1:	c3                   	ret

00000000000168d2 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   168d2:	55                   	push   %rbp
   168d3:	48 89 e5             	mov    %rsp,%rbp
   168d6:	48 83 ec 10          	sub    $0x10,%rsp
   168da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   168e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168e6:	48 89 c7             	mov    %rax,%rdi
   168e9:	e8 be dd ff ff       	call   146ac <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   168ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   168f2:	48 89 02             	mov    %rax,(%rdx)
   168f5:	90                   	nop
   168f6:	c9                   	leave
   168f7:	c3                   	ret

00000000000168f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   168f8:	55                   	push   %rbp
   168f9:	48 89 e5             	mov    %rsp,%rbp
   168fc:	48 83 ec 10          	sub    $0x10,%rsp
   16900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   16904:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16908:	48 89 c7             	mov    %rax,%rdi
   1690b:	e8 52 ff ff ff       	call   16862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   16910:	be 01 00 00 00       	mov    $0x1,%esi
   16915:	48 89 c7             	mov    %rax,%rdi
   16918:	e8 85 08 00 00       	call   171a2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1691d:	c9                   	leave
   1691e:	c3                   	ret
   1691f:	90                   	nop

0000000000016920 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   16920:	55                   	push   %rbp
   16921:	48 89 e5             	mov    %rsp,%rbp
   16924:	41 56                	push   %r14
   16926:	41 55                	push   %r13
   16928:	41 54                	push   %r12
   1692a:	53                   	push   %rbx
   1692b:	48 83 ec 30          	sub    $0x30,%rsp
   1692f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   16933:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   16937:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1693b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   1693f:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   16943:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16947:	48 89 c6             	mov    %rax,%rsi
   1694a:	bf 48 00 00 00       	mov    $0x48,%edi
   1694f:	e8 e5 e6 fe ff       	call   5039 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   16954:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   16958:	48 89 c7             	mov    %rax,%rdi
   1695b:	e8 a9 dd ff ff       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   16960:	49 89 c6             	mov    %rax,%r14
   16963:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   16967:	48 89 c7             	mov    %rax,%rdi
   1696a:	e8 8c dd ff ff       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1696f:	49 89 c5             	mov    %rax,%r13
   16972:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   16976:	48 89 c7             	mov    %rax,%rdi
   16979:	e8 6f dd ff ff       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1697e:	49 89 c4             	mov    %rax,%r12
   16981:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16985:	48 89 c7             	mov    %rax,%rdi
   16988:	e8 d9 dc ff ff       	call   14666 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   1698d:	48 89 c3             	mov    %rax,%rbx
   16990:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16994:	48 89 c7             	mov    %rax,%rdi
   16997:	e8 c6 fe ff ff       	call   16862 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   1699c:	4d 89 f0             	mov    %r14,%r8
   1699f:	4c 89 e9             	mov    %r13,%rcx
   169a2:	4c 89 e2             	mov    %r12,%rdx
   169a5:	48 89 de             	mov    %rbx,%rsi
   169a8:	48 89 c7             	mov    %rax,%rdi
   169ab:	e8 1c 08 00 00       	call   171cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   169b0:	eb 33                	jmp    169e5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   169b2:	48 89 c7             	mov    %rax,%rdi
   169b5:	e8 86 d7 fe ff       	call   4140 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   169ba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   169be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   169c2:	48 89 d6             	mov    %rdx,%rsi
   169c5:	48 89 c7             	mov    %rax,%rdi
   169c8:	e8 c9 f0 ff ff       	call   15a96 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   169cd:	e8 9e dc fe ff       	call   4670 <__cxa_rethrow@plt>
	  __catch(...)
   169d2:	48 89 c3             	mov    %rax,%rbx
   169d5:	e8 56 dd fe ff       	call   4730 <__cxa_end_catch@plt>
   169da:	48 89 d8             	mov    %rbx,%rax
   169dd:	48 89 c7             	mov    %rax,%rdi
   169e0:	e8 cb dd fe ff       	call   47b0 <_Unwind_Resume@plt>
	}
   169e5:	48 83 c4 30          	add    $0x30,%rsp
   169e9:	5b                   	pop    %rbx
   169ea:	41 5c                	pop    %r12
   169ec:	41 5d                	pop    %r13
   169ee:	41 5e                	pop    %r14
   169f0:	5d                   	pop    %rbp
   169f1:	c3                   	ret

00000000000169f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   169f2:	55                   	push   %rbp
   169f3:	48 89 e5             	mov    %rsp,%rbp
   169f6:	48 83 ec 20          	sub    $0x20,%rsp
   169fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   169fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a02:	48 8b 50 18          	mov    0x18(%rax),%rdx
   16a06:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16a0a:	48 89 d6             	mov    %rdx,%rsi
   16a0d:	48 89 c7             	mov    %rax,%rdi
   16a10:	e8 77 e2 ff ff       	call   14c8c <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   16a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a19:	c9                   	leave
   16a1a:	c3                   	ret
   16a1b:	90                   	nop

0000000000016a1c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   16a1c:	55                   	push   %rbp
   16a1d:	48 89 e5             	mov    %rsp,%rbp
   16a20:	48 83 ec 20          	sub    $0x20,%rsp
   16a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16a2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   16a30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a34:	48 89 c7             	mov    %rax,%rdi
   16a37:	e8 fc 07 00 00       	call   17238 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   16a3c:	48 8b 10             	mov    (%rax),%rdx
   16a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a43:	48 89 10             	mov    %rdx,(%rax)
   16a46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a4a:	48 89 c7             	mov    %rax,%rdi
   16a4d:	e8 0e 00 00 00       	call   16a60 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   16a52:	48 8b 10             	mov    (%rax),%rdx
   16a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a59:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16a5d:	90                   	nop
   16a5e:	c9                   	leave
   16a5f:	c3                   	ret

0000000000016a60 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   16a60:	55                   	push   %rbp
   16a61:	48 89 e5             	mov    %rsp,%rbp
   16a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   16a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a6c:	5d                   	pop    %rbp
   16a6d:	c3                   	ret

0000000000016a6e <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   16a6e:	55                   	push   %rbp
   16a6f:	48 89 e5             	mov    %rsp,%rbp
   16a72:	48 83 ec 10          	sub    $0x10,%rsp
   16a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   16a7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a7e:	48 83 c0 20          	add    $0x20,%rax
   16a82:	48 89 c7             	mov    %rax,%rdi
   16a85:	e8 bc 07 00 00       	call   17246 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   16a8a:	c9                   	leave
   16a8b:	c3                   	ret

0000000000016a8c <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   16a8c:	55                   	push   %rbp
   16a8d:	48 89 e5             	mov    %rsp,%rbp
   16a90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   16a98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a9c:	5d                   	pop    %rbp
   16a9d:	c3                   	ret

0000000000016a9e <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16a9e:	55                   	push   %rbp
   16a9f:	48 89 e5             	mov    %rsp,%rbp
   16aa2:	48 83 ec 10          	sub    $0x10,%rsp
   16aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16aae:	48 89 c7             	mov    %rax,%rdi
   16ab1:	e8 aa 07 00 00       	call   17260 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   16ab6:	c9                   	leave
   16ab7:	c3                   	ret

0000000000016ab8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16ab8:	55                   	push   %rbp
   16ab9:	48 89 e5             	mov    %rsp,%rbp
   16abc:	48 83 ec 20          	sub    $0x20,%rsp
   16ac0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16ac4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16ac8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16acd:	74 40                	je     16b0f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16ad3:	48 89 c7             	mov    %rax,%rdi
   16ad6:	e8 9f 07 00 00       	call   1727a <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   16adb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ae3:	48 89 c7             	mov    %rax,%rdi
   16ae6:	e8 9d 07 00 00       	call   17288 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   16aeb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16af0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16af4:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16af8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16afc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b00:	48 89 ce             	mov    %rcx,%rsi
   16b03:	48 89 c7             	mov    %rax,%rdi
   16b06:	e8 a4 07 00 00       	call   172af <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   16b0b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16b0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16b13:	c9                   	leave
   16b14:	c3                   	ret
   16b15:	90                   	nop

0000000000016b16 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16b16:	55                   	push   %rbp
   16b17:	48 89 e5             	mov    %rsp,%rbp
   16b1a:	48 83 ec 20          	sub    $0x20,%rsp
   16b1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16b26:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16b2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b2e:	48 89 c7             	mov    %rax,%rdi
   16b31:	e8 be 07 00 00       	call   172f4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   16b36:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16b3a:	0f 92 c0             	setb   %al
   16b3d:	0f b6 c0             	movzbl %al,%eax
   16b40:	48 85 c0             	test   %rax,%rax
   16b43:	0f 95 c0             	setne  %al
   16b46:	84 c0                	test   %al,%al
   16b48:	74 1a                	je     16b64 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16b4a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16b51:	ff ff 1f 
   16b54:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16b58:	73 05                	jae    16b5f <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16b5a:	e8 51 d7 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16b5f:	e8 9c d5 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16b64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16b68:	48 c1 e0 03          	shl    $0x3,%rax
   16b6c:	48 89 c7             	mov    %rax,%rdi
   16b6f:	e8 5c d8 fe ff       	call   43d0 <_Znwm@plt>
   16b74:	90                   	nop
      }
   16b75:	c9                   	leave
   16b76:	c3                   	ret

0000000000016b77 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   16b77:	55                   	push   %rbp
   16b78:	48 89 e5             	mov    %rsp,%rbp
   16b7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16b7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b83:	5d                   	pop    %rbp
   16b84:	c3                   	ret

0000000000016b85 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16b85:	55                   	push   %rbp
   16b86:	48 89 e5             	mov    %rsp,%rbp
   16b89:	48 83 ec 30          	sub    $0x30,%rsp
   16b8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16b95:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16b99:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16b9d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ba1:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16ba5:	48 c1 f8 03          	sar    $0x3,%rax
   16ba9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16bad:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16bb2:	7e 1f                	jle    16bd3 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bb8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16bbf:	00 
   16bc0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16bc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16bc8:	48 89 ce             	mov    %rcx,%rsi
   16bcb:	48 89 c7             	mov    %rax,%rdi
   16bce:	e8 4d db fe ff       	call   4720 <memmove@plt>
      return __result + __count;
   16bd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bd7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16bde:	00 
   16bdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16be3:	48 01 d0             	add    %rdx,%rax
    }
   16be6:	c9                   	leave
   16be7:	c3                   	ret

0000000000016be8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   16be8:	55                   	push   %rbp
   16be9:	48 89 e5             	mov    %rsp,%rbp
   16bec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16bf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16bf4:	90                   	nop
   16bf5:	5d                   	pop    %rbp
   16bf6:	c3                   	ret
   16bf7:	90                   	nop

0000000000016bf8 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16bf8:	55                   	push   %rbp
   16bf9:	48 89 e5             	mov    %rsp,%rbp
   16bfc:	48 83 ec 20          	sub    $0x20,%rsp
   16c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16c0c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16c10:	48 89 d0             	mov    %rdx,%rax
   16c13:	48 c1 e0 03          	shl    $0x3,%rax
   16c17:	48 01 d0             	add    %rdx,%rax
   16c1a:	48 c1 e0 04          	shl    $0x4,%rax
   16c1e:	48 89 c2             	mov    %rax,%rdx
   16c21:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16c25:	48 89 d6             	mov    %rdx,%rsi
   16c28:	48 89 c7             	mov    %rax,%rdi
   16c2b:	e8 c0 d7 fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   16c30:	c9                   	leave
   16c31:	c3                   	ret

0000000000016c32 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16c32:	55                   	push   %rbp
   16c33:	48 89 e5             	mov    %rsp,%rbp
   16c36:	48 83 ec 10          	sub    $0x10,%rsp
   16c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c42:	48 89 c7             	mov    %rax,%rdi
   16c45:	e8 be 06 00 00       	call   17308 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   16c4a:	c9                   	leave
   16c4b:	c3                   	ret

0000000000016c4c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16c4c:	55                   	push   %rbp
   16c4d:	48 89 e5             	mov    %rsp,%rbp
   16c50:	48 83 ec 20          	sub    $0x20,%rsp
   16c54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16c58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16c5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c64:	48 89 c7             	mov    %rax,%rdi
   16c67:	e8 b6 06 00 00       	call   17322 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   16c6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16c70:	0f 92 c0             	setb   %al
   16c73:	0f b6 c0             	movzbl %al,%eax
   16c76:	48 85 c0             	test   %rax,%rax
   16c79:	0f 95 c0             	setne  %al
   16c7c:	84 c0                	test   %al,%al
   16c7e:	74 1a                	je     16c9a <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16c80:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   16c87:	1c c7 01 
   16c8a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16c8e:	73 05                	jae    16c95 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16c90:	e8 1b d6 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16c95:	e8 66 d4 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16c9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16c9e:	48 89 d0             	mov    %rdx,%rax
   16ca1:	48 c1 e0 03          	shl    $0x3,%rax
   16ca5:	48 01 d0             	add    %rdx,%rax
   16ca8:	48 c1 e0 04          	shl    $0x4,%rax
   16cac:	48 89 c7             	mov    %rax,%rdi
   16caf:	e8 1c d7 fe ff       	call   43d0 <_Znwm@plt>
   16cb4:	90                   	nop
      }
   16cb5:	c9                   	leave
   16cb6:	c3                   	ret

0000000000016cb7 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   16cb7:	55                   	push   %rbp
   16cb8:	48 89 e5             	mov    %rsp,%rbp
   16cbb:	48 83 ec 20          	sub    $0x20,%rsp
   16cbf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16cc3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16cc7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   16ccb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16ccf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16cd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cd7:	48 89 ce             	mov    %rcx,%rsi
   16cda:	48 89 c7             	mov    %rax,%rdi
   16cdd:	e8 54 06 00 00       	call   17336 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   16ce2:	c9                   	leave
   16ce3:	c3                   	ret

0000000000016ce4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16ce4:	55                   	push   %rbp
   16ce5:	48 89 e5             	mov    %rsp,%rbp
   16ce8:	48 83 ec 10          	sub    $0x10,%rsp
   16cec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16cf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16cf4:	48 89 c7             	mov    %rax,%rdi
   16cf7:	e8 86 06 00 00       	call   17382 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   16cfc:	c9                   	leave
   16cfd:	c3                   	ret

0000000000016cfe <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   16cfe:	55                   	push   %rbp
   16cff:	48 89 e5             	mov    %rsp,%rbp
   16d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   16d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d0a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   16d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d15:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   16d1c:	00 
   16d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d21:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   16d28:	00 
	{ }
   16d29:	90                   	nop
   16d2a:	5d                   	pop    %rbp
   16d2b:	c3                   	ret

0000000000016d2c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   16d2c:	55                   	push   %rbp
   16d2d:	48 89 e5             	mov    %rsp,%rbp
   16d30:	48 83 ec 10          	sub    $0x10,%rsp
   16d34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   16d3c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   16d41:	74 15                	je     16d58 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   16d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d47:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   16d4b:	48 89 d6             	mov    %rdx,%rsi
   16d4e:	48 89 c7             	mov    %rax,%rdi
   16d51:	e8 46 06 00 00       	call   1739c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   16d56:	eb 05                	jmp    16d5d <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   16d58:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   16d5d:	c9                   	leave
   16d5e:	c3                   	ret

0000000000016d5f <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   16d5f:	55                   	push   %rbp
   16d60:	48 89 e5             	mov    %rsp,%rbp
   16d63:	48 83 ec 20          	sub    $0x20,%rsp
   16d67:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16d6b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   16d6f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   16d73:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   16d77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16d7b:	48 89 d6             	mov    %rdx,%rsi
   16d7e:	48 89 c7             	mov    %rax,%rdi
   16d81:	e8 40 06 00 00       	call   173c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   16d86:	c9                   	leave
   16d87:	c3                   	ret

0000000000016d88 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16d88:	55                   	push   %rbp
   16d89:	48 89 e5             	mov    %rsp,%rbp
   16d8c:	48 83 ec 20          	sub    $0x20,%rsp
   16d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16d98:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16d9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16da0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16da7:	00 
   16da8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16dac:	48 89 d6             	mov    %rdx,%rsi
   16daf:	48 89 c7             	mov    %rax,%rdi
   16db2:	e8 39 d6 fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   16db7:	c9                   	leave
   16db8:	c3                   	ret

0000000000016db9 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16db9:	55                   	push   %rbp
   16dba:	48 89 e5             	mov    %rsp,%rbp
   16dbd:	48 83 ec 10          	sub    $0x10,%rsp
   16dc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dc9:	48 89 c7             	mov    %rax,%rdi
   16dcc:	e8 53 06 00 00       	call   17424 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   16dd1:	c9                   	leave
   16dd2:	c3                   	ret

0000000000016dd3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16dd3:	55                   	push   %rbp
   16dd4:	48 89 e5             	mov    %rsp,%rbp
   16dd7:	48 83 ec 20          	sub    $0x20,%rsp
   16ddb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16ddf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16de3:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16de8:	74 40                	je     16e2a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16dea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dee:	48 89 c7             	mov    %rax,%rdi
   16df1:	e8 48 06 00 00       	call   1743e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   16df6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16dfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dfe:	48 89 c7             	mov    %rax,%rdi
   16e01:	e8 46 06 00 00       	call   1744c <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   16e06:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16e0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e0f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16e13:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16e17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16e1b:	48 89 ce             	mov    %rcx,%rsi
   16e1e:	48 89 c7             	mov    %rax,%rdi
   16e21:	e8 4d 06 00 00       	call   17473 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   16e26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16e2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16e2e:	c9                   	leave
   16e2f:	c3                   	ret

0000000000016e30 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16e30:	55                   	push   %rbp
   16e31:	48 89 e5             	mov    %rsp,%rbp
   16e34:	48 83 ec 20          	sub    $0x20,%rsp
   16e38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16e40:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e48:	48 89 c7             	mov    %rax,%rdi
   16e4b:	e8 68 06 00 00       	call   174b8 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   16e50:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e54:	0f 92 c0             	setb   %al
   16e57:	0f b6 c0             	movzbl %al,%eax
   16e5a:	48 85 c0             	test   %rax,%rax
   16e5d:	0f 95 c0             	setne  %al
   16e60:	84 c0                	test   %al,%al
   16e62:	74 1a                	je     16e7e <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16e64:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16e6b:	ff ff 1f 
   16e6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e72:	73 05                	jae    16e79 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16e74:	e8 37 d4 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16e79:	e8 82 d2 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16e7e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e82:	48 c1 e0 03          	shl    $0x3,%rax
   16e86:	48 89 c7             	mov    %rax,%rdi
   16e89:	e8 42 d5 fe ff       	call   43d0 <_Znwm@plt>
   16e8e:	90                   	nop
      }
   16e8f:	c9                   	leave
   16e90:	c3                   	ret

0000000000016e91 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   16e91:	55                   	push   %rbp
   16e92:	48 89 e5             	mov    %rsp,%rbp
   16e95:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16e99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e9d:	5d                   	pop    %rbp
   16e9e:	c3                   	ret

0000000000016e9f <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16e9f:	55                   	push   %rbp
   16ea0:	48 89 e5             	mov    %rsp,%rbp
   16ea3:	48 83 ec 30          	sub    $0x30,%rsp
   16ea7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16eab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16eaf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16eb3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16eb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ebb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16ebf:	48 c1 f8 03          	sar    $0x3,%rax
   16ec3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16ec7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16ecc:	7e 1f                	jle    16eed <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ed2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16ed9:	00 
   16eda:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16ede:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ee2:	48 89 ce             	mov    %rcx,%rsi
   16ee5:	48 89 c7             	mov    %rax,%rdi
   16ee8:	e8 33 d8 fe ff       	call   4720 <memmove@plt>
      return __result + __count;
   16eed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ef1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16ef8:	00 
   16ef9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16efd:	48 01 d0             	add    %rdx,%rax
    }
   16f00:	c9                   	leave
   16f01:	c3                   	ret

0000000000016f02 <_ZNSt15__new_allocatorIP13VkImageView_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   16f02:	55                   	push   %rbp
   16f03:	48 89 e5             	mov    %rsp,%rbp
   16f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f0e:	90                   	nop
   16f0f:	5d                   	pop    %rbp
   16f10:	c3                   	ret

0000000000016f11 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkImageView_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   16f11:	55                   	push   %rbp
   16f12:	48 89 e5             	mov    %rsp,%rbp
   16f15:	48 83 ec 20          	sub    $0x20,%rsp
   16f19:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f1d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f21:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   16f25:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16f29:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f31:	48 89 ce             	mov    %rcx,%rsi
   16f34:	48 89 c7             	mov    %rax,%rdi
   16f37:	e8 90 05 00 00       	call   174cc <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>
   16f3c:	c9                   	leave
   16f3d:	c3                   	ret

0000000000016f3e <_ZNSt15__new_allocatorIP13VkSemaphore_TEC1ERKS2_>:
   16f3e:	55                   	push   %rbp
   16f3f:	48 89 e5             	mov    %rsp,%rbp
   16f42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f4a:	90                   	nop
   16f4b:	5d                   	pop    %rbp
   16f4c:	c3                   	ret
   16f4d:	90                   	nop

0000000000016f4e <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16f4e:	55                   	push   %rbp
   16f4f:	48 89 e5             	mov    %rsp,%rbp
   16f52:	48 83 ec 20          	sub    $0x20,%rsp
   16f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16f62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f66:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16f6d:	00 
   16f6e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16f72:	48 89 d6             	mov    %rdx,%rsi
   16f75:	48 89 c7             	mov    %rax,%rdi
   16f78:	e8 73 d4 fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   16f7d:	c9                   	leave
   16f7e:	c3                   	ret

0000000000016f7f <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16f7f:	55                   	push   %rbp
   16f80:	48 89 e5             	mov    %rsp,%rbp
   16f83:	48 83 ec 10          	sub    $0x10,%rsp
   16f87:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f8f:	48 89 c7             	mov    %rax,%rdi
   16f92:	e8 81 05 00 00       	call   17518 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   16f97:	c9                   	leave
   16f98:	c3                   	ret
   16f99:	90                   	nop

0000000000016f9a <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16f9a:	55                   	push   %rbp
   16f9b:	48 89 e5             	mov    %rsp,%rbp
   16f9e:	48 83 ec 20          	sub    $0x20,%rsp
   16fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16faa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fb2:	48 89 c7             	mov    %rax,%rdi
   16fb5:	e8 78 05 00 00       	call   17532 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   16fba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16fbe:	0f 92 c0             	setb   %al
   16fc1:	0f b6 c0             	movzbl %al,%eax
   16fc4:	48 85 c0             	test   %rax,%rax
   16fc7:	0f 95 c0             	setne  %al
   16fca:	84 c0                	test   %al,%al
   16fcc:	74 1a                	je     16fe8 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16fce:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16fd5:	ff ff 1f 
   16fd8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16fdc:	73 05                	jae    16fe3 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16fde:	e8 cd d2 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16fe3:	e8 18 d1 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16fe8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16fec:	48 c1 e0 03          	shl    $0x3,%rax
   16ff0:	48 89 c7             	mov    %rax,%rdi
   16ff3:	e8 d8 d3 fe ff       	call   43d0 <_Znwm@plt>
   16ff8:	90                   	nop
      }
   16ff9:	c9                   	leave
   16ffa:	c3                   	ret

0000000000016ffb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKP13VkSemaphore_TPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   16ffb:	55                   	push   %rbp
   16ffc:	48 89 e5             	mov    %rsp,%rbp
   16fff:	48 83 ec 20          	sub    $0x20,%rsp
   17003:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17007:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1700b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1700f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17013:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1701b:	48 89 ce             	mov    %rcx,%rsi
   1701e:	48 89 c7             	mov    %rax,%rdi
   17021:	e8 20 05 00 00       	call   17546 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>
   17026:	c9                   	leave
   17027:	c3                   	ret

0000000000017028 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   17028:	55                   	push   %rbp
   17029:	48 89 e5             	mov    %rsp,%rbp
   1702c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17030:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17034:	90                   	nop
   17035:	5d                   	pop    %rbp
   17036:	c3                   	ret

0000000000017037 <_ZNSt16allocator_traitsISaIjEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   17037:	55                   	push   %rbp
   17038:	48 89 e5             	mov    %rsp,%rbp
   1703b:	48 83 ec 10          	sub    $0x10,%rsp
   1703f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   17043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17047:	48 89 c7             	mov    %rax,%rdi
   1704a:	e8 43 05 00 00       	call   17592 <_ZNKSt15__new_allocatorIjE8max_sizeEv>
      }
   1704f:	c9                   	leave
   17050:	c3                   	ret
   17051:	90                   	nop

0000000000017052 <_ZNSt15__new_allocatorIjE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17052:	55                   	push   %rbp
   17053:	48 89 e5             	mov    %rsp,%rbp
   17056:	48 83 ec 20          	sub    $0x20,%rsp
   1705a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1705e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17062:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1706a:	48 89 c7             	mov    %rax,%rdi
   1706d:	e8 3a 05 00 00       	call   175ac <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   17072:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17076:	0f 92 c0             	setb   %al
   17079:	0f b6 c0             	movzbl %al,%eax
   1707c:	48 85 c0             	test   %rax,%rax
   1707f:	0f 95 c0             	setne  %al
   17082:	84 c0                	test   %al,%al
   17084:	74 1a                	je     170a0 <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   17086:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   1708d:	ff ff 3f 
   17090:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17094:	73 05                	jae    1709b <_ZNSt15__new_allocatorIjE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   17096:	e8 15 d2 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1709b:	e8 60 d0 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   170a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   170a4:	48 c1 e0 02          	shl    $0x2,%rax
   170a8:	48 89 c7             	mov    %rax,%rdi
   170ab:	e8 20 d3 fe ff       	call   43d0 <_Znwm@plt>
   170b0:	90                   	nop
      }
   170b1:	c9                   	leave
   170b2:	c3                   	ret

00000000000170b3 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKjPjEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   170b3:	55                   	push   %rbp
   170b4:	48 89 e5             	mov    %rsp,%rbp
   170b7:	48 83 ec 20          	sub    $0x20,%rsp
   170bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   170bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   170c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   170c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   170cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   170cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170d3:	48 89 ce             	mov    %rcx,%rsi
   170d6:	48 89 c7             	mov    %rax,%rdi
   170d9:	e8 e2 04 00 00       	call   175c0 <_ZSt4copyIPKjPjET0_T_S4_S3_>
   170de:	c9                   	leave
   170df:	c3                   	ret

00000000000170e0 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   170e0:	55                   	push   %rbp
   170e1:	48 89 e5             	mov    %rsp,%rbp
   170e4:	53                   	push   %rbx
   170e5:	48 83 ec 28          	sub    $0x28,%rsp
   170e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   170ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   170f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   170f5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   170f9:	48 89 c7             	mov    %rax,%rdi
   170fc:	e8 0a 05 00 00       	call   1760b <_ZSt12__miter_baseIPKPKcET_S4_>
   17101:	48 89 c3             	mov    %rax,%rbx
   17104:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17108:	48 89 c7             	mov    %rax,%rdi
   1710b:	e8 fb 04 00 00       	call   1760b <_ZSt12__miter_baseIPKPKcET_S4_>
   17110:	48 89 c1             	mov    %rax,%rcx
   17113:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17117:	48 89 c2             	mov    %rax,%rdx
   1711a:	48 89 de             	mov    %rbx,%rsi
   1711d:	48 89 cf             	mov    %rcx,%rdi
   17120:	e8 f4 04 00 00       	call   17619 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   17125:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17129:	c9                   	leave
   1712a:	c3                   	ret
   1712b:	90                   	nop

000000000001712c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   1712c:	55                   	push   %rbp
   1712d:	48 89 e5             	mov    %rsp,%rbp
   17130:	48 83 ec 10          	sub    $0x10,%rsp
   17134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1713c:	48 89 c7             	mov    %rax,%rdi
   1713f:	e8 dc d0 fe ff       	call   4220 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   17144:	90                   	nop
   17145:	c9                   	leave
   17146:	c3                   	ret
   17147:	90                   	nop

0000000000017148 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   17148:	55                   	push   %rbp
   17149:	48 89 e5             	mov    %rsp,%rbp
   1714c:	48 83 ec 10          	sub    $0x10,%rsp
   17150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17154:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   17158:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1715c:	48 89 c7             	mov    %rax,%rdi
   1715f:	e8 c8 ff ff ff       	call   1712c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   17164:	90                   	nop
   17165:	c9                   	leave
   17166:	c3                   	ret
   17167:	90                   	nop

0000000000017168 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17168:	55                   	push   %rbp
   17169:	48 89 e5             	mov    %rsp,%rbp
   1716c:	48 83 ec 20          	sub    $0x20,%rsp
   17170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17174:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17178:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1717c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17180:	48 89 d0             	mov    %rdx,%rax
   17183:	48 c1 e0 03          	shl    $0x3,%rax
   17187:	48 01 d0             	add    %rdx,%rax
   1718a:	48 c1 e0 03          	shl    $0x3,%rax
   1718e:	48 89 c2             	mov    %rax,%rdx
   17191:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17195:	48 89 d6             	mov    %rdx,%rsi
   17198:	48 89 c7             	mov    %rax,%rdi
   1719b:	e8 50 d2 fe ff       	call   43f0 <_ZdlPvm@plt>
      }
   171a0:	c9                   	leave
   171a1:	c3                   	ret

00000000000171a2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   171a2:	55                   	push   %rbp
   171a3:	48 89 e5             	mov    %rsp,%rbp
   171a6:	48 83 ec 10          	sub    $0x10,%rsp
   171aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   171ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   171b2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   171b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171ba:	ba 00 00 00 00       	mov    $0x0,%edx
   171bf:	48 89 ce             	mov    %rcx,%rsi
   171c2:	48 89 c7             	mov    %rax,%rdi
   171c5:	e8 ba 04 00 00       	call   17684 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   171ca:	c9                   	leave
   171cb:	c3                   	ret

00000000000171cc <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   171cc:	55                   	push   %rbp
   171cd:	48 89 e5             	mov    %rsp,%rbp
   171d0:	41 54                	push   %r12
   171d2:	53                   	push   %rbx
   171d3:	48 83 ec 30          	sub    $0x30,%rsp
   171d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   171db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   171df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   171e3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   171e7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   171eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   171ef:	48 89 c7             	mov    %rax,%rdi
   171f2:	e8 12 d5 ff ff       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   171f7:	49 89 c4             	mov    %rax,%r12
   171fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   171fe:	48 89 c7             	mov    %rax,%rdi
   17201:	e8 f5 d4 ff ff       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   17206:	48 89 c3             	mov    %rax,%rbx
   17209:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1720d:	48 89 c7             	mov    %rax,%rdi
   17210:	e8 d8 d4 ff ff       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   17215:	48 89 c2             	mov    %rax,%rdx
   17218:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   1721c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17220:	4d 89 e0             	mov    %r12,%r8
   17223:	48 89 d9             	mov    %rbx,%rcx
   17226:	48 89 c7             	mov    %rax,%rdi
   17229:	e8 e8 04 00 00       	call   17716 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   1722e:	90                   	nop
   1722f:	48 83 c4 30          	add    $0x30,%rsp
   17233:	5b                   	pop    %rbx
   17234:	41 5c                	pop    %r12
   17236:	5d                   	pop    %rbp
   17237:	c3                   	ret

0000000000017238 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17238:	55                   	push   %rbp
   17239:	48 89 e5             	mov    %rsp,%rbp
   1723c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   17240:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17244:	5d                   	pop    %rbp
   17245:	c3                   	ret

0000000000017246 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   17246:	55                   	push   %rbp
   17247:	48 89 e5             	mov    %rsp,%rbp
   1724a:	48 83 ec 10          	sub    $0x10,%rsp
   1724e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   17252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17256:	48 89 c7             	mov    %rax,%rdi
   17259:	e8 68 05 00 00       	call   177c6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   1725e:	c9                   	leave
   1725f:	c3                   	ret

0000000000017260 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17260:	55                   	push   %rbp
   17261:	48 89 e5             	mov    %rsp,%rbp
   17264:	48 83 ec 10          	sub    $0x10,%rsp
   17268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1726c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17270:	48 89 c7             	mov    %rax,%rdi
   17273:	e8 7c 00 00 00       	call   172f4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   17278:	c9                   	leave
   17279:	c3                   	ret

000000000001727a <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1727a:	55                   	push   %rbp
   1727b:	48 89 e5             	mov    %rsp,%rbp
   1727e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17282:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17286:	5d                   	pop    %rbp
   17287:	c3                   	ret

0000000000017288 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17288:	55                   	push   %rbp
   17289:	48 89 e5             	mov    %rsp,%rbp
   1728c:	48 83 ec 10          	sub    $0x10,%rsp
   17290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17298:	48 89 c6             	mov    %rax,%rsi
   1729b:	bf 08 00 00 00       	mov    $0x8,%edi
   172a0:	e8 94 dd fe ff       	call   5039 <_ZnwmPv>
   172a5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   172ac:	90                   	nop
   172ad:	c9                   	leave
   172ae:	c3                   	ret

00000000000172af <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   172af:	55                   	push   %rbp
   172b0:	48 89 e5             	mov    %rsp,%rbp
   172b3:	48 83 ec 20          	sub    $0x20,%rsp
   172b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   172bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   172bf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   172c3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   172c7:	48 89 c7             	mov    %rax,%rdi
   172ca:	e8 05 05 00 00       	call   177d4 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   172cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   172d3:	48 89 c7             	mov    %rax,%rdi
   172d6:	e8 70 dd fe ff       	call   504b <_ZSt17__size_to_integerm>
   172db:	48 89 c1             	mov    %rax,%rcx
   172de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   172e6:	48 89 ce             	mov    %rcx,%rsi
   172e9:	48 89 c7             	mov    %rax,%rdi
   172ec:	e8 ee 04 00 00       	call   177df <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   172f1:	c9                   	leave
   172f2:	c3                   	ret
   172f3:	90                   	nop

00000000000172f4 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   172f4:	55                   	push   %rbp
   172f5:	48 89 e5             	mov    %rsp,%rbp
   172f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   172fc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17303:	ff ff 0f 
      }
   17306:	5d                   	pop    %rbp
   17307:	c3                   	ret

0000000000017308 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17308:	55                   	push   %rbp
   17309:	48 89 e5             	mov    %rsp,%rbp
   1730c:	48 83 ec 10          	sub    $0x10,%rsp
   17310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17318:	48 89 c7             	mov    %rax,%rdi
   1731b:	e8 02 00 00 00       	call   17322 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   17320:	c9                   	leave
   17321:	c3                   	ret

0000000000017322 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17322:	55                   	push   %rbp
   17323:	48 89 e5             	mov    %rsp,%rbp
   17326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1732a:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   17331:	8e e3 00 
      }
   17334:	5d                   	pop    %rbp
   17335:	c3                   	ret

0000000000017336 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   17336:	55                   	push   %rbp
   17337:	48 89 e5             	mov    %rsp,%rbp
   1733a:	53                   	push   %rbx
   1733b:	48 83 ec 28          	sub    $0x28,%rsp
   1733f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17343:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17347:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1734b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1734f:	48 89 c7             	mov    %rax,%rdi
   17352:	e8 e5 04 00 00       	call   1783c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   17357:	48 89 c3             	mov    %rax,%rbx
   1735a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1735e:	48 89 c7             	mov    %rax,%rdi
   17361:	e8 d6 04 00 00       	call   1783c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   17366:	48 89 c1             	mov    %rax,%rcx
   17369:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1736d:	48 89 c2             	mov    %rax,%rdx
   17370:	48 89 de             	mov    %rbx,%rsi
   17373:	48 89 cf             	mov    %rcx,%rdi
   17376:	e8 cf 04 00 00       	call   1784a <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   1737b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1737f:	c9                   	leave
   17380:	c3                   	ret
   17381:	90                   	nop

0000000000017382 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17382:	55                   	push   %rbp
   17383:	48 89 e5             	mov    %rsp,%rbp
   17386:	48 83 ec 10          	sub    $0x10,%rsp
   1738a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1738e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17392:	48 89 c7             	mov    %rax,%rdi
   17395:	e8 1a 05 00 00       	call   178b4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   1739a:	c9                   	leave
   1739b:	c3                   	ret

000000000001739c <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1739c:	55                   	push   %rbp
   1739d:	48 89 e5             	mov    %rsp,%rbp
   173a0:	48 83 ec 10          	sub    $0x10,%rsp
   173a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   173a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   173ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   173b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173b4:	ba 00 00 00 00       	mov    $0x0,%edx
   173b9:	48 89 ce             	mov    %rcx,%rsi
   173bc:	48 89 c7             	mov    %rax,%rdi
   173bf:	e8 04 05 00 00       	call   178c8 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   173c4:	c9                   	leave
   173c5:	c3                   	ret

00000000000173c6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   173c6:	55                   	push   %rbp
   173c7:	48 89 e5             	mov    %rsp,%rbp
   173ca:	48 83 ec 20          	sub    $0x20,%rsp
   173ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   173d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   173d6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   173db:	74 40                	je     1741d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   173dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173e1:	48 89 c7             	mov    %rax,%rdi
   173e4:	e8 40 05 00 00       	call   17929 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   173e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   173ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   173f1:	48 89 c7             	mov    %rax,%rdi
   173f4:	e8 3e 05 00 00       	call   17937 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   173f9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   173fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17402:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   17406:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1740a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1740e:	48 89 ce             	mov    %rcx,%rsi
   17411:	48 89 c7             	mov    %rax,%rdi
   17414:	e8 45 05 00 00       	call   1795e <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   17419:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1741d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   17421:	c9                   	leave
   17422:	c3                   	ret
   17423:	90                   	nop

0000000000017424 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17424:	55                   	push   %rbp
   17425:	48 89 e5             	mov    %rsp,%rbp
   17428:	48 83 ec 10          	sub    $0x10,%rsp
   1742c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17434:	48 89 c7             	mov    %rax,%rdi
   17437:	e8 7c 00 00 00       	call   174b8 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   1743c:	c9                   	leave
   1743d:	c3                   	ret

000000000001743e <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1743e:	55                   	push   %rbp
   1743f:	48 89 e5             	mov    %rsp,%rbp
   17442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1744a:	5d                   	pop    %rbp
   1744b:	c3                   	ret

000000000001744c <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1744c:	55                   	push   %rbp
   1744d:	48 89 e5             	mov    %rsp,%rbp
   17450:	48 83 ec 10          	sub    $0x10,%rsp
   17454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1745c:	48 89 c6             	mov    %rax,%rsi
   1745f:	bf 08 00 00 00       	mov    $0x8,%edi
   17464:	e8 d0 db fe ff       	call   5039 <_ZnwmPv>
   17469:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17470:	90                   	nop
   17471:	c9                   	leave
   17472:	c3                   	ret

0000000000017473 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17473:	55                   	push   %rbp
   17474:	48 89 e5             	mov    %rsp,%rbp
   17477:	48 83 ec 20          	sub    $0x20,%rsp
   1747b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1747f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17483:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17487:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1748b:	48 89 c7             	mov    %rax,%rdi
   1748e:	e8 0f 05 00 00       	call   179a2 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17493:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17497:	48 89 c7             	mov    %rax,%rdi
   1749a:	e8 ac db fe ff       	call   504b <_ZSt17__size_to_integerm>
   1749f:	48 89 c1             	mov    %rax,%rcx
   174a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   174aa:	48 89 ce             	mov    %rcx,%rsi
   174ad:	48 89 c7             	mov    %rax,%rdi
   174b0:	e8 f8 04 00 00       	call   179ad <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   174b5:	c9                   	leave
   174b6:	c3                   	ret
   174b7:	90                   	nop

00000000000174b8 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   174b8:	55                   	push   %rbp
   174b9:	48 89 e5             	mov    %rsp,%rbp
   174bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   174c0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   174c7:	ff ff 0f 
      }
   174ca:	5d                   	pop    %rbp
   174cb:	c3                   	ret

00000000000174cc <_ZSt4copyIPKP13VkImageView_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   174cc:	55                   	push   %rbp
   174cd:	48 89 e5             	mov    %rsp,%rbp
   174d0:	53                   	push   %rbx
   174d1:	48 83 ec 28          	sub    $0x28,%rsp
   174d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   174d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   174dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   174e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   174e5:	48 89 c7             	mov    %rax,%rdi
   174e8:	e8 1d 05 00 00       	call   17a0a <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   174ed:	48 89 c3             	mov    %rax,%rbx
   174f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174f4:	48 89 c7             	mov    %rax,%rdi
   174f7:	e8 0e 05 00 00       	call   17a0a <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>
   174fc:	48 89 c1             	mov    %rax,%rcx
   174ff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17503:	48 89 c2             	mov    %rax,%rdx
   17506:	48 89 de             	mov    %rbx,%rsi
   17509:	48 89 cf             	mov    %rcx,%rdi
   1750c:	e8 07 05 00 00       	call   17a18 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
    }
   17511:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17515:	c9                   	leave
   17516:	c3                   	ret
   17517:	90                   	nop

0000000000017518 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17518:	55                   	push   %rbp
   17519:	48 89 e5             	mov    %rsp,%rbp
   1751c:	48 83 ec 10          	sub    $0x10,%rsp
   17520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17528:	48 89 c7             	mov    %rax,%rdi
   1752b:	e8 02 00 00 00       	call   17532 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   17530:	c9                   	leave
   17531:	c3                   	ret

0000000000017532 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17532:	55                   	push   %rbp
   17533:	48 89 e5             	mov    %rsp,%rbp
   17536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1753a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17541:	ff ff 0f 
      }
   17544:	5d                   	pop    %rbp
   17545:	c3                   	ret

0000000000017546 <_ZSt4copyIPKP13VkSemaphore_TPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   17546:	55                   	push   %rbp
   17547:	48 89 e5             	mov    %rsp,%rbp
   1754a:	53                   	push   %rbx
   1754b:	48 83 ec 28          	sub    $0x28,%rsp
   1754f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17553:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17557:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1755b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1755f:	48 89 c7             	mov    %rax,%rdi
   17562:	e8 1b 05 00 00       	call   17a82 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   17567:	48 89 c3             	mov    %rax,%rbx
   1756a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1756e:	48 89 c7             	mov    %rax,%rdi
   17571:	e8 0c 05 00 00       	call   17a82 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>
   17576:	48 89 c1             	mov    %rax,%rcx
   17579:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1757d:	48 89 c2             	mov    %rax,%rdx
   17580:	48 89 de             	mov    %rbx,%rsi
   17583:	48 89 cf             	mov    %rcx,%rdi
   17586:	e8 05 05 00 00       	call   17a90 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
    }
   1758b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1758f:	c9                   	leave
   17590:	c3                   	ret
   17591:	90                   	nop

0000000000017592 <_ZNKSt15__new_allocatorIjE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17592:	55                   	push   %rbp
   17593:	48 89 e5             	mov    %rsp,%rbp
   17596:	48 83 ec 10          	sub    $0x10,%rsp
   1759a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1759e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175a2:	48 89 c7             	mov    %rax,%rdi
   175a5:	e8 02 00 00 00       	call   175ac <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>
   175aa:	c9                   	leave
   175ab:	c3                   	ret

00000000000175ac <_ZNKSt15__new_allocatorIjE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   175ac:	55                   	push   %rbp
   175ad:	48 89 e5             	mov    %rsp,%rbp
   175b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   175b4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   175bb:	ff ff 1f 
      }
   175be:	5d                   	pop    %rbp
   175bf:	c3                   	ret

00000000000175c0 <_ZSt4copyIPKjPjET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   175c0:	55                   	push   %rbp
   175c1:	48 89 e5             	mov    %rsp,%rbp
   175c4:	53                   	push   %rbx
   175c5:	48 83 ec 28          	sub    $0x28,%rsp
   175c9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   175cd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   175d1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   175d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   175d9:	48 89 c7             	mov    %rax,%rdi
   175dc:	e8 19 05 00 00       	call   17afa <_ZSt12__miter_baseIPKjET_S2_>
   175e1:	48 89 c3             	mov    %rax,%rbx
   175e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   175e8:	48 89 c7             	mov    %rax,%rdi
   175eb:	e8 0a 05 00 00       	call   17afa <_ZSt12__miter_baseIPKjET_S2_>
   175f0:	48 89 c1             	mov    %rax,%rcx
   175f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   175f7:	48 89 c2             	mov    %rax,%rdx
   175fa:	48 89 de             	mov    %rbx,%rsi
   175fd:	48 89 cf             	mov    %rcx,%rdi
   17600:	e8 03 05 00 00       	call   17b08 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>
    }
   17605:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17609:	c9                   	leave
   1760a:	c3                   	ret

000000000001760b <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   1760b:	55                   	push   %rbp
   1760c:	48 89 e5             	mov    %rsp,%rbp
   1760f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17617:	5d                   	pop    %rbp
   17618:	c3                   	ret

0000000000017619 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17619:	55                   	push   %rbp
   1761a:	48 89 e5             	mov    %rsp,%rbp
   1761d:	41 54                	push   %r12
   1761f:	53                   	push   %rbx
   17620:	48 83 ec 20          	sub    $0x20,%rsp
   17624:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17628:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1762c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17630:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17634:	48 89 c7             	mov    %rax,%rdi
   17637:	e8 b4 f1 ff ff       	call   167f0 <_ZSt12__niter_baseIPPKcET_S3_>
   1763c:	49 89 c4             	mov    %rax,%r12
   1763f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17643:	48 89 c7             	mov    %rax,%rdi
   17646:	e8 27 05 00 00       	call   17b72 <_ZSt12__niter_baseIPKPKcET_S4_>
   1764b:	48 89 c3             	mov    %rax,%rbx
   1764e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17652:	48 89 c7             	mov    %rax,%rdi
   17655:	e8 18 05 00 00       	call   17b72 <_ZSt12__niter_baseIPKPKcET_S4_>
   1765a:	4c 89 e2             	mov    %r12,%rdx
   1765d:	48 89 de             	mov    %rbx,%rsi
   17660:	48 89 c7             	mov    %rax,%rdi
   17663:	e8 18 05 00 00       	call   17b80 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   17668:	48 89 c2             	mov    %rax,%rdx
   1766b:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1766f:	48 89 d6             	mov    %rdx,%rsi
   17672:	48 89 c7             	mov    %rax,%rdi
   17675:	e8 33 05 00 00       	call   17bad <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   1767a:	48 83 c4 20          	add    $0x20,%rsp
   1767e:	5b                   	pop    %rbx
   1767f:	41 5c                	pop    %r12
   17681:	5d                   	pop    %rbp
   17682:	c3                   	ret
   17683:	90                   	nop

0000000000017684 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17684:	55                   	push   %rbp
   17685:	48 89 e5             	mov    %rsp,%rbp
   17688:	48 83 ec 20          	sub    $0x20,%rsp
   1768c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17690:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17694:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1769c:	48 89 c7             	mov    %rax,%rdi
   1769f:	e8 1c 05 00 00       	call   17bc0 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   176a4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   176a8:	0f 92 c0             	setb   %al
   176ab:	0f b6 c0             	movzbl %al,%eax
   176ae:	48 85 c0             	test   %rax,%rax
   176b1:	0f 95 c0             	setne  %al
   176b4:	84 c0                	test   %al,%al
   176b6:	74 1a                	je     176d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   176b8:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   176bf:	38 8e 03 
   176c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   176c6:	73 05                	jae    176cd <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   176c8:	e8 e3 cb fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   176cd:	e8 2e ca fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   176d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176d6:	48 89 d0             	mov    %rdx,%rax
   176d9:	48 c1 e0 03          	shl    $0x3,%rax
   176dd:	48 01 d0             	add    %rdx,%rax
   176e0:	48 c1 e0 03          	shl    $0x3,%rax
   176e4:	48 89 c7             	mov    %rax,%rdi
   176e7:	e8 e4 cc fe ff       	call   43d0 <_Znwm@plt>
   176ec:	90                   	nop
      }
   176ed:	c9                   	leave
   176ee:	c3                   	ret
   176ef:	90                   	nop

00000000000176f0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   176f0:	55                   	push   %rbp
   176f1:	48 89 e5             	mov    %rsp,%rbp
   176f4:	48 83 ec 10          	sub    $0x10,%rsp
   176f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   176fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17700:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17704:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17708:	48 89 d6             	mov    %rdx,%rsi
   1770b:	48 89 c7             	mov    %rax,%rdi
   1770e:	e8 c1 04 00 00       	call   17bd4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   17713:	90                   	nop
   17714:	c9                   	leave
   17715:	c3                   	ret

0000000000017716 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   17716:	55                   	push   %rbp
   17717:	48 89 e5             	mov    %rsp,%rbp
   1771a:	41 56                	push   %r14
   1771c:	41 55                	push   %r13
   1771e:	41 54                	push   %r12
   17720:	53                   	push   %rbx
   17721:	48 83 ec 40          	sub    $0x40,%rsp
   17725:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   17729:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1772d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   17731:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   17735:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   17739:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   1773d:	48 89 de             	mov    %rbx,%rsi
   17740:	bf 28 00 00 00       	mov    $0x28,%edi
   17745:	e8 ef d8 fe ff       	call   5039 <_ZnwmPv>
   1774a:	49 89 c4             	mov    %rax,%r12
   1774d:	41 be 01 00 00 00    	mov    $0x1,%r14d
   17753:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   17757:	48 89 c7             	mov    %rax,%rdi
   1775a:	e8 aa cf ff ff       	call   14709 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   1775f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   17763:	48 89 c7             	mov    %rax,%rdi
   17766:	e8 90 cf ff ff       	call   146fb <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   1776b:	48 89 c2             	mov    %rax,%rdx
   1776e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17772:	48 89 d6             	mov    %rdx,%rsi
   17775:	48 89 c7             	mov    %rax,%rdi
   17778:	e8 73 ff ff ff       	call   176f0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   1777d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   17781:	48 89 c7             	mov    %rax,%rdi
   17784:	e8 64 cf ff ff       	call   146ed <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   17789:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1778d:	48 89 c6             	mov    %rax,%rsi
   17790:	4c 89 e7             	mov    %r12,%rdi
   17793:	e8 5a 04 00 00       	call   17bf2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   17798:	eb 1e                	jmp    177b8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   1779a:	49 89 c5             	mov    %rax,%r13
   1779d:	45 84 f6             	test   %r14b,%r14b
   177a0:	74 0b                	je     177ad <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   177a2:	48 89 de             	mov    %rbx,%rsi
   177a5:	4c 89 e7             	mov    %r12,%rdi
   177a8:	e8 98 96 ff ff       	call   10e45 <_ZdlPvS_>
   177ad:	4c 89 e8             	mov    %r13,%rax
   177b0:	48 89 c7             	mov    %rax,%rdi
   177b3:	e8 f8 cf fe ff       	call   47b0 <_Unwind_Resume@plt>
   177b8:	48 83 c4 40          	add    $0x40,%rsp
   177bc:	5b                   	pop    %rbx
   177bd:	41 5c                	pop    %r12
   177bf:	41 5d                	pop    %r13
   177c1:	41 5e                	pop    %r14
   177c3:	5d                   	pop    %rbp
   177c4:	c3                   	ret
   177c5:	90                   	nop

00000000000177c6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   177c6:	55                   	push   %rbp
   177c7:	48 89 e5             	mov    %rsp,%rbp
   177ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   177ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177d2:	5d                   	pop    %rbp
   177d3:	c3                   	ret

00000000000177d4 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   177d4:	55                   	push   %rbp
   177d5:	48 89 e5             	mov    %rsp,%rbp
   177d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   177dc:	90                   	nop
   177dd:	5d                   	pop    %rbp
   177de:	c3                   	ret

00000000000177df <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   177df:	55                   	push   %rbp
   177e0:	48 89 e5             	mov    %rsp,%rbp
   177e3:	48 83 ec 20          	sub    $0x20,%rsp
   177e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   177f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   177f8:	75 06                	jne    17800 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   177fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177fe:	eb 3a                	jmp    1783a <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17800:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17804:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1780b:	00 
   1780c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17810:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17814:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1781c:	48 89 ce             	mov    %rcx,%rsi
   1781f:	48 89 c7             	mov    %rax,%rdi
   17822:	e8 f5 03 00 00       	call   17c1c <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17827:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1782b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17832:	00 
   17833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17837:	48 01 d0             	add    %rdx,%rax
    }
   1783a:	c9                   	leave
   1783b:	c3                   	ret

000000000001783c <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   1783c:	55                   	push   %rbp
   1783d:	48 89 e5             	mov    %rsp,%rbp
   17840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17848:	5d                   	pop    %rbp
   17849:	c3                   	ret

000000000001784a <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1784a:	55                   	push   %rbp
   1784b:	48 89 e5             	mov    %rsp,%rbp
   1784e:	41 54                	push   %r12
   17850:	53                   	push   %rbx
   17851:	48 83 ec 20          	sub    $0x20,%rsp
   17855:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17859:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1785d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17861:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17865:	48 89 c7             	mov    %rax,%rdi
   17868:	e8 eb 03 00 00       	call   17c58 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   1786d:	49 89 c4             	mov    %rax,%r12
   17870:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17874:	48 89 c7             	mov    %rax,%rdi
   17877:	e8 ce 03 00 00       	call   17c4a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1787c:	48 89 c3             	mov    %rax,%rbx
   1787f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17883:	48 89 c7             	mov    %rax,%rdi
   17886:	e8 bf 03 00 00       	call   17c4a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   1788b:	4c 89 e2             	mov    %r12,%rdx
   1788e:	48 89 de             	mov    %rbx,%rsi
   17891:	48 89 c7             	mov    %rax,%rdi
   17894:	e8 cd 03 00 00       	call   17c66 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   17899:	48 89 c2             	mov    %rax,%rdx
   1789c:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   178a0:	48 89 d6             	mov    %rdx,%rsi
   178a3:	48 89 c7             	mov    %rax,%rdi
   178a6:	e8 e8 03 00 00       	call   17c93 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   178ab:	48 83 c4 20          	add    $0x20,%rsp
   178af:	5b                   	pop    %rbx
   178b0:	41 5c                	pop    %r12
   178b2:	5d                   	pop    %rbp
   178b3:	c3                   	ret

00000000000178b4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   178b4:	55                   	push   %rbp
   178b5:	48 89 e5             	mov    %rsp,%rbp
   178b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   178bc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   178c3:	ff ff 0f 
      }
   178c6:	5d                   	pop    %rbp
   178c7:	c3                   	ret

00000000000178c8 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   178c8:	55                   	push   %rbp
   178c9:	48 89 e5             	mov    %rsp,%rbp
   178cc:	48 83 ec 20          	sub    $0x20,%rsp
   178d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   178d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   178d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   178dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178e0:	48 89 c7             	mov    %rax,%rdi
   178e3:	e8 cc ff ff ff       	call   178b4 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   178e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   178ec:	0f 92 c0             	setb   %al
   178ef:	0f b6 c0             	movzbl %al,%eax
   178f2:	48 85 c0             	test   %rax,%rax
   178f5:	0f 95 c0             	setne  %al
   178f8:	84 c0                	test   %al,%al
   178fa:	74 1a                	je     17916 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   178fc:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   17903:	ff ff 1f 
   17906:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1790a:	73 05                	jae    17911 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1790c:	e8 9f c9 fe ff       	call   42b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   17911:	e8 ea c7 fe ff       	call   4100 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   17916:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1791a:	48 c1 e0 03          	shl    $0x3,%rax
   1791e:	48 89 c7             	mov    %rax,%rdi
   17921:	e8 aa ca fe ff       	call   43d0 <_Znwm@plt>
   17926:	90                   	nop
      }
   17927:	c9                   	leave
   17928:	c3                   	ret

0000000000017929 <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17929:	55                   	push   %rbp
   1792a:	48 89 e5             	mov    %rsp,%rbp
   1792d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17935:	5d                   	pop    %rbp
   17936:	c3                   	ret

0000000000017937 <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17937:	55                   	push   %rbp
   17938:	48 89 e5             	mov    %rsp,%rbp
   1793b:	48 83 ec 10          	sub    $0x10,%rsp
   1793f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17943:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17947:	48 89 c6             	mov    %rax,%rsi
   1794a:	bf 08 00 00 00       	mov    $0x8,%edi
   1794f:	e8 e5 d6 fe ff       	call   5039 <_ZnwmPv>
   17954:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1795b:	90                   	nop
   1795c:	c9                   	leave
   1795d:	c3                   	ret

000000000001795e <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1795e:	55                   	push   %rbp
   1795f:	48 89 e5             	mov    %rsp,%rbp
   17962:	48 83 ec 20          	sub    $0x20,%rsp
   17966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1796a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1796e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17972:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17976:	48 89 c7             	mov    %rax,%rdi
   17979:	e8 27 03 00 00       	call   17ca5 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1797e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17982:	48 89 c7             	mov    %rax,%rdi
   17985:	e8 c1 d6 fe ff       	call   504b <_ZSt17__size_to_integerm>
   1798a:	48 89 c1             	mov    %rax,%rcx
   1798d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17991:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17995:	48 89 ce             	mov    %rcx,%rsi
   17998:	48 89 c7             	mov    %rax,%rdi
   1799b:	e8 10 03 00 00       	call   17cb0 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   179a0:	c9                   	leave
   179a1:	c3                   	ret

00000000000179a2 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   179a2:	55                   	push   %rbp
   179a3:	48 89 e5             	mov    %rsp,%rbp
   179a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   179aa:	90                   	nop
   179ab:	5d                   	pop    %rbp
   179ac:	c3                   	ret

00000000000179ad <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   179ad:	55                   	push   %rbp
   179ae:	48 89 e5             	mov    %rsp,%rbp
   179b1:	48 83 ec 20          	sub    $0x20,%rsp
   179b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   179b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   179bd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   179c1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   179c6:	75 06                	jne    179ce <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   179c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179cc:	eb 3a                	jmp    17a08 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   179ce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   179d9:	00 
   179da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179de:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   179e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   179e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179ea:	48 89 ce             	mov    %rcx,%rsi
   179ed:	48 89 c7             	mov    %rax,%rdi
   179f0:	e8 18 03 00 00       	call   17d0d <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   179f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   179f9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17a00:	00 
   17a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a05:	48 01 d0             	add    %rdx,%rax
    }
   17a08:	c9                   	leave
   17a09:	c3                   	ret

0000000000017a0a <_ZSt12__miter_baseIPKP13VkImageView_TET_S4_>:
    __miter_base(_Iterator __it)
   17a0a:	55                   	push   %rbp
   17a0b:	48 89 e5             	mov    %rsp,%rbp
   17a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a16:	5d                   	pop    %rbp
   17a17:	c3                   	ret

0000000000017a18 <_ZSt13__copy_move_aILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17a18:	55                   	push   %rbp
   17a19:	48 89 e5             	mov    %rsp,%rbp
   17a1c:	41 54                	push   %r12
   17a1e:	53                   	push   %rbx
   17a1f:	48 83 ec 20          	sub    $0x20,%rsp
   17a23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17a27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17a2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17a2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17a33:	48 89 c7             	mov    %rax,%rdi
   17a36:	e8 3c f1 ff ff       	call   16b77 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   17a3b:	49 89 c4             	mov    %rax,%r12
   17a3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17a42:	48 89 c7             	mov    %rax,%rdi
   17a45:	e8 f1 02 00 00       	call   17d3b <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   17a4a:	48 89 c3             	mov    %rax,%rbx
   17a4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17a51:	48 89 c7             	mov    %rax,%rdi
   17a54:	e8 e2 02 00 00       	call   17d3b <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>
   17a59:	4c 89 e2             	mov    %r12,%rdx
   17a5c:	48 89 de             	mov    %rbx,%rsi
   17a5f:	48 89 c7             	mov    %rax,%rdi
   17a62:	e8 e2 02 00 00       	call   17d49 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   17a67:	48 89 c2             	mov    %rax,%rdx
   17a6a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17a6e:	48 89 d6             	mov    %rdx,%rsi
   17a71:	48 89 c7             	mov    %rax,%rdi
   17a74:	e8 fd 02 00 00       	call   17d76 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>
    }
   17a79:	48 83 c4 20          	add    $0x20,%rsp
   17a7d:	5b                   	pop    %rbx
   17a7e:	41 5c                	pop    %r12
   17a80:	5d                   	pop    %rbp
   17a81:	c3                   	ret

0000000000017a82 <_ZSt12__miter_baseIPKP13VkSemaphore_TET_S4_>:
    __miter_base(_Iterator __it)
   17a82:	55                   	push   %rbp
   17a83:	48 89 e5             	mov    %rsp,%rbp
   17a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a8e:	5d                   	pop    %rbp
   17a8f:	c3                   	ret

0000000000017a90 <_ZSt13__copy_move_aILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17a90:	55                   	push   %rbp
   17a91:	48 89 e5             	mov    %rsp,%rbp
   17a94:	41 54                	push   %r12
   17a96:	53                   	push   %rbx
   17a97:	48 83 ec 20          	sub    $0x20,%rsp
   17a9b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17a9f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17aa3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17aa7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17aab:	48 89 c7             	mov    %rax,%rdi
   17aae:	e8 e3 02 00 00       	call   17d96 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   17ab3:	49 89 c4             	mov    %rax,%r12
   17ab6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17aba:	48 89 c7             	mov    %rax,%rdi
   17abd:	e8 c6 02 00 00       	call   17d88 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   17ac2:	48 89 c3             	mov    %rax,%rbx
   17ac5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ac9:	48 89 c7             	mov    %rax,%rdi
   17acc:	e8 b7 02 00 00       	call   17d88 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>
   17ad1:	4c 89 e2             	mov    %r12,%rdx
   17ad4:	48 89 de             	mov    %rbx,%rsi
   17ad7:	48 89 c7             	mov    %rax,%rdi
   17ada:	e8 c5 02 00 00       	call   17da4 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   17adf:	48 89 c2             	mov    %rax,%rdx
   17ae2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17ae6:	48 89 d6             	mov    %rdx,%rsi
   17ae9:	48 89 c7             	mov    %rax,%rdi
   17aec:	e8 e0 02 00 00       	call   17dd1 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>
    }
   17af1:	48 83 c4 20          	add    $0x20,%rsp
   17af5:	5b                   	pop    %rbx
   17af6:	41 5c                	pop    %r12
   17af8:	5d                   	pop    %rbp
   17af9:	c3                   	ret

0000000000017afa <_ZSt12__miter_baseIPKjET_S2_>:
    __miter_base(_Iterator __it)
   17afa:	55                   	push   %rbp
   17afb:	48 89 e5             	mov    %rsp,%rbp
   17afe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17b02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b06:	5d                   	pop    %rbp
   17b07:	c3                   	ret

0000000000017b08 <_ZSt13__copy_move_aILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17b08:	55                   	push   %rbp
   17b09:	48 89 e5             	mov    %rsp,%rbp
   17b0c:	41 54                	push   %r12
   17b0e:	53                   	push   %rbx
   17b0f:	48 83 ec 20          	sub    $0x20,%rsp
   17b13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17b1b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17b1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b23:	48 89 c7             	mov    %rax,%rdi
   17b26:	e8 c6 02 00 00       	call   17df1 <_ZSt12__niter_baseIPjET_S1_>
   17b2b:	49 89 c4             	mov    %rax,%r12
   17b2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17b32:	48 89 c7             	mov    %rax,%rdi
   17b35:	e8 a9 02 00 00       	call   17de3 <_ZSt12__niter_baseIPKjET_S2_>
   17b3a:	48 89 c3             	mov    %rax,%rbx
   17b3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b41:	48 89 c7             	mov    %rax,%rdi
   17b44:	e8 9a 02 00 00       	call   17de3 <_ZSt12__niter_baseIPKjET_S2_>
   17b49:	4c 89 e2             	mov    %r12,%rdx
   17b4c:	48 89 de             	mov    %rbx,%rsi
   17b4f:	48 89 c7             	mov    %rax,%rdi
   17b52:	e8 a8 02 00 00       	call   17dff <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>
   17b57:	48 89 c2             	mov    %rax,%rdx
   17b5a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17b5e:	48 89 d6             	mov    %rdx,%rsi
   17b61:	48 89 c7             	mov    %rax,%rdi
   17b64:	e8 c3 02 00 00       	call   17e2c <_ZSt12__niter_wrapIPjET_RKS1_S1_>
    }
   17b69:	48 83 c4 20          	add    $0x20,%rsp
   17b6d:	5b                   	pop    %rbx
   17b6e:	41 5c                	pop    %r12
   17b70:	5d                   	pop    %rbp
   17b71:	c3                   	ret

0000000000017b72 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   17b72:	55                   	push   %rbp
   17b73:	48 89 e5             	mov    %rsp,%rbp
   17b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b7e:	5d                   	pop    %rbp
   17b7f:	c3                   	ret

0000000000017b80 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17b80:	55                   	push   %rbp
   17b81:	48 89 e5             	mov    %rsp,%rbp
   17b84:	48 83 ec 20          	sub    $0x20,%rsp
   17b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17b8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17b90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17b94:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17b98:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17b9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ba0:	48 89 ce             	mov    %rcx,%rsi
   17ba3:	48 89 c7             	mov    %rax,%rdi
   17ba6:	e8 93 02 00 00       	call   17e3e <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   17bab:	c9                   	leave
   17bac:	c3                   	ret

0000000000017bad <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   17bad:	55                   	push   %rbp
   17bae:	48 89 e5             	mov    %rsp,%rbp
   17bb1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bb5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   17bb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17bbd:	5d                   	pop    %rbp
   17bbe:	c3                   	ret
   17bbf:	90                   	nop

0000000000017bc0 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17bc0:	55                   	push   %rbp
   17bc1:	48 89 e5             	mov    %rsp,%rbp
   17bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17bc8:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   17bcf:	1c c7 01 
      }
   17bd2:	5d                   	pop    %rbp
   17bd3:	c3                   	ret

0000000000017bd4 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   17bd4:	55                   	push   %rbp
   17bd5:	48 89 e5             	mov    %rsp,%rbp
   17bd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   17be0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17be4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17be8:	48 8b 12             	mov    (%rdx),%rdx
   17beb:	48 89 10             	mov    %rdx,(%rax)
      { }
   17bee:	90                   	nop
   17bef:	5d                   	pop    %rbp
   17bf0:	c3                   	ret
   17bf1:	90                   	nop

0000000000017bf2 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   17bf2:	55                   	push   %rbp
   17bf3:	48 89 e5             	mov    %rsp,%rbp
   17bf6:	48 83 ec 20          	sub    $0x20,%rsp
   17bfa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bfe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   17c02:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   17c06:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17c0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c0e:	48 89 ce             	mov    %rcx,%rsi
   17c11:	48 89 c7             	mov    %rax,%rdi
   17c14:	e8 53 02 00 00       	call   17e6c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   17c19:	90                   	nop
   17c1a:	c9                   	leave
   17c1b:	c3                   	ret

0000000000017c1c <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17c1c:	55                   	push   %rbp
   17c1d:	48 89 e5             	mov    %rsp,%rbp
   17c20:	48 83 ec 20          	sub    $0x20,%rsp
   17c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c2c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17c30:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17c34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17c38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c3c:	48 89 ce             	mov    %rcx,%rsi
   17c3f:	48 89 c7             	mov    %rax,%rdi
   17c42:	e8 6f 02 00 00       	call   17eb6 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   17c47:	90                   	nop
   17c48:	c9                   	leave
   17c49:	c3                   	ret

0000000000017c4a <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   17c4a:	55                   	push   %rbp
   17c4b:	48 89 e5             	mov    %rsp,%rbp
   17c4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c56:	5d                   	pop    %rbp
   17c57:	c3                   	ret

0000000000017c58 <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   17c58:	55                   	push   %rbp
   17c59:	48 89 e5             	mov    %rsp,%rbp
   17c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c64:	5d                   	pop    %rbp
   17c65:	c3                   	ret

0000000000017c66 <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17c66:	55                   	push   %rbp
   17c67:	48 89 e5             	mov    %rsp,%rbp
   17c6a:	48 83 ec 20          	sub    $0x20,%rsp
   17c6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17c7a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17c7e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c86:	48 89 ce             	mov    %rcx,%rsi
   17c89:	48 89 c7             	mov    %rax,%rdi
   17c8c:	e8 60 02 00 00       	call   17ef1 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   17c91:	c9                   	leave
   17c92:	c3                   	ret

0000000000017c93 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   17c93:	55                   	push   %rbp
   17c94:	48 89 e5             	mov    %rsp,%rbp
   17c97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   17c9f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17ca3:	5d                   	pop    %rbp
   17ca4:	c3                   	ret

0000000000017ca5 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   17ca5:	55                   	push   %rbp
   17ca6:	48 89 e5             	mov    %rsp,%rbp
   17ca9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17cad:	90                   	nop
   17cae:	5d                   	pop    %rbp
   17caf:	c3                   	ret

0000000000017cb0 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17cb0:	55                   	push   %rbp
   17cb1:	48 89 e5             	mov    %rsp,%rbp
   17cb4:	48 83 ec 20          	sub    $0x20,%rsp
   17cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17cc0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17cc4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17cc9:	75 06                	jne    17cd1 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17ccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ccf:	eb 3a                	jmp    17d0b <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   17cd1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cd5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17cdc:	00 
   17cdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ce1:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17ce5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ce9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ced:	48 89 ce             	mov    %rcx,%rsi
   17cf0:	48 89 c7             	mov    %rax,%rdi
   17cf3:	e8 26 02 00 00       	call   17f1e <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   17cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17cfc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17d03:	00 
   17d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d08:	48 01 d0             	add    %rdx,%rax
    }
   17d0b:	c9                   	leave
   17d0c:	c3                   	ret

0000000000017d0d <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17d0d:	55                   	push   %rbp
   17d0e:	48 89 e5             	mov    %rsp,%rbp
   17d11:	48 83 ec 20          	sub    $0x20,%rsp
   17d15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17d21:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d25:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17d29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d2d:	48 89 ce             	mov    %rcx,%rsi
   17d30:	48 89 c7             	mov    %rax,%rdi
   17d33:	e8 14 02 00 00       	call   17f4c <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   17d38:	90                   	nop
   17d39:	c9                   	leave
   17d3a:	c3                   	ret

0000000000017d3b <_ZSt12__niter_baseIPKP13VkImageView_TET_S4_>:
    __niter_base(_Iterator __it)
   17d3b:	55                   	push   %rbp
   17d3c:	48 89 e5             	mov    %rsp,%rbp
   17d3f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d47:	5d                   	pop    %rbp
   17d48:	c3                   	ret

0000000000017d49 <_ZSt14__copy_move_a1ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17d49:	55                   	push   %rbp
   17d4a:	48 89 e5             	mov    %rsp,%rbp
   17d4d:	48 83 ec 20          	sub    $0x20,%rsp
   17d51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d55:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d59:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17d5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d61:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17d65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d69:	48 89 ce             	mov    %rcx,%rsi
   17d6c:	48 89 c7             	mov    %rax,%rdi
   17d6f:	e8 13 02 00 00       	call   17f87 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>
   17d74:	c9                   	leave
   17d75:	c3                   	ret

0000000000017d76 <_ZSt12__niter_wrapIPP13VkImageView_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   17d76:	55                   	push   %rbp
   17d77:	48 89 e5             	mov    %rsp,%rbp
   17d7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   17d82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d86:	5d                   	pop    %rbp
   17d87:	c3                   	ret

0000000000017d88 <_ZSt12__niter_baseIPKP13VkSemaphore_TET_S4_>:
    __niter_base(_Iterator __it)
   17d88:	55                   	push   %rbp
   17d89:	48 89 e5             	mov    %rsp,%rbp
   17d8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d94:	5d                   	pop    %rbp
   17d95:	c3                   	ret

0000000000017d96 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   17d96:	55                   	push   %rbp
   17d97:	48 89 e5             	mov    %rsp,%rbp
   17d9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17da2:	5d                   	pop    %rbp
   17da3:	c3                   	ret

0000000000017da4 <_ZSt14__copy_move_a1ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17da4:	55                   	push   %rbp
   17da5:	48 89 e5             	mov    %rsp,%rbp
   17da8:	48 83 ec 20          	sub    $0x20,%rsp
   17dac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17db0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17db4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17db8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17dbc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17dc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dc4:	48 89 ce             	mov    %rcx,%rsi
   17dc7:	48 89 c7             	mov    %rax,%rdi
   17dca:	e8 e5 01 00 00       	call   17fb4 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>
   17dcf:	c9                   	leave
   17dd0:	c3                   	ret

0000000000017dd1 <_ZSt12__niter_wrapIPP13VkSemaphore_TET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   17dd1:	55                   	push   %rbp
   17dd2:	48 89 e5             	mov    %rsp,%rbp
   17dd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dd9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   17ddd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17de1:	5d                   	pop    %rbp
   17de2:	c3                   	ret

0000000000017de3 <_ZSt12__niter_baseIPKjET_S2_>:
    __niter_base(_Iterator __it)
   17de3:	55                   	push   %rbp
   17de4:	48 89 e5             	mov    %rsp,%rbp
   17de7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17def:	5d                   	pop    %rbp
   17df0:	c3                   	ret

0000000000017df1 <_ZSt12__niter_baseIPjET_S1_>:
    __niter_base(_Iterator __it)
   17df1:	55                   	push   %rbp
   17df2:	48 89 e5             	mov    %rsp,%rbp
   17df5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17df9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17dfd:	5d                   	pop    %rbp
   17dfe:	c3                   	ret

0000000000017dff <_ZSt14__copy_move_a1ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   17dff:	55                   	push   %rbp
   17e00:	48 89 e5             	mov    %rsp,%rbp
   17e03:	48 83 ec 20          	sub    $0x20,%rsp
   17e07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e0b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17e0f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   17e13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e17:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e1f:	48 89 ce             	mov    %rcx,%rsi
   17e22:	48 89 c7             	mov    %rax,%rdi
   17e25:	e8 b7 01 00 00       	call   17fe1 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>
   17e2a:	c9                   	leave
   17e2b:	c3                   	ret

0000000000017e2c <_ZSt12__niter_wrapIPjET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   17e2c:	55                   	push   %rbp
   17e2d:	48 89 e5             	mov    %rsp,%rbp
   17e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   17e38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17e3c:	5d                   	pop    %rbp
   17e3d:	c3                   	ret

0000000000017e3e <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   17e3e:	55                   	push   %rbp
   17e3f:	48 89 e5             	mov    %rsp,%rbp
   17e42:	48 83 ec 20          	sub    $0x20,%rsp
   17e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17e4e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   17e52:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e56:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e5e:	48 89 ce             	mov    %rcx,%rsi
   17e61:	48 89 c7             	mov    %rax,%rdi
   17e64:	e8 a5 01 00 00       	call   1800e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   17e69:	c9                   	leave
   17e6a:	c3                   	ret
   17e6b:	90                   	nop

0000000000017e6c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   17e6c:	55                   	push   %rbp
   17e6d:	48 89 e5             	mov    %rsp,%rbp
   17e70:	53                   	push   %rbx
   17e71:	48 83 ec 28          	sub    $0x28,%rsp
   17e75:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17e79:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17e7d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   17e81:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   17e85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17e89:	48 89 c7             	mov    %rax,%rdi
   17e8c:	e8 dc 01 00 00       	call   1806d <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   17e91:	48 89 c7             	mov    %rax,%rdi
   17e94:	e8 ee 01 00 00       	call   18087 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   17e99:	48 89 c6             	mov    %rax,%rsi
   17e9c:	48 89 df             	mov    %rbx,%rdi
   17e9f:	e8 6c c3 fe ff       	call   4210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   17ea4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ea8:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   17eaf:	90                   	nop
   17eb0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17eb4:	c9                   	leave
   17eb5:	c3                   	ret

0000000000017eb6 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   17eb6:	55                   	push   %rbp
   17eb7:	48 89 e5             	mov    %rsp,%rbp
   17eba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17ebe:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17ec2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   17ec6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17eca:	48 8b 00             	mov    (%rax),%rax
   17ecd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   17ed1:	eb 10                	jmp    17ee3 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   17ed3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ed7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17edb:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   17ede:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   17ee3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ee7:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   17eeb:	75 e6                	jne    17ed3 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   17eed:	90                   	nop
   17eee:	90                   	nop
   17eef:	5d                   	pop    %rbp
   17ef0:	c3                   	ret

0000000000017ef1 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   17ef1:	55                   	push   %rbp
   17ef2:	48 89 e5             	mov    %rsp,%rbp
   17ef5:	48 83 ec 20          	sub    $0x20,%rsp
   17ef9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17efd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f01:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   17f05:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f09:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f11:	48 89 ce             	mov    %rcx,%rsi
   17f14:	48 89 c7             	mov    %rax,%rdi
   17f17:	e8 79 01 00 00       	call   18095 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   17f1c:	c9                   	leave
   17f1d:	c3                   	ret

0000000000017f1e <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   17f1e:	55                   	push   %rbp
   17f1f:	48 89 e5             	mov    %rsp,%rbp
   17f22:	48 83 ec 20          	sub    $0x20,%rsp
   17f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   17f32:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f36:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f3e:	48 89 ce             	mov    %rcx,%rsi
   17f41:	48 89 c7             	mov    %rax,%rdi
   17f44:	e8 ce 01 00 00       	call   18117 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   17f49:	90                   	nop
   17f4a:	c9                   	leave
   17f4b:	c3                   	ret

0000000000017f4c <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   17f4c:	55                   	push   %rbp
   17f4d:	48 89 e5             	mov    %rsp,%rbp
   17f50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17f54:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17f58:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   17f5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17f60:	48 8b 00             	mov    (%rax),%rax
   17f63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   17f67:	eb 10                	jmp    17f79 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   17f69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f6d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   17f71:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   17f74:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   17f79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17f7d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   17f81:	75 e6                	jne    17f69 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   17f83:	90                   	nop
   17f84:	90                   	nop
   17f85:	5d                   	pop    %rbp
   17f86:	c3                   	ret

0000000000017f87 <_ZSt14__copy_move_a2ILb0EPKP13VkImageView_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   17f87:	55                   	push   %rbp
   17f88:	48 89 e5             	mov    %rsp,%rbp
   17f8b:	48 83 ec 20          	sub    $0x20,%rsp
   17f8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f97:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   17f9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f9f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17fa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fa7:	48 89 ce             	mov    %rcx,%rsi
   17faa:	48 89 c7             	mov    %rax,%rdi
   17fad:	e8 a0 01 00 00       	call   18152 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>
    }
   17fb2:	c9                   	leave
   17fb3:	c3                   	ret

0000000000017fb4 <_ZSt14__copy_move_a2ILb0EPKP13VkSemaphore_TPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   17fb4:	55                   	push   %rbp
   17fb5:	48 89 e5             	mov    %rsp,%rbp
   17fb8:	48 83 ec 20          	sub    $0x20,%rsp
   17fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17fc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   17fc8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17fcc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fd4:	48 89 ce             	mov    %rcx,%rsi
   17fd7:	48 89 c7             	mov    %rax,%rdi
   17fda:	e8 d2 01 00 00       	call   181b1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>
    }
   17fdf:	c9                   	leave
   17fe0:	c3                   	ret

0000000000017fe1 <_ZSt14__copy_move_a2ILb0EPKjPjET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   17fe1:	55                   	push   %rbp
   17fe2:	48 89 e5             	mov    %rsp,%rbp
   17fe5:	48 83 ec 20          	sub    $0x20,%rsp
   17fe9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ff1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   17ff5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ff9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17ffd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18001:	48 89 ce             	mov    %rcx,%rsi
   18004:	48 89 c7             	mov    %rax,%rdi
   18007:	e8 04 02 00 00       	call   18210 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>
    }
   1800c:	c9                   	leave
   1800d:	c3                   	ret

000000000001800e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1800e:	55                   	push   %rbp
   1800f:	48 89 e5             	mov    %rsp,%rbp
   18012:	48 83 ec 30          	sub    $0x30,%rsp
   18016:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1801a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1801e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   18022:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18026:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1802a:	48 c1 f8 03          	sar    $0x3,%rax
   1802e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   18032:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18037:	74 1f                	je     18058 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   18039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1803d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18044:	00 
   18045:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18049:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1804d:	48 89 ce             	mov    %rcx,%rsi
   18050:	48 89 c7             	mov    %rax,%rdi
   18053:	e8 c8 c6 fe ff       	call   4720 <memmove@plt>
	  return __result + _Num;
   18058:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1805c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18063:	00 
   18064:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18068:	48 01 d0             	add    %rdx,%rax
	}
   1806b:	c9                   	leave
   1806c:	c3                   	ret

000000000001806d <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   1806d:	55                   	push   %rbp
   1806e:	48 89 e5             	mov    %rsp,%rbp
   18071:	48 83 ec 10          	sub    $0x10,%rsp
   18075:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   18079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1807d:	48 89 c7             	mov    %rax,%rdi
   18080:	e8 ea 01 00 00       	call   1826f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   18085:	c9                   	leave
   18086:	c3                   	ret

0000000000018087 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   18087:	55                   	push   %rbp
   18088:	48 89 e5             	mov    %rsp,%rbp
   1808b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1808f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18093:	5d                   	pop    %rbp
   18094:	c3                   	ret

0000000000018095 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18095:	55                   	push   %rbp
   18096:	48 89 e5             	mov    %rsp,%rbp
   18099:	48 83 ec 30          	sub    $0x30,%rsp
   1809d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   180a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   180a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   180a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   180ad:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   180b1:	48 c1 f8 04          	sar    $0x4,%rax
   180b5:	48 89 c2             	mov    %rax,%rdx
   180b8:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   180bf:	e3 38 8e 
   180c2:	48 0f af c2          	imul   %rdx,%rax
   180c6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   180ca:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   180cf:	74 28                	je     180f9 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   180d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   180d5:	48 89 d0             	mov    %rdx,%rax
   180d8:	48 c1 e0 03          	shl    $0x3,%rax
   180dc:	48 01 d0             	add    %rdx,%rax
   180df:	48 c1 e0 04          	shl    $0x4,%rax
   180e3:	48 89 c2             	mov    %rax,%rdx
   180e6:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   180ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   180ee:	48 89 ce             	mov    %rcx,%rsi
   180f1:	48 89 c7             	mov    %rax,%rdi
   180f4:	e8 27 c6 fe ff       	call   4720 <memmove@plt>
	  return __result + _Num;
   180f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   180fd:	48 89 d0             	mov    %rdx,%rax
   18100:	48 c1 e0 03          	shl    $0x3,%rax
   18104:	48 01 d0             	add    %rdx,%rax
   18107:	48 c1 e0 04          	shl    $0x4,%rax
   1810b:	48 89 c2             	mov    %rax,%rdx
   1810e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18112:	48 01 d0             	add    %rdx,%rax
	}
   18115:	c9                   	leave
   18116:	c3                   	ret

0000000000018117 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18117:	55                   	push   %rbp
   18118:	48 89 e5             	mov    %rsp,%rbp
   1811b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1811f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18123:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18127:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1812b:	48 8b 00             	mov    (%rax),%rax
   1812e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18132:	eb 10                	jmp    18144 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18138:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1813c:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   1813f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18148:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1814c:	75 e6                	jne    18134 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1814e:	90                   	nop
   1814f:	90                   	nop
   18150:	5d                   	pop    %rbp
   18151:	c3                   	ret

0000000000018152 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18152:	55                   	push   %rbp
   18153:	48 89 e5             	mov    %rsp,%rbp
   18156:	48 83 ec 30          	sub    $0x30,%rsp
   1815a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1815e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18162:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   18166:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1816a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1816e:	48 c1 f8 03          	sar    $0x3,%rax
   18172:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   18176:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1817b:	74 1f                	je     1819c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkImageView_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1817d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18181:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18188:	00 
   18189:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1818d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18191:	48 89 ce             	mov    %rcx,%rsi
   18194:	48 89 c7             	mov    %rax,%rdi
   18197:	e8 84 c5 fe ff       	call   4720 <memmove@plt>
	  return __result + _Num;
   1819c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   181a7:	00 
   181a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181ac:	48 01 d0             	add    %rdx,%rax
	}
   181af:	c9                   	leave
   181b0:	c3                   	ret

00000000000181b1 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   181b1:	55                   	push   %rbp
   181b2:	48 89 e5             	mov    %rsp,%rbp
   181b5:	48 83 ec 30          	sub    $0x30,%rsp
   181b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   181bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   181c1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   181c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181c9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   181cd:	48 c1 f8 03          	sar    $0x3,%rax
   181d1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   181d5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   181da:	74 1f                	je     181fb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP13VkSemaphore_TEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   181dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   181e7:	00 
   181e8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   181ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181f0:	48 89 ce             	mov    %rcx,%rsi
   181f3:	48 89 c7             	mov    %rax,%rdi
   181f6:	e8 25 c5 fe ff       	call   4720 <memmove@plt>
	  return __result + _Num;
   181fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181ff:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18206:	00 
   18207:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1820b:	48 01 d0             	add    %rdx,%rax
	}
   1820e:	c9                   	leave
   1820f:	c3                   	ret

0000000000018210 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18210:	55                   	push   %rbp
   18211:	48 89 e5             	mov    %rsp,%rbp
   18214:	48 83 ec 30          	sub    $0x30,%rsp
   18218:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1821c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18220:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   18224:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18228:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1822c:	48 c1 f8 02          	sar    $0x2,%rax
   18230:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   18234:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18239:	74 1f                	je     1825a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIjEEPT_PKS3_S6_S4_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1823b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1823f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   18246:	00 
   18247:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1824b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1824f:	48 89 ce             	mov    %rcx,%rsi
   18252:	48 89 c7             	mov    %rax,%rdi
   18255:	e8 c6 c4 fe ff       	call   4720 <memmove@plt>
	  return __result + _Num;
   1825a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1825e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   18265:	00 
   18266:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1826a:	48 01 d0             	add    %rdx,%rax
	}
   1826d:	c9                   	leave
   1826e:	c3                   	ret

000000000001826f <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   1826f:	55                   	push   %rbp
   18270:	48 89 e5             	mov    %rsp,%rbp
   18273:	48 83 ec 10          	sub    $0x10,%rsp
   18277:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   1827b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1827f:	48 89 c7             	mov    %rax,%rdi
   18282:	e8 02 00 00 00       	call   18289 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   18287:	c9                   	leave
   18288:	c3                   	ret

0000000000018289 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   18289:	55                   	push   %rbp
   1828a:	48 89 e5             	mov    %rsp,%rbp
   1828d:	48 83 ec 10          	sub    $0x10,%rsp
   18291:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18295:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18299:	48 89 c7             	mov    %rax,%rdi
   1829c:	e8 02 00 00 00       	call   182a3 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   182a1:	c9                   	leave
   182a2:	c3                   	ret

00000000000182a3 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   182a3:	55                   	push   %rbp
   182a4:	48 89 e5             	mov    %rsp,%rbp
   182a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182af:	48 8b 00             	mov    (%rax),%rax
   182b2:	5d                   	pop    %rbp
   182b3:	c3                   	ret

00000000000182b4 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   182b4:	55                   	push   %rbp
   182b5:	48 89 e5             	mov    %rsp,%rbp
   182b8:	48 83 ec 10          	sub    $0x10,%rsp
   182bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182c0:	48 8d 15 f9 29 01 00 	lea    0x129f9(%rip),%rdx        # 2acc0 <_ZTVSt19bad_optional_access+0x10>
   182c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182cb:	48 89 10             	mov    %rdx,(%rax)
   182ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182d2:	48 89 c7             	mov    %rax,%rdi
   182d5:	e8 16 c5 fe ff       	call   47f0 <_ZNSt9exceptionD2Ev@plt>
   182da:	90                   	nop
   182db:	c9                   	leave
   182dc:	c3                   	ret
   182dd:	90                   	nop

00000000000182de <_ZNSt19bad_optional_accessD0Ev>:
   182de:	55                   	push   %rbp
   182df:	48 89 e5             	mov    %rsp,%rbp
   182e2:	48 83 ec 10          	sub    $0x10,%rsp
   182e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182ee:	48 89 c7             	mov    %rax,%rdi
   182f1:	e8 be ff ff ff       	call   182b4 <_ZNSt19bad_optional_accessD1Ev>
   182f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182fa:	be 08 00 00 00       	mov    $0x8,%esi
   182ff:	48 89 c7             	mov    %rax,%rdi
   18302:	e8 e9 c0 fe ff       	call   43f0 <_ZdlPvm@plt>
   18307:	c9                   	leave
   18308:	c3                   	ret

Disassembly of section .fini:

000000000001830c <_fini>:
   1830c:	48 83 ec 08          	sub    $0x8,%rsp
   18310:	48 83 c4 08          	add    $0x8,%rsp
   18314:	c3                   	ret
