
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000002000 <_init>:
    2000:	48 83 ec 08          	sub    $0x8,%rsp
    2004:	48 8b 05 b5 1f 01 00 	mov    0x11fb5(%rip),%rax        # 13fc0 <__gmon_start__@Base>
    200b:	48 85 c0             	test   %rax,%rax
    200e:	74 02                	je     2012 <_init+0x12>
    2010:	ff d0                	call   *%rax
    2012:	48 83 c4 08          	add    $0x8,%rsp
    2016:	c3                   	ret

Disassembly of section .plt:

0000000000002020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    2020:	ff 35 ca 1f 01 00    	push   0x11fca(%rip)        # 13ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	ff 25 cc 1f 01 00    	jmp    *0x11fcc(%rip)        # 13ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    202c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    2030:	ff 25 ca 1f 01 00    	jmp    *0x11fca(%rip)        # 14000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    2036:	68 00 00 00 00       	push   $0x0
    203b:	e9 e0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    2040:	ff 25 c2 1f 01 00    	jmp    *0x11fc2(%rip)        # 14008 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    2046:	68 01 00 00 00       	push   $0x1
    204b:	e9 d0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002050 <_ZNSaIcED2Ev@plt>:
    2050:	ff 25 ba 1f 01 00    	jmp    *0x11fba(%rip)        # 14010 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    2056:	68 02 00 00 00       	push   $0x2
    205b:	e9 c0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002060 <_ZNSolsEm@plt>:
    2060:	ff 25 b2 1f 01 00    	jmp    *0x11fb2(%rip)        # 14018 <_ZNSolsEm@GLIBCXX_3.4>
    2066:	68 03 00 00 00       	push   $0x3
    206b:	e9 b0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002070 <glfwDestroyWindow@plt>:
    2070:	ff 25 aa 1f 01 00    	jmp    *0x11faa(%rip)        # 14020 <glfwDestroyWindow@Base>
    2076:	68 04 00 00 00       	push   $0x4
    207b:	e9 a0 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002080 <_ZSt17__throw_bad_allocv@plt>:
    2080:	ff 25 a2 1f 01 00    	jmp    *0x11fa2(%rip)        # 14028 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    2086:	68 05 00 00 00       	push   $0x5
    208b:	e9 90 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002090 <_ZNSt13runtime_errorC1EPKc@plt>:
    2090:	ff 25 9a 1f 01 00    	jmp    *0x11f9a(%rip)        # 14030 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    2096:	68 06 00 00 00       	push   $0x6
    209b:	e9 80 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020a0 <vkGetPhysicalDeviceProperties@plt>:
    20a0:	ff 25 92 1f 01 00    	jmp    *0x11f92(%rip)        # 14038 <vkGetPhysicalDeviceProperties@Base>
    20a6:	68 07 00 00 00       	push   $0x7
    20ab:	e9 70 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020b0 <__cxa_begin_catch@plt>:
    20b0:	ff 25 8a 1f 01 00    	jmp    *0x11f8a(%rip)        # 14040 <__cxa_begin_catch@CXXABI_1.3>
    20b6:	68 08 00 00 00       	push   $0x8
    20bb:	e9 60 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>:
    20c0:	ff 25 82 1f 01 00    	jmp    *0x11f82(%rip)        # 14048 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@GLIBCXX_3.4.21>
    20c6:	68 09 00 00 00       	push   $0x9
    20cb:	e9 50 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020d0 <strlen@plt>:
    20d0:	ff 25 7a 1f 01 00    	jmp    *0x11f7a(%rip)        # 14050 <strlen@GLIBC_2.2.5>
    20d6:	68 0a 00 00 00       	push   $0xa
    20db:	e9 40 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020e0 <__cxa_allocate_exception@plt>:
    20e0:	ff 25 72 1f 01 00    	jmp    *0x11f72(%rip)        # 14058 <__cxa_allocate_exception@CXXABI_1.3>
    20e6:	68 0b 00 00 00       	push   $0xb
    20eb:	e9 30 ff ff ff       	jmp    2020 <_init+0x20>

00000000000020f0 <_ZSt20__throw_length_errorPKc@plt>:
    20f0:	ff 25 6a 1f 01 00    	jmp    *0x11f6a(%rip)        # 14060 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    20f6:	68 0c 00 00 00       	push   $0xc
    20fb:	e9 20 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002100 <vkEnumeratePhysicalDevices@plt>:
    2100:	ff 25 62 1f 01 00    	jmp    *0x11f62(%rip)        # 14068 <vkEnumeratePhysicalDevices@Base>
    2106:	68 0d 00 00 00       	push   $0xd
    210b:	e9 10 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    2110:	ff 25 5a 1f 01 00    	jmp    *0x11f5a(%rip)        # 14070 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    2116:	68 0e 00 00 00       	push   $0xe
    211b:	e9 00 ff ff ff       	jmp    2020 <_init+0x20>

0000000000002120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    2120:	ff 25 52 1f 01 00    	jmp    *0x11f52(%rip)        # 14078 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    2126:	68 0f 00 00 00       	push   $0xf
    212b:	e9 f0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    2130:	ff 25 4a 1f 01 00    	jmp    *0x11f4a(%rip)        # 14080 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    2136:	68 10 00 00 00       	push   $0x10
    213b:	e9 e0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002140 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    2140:	ff 25 42 1f 01 00    	jmp    *0x11f42(%rip)        # 14088 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    2146:	68 11 00 00 00       	push   $0x11
    214b:	e9 d0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002150 <_ZSt19__throw_logic_errorPKc@plt>:
    2150:	ff 25 3a 1f 01 00    	jmp    *0x11f3a(%rip)        # 14090 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    2156:	68 12 00 00 00       	push   $0x12
    215b:	e9 c0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002160 <__cxa_free_exception@plt>:
    2160:	ff 25 32 1f 01 00    	jmp    *0x11f32(%rip)        # 14098 <__cxa_free_exception@CXXABI_1.3>
    2166:	68 13 00 00 00       	push   $0x13
    216b:	e9 b0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002170 <_ZNSolsEf@plt>:
    2170:	ff 25 2a 1f 01 00    	jmp    *0x11f2a(%rip)        # 140a0 <_ZNSolsEf@GLIBCXX_3.4>
    2176:	68 14 00 00 00       	push   $0x14
    217b:	e9 a0 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    2180:	ff 25 22 1f 01 00    	jmp    *0x11f22(%rip)        # 140a8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    2186:	68 15 00 00 00       	push   $0x15
    218b:	e9 90 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002190 <vkGetPhysicalDeviceFeatures@plt>:
    2190:	ff 25 1a 1f 01 00    	jmp    *0x11f1a(%rip)        # 140b0 <vkGetPhysicalDeviceFeatures@Base>
    2196:	68 16 00 00 00       	push   $0x16
    219b:	e9 80 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021a0 <glfwGetRequiredInstanceExtensions@plt>:
    21a0:	ff 25 12 1f 01 00    	jmp    *0x11f12(%rip)        # 140b8 <glfwGetRequiredInstanceExtensions@Base>
    21a6:	68 17 00 00 00       	push   $0x17
    21ab:	e9 70 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021b0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    21b0:	ff 25 0a 1f 01 00    	jmp    *0x11f0a(%rip)        # 140c0 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    21b6:	68 18 00 00 00       	push   $0x18
    21bb:	e9 60 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    21c0:	ff 25 02 1f 01 00    	jmp    *0x11f02(%rip)        # 140c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    21c6:	68 19 00 00 00       	push   $0x19
    21cb:	e9 50 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021d0 <vkDestroyDevice@plt>:
    21d0:	ff 25 fa 1e 01 00    	jmp    *0x11efa(%rip)        # 140d0 <vkDestroyDevice@Base>
    21d6:	68 1a 00 00 00       	push   $0x1a
    21db:	e9 40 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    21e0:	ff 25 f2 1e 01 00    	jmp    *0x11ef2(%rip)        # 140d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    21e6:	68 1b 00 00 00       	push   $0x1b
    21eb:	e9 30 fe ff ff       	jmp    2020 <_init+0x20>

00000000000021f0 <glfwWindowHint@plt>:
    21f0:	ff 25 ea 1e 01 00    	jmp    *0x11eea(%rip)        # 140e0 <glfwWindowHint@Base>
    21f6:	68 1c 00 00 00       	push   $0x1c
    21fb:	e9 20 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002200 <__cxa_atexit@plt>:
    2200:	ff 25 e2 1e 01 00    	jmp    *0x11ee2(%rip)        # 140e8 <__cxa_atexit@GLIBC_2.2.5>
    2206:	68 1d 00 00 00       	push   $0x1d
    220b:	e9 10 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002210 <vkGetInstanceProcAddr@plt>:
    2210:	ff 25 da 1e 01 00    	jmp    *0x11eda(%rip)        # 140f0 <vkGetInstanceProcAddr@Base>
    2216:	68 1e 00 00 00       	push   $0x1e
    221b:	e9 00 fe ff ff       	jmp    2020 <_init+0x20>

0000000000002220 <glfwPollEvents@plt>:
    2220:	ff 25 d2 1e 01 00    	jmp    *0x11ed2(%rip)        # 140f8 <glfwPollEvents@Base>
    2226:	68 1f 00 00 00       	push   $0x1f
    222b:	e9 f0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    2230:	ff 25 ca 1e 01 00    	jmp    *0x11eca(%rip)        # 14100 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    2236:	68 20 00 00 00       	push   $0x20
    223b:	e9 e0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002240 <_Znwm@plt>:
    2240:	ff 25 c2 1e 01 00    	jmp    *0x11ec2(%rip)        # 14108 <_Znwm@GLIBCXX_3.4>
    2246:	68 21 00 00 00       	push   $0x21
    224b:	e9 d0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002250 <_ZdlPvm@plt>:
    2250:	ff 25 ba 1e 01 00    	jmp    *0x11eba(%rip)        # 14110 <_ZdlPvm@CXXABI_1.3.9>
    2256:	68 22 00 00 00       	push   $0x22
    225b:	e9 c0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002260 <vkDestroyInstance@plt>:
    2260:	ff 25 b2 1e 01 00    	jmp    *0x11eb2(%rip)        # 14118 <vkDestroyInstance@Base>
    2266:	68 23 00 00 00       	push   $0x23
    226b:	e9 b0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002270 <glfwTerminate@plt>:
    2270:	ff 25 aa 1e 01 00    	jmp    *0x11eaa(%rip)        # 14120 <glfwTerminate@Base>
    2276:	68 24 00 00 00       	push   $0x24
    227b:	e9 a0 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002280 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    2280:	ff 25 a2 1e 01 00    	jmp    *0x11ea2(%rip)        # 14128 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    2286:	68 25 00 00 00       	push   $0x25
    228b:	e9 90 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002290 <_ZNSolsEPFRSoS_E@plt>:
    2290:	ff 25 9a 1e 01 00    	jmp    *0x11e9a(%rip)        # 14130 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    2296:	68 26 00 00 00       	push   $0x26
    229b:	e9 80 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    22a0:	ff 25 92 1e 01 00    	jmp    *0x11e92(%rip)        # 14138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    22a6:	68 27 00 00 00       	push   $0x27
    22ab:	e9 70 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    22b0:	ff 25 8a 1e 01 00    	jmp    *0x11e8a(%rip)        # 14140 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    22b6:	68 28 00 00 00       	push   $0x28
    22bb:	e9 60 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022c0 <_ZNSaIcED1Ev@plt>:
    22c0:	ff 25 82 1e 01 00    	jmp    *0x11e82(%rip)        # 14148 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    22c6:	68 29 00 00 00       	push   $0x29
    22cb:	e9 50 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    22d0:	ff 25 7a 1e 01 00    	jmp    *0x11e7a(%rip)        # 14150 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    22d6:	68 2a 00 00 00       	push   $0x2a
    22db:	e9 40 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    22e0:	ff 25 72 1e 01 00    	jmp    *0x11e72(%rip)        # 14158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    22e6:	68 2b 00 00 00       	push   $0x2b
    22eb:	e9 30 fd ff ff       	jmp    2020 <_init+0x20>

00000000000022f0 <glfwInit@plt>:
    22f0:	ff 25 6a 1e 01 00    	jmp    *0x11e6a(%rip)        # 14160 <glfwInit@Base>
    22f6:	68 2c 00 00 00       	push   $0x2c
    22fb:	e9 20 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002300 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    2300:	ff 25 62 1e 01 00    	jmp    *0x11e62(%rip)        # 14168 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    2306:	68 2d 00 00 00       	push   $0x2d
    230b:	e9 10 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002310 <vkCreateInstance@plt>:
    2310:	ff 25 5a 1e 01 00    	jmp    *0x11e5a(%rip)        # 14170 <vkCreateInstance@Base>
    2316:	68 2e 00 00 00       	push   $0x2e
    231b:	e9 00 fd ff ff       	jmp    2020 <_init+0x20>

0000000000002320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    2320:	ff 25 52 1e 01 00    	jmp    *0x11e52(%rip)        # 14178 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    2326:	68 2f 00 00 00       	push   $0x2f
    232b:	e9 f0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002330 <vkEnumerateInstanceVersion@plt>:
    2330:	ff 25 4a 1e 01 00    	jmp    *0x11e4a(%rip)        # 14180 <vkEnumerateInstanceVersion@Base>
    2336:	68 30 00 00 00       	push   $0x30
    233b:	e9 e0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002340 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    2340:	ff 25 42 1e 01 00    	jmp    *0x11e42(%rip)        # 14188 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    2346:	68 31 00 00 00       	push   $0x31
    234b:	e9 d0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002350 <vkGetDeviceQueue@plt>:
    2350:	ff 25 3a 1e 01 00    	jmp    *0x11e3a(%rip)        # 14190 <vkGetDeviceQueue@Base>
    2356:	68 32 00 00 00       	push   $0x32
    235b:	e9 c0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002360 <vkEnumerateDeviceExtensionProperties@plt>:
    2360:	ff 25 32 1e 01 00    	jmp    *0x11e32(%rip)        # 14198 <vkEnumerateDeviceExtensionProperties@Base>
    2366:	68 33 00 00 00       	push   $0x33
    236b:	e9 b0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002370 <__cxa_rethrow@plt>:
    2370:	ff 25 2a 1e 01 00    	jmp    *0x11e2a(%rip)        # 141a0 <__cxa_rethrow@CXXABI_1.3>
    2376:	68 34 00 00 00       	push   $0x34
    237b:	e9 a0 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002380 <vkCreateDevice@plt>:
    2380:	ff 25 22 1e 01 00    	jmp    *0x11e22(%rip)        # 141a8 <vkCreateDevice@Base>
    2386:	68 35 00 00 00       	push   $0x35
    238b:	e9 90 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002390 <_ZNSt8ios_base4InitC1Ev@plt>:
    2390:	ff 25 1a 1e 01 00    	jmp    *0x11e1a(%rip)        # 141b0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    2396:	68 36 00 00 00       	push   $0x36
    239b:	e9 80 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023a0 <glfwCreateWindowSurface@plt>:
    23a0:	ff 25 12 1e 01 00    	jmp    *0x11e12(%rip)        # 141b8 <glfwCreateWindowSurface@Base>
    23a6:	68 37 00 00 00       	push   $0x37
    23ab:	e9 70 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023b0 <glfwCreateWindow@plt>:
    23b0:	ff 25 0a 1e 01 00    	jmp    *0x11e0a(%rip)        # 141c0 <glfwCreateWindow@Base>
    23b6:	68 38 00 00 00       	push   $0x38
    23bb:	e9 60 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023c0 <memmove@plt>:
    23c0:	ff 25 02 1e 01 00    	jmp    *0x11e02(%rip)        # 141c8 <memmove@GLIBC_2.2.5>
    23c6:	68 39 00 00 00       	push   $0x39
    23cb:	e9 50 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023d0 <__cxa_end_catch@plt>:
    23d0:	ff 25 fa 1d 01 00    	jmp    *0x11dfa(%rip)        # 141d0 <__cxa_end_catch@CXXABI_1.3>
    23d6:	68 3a 00 00 00       	push   $0x3a
    23db:	e9 40 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023e0 <__cxa_throw@plt>:
    23e0:	ff 25 f2 1d 01 00    	jmp    *0x11df2(%rip)        # 141d8 <__cxa_throw@CXXABI_1.3>
    23e6:	68 3b 00 00 00       	push   $0x3b
    23eb:	e9 30 fc ff ff       	jmp    2020 <_init+0x20>

00000000000023f0 <vkDestroySurfaceKHR@plt>:
    23f0:	ff 25 ea 1d 01 00    	jmp    *0x11dea(%rip)        # 141e0 <vkDestroySurfaceKHR@Base>
    23f6:	68 3c 00 00 00       	push   $0x3c
    23fb:	e9 20 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002400 <_Unwind_Resume@plt>:
    2400:	ff 25 e2 1d 01 00    	jmp    *0x11de2(%rip)        # 141e8 <_Unwind_Resume@GCC_3.0>
    2406:	68 3d 00 00 00       	push   $0x3d
    240b:	e9 10 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002410 <_ZNSaIcEC1Ev@plt>:
    2410:	ff 25 da 1d 01 00    	jmp    *0x11dda(%rip)        # 141f0 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    2416:	68 3e 00 00 00       	push   $0x3e
    241b:	e9 00 fc ff ff       	jmp    2020 <_init+0x20>

0000000000002420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    2420:	ff 25 d2 1d 01 00    	jmp    *0x11dd2(%rip)        # 141f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    2426:	68 3f 00 00 00       	push   $0x3f
    242b:	e9 f0 fb ff ff       	jmp    2020 <_init+0x20>

0000000000002430 <glfwWindowShouldClose@plt>:
    2430:	ff 25 ca 1d 01 00    	jmp    *0x11dca(%rip)        # 14200 <glfwWindowShouldClose@Base>
    2436:	68 40 00 00 00       	push   $0x40
    243b:	e9 e0 fb ff ff       	jmp    2020 <_init+0x20>

0000000000002440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    2440:	ff 25 c2 1d 01 00    	jmp    *0x11dc2(%rip)        # 14208 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    2446:	68 41 00 00 00       	push   $0x41
    244b:	e9 d0 fb ff ff       	jmp    2020 <_init+0x20>

Disassembly of section .plt.got:

0000000000002450 <__cxa_finalize@plt>:
    2450:	ff 25 42 1b 01 00    	jmp    *0x11b42(%rip)        # 13f98 <__cxa_finalize@GLIBC_2.2.5>
    2456:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000002460 <_start>:
    2460:	31 ed                	xor    %ebp,%ebp
    2462:	49 89 d1             	mov    %rdx,%r9
    2465:	5e                   	pop    %rsi
    2466:	48 89 e2             	mov    %rsp,%rdx
    2469:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    246d:	50                   	push   %rax
    246e:	54                   	push   %rsp
    246f:	45 31 c0             	xor    %r8d,%r8d
    2472:	31 c9                	xor    %ecx,%ecx
    2474:	48 8d 3d e8 01 00 00 	lea    0x1e8(%rip),%rdi        # 2663 <main>
    247b:	ff 15 27 1b 01 00    	call   *0x11b27(%rip)        # 13fa8 <__libc_start_main@GLIBC_2.34>
    2481:	f4                   	hlt
    2482:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2489:	00 00 00 
    248c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002490 <deregister_tm_clones>:
    2490:	48 8d 3d 99 1d 01 00 	lea    0x11d99(%rip),%rdi        # 14230 <__TMC_END__>
    2497:	48 8d 05 92 1d 01 00 	lea    0x11d92(%rip),%rax        # 14230 <__TMC_END__>
    249e:	48 39 f8             	cmp    %rdi,%rax
    24a1:	74 15                	je     24b8 <deregister_tm_clones+0x28>
    24a3:	48 8b 05 0e 1b 01 00 	mov    0x11b0e(%rip),%rax        # 13fb8 <_ITM_deregisterTMCloneTable@Base>
    24aa:	48 85 c0             	test   %rax,%rax
    24ad:	74 09                	je     24b8 <deregister_tm_clones+0x28>
    24af:	ff e0                	jmp    *%rax
    24b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    24b8:	c3                   	ret
    24b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000024c0 <register_tm_clones>:
    24c0:	48 8d 3d 69 1d 01 00 	lea    0x11d69(%rip),%rdi        # 14230 <__TMC_END__>
    24c7:	48 8d 35 62 1d 01 00 	lea    0x11d62(%rip),%rsi        # 14230 <__TMC_END__>
    24ce:	48 29 fe             	sub    %rdi,%rsi
    24d1:	48 89 f0             	mov    %rsi,%rax
    24d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    24d8:	48 c1 f8 03          	sar    $0x3,%rax
    24dc:	48 01 c6             	add    %rax,%rsi
    24df:	48 d1 fe             	sar    %rsi
    24e2:	74 14                	je     24f8 <register_tm_clones+0x38>
    24e4:	48 8b 05 dd 1a 01 00 	mov    0x11add(%rip),%rax        # 13fc8 <_ITM_registerTMCloneTable@Base>
    24eb:	48 85 c0             	test   %rax,%rax
    24ee:	74 08                	je     24f8 <register_tm_clones+0x38>
    24f0:	ff e0                	jmp    *%rax
    24f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    24f8:	c3                   	ret
    24f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002500 <__do_global_dtors_aux>:
    2500:	f3 0f 1e fa          	endbr64
    2504:	80 3d 65 1f 01 00 00 	cmpb   $0x0,0x11f65(%rip)        # 14470 <completed.0>
    250b:	75 2b                	jne    2538 <__do_global_dtors_aux+0x38>
    250d:	55                   	push   %rbp
    250e:	48 83 3d 82 1a 01 00 	cmpq   $0x0,0x11a82(%rip)        # 13f98 <__cxa_finalize@GLIBC_2.2.5>
    2515:	00 
    2516:	48 89 e5             	mov    %rsp,%rbp
    2519:	74 0c                	je     2527 <__do_global_dtors_aux+0x27>
    251b:	48 8b 3d f6 1c 01 00 	mov    0x11cf6(%rip),%rdi        # 14218 <__dso_handle>
    2522:	e8 29 ff ff ff       	call   2450 <__cxa_finalize@plt>
    2527:	e8 64 ff ff ff       	call   2490 <deregister_tm_clones>
    252c:	c6 05 3d 1f 01 00 01 	movb   $0x1,0x11f3d(%rip)        # 14470 <completed.0>
    2533:	5d                   	pop    %rbp
    2534:	c3                   	ret
    2535:	0f 1f 00             	nopl   (%rax)
    2538:	c3                   	ret
    2539:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002540 <frame_dummy>:
    2540:	f3 0f 1e fa          	endbr64
    2544:	e9 77 ff ff ff       	jmp    24c0 <register_tm_clones>

0000000000002549 <_Z14protected_mainv>:

#include <chrono>
#include <iostream>
#include <thread>

int protected_main() {
    2549:	55                   	push   %rbp
    254a:	48 89 e5             	mov    %rsp,%rbp
    254d:	53                   	push   %rbx
    254e:	48 83 ec 38          	sub    $0x38,%rsp
  auto start = std::chrono::steady_clock::now();
    2552:	e8 e9 fd ff ff       	call   2340 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2557:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  auto engine = std::make_unique<neko::Engine>();
    255b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    255f:	48 89 c7             	mov    %rax,%rdi
    2562:	e8 4c 09 00 00       	call   2eb3 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
  auto end = std::chrono::steady_clock::now();
    2567:	e8 d4 fd ff ff       	call   2340 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    256c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  std::cout << "Load time: "
    2570:	48 8d 05 c9 80 00 00 	lea    0x80c9(%rip),%rax        # a640 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    2577:	48 89 c6             	mov    %rax,%rsi
    257a:	48 8d 05 bf 1c 01 00 	lea    0x11cbf(%rip),%rax        # 14240 <_ZSt4cout@GLIBCXX_3.4>
    2581:	48 89 c7             	mov    %rax,%rdi
    2584:	e8 a7 fc ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    2589:	48 89 c3             	mov    %rax,%rbx
            << static_cast<float>(
                   std::chrono::duration_cast<std::chrono::microseconds>(end -
                                                                         start)
    258c:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    2590:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    2594:	48 89 d6             	mov    %rdx,%rsi
    2597:	48 89 c7             	mov    %rax,%rdi
    259a:	e8 dc 03 00 00       	call   297b <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    259f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
                   std::chrono::duration_cast<std::chrono::microseconds>(end -
    25a3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    25a7:	48 89 c7             	mov    %rax,%rdi
    25aa:	e8 dd 09 00 00       	call   2f8c <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    25af:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                       .count()) /
    25b3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    25b7:	48 89 c7             	mov    %rax,%rdi
    25ba:	e8 e7 09 00 00       	call   2fa6 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
            << static_cast<float>(
    25bf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    25c3:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
                   1000.0f
    25c8:	f3 0f 10 0d ec 80 00 	movss  0x80ec(%rip),%xmm1        # a6bc <_ZN6__pstl9execution2v1L5unseqE+0x7d>
    25cf:	00 
    25d0:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    25d4:	66 0f 7e c0          	movd   %xmm0,%eax
    25d8:	66 0f 6e c0          	movd   %eax,%xmm0
    25dc:	48 89 df             	mov    %rbx,%rdi
    25df:	e8 8c fb ff ff       	call   2170 <_ZNSolsEf@plt>
    25e4:	48 89 c2             	mov    %rax,%rdx
            << " ms\n";
    25e7:	48 8d 05 5e 80 00 00 	lea    0x805e(%rip),%rax        # a64c <_ZN6__pstl9execution2v1L5unseqE+0xd>
    25ee:	48 89 c6             	mov    %rax,%rsi
    25f1:	48 89 d7             	mov    %rdx,%rdi
    25f4:	e8 37 fc ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  engine->start();
    25f9:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    25fd:	48 89 c7             	mov    %rax,%rdi
    2600:	e8 1b 0a 00 00       	call   3020 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>
    2605:	48 89 c7             	mov    %rax,%rdi
    2608:	e8 17 03 00 00       	call   2924 <_ZN4neko6Engine5startEv>
  std::cout << sizeof(neko::Engine) << '\n';
    260d:	be 10 00 00 00       	mov    $0x10,%esi
    2612:	48 8d 05 27 1c 01 00 	lea    0x11c27(%rip),%rax        # 14240 <_ZSt4cout@GLIBCXX_3.4>
    2619:	48 89 c7             	mov    %rax,%rdi
    261c:	e8 3f fa ff ff       	call   2060 <_ZNSolsEm@plt>
    2621:	be 0a 00 00 00       	mov    $0xa,%esi
    2626:	48 89 c7             	mov    %rax,%rdi
    2629:	e8 d2 fc ff ff       	call   2300 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  return EXIT_SUCCESS;
    262e:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    2633:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    2637:	48 89 c7             	mov    %rax,%rdi
    263a:	e8 e9 08 00 00       	call   2f28 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
  return EXIT_SUCCESS;
    263f:	89 d8                	mov    %ebx,%eax
    2641:	eb 1a                	jmp    265d <_Z14protected_mainv+0x114>
}
    2643:	48 89 c3             	mov    %rax,%rbx
    2646:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    264a:	48 89 c7             	mov    %rax,%rdi
    264d:	e8 d6 08 00 00       	call   2f28 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>
    2652:	48 89 d8             	mov    %rbx,%rax
    2655:	48 89 c7             	mov    %rax,%rdi
    2658:	e8 a3 fd ff ff       	call   2400 <_Unwind_Resume@plt>
    265d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2661:	c9                   	leave
    2662:	c3                   	ret

0000000000002663 <main>:

int main() {
    2663:	55                   	push   %rbp
    2664:	48 89 e5             	mov    %rsp,%rbp
    2667:	53                   	push   %rbx
    2668:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    266c:	e8 d8 fe ff ff       	call   2549 <_Z14protected_mainv>
    2671:	e9 c1 00 00 00       	jmp    2737 <main+0xd4>
  } catch (std::exception &e) {
    std::cerr << e.what() << std::endl;
  } catch (...) {
    std::cerr << "Uncaught exception" << std::endl;
  }
  return EXIT_FAILURE;
    2676:	b8 01 00 00 00       	mov    $0x1,%eax
    267b:	e9 b7 00 00 00       	jmp    2737 <main+0xd4>
  } catch (std::exception &e) {
    2680:	48 83 fa 01          	cmp    $0x1,%rdx
    2684:	75 4e                	jne    26d4 <main+0x71>
    2686:	48 89 c7             	mov    %rax,%rdi
    2689:	e8 22 fa ff ff       	call   20b0 <__cxa_begin_catch@plt>
    268e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << std::endl;
    2692:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2696:	48 8b 00             	mov    (%rax),%rax
    2699:	48 83 c0 10          	add    $0x10,%rax
    269d:	48 8b 10             	mov    (%rax),%rdx
    26a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    26a4:	48 89 c7             	mov    %rax,%rdi
    26a7:	ff d2                	call   *%rdx
    26a9:	48 89 c6             	mov    %rax,%rsi
    26ac:	48 8d 05 ad 1c 01 00 	lea    0x11cad(%rip),%rax        # 14360 <_ZSt4cerr@GLIBCXX_3.4>
    26b3:	48 89 c7             	mov    %rax,%rdi
    26b6:	e8 75 fb ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    26bb:	48 8b 15 de 18 01 00 	mov    0x118de(%rip),%rdx        # 13fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    26c2:	48 89 d6             	mov    %rdx,%rsi
    26c5:	48 89 c7             	mov    %rax,%rdi
    26c8:	e8 c3 fb ff ff       	call   2290 <_ZNSolsEPFRSoS_E@plt>
  } catch (...) {
    26cd:	e8 fe fc ff ff       	call   23d0 <__cxa_end_catch@plt>
    26d2:	eb a2                	jmp    2676 <main+0x13>
    26d4:	48 89 c7             	mov    %rax,%rdi
    26d7:	e8 d4 f9 ff ff       	call   20b0 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception" << std::endl;
    26dc:	48 8d 05 6e 7f 00 00 	lea    0x7f6e(%rip),%rax        # a651 <_ZN6__pstl9execution2v1L5unseqE+0x12>
    26e3:	48 89 c6             	mov    %rax,%rsi
    26e6:	48 8d 05 73 1c 01 00 	lea    0x11c73(%rip),%rax        # 14360 <_ZSt4cerr@GLIBCXX_3.4>
    26ed:	48 89 c7             	mov    %rax,%rdi
    26f0:	e8 3b fb ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    26f5:	48 8b 15 a4 18 01 00 	mov    0x118a4(%rip),%rdx        # 13fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    26fc:	48 89 d6             	mov    %rdx,%rsi
    26ff:	48 89 c7             	mov    %rax,%rdi
    2702:	e8 89 fb ff ff       	call   2290 <_ZNSolsEPFRSoS_E@plt>
  }
    2707:	e8 c4 fc ff ff       	call   23d0 <__cxa_end_catch@plt>
    270c:	e9 65 ff ff ff       	jmp    2676 <main+0x13>
  } catch (...) {
    2711:	48 89 c3             	mov    %rax,%rbx
    2714:	e8 b7 fc ff ff       	call   23d0 <__cxa_end_catch@plt>
    2719:	48 89 d8             	mov    %rbx,%rax
    271c:	48 89 c7             	mov    %rax,%rdi
    271f:	e8 dc fc ff ff       	call   2400 <_Unwind_Resume@plt>
  }
    2724:	48 89 c3             	mov    %rax,%rbx
    2727:	e8 a4 fc ff ff       	call   23d0 <__cxa_end_catch@plt>
    272c:	48 89 d8             	mov    %rbx,%rax
    272f:	48 89 c7             	mov    %rax,%rdi
    2732:	e8 c9 fc ff ff       	call   2400 <_Unwind_Resume@plt>
    2737:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    273b:	c9                   	leave
    273c:	c3                   	ret

000000000000273d <_Z41__static_initialization_and_destruction_0ii>:
    273d:	55                   	push   %rbp
    273e:	48 89 e5             	mov    %rsp,%rbp
    2741:	48 83 ec 10          	sub    $0x10,%rsp
    2745:	89 7d fc             	mov    %edi,-0x4(%rbp)
    2748:	89 75 f8             	mov    %esi,-0x8(%rbp)
    274b:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    274f:	75 3b                	jne    278c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    2751:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    2758:	75 32                	jne    278c <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    275a:	48 8d 05 10 1d 01 00 	lea    0x11d10(%rip),%rax        # 14471 <_ZStL8__ioinit>
    2761:	48 89 c7             	mov    %rax,%rdi
    2764:	e8 27 fc ff ff       	call   2390 <_ZNSt8ios_base4InitC1Ev@plt>
    2769:	48 8d 05 a8 1a 01 00 	lea    0x11aa8(%rip),%rax        # 14218 <__dso_handle>
    2770:	48 89 c2             	mov    %rax,%rdx
    2773:	48 8d 05 f7 1c 01 00 	lea    0x11cf7(%rip),%rax        # 14471 <_ZStL8__ioinit>
    277a:	48 89 c6             	mov    %rax,%rsi
    277d:	48 8b 05 4c 18 01 00 	mov    0x1184c(%rip),%rax        # 13fd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    2784:	48 89 c7             	mov    %rax,%rdi
    2787:	e8 74 fa ff ff       	call   2200 <__cxa_atexit@plt>
    278c:	90                   	nop
    278d:	c9                   	leave
    278e:	c3                   	ret

000000000000278f <_GLOBAL__sub_I__Z14protected_mainv>:
    278f:	55                   	push   %rbp
    2790:	48 89 e5             	mov    %rsp,%rbp
    2793:	be ff ff 00 00       	mov    $0xffff,%esi
    2798:	bf 01 00 00 00       	mov    $0x1,%edi
    279d:	e8 9b ff ff ff       	call   273d <_Z41__static_initialization_and_destruction_0ii>
    27a2:	5d                   	pop    %rbp
    27a3:	c3                   	ret

00000000000027a4 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    27a4:	55                   	push   %rbp
    27a5:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    27a8:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    27ad:	5d                   	pop    %rbp
    27ae:	c3                   	ret

00000000000027af <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    27af:	55                   	push   %rbp
    27b0:	48 89 e5             	mov    %rsp,%rbp
    27b3:	48 83 ec 10          	sub    $0x10,%rsp
    27b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    27bb:	e8 e4 ff ff ff       	call   27a4 <_ZSt23__is_constant_evaluatedv>
    27c0:	84 c0                	test   %al,%al
    27c2:	74 0e                	je     27d2 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    27c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27c8:	48 89 c7             	mov    %rax,%rdi
    27cb:	e8 02 02 00 00       	call   29d2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    27d0:	eb 0d                	jmp    27df <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    27d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    27d6:	48 89 c7             	mov    %rax,%rdi
    27d9:	e8 f2 f8 ff ff       	call   20d0 <strlen@plt>
    27de:	90                   	nop
      }
    27df:	c9                   	leave
    27e0:	c3                   	ret
    27e1:	90                   	nop

00000000000027e2 <_ZN4neko7ContextD1Ev>:

  Context &operator=(const Context &) = delete;

  Context &operator=(Context &&) = default;

  ~Context() { destroyContext(); }
    27e2:	55                   	push   %rbp
    27e3:	48 89 e5             	mov    %rsp,%rbp
    27e6:	48 83 ec 10          	sub    $0x10,%rsp
    27ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    27ee:	e8 59 5e 00 00       	call   864c <_ZN4neko7Context14destroyContextEv>
    27f3:	90                   	nop
    27f4:	c9                   	leave
    27f5:	c3                   	ret

00000000000027f6 <_ZN4neko8InstanceD1Ev>:
  explicit Instance(const Settings &settings);
  Instance(const Instance &) = delete;
  Instance(Instance &&rhs) noexcept;
  Instance &operator=(const Instance &) = delete;
  Instance &operator=(Instance &&rhs);
  ~Instance() { release(); }
    27f6:	55                   	push   %rbp
    27f7:	48 89 e5             	mov    %rsp,%rbp
    27fa:	48 83 ec 10          	sub    $0x10,%rsp
    27fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2806:	48 89 c7             	mov    %rax,%rdi
    2809:	e8 ca 66 00 00       	call   8ed8 <_ZN4neko8Instance7releaseEv>
    280e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2812:	48 89 c7             	mov    %rax,%rdi
    2815:	e8 c8 ff ff ff       	call   27e2 <_ZN4neko7ContextD1Ev>
    281a:	90                   	nop
    281b:	c9                   	leave
    281c:	c3                   	ret
    281d:	90                   	nop

000000000000281e <_ZN4neko8RendererC1ERKNS_8SettingsE>:

class Renderer {
public:
  Renderer() = delete;

  explicit Renderer(const Settings &settings) : mpSettings{&settings} {}
    281e:	55                   	push   %rbp
    281f:	48 89 e5             	mov    %rsp,%rbp
    2822:	53                   	push   %rbx
    2823:	48 83 ec 18          	sub    $0x18,%rsp
    2827:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    282b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    282f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2833:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    2837:	48 89 10             	mov    %rdx,(%rax)
    283a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    283e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    2842:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2846:	48 8b 00             	mov    (%rax),%rax
    2849:	48 89 c6             	mov    %rax,%rsi
    284c:	48 89 d7             	mov    %rdx,%rdi
    284f:	e8 b0 61 00 00       	call   8a04 <_ZN4neko8InstanceC1ERKNS_8SettingsE>
    2854:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2858:	48 8d 50 28          	lea    0x28(%rax),%rdx
    285c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2860:	48 8b 00             	mov    (%rax),%rax
    2863:	48 89 c6             	mov    %rax,%rsi
    2866:	48 89 d7             	mov    %rdx,%rdi
    2869:	e8 0a 75 00 00       	call   9d78 <_ZN4neko6WindowC1ERKNS_8SettingsE>
    286e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2872:	48 83 c0 38          	add    $0x38,%rax
    2876:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    287a:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    287e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2882:	48 83 c2 28          	add    $0x28,%rdx
    2886:	48 89 ce             	mov    %rcx,%rsi
    2889:	48 89 c7             	mov    %rax,%rdi
    288c:	e8 bb 75 00 00       	call   9e4c <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>
    2891:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2895:	48 83 c0 48          	add    $0x48,%rax
    2899:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    289d:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    28a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    28a5:	48 83 c2 38          	add    $0x38,%rdx
    28a9:	48 89 ce             	mov    %rcx,%rsi
    28ac:	48 89 c7             	mov    %rax,%rdi
    28af:	e8 f0 12 00 00       	call   3ba4 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>
    28b4:	eb 48                	jmp    28fe <_ZN4neko8RendererC1ERKNS_8SettingsE+0xe0>
    28b6:	48 89 c3             	mov    %rax,%rbx
    28b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28bd:	48 83 c0 38          	add    $0x38,%rax
    28c1:	48 89 c7             	mov    %rax,%rdi
    28c4:	e8 43 76 00 00       	call   9f0c <_ZN4neko7SurfaceD1Ev>
    28c9:	eb 03                	jmp    28ce <_ZN4neko8RendererC1ERKNS_8SettingsE+0xb0>
    28cb:	48 89 c3             	mov    %rax,%rbx
    28ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28d2:	48 83 c0 28          	add    $0x28,%rax
    28d6:	48 89 c7             	mov    %rax,%rdi
    28d9:	e8 20 75 00 00       	call   9dfe <_ZN4neko6WindowD1Ev>
    28de:	eb 03                	jmp    28e3 <_ZN4neko8RendererC1ERKNS_8SettingsE+0xc5>
    28e0:	48 89 c3             	mov    %rax,%rbx
    28e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    28e7:	48 83 c0 08          	add    $0x8,%rax
    28eb:	48 89 c7             	mov    %rax,%rdi
    28ee:	e8 03 ff ff ff       	call   27f6 <_ZN4neko8InstanceD1Ev>
    28f3:	48 89 d8             	mov    %rbx,%rax
    28f6:	48 89 c7             	mov    %rax,%rdi
    28f9:	e8 02 fb ff ff       	call   2400 <_Unwind_Resume@plt>
    28fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2902:	c9                   	leave
    2903:	c3                   	ret

0000000000002904 <_ZN4neko8Renderer5startEv>:

  Renderer &operator=(Renderer &&) = default;

  ~Renderer() = default;

  void start() {
    2904:	55                   	push   %rbp
    2905:	48 89 e5             	mov    %rsp,%rbp
    2908:	48 83 ec 10          	sub    $0x10,%rsp
    290c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    mWindow.open();
    2910:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2914:	48 83 c0 28          	add    $0x28,%rax
    2918:	48 89 c7             	mov    %rax,%rdi
    291b:	e8 fc 74 00 00       	call   9e1c <_ZN4neko6Window4openEv>
    // Instance instance = std::move(mInstance);
    // mInstance.release();
  };
    2920:	90                   	nop
    2921:	c9                   	leave
    2922:	c3                   	ret
    2923:	90                   	nop

0000000000002924 <_ZN4neko6Engine5startEv>:

  Engine &operator=(Engine &&) = default;

  ~Engine() = default;

  void start() { mRenderer->start(); };
    2924:	55                   	push   %rbp
    2925:	48 89 e5             	mov    %rsp,%rbp
    2928:	48 83 ec 10          	sub    $0x10,%rsp
    292c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2934:	48 83 c0 08          	add    $0x8,%rax
    2938:	48 89 c7             	mov    %rax,%rdi
    293b:	e8 fc 04 00 00       	call   2e3c <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>
    2940:	48 89 c7             	mov    %rax,%rdi
    2943:	e8 bc ff ff ff       	call   2904 <_ZN4neko8Renderer5startEv>
    2948:	90                   	nop
    2949:	c9                   	leave
    294a:	c3                   	ret
    294b:	90                   	nop

000000000000294c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	// _GLIBCXX_RESOLVE_LIB_DEFECTS
	// 3050. Conversion specification problem in chrono::duration
	template<typename _Rep2, typename = _Require<
		 is_convertible<const _Rep2&, rep>,
		 __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>
	  constexpr explicit duration(const _Rep2& __rep)
    294c:	55                   	push   %rbp
    294d:	48 89 e5             	mov    %rsp,%rbp
    2950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2954:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    2958:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    295c:	48 8b 10             	mov    (%rax),%rdx
    295f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2963:	48 89 10             	mov    %rdx,(%rax)
    2966:	90                   	nop
    2967:	5d                   	pop    %rbp
    2968:	c3                   	ret
    2969:	90                   	nop

000000000000296a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	~duration() = default;
	duration& operator=(const duration&) = default;

	// 20.11.5.2 observer
	constexpr rep
	count() const
    296a:	55                   	push   %rbp
    296b:	48 89 e5             	mov    %rsp,%rbp
    296e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    2972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2976:	48 8b 00             	mov    (%rax),%rax
    2979:	5d                   	pop    %rbp
    297a:	c3                   	ret

000000000000297b <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
    297b:	55                   	push   %rbp
    297c:	48 89 e5             	mov    %rsp,%rbp
    297f:	48 83 ec 20          	sub    $0x20,%rsp
    2983:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2987:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
    298b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    298f:	48 89 c7             	mov    %rax,%rdi
    2992:	e8 29 00 00 00       	call   29c0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    2997:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    299b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    299f:	48 89 c7             	mov    %rax,%rdi
    29a2:	e8 19 00 00 00       	call   29c0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
    29a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    29ab:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    29af:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    29b3:	48 89 d6             	mov    %rdx,%rsi
    29b6:	48 89 c7             	mov    %rax,%rdi
    29b9:	e8 f9 05 00 00       	call   2fb7 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
    29be:	c9                   	leave
    29bf:	c3                   	ret

00000000000029c0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
    29c0:	55                   	push   %rbp
    29c1:	48 89 e5             	mov    %rsp,%rbp
    29c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
    29c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29cc:	48 8b 00             	mov    (%rax),%rax
    29cf:	5d                   	pop    %rbp
    29d0:	c3                   	ret
    29d1:	90                   	nop

00000000000029d2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    29d2:	55                   	push   %rbp
    29d3:	48 89 e5             	mov    %rsp,%rbp
    29d6:	48 83 ec 20          	sub    $0x20,%rsp
    29da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    29de:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    29e5:	00 
      while (!eq(__p[__i], char_type()))
    29e6:	eb 05                	jmp    29ed <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    29e8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    29ed:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    29f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    29f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    29f9:	48 01 c2             	add    %rax,%rdx
    29fc:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    2a00:	48 89 c6             	mov    %rax,%rsi
    2a03:	48 89 d7             	mov    %rdx,%rdi
    2a06:	e8 2f 06 00 00       	call   303a <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    2a0b:	83 f0 01             	xor    $0x1,%eax
    2a0e:	84 c0                	test   %al,%al
    2a10:	75 d6                	jne    29e8 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    2a12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    2a16:	c9                   	leave
    2a17:	c3                   	ret

0000000000002a18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    2a18:	55                   	push   %rbp
    2a19:	48 89 e5             	mov    %rsp,%rbp
    2a1c:	48 83 ec 10          	sub    $0x10,%rsp
    2a20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2a28:	48 89 c7             	mov    %rax,%rdi
    2a2b:	e8 20 f6 ff ff       	call   2050 <_ZNSaIcED2Ev@plt>
    2a30:	90                   	nop
    2a31:	c9                   	leave
    2a32:	c3                   	ret
    2a33:	90                   	nop

0000000000002a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    2a34:	55                   	push   %rbp
    2a35:	48 89 e5             	mov    %rsp,%rbp
    2a38:	53                   	push   %rbx
    2a39:	48 83 ec 38          	sub    $0x38,%rsp
    2a3d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2a41:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    2a45:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    2a49:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    2a4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2a51:	48 89 c7             	mov    %rax,%rdi
    2a54:	e8 67 f7 ff ff       	call   21c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    2a59:	48 89 c1             	mov    %rax,%rcx
    2a5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2a60:	48 89 c2             	mov    %rax,%rdx
    2a63:	48 89 ce             	mov    %rcx,%rsi
    2a66:	48 89 df             	mov    %rbx,%rdi
    2a69:	e8 32 f8 ff ff       	call   22a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    2a6e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    2a73:	75 0f                	jne    2a84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    2a75:	48 8d 05 ec 7b 00 00 	lea    0x7bec(%rip),%rax        # a668 <_ZN6__pstl9execution2v1L5unseqE+0x29>
    2a7c:	48 89 c7             	mov    %rax,%rdi
    2a7f:	e8 cc f6 ff ff       	call   2150 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    2a84:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    2a88:	48 89 c7             	mov    %rax,%rdi
    2a8b:	e8 1f fd ff ff       	call   27af <_ZNSt11char_traitsIcE6lengthEPKc>
    2a90:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    2a94:	48 01 d0             	add    %rdx,%rax
    2a97:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    2a9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    2a9f:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    2aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2aa7:	48 89 ce             	mov    %rcx,%rsi
    2aaa:	48 89 c7             	mov    %rax,%rdi
    2aad:	e8 ee 05 00 00       	call   30a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    2ab2:	eb 1a                	jmp    2ace <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    2ab4:	48 89 c3             	mov    %rax,%rbx
    2ab7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2abb:	48 89 c7             	mov    %rax,%rdi
    2abe:	e8 55 ff ff ff       	call   2a18 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    2ac3:	48 89 d8             	mov    %rbx,%rax
    2ac6:	48 89 c7             	mov    %rax,%rdi
    2ac9:	e8 32 f9 ff ff       	call   2400 <_Unwind_Resume@plt>
    2ace:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2ad2:	c9                   	leave
    2ad3:	c3                   	ret

0000000000002ad4 <_ZN4neko8SettingsUt_C1Ev>:
#else
inline constexpr bool debugMode = false;
#endif /* NDEBUG */

struct Settings {
  struct {
    2ad4:	55                   	push   %rbp
    2ad5:	48 89 e5             	mov    %rsp,%rbp
    2ad8:	53                   	push   %rbx
    2ad9:	48 83 ec 28          	sub    $0x28,%rsp
    2add:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    2ae1:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    2ae5:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    2ae9:	48 89 c7             	mov    %rax,%rdi
    2aec:	e8 1f f9 ff ff       	call   2410 <_ZNSaIcEC1Ev@plt>
    2af1:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    2af5:	48 89 c2             	mov    %rax,%rdx
    2af8:	48 8d 05 9b 7b 00 00 	lea    0x7b9b(%rip),%rax        # a69a <_ZN6__pstl9execution2v1L5unseqE+0x5b>
    2aff:	48 89 c6             	mov    %rax,%rsi
    2b02:	48 89 df             	mov    %rbx,%rdi
    2b05:	e8 2a ff ff ff       	call   2a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    2b0a:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    2b0e:	48 89 c7             	mov    %rax,%rdi
    2b11:	e8 aa f7 ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    2b16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b1a:	c7 40 20 00 00 40 00 	movl   $0x400000,0x20(%rax)
    2b21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b25:	48 8d 58 28          	lea    0x28(%rax),%rbx
    2b29:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b2d:	48 89 c7             	mov    %rax,%rdi
    2b30:	e8 db f8 ff ff       	call   2410 <_ZNSaIcEC1Ev@plt>
    2b35:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b39:	48 89 c2             	mov    %rax,%rdx
    2b3c:	48 8d 05 6a 7b 00 00 	lea    0x7b6a(%rip),%rax        # a6ad <_ZN6__pstl9execution2v1L5unseqE+0x6e>
    2b43:	48 89 c6             	mov    %rax,%rsi
    2b46:	48 89 df             	mov    %rbx,%rdi
    2b49:	e8 e6 fe ff ff       	call   2a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    2b4e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b52:	48 89 c7             	mov    %rax,%rdi
    2b55:	e8 66 f7 ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    2b5a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b5e:	c7 40 48 00 00 40 00 	movl   $0x400000,0x48(%rax)
    2b65:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b69:	c7 40 4c 00 30 40 00 	movl   $0x403000,0x4c(%rax)
    2b70:	eb 40                	jmp    2bb2 <_ZN4neko8SettingsUt_C1Ev+0xde>
    2b72:	48 89 c3             	mov    %rax,%rbx
    2b75:	48 8d 45 ee          	lea    -0x12(%rbp),%rax
    2b79:	48 89 c7             	mov    %rax,%rdi
    2b7c:	e8 3f f7 ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    2b81:	48 89 d8             	mov    %rbx,%rax
    2b84:	48 89 c7             	mov    %rax,%rdi
    2b87:	e8 74 f8 ff ff       	call   2400 <_Unwind_Resume@plt>
    2b8c:	48 89 c3             	mov    %rax,%rbx
    2b8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    2b93:	48 89 c7             	mov    %rax,%rdi
    2b96:	e8 25 f7 ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    2b9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2b9f:	48 89 c7             	mov    %rax,%rdi
    2ba2:	e8 79 f5 ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    2ba7:	48 89 d8             	mov    %rbx,%rax
    2baa:	48 89 c7             	mov    %rax,%rdi
    2bad:	e8 4e f8 ff ff       	call   2400 <_Unwind_Resume@plt>
    2bb2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2bb6:	c9                   	leave
    2bb7:	c3                   	ret

0000000000002bb8 <_ZN4neko8SettingsUt_D1Ev>:
    2bb8:	55                   	push   %rbp
    2bb9:	48 89 e5             	mov    %rsp,%rbp
    2bbc:	48 83 ec 10          	sub    $0x10,%rsp
    2bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bc8:	48 83 c0 28          	add    $0x28,%rax
    2bcc:	48 89 c7             	mov    %rax,%rdi
    2bcf:	e8 4c f5 ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    2bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bd8:	48 89 c7             	mov    %rax,%rdi
    2bdb:	e8 40 f5 ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    2be0:	90                   	nop
    2be1:	c9                   	leave
    2be2:	c3                   	ret
    2be3:	90                   	nop

0000000000002be4 <_ZN4neko8SettingsUt0_C1Ev>:
    u32 appVersion = VK_MAKE_VERSION(1, 0, 0);
    std::string engineName = "Neko Engine";
    u32 engineVersion = VK_MAKE_VERSION(1, 0, 0);
    u32 apiVersion = VK_API_VERSION_1_3;
  } general;
  struct {
    2be4:	55                   	push   %rbp
    2be5:	48 89 e5             	mov    %rsp,%rbp
    2be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bf0:	c7 00 20 03 00 00    	movl   $0x320,(%rax)
    2bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2bfa:	c7 40 04 58 02 00 00 	movl   $0x258,0x4(%rax)
    2c01:	90                   	nop
    2c02:	5d                   	pop    %rbp
    2c03:	c3                   	ret

0000000000002c04 <_ZN4neko8SettingsC1Ev>:
struct Settings {
    2c04:	55                   	push   %rbp
    2c05:	48 89 e5             	mov    %rsp,%rbp
    2c08:	48 83 ec 10          	sub    $0x10,%rsp
    2c0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    2c10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c14:	48 89 c7             	mov    %rax,%rdi
    2c17:	e8 b8 fe ff ff       	call   2ad4 <_ZN4neko8SettingsUt_C1Ev>
    2c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2c20:	48 83 c0 50          	add    $0x50,%rax
    2c24:	48 89 c7             	mov    %rax,%rdi
    2c27:	e8 b8 ff ff ff       	call   2be4 <_ZN4neko8SettingsUt0_C1Ev>
    2c2c:	90                   	nop
    2c2d:	c9                   	leave
    2c2e:	c3                   	ret

0000000000002c2f <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
   *  @relates unique_ptr
   */
  template<typename _Tp, typename... _Args>
    _GLIBCXX23_CONSTEXPR
    inline __detail::__unique_ptr_t<_Tp>
    make_unique(_Args&&... __args)
    2c2f:	55                   	push   %rbp
    2c30:	48 89 e5             	mov    %rsp,%rbp
    2c33:	41 54                	push   %r12
    2c35:	53                   	push   %rbx
    2c36:	48 83 ec 10          	sub    $0x10,%rsp
    2c3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    2c3e:	bf 58 00 00 00       	mov    $0x58,%edi
    2c43:	e8 f8 f5 ff ff       	call   2240 <_Znwm@plt>
    2c48:	48 89 c6             	mov    %rax,%rsi
    2c4b:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2c51:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2c55:	b8 00 00 00 00       	mov    $0x0,%eax
    2c5a:	ba 0b 00 00 00       	mov    $0xb,%edx
    2c5f:	48 89 f7             	mov    %rsi,%rdi
    2c62:	48 89 d1             	mov    %rdx,%rcx
    2c65:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    2c68:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2c6c:	e8 93 ff ff ff       	call   2c04 <_ZN4neko8SettingsC1Ev>
    2c71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2c75:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    2c79:	48 89 c7             	mov    %rax,%rdi
    2c7c:	e8 2d 05 00 00       	call   31ae <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    2c81:	eb 21                	jmp    2ca4 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x75>
    2c83:	48 89 c3             	mov    %rax,%rbx
    2c86:	45 84 e4             	test   %r12b,%r12b
    2c89:	74 0e                	je     2c99 <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x6a>
    2c8b:	be 58 00 00 00       	mov    $0x58,%esi
    2c90:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2c94:	e8 b7 f5 ff ff       	call   2250 <_ZdlPvm@plt>
    2c99:	48 89 d8             	mov    %rbx,%rax
    2c9c:	48 89 c7             	mov    %rax,%rdi
    2c9f:	e8 5c f7 ff ff       	call   2400 <_Unwind_Resume@plt>
    2ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2ca8:	48 83 c4 10          	add    $0x10,%rsp
    2cac:	5b                   	pop    %rbx
    2cad:	41 5c                	pop    %r12
    2caf:	5d                   	pop    %rbp
    2cb0:	c3                   	ret
    2cb1:	90                   	nop

0000000000002cb2 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    2cb2:	55                   	push   %rbp
    2cb3:	48 89 e5             	mov    %rsp,%rbp
    2cb6:	53                   	push   %rbx
    2cb7:	48 83 ec 28          	sub    $0x28,%rsp
    2cbb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    2cbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cc3:	48 89 c7             	mov    %rax,%rdi
    2cc6:	e8 09 05 00 00       	call   31d4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    2ccb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    2ccf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cd3:	48 8b 00             	mov    (%rax),%rax
    2cd6:	48 85 c0             	test   %rax,%rax
    2cd9:	74 29                	je     2d04 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    2cdb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2cdf:	48 89 c7             	mov    %rax,%rdi
    2ce2:	e8 07 05 00 00       	call   31ee <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>
    2ce7:	48 89 c3             	mov    %rax,%rbx
    2cea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2cee:	48 89 c7             	mov    %rax,%rdi
    2cf1:	e8 12 05 00 00       	call   3208 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>
    2cf6:	48 8b 00             	mov    (%rax),%rax
    2cf9:	48 89 c6             	mov    %rax,%rsi
    2cfc:	48 89 df             	mov    %rbx,%rdi
    2cff:	e8 2e 05 00 00       	call   3232 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>
	__ptr = pointer();
    2d04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d08:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    2d0f:	90                   	nop
    2d10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2d14:	c9                   	leave
    2d15:	c3                   	ret

0000000000002d16 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>:
      operator*() const noexcept(noexcept(*std::declval<pointer>()))
    2d16:	55                   	push   %rbp
    2d17:	48 89 e5             	mov    %rsp,%rbp
    2d1a:	48 83 ec 10          	sub    $0x10,%rsp
    2d1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(get() != pointer());
    2d22:	e8 7d fa ff ff       	call   27a4 <_ZSt23__is_constant_evaluatedv>
    2d27:	84 c0                	test   %al,%al
    2d29:	74 18                	je     2d43 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    2d2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d2f:	48 89 c7             	mov    %rax,%rdi
    2d32:	e8 31 05 00 00       	call   3268 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
    2d37:	48 85 c0             	test   %rax,%rax
    2d3a:	75 07                	jne    2d43 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x2d>
    2d3c:	b8 01 00 00 00       	mov    $0x1,%eax
    2d41:	eb 05                	jmp    2d48 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv+0x32>
    2d43:	b8 00 00 00 00       	mov    $0x0,%eax
    2d48:	84 c0                	test   %al,%al
	return *get();
    2d4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2d4e:	48 89 c7             	mov    %rax,%rdi
    2d51:	e8 12 05 00 00       	call   3268 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>
      }
    2d56:	c9                   	leave
    2d57:	c3                   	ret

0000000000002d58 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    2d58:	55                   	push   %rbp
    2d59:	48 89 e5             	mov    %rsp,%rbp
    2d5c:	41 54                	push   %r12
    2d5e:	53                   	push   %rbx
    2d5f:	48 83 ec 20          	sub    $0x20,%rsp
    2d63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2d67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    2d6b:	bf 68 00 00 00       	mov    $0x68,%edi
    2d70:	e8 cb f4 ff ff       	call   2240 <_Znwm@plt>
    2d75:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    2d79:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2d7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    2d83:	48 89 c7             	mov    %rax,%rdi
    2d86:	e8 f7 04 00 00       	call   3282 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>
    2d8b:	48 89 c6             	mov    %rax,%rsi
    2d8e:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    2d92:	e8 87 fa ff ff       	call   281e <_ZN4neko8RendererC1ERKNS_8SettingsE>
    2d97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2d9b:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    2d9f:	48 89 c7             	mov    %rax,%rdi
    2da2:	e8 0f 05 00 00       	call   32b6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    2da7:	eb 21                	jmp    2dca <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x72>
    2da9:	48 89 c3             	mov    %rax,%rbx
    2dac:	45 84 e4             	test   %r12b,%r12b
    2daf:	74 0e                	je     2dbf <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x67>
    2db1:	be 68 00 00 00       	mov    $0x68,%esi
    2db6:	48 8b 7d d8          	mov    -0x28(%rbp),%rdi
    2dba:	e8 91 f4 ff ff       	call   2250 <_ZdlPvm@plt>
    2dbf:	48 89 d8             	mov    %rbx,%rax
    2dc2:	48 89 c7             	mov    %rax,%rdi
    2dc5:	e8 36 f6 ff ff       	call   2400 <_Unwind_Resume@plt>
    2dca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2dce:	48 83 c4 20          	add    $0x20,%rsp
    2dd2:	5b                   	pop    %rbx
    2dd3:	41 5c                	pop    %r12
    2dd5:	5d                   	pop    %rbp
    2dd6:	c3                   	ret
    2dd7:	90                   	nop

0000000000002dd8 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    2dd8:	55                   	push   %rbp
    2dd9:	48 89 e5             	mov    %rsp,%rbp
    2ddc:	53                   	push   %rbx
    2ddd:	48 83 ec 28          	sub    $0x28,%rsp
    2de1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    2de5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2de9:	48 89 c7             	mov    %rax,%rdi
    2dec:	e8 eb 04 00 00       	call   32dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    2df1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    2df5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2df9:	48 8b 00             	mov    (%rax),%rax
    2dfc:	48 85 c0             	test   %rax,%rax
    2dff:	74 29                	je     2e2a <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    2e01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2e05:	48 89 c7             	mov    %rax,%rdi
    2e08:	e8 e9 04 00 00       	call   32f6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>
    2e0d:	48 89 c3             	mov    %rax,%rbx
    2e10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e14:	48 89 c7             	mov    %rax,%rdi
    2e17:	e8 f4 04 00 00       	call   3310 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>
    2e1c:	48 8b 00             	mov    (%rax),%rax
    2e1f:	48 89 c6             	mov    %rax,%rsi
    2e22:	48 89 df             	mov    %rbx,%rdi
    2e25:	e8 44 05 00 00       	call   336e <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>
	__ptr = pointer();
    2e2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e2e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    2e35:	90                   	nop
    2e36:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2e3a:	c9                   	leave
    2e3b:	c3                   	ret

0000000000002e3c <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    2e3c:	55                   	push   %rbp
    2e3d:	48 89 e5             	mov    %rsp,%rbp
    2e40:	48 83 ec 10          	sub    $0x10,%rsp
    2e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    2e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2e4c:	48 89 c7             	mov    %rax,%rdi
    2e4f:	e8 50 05 00 00       	call   33a4 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>
      }
    2e54:	c9                   	leave
    2e55:	c3                   	ret

0000000000002e56 <_ZN4neko6EngineC1Ev>:
  Engine() = default;
    2e56:	55                   	push   %rbp
    2e57:	48 89 e5             	mov    %rsp,%rbp
    2e5a:	53                   	push   %rbx
    2e5b:	48 83 ec 18          	sub    $0x18,%rsp
    2e5f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    2e63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e67:	48 89 c7             	mov    %rax,%rdi
    2e6a:	e8 c0 fd ff ff       	call   2c2f <_ZSt11make_uniqueIN4neko8SettingsEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    2e6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e73:	48 89 c7             	mov    %rax,%rdi
    2e76:	e8 9b fe ff ff       	call   2d16 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEdeEv>
    2e7b:	48 89 c2             	mov    %rax,%rdx
    2e7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e82:	48 83 c0 08          	add    $0x8,%rax
    2e86:	48 89 d6             	mov    %rdx,%rsi
    2e89:	48 89 c7             	mov    %rax,%rdi
    2e8c:	e8 c7 fe ff ff       	call   2d58 <_ZSt11make_uniqueIN4neko8RendererEJRNS0_8SettingsEEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>
    2e91:	eb 1a                	jmp    2ead <_ZN4neko6EngineC1Ev+0x57>
    2e93:	48 89 c3             	mov    %rax,%rbx
    2e96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2e9a:	48 89 c7             	mov    %rax,%rdi
    2e9d:	e8 10 fe ff ff       	call   2cb2 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    2ea2:	48 89 d8             	mov    %rbx,%rax
    2ea5:	48 89 c7             	mov    %rax,%rdi
    2ea8:	e8 53 f5 ff ff       	call   2400 <_Unwind_Resume@plt>
    2ead:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2eb1:	c9                   	leave
    2eb2:	c3                   	ret

0000000000002eb3 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_>:
    make_unique(_Args&&... __args)
    2eb3:	55                   	push   %rbp
    2eb4:	48 89 e5             	mov    %rsp,%rbp
    2eb7:	41 54                	push   %r12
    2eb9:	53                   	push   %rbx
    2eba:	48 83 ec 10          	sub    $0x10,%rsp
    2ebe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    { return unique_ptr<_Tp>(new _Tp(std::forward<_Args>(__args)...)); }
    2ec2:	bf 10 00 00 00       	mov    $0x10,%edi
    2ec7:	e8 74 f3 ff ff       	call   2240 <_Znwm@plt>
    2ecc:	48 89 c6             	mov    %rax,%rsi
    2ecf:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2ed5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    2ed9:	0f 11 06             	movups %xmm0,(%rsi)
    2edc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    2ee0:	48 89 f7             	mov    %rsi,%rdi
    2ee3:	e8 6e ff ff ff       	call   2e56 <_ZN4neko6EngineC1Ev>
    2ee8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2eec:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    2ef0:	48 89 c7             	mov    %rax,%rdi
    2ef3:	e8 ec 04 00 00       	call   33e4 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>
    2ef8:	eb 21                	jmp    2f1b <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x68>
    2efa:	48 89 c3             	mov    %rax,%rbx
    2efd:	45 84 e4             	test   %r12b,%r12b
    2f00:	74 0e                	je     2f10 <_ZSt11make_uniqueIN4neko6EngineEJEENSt8__detail9_MakeUniqIT_E15__single_objectEDpOT0_+0x5d>
    2f02:	be 10 00 00 00       	mov    $0x10,%esi
    2f07:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    2f0b:	e8 40 f3 ff ff       	call   2250 <_ZdlPvm@plt>
    2f10:	48 89 d8             	mov    %rbx,%rax
    2f13:	48 89 c7             	mov    %rax,%rdi
    2f16:	e8 e5 f4 ff ff       	call   2400 <_Unwind_Resume@plt>
    2f1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f1f:	48 83 c4 10          	add    $0x10,%rsp
    2f23:	5b                   	pop    %rbx
    2f24:	41 5c                	pop    %r12
    2f26:	5d                   	pop    %rbp
    2f27:	c3                   	ret

0000000000002f28 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev>:
      ~unique_ptr() noexcept
    2f28:	55                   	push   %rbp
    2f29:	48 89 e5             	mov    %rsp,%rbp
    2f2c:	53                   	push   %rbx
    2f2d:	48 83 ec 28          	sub    $0x28,%rsp
    2f31:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
	auto& __ptr = _M_t._M_ptr();
    2f35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f39:	48 89 c7             	mov    %rax,%rdi
    2f3c:	e8 c9 04 00 00       	call   340a <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    2f41:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	if (__ptr != nullptr)
    2f45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f49:	48 8b 00             	mov    (%rax),%rax
    2f4c:	48 85 c0             	test   %rax,%rax
    2f4f:	74 29                	je     2f7a <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EED1Ev+0x52>
	  get_deleter()(std::move(__ptr));
    2f51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    2f55:	48 89 c7             	mov    %rax,%rdi
    2f58:	e8 c7 04 00 00       	call   3424 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>
    2f5d:	48 89 c3             	mov    %rax,%rbx
    2f60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f64:	48 89 c7             	mov    %rax,%rdi
    2f67:	e8 d2 04 00 00       	call   343e <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>
    2f6c:	48 8b 00             	mov    (%rax),%rax
    2f6f:	48 89 c6             	mov    %rax,%rsi
    2f72:	48 89 df             	mov    %rbx,%rdi
    2f75:	e8 fe 04 00 00       	call   3478 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>
	__ptr = pointer();
    2f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    2f7e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
      }
    2f85:	90                   	nop
    2f86:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    2f8a:	c9                   	leave
    2f8b:	c3                   	ret

0000000000002f8c <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
    2f8c:	55                   	push   %rbp
    2f8d:	48 89 e5             	mov    %rsp,%rbp
    2f90:	48 83 ec 10          	sub    $0x10,%rsp
    2f94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
    2f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2f9c:	48 89 c7             	mov    %rax,%rdi
    2f9f:	e8 0a 05 00 00       	call   34ae <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
    2fa4:	c9                   	leave
    2fa5:	c3                   	ret

0000000000002fa6 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
    2fa6:	55                   	push   %rbp
    2fa7:	48 89 e5             	mov    %rsp,%rbp
    2faa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    2fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    2fb2:	48 8b 00             	mov    (%rax),%rax
    2fb5:	5d                   	pop    %rbp
    2fb6:	c3                   	ret

0000000000002fb7 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
    2fb7:	55                   	push   %rbp
    2fb8:	48 89 e5             	mov    %rsp,%rbp
    2fbb:	53                   	push   %rbx
    2fbc:	48 83 ec 38          	sub    $0x38,%rsp
    2fc0:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    2fc4:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
    2fc8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    2fcc:	48 8b 00             	mov    (%rax),%rax
    2fcf:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    2fd3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    2fd7:	48 89 c7             	mov    %rax,%rdi
    2fda:	e8 8b f9 ff ff       	call   296a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    2fdf:	48 89 c3             	mov    %rax,%rbx
    2fe2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    2fe6:	48 8b 00             	mov    (%rax),%rax
    2fe9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    2fed:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    2ff1:	48 89 c7             	mov    %rax,%rdi
    2ff4:	e8 71 f9 ff ff       	call   296a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    2ff9:	48 29 c3             	sub    %rax,%rbx
    2ffc:	48 89 da             	mov    %rbx,%rdx
    2fff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    3003:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    3007:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    300b:	48 89 d6             	mov    %rdx,%rsi
    300e:	48 89 c7             	mov    %rax,%rdi
    3011:	e8 36 f9 ff ff       	call   294c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    3016:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
    301a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    301e:	c9                   	leave
    301f:	c3                   	ret

0000000000003020 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEptEv>:
      operator->() const noexcept
    3020:	55                   	push   %rbp
    3021:	48 89 e5             	mov    %rsp,%rbp
    3024:	48 83 ec 10          	sub    $0x10,%rsp
    3028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return get();
    302c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3030:	48 89 c7             	mov    %rax,%rdi
    3033:	e8 d0 04 00 00       	call   3508 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>
      }
    3038:	c9                   	leave
    3039:	c3                   	ret

000000000000303a <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    303a:	55                   	push   %rbp
    303b:	48 89 e5             	mov    %rsp,%rbp
    303e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3042:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    3046:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    304a:	0f b6 10             	movzbl (%rax),%edx
    304d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    3051:	0f b6 00             	movzbl (%rax),%eax
    3054:	38 c2                	cmp    %al,%dl
    3056:	0f 94 c0             	sete   %al
    3059:	5d                   	pop    %rbp
    305a:	c3                   	ret
    305b:	90                   	nop

000000000000305c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    305c:	55                   	push   %rbp
    305d:	48 89 e5             	mov    %rsp,%rbp
    3060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3064:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    306c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3070:	48 89 10             	mov    %rdx,(%rax)
    3073:	90                   	nop
    3074:	5d                   	pop    %rbp
    3075:	c3                   	ret

0000000000003076 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    3076:	55                   	push   %rbp
    3077:	48 89 e5             	mov    %rsp,%rbp
    307a:	48 83 ec 10          	sub    $0x10,%rsp
    307e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3086:	48 8b 00             	mov    (%rax),%rax
    3089:	48 85 c0             	test   %rax,%rax
    308c:	74 0f                	je     309d <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    308e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3092:	48 8b 00             	mov    (%rax),%rax
    3095:	48 89 c7             	mov    %rax,%rdi
    3098:	e8 83 f2 ff ff       	call   2320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    309d:	90                   	nop
    309e:	c9                   	leave
    309f:	c3                   	ret

00000000000030a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    30a0:	55                   	push   %rbp
    30a1:	48 89 e5             	mov    %rsp,%rbp
    30a4:	48 83 ec 40          	sub    $0x40,%rsp
    30a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    30ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    30b0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    30b4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    30b8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    30bc:	48 89 d6             	mov    %rdx,%rsi
    30bf:	48 89 c7             	mov    %rax,%rdi
    30c2:	e8 5b 04 00 00       	call   3522 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    30c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    30cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    30cf:	48 83 f8 0f          	cmp    $0xf,%rax
    30d3:	76 3f                	jbe    3114 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    30d5:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    30d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30dd:	ba 00 00 00 00       	mov    $0x0,%edx
    30e2:	48 89 ce             	mov    %rcx,%rsi
    30e5:	48 89 c7             	mov    %rax,%rdi
    30e8:	e8 33 f3 ff ff       	call   2420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    30ed:	48 89 c2             	mov    %rax,%rdx
    30f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    30f4:	48 89 d6             	mov    %rdx,%rsi
    30f7:	48 89 c7             	mov    %rax,%rdi
    30fa:	e8 e1 f0 ff ff       	call   21e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    30ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3103:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3107:	48 89 d6             	mov    %rdx,%rsi
    310a:	48 89 c7             	mov    %rax,%rdi
    310d:	e8 2e f3 ff ff       	call   2440 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    3112:	eb 15                	jmp    3129 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    3114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3118:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    311c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3120:	48 89 c7             	mov    %rax,%rdi
    3123:	e8 98 f0 ff ff       	call   21c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    3128:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    3129:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    312d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    3131:	48 89 d6             	mov    %rdx,%rsi
    3134:	48 89 c7             	mov    %rax,%rdi
    3137:	e8 20 ff ff ff       	call   305c <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    313c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3140:	48 89 c7             	mov    %rax,%rdi
    3143:	e8 88 f1 ff ff       	call   22d0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    3148:	48 89 c1             	mov    %rax,%rcx
    314b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    314f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    3153:	48 89 c6             	mov    %rax,%rsi
    3156:	48 89 cf             	mov    %rcx,%rdi
    3159:	e8 82 f1 ff ff       	call   22e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    315e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    3165:	00 

	_M_set_length(__dnew);
    3166:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    316a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    316e:	48 89 d6             	mov    %rdx,%rsi
    3171:	48 89 c7             	mov    %rax,%rdi
    3174:	e8 b7 ef ff ff       	call   2130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    3179:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    317d:	48 89 c7             	mov    %rax,%rdi
    3180:	e8 f1 fe ff ff       	call   3076 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    3185:	c9                   	leave
    3186:	c3                   	ret
    3187:	90                   	nop

0000000000003188 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    3188:	55                   	push   %rbp
    3189:	48 89 e5             	mov    %rsp,%rbp
    318c:	48 83 ec 10          	sub    $0x10,%rsp
    3190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3194:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    3198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    319c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    31a0:	48 89 d6             	mov    %rdx,%rsi
    31a3:	48 89 c7             	mov    %rax,%rdi
    31a6:	e8 a9 03 00 00       	call   3554 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>
    31ab:	90                   	nop
    31ac:	c9                   	leave
    31ad:	c3                   	ret

00000000000031ae <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    31ae:	55                   	push   %rbp
    31af:	48 89 e5             	mov    %rsp,%rbp
    31b2:	48 83 ec 10          	sub    $0x10,%rsp
    31b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    31ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    31be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    31c6:	48 89 d6             	mov    %rdx,%rsi
    31c9:	48 89 c7             	mov    %rax,%rdi
    31cc:	e8 b7 ff ff ff       	call   3188 <_ZNSt15__uniq_ptr_dataIN4neko8SettingsESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    31d1:	90                   	nop
    31d2:	c9                   	leave
    31d3:	c3                   	ret

00000000000031d4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    31d4:	55                   	push   %rbp
    31d5:	48 89 e5             	mov    %rsp,%rbp
    31d8:	48 83 ec 10          	sub    $0x10,%rsp
    31dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    31e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31e4:	48 89 c7             	mov    %rax,%rdi
    31e7:	e8 9f 03 00 00       	call   358b <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    31ec:	c9                   	leave
    31ed:	c3                   	ret

00000000000031ee <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    31ee:	55                   	push   %rbp
    31ef:	48 89 e5             	mov    %rsp,%rbp
    31f2:	48 83 ec 10          	sub    $0x10,%rsp
    31f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    31fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    31fe:	48 89 c7             	mov    %rax,%rdi
    3201:	e8 a0 03 00 00       	call   35a6 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>
    3206:	c9                   	leave
    3207:	c3                   	ret

0000000000003208 <_ZSt4moveIRPN4neko8SettingsEEONSt16remove_referenceIT_E4typeEOS5_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    3208:	55                   	push   %rbp
    3209:	48 89 e5             	mov    %rsp,%rbp
    320c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    3210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3214:	5d                   	pop    %rbp
    3215:	c3                   	ret

0000000000003216 <_ZN4neko8SettingsD1Ev>:
    3216:	55                   	push   %rbp
    3217:	48 89 e5             	mov    %rsp,%rbp
    321a:	48 83 ec 10          	sub    $0x10,%rsp
    321e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3226:	48 89 c7             	mov    %rax,%rdi
    3229:	e8 8a f9 ff ff       	call   2bb8 <_ZN4neko8SettingsUt_D1Ev>
    322e:	90                   	nop
    322f:	c9                   	leave
    3230:	c3                   	ret
    3231:	90                   	nop

0000000000003232 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_>:
      operator()(_Tp* __ptr) const
    3232:	55                   	push   %rbp
    3233:	48 89 e5             	mov    %rsp,%rbp
    3236:	53                   	push   %rbx
    3237:	48 83 ec 18          	sub    $0x18,%rsp
    323b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    323f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    3243:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    3247:	48 85 db             	test   %rbx,%rbx
    324a:	74 15                	je     3261 <_ZNKSt14default_deleteIN4neko8SettingsEEclEPS1_+0x2f>
    324c:	48 89 df             	mov    %rbx,%rdi
    324f:	e8 c2 ff ff ff       	call   3216 <_ZN4neko8SettingsD1Ev>
    3254:	be 58 00 00 00       	mov    $0x58,%esi
    3259:	48 89 df             	mov    %rbx,%rdi
    325c:	e8 ef ef ff ff       	call   2250 <_ZdlPvm@plt>
      }
    3261:	90                   	nop
    3262:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3266:	c9                   	leave
    3267:	c3                   	ret

0000000000003268 <_ZNKSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    3268:	55                   	push   %rbp
    3269:	48 89 e5             	mov    %rsp,%rbp
    326c:	48 83 ec 10          	sub    $0x10,%rsp
    3270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    3274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3278:	48 89 c7             	mov    %rax,%rdi
    327b:	e8 40 03 00 00       	call   35c0 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    3280:	c9                   	leave
    3281:	c3                   	ret

0000000000003282 <_ZSt7forwardIRN4neko8SettingsEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    3282:	55                   	push   %rbp
    3283:	48 89 e5             	mov    %rsp,%rbp
    3286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    328a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    328e:	5d                   	pop    %rbp
    328f:	c3                   	ret

0000000000003290 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    3290:	55                   	push   %rbp
    3291:	48 89 e5             	mov    %rsp,%rbp
    3294:	48 83 ec 10          	sub    $0x10,%rsp
    3298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    329c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    32a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    32a8:	48 89 d6             	mov    %rdx,%rsi
    32ab:	48 89 c7             	mov    %rax,%rdi
    32ae:	e8 2b 03 00 00       	call   35de <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>
    32b3:	90                   	nop
    32b4:	c9                   	leave
    32b5:	c3                   	ret

00000000000032b6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    32b6:	55                   	push   %rbp
    32b7:	48 89 e5             	mov    %rsp,%rbp
    32ba:	48 83 ec 10          	sub    $0x10,%rsp
    32be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    32c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    32ce:	48 89 d6             	mov    %rdx,%rsi
    32d1:	48 89 c7             	mov    %rax,%rdi
    32d4:	e8 b7 ff ff ff       	call   3290 <_ZNSt15__uniq_ptr_dataIN4neko8RendererESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    32d9:	90                   	nop
    32da:	c9                   	leave
    32db:	c3                   	ret

00000000000032dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    32dc:	55                   	push   %rbp
    32dd:	48 89 e5             	mov    %rsp,%rbp
    32e0:	48 83 ec 10          	sub    $0x10,%rsp
    32e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    32e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    32ec:	48 89 c7             	mov    %rax,%rdi
    32ef:	e8 21 03 00 00       	call   3615 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    32f4:	c9                   	leave
    32f5:	c3                   	ret

00000000000032f6 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    32f6:	55                   	push   %rbp
    32f7:	48 89 e5             	mov    %rsp,%rbp
    32fa:	48 83 ec 10          	sub    $0x10,%rsp
    32fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    3302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3306:	48 89 c7             	mov    %rax,%rdi
    3309:	e8 22 03 00 00       	call   3630 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>
    330e:	c9                   	leave
    330f:	c3                   	ret

0000000000003310 <_ZSt4moveIRPN4neko8RendererEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    3310:	55                   	push   %rbp
    3311:	48 89 e5             	mov    %rsp,%rbp
    3314:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    3318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    331c:	5d                   	pop    %rbp
    331d:	c3                   	ret

000000000000331e <_ZN4neko8RendererD1Ev>:
  ~Renderer() = default;
    331e:	55                   	push   %rbp
    331f:	48 89 e5             	mov    %rsp,%rbp
    3322:	48 83 ec 10          	sub    $0x10,%rsp
    3326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    332a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    332e:	48 83 c0 48          	add    $0x48,%rax
    3332:	48 89 c7             	mov    %rax,%rdi
    3335:	e8 d8 0a 00 00       	call   3e12 <_ZN4neko6DeviceD1Ev>
    333a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    333e:	48 83 c0 38          	add    $0x38,%rax
    3342:	48 89 c7             	mov    %rax,%rdi
    3345:	e8 c2 6b 00 00       	call   9f0c <_ZN4neko7SurfaceD1Ev>
    334a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    334e:	48 83 c0 28          	add    $0x28,%rax
    3352:	48 89 c7             	mov    %rax,%rdi
    3355:	e8 a4 6a 00 00       	call   9dfe <_ZN4neko6WindowD1Ev>
    335a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    335e:	48 83 c0 08          	add    $0x8,%rax
    3362:	48 89 c7             	mov    %rax,%rdi
    3365:	e8 8c f4 ff ff       	call   27f6 <_ZN4neko8InstanceD1Ev>
    336a:	90                   	nop
    336b:	c9                   	leave
    336c:	c3                   	ret
    336d:	90                   	nop

000000000000336e <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_>:
      operator()(_Tp* __ptr) const
    336e:	55                   	push   %rbp
    336f:	48 89 e5             	mov    %rsp,%rbp
    3372:	53                   	push   %rbx
    3373:	48 83 ec 18          	sub    $0x18,%rsp
    3377:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    337b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    337f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    3383:	48 85 db             	test   %rbx,%rbx
    3386:	74 15                	je     339d <_ZNKSt14default_deleteIN4neko8RendererEEclEPS1_+0x2f>
    3388:	48 89 df             	mov    %rbx,%rdi
    338b:	e8 8e ff ff ff       	call   331e <_ZN4neko8RendererD1Ev>
    3390:	be 68 00 00 00       	mov    $0x68,%esi
    3395:	48 89 df             	mov    %rbx,%rdi
    3398:	e8 b3 ee ff ff       	call   2250 <_ZdlPvm@plt>
      }
    339d:	90                   	nop
    339e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    33a2:	c9                   	leave
    33a3:	c3                   	ret

00000000000033a4 <_ZNKSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    33a4:	55                   	push   %rbp
    33a5:	48 89 e5             	mov    %rsp,%rbp
    33a8:	48 83 ec 10          	sub    $0x10,%rsp
    33ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    33b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33b4:	48 89 c7             	mov    %rax,%rdi
    33b7:	e8 8e 02 00 00       	call   364a <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    33bc:	c9                   	leave
    33bd:	c3                   	ret

00000000000033be <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>:
      using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;
    33be:	55                   	push   %rbp
    33bf:	48 89 e5             	mov    %rsp,%rbp
    33c2:	48 83 ec 10          	sub    $0x10,%rsp
    33c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    33ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    33d6:	48 89 d6             	mov    %rdx,%rsi
    33d9:	48 89 c7             	mov    %rax,%rdi
    33dc:	e8 87 02 00 00       	call   3668 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>
    33e1:	90                   	nop
    33e2:	c9                   	leave
    33e3:	c3                   	ret

00000000000033e4 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EEC1IS3_vEEPS1_>:
	unique_ptr(pointer __p) noexcept
    33e4:	55                   	push   %rbp
    33e5:	48 89 e5             	mov    %rsp,%rbp
    33e8:	48 83 ec 10          	sub    $0x10,%rsp
    33ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    33f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__p)
    33f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    33f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    33fc:	48 89 d6             	mov    %rdx,%rsi
    33ff:	48 89 c7             	mov    %rax,%rdi
    3402:	e8 b7 ff ff ff       	call   33be <_ZNSt15__uniq_ptr_dataIN4neko6EngineESt14default_deleteIS1_ELb1ELb1EECI1St15__uniq_ptr_implIS1_S3_EEPS1_>
        { }
    3407:	90                   	nop
    3408:	c9                   	leave
    3409:	c3                   	ret

000000000000340a <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer&   _M_ptr() noexcept { return std::get<0>(_M_t); }
    340a:	55                   	push   %rbp
    340b:	48 89 e5             	mov    %rsp,%rbp
    340e:	48 83 ec 10          	sub    $0x10,%rsp
    3412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    341a:	48 89 c7             	mov    %rax,%rdi
    341d:	e8 7d 02 00 00       	call   369f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    3422:	c9                   	leave
    3423:	c3                   	ret

0000000000003424 <_ZNSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE11get_deleterEv>:
      get_deleter() noexcept
    3424:	55                   	push   %rbp
    3425:	48 89 e5             	mov    %rsp,%rbp
    3428:	48 83 ec 10          	sub    $0x10,%rsp
    342c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_deleter(); }
    3430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3434:	48 89 c7             	mov    %rax,%rdi
    3437:	e8 7e 02 00 00       	call   36ba <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>
    343c:	c9                   	leave
    343d:	c3                   	ret

000000000000343e <_ZSt4moveIRPN4neko6EngineEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    343e:	55                   	push   %rbp
    343f:	48 89 e5             	mov    %rsp,%rbp
    3442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    3446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    344a:	5d                   	pop    %rbp
    344b:	c3                   	ret

000000000000344c <_ZN4neko6EngineD1Ev>:
  ~Engine() = default;
    344c:	55                   	push   %rbp
    344d:	48 89 e5             	mov    %rsp,%rbp
    3450:	48 83 ec 10          	sub    $0x10,%rsp
    3454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    345c:	48 83 c0 08          	add    $0x8,%rax
    3460:	48 89 c7             	mov    %rax,%rdi
    3463:	e8 70 f9 ff ff       	call   2dd8 <_ZNSt10unique_ptrIN4neko8RendererESt14default_deleteIS1_EED1Ev>
    3468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    346c:	48 89 c7             	mov    %rax,%rdi
    346f:	e8 3e f8 ff ff       	call   2cb2 <_ZNSt10unique_ptrIN4neko8SettingsESt14default_deleteIS1_EED1Ev>
    3474:	90                   	nop
    3475:	c9                   	leave
    3476:	c3                   	ret
    3477:	90                   	nop

0000000000003478 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_>:
      operator()(_Tp* __ptr) const
    3478:	55                   	push   %rbp
    3479:	48 89 e5             	mov    %rsp,%rbp
    347c:	53                   	push   %rbx
    347d:	48 83 ec 18          	sub    $0x18,%rsp
    3481:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3485:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	delete __ptr;
    3489:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    348d:	48 85 db             	test   %rbx,%rbx
    3490:	74 15                	je     34a7 <_ZNKSt14default_deleteIN4neko6EngineEEclEPS1_+0x2f>
    3492:	48 89 df             	mov    %rbx,%rdi
    3495:	e8 b2 ff ff ff       	call   344c <_ZN4neko6EngineD1Ev>
    349a:	be 10 00 00 00       	mov    $0x10,%esi
    349f:	48 89 df             	mov    %rbx,%rdi
    34a2:	e8 a9 ed ff ff       	call   2250 <_ZdlPvm@plt>
      }
    34a7:	90                   	nop
    34a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    34ac:	c9                   	leave
    34ad:	c3                   	ret

00000000000034ae <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
    34ae:	55                   	push   %rbp
    34af:	48 89 e5             	mov    %rsp,%rbp
    34b2:	48 83 ec 20          	sub    $0x20,%rsp
    34b6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    34ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    34be:	48 89 c7             	mov    %rax,%rdi
    34c1:	e8 a4 f4 ff ff       	call   296a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
    34c6:	48 89 c1             	mov    %rax,%rcx
    34c9:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    34d0:	9b c4 20 
    34d3:	48 89 c8             	mov    %rcx,%rax
    34d6:	48 f7 ea             	imul   %rdx
    34d9:	48 89 d0             	mov    %rdx,%rax
    34dc:	48 c1 f8 07          	sar    $0x7,%rax
    34e0:	48 c1 f9 3f          	sar    $0x3f,%rcx
    34e4:	48 89 ca             	mov    %rcx,%rdx
    34e7:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
    34ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    34ee:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    34f2:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    34f6:	48 89 d6             	mov    %rdx,%rsi
    34f9:	48 89 c7             	mov    %rax,%rdi
    34fc:	e8 d3 01 00 00       	call   36d4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
    3501:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
    3505:	c9                   	leave
    3506:	c3                   	ret
    3507:	90                   	nop

0000000000003508 <_ZNKSt10unique_ptrIN4neko6EngineESt14default_deleteIS1_EE3getEv>:
      get() const noexcept
    3508:	55                   	push   %rbp
    3509:	48 89 e5             	mov    %rsp,%rbp
    350c:	48 83 ec 10          	sub    $0x10,%rsp
    3510:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t._M_ptr(); }
    3514:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3518:	48 89 c7             	mov    %rax,%rdi
    351b:	e8 d2 01 00 00       	call   36f2 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    3520:	c9                   	leave
    3521:	c3                   	ret

0000000000003522 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    3522:	55                   	push   %rbp
    3523:	48 89 e5             	mov    %rsp,%rbp
    3526:	48 83 ec 10          	sub    $0x10,%rsp
    352a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    352e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    3532:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    3536:	48 89 c7             	mov    %rax,%rdi
    3539:	e8 d1 01 00 00       	call   370f <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    353e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3542:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    3546:	48 89 d6             	mov    %rdx,%rsi
    3549:	48 89 c7             	mov    %rax,%rdi
    354c:	e8 c9 01 00 00       	call   371a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    3551:	c9                   	leave
    3552:	c3                   	ret
    3553:	90                   	nop

0000000000003554 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    3554:	55                   	push   %rbp
    3555:	48 89 e5             	mov    %rsp,%rbp
    3558:	53                   	push   %rbx
    3559:	48 83 ec 18          	sub    $0x18,%rsp
    355d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3561:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3565:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3569:	48 89 c7             	mov    %rax,%rdi
    356c:	e8 bf 01 00 00       	call   3730 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    3571:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    3575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3579:	48 89 c7             	mov    %rax,%rdi
    357c:	e8 53 fc ff ff       	call   31d4 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>
    3581:	48 89 18             	mov    %rbx,(%rax)
    3584:	90                   	nop
    3585:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3589:	c9                   	leave
    358a:	c3                   	ret

000000000000358b <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    __get_helper(const tuple<_Types...>&) = delete;

  /// Return a reference to the ith element of a tuple.
  template<size_t __i, typename... _Elements>
    constexpr __tuple_element_t<__i, tuple<_Elements...>>&
    get(tuple<_Elements...>& __t) noexcept
    358b:	55                   	push   %rbp
    358c:	48 89 e5             	mov    %rsp,%rbp
    358f:	48 83 ec 10          	sub    $0x10,%rsp
    3593:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    3597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    359b:	48 89 c7             	mov    %rax,%rdi
    359e:	e8 a8 01 00 00       	call   374b <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    35a3:	c9                   	leave
    35a4:	c3                   	ret
    35a5:	90                   	nop

00000000000035a6 <_ZNSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    35a6:	55                   	push   %rbp
    35a7:	48 89 e5             	mov    %rsp,%rbp
    35aa:	48 83 ec 10          	sub    $0x10,%rsp
    35ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    35b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35b6:	48 89 c7             	mov    %rax,%rdi
    35b9:	e8 a7 01 00 00       	call   3765 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    35be:	c9                   	leave
    35bf:	c3                   	ret

00000000000035c0 <_ZNKSt15__uniq_ptr_implIN4neko8SettingsESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    35c0:	55                   	push   %rbp
    35c1:	48 89 e5             	mov    %rsp,%rbp
    35c4:	48 83 ec 10          	sub    $0x10,%rsp
    35c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    35cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    35d0:	48 89 c7             	mov    %rax,%rdi
    35d3:	e8 a7 01 00 00       	call   377f <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    35d8:	48 8b 00             	mov    (%rax),%rax
    35db:	c9                   	leave
    35dc:	c3                   	ret
    35dd:	90                   	nop

00000000000035de <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    35de:	55                   	push   %rbp
    35df:	48 89 e5             	mov    %rsp,%rbp
    35e2:	53                   	push   %rbx
    35e3:	48 83 ec 18          	sub    $0x18,%rsp
    35e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    35eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    35ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    35f3:	48 89 c7             	mov    %rax,%rdi
    35f6:	e8 9f 01 00 00       	call   379a <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    35fb:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    35ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3603:	48 89 c7             	mov    %rax,%rdi
    3606:	e8 d1 fc ff ff       	call   32dc <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>
    360b:	48 89 18             	mov    %rbx,(%rax)
    360e:	90                   	nop
    360f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3613:	c9                   	leave
    3614:	c3                   	ret

0000000000003615 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    3615:	55                   	push   %rbp
    3616:	48 89 e5             	mov    %rsp,%rbp
    3619:	48 83 ec 10          	sub    $0x10,%rsp
    361d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    3621:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3625:	48 89 c7             	mov    %rax,%rdi
    3628:	e8 88 01 00 00       	call   37b5 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    362d:	c9                   	leave
    362e:	c3                   	ret
    362f:	90                   	nop

0000000000003630 <_ZNSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    3630:	55                   	push   %rbp
    3631:	48 89 e5             	mov    %rsp,%rbp
    3634:	48 83 ec 10          	sub    $0x10,%rsp
    3638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    363c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3640:	48 89 c7             	mov    %rax,%rdi
    3643:	e8 87 01 00 00       	call   37cf <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    3648:	c9                   	leave
    3649:	c3                   	ret

000000000000364a <_ZNKSt15__uniq_ptr_implIN4neko8RendererESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    364a:	55                   	push   %rbp
    364b:	48 89 e5             	mov    %rsp,%rbp
    364e:	48 83 ec 10          	sub    $0x10,%rsp
    3652:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3656:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    365a:	48 89 c7             	mov    %rax,%rdi
    365d:	e8 87 01 00 00       	call   37e9 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    3662:	48 8b 00             	mov    (%rax),%rax
    3665:	c9                   	leave
    3666:	c3                   	ret
    3667:	90                   	nop

0000000000003668 <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EEC1EPS1_>:
      __uniq_ptr_impl(pointer __p) : _M_t() { _M_ptr() = __p; }
    3668:	55                   	push   %rbp
    3669:	48 89 e5             	mov    %rsp,%rbp
    366c:	53                   	push   %rbx
    366d:	48 83 ec 18          	sub    $0x18,%rsp
    3671:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    3675:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    3679:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    367d:	48 89 c7             	mov    %rax,%rdi
    3680:	e8 7f 01 00 00       	call   3804 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>
    3685:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx
    3689:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    368d:	48 89 c7             	mov    %rax,%rdi
    3690:	e8 75 fd ff ff       	call   340a <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>
    3695:	48 89 18             	mov    %rbx,(%rax)
    3698:	90                   	nop
    3699:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    369d:	c9                   	leave
    369e:	c3                   	ret

000000000000369f <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    369f:	55                   	push   %rbp
    36a0:	48 89 e5             	mov    %rsp,%rbp
    36a3:	48 83 ec 10          	sub    $0x10,%rsp
    36a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    36ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36af:	48 89 c7             	mov    %rax,%rdi
    36b2:	e8 68 01 00 00       	call   381f <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>
    36b7:	c9                   	leave
    36b8:	c3                   	ret
    36b9:	90                   	nop

00000000000036ba <_ZNSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE10_M_deleterEv>:
      _Dp&       _M_deleter() noexcept { return std::get<1>(_M_t); }
    36ba:	55                   	push   %rbp
    36bb:	48 89 e5             	mov    %rsp,%rbp
    36be:	48 83 ec 10          	sub    $0x10,%rsp
    36c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36ca:	48 89 c7             	mov    %rax,%rdi
    36cd:	e8 67 01 00 00       	call   3839 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>
    36d2:	c9                   	leave
    36d3:	c3                   	ret

00000000000036d4 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    36d4:	55                   	push   %rbp
    36d5:	48 89 e5             	mov    %rsp,%rbp
    36d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    36e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    36e4:	48 8b 10             	mov    (%rax),%rdx
    36e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    36eb:	48 89 10             	mov    %rdx,(%rax)
    36ee:	90                   	nop
    36ef:	5d                   	pop    %rbp
    36f0:	c3                   	ret
    36f1:	90                   	nop

00000000000036f2 <_ZNKSt15__uniq_ptr_implIN4neko6EngineESt14default_deleteIS1_EE6_M_ptrEv>:
      pointer    _M_ptr() const noexcept { return std::get<0>(_M_t); }
    36f2:	55                   	push   %rbp
    36f3:	48 89 e5             	mov    %rsp,%rbp
    36f6:	48 83 ec 10          	sub    $0x10,%rsp
    36fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    36fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3702:	48 89 c7             	mov    %rax,%rdi
    3705:	e8 49 01 00 00       	call   3853 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>
    370a:	48 8b 00             	mov    (%rax),%rax
    370d:	c9                   	leave
    370e:	c3                   	ret

000000000000370f <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    370f:	55                   	push   %rbp
    3710:	48 89 e5             	mov    %rsp,%rbp
    3713:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    3717:	90                   	nop
    3718:	5d                   	pop    %rbp
    3719:	c3                   	ret

000000000000371a <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    371a:	55                   	push   %rbp
    371b:	48 89 e5             	mov    %rsp,%rbp
    371e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3722:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    3726:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    372a:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    372e:	5d                   	pop    %rbp
    372f:	c3                   	ret

0000000000003730 <_ZNSt5tupleIJPN4neko8SettingsESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    3730:	55                   	push   %rbp
    3731:	48 89 e5             	mov    %rsp,%rbp
    3734:	48 83 ec 10          	sub    $0x10,%rsp
    3738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    373c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3740:	48 89 c7             	mov    %rax,%rdi
    3743:	e8 26 01 00 00       	call   386e <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>
    3748:	90                   	nop
    3749:	c9                   	leave
    374a:	c3                   	ret

000000000000374b <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    374b:	55                   	push   %rbp
    374c:	48 89 e5             	mov    %rsp,%rbp
    374f:	48 83 ec 10          	sub    $0x10,%rsp
    3753:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    3757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    375b:	48 89 c7             	mov    %rax,%rdi
    375e:	e8 32 01 00 00       	call   3895 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>
    3763:	c9                   	leave
    3764:	c3                   	ret

0000000000003765 <_ZSt3getILm1EJPN4neko8SettingsESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    3765:	55                   	push   %rbp
    3766:	48 89 e5             	mov    %rsp,%rbp
    3769:	48 83 ec 10          	sub    $0x10,%rsp
    376d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    3771:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3775:	48 89 c7             	mov    %rax,%rdi
    3778:	e8 32 01 00 00       	call   38af <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    377d:	c9                   	leave
    377e:	c3                   	ret

000000000000377f <_ZSt3getILm0EJPN4neko8SettingsESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:

  /// Return a const reference to the ith element of a const tuple.
  template<size_t __i, typename... _Elements>
    constexpr const __tuple_element_t<__i, tuple<_Elements...>>&
    get(const tuple<_Elements...>& __t) noexcept
    377f:	55                   	push   %rbp
    3780:	48 89 e5             	mov    %rsp,%rbp
    3783:	48 83 ec 10          	sub    $0x10,%rsp
    3787:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    378b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    378f:	48 89 c7             	mov    %rax,%rdi
    3792:	e8 32 01 00 00       	call   38c9 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    3797:	c9                   	leave
    3798:	c3                   	ret
    3799:	90                   	nop

000000000000379a <_ZNSt5tupleIJPN4neko8RendererESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    379a:	55                   	push   %rbp
    379b:	48 89 e5             	mov    %rsp,%rbp
    379e:	48 83 ec 10          	sub    $0x10,%rsp
    37a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    37a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37aa:	48 89 c7             	mov    %rax,%rdi
    37ad:	e8 32 01 00 00       	call   38e4 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>
    37b2:	90                   	nop
    37b3:	c9                   	leave
    37b4:	c3                   	ret

00000000000037b5 <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    37b5:	55                   	push   %rbp
    37b6:	48 89 e5             	mov    %rsp,%rbp
    37b9:	48 83 ec 10          	sub    $0x10,%rsp
    37bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    37c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37c5:	48 89 c7             	mov    %rax,%rdi
    37c8:	e8 3e 01 00 00       	call   390b <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>
    37cd:	c9                   	leave
    37ce:	c3                   	ret

00000000000037cf <_ZSt3getILm1EJPN4neko8RendererESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    37cf:	55                   	push   %rbp
    37d0:	48 89 e5             	mov    %rsp,%rbp
    37d3:	48 83 ec 10          	sub    $0x10,%rsp
    37d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    37db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37df:	48 89 c7             	mov    %rax,%rdi
    37e2:	e8 3e 01 00 00       	call   3925 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    37e7:	c9                   	leave
    37e8:	c3                   	ret

00000000000037e9 <_ZSt3getILm0EJPN4neko8RendererESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    37e9:	55                   	push   %rbp
    37ea:	48 89 e5             	mov    %rsp,%rbp
    37ed:	48 83 ec 10          	sub    $0x10,%rsp
    37f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    37f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    37f9:	48 89 c7             	mov    %rax,%rdi
    37fc:	e8 3e 01 00 00       	call   393f <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    3801:	c9                   	leave
    3802:	c3                   	ret
    3803:	90                   	nop

0000000000003804 <_ZNSt5tupleIJPN4neko6EngineESt14default_deleteIS1_EEEC1ILb1ELb1EEEv>:
	tuple()
    3804:	55                   	push   %rbp
    3805:	48 89 e5             	mov    %rsp,%rbp
    3808:	48 83 ec 10          	sub    $0x10,%rsp
    380c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Inherited() { }
    3810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3814:	48 89 c7             	mov    %rax,%rdi
    3817:	e8 3e 01 00 00       	call   395a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>
    381c:	90                   	nop
    381d:	c9                   	leave
    381e:	c3                   	ret

000000000000381f <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERT0_RSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    381f:	55                   	push   %rbp
    3820:	48 89 e5             	mov    %rsp,%rbp
    3823:	48 83 ec 10          	sub    $0x10,%rsp
    3827:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    382b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    382f:	48 89 c7             	mov    %rax,%rdi
    3832:	e8 4a 01 00 00       	call   3981 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>
    3837:	c9                   	leave
    3838:	c3                   	ret

0000000000003839 <_ZSt3getILm1EJPN4neko6EngineESt14default_deleteIS1_EEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS9_>:
    get(tuple<_Elements...>& __t) noexcept
    3839:	55                   	push   %rbp
    383a:	48 89 e5             	mov    %rsp,%rbp
    383d:	48 83 ec 10          	sub    $0x10,%rsp
    3841:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    3845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3849:	48 89 c7             	mov    %rax,%rdi
    384c:	e8 4a 01 00 00       	call   399b <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>
    3851:	c9                   	leave
    3852:	c3                   	ret

0000000000003853 <_ZSt3getILm0EJPN4neko6EngineESt14default_deleteIS1_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS9_>:
    get(const tuple<_Elements...>& __t) noexcept
    3853:	55                   	push   %rbp
    3854:	48 89 e5             	mov    %rsp,%rbp
    3857:	48 83 ec 10          	sub    $0x10,%rsp
    385b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    385f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3863:	48 89 c7             	mov    %rax,%rdi
    3866:	e8 4a 01 00 00       	call   39b5 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>
    386b:	c9                   	leave
    386c:	c3                   	ret
    386d:	90                   	nop

000000000000386e <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    386e:	55                   	push   %rbp
    386f:	48 89 e5             	mov    %rsp,%rbp
    3872:	48 83 ec 10          	sub    $0x10,%rsp
    3876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    387a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    387e:	48 89 c7             	mov    %rax,%rdi
    3881:	e8 4a 01 00 00       	call   39d0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>
    3886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    388a:	48 89 c7             	mov    %rax,%rdi
    388d:	e8 5a 01 00 00       	call   39ec <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>
    3892:	90                   	nop
    3893:	c9                   	leave
    3894:	c3                   	ret

0000000000003895 <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3895:	55                   	push   %rbp
    3896:	48 89 e5             	mov    %rsp,%rbp
    3899:	48 83 ec 10          	sub    $0x10,%rsp
    389d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    38a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38a5:	48 89 c7             	mov    %rax,%rdi
    38a8:	e8 55 01 00 00       	call   3a02 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>
    38ad:	c9                   	leave
    38ae:	c3                   	ret

00000000000038af <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8SettingsEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    38af:	55                   	push   %rbp
    38b0:	48 89 e5             	mov    %rsp,%rbp
    38b3:	48 83 ec 10          	sub    $0x10,%rsp
    38b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    38bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38bf:	48 89 c7             	mov    %rax,%rdi
    38c2:	e8 49 01 00 00       	call   3a10 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>
    38c7:	c9                   	leave
    38c8:	c3                   	ret

00000000000038c9 <_ZSt12__get_helperILm0EPN4neko8SettingsEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    38c9:	55                   	push   %rbp
    38ca:	48 89 e5             	mov    %rsp,%rbp
    38cd:	48 83 ec 10          	sub    $0x10,%rsp
    38d1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    38d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38d9:	48 89 c7             	mov    %rax,%rdi
    38dc:	e8 49 01 00 00       	call   3a2a <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>
    38e1:	c9                   	leave
    38e2:	c3                   	ret
    38e3:	90                   	nop

00000000000038e4 <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    38e4:	55                   	push   %rbp
    38e5:	48 89 e5             	mov    %rsp,%rbp
    38e8:	48 83 ec 10          	sub    $0x10,%rsp
    38ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    38f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    38f4:	48 89 c7             	mov    %rax,%rdi
    38f7:	e8 48 01 00 00       	call   3a44 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>
    38fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3900:	48 89 c7             	mov    %rax,%rdi
    3903:	e8 58 01 00 00       	call   3a60 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>
    3908:	90                   	nop
    3909:	c9                   	leave
    390a:	c3                   	ret

000000000000390b <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    390b:	55                   	push   %rbp
    390c:	48 89 e5             	mov    %rsp,%rbp
    390f:	48 83 ec 10          	sub    $0x10,%rsp
    3913:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3917:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    391b:	48 89 c7             	mov    %rax,%rdi
    391e:	e8 53 01 00 00       	call   3a76 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>
    3923:	c9                   	leave
    3924:	c3                   	ret

0000000000003925 <_ZSt12__get_helperILm1ESt14default_deleteIN4neko8RendererEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    3925:	55                   	push   %rbp
    3926:	48 89 e5             	mov    %rsp,%rbp
    3929:	48 83 ec 10          	sub    $0x10,%rsp
    392d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    3931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3935:	48 89 c7             	mov    %rax,%rdi
    3938:	e8 47 01 00 00       	call   3a84 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>
    393d:	c9                   	leave
    393e:	c3                   	ret

000000000000393f <_ZSt12__get_helperILm0EPN4neko8RendererEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    393f:	55                   	push   %rbp
    3940:	48 89 e5             	mov    %rsp,%rbp
    3943:	48 83 ec 10          	sub    $0x10,%rsp
    3947:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    394b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    394f:	48 89 c7             	mov    %rax,%rdi
    3952:	e8 47 01 00 00       	call   3a9e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>
    3957:	c9                   	leave
    3958:	c3                   	ret
    3959:	90                   	nop

000000000000395a <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEEC1Ev>:
      constexpr _Tuple_impl()
    395a:	55                   	push   %rbp
    395b:	48 89 e5             	mov    %rsp,%rbp
    395e:	48 83 ec 10          	sub    $0x10,%rsp
    3962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Inherited(), _Base() { }
    3966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    396a:	48 89 c7             	mov    %rax,%rdi
    396d:	e8 46 01 00 00       	call   3ab8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>
    3972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3976:	48 89 c7             	mov    %rax,%rdi
    3979:	e8 56 01 00 00       	call   3ad4 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>
    397e:	90                   	nop
    397f:	c9                   	leave
    3980:	c3                   	ret

0000000000003981 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERS5_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3981:	55                   	push   %rbp
    3982:	48 89 e5             	mov    %rsp,%rbp
    3985:	48 83 ec 10          	sub    $0x10,%rsp
    3989:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    398d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3991:	48 89 c7             	mov    %rax,%rdi
    3994:	e8 51 01 00 00       	call   3aea <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>
    3999:	c9                   	leave
    399a:	c3                   	ret

000000000000399b <_ZSt12__get_helperILm1ESt14default_deleteIN4neko6EngineEEJEERT0_RSt11_Tuple_implIXT_EJS4_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    399b:	55                   	push   %rbp
    399c:	48 89 e5             	mov    %rsp,%rbp
    399f:	48 83 ec 10          	sub    $0x10,%rsp
    39a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    39a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39ab:	48 89 c7             	mov    %rax,%rdi
    39ae:	e8 45 01 00 00       	call   3af8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>
    39b3:	c9                   	leave
    39b4:	c3                   	ret

00000000000039b5 <_ZSt12__get_helperILm0EPN4neko6EngineEJSt14default_deleteIS1_EEERKT0_RKSt11_Tuple_implIXT_EJS5_DpT1_EE>:
    __get_helper(const _Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    39b5:	55                   	push   %rbp
    39b6:	48 89 e5             	mov    %rsp,%rbp
    39b9:	48 83 ec 10          	sub    $0x10,%rsp
    39bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    39c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39c5:	48 89 c7             	mov    %rax,%rdi
    39c8:	e8 45 01 00 00       	call   3b12 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>
    39cd:	c9                   	leave
    39ce:	c3                   	ret
    39cf:	90                   	nop

00000000000039d0 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEEC1Ev>:
      _Tuple_impl()
    39d0:	55                   	push   %rbp
    39d1:	48 89 e5             	mov    %rsp,%rbp
    39d4:	48 83 ec 10          	sub    $0x10,%rsp
    39d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    39dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39e0:	48 89 c7             	mov    %rax,%rdi
    39e3:	e8 44 01 00 00       	call   3b2c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>
    39e8:	90                   	nop
    39e9:	c9                   	leave
    39ea:	c3                   	ret
    39eb:	90                   	nop

00000000000039ec <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EEC1Ev>:
      constexpr _Head_base()
    39ec:	55                   	push   %rbp
    39ed:	48 89 e5             	mov    %rsp,%rbp
    39f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    39f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39f8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    39ff:	90                   	nop
    3a00:	5d                   	pop    %rbp
    3a01:	c3                   	ret

0000000000003a02 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3a02:	55                   	push   %rbp
    3a03:	48 89 e5             	mov    %rsp,%rbp
    3a06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a0e:	5d                   	pop    %rbp
    3a0f:	c3                   	ret

0000000000003a10 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8SettingsEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3a10:	55                   	push   %rbp
    3a11:	48 89 e5             	mov    %rsp,%rbp
    3a14:	48 83 ec 10          	sub    $0x10,%rsp
    3a18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a20:	48 89 c7             	mov    %rax,%rdi
    3a23:	e8 0f 01 00 00       	call   3b37 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>
    3a28:	c9                   	leave
    3a29:	c3                   	ret

0000000000003a2a <_ZNSt11_Tuple_implILm0EJPN4neko8SettingsESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3a2a:	55                   	push   %rbp
    3a2b:	48 89 e5             	mov    %rsp,%rbp
    3a2e:	48 83 ec 10          	sub    $0x10,%rsp
    3a32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a3a:	48 89 c7             	mov    %rax,%rdi
    3a3d:	e8 03 01 00 00       	call   3b45 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>
    3a42:	c9                   	leave
    3a43:	c3                   	ret

0000000000003a44 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEEC1Ev>:
      _Tuple_impl()
    3a44:	55                   	push   %rbp
    3a45:	48 89 e5             	mov    %rsp,%rbp
    3a48:	48 83 ec 10          	sub    $0x10,%rsp
    3a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    3a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a54:	48 89 c7             	mov    %rax,%rdi
    3a57:	e8 f8 00 00 00       	call   3b54 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>
    3a5c:	90                   	nop
    3a5d:	c9                   	leave
    3a5e:	c3                   	ret
    3a5f:	90                   	nop

0000000000003a60 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EEC1Ev>:
      constexpr _Head_base()
    3a60:	55                   	push   %rbp
    3a61:	48 89 e5             	mov    %rsp,%rbp
    3a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    3a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a6c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3a73:	90                   	nop
    3a74:	5d                   	pop    %rbp
    3a75:	c3                   	ret

0000000000003a76 <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3a76:	55                   	push   %rbp
    3a77:	48 89 e5             	mov    %rsp,%rbp
    3a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a82:	5d                   	pop    %rbp
    3a83:	c3                   	ret

0000000000003a84 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko8RendererEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3a84:	55                   	push   %rbp
    3a85:	48 89 e5             	mov    %rsp,%rbp
    3a88:	48 83 ec 10          	sub    $0x10,%rsp
    3a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a94:	48 89 c7             	mov    %rax,%rdi
    3a97:	e8 c3 00 00 00       	call   3b5f <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>
    3a9c:	c9                   	leave
    3a9d:	c3                   	ret

0000000000003a9e <_ZNSt11_Tuple_implILm0EJPN4neko8RendererESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3a9e:	55                   	push   %rbp
    3a9f:	48 89 e5             	mov    %rsp,%rbp
    3aa2:	48 83 ec 10          	sub    $0x10,%rsp
    3aa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aae:	48 89 c7             	mov    %rax,%rdi
    3ab1:	e8 b7 00 00 00       	call   3b6d <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>
    3ab6:	c9                   	leave
    3ab7:	c3                   	ret

0000000000003ab8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEEC1Ev>:
      _Tuple_impl()
    3ab8:	55                   	push   %rbp
    3ab9:	48 89 e5             	mov    %rsp,%rbp
    3abc:	48 83 ec 10          	sub    $0x10,%rsp
    3ac0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _Base() { }
    3ac4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ac8:	48 89 c7             	mov    %rax,%rdi
    3acb:	e8 ac 00 00 00       	call   3b7c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>
    3ad0:	90                   	nop
    3ad1:	c9                   	leave
    3ad2:	c3                   	ret
    3ad3:	90                   	nop

0000000000003ad4 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EEC1Ev>:
      constexpr _Head_base()
    3ad4:	55                   	push   %rbp
    3ad5:	48 89 e5             	mov    %rsp,%rbp
    3ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    3adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ae0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3ae7:	90                   	nop
    3ae8:	5d                   	pop    %rbp
    3ae9:	c3                   	ret

0000000000003aea <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERS3_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3aea:	55                   	push   %rbp
    3aeb:	48 89 e5             	mov    %rsp,%rbp
    3aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3af6:	5d                   	pop    %rbp
    3af7:	c3                   	ret

0000000000003af8 <_ZNSt11_Tuple_implILm1EJSt14default_deleteIN4neko6EngineEEEE7_M_headERS4_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3af8:	55                   	push   %rbp
    3af9:	48 89 e5             	mov    %rsp,%rbp
    3afc:	48 83 ec 10          	sub    $0x10,%rsp
    3b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b08:	48 89 c7             	mov    %rax,%rdi
    3b0b:	e8 77 00 00 00       	call   3b87 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>
    3b10:	c9                   	leave
    3b11:	c3                   	ret

0000000000003b12 <_ZNSt11_Tuple_implILm0EJPN4neko6EngineESt14default_deleteIS1_EEE7_M_headERKS5_>:
      _M_head(const _Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    3b12:	55                   	push   %rbp
    3b13:	48 89 e5             	mov    %rsp,%rbp
    3b16:	48 83 ec 10          	sub    $0x10,%rsp
    3b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b22:	48 89 c7             	mov    %rax,%rdi
    3b25:	e8 6b 00 00 00       	call   3b95 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>
    3b2a:	c9                   	leave
    3b2b:	c3                   	ret

0000000000003b2c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EEC1Ev>:
      constexpr _Head_base()
    3b2c:	55                   	push   %rbp
    3b2d:	48 89 e5             	mov    %rsp,%rbp
    3b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    3b34:	90                   	nop
    3b35:	5d                   	pop    %rbp
    3b36:	c3                   	ret

0000000000003b37 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8SettingsEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3b37:	55                   	push   %rbp
    3b38:	48 89 e5             	mov    %rsp,%rbp
    3b3b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b43:	5d                   	pop    %rbp
    3b44:	c3                   	ret

0000000000003b45 <_ZNSt10_Head_baseILm0EPN4neko8SettingsELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    3b45:	55                   	push   %rbp
    3b46:	48 89 e5             	mov    %rsp,%rbp
    3b49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b51:	5d                   	pop    %rbp
    3b52:	c3                   	ret
    3b53:	90                   	nop

0000000000003b54 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EEC1Ev>:
      constexpr _Head_base()
    3b54:	55                   	push   %rbp
    3b55:	48 89 e5             	mov    %rsp,%rbp
    3b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    3b5c:	90                   	nop
    3b5d:	5d                   	pop    %rbp
    3b5e:	c3                   	ret

0000000000003b5f <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko8RendererEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3b5f:	55                   	push   %rbp
    3b60:	48 89 e5             	mov    %rsp,%rbp
    3b63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b6b:	5d                   	pop    %rbp
    3b6c:	c3                   	ret

0000000000003b6d <_ZNSt10_Head_baseILm0EPN4neko8RendererELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    3b6d:	55                   	push   %rbp
    3b6e:	48 89 e5             	mov    %rsp,%rbp
    3b71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b79:	5d                   	pop    %rbp
    3b7a:	c3                   	ret
    3b7b:	90                   	nop

0000000000003b7c <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EEC1Ev>:
      constexpr _Head_base()
    3b7c:	55                   	push   %rbp
    3b7d:	48 89 e5             	mov    %rsp,%rbp
    3b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      : _M_head_impl() { }
    3b84:	90                   	nop
    3b85:	5d                   	pop    %rbp
    3b86:	c3                   	ret

0000000000003b87 <_ZNSt10_Head_baseILm1ESt14default_deleteIN4neko6EngineEELb1EE7_M_headERS4_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    3b87:	55                   	push   %rbp
    3b88:	48 89 e5             	mov    %rsp,%rbp
    3b8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3b93:	5d                   	pop    %rbp
    3b94:	c3                   	ret

0000000000003b95 <_ZNSt10_Head_baseILm0EPN4neko6EngineELb0EE7_M_headERKS3_>:
      _M_head(const _Head_base& __b) noexcept { return __b._M_head_impl; }
    3b95:	55                   	push   %rbp
    3b96:	48 89 e5             	mov    %rsp,%rbp
    3b99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ba1:	5d                   	pop    %rbp
    3ba2:	c3                   	ret
    3ba3:	90                   	nop

0000000000003ba4 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE>:
#include <map>
#include <optional>

namespace neko {

Device::Device(const Instance &crInstance, const Surface &crSurface) {
    3ba4:	55                   	push   %rbp
    3ba5:	48 89 e5             	mov    %rsp,%rbp
    3ba8:	41 54                	push   %r12
    3baa:	53                   	push   %rbx
    3bab:	48 81 ec c0 01 00 00 	sub    $0x1c0,%rsp
    3bb2:	48 89 bd 48 fe ff ff 	mov    %rdi,-0x1b8(%rbp)
    3bb9:	48 89 b5 40 fe ff ff 	mov    %rsi,-0x1c0(%rbp)
    3bc0:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
  VkPhysicalDevice selectedPhysicalDevice =
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    3bc7:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
    3bce:	48 89 c7             	mov    %rax,%rdi
    3bd1:	e8 9c 0d 00 00       	call   4972 <_ZNK4neko8InstancedeEv>
    3bd6:	48 8b 10             	mov    (%rax),%rdx
    3bd9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3bdd:	48 8b 8d 48 fe ff ff 	mov    -0x1b8(%rbp),%rcx
    3be4:	48 89 ce             	mov    %rcx,%rsi
    3be7:	48 89 c7             	mov    %rax,%rdi
    3bea:	e8 77 0b 00 00       	call   4766 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>
    3bef:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    3bf3:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3bfa:	48 89 d6             	mov    %rdx,%rsi
    3bfd:	48 89 c7             	mov    %rax,%rdi
    3c00:	e8 59 04 00 00       	call   405e <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>
    3c05:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    3c09:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3c0d:	48 89 c7             	mov    %rax,%rdi
    3c10:	e8 6f 0e 00 00       	call   4a84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>

  u32 selectedQueueFamilyIndex =
      selectUniversalQueueFamily(selectedPhysicalDevice, *crSurface);
    3c15:	48 8b 85 38 fe ff ff 	mov    -0x1c8(%rbp),%rax
    3c1c:	48 89 c7             	mov    %rax,%rdi
    3c1f:	e8 60 0d 00 00       	call   4984 <_ZNK4neko7SurfacedeEv>
    3c24:	48 8b 10             	mov    (%rax),%rdx
    3c27:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    3c2b:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3c32:	48 89 ce             	mov    %rcx,%rsi
    3c35:	48 89 c7             	mov    %rax,%rdi
    3c38:	e8 f9 01 00 00       	call   3e36 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
    3c3d:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  u32 selectedQueueIndex = 0;
    3c40:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)

  float queuePriority = 1.0f;
    3c47:	f3 0f 10 05 25 72 00 	movss  0x7225(%rip),%xmm0        # ae74 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x18c>
    3c4e:	00 
    3c4f:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)

  /* Populate the selected queue family's creation info */
  VkDeviceQueueCreateInfo queueInfo{};
    3c54:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3c58:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    3c5f:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    3c66:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    3c6d:	ff 
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    3c6e:	c7 85 50 fe ff ff 02 	movl   $0x2,-0x1b0(%rbp)
    3c75:	00 00 00 
  queueInfo.pNext = nullptr;
    3c78:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    3c7f:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedQueueFamilyIndex;
    3c83:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    3c86:	89 85 64 fe ff ff    	mov    %eax,-0x19c(%rbp)
  queueInfo.queueCount = 1;
    3c8c:	c7 85 68 fe ff ff 01 	movl   $0x1,-0x198(%rbp)
    3c93:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    3c96:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    3c9a:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)

  VkPhysicalDeviceFeatures deviceFeatures{};
    3ca1:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    3ca8:	b8 00 00 00 00       	mov    $0x0,%eax
    3cad:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    3cb2:	48 89 d7             	mov    %rdx,%rdi
    3cb5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    3cb8:	48 89 fa             	mov    %rdi,%rdx
    3cbb:	89 02                	mov    %eax,(%rdx)
    3cbd:	48 83 c2 04          	add    $0x4,%rdx
  //   deviceFeatures.samplerAnisotropy = VK_TRUE;
  //   deviceFeatures.sampleRateShading = VK_TRUE;

  /* Populate the logical device's creation info */
  VkDeviceCreateInfo deviceInfo{};
    3cc1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    3cc5:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    3ccc:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    3cd3:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
    3cda:	0f 29 85 b0 fe ff ff 	movaps %xmm0,-0x150(%rbp)
    3ce1:	66 0f d6 85 c0 fe ff 	movq   %xmm0,-0x140(%rbp)
    3ce8:	ff 
  deviceInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    3ce9:	c7 85 80 fe ff ff 03 	movl   $0x3,-0x180(%rbp)
    3cf0:	00 00 00 
  deviceInfo.queueCreateInfoCount = 1;
    3cf3:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    3cfa:	00 00 00 
  deviceInfo.pQueueCreateInfos = &queueInfo;
    3cfd:	48 8d 85 50 fe ff ff 	lea    -0x1b0(%rbp),%rax
    3d04:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  deviceInfo.pEnabledFeatures = &deviceFeatures;
    3d0b:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    3d12:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)

  /* Create a logical device */
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    3d19:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
    3d20:	48 8d b5 80 fe ff ff 	lea    -0x180(%rbp),%rsi
    3d27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    3d2b:	48 89 d1             	mov    %rdx,%rcx
    3d2e:	ba 00 00 00 00       	mov    $0x0,%edx
    3d33:	48 89 c7             	mov    %rax,%rdi
    3d36:	e8 45 e6 ff ff       	call   2380 <vkCreateDevice@plt>
                     &mLogicalDevice) != VK_SUCCESS) {
    3d3b:	85 c0                	test   %eax,%eax
    3d3d:	0f 95 c0             	setne  %al
  if (vkCreateDevice(selectedPhysicalDevice, &deviceInfo, nullptr,
    3d40:	84 c0                	test   %al,%al
    3d42:	74 3b                	je     3d7f <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x1db>
    throw std::runtime_error("Failed to create logical device.");
    3d44:	bf 10 00 00 00       	mov    $0x10,%edi
    3d49:	e8 92 e3 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    3d4e:	48 89 c3             	mov    %rax,%rbx
    3d51:	48 8d 05 98 6f 00 00 	lea    0x6f98(%rip),%rax        # acf0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    3d58:	48 89 c6             	mov    %rax,%rsi
    3d5b:	48 89 df             	mov    %rbx,%rdi
    3d5e:	e8 2d e3 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    3d63:	48 8b 05 46 02 01 00 	mov    0x10246(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3d6a:	48 89 c2             	mov    %rax,%rdx
    3d6d:	48 8d 05 ec ff 00 00 	lea    0xffec(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3d74:	48 89 c6             	mov    %rax,%rsi
    3d77:	48 89 df             	mov    %rbx,%rdi
    3d7a:	e8 61 e6 ff ff       	call   23e0 <__cxa_throw@plt>
  }

  /* Get handles */
  mPhysicalDevice = selectedPhysicalDevice;
    3d7f:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3d86:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    3d8a:	48 89 50 08          	mov    %rdx,0x8(%rax)

  VkQueue queueHandle;
  vkGetDeviceQueue(mLogicalDevice, selectedQueueFamilyIndex, selectedQueueIndex,
    3d8e:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3d95:	48 8b 00             	mov    (%rax),%rax
    3d98:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    3d9c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    3d9f:	8b 75 e4             	mov    -0x1c(%rbp),%esi
    3da2:	48 89 c7             	mov    %rax,%rdi
    3da5:	e8 a6 e5 ff ff       	call   2350 <vkGetDeviceQueue@plt>
                   &queueHandle);
  mQueue = {selectedQueueFamilyIndex, selectedQueueIndex, queueHandle};
    3daa:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    3dae:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3db5:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    3db8:	89 48 10             	mov    %ecx,0x10(%rax)
    3dbb:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3dc2:	8b 4d e0             	mov    -0x20(%rbp),%ecx
    3dc5:	89 48 14             	mov    %ecx,0x14(%rax)
    3dc8:	48 8b 85 48 fe ff ff 	mov    -0x1b8(%rbp),%rax
    3dcf:	48 89 50 18          	mov    %rdx,0x18(%rax)
}
    3dd3:	eb 30                	jmp    3e05 <_ZN4neko6DeviceC1ERKNS_8InstanceERKNS_7SurfaceE+0x261>
      selectPhysicalDevice(getPhysicalDevices(*crInstance));
    3dd5:	48 89 c3             	mov    %rax,%rbx
    3dd8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3ddc:	48 89 c7             	mov    %rax,%rdi
    3ddf:	e8 a0 0c 00 00       	call   4a84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    3de4:	48 89 d8             	mov    %rbx,%rax
    3de7:	48 89 c7             	mov    %rax,%rdi
    3dea:	e8 11 e6 ff ff       	call   2400 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create logical device.");
    3def:	49 89 c4             	mov    %rax,%r12
    3df2:	48 89 df             	mov    %rbx,%rdi
    3df5:	e8 66 e3 ff ff       	call   2160 <__cxa_free_exception@plt>
    3dfa:	4c 89 e0             	mov    %r12,%rax
    3dfd:	48 89 c7             	mov    %rax,%rdi
    3e00:	e8 fb e5 ff ff       	call   2400 <_Unwind_Resume@plt>
}
    3e05:	48 81 c4 c0 01 00 00 	add    $0x1c0,%rsp
    3e0c:	5b                   	pop    %rbx
    3e0d:	41 5c                	pop    %r12
    3e0f:	5d                   	pop    %rbp
    3e10:	c3                   	ret
    3e11:	90                   	nop

0000000000003e12 <_ZN4neko6DeviceD1Ev>:

Device::~Device() { vkDestroyDevice(mLogicalDevice, nullptr); }
    3e12:	55                   	push   %rbp
    3e13:	48 89 e5             	mov    %rsp,%rbp
    3e16:	48 83 ec 10          	sub    $0x10,%rsp
    3e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e22:	48 8b 00             	mov    (%rax),%rax
    3e25:	be 00 00 00 00       	mov    $0x0,%esi
    3e2a:	48 89 c7             	mov    %rax,%rdi
    3e2d:	e8 9e e3 ff ff       	call   21d0 <vkDestroyDevice@plt>
    3e32:	90                   	nop
    3e33:	c9                   	leave
    3e34:	c3                   	ret
    3e35:	90                   	nop

0000000000003e36 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

u32 Device::selectUniversalQueueFamily(VkPhysicalDevice physicalDevice,
                                            VkSurfaceKHR surface) {
    3e36:	55                   	push   %rbp
    3e37:	48 89 e5             	mov    %rsp,%rbp
    3e3a:	41 54                	push   %r12
    3e3c:	53                   	push   %rbx
    3e3d:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    3e41:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    3e45:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    3e49:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  u32 queueFamilyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    3e50:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    3e54:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3e58:	ba 00 00 00 00       	mov    $0x0,%edx
    3e5d:	48 89 ce             	mov    %rcx,%rsi
    3e60:	48 89 c7             	mov    %rax,%rdi
    3e63:	e8 18 e3 ff ff       	call   2180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           nullptr);
  if (queueFamilyCount == 0) {
    3e68:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3e6b:	85 c0                	test   %eax,%eax
    3e6d:	75 3b                	jne    3eaa <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("No queue family available.");
    3e6f:	bf 10 00 00 00       	mov    $0x10,%edi
    3e74:	e8 67 e2 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    3e79:	48 89 c3             	mov    %rax,%rbx
    3e7c:	48 8d 05 8e 6e 00 00 	lea    0x6e8e(%rip),%rax        # ad11 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x29>
    3e83:	48 89 c6             	mov    %rax,%rsi
    3e86:	48 89 df             	mov    %rbx,%rdi
    3e89:	e8 02 e2 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    3e8e:	48 8b 05 1b 01 01 00 	mov    0x1011b(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3e95:	48 89 c2             	mov    %rax,%rdx
    3e98:	48 8d 05 c1 fe 00 00 	lea    0xfec1(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3e9f:	48 89 c6             	mov    %rax,%rsi
    3ea2:	48 89 df             	mov    %rbx,%rdi
    3ea5:	e8 36 e5 ff ff       	call   23e0 <__cxa_throw@plt>
  }

  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    3eaa:	8b 45 d0             	mov    -0x30(%rbp),%eax
    3ead:	89 c3                	mov    %eax,%ebx
    3eaf:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3eb3:	48 89 c7             	mov    %rax,%rdi
    3eb6:	e8 0d 0c 00 00       	call   4ac8 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    3ebb:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    3ebf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3ec3:	48 89 de             	mov    %rbx,%rsi
    3ec6:	48 89 c7             	mov    %rax,%rdi
    3ec9:	e8 32 0c 00 00       	call   4b00 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    3ece:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    3ed2:	48 89 c7             	mov    %rax,%rdi
    3ed5:	e8 0a 0c 00 00       	call   4ae4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, &queueFamilyCount,
    3eda:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3ede:	48 89 c7             	mov    %rax,%rdi
    3ee1:	e8 d4 0c 00 00       	call   4bba <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    3ee6:	48 89 c2             	mov    %rax,%rdx
    3ee9:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    3eed:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3ef1:	48 89 ce             	mov    %rcx,%rsi
    3ef4:	48 89 c7             	mov    %rax,%rdi
    3ef7:	e8 84 e2 ff ff       	call   2180 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  /* any queue family with {VK_QUEUE_GRAPHICS_BIT} or {VK_QUEUE_COMPUTE_BIT}
  capabilities already implicitly support {VK_QUEUE_TRANSFER_BIT} operations */
  u32 iQueueFamily = 0;
    3efc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    3f03:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3f07:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    3f0b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f0f:	48 89 c7             	mov    %rax,%rdi
    3f12:	e8 c7 0c 00 00       	call   4bde <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    3f17:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    3f1b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    3f1f:	48 89 c7             	mov    %rax,%rdi
    3f22:	e8 dd 0c 00 00       	call   4c04 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    3f27:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    3f2b:	eb 78                	jmp    3fa5 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x16f>
    3f2d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3f31:	48 89 c7             	mov    %rax,%rdi
    3f34:	e8 4f 0d 00 00       	call   4c88 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    3f39:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    3f3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f41:	8b 00                	mov    (%rax),%eax
    3f43:	83 e0 01             	and    $0x1,%eax
    3f46:	85 c0                	test   %eax,%eax
    3f48:	74 4f                	je     3f99 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
        (queueFamily.queueFlags & VK_QUEUE_COMPUTE_BIT)) {
    3f4a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3f4e:	8b 00                	mov    (%rax),%eax
    3f50:	83 e0 02             	and    $0x2,%eax
    if ((queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT) &&
    3f53:	85 c0                	test   %eax,%eax
    3f55:	74 42                	je     3f99 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x163>
      VkBool32 presentSupport = false;
    3f57:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
      vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, iQueueFamily,
    3f5e:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    3f62:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    3f69:	8b 75 ec             	mov    -0x14(%rbp),%esi
    3f6c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    3f70:	48 89 c7             	mov    %rax,%rdi
    3f73:	e8 38 e3 ff ff       	call   22b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                           surface, &presentSupport);
      if (presentSupport) {
    3f78:	8b 45 9c             	mov    -0x64(%rbp),%eax
    3f7b:	85 c0                	test   %eax,%eax
    3f7d:	74 16                	je     3f95 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x15f>
        return iQueueFamily;
    3f7f:	8b 5d ec             	mov    -0x14(%rbp),%ebx
      }
      ++iQueueFamily;
    }
  }
  throw std::runtime_error("Failed to select a queue family.");
}
    3f82:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3f86:	48 89 c7             	mov    %rax,%rdi
    3f89:	e8 e8 0b 00 00       	call   4b76 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
        return iQueueFamily;
    3f8e:	89 d8                	mov    %ebx,%eax
    3f90:	e9 c0 00 00 00       	jmp    4055 <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x21f>
      ++iQueueFamily;
    3f95:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamily : queueFamilyProperties) {
    3f99:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3f9d:	48 89 c7             	mov    %rax,%rdi
    3fa0:	e8 c3 0c 00 00       	call   4c68 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    3fa5:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    3fa9:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    3fad:	48 89 d6             	mov    %rdx,%rsi
    3fb0:	48 89 c7             	mov    %rax,%rdi
    3fb3:	e8 75 0c 00 00       	call   4c2d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    3fb8:	84 c0                	test   %al,%al
    3fba:	0f 85 6d ff ff ff    	jne    3f2d <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf7>
  throw std::runtime_error("Failed to select a queue family.");
    3fc0:	bf 10 00 00 00       	mov    $0x10,%edi
    3fc5:	e8 16 e1 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    3fca:	48 89 c3             	mov    %rax,%rbx
    3fcd:	48 8d 05 5c 6d 00 00 	lea    0x6d5c(%rip),%rax        # ad30 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x48>
    3fd4:	48 89 c6             	mov    %rax,%rsi
    3fd7:	48 89 df             	mov    %rbx,%rdi
    3fda:	e8 b1 e0 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    3fdf:	48 8b 05 ca ff 00 00 	mov    0xffca(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    3fe6:	48 89 c2             	mov    %rax,%rdx
    3fe9:	48 8d 05 70 fd 00 00 	lea    0xfd70(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    3ff0:	48 89 c6             	mov    %rax,%rsi
    3ff3:	48 89 df             	mov    %rbx,%rdi
    3ff6:	e8 e5 e3 ff ff       	call   23e0 <__cxa_throw@plt>
    throw std::runtime_error("No queue family available.");
    3ffb:	49 89 c4             	mov    %rax,%r12
    3ffe:	48 89 df             	mov    %rbx,%rdi
    4001:	e8 5a e1 ff ff       	call   2160 <__cxa_free_exception@plt>
    4006:	4c 89 e0             	mov    %r12,%rax
    4009:	48 89 c7             	mov    %rax,%rdi
    400c:	e8 ef e3 ff ff       	call   2400 <_Unwind_Resume@plt>
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{queueFamilyCount};
    4011:	48 89 c3             	mov    %rax,%rbx
    4014:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    4018:	48 89 c7             	mov    %rax,%rdi
    401b:	e8 c4 0a 00 00       	call   4ae4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    4020:	48 89 d8             	mov    %rbx,%rax
    4023:	48 89 c7             	mov    %rax,%rdi
    4026:	e8 d5 e3 ff ff       	call   2400 <_Unwind_Resume@plt>
  throw std::runtime_error("Failed to select a queue family.");
    402b:	49 89 c4             	mov    %rax,%r12
    402e:	48 89 df             	mov    %rbx,%rdi
    4031:	e8 2a e1 ff ff       	call   2160 <__cxa_free_exception@plt>
    4036:	4c 89 e3             	mov    %r12,%rbx
    4039:	eb 03                	jmp    403e <_ZN4neko6Device26selectUniversalQueueFamilyEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x208>
}
    403b:	48 89 c3             	mov    %rax,%rbx
    403e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    4042:	48 89 c7             	mov    %rax,%rdi
    4045:	e8 2c 0b 00 00       	call   4b76 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    404a:	48 89 d8             	mov    %rbx,%rax
    404d:	48 89 c7             	mov    %rax,%rdi
    4050:	e8 ab e3 ff ff       	call   2400 <_Unwind_Resume@plt>
    4055:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp
    4059:	5b                   	pop    %rbx
    405a:	41 5c                	pop    %r12
    405c:	5d                   	pop    %rbp
    405d:	c3                   	ret

000000000000405e <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE>:

VkPhysicalDevice Device::selectPhysicalDevice(
    std::vector<VkPhysicalDevice> &&rrPhysicalDevices) {
    405e:	55                   	push   %rbp
    405f:	48 89 e5             	mov    %rsp,%rbp
    4062:	41 54                	push   %r12
    4064:	53                   	push   %rbx
    4065:	48 83 ec 20          	sub    $0x20,%rsp
    4069:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    406d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (rrPhysicalDevices.size() == 1) {
    4071:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4075:	48 89 c7             	mov    %rax,%rdi
    4078:	e8 1d 0c 00 00       	call   4c9a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    407d:	48 83 f8 01          	cmp    $0x1,%rax
    4081:	0f 94 c0             	sete   %al
    4084:	84 c0                	test   %al,%al
    4086:	74 19                	je     40a1 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x43>
    return rrPhysicalDevices[0];
    4088:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    408c:	be 00 00 00 00       	mov    $0x0,%esi
    4091:	48 89 c7             	mov    %rax,%rdi
    4094:	e8 25 0c 00 00       	call   4cbe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    4099:	48 8b 00             	mov    (%rax),%rax
    409c:	e9 b8 00 00 00       	jmp    4159 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  }
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    40a1:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    40a8:	00 
    40a9:	eb 46                	jmp    40f1 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x93>
    if (checkRequirements(rrPhysicalDevices[iDevice])) {
    40ab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    40af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40b3:	48 89 d6             	mov    %rdx,%rsi
    40b6:	48 89 c7             	mov    %rax,%rdi
    40b9:	e8 00 0c 00 00       	call   4cbe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    40be:	48 8b 10             	mov    (%rax),%rdx
    40c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    40c5:	48 89 d6             	mov    %rdx,%rsi
    40c8:	48 89 c7             	mov    %rax,%rdi
    40cb:	e8 92 00 00 00       	call   4162 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>
    40d0:	84 c0                	test   %al,%al
    40d2:	74 18                	je     40ec <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x8e>
      return rrPhysicalDevices[iDevice];
    40d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    40d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40dc:	48 89 d6             	mov    %rdx,%rsi
    40df:	48 89 c7             	mov    %rax,%rdi
    40e2:	e8 d7 0b 00 00       	call   4cbe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    40e7:	48 8b 00             	mov    (%rax),%rax
    40ea:	eb 6d                	jmp    4159 <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0xfb>
  for (size_t iDevice = 0; iDevice < rrPhysicalDevices.size(); ++iDevice) {
    40ec:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    40f1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    40f5:	48 89 c7             	mov    %rax,%rdi
    40f8:	e8 9d 0b 00 00       	call   4c9a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    40fd:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    4101:	0f 92 c0             	setb   %al
    4104:	84 c0                	test   %al,%al
    4106:	75 a3                	jne    40ab <_ZN4neko6Device20selectPhysicalDeviceEOSt6vectorIP18VkPhysicalDevice_TSaIS3_EE+0x4d>
    }
  }
  throw std::runtime_error("No suitable physical device found.");
    4108:	bf 10 00 00 00       	mov    $0x10,%edi
    410d:	e8 ce df ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    4112:	48 89 c3             	mov    %rax,%rbx
    4115:	48 8d 05 3c 6c 00 00 	lea    0x6c3c(%rip),%rax        # ad58 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    411c:	48 89 c6             	mov    %rax,%rsi
    411f:	48 89 df             	mov    %rbx,%rdi
    4122:	e8 69 df ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    4127:	48 8b 05 82 fe 00 00 	mov    0xfe82(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    412e:	48 89 c2             	mov    %rax,%rdx
    4131:	48 8d 05 28 fc 00 00 	lea    0xfc28(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4138:	48 89 c6             	mov    %rax,%rsi
    413b:	48 89 df             	mov    %rbx,%rdi
    413e:	e8 9d e2 ff ff       	call   23e0 <__cxa_throw@plt>
    4143:	49 89 c4             	mov    %rax,%r12
    4146:	48 89 df             	mov    %rbx,%rdi
    4149:	e8 12 e0 ff ff       	call   2160 <__cxa_free_exception@plt>
    414e:	4c 89 e0             	mov    %r12,%rax
    4151:	48 89 c7             	mov    %rax,%rdi
    4154:	e8 a7 e2 ff ff       	call   2400 <_Unwind_Resume@plt>
}
    4159:	48 83 c4 20          	add    $0x20,%rsp
    415d:	5b                   	pop    %rbx
    415e:	41 5c                	pop    %r12
    4160:	5d                   	pop    %rbp
    4161:	c3                   	ret

0000000000004162 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T>:

bool Device::checkRequirements(VkPhysicalDevice physicalDevice) {
    4162:	55                   	push   %rbp
    4163:	48 89 e5             	mov    %rsp,%rbp
    4166:	48 83 ec 10          	sub    $0x10,%rsp
    416a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    416e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    4172:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4176:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    417a:	48 89 d6             	mov    %rdx,%rsi
    417d:	48 89 c7             	mov    %rax,%rdi
    4180:	e8 41 00 00 00       	call   41c6 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>
    4185:	84 c0                	test   %al,%al
    4187:	74 35                	je     41be <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    4189:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    418d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4191:	48 89 d6             	mov    %rdx,%rsi
    4194:	48 89 c7             	mov    %rax,%rdi
    4197:	e8 6a 00 00 00       	call   4206 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>
    419c:	84 c0                	test   %al,%al
    419e:	74 1e                	je     41be <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
         checkFeatures(physicalDevice);
    41a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    41a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    41a8:	48 89 d6             	mov    %rdx,%rsi
    41ab:	48 89 c7             	mov    %rax,%rdi
    41ae:	e8 73 05 00 00       	call   4726 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>
  return checkProperties(physicalDevice) && checkExtensions(physicalDevice) &&
    41b3:	84 c0                	test   %al,%al
    41b5:	74 07                	je     41be <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x5c>
    41b7:	b8 01 00 00 00       	mov    $0x1,%eax
    41bc:	eb 05                	jmp    41c3 <_ZN4neko6Device17checkRequirementsEP18VkPhysicalDevice_T+0x61>
    41be:	b8 00 00 00 00       	mov    $0x0,%eax
}
    41c3:	c9                   	leave
    41c4:	c3                   	ret
    41c5:	90                   	nop

00000000000041c6 <_ZN4neko6Device15checkPropertiesEP18VkPhysicalDevice_T>:

bool Device::checkProperties(VkPhysicalDevice physicalDevice) {
    41c6:	55                   	push   %rbp
    41c7:	48 89 e5             	mov    %rsp,%rbp
    41ca:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    41d1:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    41d8:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    41df:	48 8d 95 c0 fc ff ff 	lea    -0x340(%rbp),%rdx
    41e6:	48 8b 85 b0 fc ff ff 	mov    -0x350(%rbp),%rax
    41ed:	48 89 d6             	mov    %rdx,%rsi
    41f0:	48 89 c7             	mov    %rax,%rdi
    41f3:	e8 a8 de ff ff       	call   20a0 <vkGetPhysicalDeviceProperties@plt>
  return properties.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    41f8:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    41fe:	83 f8 02             	cmp    $0x2,%eax
    4201:	0f 94 c0             	sete   %al
}
    4204:	c9                   	leave
    4205:	c3                   	ret

0000000000004206 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T>:

bool Device::checkExtensions(VkPhysicalDevice physicalDevice) {
    4206:	55                   	push   %rbp
    4207:	48 89 e5             	mov    %rsp,%rbp
    420a:	41 55                	push   %r13
    420c:	41 54                	push   %r12
    420e:	53                   	push   %rbx
    420f:	48 81 ec 68 01 00 00 	sub    $0x168,%rsp
    4216:	48 89 bd 88 fe ff ff 	mov    %rdi,-0x178(%rbp)
    421d:	48 89 b5 80 fe ff ff 	mov    %rsi,-0x180(%rbp)
  const std::vector<const char *> requiredExtensions = {
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    4224:	48 8d 05 50 6b 00 00 	lea    0x6b50(%rip),%rax        # ad7b <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x93>
    422b:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    4232:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    4239:	49 89 c4             	mov    %rax,%r12
    423c:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    4242:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4249:	48 89 c7             	mov    %rax,%rdi
    424c:	e8 8d 0a 00 00       	call   4cde <_ZNSaIPKcEC1Ev>
    4251:	48 8d 95 2e ff ff ff 	lea    -0xd2(%rbp),%rdx
    4258:	4c 89 e6             	mov    %r12,%rsi
    425b:	4c 89 ef             	mov    %r13,%rdi
    425e:	4c 89 e1             	mov    %r12,%rcx
    4261:	4c 89 eb             	mov    %r13,%rbx
    4264:	48 89 df             	mov    %rbx,%rdi
    4267:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    426e:	48 89 d1             	mov    %rdx,%rcx
    4271:	48 89 fa             	mov    %rdi,%rdx
    4274:	48 89 c7             	mov    %rax,%rdi
    4277:	e8 9a 0a 00 00       	call   4d16 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    427c:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4283:	48 89 c7             	mov    %rax,%rdi
    4286:	e8 6f 0a 00 00       	call   4cfa <_ZNSaIPKcED1Ev>

  u32 propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    428b:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    4292:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    4299:	b9 00 00 00 00       	mov    $0x0,%ecx
    429e:	be 00 00 00 00       	mov    $0x0,%esi
    42a3:	48 89 c7             	mov    %rax,%rdi
    42a6:	e8 b5 e0 ff ff       	call   2360 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount, nullptr) != VK_SUCCESS) {
    42ab:	85 c0                	test   %eax,%eax
    42ad:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    42b0:	84 c0                	test   %al,%al
    42b2:	74 3b                	je     42ef <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0xe9>
    throw std::runtime_error("Failed to get device extension list.");
    42b4:	bf 10 00 00 00       	mov    $0x10,%edi
    42b9:	e8 22 de ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    42be:	48 89 c3             	mov    %rax,%rbx
    42c1:	48 8d 05 c8 6a 00 00 	lea    0x6ac8(%rip),%rax        # ad90 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    42c8:	48 89 c6             	mov    %rax,%rsi
    42cb:	48 89 df             	mov    %rbx,%rdi
    42ce:	e8 bd dd ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    42d3:	48 8b 05 d6 fc 00 00 	mov    0xfcd6(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    42da:	48 89 c2             	mov    %rax,%rdx
    42dd:	48 8d 05 7c fa 00 00 	lea    0xfa7c(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    42e4:	48 89 c6             	mov    %rax,%rsi
    42e7:	48 89 df             	mov    %rbx,%rdi
    42ea:	e8 f1 e0 ff ff       	call   23e0 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    42ef:	8b 85 fc fe ff ff    	mov    -0x104(%rbp),%eax
    42f5:	89 c3                	mov    %eax,%ebx
    42f7:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    42fe:	48 89 c7             	mov    %rax,%rdi
    4301:	e8 dc 0a 00 00       	call   4de2 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    4306:	48 8d 95 2f ff ff ff 	lea    -0xd1(%rbp),%rdx
    430d:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4314:	48 89 de             	mov    %rbx,%rsi
    4317:	48 89 c7             	mov    %rax,%rdi
    431a:	e8 fb 0a 00 00       	call   4e1a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    431f:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    4326:	48 89 c7             	mov    %rax,%rdi
    4329:	e8 d0 0a 00 00       	call   4dfe <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    432e:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    4335:	48 89 c7             	mov    %rax,%rdi
    4338:	e8 97 0b 00 00       	call   4ed4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    433d:	48 89 c1             	mov    %rax,%rcx
    4340:	48 8d 95 fc fe ff ff 	lea    -0x104(%rbp),%rdx
    4347:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    434e:	be 00 00 00 00       	mov    $0x0,%esi
    4353:	48 89 c7             	mov    %rax,%rdi
    4356:	e8 05 e0 ff ff       	call   2360 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, nullptr, &propertyCount,
          availableExtensions.data()) != VK_SUCCESS) {
    435b:	85 c0                	test   %eax,%eax
    435d:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    4360:	84 c0                	test   %al,%al
    4362:	74 3b                	je     439f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x199>
    throw std::runtime_error("Failed to get device extension list.");
    4364:	bf 10 00 00 00       	mov    $0x10,%edi
    4369:	e8 72 dd ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    436e:	48 89 c3             	mov    %rax,%rbx
    4371:	48 8d 05 18 6a 00 00 	lea    0x6a18(%rip),%rax        # ad90 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa8>
    4378:	48 89 c6             	mov    %rax,%rsi
    437b:	48 89 df             	mov    %rbx,%rdi
    437e:	e8 0d dd ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    4383:	48 8b 05 26 fc 00 00 	mov    0xfc26(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    438a:	48 89 c2             	mov    %rax,%rdx
    438d:	48 8d 05 cc f9 00 00 	lea    0xf9cc(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4394:	48 89 c6             	mov    %rax,%rsi
    4397:	48 89 df             	mov    %rbx,%rdi
    439a:	e8 41 e0 ff ff       	call   23e0 <__cxa_throw@plt>
  }

  /* Check if all required extension are supported */
  std::map<std::string, u32> helper;
    439f:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    43a6:	48 89 c7             	mov    %rax,%rdi
    43a9:	e8 82 06 00 00       	call   4a30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensions) {
    43ae:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    43b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    43b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43bd:	48 89 c7             	mov    %rax,%rdi
    43c0:	e8 c1 0b 00 00       	call   4f86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    43c5:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
    43cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    43d0:	48 89 c7             	mov    %rax,%rdi
    43d3:	e8 d4 0b 00 00       	call   4fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    43d8:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    43df:	e9 8c 00 00 00       	jmp    4470 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x26a>
    43e4:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    43eb:	48 89 c7             	mov    %rax,%rdi
    43ee:	e8 41 0c 00 00       	call   5034 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    43f3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    helper[availableExtension.extensionName]++;
    43f7:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    43fe:	48 89 c7             	mov    %rax,%rdi
    4401:	e8 0a e0 ff ff       	call   2410 <_ZNSaIcEC1Ev@plt>
    4406:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    440a:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    4411:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    4418:	48 89 ce             	mov    %rcx,%rsi
    441b:	48 89 c7             	mov    %rax,%rdi
    441e:	e8 11 e6 ff ff       	call   2a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4423:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    442a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4431:	48 89 d6             	mov    %rdx,%rsi
    4434:	48 89 c7             	mov    %rax,%rdi
    4437:	e8 0a 0c 00 00       	call   5046 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    443c:	8b 10                	mov    (%rax),%edx
    443e:	83 c2 01             	add    $0x1,%edx
    4441:	89 10                	mov    %edx,(%rax)
    4443:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    444a:	48 89 c7             	mov    %rax,%rdi
    444d:	e8 ce dc ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4452:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4459:	48 89 c7             	mov    %rax,%rdi
    445c:	e8 5f de ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensions) {
    4461:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    4468:	48 89 c7             	mov    %rax,%rdi
    446b:	e8 a0 0b 00 00       	call   5010 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    4470:	48 8d 95 a0 fe ff ff 	lea    -0x160(%rbp),%rdx
    4477:	48 8d 85 a8 fe ff ff 	lea    -0x158(%rbp),%rax
    447e:	48 89 d6             	mov    %rdx,%rsi
    4481:	48 89 c7             	mov    %rax,%rdi
    4484:	e8 4c 0b 00 00       	call   4fd5 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    4489:	84 c0                	test   %al,%al
    448b:	0f 85 53 ff ff ff    	jne    43e4 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x1de>
  }
  for (const auto &requiredExtension : requiredExtensions) {
    4491:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4498:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    449c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44a0:	48 89 c7             	mov    %rax,%rdi
    44a3:	e8 a2 0c 00 00       	call   514a <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    44a8:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    44af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    44b3:	48 89 c7             	mov    %rax,%rdi
    44b6:	e8 b5 0c 00 00       	call   5170 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    44bb:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    44c2:	e9 ed 00 00 00       	jmp    45b4 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3ae>
    44c7:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    44ce:	48 89 c7             	mov    %rax,%rdi
    44d1:	e8 1e 0d 00 00       	call   51f4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    44d6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    helper[requiredExtension]++;
    44da:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    44de:	48 89 c7             	mov    %rax,%rdi
    44e1:	e8 2a df ff ff       	call   2410 <_ZNSaIcEC1Ev@plt>
    44e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    44ea:	48 8b 08             	mov    (%rax),%rcx
    44ed:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    44f1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    44f8:	48 89 ce             	mov    %rcx,%rsi
    44fb:	48 89 c7             	mov    %rax,%rdi
    44fe:	e8 31 e5 ff ff       	call   2a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4503:	48 8d 95 60 ff ff ff 	lea    -0xa0(%rbp),%rdx
    450a:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    4511:	48 89 d6             	mov    %rdx,%rsi
    4514:	48 89 c7             	mov    %rax,%rdi
    4517:	e8 2a 0b 00 00       	call   5046 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    451c:	8b 10                	mov    (%rax),%edx
    451e:	83 c2 01             	add    $0x1,%edx
    4521:	89 10                	mov    %edx,(%rax)
    4523:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    452a:	48 89 c7             	mov    %rax,%rdi
    452d:	e8 ee db ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    4532:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    4536:	48 89 c7             	mov    %rax,%rdi
    4539:	e8 82 dd ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    if (helper[requiredExtension] < 2) {
    453e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4542:	48 89 c7             	mov    %rax,%rdi
    4545:	e8 c6 de ff ff       	call   2410 <_ZNSaIcEC1Ev@plt>
    454a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    454e:	48 8b 08             	mov    (%rax),%rcx
    4551:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    4555:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4559:	48 89 ce             	mov    %rcx,%rsi
    455c:	48 89 c7             	mov    %rax,%rdi
    455f:	e8 d0 e4 ff ff       	call   2a34 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4564:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    4568:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    456f:	48 89 d6             	mov    %rdx,%rsi
    4572:	48 89 c7             	mov    %rax,%rdi
    4575:	e8 cc 0a 00 00       	call   5046 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    457a:	8b 00                	mov    (%rax),%eax
    457c:	83 f8 01             	cmp    $0x1,%eax
    457f:	0f 96 c3             	setbe  %bl
    4582:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    4586:	48 89 c7             	mov    %rax,%rdi
    4589:	e8 92 db ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    458e:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    4592:	48 89 c7             	mov    %rax,%rdi
    4595:	e8 26 dd ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    459a:	84 db                	test   %bl,%bl
    459c:	74 07                	je     45a5 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x39f>
      return false;
    459e:	bb 00 00 00 00       	mov    $0x0,%ebx
    45a3:	eb 35                	jmp    45da <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x3d4>
  for (const auto &requiredExtension : requiredExtensions) {
    45a5:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    45ac:	48 89 c7             	mov    %rax,%rdi
    45af:	e8 20 0c 00 00       	call   51d4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    45b4:	48 8d 95 90 fe ff ff 	lea    -0x170(%rbp),%rdx
    45bb:	48 8d 85 98 fe ff ff 	lea    -0x168(%rbp),%rax
    45c2:	48 89 d6             	mov    %rdx,%rsi
    45c5:	48 89 c7             	mov    %rax,%rdi
    45c8:	e8 cc 0b 00 00       	call   5199 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    45cd:	84 c0                	test   %al,%al
    45cf:	0f 85 f2 fe ff ff    	jne    44c7 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x2c1>
    }
  }
  return true;
    45d5:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    45da:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    45e1:	48 89 c7             	mov    %rax,%rdi
    45e4:	e8 63 04 00 00       	call   4a4c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    45e9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    45f0:	48 89 c7             	mov    %rax,%rdi
    45f3:	e8 98 08 00 00       	call   4e90 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    45f8:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    45ff:	48 89 c7             	mov    %rax,%rdi
    4602:	e8 97 07 00 00       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4607:	89 d8                	mov    %ebx,%eax
    4609:	e9 09 01 00 00       	jmp    4717 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x511>
      VK_KHR_SWAPCHAIN_EXTENSION_NAME};
    460e:	48 89 c3             	mov    %rax,%rbx
    4611:	48 8d 85 2e ff ff ff 	lea    -0xd2(%rbp),%rax
    4618:	48 89 c7             	mov    %rax,%rdi
    461b:	e8 da 06 00 00       	call   4cfa <_ZNSaIPKcED1Ev>
    4620:	48 89 d8             	mov    %rbx,%rax
    4623:	48 89 c7             	mov    %rax,%rdi
    4626:	e8 d5 dd ff ff       	call   2400 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    462b:	49 89 c4             	mov    %rax,%r12
    462e:	48 89 df             	mov    %rbx,%rdi
    4631:	e8 2a db ff ff       	call   2160 <__cxa_free_exception@plt>
    4636:	4c 89 e3             	mov    %r12,%rbx
    4639:	e9 bf 00 00 00       	jmp    46fd <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
  std::vector<VkExtensionProperties> availableExtensions{propertyCount};
    463e:	48 89 c3             	mov    %rax,%rbx
    4641:	48 8d 85 2f ff ff ff 	lea    -0xd1(%rbp),%rax
    4648:	48 89 c7             	mov    %rax,%rdi
    464b:	e8 ae 07 00 00       	call   4dfe <_ZNSaI21VkExtensionPropertiesED1Ev>
    4650:	e9 a8 00 00 00       	jmp    46fd <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    throw std::runtime_error("Failed to get device extension list.");
    4655:	49 89 c4             	mov    %rax,%r12
    4658:	48 89 df             	mov    %rbx,%rdi
    465b:	e8 00 db ff ff       	call   2160 <__cxa_free_exception@plt>
    4660:	4c 89 e3             	mov    %r12,%rbx
    4663:	e9 81 00 00 00       	jmp    46e9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    helper[availableExtension.extensionName]++;
    4668:	48 89 c3             	mov    %rax,%rbx
    466b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    4672:	48 89 c7             	mov    %rax,%rdi
    4675:	e8 a6 da ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    467a:	eb 03                	jmp    467f <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x479>
    467c:	48 89 c3             	mov    %rax,%rbx
    467f:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    4686:	48 89 c7             	mov    %rax,%rdi
    4689:	e8 32 dc ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    468e:	eb 45                	jmp    46d5 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    helper[requiredExtension]++;
    4690:	48 89 c3             	mov    %rax,%rbx
    4693:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    469a:	48 89 c7             	mov    %rax,%rdi
    469d:	e8 7e da ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    46a2:	eb 03                	jmp    46a7 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4a1>
    46a4:	48 89 c3             	mov    %rax,%rbx
    46a7:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    46ab:	48 89 c7             	mov    %rax,%rdi
    46ae:	e8 0d dc ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
    46b3:	eb 20                	jmp    46d5 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4cf>
    if (helper[requiredExtension] < 2) {
    46b5:	48 89 c3             	mov    %rax,%rbx
    46b8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    46bc:	48 89 c7             	mov    %rax,%rdi
    46bf:	e8 5c da ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    46c4:	eb 03                	jmp    46c9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4c3>
    46c6:	48 89 c3             	mov    %rax,%rbx
    46c9:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    46cd:	48 89 c7             	mov    %rax,%rdi
    46d0:	e8 eb db ff ff       	call   22c0 <_ZNSaIcED1Ev@plt>
}
    46d5:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    46dc:	48 89 c7             	mov    %rax,%rdi
    46df:	e8 68 03 00 00       	call   4a4c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    46e4:	eb 03                	jmp    46e9 <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4e3>
    46e6:	48 89 c3             	mov    %rax,%rbx
    46e9:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    46f0:	48 89 c7             	mov    %rax,%rdi
    46f3:	e8 98 07 00 00       	call   4e90 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    46f8:	eb 03                	jmp    46fd <_ZN4neko6Device15checkExtensionsEP18VkPhysicalDevice_T+0x4f7>
    46fa:	48 89 c3             	mov    %rax,%rbx
    46fd:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax
    4704:	48 89 c7             	mov    %rax,%rdi
    4707:	e8 92 06 00 00       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    470c:	48 89 d8             	mov    %rbx,%rax
    470f:	48 89 c7             	mov    %rax,%rdi
    4712:	e8 e9 dc ff ff       	call   2400 <_Unwind_Resume@plt>
    4717:	48 81 c4 68 01 00 00 	add    $0x168,%rsp
    471e:	5b                   	pop    %rbx
    471f:	41 5c                	pop    %r12
    4721:	41 5d                	pop    %r13
    4723:	5d                   	pop    %rbp
    4724:	c3                   	ret
    4725:	90                   	nop

0000000000004726 <_ZN4neko6Device13checkFeaturesEP18VkPhysicalDevice_T>:

bool Device::checkFeatures(VkPhysicalDevice physicalDevice) {
    4726:	55                   	push   %rbp
    4727:	48 89 e5             	mov    %rsp,%rbp
    472a:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    4731:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    4738:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  VkPhysicalDeviceFeatures supportedFeatures;
  vkGetPhysicalDeviceFeatures(physicalDevice, &supportedFeatures);
    473f:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    4746:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    474d:	48 89 d6             	mov    %rdx,%rsi
    4750:	48 89 c7             	mov    %rax,%rdi
    4753:	e8 38 da ff ff       	call   2190 <vkGetPhysicalDeviceFeatures@plt>
  return supportedFeatures.samplerAnisotropy;
    4758:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    475e:	85 c0                	test   %eax,%eax
    4760:	0f 95 c0             	setne  %al
}
    4763:	c9                   	leave
    4764:	c3                   	ret
    4765:	90                   	nop

0000000000004766 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T>:

std::vector<VkPhysicalDevice> Device::getPhysicalDevices(VkInstance instance) {
    4766:	55                   	push   %rbp
    4767:	48 89 e5             	mov    %rsp,%rbp
    476a:	41 54                	push   %r12
    476c:	53                   	push   %rbx
    476d:	48 83 ec 30          	sub    $0x30,%rsp
    4771:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4775:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4779:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  u32 physicalDeviceCount;
  VkResult result;
  if (result =
          vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    477d:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4781:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4785:	ba 00 00 00 00       	mov    $0x0,%edx
    478a:	48 89 ce             	mov    %rcx,%rsi
    478d:	48 89 c7             	mov    %rax,%rdi
    4790:	e8 6b d9 ff ff       	call   2100 <vkEnumeratePhysicalDevices@plt>
    4795:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result =
    4798:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    479c:	74 41                	je     47df <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    479e:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    47a2:	74 3b                	je     47df <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x79>
    throw std::runtime_error("Failed to enumerate physical devices.");
    47a4:	bf 10 00 00 00       	mov    $0x10,%edi
    47a9:	e8 32 d9 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    47ae:	48 89 c3             	mov    %rax,%rbx
    47b1:	48 8d 05 00 66 00 00 	lea    0x6600(%rip),%rax        # adb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    47b8:	48 89 c6             	mov    %rax,%rsi
    47bb:	48 89 df             	mov    %rbx,%rdi
    47be:	e8 cd d8 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    47c3:	48 8b 05 e6 f7 00 00 	mov    0xf7e6(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    47ca:	48 89 c2             	mov    %rax,%rdx
    47cd:	48 8d 05 8c f5 00 00 	lea    0xf58c(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    47d4:	48 89 c6             	mov    %rax,%rsi
    47d7:	48 89 df             	mov    %rbx,%rdi
    47da:	e8 01 dc ff ff       	call   23e0 <__cxa_throw@plt>
  }
  if (physicalDeviceCount == 0) {
    47df:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    47e2:	85 c0                	test   %eax,%eax
    47e4:	75 3b                	jne    4821 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0xbb>
    throw std::runtime_error("Failed to find any physical device.");
    47e6:	bf 10 00 00 00       	mov    $0x10,%edi
    47eb:	e8 f0 d8 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    47f0:	48 89 c3             	mov    %rax,%rbx
    47f3:	48 8d 05 e6 65 00 00 	lea    0x65e6(%rip),%rax        # ade0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xf8>
    47fa:	48 89 c6             	mov    %rax,%rsi
    47fd:	48 89 df             	mov    %rbx,%rdi
    4800:	e8 8b d8 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    4805:	48 8b 05 a4 f7 00 00 	mov    0xf7a4(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    480c:	48 89 c2             	mov    %rax,%rdx
    480f:	48 8d 05 4a f5 00 00 	lea    0xf54a(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4816:	48 89 c6             	mov    %rax,%rsi
    4819:	48 89 df             	mov    %rbx,%rdi
    481c:	e8 bf db ff ff       	call   23e0 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4821:	8b 45 e4             	mov    -0x1c(%rbp),%eax
    4824:	89 c3                	mov    %eax,%ebx
    4826:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    482a:	48 89 c7             	mov    %rax,%rdi
    482d:	e8 d4 09 00 00       	call   5206 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    4832:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    4836:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    483a:	48 89 de             	mov    %rbx,%rsi
    483d:	48 89 c7             	mov    %rax,%rdi
    4840:	e8 f9 09 00 00       	call   523e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    4845:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    4849:	48 89 c7             	mov    %rax,%rdi
    484c:	e8 d1 09 00 00       	call   5222 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (result = vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4851:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4855:	48 89 c7             	mov    %rax,%rdi
    4858:	e8 57 0a 00 00       	call   52b4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    485d:	48 89 c2             	mov    %rax,%rdx
    4860:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    4864:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4868:	48 89 ce             	mov    %rcx,%rsi
    486b:	48 89 c7             	mov    %rax,%rdi
    486e:	e8 8d d8 ff ff       	call   2100 <vkEnumeratePhysicalDevices@plt>
    4873:	89 45 ec             	mov    %eax,-0x14(%rbp)
    4876:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    487a:	0f 84 b5 00 00 00    	je     4935 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
                                          physicalDevices.data());
      result != VK_SUCCESS && result != VK_INCOMPLETE) {
    4880:	83 7d ec 05          	cmpl   $0x5,-0x14(%rbp)
    4884:	0f 84 ab 00 00 00    	je     4935 <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1cf>
    throw std::runtime_error("Failed to enumerate physical devices.");
    488a:	bf 10 00 00 00       	mov    $0x10,%edi
    488f:	e8 4c d8 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    4894:	48 89 c3             	mov    %rax,%rbx
    4897:	48 8d 05 1a 65 00 00 	lea    0x651a(%rip),%rax        # adb8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xd0>
    489e:	48 89 c6             	mov    %rax,%rsi
    48a1:	48 89 df             	mov    %rbx,%rdi
    48a4:	e8 e7 d7 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    48a9:	48 8b 05 00 f7 00 00 	mov    0xf700(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    48b0:	48 89 c2             	mov    %rax,%rdx
    48b3:	48 8d 05 a6 f4 00 00 	lea    0xf4a6(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    48ba:	48 89 c6             	mov    %rax,%rsi
    48bd:	48 89 df             	mov    %rbx,%rdi
    48c0:	e8 1b db ff ff       	call   23e0 <__cxa_throw@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    48c5:	49 89 c4             	mov    %rax,%r12
    48c8:	48 89 df             	mov    %rbx,%rdi
    48cb:	e8 90 d8 ff ff       	call   2160 <__cxa_free_exception@plt>
    48d0:	4c 89 e0             	mov    %r12,%rax
    48d3:	48 89 c7             	mov    %rax,%rdi
    48d6:	e8 25 db ff ff       	call   2400 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find any physical device.");
    48db:	49 89 c4             	mov    %rax,%r12
    48de:	48 89 df             	mov    %rbx,%rdi
    48e1:	e8 7a d8 ff ff       	call   2160 <__cxa_free_exception@plt>
    48e6:	4c 89 e0             	mov    %r12,%rax
    48e9:	48 89 c7             	mov    %rax,%rdi
    48ec:	e8 0f db ff ff       	call   2400 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    48f1:	48 89 c3             	mov    %rax,%rbx
    48f4:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    48f8:	48 89 c7             	mov    %rax,%rdi
    48fb:	e8 22 09 00 00       	call   5222 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4900:	48 89 d8             	mov    %rbx,%rax
    4903:	48 89 c7             	mov    %rax,%rdi
    4906:	e8 f5 da ff ff       	call   2400 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to enumerate physical devices.");
    490b:	49 89 c4             	mov    %rax,%r12
    490e:	48 89 df             	mov    %rbx,%rdi
    4911:	e8 4a d8 ff ff       	call   2160 <__cxa_free_exception@plt>
    4916:	4c 89 e3             	mov    %r12,%rbx
    4919:	eb 03                	jmp    491e <_ZN4neko6Device18getPhysicalDevicesEP12VkInstance_T+0x1b8>
  }
  return physicalDevices;
}
    491b:	48 89 c3             	mov    %rax,%rbx
    491e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4922:	48 89 c7             	mov    %rax,%rdi
    4925:	e8 5a 01 00 00       	call   4a84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    492a:	48 89 d8             	mov    %rbx,%rax
    492d:	48 89 c7             	mov    %rax,%rdi
    4930:	e8 cb da ff ff       	call   2400 <_Unwind_Resume@plt>
  return physicalDevices;
    4935:	90                   	nop
}
    4936:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    493a:	48 83 c4 30          	add    $0x30,%rsp
    493e:	5b                   	pop    %rbx
    493f:	41 5c                	pop    %r12
    4941:	5d                   	pop    %rbp
    4942:	c3                   	ret

0000000000004943 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4943:	55                   	push   %rbp
    4944:	48 89 e5             	mov    %rsp,%rbp
    4947:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    494b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    494f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4953:	5d                   	pop    %rbp
    4954:	c3                   	ret

0000000000004955 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    4955:	55                   	push   %rbp
    4956:	48 89 e5             	mov    %rsp,%rbp
    4959:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    495d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4961:	90                   	nop
    4962:	5d                   	pop    %rbp
    4963:	c3                   	ret

0000000000004964 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4964:	55                   	push   %rbp
    4965:	48 89 e5             	mov    %rsp,%rbp
    4968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    496c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4970:	5d                   	pop    %rbp
    4971:	c3                   	ret

0000000000004972 <_ZNK4neko8InstancedeEv>:

  const VkInstance &operator*() const noexcept { return mInstance; }
    4972:	55                   	push   %rbp
    4973:	48 89 e5             	mov    %rsp,%rbp
    4976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    497a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    497e:	48 83 c0 08          	add    $0x8,%rax
    4982:	5d                   	pop    %rbp
    4983:	c3                   	ret

0000000000004984 <_ZNK4neko7SurfacedeEv>:

  Surface &operator=(Surface &&) = default;

  ~Surface();

  const VkSurfaceKHR &operator*() const noexcept { return mSurface; }
    4984:	55                   	push   %rbp
    4985:	48 89 e5             	mov    %rsp,%rbp
    4988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    498c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4990:	48 83 c0 08          	add    $0x8,%rax
    4994:	5d                   	pop    %rbp
    4995:	c3                   	ret

0000000000004996 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    4996:	55                   	push   %rbp
    4997:	48 89 e5             	mov    %rsp,%rbp
    499a:	48 83 ec 10          	sub    $0x10,%rsp
    499e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    49a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49a6:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    49ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49b0:	48 89 c7             	mov    %rax,%rdi
    49b3:	e8 04 00 00 00       	call   49bc <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    49b8:	90                   	nop
    49b9:	c9                   	leave
    49ba:	c3                   	ret
    49bb:	90                   	nop

00000000000049bc <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    49bc:	55                   	push   %rbp
    49bd:	48 89 e5             	mov    %rsp,%rbp
    49c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    49c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49c8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    49cf:	00 
      _M_header._M_left = &_M_header;
    49d0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    49d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49d8:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    49dc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    49e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49e4:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    49e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49ec:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    49f3:	00 
    }
    49f4:	90                   	nop
    49f5:	5d                   	pop    %rbp
    49f6:	c3                   	ret
    49f7:	90                   	nop

00000000000049f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    49f8:	55                   	push   %rbp
    49f9:	48 89 e5             	mov    %rsp,%rbp
    49fc:	48 83 ec 10          	sub    $0x10,%rsp
    4a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a08:	48 89 c7             	mov    %rax,%rdi
    4a0b:	e8 20 05 00 00       	call   4f30 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    4a10:	90                   	nop
    4a11:	c9                   	leave
    4a12:	c3                   	ret
    4a13:	90                   	nop

0000000000004a14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    4a14:	55                   	push   %rbp
    4a15:	48 89 e5             	mov    %rsp,%rbp
    4a18:	48 83 ec 10          	sub    $0x10,%rsp
    4a1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a24:	48 89 c7             	mov    %rax,%rdi
    4a27:	e8 cc 04 00 00       	call   4ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
    4a2c:	90                   	nop
    4a2d:	c9                   	leave
    4a2e:	c3                   	ret
    4a2f:	90                   	nop

0000000000004a30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
    4a30:	55                   	push   %rbp
    4a31:	48 89 e5             	mov    %rsp,%rbp
    4a34:	48 83 ec 10          	sub    $0x10,%rsp
    4a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a40:	48 89 c7             	mov    %rax,%rdi
    4a43:	e8 cc ff ff ff       	call   4a14 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
    4a48:	90                   	nop
    4a49:	c9                   	leave
    4a4a:	c3                   	ret
    4a4b:	90                   	nop

0000000000004a4c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
    4a4c:	55                   	push   %rbp
    4a4d:	48 89 e5             	mov    %rsp,%rbp
    4a50:	48 83 ec 10          	sub    $0x10,%rsp
    4a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a5c:	48 89 c7             	mov    %rax,%rdi
    4a5f:	e8 e8 04 00 00       	call   4f4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
    4a64:	90                   	nop
    4a65:	c9                   	leave
    4a66:	c3                   	ret
    4a67:	90                   	nop

0000000000004a68 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4a68:	55                   	push   %rbp
    4a69:	48 89 e5             	mov    %rsp,%rbp
    4a6c:	48 83 ec 10          	sub    $0x10,%rsp
    4a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a78:	48 89 c7             	mov    %rax,%rdi
    4a7b:	e8 a2 07 00 00       	call   5222 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4a80:	90                   	nop
    4a81:	c9                   	leave
    4a82:	c3                   	ret
    4a83:	90                   	nop

0000000000004a84 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4a84:	55                   	push   %rbp
    4a85:	48 89 e5             	mov    %rsp,%rbp
    4a88:	48 83 ec 10          	sub    $0x10,%rsp
    4a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a94:	48 89 c7             	mov    %rax,%rdi
    4a97:	e8 8a 08 00 00       	call   5326 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4a9c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4aa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aab:	48 8b 00             	mov    (%rax),%rax
    4aae:	48 89 ce             	mov    %rcx,%rsi
    4ab1:	48 89 c7             	mov    %rax,%rdi
    4ab4:	e8 7b 08 00 00       	call   5334 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4abd:	48 89 c7             	mov    %rax,%rdi
    4ac0:	e8 13 08 00 00       	call   52d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4ac5:	90                   	nop
    4ac6:	c9                   	leave
    4ac7:	c3                   	ret

0000000000004ac8 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4ac8:	55                   	push   %rbp
    4ac9:	48 89 e5             	mov    %rsp,%rbp
    4acc:	48 83 ec 10          	sub    $0x10,%rsp
    4ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ad8:	48 89 c7             	mov    %rax,%rdi
    4adb:	e8 7e 08 00 00       	call   535e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    4ae0:	90                   	nop
    4ae1:	c9                   	leave
    4ae2:	c3                   	ret
    4ae3:	90                   	nop

0000000000004ae4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4ae4:	55                   	push   %rbp
    4ae5:	48 89 e5             	mov    %rsp,%rbp
    4ae8:	48 83 ec 10          	sub    $0x10,%rsp
    4aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4af4:	48 89 c7             	mov    %rax,%rdi
    4af7:	e8 6e 08 00 00       	call   536a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    4afc:	90                   	nop
    4afd:	c9                   	leave
    4afe:	c3                   	ret
    4aff:	90                   	nop

0000000000004b00 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4b00:	55                   	push   %rbp
    4b01:	48 89 e5             	mov    %rsp,%rbp
    4b04:	53                   	push   %rbx
    4b05:	48 83 ec 28          	sub    $0x28,%rsp
    4b09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4b0d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4b11:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4b15:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4b19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4b1d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b21:	48 89 d6             	mov    %rdx,%rsi
    4b24:	48 89 c7             	mov    %rax,%rdi
    4b27:	e8 49 08 00 00       	call   5375 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4b2c:	48 89 c1             	mov    %rax,%rcx
    4b2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b33:	48 89 c2             	mov    %rax,%rdx
    4b36:	48 89 ce             	mov    %rcx,%rsi
    4b39:	48 89 df             	mov    %rbx,%rdi
    4b3c:	e8 b1 08 00 00       	call   53f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4b41:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4b45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b49:	48 89 d6             	mov    %rdx,%rsi
    4b4c:	48 89 c7             	mov    %rax,%rdi
    4b4f:	e8 54 09 00 00       	call   54a8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    4b54:	eb 1a                	jmp    4b70 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4b56:	48 89 c3             	mov    %rax,%rbx
    4b59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b5d:	48 89 c7             	mov    %rax,%rdi
    4b60:	e8 eb 08 00 00       	call   5450 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4b65:	48 89 d8             	mov    %rbx,%rax
    4b68:	48 89 c7             	mov    %rax,%rdi
    4b6b:	e8 90 d8 ff ff       	call   2400 <_Unwind_Resume@plt>
    4b70:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b74:	c9                   	leave
    4b75:	c3                   	ret

0000000000004b76 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4b76:	55                   	push   %rbp
    4b77:	48 89 e5             	mov    %rsp,%rbp
    4b7a:	48 83 ec 10          	sub    $0x10,%rsp
    4b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b86:	48 89 c7             	mov    %rax,%rdi
    4b89:	e8 5a 09 00 00       	call   54e8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4b8e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b95:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4b99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b9d:	48 8b 00             	mov    (%rax),%rax
    4ba0:	48 89 ce             	mov    %rcx,%rsi
    4ba3:	48 89 c7             	mov    %rax,%rdi
    4ba6:	e8 4b 09 00 00       	call   54f6 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    4bab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4baf:	48 89 c7             	mov    %rax,%rdi
    4bb2:	e8 99 08 00 00       	call   5450 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    4bb7:	90                   	nop
    4bb8:	c9                   	leave
    4bb9:	c3                   	ret

0000000000004bba <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4bba:	55                   	push   %rbp
    4bbb:	48 89 e5             	mov    %rsp,%rbp
    4bbe:	48 83 ec 10          	sub    $0x10,%rsp
    4bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bca:	48 8b 10             	mov    (%rax),%rdx
    4bcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd1:	48 89 d6             	mov    %rdx,%rsi
    4bd4:	48 89 c7             	mov    %rax,%rdi
    4bd7:	e8 44 09 00 00       	call   5520 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4bdc:	c9                   	leave
    4bdd:	c3                   	ret

0000000000004bde <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4bde:	55                   	push   %rbp
    4bdf:	48 89 e5             	mov    %rsp,%rbp
    4be2:	48 83 ec 20          	sub    $0x20,%rsp
    4be6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4bea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4bee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4bf2:	48 89 d6             	mov    %rdx,%rsi
    4bf5:	48 89 c7             	mov    %rax,%rdi
    4bf8:	e8 35 09 00 00       	call   5532 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c01:	c9                   	leave
    4c02:	c3                   	ret
    4c03:	90                   	nop

0000000000004c04 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4c04:	55                   	push   %rbp
    4c05:	48 89 e5             	mov    %rsp,%rbp
    4c08:	48 83 ec 20          	sub    $0x20,%rsp
    4c0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4c10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c14:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4c18:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4c1c:	48 89 d6             	mov    %rdx,%rsi
    4c1f:	48 89 c7             	mov    %rax,%rdi
    4c22:	e8 0b 09 00 00       	call   5532 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c2b:	c9                   	leave
    4c2c:	c3                   	ret

0000000000004c2d <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4c2d:	55                   	push   %rbp
    4c2e:	48 89 e5             	mov    %rsp,%rbp
    4c31:	53                   	push   %rbx
    4c32:	48 83 ec 18          	sub    $0x18,%rsp
    4c36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c3a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    4c3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c42:	48 89 c7             	mov    %rax,%rdi
    4c45:	e8 06 09 00 00       	call   5550 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    4c4a:	48 8b 18             	mov    (%rax),%rbx
    4c4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4c51:	48 89 c7             	mov    %rax,%rdi
    4c54:	e8 f7 08 00 00       	call   5550 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    4c59:	48 8b 00             	mov    (%rax),%rax
    4c5c:	48 39 c3             	cmp    %rax,%rbx
    4c5f:	0f 95 c0             	setne  %al
    4c62:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4c66:	c9                   	leave
    4c67:	c3                   	ret

0000000000004c68 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    4c68:	55                   	push   %rbp
    4c69:	48 89 e5             	mov    %rsp,%rbp
    4c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    4c70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c74:	48 8b 00             	mov    (%rax),%rax
    4c77:	48 8d 50 18          	lea    0x18(%rax),%rdx
    4c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c7f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    4c82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    4c86:	5d                   	pop    %rbp
    4c87:	c3                   	ret

0000000000004c88 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    4c88:	55                   	push   %rbp
    4c89:	48 89 e5             	mov    %rsp,%rbp
    4c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    4c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c94:	48 8b 00             	mov    (%rax),%rax
    4c97:	5d                   	pop    %rbp
    4c98:	c3                   	ret
    4c99:	90                   	nop

0000000000004c9a <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    4c9a:	55                   	push   %rbp
    4c9b:	48 89 e5             	mov    %rsp,%rbp
    4c9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    4ca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ca6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    4caa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cae:	48 8b 00             	mov    (%rax),%rax
    4cb1:	48 29 c2             	sub    %rax,%rdx
    4cb4:	48 89 d0             	mov    %rdx,%rax
    4cb7:	48 c1 f8 03          	sar    $0x3,%rax
    4cbb:	5d                   	pop    %rbp
    4cbc:	c3                   	ret
    4cbd:	90                   	nop

0000000000004cbe <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    4cbe:	55                   	push   %rbp
    4cbf:	48 89 e5             	mov    %rsp,%rbp
    4cc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    4cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cce:	48 8b 00             	mov    (%rax),%rax
    4cd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cd5:	48 c1 e2 03          	shl    $0x3,%rdx
    4cd9:	48 01 d0             	add    %rdx,%rax
      }
    4cdc:	5d                   	pop    %rbp
    4cdd:	c3                   	ret

0000000000004cde <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4cde:	55                   	push   %rbp
    4cdf:	48 89 e5             	mov    %rsp,%rbp
    4ce2:	48 83 ec 10          	sub    $0x10,%rsp
    4ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4cee:	48 89 c7             	mov    %rax,%rdi
    4cf1:	e8 68 08 00 00       	call   555e <_ZNSt15__new_allocatorIPKcEC1Ev>
    4cf6:	90                   	nop
    4cf7:	c9                   	leave
    4cf8:	c3                   	ret
    4cf9:	90                   	nop

0000000000004cfa <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4cfa:	55                   	push   %rbp
    4cfb:	48 89 e5             	mov    %rsp,%rbp
    4cfe:	48 83 ec 10          	sub    $0x10,%rsp
    4d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d0a:	48 89 c7             	mov    %rax,%rdi
    4d0d:	e8 58 08 00 00       	call   556a <_ZNSt15__new_allocatorIPKcED1Ev>
    4d12:	90                   	nop
    4d13:	c9                   	leave
    4d14:	c3                   	ret
    4d15:	90                   	nop

0000000000004d16 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    4d16:	55                   	push   %rbp
    4d17:	48 89 e5             	mov    %rsp,%rbp
    4d1a:	53                   	push   %rbx
    4d1b:	48 83 ec 38          	sub    $0x38,%rsp
    4d1f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d23:	48 89 f0             	mov    %rsi,%rax
    4d26:	48 89 d6             	mov    %rdx,%rsi
    4d29:	48 89 f2             	mov    %rsi,%rdx
    4d2c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    4d30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    4d34:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    4d38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d3c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4d40:	48 89 d6             	mov    %rdx,%rsi
    4d43:	48 89 c7             	mov    %rax,%rdi
    4d46:	e8 47 08 00 00       	call   5592 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    4d4b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4d4f:	48 89 c7             	mov    %rax,%rdi
    4d52:	e8 c1 08 00 00       	call   5618 <_ZNKSt16initializer_listIPKcE3endEv>
    4d57:	48 89 c3             	mov    %rax,%rbx
    4d5a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4d5e:	48 89 c7             	mov    %rax,%rdi
    4d61:	e8 a0 08 00 00       	call   5606 <_ZNKSt16initializer_listIPKcE5beginEv>
    4d66:	48 89 c1             	mov    %rax,%rcx
    4d69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d6d:	48 89 da             	mov    %rbx,%rdx
    4d70:	48 89 ce             	mov    %rcx,%rsi
    4d73:	48 89 c7             	mov    %rax,%rdi
    4d76:	e8 03 09 00 00       	call   567e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    4d7b:	eb 1a                	jmp    4d97 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    4d7d:	48 89 c3             	mov    %rax,%rbx
    4d80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d84:	48 89 c7             	mov    %rax,%rdi
    4d87:	e8 2c 08 00 00       	call   55b8 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    4d8c:	48 89 d8             	mov    %rbx,%rax
    4d8f:	48 89 c7             	mov    %rax,%rdi
    4d92:	e8 69 d6 ff ff       	call   2400 <_Unwind_Resume@plt>
    4d97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4d9b:	c9                   	leave
    4d9c:	c3                   	ret
    4d9d:	90                   	nop

0000000000004d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4d9e:	55                   	push   %rbp
    4d9f:	48 89 e5             	mov    %rsp,%rbp
    4da2:	48 83 ec 10          	sub    $0x10,%rsp
    4da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4daa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dae:	48 89 c7             	mov    %rax,%rdi
    4db1:	e8 78 09 00 00       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    4db6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dbd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dc5:	48 8b 00             	mov    (%rax),%rax
    4dc8:	48 89 ce             	mov    %rcx,%rsi
    4dcb:	48 89 c7             	mov    %rax,%rdi
    4dce:	e8 69 09 00 00       	call   573c <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    4dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4dd7:	48 89 c7             	mov    %rax,%rdi
    4dda:	e8 d9 07 00 00       	call   55b8 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    4ddf:	90                   	nop
    4de0:	c9                   	leave
    4de1:	c3                   	ret

0000000000004de2 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4de2:	55                   	push   %rbp
    4de3:	48 89 e5             	mov    %rsp,%rbp
    4de6:	48 83 ec 10          	sub    $0x10,%rsp
    4dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4df2:	48 89 c7             	mov    %rax,%rdi
    4df5:	e8 6c 09 00 00       	call   5766 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    4dfa:	90                   	nop
    4dfb:	c9                   	leave
    4dfc:	c3                   	ret
    4dfd:	90                   	nop

0000000000004dfe <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    4dfe:	55                   	push   %rbp
    4dff:	48 89 e5             	mov    %rsp,%rbp
    4e02:	48 83 ec 10          	sub    $0x10,%rsp
    4e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e0e:	48 89 c7             	mov    %rax,%rdi
    4e11:	e8 5c 09 00 00       	call   5772 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    4e16:	90                   	nop
    4e17:	c9                   	leave
    4e18:	c3                   	ret
    4e19:	90                   	nop

0000000000004e1a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4e1a:	55                   	push   %rbp
    4e1b:	48 89 e5             	mov    %rsp,%rbp
    4e1e:	53                   	push   %rbx
    4e1f:	48 83 ec 28          	sub    $0x28,%rsp
    4e23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4e27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4e2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4e2f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4e33:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4e37:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e3b:	48 89 d6             	mov    %rdx,%rsi
    4e3e:	48 89 c7             	mov    %rax,%rdi
    4e41:	e8 37 09 00 00       	call   577d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    4e46:	48 89 c1             	mov    %rax,%rcx
    4e49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e4d:	48 89 c2             	mov    %rax,%rdx
    4e50:	48 89 ce             	mov    %rcx,%rsi
    4e53:	48 89 df             	mov    %rbx,%rdi
    4e56:	e8 9f 09 00 00       	call   57fa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    4e5b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4e5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e63:	48 89 d6             	mov    %rdx,%rsi
    4e66:	48 89 c7             	mov    %rax,%rdi
    4e69:	e8 42 0a 00 00       	call   58b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    4e6e:	eb 1a                	jmp    4e8a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    4e70:	48 89 c3             	mov    %rax,%rbx
    4e73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e77:	48 89 c7             	mov    %rax,%rdi
    4e7a:	e8 d9 09 00 00       	call   5858 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    4e7f:	48 89 d8             	mov    %rbx,%rax
    4e82:	48 89 c7             	mov    %rax,%rdi
    4e85:	e8 76 d5 ff ff       	call   2400 <_Unwind_Resume@plt>
    4e8a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4e8e:	c9                   	leave
    4e8f:	c3                   	ret

0000000000004e90 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4e90:	55                   	push   %rbp
    4e91:	48 89 e5             	mov    %rsp,%rbp
    4e94:	48 83 ec 10          	sub    $0x10,%rsp
    4e98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ea0:	48 89 c7             	mov    %rax,%rdi
    4ea3:	e8 48 0a 00 00       	call   58f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    4ea8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eaf:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eb7:	48 8b 00             	mov    (%rax),%rax
    4eba:	48 89 ce             	mov    %rcx,%rsi
    4ebd:	48 89 c7             	mov    %rax,%rdi
    4ec0:	e8 39 0a 00 00       	call   58fe <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    4ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ec9:	48 89 c7             	mov    %rax,%rdi
    4ecc:	e8 87 09 00 00       	call   5858 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    4ed1:	90                   	nop
    4ed2:	c9                   	leave
    4ed3:	c3                   	ret

0000000000004ed4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    4ed4:	55                   	push   %rbp
    4ed5:	48 89 e5             	mov    %rsp,%rbp
    4ed8:	48 83 ec 10          	sub    $0x10,%rsp
    4edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ee4:	48 8b 10             	mov    (%rax),%rdx
    4ee7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4eeb:	48 89 d6             	mov    %rdx,%rsi
    4eee:	48 89 c7             	mov    %rax,%rdi
    4ef1:	e8 32 0a 00 00       	call   5928 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    4ef6:	c9                   	leave
    4ef7:	c3                   	ret

0000000000004ef8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    4ef8:	55                   	push   %rbp
    4ef9:	48 89 e5             	mov    %rsp,%rbp
    4efc:	48 83 ec 10          	sub    $0x10,%rsp
    4f00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    4f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f08:	48 89 c7             	mov    %rax,%rdi
    4f0b:	e8 2a 0a 00 00       	call   593a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    4f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f14:	48 89 c7             	mov    %rax,%rdi
    4f17:	e8 3a 0a 00 00       	call   5956 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    4f1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f20:	48 83 c0 08          	add    $0x8,%rax
    4f24:	48 89 c7             	mov    %rax,%rdi
    4f27:	e8 6a fa ff ff       	call   4996 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    4f2c:	90                   	nop
    4f2d:	c9                   	leave
    4f2e:	c3                   	ret
    4f2f:	90                   	nop

0000000000004f30 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    4f30:	55                   	push   %rbp
    4f31:	48 89 e5             	mov    %rsp,%rbp
    4f34:	48 83 ec 10          	sub    $0x10,%rsp
    4f38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f40:	48 89 c7             	mov    %rax,%rdi
    4f43:	e8 1a 0a 00 00       	call   5962 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
    4f48:	90                   	nop
    4f49:	c9                   	leave
    4f4a:	c3                   	ret
    4f4b:	90                   	nop

0000000000004f4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    4f4c:	55                   	push   %rbp
    4f4d:	48 89 e5             	mov    %rsp,%rbp
    4f50:	48 83 ec 10          	sub    $0x10,%rsp
    4f54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    4f58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5c:	48 89 c7             	mov    %rax,%rdi
    4f5f:	e8 70 0a 00 00       	call   59d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    4f64:	48 89 c2             	mov    %rax,%rdx
    4f67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f6b:	48 89 d6             	mov    %rdx,%rsi
    4f6e:	48 89 c7             	mov    %rax,%rdi
    4f71:	e8 f8 09 00 00       	call   596e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
    4f76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f7a:	48 89 c7             	mov    %rax,%rdi
    4f7d:	e8 76 fa ff ff       	call   49f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
    4f82:	90                   	nop
    4f83:	c9                   	leave
    4f84:	c3                   	ret
    4f85:	90                   	nop

0000000000004f86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    4f86:	55                   	push   %rbp
    4f87:	48 89 e5             	mov    %rsp,%rbp
    4f8a:	48 83 ec 20          	sub    $0x20,%rsp
    4f8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    4f92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4f96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4f9a:	48 89 d6             	mov    %rdx,%rsi
    4f9d:	48 89 c7             	mov    %rax,%rdi
    4fa0:	e8 49 0a 00 00       	call   59ee <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa9:	c9                   	leave
    4faa:	c3                   	ret
    4fab:	90                   	nop

0000000000004fac <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    4fac:	55                   	push   %rbp
    4fad:	48 89 e5             	mov    %rsp,%rbp
    4fb0:	48 83 ec 20          	sub    $0x20,%rsp
    4fb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    4fb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fbc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    4fc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4fc4:	48 89 d6             	mov    %rdx,%rsi
    4fc7:	48 89 c7             	mov    %rax,%rdi
    4fca:	e8 1f 0a 00 00       	call   59ee <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    4fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fd3:	c9                   	leave
    4fd4:	c3                   	ret

0000000000004fd5 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    4fd5:	55                   	push   %rbp
    4fd6:	48 89 e5             	mov    %rsp,%rbp
    4fd9:	53                   	push   %rbx
    4fda:	48 83 ec 18          	sub    $0x18,%rsp
    4fde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4fe2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    4fe6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fea:	48 89 c7             	mov    %rax,%rdi
    4fed:	e8 1a 0a 00 00       	call   5a0c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    4ff2:	48 8b 18             	mov    (%rax),%rbx
    4ff5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ff9:	48 89 c7             	mov    %rax,%rdi
    4ffc:	e8 0b 0a 00 00       	call   5a0c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    5001:	48 8b 00             	mov    (%rax),%rax
    5004:	48 39 c3             	cmp    %rax,%rbx
    5007:	0f 95 c0             	setne  %al
    500a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    500e:	c9                   	leave
    500f:	c3                   	ret

0000000000005010 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    5010:	55                   	push   %rbp
    5011:	48 89 e5             	mov    %rsp,%rbp
    5014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    5018:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    501c:	48 8b 00             	mov    (%rax),%rax
    501f:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    5026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    502a:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    502d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    5031:	5d                   	pop    %rbp
    5032:	c3                   	ret
    5033:	90                   	nop

0000000000005034 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5034:	55                   	push   %rbp
    5035:	48 89 e5             	mov    %rsp,%rbp
    5038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    503c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5040:	48 8b 00             	mov    (%rax),%rax
    5043:	5d                   	pop    %rbp
    5044:	c3                   	ret
    5045:	90                   	nop

0000000000005046 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
    5046:	55                   	push   %rbp
    5047:	48 89 e5             	mov    %rsp,%rbp
    504a:	53                   	push   %rbx
    504b:	48 83 ec 48          	sub    $0x48,%rsp
    504f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5053:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
    5057:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    505b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    505f:	48 89 d6             	mov    %rdx,%rsi
    5062:	48 89 c7             	mov    %rax,%rdi
    5065:	e8 b0 09 00 00       	call   5a1a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
    506a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
    506e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5072:	48 89 c7             	mov    %rax,%rdi
    5075:	e8 c6 09 00 00       	call   5a40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
    507a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    507e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    5082:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5086:	48 89 d6             	mov    %rdx,%rsi
    5089:	48 89 c7             	mov    %rax,%rdi
    508c:	e8 c9 09 00 00       	call   5a5a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    5091:	84 c0                	test   %al,%al
    5093:	75 32                	jne    50c7 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
    5095:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5099:	48 89 c7             	mov    %rax,%rdi
    509c:	e8 db 09 00 00       	call   5a7c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
    50a1:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    50a5:	48 89 c7             	mov    %rax,%rdi
    50a8:	e8 eb 09 00 00       	call   5a98 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    50ad:	48 89 c2             	mov    %rax,%rdx
    50b0:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    50b4:	48 8d 45 de          	lea    -0x22(%rbp),%rax
    50b8:	48 89 ce             	mov    %rcx,%rsi
    50bb:	48 89 c7             	mov    %rax,%rdi
    50be:	e8 f3 09 00 00       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    50c3:	84 c0                	test   %al,%al
    50c5:	74 07                	je     50ce <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
    50c7:	b8 01 00 00 00       	mov    $0x1,%eax
    50cc:	eb 05                	jmp    50d3 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
    50ce:	b8 00 00 00 00       	mov    $0x0,%eax
    50d3:	84 c0                	test   %al,%al
    50d5:	74 5d                	je     5134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    50d7:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
    50db:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    50df:	48 89 c7             	mov    %rax,%rdi
    50e2:	e8 f8 09 00 00       	call   5adf <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
    50e7:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
    50ea:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    50ee:	48 89 d6             	mov    %rdx,%rsi
    50f1:	48 89 c7             	mov    %rax,%rdi
    50f4:	e8 f4 09 00 00       	call   5aed <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
    50f9:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    50fd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5101:	48 89 d6             	mov    %rdx,%rsi
    5104:	48 89 c7             	mov    %rax,%rdi
    5107:	e8 16 0a 00 00       	call   5b22 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
    510c:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
    5110:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    5114:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5118:	49 89 c8             	mov    %rcx,%r8
    511b:	48 89 d1             	mov    %rdx,%rcx
    511e:	48 8d 15 53 5d 00 00 	lea    0x5d53(%rip),%rdx        # ae78 <_ZSt19piecewise_construct>
    5125:	48 89 c6             	mov    %rax,%rsi
    5128:	48 89 df             	mov    %rbx,%rdi
    512b:	e8 10 0a 00 00       	call   5b40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
    5130:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
    5134:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5138:	48 89 c7             	mov    %rax,%rdi
    513b:	e8 58 09 00 00       	call   5a98 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
    5140:	48 83 c0 20          	add    $0x20,%rax
      }
    5144:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5148:	c9                   	leave
    5149:	c3                   	ret

000000000000514a <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    514a:	55                   	push   %rbp
    514b:	48 89 e5             	mov    %rsp,%rbp
    514e:	48 83 ec 20          	sub    $0x20,%rsp
    5152:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    5156:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    515a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    515e:	48 89 d6             	mov    %rdx,%rsi
    5161:	48 89 c7             	mov    %rax,%rdi
    5164:	e8 d3 0a 00 00       	call   5c3c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    5169:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    516d:	c9                   	leave
    516e:	c3                   	ret
    516f:	90                   	nop

0000000000005170 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    5170:	55                   	push   %rbp
    5171:	48 89 e5             	mov    %rsp,%rbp
    5174:	48 83 ec 20          	sub    $0x20,%rsp
    5178:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    517c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5180:	48 8d 50 08          	lea    0x8(%rax),%rdx
    5184:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5188:	48 89 d6             	mov    %rdx,%rsi
    518b:	48 89 c7             	mov    %rax,%rdi
    518e:	e8 a9 0a 00 00       	call   5c3c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    5193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5197:	c9                   	leave
    5198:	c3                   	ret

0000000000005199 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5199:	55                   	push   %rbp
    519a:	48 89 e5             	mov    %rsp,%rbp
    519d:	53                   	push   %rbx
    519e:	48 83 ec 18          	sub    $0x18,%rsp
    51a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    51a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    51aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51ae:	48 89 c7             	mov    %rax,%rdi
    51b1:	e8 a4 0a 00 00       	call   5c5a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    51b6:	48 8b 18             	mov    (%rax),%rbx
    51b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    51bd:	48 89 c7             	mov    %rax,%rdi
    51c0:	e8 95 0a 00 00       	call   5c5a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    51c5:	48 8b 00             	mov    (%rax),%rax
    51c8:	48 39 c3             	cmp    %rax,%rbx
    51cb:	0f 95 c0             	setne  %al
    51ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    51d2:	c9                   	leave
    51d3:	c3                   	ret

00000000000051d4 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    51d4:	55                   	push   %rbp
    51d5:	48 89 e5             	mov    %rsp,%rbp
    51d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    51dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e0:	48 8b 00             	mov    (%rax),%rax
    51e3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    51e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51eb:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    51ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    51f2:	5d                   	pop    %rbp
    51f3:	c3                   	ret

00000000000051f4 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    51f4:	55                   	push   %rbp
    51f5:	48 89 e5             	mov    %rsp,%rbp
    51f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    51fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5200:	48 8b 00             	mov    (%rax),%rax
    5203:	5d                   	pop    %rbp
    5204:	c3                   	ret
    5205:	90                   	nop

0000000000005206 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    5206:	55                   	push   %rbp
    5207:	48 89 e5             	mov    %rsp,%rbp
    520a:	48 83 ec 10          	sub    $0x10,%rsp
    520e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5216:	48 89 c7             	mov    %rax,%rdi
    5219:	e8 4a 0a 00 00       	call   5c68 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    521e:	90                   	nop
    521f:	c9                   	leave
    5220:	c3                   	ret
    5221:	90                   	nop

0000000000005222 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    5222:	55                   	push   %rbp
    5223:	48 89 e5             	mov    %rsp,%rbp
    5226:	48 83 ec 10          	sub    $0x10,%rsp
    522a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    522e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5232:	48 89 c7             	mov    %rax,%rdi
    5235:	e8 3a 0a 00 00       	call   5c74 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    523a:	90                   	nop
    523b:	c9                   	leave
    523c:	c3                   	ret
    523d:	90                   	nop

000000000000523e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    523e:	55                   	push   %rbp
    523f:	48 89 e5             	mov    %rsp,%rbp
    5242:	53                   	push   %rbx
    5243:	48 83 ec 28          	sub    $0x28,%rsp
    5247:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    524b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    524f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5253:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5257:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    525b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    525f:	48 89 d6             	mov    %rdx,%rsi
    5262:	48 89 c7             	mov    %rax,%rdi
    5265:	e8 15 0a 00 00       	call   5c7f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    526a:	48 89 c1             	mov    %rax,%rcx
    526d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5271:	48 89 c2             	mov    %rax,%rdx
    5274:	48 89 ce             	mov    %rcx,%rsi
    5277:	48 89 df             	mov    %rbx,%rdi
    527a:	e8 61 0a 00 00       	call   5ce0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    527f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5283:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5287:	48 89 d6             	mov    %rdx,%rsi
    528a:	48 89 c7             	mov    %rax,%rdi
    528d:	e8 ac 0a 00 00       	call   5d3e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    5292:	eb 1a                	jmp    52ae <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    5294:	48 89 c3             	mov    %rax,%rbx
    5297:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    529b:	48 89 c7             	mov    %rax,%rdi
    529e:	e8 35 00 00 00       	call   52d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    52a3:	48 89 d8             	mov    %rbx,%rax
    52a6:	48 89 c7             	mov    %rax,%rdi
    52a9:	e8 52 d1 ff ff       	call   2400 <_Unwind_Resume@plt>
    52ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    52b2:	c9                   	leave
    52b3:	c3                   	ret

00000000000052b4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    52b4:	55                   	push   %rbp
    52b5:	48 89 e5             	mov    %rsp,%rbp
    52b8:	48 83 ec 10          	sub    $0x10,%rsp
    52bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    52c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c4:	48 8b 10             	mov    (%rax),%rdx
    52c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52cb:	48 89 d6             	mov    %rdx,%rsi
    52ce:	48 89 c7             	mov    %rax,%rdi
    52d1:	e8 a8 0a 00 00       	call   5d7e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    52d6:	c9                   	leave
    52d7:	c3                   	ret

00000000000052d8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    52d8:	55                   	push   %rbp
    52d9:	48 89 e5             	mov    %rsp,%rbp
    52dc:	48 83 ec 10          	sub    $0x10,%rsp
    52e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    52e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    52ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52f0:	48 8b 00             	mov    (%rax),%rax
    52f3:	48 29 c2             	sub    %rax,%rdx
    52f6:	48 89 d0             	mov    %rdx,%rax
    52f9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    52fd:	48 89 c2             	mov    %rax,%rdx
    5300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5304:	48 8b 08             	mov    (%rax),%rcx
    5307:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    530b:	48 89 ce             	mov    %rcx,%rsi
    530e:	48 89 c7             	mov    %rax,%rdi
    5311:	e8 a0 0a 00 00       	call   5db6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    5316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    531a:	48 89 c7             	mov    %rax,%rdi
    531d:	e8 46 f7 ff ff       	call   4a68 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5322:	90                   	nop
    5323:	c9                   	leave
    5324:	c3                   	ret
    5325:	90                   	nop

0000000000005326 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5326:	55                   	push   %rbp
    5327:	48 89 e5             	mov    %rsp,%rbp
    532a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    532e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5332:	5d                   	pop    %rbp
    5333:	c3                   	ret

0000000000005334 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5334:	55                   	push   %rbp
    5335:	48 89 e5             	mov    %rsp,%rbp
    5338:	48 83 ec 20          	sub    $0x20,%rsp
    533c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5344:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5348:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    534c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5350:	48 89 d6             	mov    %rdx,%rsi
    5353:	48 89 c7             	mov    %rax,%rdi
    5356:	e8 90 0a 00 00       	call   5deb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    535b:	90                   	nop
    535c:	c9                   	leave
    535d:	c3                   	ret

000000000000535e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    535e:	55                   	push   %rbp
    535f:	48 89 e5             	mov    %rsp,%rbp
    5362:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5366:	90                   	nop
    5367:	5d                   	pop    %rbp
    5368:	c3                   	ret
    5369:	90                   	nop

000000000000536a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    536a:	55                   	push   %rbp
    536b:	48 89 e5             	mov    %rsp,%rbp
    536e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5372:	90                   	nop
    5373:	5d                   	pop    %rbp
    5374:	c3                   	ret

0000000000005375 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5375:	55                   	push   %rbp
    5376:	48 89 e5             	mov    %rsp,%rbp
    5379:	53                   	push   %rbx
    537a:	48 83 ec 28          	sub    $0x28,%rsp
    537e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5382:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5386:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    538a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    538e:	48 89 d6             	mov    %rdx,%rsi
    5391:	48 89 c7             	mov    %rax,%rdi
    5394:	e8 bb 0a 00 00       	call   5e54 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5399:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    539d:	48 89 c7             	mov    %rax,%rdi
    53a0:	e8 6c 0a 00 00       	call   5e11 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    53a5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    53a9:	0f 92 c3             	setb   %bl
    53ac:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    53b0:	48 89 c7             	mov    %rax,%rdi
    53b3:	e8 2c f7 ff ff       	call   4ae4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    53b8:	84 db                	test   %bl,%bl
    53ba:	74 0f                	je     53cb <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    53bc:	48 8d 05 7d 5a 00 00 	lea    0x5a7d(%rip),%rax        # ae40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    53c3:	48 89 c7             	mov    %rax,%rdi
    53c6:	e8 25 cd ff ff       	call   20f0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    53cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    53cf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    53d3:	c9                   	leave
    53d4:	c3                   	ret
    53d5:	90                   	nop

00000000000053d6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    53d6:	55                   	push   %rbp
    53d7:	48 89 e5             	mov    %rsp,%rbp
    53da:	48 83 ec 10          	sub    $0x10,%rsp
    53de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53e6:	48 89 c7             	mov    %rax,%rdi
    53e9:	e8 f6 f6 ff ff       	call   4ae4 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    53ee:	90                   	nop
    53ef:	c9                   	leave
    53f0:	c3                   	ret
    53f1:	90                   	nop

00000000000053f2 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    53f2:	55                   	push   %rbp
    53f3:	48 89 e5             	mov    %rsp,%rbp
    53f6:	53                   	push   %rbx
    53f7:	48 83 ec 28          	sub    $0x28,%rsp
    53fb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53ff:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5403:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5407:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    540b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    540f:	48 89 d6             	mov    %rdx,%rsi
    5412:	48 89 c7             	mov    %rax,%rdi
    5415:	e8 60 0a 00 00       	call   5e7a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    541a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    541e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5422:	48 89 d6             	mov    %rdx,%rsi
    5425:	48 89 c7             	mov    %rax,%rdi
    5428:	e8 7f 0a 00 00       	call   5eac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    542d:	eb 1a                	jmp    5449 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    542f:	48 89 c3             	mov    %rax,%rbx
    5432:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5436:	48 89 c7             	mov    %rax,%rdi
    5439:	e8 98 ff ff ff       	call   53d6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    543e:	48 89 d8             	mov    %rbx,%rax
    5441:	48 89 c7             	mov    %rax,%rdi
    5444:	e8 b7 cf ff ff       	call   2400 <_Unwind_Resume@plt>
    5449:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    544d:	c9                   	leave
    544e:	c3                   	ret
    544f:	90                   	nop

0000000000005450 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5450:	55                   	push   %rbp
    5451:	48 89 e5             	mov    %rsp,%rbp
    5454:	48 83 ec 10          	sub    $0x10,%rsp
    5458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    545c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5460:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5468:	48 8b 00             	mov    (%rax),%rax
    546b:	48 29 c2             	sub    %rax,%rdx
    546e:	48 c1 fa 03          	sar    $0x3,%rdx
    5472:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    5479:	aa aa aa 
    547c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5480:	48 89 c2             	mov    %rax,%rdx
    5483:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5487:	48 8b 08             	mov    (%rax),%rcx
    548a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    548e:	48 89 ce             	mov    %rcx,%rsi
    5491:	48 89 c7             	mov    %rax,%rdi
    5494:	e8 73 0a 00 00       	call   5f0c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    5499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    549d:	48 89 c7             	mov    %rax,%rdi
    54a0:	e8 31 ff ff ff       	call   53d6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    54a5:	90                   	nop
    54a6:	c9                   	leave
    54a7:	c3                   	ret

00000000000054a8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    54a8:	55                   	push   %rbp
    54a9:	48 89 e5             	mov    %rsp,%rbp
    54ac:	48 83 ec 10          	sub    $0x10,%rsp
    54b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    54b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54bc:	48 89 c7             	mov    %rax,%rdi
    54bf:	e8 24 00 00 00       	call   54e8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    54c4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    54c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54cb:	48 8b 00             	mov    (%rax),%rax
    54ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    54d2:	48 89 ce             	mov    %rcx,%rsi
    54d5:	48 89 c7             	mov    %rax,%rdi
    54d8:	e8 64 0a 00 00       	call   5f41 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    54dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    54e1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    54e5:	90                   	nop
    54e6:	c9                   	leave
    54e7:	c3                   	ret

00000000000054e8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    54e8:	55                   	push   %rbp
    54e9:	48 89 e5             	mov    %rsp,%rbp
    54ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    54f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f4:	5d                   	pop    %rbp
    54f5:	c3                   	ret

00000000000054f6 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    54f6:	55                   	push   %rbp
    54f7:	48 89 e5             	mov    %rsp,%rbp
    54fa:	48 83 ec 20          	sub    $0x20,%rsp
    54fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5502:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5506:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    550a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    550e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5512:	48 89 d6             	mov    %rdx,%rsi
    5515:	48 89 c7             	mov    %rax,%rdi
    5518:	e8 4d 0a 00 00       	call   5f6a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    551d:	90                   	nop
    551e:	c9                   	leave
    551f:	c3                   	ret

0000000000005520 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5520:	55                   	push   %rbp
    5521:	48 89 e5             	mov    %rsp,%rbp
    5524:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5528:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    552c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5530:	5d                   	pop    %rbp
    5531:	c3                   	ret

0000000000005532 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5532:	55                   	push   %rbp
    5533:	48 89 e5             	mov    %rsp,%rbp
    5536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    553a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    553e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5542:	48 8b 10             	mov    (%rax),%rdx
    5545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5549:	48 89 10             	mov    %rdx,(%rax)
    554c:	90                   	nop
    554d:	5d                   	pop    %rbp
    554e:	c3                   	ret
    554f:	90                   	nop

0000000000005550 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5550:	55                   	push   %rbp
    5551:	48 89 e5             	mov    %rsp,%rbp
    5554:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5558:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    555c:	5d                   	pop    %rbp
    555d:	c3                   	ret

000000000000555e <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    555e:	55                   	push   %rbp
    555f:	48 89 e5             	mov    %rsp,%rbp
    5562:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5566:	90                   	nop
    5567:	5d                   	pop    %rbp
    5568:	c3                   	ret
    5569:	90                   	nop

000000000000556a <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    556a:	55                   	push   %rbp
    556b:	48 89 e5             	mov    %rsp,%rbp
    556e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5572:	90                   	nop
    5573:	5d                   	pop    %rbp
    5574:	c3                   	ret
    5575:	90                   	nop

0000000000005576 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5576:	55                   	push   %rbp
    5577:	48 89 e5             	mov    %rsp,%rbp
    557a:	48 83 ec 10          	sub    $0x10,%rsp
    557e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5586:	48 89 c7             	mov    %rax,%rdi
    5589:	e8 6c f7 ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
    558e:	90                   	nop
    558f:	c9                   	leave
    5590:	c3                   	ret
    5591:	90                   	nop

0000000000005592 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5592:	55                   	push   %rbp
    5593:	48 89 e5             	mov    %rsp,%rbp
    5596:	48 83 ec 10          	sub    $0x10,%rsp
    559a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    559e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    55a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    55aa:	48 89 d6             	mov    %rdx,%rsi
    55ad:	48 89 c7             	mov    %rax,%rdi
    55b0:	e8 db 09 00 00       	call   5f90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    55b5:	90                   	nop
    55b6:	c9                   	leave
    55b7:	c3                   	ret

00000000000055b8 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    55b8:	55                   	push   %rbp
    55b9:	48 89 e5             	mov    %rsp,%rbp
    55bc:	48 83 ec 10          	sub    $0x10,%rsp
    55c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    55c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55c8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    55cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d0:	48 8b 00             	mov    (%rax),%rax
    55d3:	48 29 c2             	sub    %rax,%rdx
    55d6:	48 89 d0             	mov    %rdx,%rax
    55d9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    55dd:	48 89 c2             	mov    %rax,%rdx
    55e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55e4:	48 8b 08             	mov    (%rax),%rcx
    55e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55eb:	48 89 ce             	mov    %rcx,%rsi
    55ee:	48 89 c7             	mov    %rax,%rdi
    55f1:	e8 cc 09 00 00       	call   5fc2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    55f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fa:	48 89 c7             	mov    %rax,%rdi
    55fd:	e8 74 ff ff ff       	call   5576 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    5602:	90                   	nop
    5603:	c9                   	leave
    5604:	c3                   	ret
    5605:	90                   	nop

0000000000005606 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    5606:	55                   	push   %rbp
    5607:	48 89 e5             	mov    %rsp,%rbp
    560a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    560e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5612:	48 8b 00             	mov    (%rax),%rax
    5615:	5d                   	pop    %rbp
    5616:	c3                   	ret
    5617:	90                   	nop

0000000000005618 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    5618:	55                   	push   %rbp
    5619:	48 89 e5             	mov    %rsp,%rbp
    561c:	53                   	push   %rbx
    561d:	48 83 ec 18          	sub    $0x18,%rsp
    5621:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5625:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5629:	48 89 c7             	mov    %rax,%rdi
    562c:	e8 d5 ff ff ff       	call   5606 <_ZNKSt16initializer_listIPKcE5beginEv>
    5631:	48 89 c3             	mov    %rax,%rbx
    5634:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5638:	48 89 c7             	mov    %rax,%rdi
    563b:	e8 b8 09 00 00       	call   5ff8 <_ZNKSt16initializer_listIPKcE4sizeEv>
    5640:	48 c1 e0 03          	shl    $0x3,%rax
    5644:	48 01 d8             	add    %rbx,%rax
    5647:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    564b:	c9                   	leave
    564c:	c3                   	ret

000000000000564d <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
    564d:	55                   	push   %rbp
    564e:	48 89 e5             	mov    %rsp,%rbp
    5651:	48 83 ec 10          	sub    $0x10,%rsp
    5655:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5659:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    565d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5661:	48 89 c7             	mov    %rax,%rdi
    5664:	e8 a1 09 00 00       	call   600a <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    5669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    566d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5671:	48 89 d6             	mov    %rdx,%rsi
    5674:	48 89 c7             	mov    %rax,%rdi
    5677:	e8 99 09 00 00       	call   6015 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    567c:	c9                   	leave
    567d:	c3                   	ret

000000000000567e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    567e:	55                   	push   %rbp
    567f:	48 89 e5             	mov    %rsp,%rbp
    5682:	53                   	push   %rbx
    5683:	48 83 ec 38          	sub    $0x38,%rsp
    5687:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    568b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    568f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5693:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5697:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    569b:	48 89 d6             	mov    %rdx,%rsi
    569e:	48 89 c7             	mov    %rax,%rdi
    56a1:	e8 a7 ff ff ff       	call   564d <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    56a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    56aa:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    56ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56b2:	48 89 c7             	mov    %rax,%rdi
    56b5:	e8 74 00 00 00       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    56ba:	48 89 c2             	mov    %rax,%rdx
    56bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56c1:	48 89 d6             	mov    %rdx,%rsi
    56c4:	48 89 c7             	mov    %rax,%rdi
    56c7:	e8 63 09 00 00       	call   602f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    56cc:	48 89 c6             	mov    %rax,%rsi
    56cf:	48 89 df             	mov    %rbx,%rdi
    56d2:	e8 b9 09 00 00       	call   6090 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    56d7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    56db:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    56de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56e2:	48 8b 00             	mov    (%rax),%rax
    56e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    56e9:	48 c1 e2 03          	shl    $0x3,%rdx
    56ed:	48 01 c2             	add    %rax,%rdx
    56f0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56f4:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    56f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56fc:	48 89 c7             	mov    %rax,%rdi
    56ff:	e8 2a 00 00 00       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    5704:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    570b:	48 8b 10             	mov    (%rax),%rdx
    570e:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5712:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5716:	48 89 c7             	mov    %rax,%rdi
    5719:	e8 a5 09 00 00       	call   60c3 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    571e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5722:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5726:	90                   	nop
    5727:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    572b:	c9                   	leave
    572c:	c3                   	ret
    572d:	90                   	nop

000000000000572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    572e:	55                   	push   %rbp
    572f:	48 89 e5             	mov    %rsp,%rbp
    5732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    573a:	5d                   	pop    %rbp
    573b:	c3                   	ret

000000000000573c <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    573c:	55                   	push   %rbp
    573d:	48 89 e5             	mov    %rsp,%rbp
    5740:	48 83 ec 20          	sub    $0x20,%rsp
    5744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    574c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5750:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5754:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5758:	48 89 d6             	mov    %rdx,%rsi
    575b:	48 89 c7             	mov    %rax,%rdi
    575e:	e8 91 09 00 00       	call   60f4 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    5763:	90                   	nop
    5764:	c9                   	leave
    5765:	c3                   	ret

0000000000005766 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5766:	55                   	push   %rbp
    5767:	48 89 e5             	mov    %rsp,%rbp
    576a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    576e:	90                   	nop
    576f:	5d                   	pop    %rbp
    5770:	c3                   	ret
    5771:	90                   	nop

0000000000005772 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5772:	55                   	push   %rbp
    5773:	48 89 e5             	mov    %rsp,%rbp
    5776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    577a:	90                   	nop
    577b:	5d                   	pop    %rbp
    577c:	c3                   	ret

000000000000577d <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    577d:	55                   	push   %rbp
    577e:	48 89 e5             	mov    %rsp,%rbp
    5781:	53                   	push   %rbx
    5782:	48 83 ec 28          	sub    $0x28,%rsp
    5786:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    578a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    578e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5792:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5796:	48 89 d6             	mov    %rdx,%rsi
    5799:	48 89 c7             	mov    %rax,%rdi
    579c:	e8 bb 09 00 00       	call   615c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    57a1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57a5:	48 89 c7             	mov    %rax,%rdi
    57a8:	e8 6d 09 00 00       	call   611a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    57ad:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    57b1:	0f 92 c3             	setb   %bl
    57b4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57b8:	48 89 c7             	mov    %rax,%rdi
    57bb:	e8 3e f6 ff ff       	call   4dfe <_ZNSaI21VkExtensionPropertiesED1Ev>
    57c0:	84 db                	test   %bl,%bl
    57c2:	74 0f                	je     57d3 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    57c4:	48 8d 05 75 56 00 00 	lea    0x5675(%rip),%rax        # ae40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    57cb:	48 89 c7             	mov    %rax,%rdi
    57ce:	e8 1d c9 ff ff       	call   20f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    57d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    57d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57db:	c9                   	leave
    57dc:	c3                   	ret
    57dd:	90                   	nop

00000000000057de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    57de:	55                   	push   %rbp
    57df:	48 89 e5             	mov    %rsp,%rbp
    57e2:	48 83 ec 10          	sub    $0x10,%rsp
    57e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    57ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    57ee:	48 89 c7             	mov    %rax,%rdi
    57f1:	e8 08 f6 ff ff       	call   4dfe <_ZNSaI21VkExtensionPropertiesED1Ev>
    57f6:	90                   	nop
    57f7:	c9                   	leave
    57f8:	c3                   	ret
    57f9:	90                   	nop

00000000000057fa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    57fa:	55                   	push   %rbp
    57fb:	48 89 e5             	mov    %rsp,%rbp
    57fe:	53                   	push   %rbx
    57ff:	48 83 ec 28          	sub    $0x28,%rsp
    5803:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5807:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    580b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    580f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5813:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5817:	48 89 d6             	mov    %rdx,%rsi
    581a:	48 89 c7             	mov    %rax,%rdi
    581d:	e8 60 09 00 00       	call   6182 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    5822:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    582a:	48 89 d6             	mov    %rdx,%rsi
    582d:	48 89 c7             	mov    %rax,%rdi
    5830:	e8 7f 09 00 00       	call   61b4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    5835:	eb 1a                	jmp    5851 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    5837:	48 89 c3             	mov    %rax,%rbx
    583a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    583e:	48 89 c7             	mov    %rax,%rdi
    5841:	e8 98 ff ff ff       	call   57de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    5846:	48 89 d8             	mov    %rbx,%rax
    5849:	48 89 c7             	mov    %rax,%rdi
    584c:	e8 af cb ff ff       	call   2400 <_Unwind_Resume@plt>
    5851:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5855:	c9                   	leave
    5856:	c3                   	ret
    5857:	90                   	nop

0000000000005858 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5858:	55                   	push   %rbp
    5859:	48 89 e5             	mov    %rsp,%rbp
    585c:	48 83 ec 10          	sub    $0x10,%rsp
    5860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5868:	48 8b 50 10          	mov    0x10(%rax),%rdx
    586c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5870:	48 8b 00             	mov    (%rax),%rax
    5873:	48 29 c2             	sub    %rax,%rdx
    5876:	48 c1 fa 02          	sar    $0x2,%rdx
    587a:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    5881:	fc c0 0f 
    5884:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    5888:	48 89 c2             	mov    %rax,%rdx
    588b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    588f:	48 8b 08             	mov    (%rax),%rcx
    5892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5896:	48 89 ce             	mov    %rcx,%rsi
    5899:	48 89 c7             	mov    %rax,%rdi
    589c:	e8 75 09 00 00       	call   6216 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    58a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58a5:	48 89 c7             	mov    %rax,%rdi
    58a8:	e8 31 ff ff ff       	call   57de <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    58ad:	90                   	nop
    58ae:	c9                   	leave
    58af:	c3                   	ret

00000000000058b0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    58b0:	55                   	push   %rbp
    58b1:	48 89 e5             	mov    %rsp,%rbp
    58b4:	48 83 ec 10          	sub    $0x10,%rsp
    58b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    58c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58c4:	48 89 c7             	mov    %rax,%rdi
    58c7:	e8 24 00 00 00       	call   58f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    58cc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    58cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58d3:	48 8b 00             	mov    (%rax),%rax
    58d6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    58da:	48 89 ce             	mov    %rcx,%rsi
    58dd:	48 89 c7             	mov    %rax,%rdi
    58e0:	e8 66 09 00 00       	call   624b <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    58e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    58e9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    58ed:	90                   	nop
    58ee:	c9                   	leave
    58ef:	c3                   	ret

00000000000058f0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    58f0:	55                   	push   %rbp
    58f1:	48 89 e5             	mov    %rsp,%rbp
    58f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    58f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58fc:	5d                   	pop    %rbp
    58fd:	c3                   	ret

00000000000058fe <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    58fe:	55                   	push   %rbp
    58ff:	48 89 e5             	mov    %rsp,%rbp
    5902:	48 83 ec 20          	sub    $0x20,%rsp
    5906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    590a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    590e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    5912:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    591a:	48 89 d6             	mov    %rdx,%rsi
    591d:	48 89 c7             	mov    %rax,%rdi
    5920:	e8 4f 09 00 00       	call   6274 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    5925:	90                   	nop
    5926:	c9                   	leave
    5927:	c3                   	ret

0000000000005928 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5928:	55                   	push   %rbp
    5929:	48 89 e5             	mov    %rsp,%rbp
    592c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5930:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5934:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5938:	5d                   	pop    %rbp
    5939:	c3                   	ret

000000000000593a <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    593a:	55                   	push   %rbp
    593b:	48 89 e5             	mov    %rsp,%rbp
    593e:	48 83 ec 10          	sub    $0x10,%rsp
    5942:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    594a:	48 89 c7             	mov    %rax,%rdi
    594d:	e8 48 09 00 00       	call   629a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
    5952:	90                   	nop
    5953:	c9                   	leave
    5954:	c3                   	ret
    5955:	90                   	nop

0000000000005956 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    5956:	55                   	push   %rbp
    5957:	48 89 e5             	mov    %rsp,%rbp
    595a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    595e:	90                   	nop
    595f:	5d                   	pop    %rbp
    5960:	c3                   	ret
    5961:	90                   	nop

0000000000005962 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
    5962:	55                   	push   %rbp
    5963:	48 89 e5             	mov    %rsp,%rbp
    5966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    596a:	90                   	nop
    596b:	5d                   	pop    %rbp
    596c:	c3                   	ret
    596d:	90                   	nop

000000000000596e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    596e:	55                   	push   %rbp
    596f:	48 89 e5             	mov    %rsp,%rbp
    5972:	48 83 ec 20          	sub    $0x20,%rsp
    5976:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    597a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    597e:	eb 49                	jmp    59c9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    5980:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5984:	48 89 c7             	mov    %rax,%rdi
    5987:	e8 19 09 00 00       	call   62a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    598c:	48 89 c2             	mov    %rax,%rdx
    598f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5993:	48 89 d6             	mov    %rdx,%rsi
    5996:	48 89 c7             	mov    %rax,%rdi
    5999:	e8 d0 ff ff ff       	call   596e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
    599e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    59a2:	48 89 c7             	mov    %rax,%rdi
    59a5:	e8 0d 09 00 00       	call   62b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    59aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    59ae:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    59b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59b6:	48 89 d6             	mov    %rdx,%rsi
    59b9:	48 89 c7             	mov    %rax,%rdi
    59bc:	e8 09 09 00 00       	call   62ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
    59c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    59c9:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    59ce:	75 b0                	jne    5980 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
    59d0:	90                   	nop
    59d1:	90                   	nop
    59d2:	c9                   	leave
    59d3:	c3                   	ret

00000000000059d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    59d4:	55                   	push   %rbp
    59d5:	48 89 e5             	mov    %rsp,%rbp
    59d8:	48 83 ec 10          	sub    $0x10,%rsp
    59dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    59e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59e4:	48 89 c7             	mov    %rax,%rdi
    59e7:	e8 18 09 00 00       	call   6304 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
    59ec:	c9                   	leave
    59ed:	c3                   	ret

00000000000059ee <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    59ee:	55                   	push   %rbp
    59ef:	48 89 e5             	mov    %rsp,%rbp
    59f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    59fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    59fe:	48 8b 10             	mov    (%rax),%rdx
    5a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a05:	48 89 10             	mov    %rdx,(%rax)
    5a08:	90                   	nop
    5a09:	5d                   	pop    %rbp
    5a0a:	c3                   	ret
    5a0b:	90                   	nop

0000000000005a0c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5a0c:	55                   	push   %rbp
    5a0d:	48 89 e5             	mov    %rsp,%rbp
    5a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a18:	5d                   	pop    %rbp
    5a19:	c3                   	ret

0000000000005a1a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
    5a1a:	55                   	push   %rbp
    5a1b:	48 89 e5             	mov    %rsp,%rbp
    5a1e:	48 83 ec 10          	sub    $0x10,%rsp
    5a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
    5a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a32:	48 89 d6             	mov    %rdx,%rsi
    5a35:	48 89 c7             	mov    %rax,%rdi
    5a38:	e8 d9 08 00 00       	call   6316 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
    5a3d:	c9                   	leave
    5a3e:	c3                   	ret
    5a3f:	90                   	nop

0000000000005a40 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    5a40:	55                   	push   %rbp
    5a41:	48 89 e5             	mov    %rsp,%rbp
    5a44:	48 83 ec 10          	sub    $0x10,%rsp
    5a48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    5a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a50:	48 89 c7             	mov    %rax,%rdi
    5a53:	e8 0a 09 00 00       	call   6362 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
    5a58:	c9                   	leave
    5a59:	c3                   	ret

0000000000005a5a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    5a5a:	55                   	push   %rbp
    5a5b:	48 89 e5             	mov    %rsp,%rbp
    5a5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    5a66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a6a:	48 8b 10             	mov    (%rax),%rdx
    5a6d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5a71:	48 8b 00             	mov    (%rax),%rax
    5a74:	48 39 c2             	cmp    %rax,%rdx
    5a77:	0f 94 c0             	sete   %al
    5a7a:	5d                   	pop    %rbp
    5a7b:	c3                   	ret

0000000000005a7c <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
    5a7c:	55                   	push   %rbp
    5a7d:	48 89 e5             	mov    %rsp,%rbp
    5a80:	48 83 ec 10          	sub    $0x10,%rsp
    5a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
    5a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a8c:	48 89 c7             	mov    %rax,%rdi
    5a8f:	e8 f8 08 00 00       	call   638c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
    5a94:	90                   	nop
    5a95:	c9                   	leave
    5a96:	c3                   	ret
    5a97:	90                   	nop

0000000000005a98 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    5a98:	55                   	push   %rbp
    5a99:	48 89 e5             	mov    %rsp,%rbp
    5a9c:	48 83 ec 10          	sub    $0x10,%rsp
    5aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    5aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aa8:	48 8b 00             	mov    (%rax),%rax
    5aab:	48 89 c7             	mov    %rax,%rdi
    5aae:	e8 e5 08 00 00       	call   6398 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    5ab3:	c9                   	leave
    5ab4:	c3                   	ret
    5ab5:	90                   	nop

0000000000005ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    5ab6:	55                   	push   %rbp
    5ab7:	48 89 e5             	mov    %rsp,%rbp
    5aba:	48 83 ec 20          	sub    $0x20,%rsp
    5abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ac2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5ac6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    5aca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ace:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5ad2:	48 89 d6             	mov    %rdx,%rsi
    5ad5:	48 89 c7             	mov    %rax,%rdi
    5ad8:	e8 d9 08 00 00       	call   63b6 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    5add:	c9                   	leave
    5ade:	c3                   	ret

0000000000005adf <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
    move(_Tp&& __t) noexcept
    5adf:	55                   	push   %rbp
    5ae0:	48 89 e5             	mov    %rsp,%rbp
    5ae3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    5ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5aeb:	5d                   	pop    %rbp
    5aec:	c3                   	ret

0000000000005aed <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
    5aed:	55                   	push   %rbp
    5aee:	48 89 e5             	mov    %rsp,%rbp
    5af1:	48 83 ec 10          	sub    $0x10,%rsp
    5af5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5af9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
    5afd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b01:	48 89 c7             	mov    %rax,%rdi
    5b04:	e8 d5 08 00 00       	call   63de <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    5b09:	48 89 c2             	mov    %rax,%rdx
    5b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b10:	48 89 d6             	mov    %rdx,%rsi
    5b13:	48 89 c7             	mov    %rax,%rdi
    5b16:	e8 d1 08 00 00       	call   63ec <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
    5b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b1f:	c9                   	leave
    5b20:	c3                   	ret
    5b21:	90                   	nop

0000000000005b22 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    5b22:	55                   	push   %rbp
    5b23:	48 89 e5             	mov    %rsp,%rbp
    5b26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    5b2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5b32:	48 8b 10             	mov    (%rax),%rdx
    5b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b39:	48 89 10             	mov    %rdx,(%rax)
    5b3c:	90                   	nop
    5b3d:	5d                   	pop    %rbp
    5b3e:	c3                   	ret
    5b3f:	90                   	nop

0000000000005b40 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    5b40:	55                   	push   %rbp
    5b41:	48 89 e5             	mov    %rsp,%rbp
    5b44:	41 54                	push   %r12
    5b46:	53                   	push   %rbx
    5b47:	48 83 ec 60          	sub    $0x60,%rsp
    5b4b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    5b4f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
    5b53:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    5b57:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
    5b5b:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    5b5f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    5b63:	48 89 c7             	mov    %rax,%rdi
    5b66:	e8 d0 08 00 00       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    5b6b:	49 89 c4             	mov    %rax,%r12
    5b6e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    5b72:	48 89 c7             	mov    %rax,%rdi
    5b75:	e8 b3 08 00 00       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    5b7a:	48 89 c3             	mov    %rax,%rbx
    5b7d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5b81:	48 89 c7             	mov    %rax,%rdi
    5b84:	e8 96 08 00 00       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    5b89:	48 89 c2             	mov    %rax,%rdx
    5b8c:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
    5b90:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5b94:	4d 89 e0             	mov    %r12,%r8
    5b97:	48 89 d9             	mov    %rbx,%rcx
    5b9a:	48 89 c7             	mov    %rax,%rdi
    5b9d:	e8 a8 08 00 00       	call   644a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
    5ba2:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5ba6:	48 89 c7             	mov    %rax,%rdi
    5ba9:	e8 9c 0d 00 00       	call   694a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
    5bae:	48 89 c2             	mov    %rax,%rdx
    5bb1:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
    5bb5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5bb9:	48 89 ce             	mov    %rcx,%rsi
    5bbc:	48 89 c7             	mov    %rax,%rdi
    5bbf:	e8 38 09 00 00       	call   64fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
    5bc4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5bc8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
    5bcc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5bd0:	48 85 c0             	test   %rax,%rax
    5bd3:	74 1c                	je     5bf1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
    5bd5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    5bd9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5bdd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5be1:	48 89 ce             	mov    %rcx,%rsi
    5be4:	48 89 c7             	mov    %rax,%rdi
    5be7:	e8 7c 0d 00 00       	call   6968 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
    5bec:	48 89 c3             	mov    %rax,%rbx
    5bef:	eb 17                	jmp    5c08 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
    5bf1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    5bf5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    5bf9:	48 89 d6             	mov    %rdx,%rsi
    5bfc:	48 89 c7             	mov    %rax,%rdi
    5bff:	e8 ba 0d 00 00       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    5c04:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
    5c08:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c0c:	48 89 c7             	mov    %rax,%rdi
    5c0f:	e8 b2 08 00 00       	call   64c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    5c14:	48 89 d8             	mov    %rbx,%rax
    5c17:	eb 1a                	jmp    5c33 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
    5c19:	48 89 c3             	mov    %rax,%rbx
    5c1c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5c20:	48 89 c7             	mov    %rax,%rdi
    5c23:	e8 9e 08 00 00       	call   64c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
    5c28:	48 89 d8             	mov    %rbx,%rax
    5c2b:	48 89 c7             	mov    %rax,%rdi
    5c2e:	e8 cd c7 ff ff       	call   2400 <_Unwind_Resume@plt>
    5c33:	48 83 c4 60          	add    $0x60,%rsp
    5c37:	5b                   	pop    %rbx
    5c38:	41 5c                	pop    %r12
    5c3a:	5d                   	pop    %rbp
    5c3b:	c3                   	ret

0000000000005c3c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5c3c:	55                   	push   %rbp
    5c3d:	48 89 e5             	mov    %rsp,%rbp
    5c40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5c48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5c4c:	48 8b 10             	mov    (%rax),%rdx
    5c4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c53:	48 89 10             	mov    %rdx,(%rax)
    5c56:	90                   	nop
    5c57:	5d                   	pop    %rbp
    5c58:	c3                   	ret
    5c59:	90                   	nop

0000000000005c5a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5c5a:	55                   	push   %rbp
    5c5b:	48 89 e5             	mov    %rsp,%rbp
    5c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5c62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c66:	5d                   	pop    %rbp
    5c67:	c3                   	ret

0000000000005c68 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c68:	55                   	push   %rbp
    5c69:	48 89 e5             	mov    %rsp,%rbp
    5c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c70:	90                   	nop
    5c71:	5d                   	pop    %rbp
    5c72:	c3                   	ret
    5c73:	90                   	nop

0000000000005c74 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5c74:	55                   	push   %rbp
    5c75:	48 89 e5             	mov    %rsp,%rbp
    5c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c7c:	90                   	nop
    5c7d:	5d                   	pop    %rbp
    5c7e:	c3                   	ret

0000000000005c7f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5c7f:	55                   	push   %rbp
    5c80:	48 89 e5             	mov    %rsp,%rbp
    5c83:	53                   	push   %rbx
    5c84:	48 83 ec 28          	sub    $0x28,%rsp
    5c88:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5c8c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5c90:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5c94:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5c98:	48 89 d6             	mov    %rdx,%rsi
    5c9b:	48 89 c7             	mov    %rax,%rdi
    5c9e:	e8 ed 00 00 00       	call   5d90 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    5ca3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5ca7:	48 89 c7             	mov    %rax,%rdi
    5caa:	e8 29 0d 00 00       	call   69d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    5caf:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5cb3:	0f 92 c3             	setb   %bl
    5cb6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5cba:	48 89 c7             	mov    %rax,%rdi
    5cbd:	e8 60 f5 ff ff       	call   5222 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    5cc2:	84 db                	test   %bl,%bl
    5cc4:	74 0f                	je     5cd5 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5cc6:	48 8d 05 73 51 00 00 	lea    0x5173(%rip),%rax        # ae40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    5ccd:	48 89 c7             	mov    %rax,%rdi
    5cd0:	e8 1b c4 ff ff       	call   20f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5cd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5cd9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5cdd:	c9                   	leave
    5cde:	c3                   	ret
    5cdf:	90                   	nop

0000000000005ce0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5ce0:	55                   	push   %rbp
    5ce1:	48 89 e5             	mov    %rsp,%rbp
    5ce4:	53                   	push   %rbx
    5ce5:	48 83 ec 28          	sub    $0x28,%rsp
    5ce9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5ced:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5cf1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    5cf5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5cf9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5cfd:	48 89 d6             	mov    %rdx,%rsi
    5d00:	48 89 c7             	mov    %rax,%rdi
    5d03:	e8 12 0d 00 00       	call   6a1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5d08:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5d0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d10:	48 89 d6             	mov    %rdx,%rsi
    5d13:	48 89 c7             	mov    %rax,%rdi
    5d16:	e8 31 0d 00 00       	call   6a4c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    5d1b:	eb 1a                	jmp    5d37 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    5d1d:	48 89 c3             	mov    %rax,%rbx
    5d20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d24:	48 89 c7             	mov    %rax,%rdi
    5d27:	e8 3c ed ff ff       	call   4a68 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5d2c:	48 89 d8             	mov    %rbx,%rax
    5d2f:	48 89 c7             	mov    %rax,%rdi
    5d32:	e8 c9 c6 ff ff       	call   2400 <_Unwind_Resume@plt>
    5d37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5d3b:	c9                   	leave
    5d3c:	c3                   	ret
    5d3d:	90                   	nop

0000000000005d3e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5d3e:	55                   	push   %rbp
    5d3f:	48 89 e5             	mov    %rsp,%rbp
    5d42:	48 83 ec 10          	sub    $0x10,%rsp
    5d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5d4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d52:	48 89 c7             	mov    %rax,%rdi
    5d55:	e8 cc f5 ff ff       	call   5326 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5d5a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d61:	48 8b 00             	mov    (%rax),%rax
    5d64:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5d68:	48 89 ce             	mov    %rcx,%rsi
    5d6b:	48 89 c7             	mov    %rax,%rdi
    5d6e:	e8 2f 0d 00 00       	call   6aa2 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5d73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5d77:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5d7b:	90                   	nop
    5d7c:	c9                   	leave
    5d7d:	c3                   	ret

0000000000005d7e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    5d7e:	55                   	push   %rbp
    5d7f:	48 89 e5             	mov    %rsp,%rbp
    5d82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    5d8a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5d8e:	5d                   	pop    %rbp
    5d8f:	c3                   	ret

0000000000005d90 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5d90:	55                   	push   %rbp
    5d91:	48 89 e5             	mov    %rsp,%rbp
    5d94:	48 83 ec 10          	sub    $0x10,%rsp
    5d98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5da0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da8:	48 89 d6             	mov    %rdx,%rsi
    5dab:	48 89 c7             	mov    %rax,%rdi
    5dae:	e8 19 0d 00 00       	call   6acc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    5db3:	90                   	nop
    5db4:	c9                   	leave
    5db5:	c3                   	ret

0000000000005db6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5db6:	55                   	push   %rbp
    5db7:	48 89 e5             	mov    %rsp,%rbp
    5dba:	48 83 ec 20          	sub    $0x20,%rsp
    5dbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dc2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5dc6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5dca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5dcf:	74 17                	je     5de8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dd5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5dd9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5ddd:	48 89 ce             	mov    %rcx,%rsi
    5de0:	48 89 c7             	mov    %rax,%rdi
    5de3:	e8 f3 0c 00 00       	call   6adb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    5de8:	90                   	nop
    5de9:	c9                   	leave
    5dea:	c3                   	ret

0000000000005deb <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5deb:	55                   	push   %rbp
    5dec:	48 89 e5             	mov    %rsp,%rbp
    5def:	48 83 ec 10          	sub    $0x10,%rsp
    5df3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5df7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    5dfb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5dff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e03:	48 89 d6             	mov    %rdx,%rsi
    5e06:	48 89 c7             	mov    %rax,%rdi
    5e09:	e8 fb 0c 00 00       	call   6b09 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    5e0e:	90                   	nop
    5e0f:	c9                   	leave
    5e10:	c3                   	ret

0000000000005e11 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5e11:	55                   	push   %rbp
    5e12:	48 89 e5             	mov    %rsp,%rbp
    5e15:	48 83 ec 20          	sub    $0x20,%rsp
    5e19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5e1d:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    5e24:	55 55 05 
    5e27:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5e2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e2f:	48 89 c7             	mov    %rax,%rdi
    5e32:	e8 e1 0c 00 00       	call   6b18 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    5e37:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5e3b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5e3f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5e43:	48 89 d6             	mov    %rdx,%rsi
    5e46:	48 89 c7             	mov    %rax,%rdi
    5e49:	e8 e4 0c 00 00       	call   6b32 <_ZSt3minImERKT_S2_S2_>
    5e4e:	48 8b 00             	mov    (%rax),%rax
      }
    5e51:	c9                   	leave
    5e52:	c3                   	ret
    5e53:	90                   	nop

0000000000005e54 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5e54:	55                   	push   %rbp
    5e55:	48 89 e5             	mov    %rsp,%rbp
    5e58:	48 83 ec 10          	sub    $0x10,%rsp
    5e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5e64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e6c:	48 89 d6             	mov    %rdx,%rsi
    5e6f:	48 89 c7             	mov    %rax,%rdi
    5e72:	e8 e7 0c 00 00       	call   6b5e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    5e77:	90                   	nop
    5e78:	c9                   	leave
    5e79:	c3                   	ret

0000000000005e7a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5e7a:	55                   	push   %rbp
    5e7b:	48 89 e5             	mov    %rsp,%rbp
    5e7e:	48 83 ec 10          	sub    $0x10,%rsp
    5e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5e8a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e92:	48 89 d6             	mov    %rdx,%rsi
    5e95:	48 89 c7             	mov    %rax,%rdi
    5e98:	e8 b7 ff ff ff       	call   5e54 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    5e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ea1:	48 89 c7             	mov    %rax,%rdi
    5ea4:	e8 c5 0c 00 00       	call   6b6e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    5ea9:	90                   	nop
    5eaa:	c9                   	leave
    5eab:	c3                   	ret

0000000000005eac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5eac:	55                   	push   %rbp
    5ead:	48 89 e5             	mov    %rsp,%rbp
    5eb0:	48 83 ec 10          	sub    $0x10,%rsp
    5eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5ebc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ec4:	48 89 d6             	mov    %rdx,%rsi
    5ec7:	48 89 c7             	mov    %rax,%rdi
    5eca:	e8 cd 0c 00 00       	call   6b9c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    5ecf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5ed3:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eda:	48 8b 10             	mov    (%rax),%rdx
    5edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee1:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee9:	48 8b 08             	mov    (%rax),%rcx
    5eec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5ef0:	48 89 d0             	mov    %rdx,%rax
    5ef3:	48 01 c0             	add    %rax,%rax
    5ef6:	48 01 d0             	add    %rdx,%rax
    5ef9:	48 c1 e0 03          	shl    $0x3,%rax
    5efd:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    5f01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f05:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5f09:	90                   	nop
    5f0a:	c9                   	leave
    5f0b:	c3                   	ret

0000000000005f0c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    5f0c:	55                   	push   %rbp
    5f0d:	48 89 e5             	mov    %rsp,%rbp
    5f10:	48 83 ec 20          	sub    $0x20,%rsp
    5f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f1c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5f20:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5f25:	74 17                	je     5f3e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f2b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f2f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5f33:	48 89 ce             	mov    %rcx,%rsi
    5f36:	48 89 c7             	mov    %rax,%rdi
    5f39:	e8 91 0c 00 00       	call   6bcf <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    5f3e:	90                   	nop
    5f3f:	c9                   	leave
    5f40:	c3                   	ret

0000000000005f41 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5f41:	55                   	push   %rbp
    5f42:	48 89 e5             	mov    %rsp,%rbp
    5f45:	48 83 ec 20          	sub    $0x20,%rsp
    5f49:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f4d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5f51:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5f55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f5d:	48 89 d6             	mov    %rdx,%rsi
    5f60:	48 89 c7             	mov    %rax,%rdi
    5f63:	e8 95 0c 00 00       	call   6bfd <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    5f68:	c9                   	leave
    5f69:	c3                   	ret

0000000000005f6a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5f6a:	55                   	push   %rbp
    5f6b:	48 89 e5             	mov    %rsp,%rbp
    5f6e:	48 83 ec 10          	sub    $0x10,%rsp
    5f72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f76:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    5f7a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f82:	48 89 d6             	mov    %rdx,%rsi
    5f85:	48 89 c7             	mov    %rax,%rdi
    5f88:	e8 99 0c 00 00       	call   6c26 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    5f8d:	90                   	nop
    5f8e:	c9                   	leave
    5f8f:	c3                   	ret

0000000000005f90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5f90:	55                   	push   %rbp
    5f91:	48 89 e5             	mov    %rsp,%rbp
    5f94:	48 83 ec 10          	sub    $0x10,%rsp
    5f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5fa0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fa8:	48 89 d6             	mov    %rdx,%rsi
    5fab:	48 89 c7             	mov    %rax,%rdi
    5fae:	e8 83 0c 00 00       	call   6c36 <_ZNSaIPKcEC1ERKS1_>
    5fb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fb7:	48 89 c7             	mov    %rax,%rdi
    5fba:	e8 9d 0c 00 00       	call   6c5c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5fbf:	90                   	nop
    5fc0:	c9                   	leave
    5fc1:	c3                   	ret

0000000000005fc2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5fc2:	55                   	push   %rbp
    5fc3:	48 89 e5             	mov    %rsp,%rbp
    5fc6:	48 83 ec 20          	sub    $0x20,%rsp
    5fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5fd2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5fd6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5fdb:	74 17                	je     5ff4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5fe5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5fe9:	48 89 ce             	mov    %rcx,%rsi
    5fec:	48 89 c7             	mov    %rax,%rdi
    5fef:	e8 96 0c 00 00       	call   6c8a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    5ff4:	90                   	nop
    5ff5:	c9                   	leave
    5ff6:	c3                   	ret
    5ff7:	90                   	nop

0000000000005ff8 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    5ff8:	55                   	push   %rbp
    5ff9:	48 89 e5             	mov    %rsp,%rbp
    5ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6004:	48 8b 40 08          	mov    0x8(%rax),%rax
    6008:	5d                   	pop    %rbp
    6009:	c3                   	ret

000000000000600a <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
    600a:	55                   	push   %rbp
    600b:	48 89 e5             	mov    %rsp,%rbp
    600e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6012:	90                   	nop
    6013:	5d                   	pop    %rbp
    6014:	c3                   	ret

0000000000006015 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    6015:	55                   	push   %rbp
    6016:	48 89 e5             	mov    %rsp,%rbp
    6019:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    601d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    6021:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6025:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6029:	48 c1 f8 03          	sar    $0x3,%rax
    }
    602d:	5d                   	pop    %rbp
    602e:	c3                   	ret

000000000000602f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    602f:	55                   	push   %rbp
    6030:	48 89 e5             	mov    %rsp,%rbp
    6033:	53                   	push   %rbx
    6034:	48 83 ec 28          	sub    $0x28,%rsp
    6038:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    603c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    6040:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    6044:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6048:	48 89 d6             	mov    %rdx,%rsi
    604b:	48 89 c7             	mov    %rax,%rdi
    604e:	e8 e3 0b 00 00       	call   6c36 <_ZNSaIPKcEC1ERKS1_>
    6053:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6057:	48 89 c7             	mov    %rax,%rdi
    605a:	e8 59 0c 00 00       	call   6cb8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    605f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    6063:	0f 92 c3             	setb   %bl
    6066:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    606a:	48 89 c7             	mov    %rax,%rdi
    606d:	e8 88 ec ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
    6072:	84 db                	test   %bl,%bl
    6074:	74 0f                	je     6085 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    6076:	48 8d 05 c3 4d 00 00 	lea    0x4dc3(%rip),%rax        # ae40 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x158>
    607d:	48 89 c7             	mov    %rax,%rdi
    6080:	e8 6b c0 ff ff       	call   20f0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    6085:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6089:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    608d:	c9                   	leave
    608e:	c3                   	ret
    608f:	90                   	nop

0000000000006090 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6090:	55                   	push   %rbp
    6091:	48 89 e5             	mov    %rsp,%rbp
    6094:	48 83 ec 10          	sub    $0x10,%rsp
    6098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    609c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    60a0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    60a5:	74 15                	je     60bc <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    60a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60af:	48 89 d6             	mov    %rdx,%rsi
    60b2:	48 89 c7             	mov    %rax,%rdi
    60b5:	e8 40 0c 00 00       	call   6cfa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    60ba:	eb 05                	jmp    60c1 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    60bc:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    60c1:	c9                   	leave
    60c2:	c3                   	ret

00000000000060c3 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    60c3:	55                   	push   %rbp
    60c4:	48 89 e5             	mov    %rsp,%rbp
    60c7:	48 83 ec 20          	sub    $0x20,%rsp
    60cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    60d3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    60d7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    60db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    60df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    60e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e7:	48 89 ce             	mov    %rcx,%rsi
    60ea:	48 89 c7             	mov    %rax,%rdi
    60ed:	e8 32 0c 00 00       	call   6d24 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    60f2:	c9                   	leave
    60f3:	c3                   	ret

00000000000060f4 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    60f4:	55                   	push   %rbp
    60f5:	48 89 e5             	mov    %rsp,%rbp
    60f8:	48 83 ec 10          	sub    $0x10,%rsp
    60fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6100:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6104:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    610c:	48 89 d6             	mov    %rdx,%rsi
    610f:	48 89 c7             	mov    %rax,%rdi
    6112:	e8 42 0c 00 00       	call   6d59 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    6117:	90                   	nop
    6118:	c9                   	leave
    6119:	c3                   	ret

000000000000611a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    611a:	55                   	push   %rbp
    611b:	48 89 e5             	mov    %rsp,%rbp
    611e:	48 83 ec 20          	sub    $0x20,%rsp
    6122:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6126:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    612d:	07 7e 00 
    6130:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6138:	48 89 c7             	mov    %rax,%rdi
    613b:	e8 28 0c 00 00       	call   6d68 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    6140:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6144:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6148:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    614c:	48 89 d6             	mov    %rdx,%rsi
    614f:	48 89 c7             	mov    %rax,%rdi
    6152:	e8 db 09 00 00       	call   6b32 <_ZSt3minImERKT_S2_S2_>
    6157:	48 8b 00             	mov    (%rax),%rax
      }
    615a:	c9                   	leave
    615b:	c3                   	ret

000000000000615c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    615c:	55                   	push   %rbp
    615d:	48 89 e5             	mov    %rsp,%rbp
    6160:	48 83 ec 10          	sub    $0x10,%rsp
    6164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6168:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    616c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6174:	48 89 d6             	mov    %rdx,%rsi
    6177:	48 89 c7             	mov    %rax,%rdi
    617a:	e8 03 0c 00 00       	call   6d82 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    617f:	90                   	nop
    6180:	c9                   	leave
    6181:	c3                   	ret

0000000000006182 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6182:	55                   	push   %rbp
    6183:	48 89 e5             	mov    %rsp,%rbp
    6186:	48 83 ec 10          	sub    $0x10,%rsp
    618a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    618e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6192:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    619a:	48 89 d6             	mov    %rdx,%rsi
    619d:	48 89 c7             	mov    %rax,%rdi
    61a0:	e8 b7 ff ff ff       	call   615c <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    61a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61a9:	48 89 c7             	mov    %rax,%rdi
    61ac:	e8 e1 0b 00 00       	call   6d92 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    61b1:	90                   	nop
    61b2:	c9                   	leave
    61b3:	c3                   	ret

00000000000061b4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    61b4:	55                   	push   %rbp
    61b5:	48 89 e5             	mov    %rsp,%rbp
    61b8:	48 83 ec 10          	sub    $0x10,%rsp
    61bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    61c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61cc:	48 89 d6             	mov    %rdx,%rsi
    61cf:	48 89 c7             	mov    %rax,%rdi
    61d2:	e8 e9 0b 00 00       	call   6dc0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    61d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    61db:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    61de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e2:	48 8b 10             	mov    (%rax),%rdx
    61e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61e9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    61ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61f1:	48 8b 08             	mov    (%rax),%rcx
    61f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f8:	48 89 d0             	mov    %rdx,%rax
    61fb:	48 c1 e0 06          	shl    $0x6,%rax
    61ff:	48 01 d0             	add    %rdx,%rax
    6202:	48 c1 e0 02          	shl    $0x2,%rax
    6206:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    620a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    620e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6212:	90                   	nop
    6213:	c9                   	leave
    6214:	c3                   	ret
    6215:	90                   	nop

0000000000006216 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    6216:	55                   	push   %rbp
    6217:	48 89 e5             	mov    %rsp,%rbp
    621a:	48 83 ec 20          	sub    $0x20,%rsp
    621e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6226:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    622a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    622f:	74 17                	je     6248 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    6231:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6235:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6239:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    623d:	48 89 ce             	mov    %rcx,%rsi
    6240:	48 89 c7             	mov    %rax,%rdi
    6243:	e8 ab 0b 00 00       	call   6df3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    6248:	90                   	nop
    6249:	c9                   	leave
    624a:	c3                   	ret

000000000000624b <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    624b:	55                   	push   %rbp
    624c:	48 89 e5             	mov    %rsp,%rbp
    624f:	48 83 ec 20          	sub    $0x20,%rsp
    6253:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6257:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    625b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    625f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6263:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6267:	48 89 d6             	mov    %rdx,%rsi
    626a:	48 89 c7             	mov    %rax,%rdi
    626d:	e8 af 0b 00 00       	call   6e21 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    6272:	c9                   	leave
    6273:	c3                   	ret

0000000000006274 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6274:	55                   	push   %rbp
    6275:	48 89 e5             	mov    %rsp,%rbp
    6278:	48 83 ec 10          	sub    $0x10,%rsp
    627c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6284:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6288:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628c:	48 89 d6             	mov    %rdx,%rsi
    628f:	48 89 c7             	mov    %rax,%rdi
    6292:	e8 b3 0b 00 00       	call   6e4a <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    6297:	90                   	nop
    6298:	c9                   	leave
    6299:	c3                   	ret

000000000000629a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    629a:	55                   	push   %rbp
    629b:	48 89 e5             	mov    %rsp,%rbp
    629e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62a2:	90                   	nop
    62a3:	5d                   	pop    %rbp
    62a4:	c3                   	ret

00000000000062a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    62a5:	55                   	push   %rbp
    62a6:	48 89 e5             	mov    %rsp,%rbp
    62a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    62ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b1:	48 8b 40 18          	mov    0x18(%rax),%rax
    62b5:	5d                   	pop    %rbp
    62b6:	c3                   	ret

00000000000062b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    62b7:	55                   	push   %rbp
    62b8:	48 89 e5             	mov    %rsp,%rbp
    62bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    62bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62c3:	48 8b 40 10          	mov    0x10(%rax),%rax
    62c7:	5d                   	pop    %rbp
    62c8:	c3                   	ret
    62c9:	90                   	nop

00000000000062ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    62ca:	55                   	push   %rbp
    62cb:	48 89 e5             	mov    %rsp,%rbp
    62ce:	48 83 ec 10          	sub    $0x10,%rsp
    62d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    62da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e2:	48 89 d6             	mov    %rdx,%rsi
    62e5:	48 89 c7             	mov    %rax,%rdi
    62e8:	e8 6d 0b 00 00       	call   6e5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
    62ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f5:	48 89 d6             	mov    %rdx,%rsi
    62f8:	48 89 c7             	mov    %rax,%rdi
    62fb:	e8 98 0b 00 00       	call   6e98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
    6300:	90                   	nop
    6301:	c9                   	leave
    6302:	c3                   	ret
    6303:	90                   	nop

0000000000006304 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    6304:	55                   	push   %rbp
    6305:	48 89 e5             	mov    %rsp,%rbp
    6308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    630c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6310:	48 8b 40 10          	mov    0x10(%rax),%rax
    6314:	5d                   	pop    %rbp
    6315:	c3                   	ret

0000000000006316 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
    6316:	55                   	push   %rbp
    6317:	48 89 e5             	mov    %rsp,%rbp
    631a:	53                   	push   %rbx
    631b:	48 83 ec 18          	sub    $0x18,%rsp
    631f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6323:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
    6327:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    632b:	48 89 c7             	mov    %rax,%rdi
    632e:	e8 9b 0b 00 00       	call   6ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    6333:	48 89 c3             	mov    %rax,%rbx
    6336:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    633a:	48 89 c7             	mov    %rax,%rdi
    633d:	e8 92 f6 ff ff       	call   59d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    6342:	48 89 c6             	mov    %rax,%rsi
    6345:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6349:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    634d:	48 89 d1             	mov    %rdx,%rcx
    6350:	48 89 da             	mov    %rbx,%rdx
    6353:	48 89 c7             	mov    %rax,%rdi
    6356:	e8 85 0b 00 00       	call   6ee0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
    635b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    635f:	c9                   	leave
    6360:	c3                   	ret
    6361:	90                   	nop

0000000000006362 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6362:	55                   	push   %rbp
    6363:	48 89 e5             	mov    %rsp,%rbp
    6366:	48 83 ec 20          	sub    $0x20,%rsp
    636a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    636e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6372:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6376:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    637a:	48 89 d6             	mov    %rdx,%rsi
    637d:	48 89 c7             	mov    %rax,%rdi
    6380:	e8 39 06 00 00       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    6385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6389:	c9                   	leave
    638a:	c3                   	ret
    638b:	90                   	nop

000000000000638c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
    638c:	55                   	push   %rbp
    638d:	48 89 e5             	mov    %rsp,%rbp
    6390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
    6394:	90                   	nop
    6395:	5d                   	pop    %rbp
    6396:	c3                   	ret
    6397:	90                   	nop

0000000000006398 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
    6398:	55                   	push   %rbp
    6399:	48 89 e5             	mov    %rsp,%rbp
    639c:	48 83 ec 10          	sub    $0x10,%rsp
    63a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    63a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63a8:	48 83 c0 20          	add    $0x20,%rax
    63ac:	48 89 c7             	mov    %rax,%rdi
    63af:	e8 c2 0b 00 00       	call   6f76 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    63b4:	c9                   	leave
    63b5:	c3                   	ret

00000000000063b6 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    63b6:	55                   	push   %rbp
    63b7:	48 89 e5             	mov    %rsp,%rbp
    63ba:	48 83 ec 10          	sub    $0x10,%rsp
    63be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
    63c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ce:	48 89 d6             	mov    %rdx,%rsi
    63d1:	48 89 c7             	mov    %rax,%rdi
    63d4:	e8 57 bc ff ff       	call   2030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
    63d9:	c1 e8 1f             	shr    $0x1f,%eax
    63dc:	c9                   	leave
    63dd:	c3                   	ret

00000000000063de <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    63de:	55                   	push   %rbp
    63df:	48 89 e5             	mov    %rsp,%rbp
    63e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    63e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ea:	5d                   	pop    %rbp
    63eb:	c3                   	ret

00000000000063ec <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
    63ec:	55                   	push   %rbp
    63ed:	48 89 e5             	mov    %rsp,%rbp
    63f0:	53                   	push   %rbx
    63f1:	48 83 ec 18          	sub    $0x18,%rsp
    63f5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    63f9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
    63fd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6401:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6405:	48 89 c7             	mov    %rax,%rdi
    6408:	e8 d1 ff ff ff       	call   63de <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    640d:	48 89 c6             	mov    %rax,%rsi
    6410:	48 89 df             	mov    %rbx,%rdi
    6413:	e8 78 0b 00 00       	call   6f90 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
    6418:	90                   	nop
    6419:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    641d:	c9                   	leave
    641e:	c3                   	ret

000000000000641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    641f:	55                   	push   %rbp
    6420:	48 89 e5             	mov    %rsp,%rbp
    6423:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642b:	5d                   	pop    %rbp
    642c:	c3                   	ret

000000000000642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    642d:	55                   	push   %rbp
    642e:	48 89 e5             	mov    %rsp,%rbp
    6431:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6435:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6439:	5d                   	pop    %rbp
    643a:	c3                   	ret

000000000000643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    643b:	55                   	push   %rbp
    643c:	48 89 e5             	mov    %rsp,%rbp
    643f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    6443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6447:	5d                   	pop    %rbp
    6448:	c3                   	ret
    6449:	90                   	nop

000000000000644a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    644a:	55                   	push   %rbp
    644b:	48 89 e5             	mov    %rsp,%rbp
    644e:	41 54                	push   %r12
    6450:	53                   	push   %rbx
    6451:	48 83 ec 30          	sub    $0x30,%rsp
    6455:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6459:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    645d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6461:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    6465:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
    6469:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    646d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6471:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    6474:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6478:	48 89 c7             	mov    %rax,%rdi
    647b:	e8 bb ff ff ff       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    6480:	49 89 c4             	mov    %rax,%r12
    6483:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6487:	48 89 c7             	mov    %rax,%rdi
    648a:	e8 9e ff ff ff       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    648f:	48 89 c3             	mov    %rax,%rbx
    6492:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6496:	48 89 c7             	mov    %rax,%rdi
    6499:	e8 81 ff ff ff       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    649e:	48 89 c6             	mov    %rax,%rsi
    64a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    64a5:	4c 89 e1             	mov    %r12,%rcx
    64a8:	48 89 da             	mov    %rbx,%rdx
    64ab:	48 89 c7             	mov    %rax,%rdi
    64ae:	e8 11 0b 00 00       	call   6fc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
    64b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    64b7:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    64bb:	90                   	nop
    64bc:	48 83 c4 30          	add    $0x30,%rsp
    64c0:	5b                   	pop    %rbx
    64c1:	41 5c                	pop    %r12
    64c3:	5d                   	pop    %rbp
    64c4:	c3                   	ret
    64c5:	90                   	nop

00000000000064c6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    64c6:	55                   	push   %rbp
    64c7:	48 89 e5             	mov    %rsp,%rbp
    64ca:	48 83 ec 10          	sub    $0x10,%rsp
    64ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    64d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64d6:	48 8b 40 08          	mov    0x8(%rax),%rax
    64da:	48 85 c0             	test   %rax,%rax
    64dd:	74 1a                	je     64f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    64df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64e3:	48 8b 00             	mov    (%rax),%rax
    64e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    64ea:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    64ee:	48 89 d6             	mov    %rdx,%rsi
    64f1:	48 89 c7             	mov    %rax,%rdi
    64f4:	e8 d1 fd ff ff       	call   62ca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
    64f9:	90                   	nop
    64fa:	c9                   	leave
    64fb:	c3                   	ret

00000000000064fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    64fc:	55                   	push   %rbp
    64fd:	48 89 e5             	mov    %rsp,%rbp
    6500:	53                   	push   %rbx
    6501:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    6508:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    650f:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    6516:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    651d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6524:	48 89 c7             	mov    %rax,%rdi
    6527:	e8 14 0b 00 00       	call   7040 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
    652c:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    6533:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    653a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6541:	48 89 c7             	mov    %rax,%rdi
    6544:	e8 85 09 00 00       	call   6ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    6549:	48 39 c3             	cmp    %rax,%rbx
    654c:	0f 94 c0             	sete   %al
    654f:	84 c0                	test   %al,%al
    6551:	0f 84 c8 00 00 00    	je     661f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
    6557:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    655e:	48 89 c7             	mov    %rax,%rdi
    6561:	e8 02 0b 00 00       	call   7068 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    6566:	48 85 c0             	test   %rax,%rax
    6569:	74 44                	je     65af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    656b:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6572:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6579:	48 89 c7             	mov    %rax,%rdi
    657c:	e8 f9 0a 00 00       	call   707a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6581:	48 8b 00             	mov    (%rax),%rax
    6584:	48 89 c7             	mov    %rax,%rdi
    6587:	e8 00 0b 00 00       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    658c:	48 89 c1             	mov    %rax,%rcx
    658f:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6596:	48 89 c2             	mov    %rax,%rdx
    6599:	48 89 ce             	mov    %rcx,%rsi
    659c:	48 89 df             	mov    %rbx,%rdi
    659f:	e8 12 f5 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    65a4:	84 c0                	test   %al,%al
    65a6:	74 07                	je     65af <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
    65a8:	b8 01 00 00 00       	mov    $0x1,%eax
    65ad:	eb 05                	jmp    65b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
    65af:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    65b4:	84 c0                	test   %al,%al
    65b6:	74 49                	je     6601 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
    65b8:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    65bf:	48 89 c7             	mov    %rax,%rdi
    65c2:	e8 b3 0a 00 00       	call   707a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    65c7:	48 89 c2             	mov    %rax,%rdx
    65ca:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    65d1:	00 00 00 00 
    65d5:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    65dc:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    65e3:	48 89 ce             	mov    %rcx,%rsi
    65e6:	48 89 c7             	mov    %rax,%rdi
    65e9:	e8 b8 0a 00 00       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    65ee:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    65f5:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    65fc:	e9 43 03 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    6601:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6608:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    660f:	48 89 d6             	mov    %rdx,%rsi
    6612:	48 89 c7             	mov    %rax,%rdi
    6615:	e8 bc 0a 00 00       	call   70d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    661a:	e9 25 03 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    661f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6626:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    662d:	48 89 c7             	mov    %rax,%rdi
    6630:	e8 57 0a 00 00       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    6635:	48 89 c2             	mov    %rax,%rdx
    6638:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    663f:	48 89 c6             	mov    %rax,%rsi
    6642:	48 89 df             	mov    %rbx,%rdi
    6645:	e8 6c f4 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    664a:	84 c0                	test   %al,%al
    664c:	0f 84 66 01 00 00    	je     67b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
    6652:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    6659:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    6660:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6667:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    666e:	48 89 c7             	mov    %rax,%rdi
    6671:	e8 d6 0b 00 00       	call   724c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6676:	48 8b 00             	mov    (%rax),%rax
    6679:	48 39 c3             	cmp    %rax,%rbx
    667c:	0f 94 c0             	sete   %al
    667f:	84 c0                	test   %al,%al
    6681:	74 4c                	je     66cf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    6683:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    668a:	48 89 c7             	mov    %rax,%rdi
    668d:	e8 ba 0b 00 00       	call   724c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    6692:	48 89 c3             	mov    %rax,%rbx
    6695:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    669c:	48 89 c7             	mov    %rax,%rdi
    669f:	e8 a8 0b 00 00       	call   724c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
    66a4:	48 89 c1             	mov    %rax,%rcx
    66a7:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    66ae:	48 89 da             	mov    %rbx,%rdx
    66b1:	48 89 ce             	mov    %rcx,%rsi
    66b4:	48 89 c7             	mov    %rax,%rdi
    66b7:	e8 a2 0b 00 00       	call   725e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    66bc:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    66c3:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    66ca:	e9 75 02 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    66cf:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    66d6:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    66dd:	48 89 c7             	mov    %rax,%rdi
    66e0:	e8 bd 0b 00 00       	call   72a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
    66e5:	48 8b 00             	mov    (%rax),%rax
    66e8:	48 89 c7             	mov    %rax,%rdi
    66eb:	e8 9c 09 00 00       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    66f0:	48 89 c1             	mov    %rax,%rcx
    66f3:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    66fa:	48 89 c2             	mov    %rax,%rdx
    66fd:	48 89 ce             	mov    %rcx,%rsi
    6700:	48 89 df             	mov    %rbx,%rdi
    6703:	e8 ae f3 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6708:	84 c0                	test   %al,%al
    670a:	0f 84 8a 00 00 00    	je     679a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
    6710:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    6717:	48 89 c7             	mov    %rax,%rdi
    671a:	e8 86 fb ff ff       	call   62a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    671f:	48 85 c0             	test   %rax,%rax
    6722:	0f 94 c0             	sete   %al
    6725:	84 c0                	test   %al,%al
    6727:	74 3e                	je     6767 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
    6729:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    6730:	00 00 00 00 
    6734:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    673b:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    6742:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    6749:	48 89 ce             	mov    %rcx,%rsi
    674c:	48 89 c7             	mov    %rax,%rdi
    674f:	e8 52 09 00 00       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    6754:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    675b:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    6762:	e9 dd 01 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    6767:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    676e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    6775:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    677c:	48 89 ce             	mov    %rcx,%rsi
    677f:	48 89 c7             	mov    %rax,%rdi
    6782:	e8 d7 0a 00 00       	call   725e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    6787:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    678e:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    6795:	e9 aa 01 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    679a:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    67a1:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    67a8:	48 89 d6             	mov    %rdx,%rsi
    67ab:	48 89 c7             	mov    %rax,%rdi
    67ae:	e8 23 09 00 00       	call   70d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    67b3:	e9 8c 01 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    67b8:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    67bf:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    67c6:	48 89 c7             	mov    %rax,%rdi
    67c9:	e8 be 08 00 00       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    67ce:	48 89 c1             	mov    %rax,%rcx
    67d1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    67d8:	48 89 c2             	mov    %rax,%rdx
    67db:	48 89 ce             	mov    %rcx,%rsi
    67de:	48 89 df             	mov    %rbx,%rdi
    67e1:	e8 d0 f2 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    67e6:	84 c0                	test   %al,%al
    67e8:	0f 84 2c 01 00 00    	je     691a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
    67ee:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    67f5:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    67fc:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    6803:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    680a:	48 89 c7             	mov    %rax,%rdi
    680d:	e8 68 08 00 00       	call   707a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    6812:	48 8b 00             	mov    (%rax),%rax
    6815:	48 39 c3             	cmp    %rax,%rbx
    6818:	0f 94 c0             	sete   %al
    681b:	84 c0                	test   %al,%al
    681d:	74 3a                	je     6859 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
    681f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    6826:	48 89 c7             	mov    %rax,%rdi
    6829:	e8 4c 08 00 00       	call   707a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
    682e:	48 89 c2             	mov    %rax,%rdx
    6831:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    6838:	00 
    6839:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    683d:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6841:	48 89 ce             	mov    %rcx,%rsi
    6844:	48 89 c7             	mov    %rax,%rdi
    6847:	e8 5a 08 00 00       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    684c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    6850:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    6854:	e9 eb 00 00 00       	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    6859:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    6860:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    6867:	48 89 c7             	mov    %rax,%rdi
    686a:	e8 5b 0a 00 00       	call   72ca <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
    686f:	48 8b 00             	mov    (%rax),%rax
    6872:	48 89 c7             	mov    %rax,%rdi
    6875:	e8 12 08 00 00       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    687a:	48 89 c2             	mov    %rax,%rdx
    687d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    6884:	48 89 c6             	mov    %rax,%rsi
    6887:	48 89 df             	mov    %rbx,%rdi
    688a:	e8 27 f2 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    688f:	84 c0                	test   %al,%al
    6891:	74 6c                	je     68ff <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
    6893:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    689a:	48 89 c7             	mov    %rax,%rdi
    689d:	e8 03 fa ff ff       	call   62a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    68a2:	48 85 c0             	test   %rax,%rax
    68a5:	0f 94 c0             	sete   %al
    68a8:	84 c0                	test   %al,%al
    68aa:	74 2c                	je     68d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
    68ac:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    68b3:	00 
    68b4:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    68bb:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    68bf:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    68c3:	48 89 ce             	mov    %rcx,%rsi
    68c6:	48 89 c7             	mov    %rax,%rdi
    68c9:	e8 d8 07 00 00       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    68ce:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    68d2:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    68d6:	eb 6c                	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
    68d8:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    68df:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    68e6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    68ea:	48 89 ce             	mov    %rcx,%rsi
    68ed:	48 89 c7             	mov    %rax,%rdi
    68f0:	e8 69 09 00 00       	call   725e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    68f5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    68f9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    68fd:	eb 45                	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
    68ff:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    6906:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    690d:	48 89 d6             	mov    %rdx,%rsi
    6910:	48 89 c7             	mov    %rax,%rdi
    6913:	e8 be 07 00 00       	call   70d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
    6918:	eb 2a                	jmp    6944 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
    691a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    6921:	00 
    6922:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6926:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    692d:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6931:	48 89 ce             	mov    %rcx,%rsi
    6934:	48 89 c7             	mov    %rax,%rdi
    6937:	e8 6a 07 00 00       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    693c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6940:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    6944:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6948:	c9                   	leave
    6949:	c3                   	ret

000000000000694a <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    694a:	55                   	push   %rbp
    694b:	48 89 e5             	mov    %rsp,%rbp
    694e:	48 83 ec 10          	sub    $0x10,%rsp
    6952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    6956:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    695a:	48 8b 40 08          	mov    0x8(%rax),%rax
    695e:	48 89 c7             	mov    %rax,%rdi
    6961:	e8 8c 09 00 00       	call   72f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    6966:	c9                   	leave
    6967:	c3                   	ret

0000000000006968 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    6968:	55                   	push   %rbp
    6969:	48 89 e5             	mov    %rsp,%rbp
    696c:	48 83 ec 30          	sub    $0x30,%rsp
    6970:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6974:	48 89 d1             	mov    %rdx,%rcx
    6977:	48 89 f0             	mov    %rsi,%rax
    697a:	48 89 fa             	mov    %rdi,%rdx
    697d:	48 89 ca             	mov    %rcx,%rdx
    6980:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6984:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    6988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    698c:	48 8b 00             	mov    (%rax),%rax
    698f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6993:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    6997:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    699b:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    699f:	48 89 c7             	mov    %rax,%rdi
    69a2:	e8 77 09 00 00       	call   731e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
    69a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    69ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69af:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    69b6:	00 
	  return __it;
    69b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    69bb:	c9                   	leave
    69bc:	c3                   	ret
    69bd:	90                   	nop

00000000000069be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    69be:	55                   	push   %rbp
    69bf:	48 89 e5             	mov    %rsp,%rbp
    69c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    69ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    69d2:	48 89 10             	mov    %rdx,(%rax)
    69d5:	90                   	nop
    69d6:	5d                   	pop    %rbp
    69d7:	c3                   	ret

00000000000069d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    69d8:	55                   	push   %rbp
    69d9:	48 89 e5             	mov    %rsp,%rbp
    69dc:	48 83 ec 20          	sub    $0x20,%rsp
    69e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    69e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    69eb:	ff ff 0f 
    69ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    69f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69f6:	48 89 c7             	mov    %rax,%rdi
    69f9:	e8 e3 09 00 00       	call   73e1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    69fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6a02:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6a06:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a0a:	48 89 d6             	mov    %rdx,%rsi
    6a0d:	48 89 c7             	mov    %rax,%rdi
    6a10:	e8 1d 01 00 00       	call   6b32 <_ZSt3minImERKT_S2_S2_>
    6a15:	48 8b 00             	mov    (%rax),%rax
      }
    6a18:	c9                   	leave
    6a19:	c3                   	ret

0000000000006a1a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6a1a:	55                   	push   %rbp
    6a1b:	48 89 e5             	mov    %rsp,%rbp
    6a1e:	48 83 ec 10          	sub    $0x10,%rsp
    6a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6a2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a32:	48 89 d6             	mov    %rdx,%rsi
    6a35:	48 89 c7             	mov    %rax,%rdi
    6a38:	e8 53 f3 ff ff       	call   5d90 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    6a3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a41:	48 89 c7             	mov    %rax,%rdi
    6a44:	e8 b3 09 00 00       	call   73fc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    6a49:	90                   	nop
    6a4a:	c9                   	leave
    6a4b:	c3                   	ret

0000000000006a4c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6a4c:	55                   	push   %rbp
    6a4d:	48 89 e5             	mov    %rsp,%rbp
    6a50:	48 83 ec 10          	sub    $0x10,%rsp
    6a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6a5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a64:	48 89 d6             	mov    %rdx,%rsi
    6a67:	48 89 c7             	mov    %rax,%rdi
    6a6a:	e8 bb 09 00 00       	call   742a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    6a6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6a73:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a7a:	48 8b 10             	mov    (%rax),%rdx
    6a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a81:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    6a85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a89:	48 8b 00             	mov    (%rax),%rax
    6a8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6a90:	48 c1 e2 03          	shl    $0x3,%rdx
    6a94:	48 01 c2             	add    %rax,%rdx
    6a97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a9b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    6a9f:	90                   	nop
    6aa0:	c9                   	leave
    6aa1:	c3                   	ret

0000000000006aa2 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    6aa2:	55                   	push   %rbp
    6aa3:	48 89 e5             	mov    %rsp,%rbp
    6aa6:	48 83 ec 20          	sub    $0x20,%rsp
    6aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ab2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6ab6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6abe:	48 89 d6             	mov    %rdx,%rsi
    6ac1:	48 89 c7             	mov    %rax,%rdi
    6ac4:	e8 94 09 00 00       	call   745d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    6ac9:	c9                   	leave
    6aca:	c3                   	ret
    6acb:	90                   	nop

0000000000006acc <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6acc:	55                   	push   %rbp
    6acd:	48 89 e5             	mov    %rsp,%rbp
    6ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ad4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ad8:	90                   	nop
    6ad9:	5d                   	pop    %rbp
    6ada:	c3                   	ret

0000000000006adb <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6adb:	55                   	push   %rbp
    6adc:	48 89 e5             	mov    %rsp,%rbp
    6adf:	48 83 ec 20          	sub    $0x20,%rsp
    6ae3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ae7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6aeb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6aef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6af3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6af7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6afb:	48 89 ce             	mov    %rcx,%rsi
    6afe:	48 89 c7             	mov    %rax,%rdi
    6b01:	e8 80 09 00 00       	call   7486 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    6b06:	90                   	nop
    6b07:	c9                   	leave
    6b08:	c3                   	ret

0000000000006b09 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6b09:	55                   	push   %rbp
    6b0a:	48 89 e5             	mov    %rsp,%rbp
    6b0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b11:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b15:	90                   	nop
    6b16:	5d                   	pop    %rbp
    6b17:	c3                   	ret

0000000000006b18 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6b18:	55                   	push   %rbp
    6b19:	48 89 e5             	mov    %rsp,%rbp
    6b1c:	48 83 ec 10          	sub    $0x10,%rsp
    6b20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b28:	48 89 c7             	mov    %rax,%rdi
    6b2b:	e8 88 09 00 00       	call   74b8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    6b30:	c9                   	leave
    6b31:	c3                   	ret

0000000000006b32 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    6b32:	55                   	push   %rbp
    6b33:	48 89 e5             	mov    %rsp,%rbp
    6b36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    6b3e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b42:	48 8b 10             	mov    (%rax),%rdx
    6b45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b49:	48 8b 00             	mov    (%rax),%rax
    6b4c:	48 39 c2             	cmp    %rax,%rdx
    6b4f:	73 06                	jae    6b57 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6b51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b55:	eb 04                	jmp    6b5b <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    6b57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    6b5b:	5d                   	pop    %rbp
    6b5c:	c3                   	ret
    6b5d:	90                   	nop

0000000000006b5e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    6b5e:	55                   	push   %rbp
    6b5f:	48 89 e5             	mov    %rsp,%rbp
    6b62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b6a:	90                   	nop
    6b6b:	5d                   	pop    %rbp
    6b6c:	c3                   	ret
    6b6d:	90                   	nop

0000000000006b6e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6b6e:	55                   	push   %rbp
    6b6f:	48 89 e5             	mov    %rsp,%rbp
    6b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b7a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6b81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b85:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6b8c:	00 
    6b8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b91:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6b98:	00 
	{ }
    6b99:	90                   	nop
    6b9a:	5d                   	pop    %rbp
    6b9b:	c3                   	ret

0000000000006b9c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6b9c:	55                   	push   %rbp
    6b9d:	48 89 e5             	mov    %rsp,%rbp
    6ba0:	48 83 ec 10          	sub    $0x10,%rsp
    6ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ba8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6bac:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6bb1:	74 15                	je     6bc8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    6bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bb7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6bbb:	48 89 d6             	mov    %rdx,%rsi
    6bbe:	48 89 c7             	mov    %rax,%rdi
    6bc1:	e8 0c 09 00 00       	call   74d2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    6bc6:	eb 05                	jmp    6bcd <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    6bc8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6bcd:	c9                   	leave
    6bce:	c3                   	ret

0000000000006bcf <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6bcf:	55                   	push   %rbp
    6bd0:	48 89 e5             	mov    %rsp,%rbp
    6bd3:	48 83 ec 20          	sub    $0x20,%rsp
    6bd7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bdb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bdf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6be3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6be7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bef:	48 89 ce             	mov    %rcx,%rsi
    6bf2:	48 89 c7             	mov    %rax,%rdi
    6bf5:	e8 02 09 00 00       	call   74fc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    6bfa:	90                   	nop
    6bfb:	c9                   	leave
    6bfc:	c3                   	ret

0000000000006bfd <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6bfd:	55                   	push   %rbp
    6bfe:	48 89 e5             	mov    %rsp,%rbp
    6c01:	48 83 ec 20          	sub    $0x20,%rsp
    6c05:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c09:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6c0d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6c11:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6c19:	48 89 d6             	mov    %rdx,%rsi
    6c1c:	48 89 c7             	mov    %rax,%rdi
    6c1f:	e8 11 09 00 00       	call   7535 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    6c24:	c9                   	leave
    6c25:	c3                   	ret

0000000000006c26 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    6c26:	55                   	push   %rbp
    6c27:	48 89 e5             	mov    %rsp,%rbp
    6c2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c32:	90                   	nop
    6c33:	5d                   	pop    %rbp
    6c34:	c3                   	ret
    6c35:	90                   	nop

0000000000006c36 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6c36:	55                   	push   %rbp
    6c37:	48 89 e5             	mov    %rsp,%rbp
    6c3a:	48 83 ec 10          	sub    $0x10,%rsp
    6c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6c46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c4e:	48 89 d6             	mov    %rdx,%rsi
    6c51:	48 89 c7             	mov    %rax,%rdi
    6c54:	e8 39 09 00 00       	call   7592 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    6c59:	90                   	nop
    6c5a:	c9                   	leave
    6c5b:	c3                   	ret

0000000000006c5c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6c5c:	55                   	push   %rbp
    6c5d:	48 89 e5             	mov    %rsp,%rbp
    6c60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c68:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6c6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c73:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6c7a:	00 
    6c7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c7f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6c86:	00 
	{ }
    6c87:	90                   	nop
    6c88:	5d                   	pop    %rbp
    6c89:	c3                   	ret

0000000000006c8a <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6c8a:	55                   	push   %rbp
    6c8b:	48 89 e5             	mov    %rsp,%rbp
    6c8e:	48 83 ec 20          	sub    $0x20,%rsp
    6c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6c96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6c9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6c9e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ca2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6caa:	48 89 ce             	mov    %rcx,%rsi
    6cad:	48 89 c7             	mov    %rax,%rdi
    6cb0:	e8 ed 08 00 00       	call   75a2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    6cb5:	90                   	nop
    6cb6:	c9                   	leave
    6cb7:	c3                   	ret

0000000000006cb8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6cb8:	55                   	push   %rbp
    6cb9:	48 89 e5             	mov    %rsp,%rbp
    6cbc:	48 83 ec 20          	sub    $0x20,%rsp
    6cc0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6cc4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6ccb:	ff ff 0f 
    6cce:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6cd2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6cd6:	48 89 c7             	mov    %rax,%rdi
    6cd9:	e8 f5 08 00 00       	call   75d3 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    6cde:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6ce2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6ce6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6cea:	48 89 d6             	mov    %rdx,%rsi
    6ced:	48 89 c7             	mov    %rax,%rdi
    6cf0:	e8 3d fe ff ff       	call   6b32 <_ZSt3minImERKT_S2_S2_>
    6cf5:	48 8b 00             	mov    (%rax),%rax
      }
    6cf8:	c9                   	leave
    6cf9:	c3                   	ret

0000000000006cfa <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6cfa:	55                   	push   %rbp
    6cfb:	48 89 e5             	mov    %rsp,%rbp
    6cfe:	48 83 ec 10          	sub    $0x10,%rsp
    6d02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6d0a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d12:	ba 00 00 00 00       	mov    $0x0,%edx
    6d17:	48 89 ce             	mov    %rcx,%rsi
    6d1a:	48 89 c7             	mov    %rax,%rdi
    6d1d:	e8 cc 08 00 00       	call   75ee <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    6d22:	c9                   	leave
    6d23:	c3                   	ret

0000000000006d24 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    6d24:	55                   	push   %rbp
    6d25:	48 89 e5             	mov    %rsp,%rbp
    6d28:	48 83 ec 30          	sub    $0x30,%rsp
    6d2c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6d30:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6d34:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6d38:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    6d3c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    6d40:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6d44:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6d48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6d4c:	48 89 ce             	mov    %rcx,%rsi
    6d4f:	48 89 c7             	mov    %rax,%rdi
    6d52:	e8 f8 08 00 00       	call   764f <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    6d57:	c9                   	leave
    6d58:	c3                   	ret

0000000000006d59 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
    6d59:	55                   	push   %rbp
    6d5a:	48 89 e5             	mov    %rsp,%rbp
    6d5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d65:	90                   	nop
    6d66:	5d                   	pop    %rbp
    6d67:	c3                   	ret

0000000000006d68 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6d68:	55                   	push   %rbp
    6d69:	48 89 e5             	mov    %rsp,%rbp
    6d6c:	48 83 ec 10          	sub    $0x10,%rsp
    6d70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6d74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d78:	48 89 c7             	mov    %rax,%rdi
    6d7b:	e8 fc 08 00 00       	call   767c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    6d80:	c9                   	leave
    6d81:	c3                   	ret

0000000000006d82 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    6d82:	55                   	push   %rbp
    6d83:	48 89 e5             	mov    %rsp,%rbp
    6d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d8e:	90                   	nop
    6d8f:	5d                   	pop    %rbp
    6d90:	c3                   	ret
    6d91:	90                   	nop

0000000000006d92 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6d92:	55                   	push   %rbp
    6d93:	48 89 e5             	mov    %rsp,%rbp
    6d96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    6d9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d9e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6da5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6da9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    6db0:	00 
    6db1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6db5:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    6dbc:	00 
	{ }
    6dbd:	90                   	nop
    6dbe:	5d                   	pop    %rbp
    6dbf:	c3                   	ret

0000000000006dc0 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    6dc0:	55                   	push   %rbp
    6dc1:	48 89 e5             	mov    %rsp,%rbp
    6dc4:	48 83 ec 10          	sub    $0x10,%rsp
    6dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    6dd0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6dd5:	74 15                	je     6dec <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    6dd7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ddb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6ddf:	48 89 d6             	mov    %rdx,%rsi
    6de2:	48 89 c7             	mov    %rax,%rdi
    6de5:	e8 ac 08 00 00       	call   7696 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    6dea:	eb 05                	jmp    6df1 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    6dec:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6df1:	c9                   	leave
    6df2:	c3                   	ret

0000000000006df3 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    6df3:	55                   	push   %rbp
    6df4:	48 89 e5             	mov    %rsp,%rbp
    6df7:	48 83 ec 20          	sub    $0x20,%rsp
    6dfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6e07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6e0b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6e0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6e13:	48 89 ce             	mov    %rcx,%rsi
    6e16:	48 89 c7             	mov    %rax,%rdi
    6e19:	e8 a2 08 00 00       	call   76c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    6e1e:	90                   	nop
    6e1f:	c9                   	leave
    6e20:	c3                   	ret

0000000000006e21 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6e21:	55                   	push   %rbp
    6e22:	48 89 e5             	mov    %rsp,%rbp
    6e25:	48 83 ec 20          	sub    $0x20,%rsp
    6e29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6e31:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6e35:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6e39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e3d:	48 89 d6             	mov    %rdx,%rsi
    6e40:	48 89 c7             	mov    %rax,%rdi
    6e43:	e8 b2 08 00 00       	call   76fa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    6e48:	c9                   	leave
    6e49:	c3                   	ret

0000000000006e4a <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    6e4a:	55                   	push   %rbp
    6e4b:	48 89 e5             	mov    %rsp,%rbp
    6e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6e52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e56:	90                   	nop
    6e57:	5d                   	pop    %rbp
    6e58:	c3                   	ret
    6e59:	90                   	nop

0000000000006e5a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    6e5a:	55                   	push   %rbp
    6e5b:	48 89 e5             	mov    %rsp,%rbp
    6e5e:	53                   	push   %rbx
    6e5f:	48 83 ec 18          	sub    $0x18,%rsp
    6e63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    6e6b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6e6f:	48 89 c7             	mov    %rax,%rdi
    6e72:	e8 21 f5 ff ff       	call   6398 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    6e77:	48 89 c3             	mov    %rax,%rbx
    6e7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e7e:	48 89 c7             	mov    %rax,%rdi
    6e81:	e8 d4 08 00 00       	call   775a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    6e86:	48 89 de             	mov    %rbx,%rsi
    6e89:	48 89 c7             	mov    %rax,%rdi
    6e8c:	e8 d7 08 00 00       	call   7768 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
    6e91:	90                   	nop
    6e92:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6e96:	c9                   	leave
    6e97:	c3                   	ret

0000000000006e98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    6e98:	55                   	push   %rbp
    6e99:	48 89 e5             	mov    %rsp,%rbp
    6e9c:	48 83 ec 10          	sub    $0x10,%rsp
    6ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ea4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    6ea8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eac:	48 89 c7             	mov    %rax,%rdi
    6eaf:	e8 a6 08 00 00       	call   775a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    6eb4:	48 89 c1             	mov    %rax,%rcx
    6eb7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ebb:	ba 01 00 00 00       	mov    $0x1,%edx
    6ec0:	48 89 c6             	mov    %rax,%rsi
    6ec3:	48 89 cf             	mov    %rcx,%rdi
    6ec6:	e8 c3 08 00 00       	call   778e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
    6ecb:	90                   	nop
    6ecc:	c9                   	leave
    6ecd:	c3                   	ret

0000000000006ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    6ece:	55                   	push   %rbp
    6ecf:	48 89 e5             	mov    %rsp,%rbp
    6ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    6ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6eda:	48 83 c0 08          	add    $0x8,%rax
    6ede:	5d                   	pop    %rbp
    6edf:	c3                   	ret

0000000000006ee0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    6ee0:	55                   	push   %rbp
    6ee1:	48 89 e5             	mov    %rsp,%rbp
    6ee4:	53                   	push   %rbx
    6ee5:	48 83 ec 38          	sub    $0x38,%rsp
    6ee9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6eed:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ef1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    6ef5:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    6ef9:	eb 56                	jmp    6f51 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    6efb:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    6eff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f03:	48 89 c7             	mov    %rax,%rdi
    6f06:	e8 e7 03 00 00       	call   72f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    6f0b:	48 89 c1             	mov    %rax,%rcx
    6f0e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6f12:	48 89 c2             	mov    %rax,%rdx
    6f15:	48 89 ce             	mov    %rcx,%rsi
    6f18:	48 89 df             	mov    %rbx,%rdi
    6f1b:	e8 96 eb ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    6f20:	83 f0 01             	xor    $0x1,%eax
    6f23:	84 c0                	test   %al,%al
    6f25:	74 1a                	je     6f41 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
    6f27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f2b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    6f2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f33:	48 89 c7             	mov    %rax,%rdi
    6f36:	e8 7c f3 ff ff       	call   62b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    6f3b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    6f3f:	eb 10                	jmp    6f51 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
    6f41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f45:	48 89 c7             	mov    %rax,%rdi
    6f48:	e8 58 f3 ff ff       	call   62a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    6f4d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    6f51:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    6f56:	75 a3                	jne    6efb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
    6f58:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    6f5c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f60:	48 89 d6             	mov    %rdx,%rsi
    6f63:	48 89 c7             	mov    %rax,%rdi
    6f66:	e8 53 fa ff ff       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    6f6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    6f6f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f73:	c9                   	leave
    6f74:	c3                   	ret
    6f75:	90                   	nop

0000000000006f76 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
    6f76:	55                   	push   %rbp
    6f77:	48 89 e5             	mov    %rsp,%rbp
    6f7a:	48 83 ec 10          	sub    $0x10,%rsp
    6f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
    6f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6f86:	48 89 c7             	mov    %rax,%rdi
    6f89:	e8 2e 08 00 00       	call   77bc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    6f8e:	c9                   	leave
    6f8f:	c3                   	ret

0000000000006f90 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
    6f90:	55                   	push   %rbp
    6f91:	48 89 e5             	mov    %rsp,%rbp
    6f94:	53                   	push   %rbx
    6f95:	48 83 ec 18          	sub    $0x18,%rsp
    6f99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6f9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
    6fa1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6fa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6fa9:	48 89 c7             	mov    %rax,%rdi
    6fac:	e8 2d f4 ff ff       	call   63de <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    6fb1:	48 89 c6             	mov    %rax,%rsi
    6fb4:	48 89 df             	mov    %rbx,%rdi
    6fb7:	e8 0e 08 00 00       	call   77ca <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
    6fbc:	90                   	nop
    6fbd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fc1:	c9                   	leave
    6fc2:	c3                   	ret
    6fc3:	90                   	nop

0000000000006fc4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
    6fc4:	55                   	push   %rbp
    6fc5:	48 89 e5             	mov    %rsp,%rbp
    6fc8:	41 54                	push   %r12
    6fca:	53                   	push   %rbx
    6fcb:	48 83 ec 30          	sub    $0x30,%rsp
    6fcf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6fd3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6fd7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    6fdb:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
    6fdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fe3:	48 89 c7             	mov    %rax,%rdi
    6fe6:	e8 05 08 00 00       	call   77f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
    6feb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
    6fef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    6ff3:	48 89 c7             	mov    %rax,%rdi
    6ff6:	e8 40 f4 ff ff       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    6ffb:	49 89 c4             	mov    %rax,%r12
    6ffe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7002:	48 89 c7             	mov    %rax,%rdi
    7005:	e8 23 f4 ff ff       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    700a:	48 89 c3             	mov    %rax,%rbx
    700d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7011:	48 89 c7             	mov    %rax,%rdi
    7014:	e8 06 f4 ff ff       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7019:	48 89 c2             	mov    %rax,%rdx
    701c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    7020:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7024:	4d 89 e0             	mov    %r12,%r8
    7027:	48 89 d9             	mov    %rbx,%rcx
    702a:	48 89 c7             	mov    %rax,%rdi
    702d:	e8 e6 07 00 00       	call   7818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
    7032:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7036:	48 83 c4 30          	add    $0x30,%rsp
    703a:	5b                   	pop    %rbx
    703b:	41 5c                	pop    %r12
    703d:	5d                   	pop    %rbp
    703e:	c3                   	ret
    703f:	90                   	nop

0000000000007040 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
    7040:	55                   	push   %rbp
    7041:	48 89 e5             	mov    %rsp,%rbp
    7044:	48 83 ec 20          	sub    $0x20,%rsp
    7048:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    704c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7050:	48 8b 10             	mov    (%rax),%rdx
    7053:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7057:	48 89 d6             	mov    %rdx,%rsi
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 5c f9 ff ff       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    7062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7066:	c9                   	leave
    7067:	c3                   	ret

0000000000007068 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    7068:	55                   	push   %rbp
    7069:	48 89 e5             	mov    %rsp,%rbp
    706c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    7070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7074:	48 8b 40 28          	mov    0x28(%rax),%rax
    7078:	5d                   	pop    %rbp
    7079:	c3                   	ret

000000000000707a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
    707a:	55                   	push   %rbp
    707b:	48 89 e5             	mov    %rsp,%rbp
    707e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
    7082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7086:	48 83 c0 20          	add    $0x20,%rax
    708a:	5d                   	pop    %rbp
    708b:	c3                   	ret

000000000000708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
    708c:	55                   	push   %rbp
    708d:	48 89 e5             	mov    %rsp,%rbp
    7090:	48 83 ec 10          	sub    $0x10,%rsp
    7094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
    7098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    709c:	48 89 c7             	mov    %rax,%rdi
    709f:	e8 4e 02 00 00       	call   72f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    70a4:	c9                   	leave
    70a5:	c3                   	ret

00000000000070a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
	       enable_if<_PCCP::template
			   _ConstructiblePair<_U1, _U2>()
	                 && _PCCP::template
			   _ImplicitlyConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
      constexpr pair(const _T1& __a, const _T2& __b)
    70a6:	55                   	push   %rbp
    70a7:	48 89 e5             	mov    %rsp,%rbp
    70aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    70b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
    70b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    70ba:	48 8b 10             	mov    (%rax),%rdx
    70bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70c1:	48 89 10             	mov    %rdx,(%rax)
    70c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    70c8:	48 8b 10             	mov    (%rax),%rdx
    70cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    70cf:	48 89 50 08          	mov    %rdx,0x8(%rax)
    70d3:	90                   	nop
    70d4:	5d                   	pop    %rbp
    70d5:	c3                   	ret

00000000000070d6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    70d6:	55                   	push   %rbp
    70d7:	48 89 e5             	mov    %rsp,%rbp
    70da:	53                   	push   %rbx
    70db:	48 83 ec 78          	sub    $0x78,%rsp
    70df:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    70e3:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    70e7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    70eb:	48 89 c7             	mov    %rax,%rdi
    70ee:	e8 e1 e8 ff ff       	call   59d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
    70f3:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    70f7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    70fb:	48 89 c7             	mov    %rax,%rdi
    70fe:	e8 cb fd ff ff       	call   6ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    7103:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    7107:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    710b:	eb 51                	jmp    715e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
    710d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7111:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    7115:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    7119:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    711d:	48 89 c7             	mov    %rax,%rdi
    7120:	e8 cd 01 00 00       	call   72f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    7125:	48 89 c2             	mov    %rax,%rdx
    7128:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    712c:	48 89 c6             	mov    %rax,%rsi
    712f:	48 89 df             	mov    %rbx,%rdi
    7132:	e8 7f e9 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    7137:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    713a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    713e:	74 0e                	je     714e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
    7140:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7144:	48 89 c7             	mov    %rax,%rdi
    7147:	e8 6b f1 ff ff       	call   62b7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
    714c:	eb 0c                	jmp    715a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
    714e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7152:	48 89 c7             	mov    %rax,%rdi
    7155:	e8 4b f1 ff ff       	call   62a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
    715a:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    715e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    7162:	48 85 c0             	test   %rax,%rax
    7165:	75 a6                	jne    710d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
    7167:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    716b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    716f:	48 89 d6             	mov    %rdx,%rsi
    7172:	48 89 c7             	mov    %rax,%rdi
    7175:	e8 44 f8 ff ff       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    717a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    717e:	74 54                	je     71d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
    7180:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7184:	48 89 c7             	mov    %rax,%rdi
    7187:	e8 5e 07 00 00       	call   78ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
    718c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7190:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    7194:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7198:	48 89 d6             	mov    %rdx,%rsi
    719b:	48 89 c7             	mov    %rax,%rdi
    719e:	e8 b7 e8 ff ff       	call   5a5a <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
    71a3:	84 c0                	test   %al,%al
    71a5:	74 21                	je     71c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
    71a7:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    71ab:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    71af:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    71b3:	48 89 ce             	mov    %rcx,%rsi
    71b6:	48 89 c7             	mov    %rax,%rdi
    71b9:	e8 56 07 00 00       	call   7914 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    71be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    71c2:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    71c6:	eb 7d                	jmp    7245 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
    71c8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    71cc:	48 89 c7             	mov    %rax,%rdi
    71cf:	e8 ce 00 00 00       	call   72a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    71d4:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    71d8:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    71dc:	48 89 c7             	mov    %rax,%rdi
    71df:	e8 a8 fe ff ff       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    71e4:	48 89 c1             	mov    %rax,%rcx
    71e7:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    71eb:	48 89 c2             	mov    %rax,%rdx
    71ee:	48 89 ce             	mov    %rcx,%rsi
    71f1:	48 89 df             	mov    %rbx,%rdi
    71f4:	e8 bd e8 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    71f9:	84 c0                	test   %al,%al
    71fb:	74 21                	je     721e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
    71fd:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    7201:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    7205:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    7209:	48 89 ce             	mov    %rcx,%rsi
    720c:	48 89 c7             	mov    %rax,%rdi
    720f:	e8 00 07 00 00       	call   7914 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
    7214:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7218:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    721c:	eb 27                	jmp    7245 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
    721e:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    7225:	00 
    7226:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    722a:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    722e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    7232:	48 89 ce             	mov    %rcx,%rsi
    7235:	48 89 c7             	mov    %rax,%rdi
    7238:	e8 69 fe ff ff       	call   70a6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    723d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7241:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    7245:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7249:	c9                   	leave
    724a:	c3                   	ret
    724b:	90                   	nop

000000000000724c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
    724c:	55                   	push   %rbp
    724d:	48 89 e5             	mov    %rsp,%rbp
    7250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
    7254:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7258:	48 83 c0 18          	add    $0x18,%rax
    725c:	5d                   	pop    %rbp
    725d:	c3                   	ret

000000000000725e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    725e:	55                   	push   %rbp
    725f:	48 89 e5             	mov    %rsp,%rbp
    7262:	48 83 ec 20          	sub    $0x20,%rsp
    7266:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    726a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    726e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    7272:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7276:	48 89 c7             	mov    %rax,%rdi
    7279:	e8 da 06 00 00       	call   7958 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    727e:	48 8b 10             	mov    (%rax),%rdx
    7281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7285:	48 89 10             	mov    %rdx,(%rax)
    7288:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    728c:	48 89 c7             	mov    %rax,%rdi
    728f:	e8 c4 06 00 00       	call   7958 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    7294:	48 8b 10             	mov    (%rax),%rdx
    7297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    729b:	48 89 50 08          	mov    %rdx,0x8(%rax)
    729f:	90                   	nop
    72a0:	c9                   	leave
    72a1:	c3                   	ret

00000000000072a2 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
    72a2:	55                   	push   %rbp
    72a3:	48 89 e5             	mov    %rsp,%rbp
    72a6:	48 83 ec 10          	sub    $0x10,%rsp
    72aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
    72ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72b2:	48 8b 00             	mov    (%rax),%rax
    72b5:	48 89 c7             	mov    %rax,%rdi
    72b8:	e8 c3 af ff ff       	call   2280 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
    72bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    72c1:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    72c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    72c8:	c9                   	leave
    72c9:	c3                   	ret

00000000000072ca <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    72ca:	55                   	push   %rbp
    72cb:	48 89 e5             	mov    %rsp,%rbp
    72ce:	48 83 ec 10          	sub    $0x10,%rsp
    72d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    72d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    72da:	48 8b 00             	mov    (%rax),%rax
    72dd:	48 89 c7             	mov    %rax,%rdi
    72e0:	e8 5b ae ff ff       	call   2140 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
    72e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    72e9:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    72ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    72f0:	c9                   	leave
    72f1:	c3                   	ret

00000000000072f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
    72f2:	55                   	push   %rbp
    72f3:	48 89 e5             	mov    %rsp,%rbp
    72f6:	48 83 ec 20          	sub    $0x20,%rsp
    72fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    72fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7302:	48 89 c7             	mov    %rax,%rdi
    7305:	e8 5c 06 00 00       	call   7966 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    730a:	48 89 c2             	mov    %rax,%rdx
    730d:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    7311:	48 89 d6             	mov    %rdx,%rsi
    7314:	48 89 c7             	mov    %rax,%rdi
    7317:	e8 68 06 00 00       	call   7984 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
    731c:	c9                   	leave
    731d:	c3                   	ret

000000000000731e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    731e:	55                   	push   %rbp
    731f:	48 89 e5             	mov    %rsp,%rbp
    7322:	41 54                	push   %r12
    7324:	53                   	push   %rbx
    7325:	48 83 ec 30          	sub    $0x30,%rsp
    7329:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    732d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7331:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7335:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
    7339:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    733e:	75 43                	jne    7383 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
    7340:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7344:	48 89 c7             	mov    %rax,%rdi
    7347:	e8 82 fb ff ff       	call   6ece <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
    734c:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
    7350:	74 31                	je     7383 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
    7352:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    7356:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    735a:	48 89 c7             	mov    %rax,%rdi
    735d:	e8 2a fd ff ff       	call   708c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
    7362:	49 89 c4             	mov    %rax,%r12
    7365:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    7369:	48 89 c7             	mov    %rax,%rdi
    736c:	e8 81 ff ff ff       	call   72f2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
    7371:	4c 89 e2             	mov    %r12,%rdx
    7374:	48 89 c6             	mov    %rax,%rsi
    7377:	48 89 df             	mov    %rbx,%rdi
    737a:	e8 37 e7 ff ff       	call   5ab6 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    737f:	84 c0                	test   %al,%al
    7381:	74 07                	je     738a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
    7383:	b8 01 00 00 00       	mov    $0x1,%eax
    7388:	eb 05                	jmp    738f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
    738a:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
    738f:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
    7392:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7396:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
    739a:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    739e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    73a2:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
    73a6:	89 c7                	mov    %eax,%edi
    73a8:	e8 93 ac ff ff       	call   2040 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
    73ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73b1:	48 8b 40 28          	mov    0x28(%rax),%rax
    73b5:	48 8d 50 01          	lea    0x1(%rax),%rdx
    73b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73bd:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
    73c1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    73c5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    73c9:	48 89 d6             	mov    %rdx,%rsi
    73cc:	48 89 c7             	mov    %rax,%rdi
    73cf:	e8 ea f5 ff ff       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    73d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
    73d8:	48 83 c4 30          	add    $0x30,%rsp
    73dc:	5b                   	pop    %rbx
    73dd:	41 5c                	pop    %r12
    73df:	5d                   	pop    %rbp
    73e0:	c3                   	ret

00000000000073e1 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    73e1:	55                   	push   %rbp
    73e2:	48 89 e5             	mov    %rsp,%rbp
    73e5:	48 83 ec 10          	sub    $0x10,%rsp
    73e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    73ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    73f1:	48 89 c7             	mov    %rax,%rdi
    73f4:	e8 9d 05 00 00       	call   7996 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    73f9:	c9                   	leave
    73fa:	c3                   	ret
    73fb:	90                   	nop

00000000000073fc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    73fc:	55                   	push   %rbp
    73fd:	48 89 e5             	mov    %rsp,%rbp
    7400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    7404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7408:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    740f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7413:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    741a:	00 
    741b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    741f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    7426:	00 
	{ }
    7427:	90                   	nop
    7428:	5d                   	pop    %rbp
    7429:	c3                   	ret

000000000000742a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    742a:	55                   	push   %rbp
    742b:	48 89 e5             	mov    %rsp,%rbp
    742e:	48 83 ec 10          	sub    $0x10,%rsp
    7432:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7436:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    743a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    743f:	74 15                	je     7456 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    7441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7445:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7449:	48 89 d6             	mov    %rdx,%rsi
    744c:	48 89 c7             	mov    %rax,%rdi
    744f:	e8 5c 05 00 00       	call   79b0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    7454:	eb 05                	jmp    745b <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    7456:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    745b:	c9                   	leave
    745c:	c3                   	ret

000000000000745d <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    745d:	55                   	push   %rbp
    745e:	48 89 e5             	mov    %rsp,%rbp
    7461:	48 83 ec 20          	sub    $0x20,%rsp
    7465:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7469:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    746d:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    7471:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7479:	48 89 d6             	mov    %rdx,%rsi
    747c:	48 89 c7             	mov    %rax,%rdi
    747f:	e8 56 05 00 00       	call   79da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    7484:	c9                   	leave
    7485:	c3                   	ret

0000000000007486 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7486:	55                   	push   %rbp
    7487:	48 89 e5             	mov    %rsp,%rbp
    748a:	48 83 ec 20          	sub    $0x20,%rsp
    748e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7492:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7496:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    749a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    749e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    74a5:	00 
    74a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    74aa:	48 89 d6             	mov    %rdx,%rsi
    74ad:	48 89 c7             	mov    %rax,%rdi
    74b0:	e8 9b ad ff ff       	call   2250 <_ZdlPvm@plt>
      }
    74b5:	c9                   	leave
    74b6:	c3                   	ret
    74b7:	90                   	nop

00000000000074b8 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    74b8:	55                   	push   %rbp
    74b9:	48 89 e5             	mov    %rsp,%rbp
    74bc:	48 83 ec 10          	sub    $0x10,%rsp
    74c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    74c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74c8:	48 89 c7             	mov    %rax,%rdi
    74cb:	e8 68 05 00 00       	call   7a38 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    74d0:	c9                   	leave
    74d1:	c3                   	ret

00000000000074d2 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    74d2:	55                   	push   %rbp
    74d3:	48 89 e5             	mov    %rsp,%rbp
    74d6:	48 83 ec 10          	sub    $0x10,%rsp
    74da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    74de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    74e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    74e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    74ea:	ba 00 00 00 00       	mov    $0x0,%edx
    74ef:	48 89 ce             	mov    %rcx,%rsi
    74f2:	48 89 c7             	mov    %rax,%rdi
    74f5:	e8 52 05 00 00       	call   7a4c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    74fa:	c9                   	leave
    74fb:	c3                   	ret

00000000000074fc <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    74fc:	55                   	push   %rbp
    74fd:	48 89 e5             	mov    %rsp,%rbp
    7500:	48 83 ec 20          	sub    $0x20,%rsp
    7504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7508:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    750c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7510:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7514:	48 89 d0             	mov    %rdx,%rax
    7517:	48 01 c0             	add    %rax,%rax
    751a:	48 01 d0             	add    %rdx,%rax
    751d:	48 c1 e0 03          	shl    $0x3,%rax
    7521:	48 89 c2             	mov    %rax,%rdx
    7524:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7528:	48 89 d6             	mov    %rdx,%rsi
    752b:	48 89 c7             	mov    %rax,%rdi
    752e:	e8 1d ad ff ff       	call   2250 <_ZdlPvm@plt>
      }
    7533:	c9                   	leave
    7534:	c3                   	ret

0000000000007535 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    7535:	55                   	push   %rbp
    7536:	48 89 e5             	mov    %rsp,%rbp
    7539:	48 83 ec 20          	sub    $0x20,%rsp
    753d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7541:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    7545:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    754a:	74 40                	je     758c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    754c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7550:	48 89 c7             	mov    %rax,%rdi
    7553:	e8 5e 05 00 00       	call   7ab6 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    7558:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    755c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7560:	48 89 c7             	mov    %rax,%rdi
    7563:	e8 5c 05 00 00       	call   7ac4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    7568:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    756d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7571:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7575:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7579:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    757d:	48 89 ce             	mov    %rcx,%rsi
    7580:	48 89 c7             	mov    %rax,%rdi
    7583:	e8 85 05 00 00       	call   7b0d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    7588:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    758c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7590:	c9                   	leave
    7591:	c3                   	ret

0000000000007592 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    7592:	55                   	push   %rbp
    7593:	48 89 e5             	mov    %rsp,%rbp
    7596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    759a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    759e:	90                   	nop
    759f:	5d                   	pop    %rbp
    75a0:	c3                   	ret
    75a1:	90                   	nop

00000000000075a2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    75a2:	55                   	push   %rbp
    75a3:	48 89 e5             	mov    %rsp,%rbp
    75a6:	48 83 ec 20          	sub    $0x20,%rsp
    75aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    75b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75ba:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    75c1:	00 
    75c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    75c6:	48 89 d6             	mov    %rdx,%rsi
    75c9:	48 89 c7             	mov    %rax,%rdi
    75cc:	e8 7f ac ff ff       	call   2250 <_ZdlPvm@plt>
      }
    75d1:	c9                   	leave
    75d2:	c3                   	ret

00000000000075d3 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    75d3:	55                   	push   %rbp
    75d4:	48 89 e5             	mov    %rsp,%rbp
    75d7:	48 83 ec 10          	sub    $0x10,%rsp
    75db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    75df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    75e3:	48 89 c7             	mov    %rax,%rdi
    75e6:	e8 67 05 00 00       	call   7b52 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    75eb:	c9                   	leave
    75ec:	c3                   	ret
    75ed:	90                   	nop

00000000000075ee <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    75ee:	55                   	push   %rbp
    75ef:	48 89 e5             	mov    %rsp,%rbp
    75f2:	48 83 ec 20          	sub    $0x20,%rsp
    75f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    75fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    75fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7606:	48 89 c7             	mov    %rax,%rdi
    7609:	e8 5e 05 00 00       	call   7b6c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    760e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7612:	0f 92 c0             	setb   %al
    7615:	0f b6 c0             	movzbl %al,%eax
    7618:	48 85 c0             	test   %rax,%rax
    761b:	0f 95 c0             	setne  %al
    761e:	84 c0                	test   %al,%al
    7620:	74 1a                	je     763c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7622:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7629:	ff ff 1f 
    762c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7630:	73 05                	jae    7637 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7632:	e8 79 ab ff ff       	call   21b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7637:	e8 44 aa ff ff       	call   2080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    763c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7640:	48 c1 e0 03          	shl    $0x3,%rax
    7644:	48 89 c7             	mov    %rax,%rdi
    7647:	e8 f4 ab ff ff       	call   2240 <_Znwm@plt>
    764c:	90                   	nop
      }
    764d:	c9                   	leave
    764e:	c3                   	ret

000000000000764f <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    764f:	55                   	push   %rbp
    7650:	48 89 e5             	mov    %rsp,%rbp
    7653:	48 83 ec 20          	sub    $0x20,%rsp
    7657:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    765b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    765f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    7663:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7667:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    766b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    766f:	48 89 ce             	mov    %rcx,%rsi
    7672:	48 89 c7             	mov    %rax,%rdi
    7675:	e8 06 05 00 00       	call   7b80 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    767a:	c9                   	leave
    767b:	c3                   	ret

000000000000767c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    767c:	55                   	push   %rbp
    767d:	48 89 e5             	mov    %rsp,%rbp
    7680:	48 83 ec 10          	sub    $0x10,%rsp
    7684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7688:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    768c:	48 89 c7             	mov    %rax,%rdi
    768f:	e8 38 05 00 00       	call   7bcc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7694:	c9                   	leave
    7695:	c3                   	ret

0000000000007696 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    7696:	55                   	push   %rbp
    7697:	48 89 e5             	mov    %rsp,%rbp
    769a:	48 83 ec 10          	sub    $0x10,%rsp
    769e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    76a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    76aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    76ae:	ba 00 00 00 00       	mov    $0x0,%edx
    76b3:	48 89 ce             	mov    %rcx,%rsi
    76b6:	48 89 c7             	mov    %rax,%rdi
    76b9:	e8 22 05 00 00       	call   7be0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    76be:	c9                   	leave
    76bf:	c3                   	ret

00000000000076c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    76c0:	55                   	push   %rbp
    76c1:	48 89 e5             	mov    %rsp,%rbp
    76c4:	48 83 ec 20          	sub    $0x20,%rsp
    76c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    76cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    76d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    76d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    76d8:	48 89 d0             	mov    %rdx,%rax
    76db:	48 c1 e0 06          	shl    $0x6,%rax
    76df:	48 01 d0             	add    %rdx,%rax
    76e2:	48 c1 e0 02          	shl    $0x2,%rax
    76e6:	48 89 c2             	mov    %rax,%rdx
    76e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    76ed:	48 89 d6             	mov    %rdx,%rsi
    76f0:	48 89 c7             	mov    %rax,%rdi
    76f3:	e8 58 ab ff ff       	call   2250 <_ZdlPvm@plt>
      }
    76f8:	c9                   	leave
    76f9:	c3                   	ret

00000000000076fa <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    76fa:	55                   	push   %rbp
    76fb:	48 89 e5             	mov    %rsp,%rbp
    76fe:	48 83 ec 20          	sub    $0x20,%rsp
    7702:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7706:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    770a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    770f:	74 43                	je     7754 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    7711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7715:	48 89 c7             	mov    %rax,%rdi
    7718:	e8 2e 05 00 00       	call   7c4b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    771d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7725:	48 89 c7             	mov    %rax,%rdi
    7728:	e8 2c 05 00 00       	call   7c59 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    772d:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    7734:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    7735:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7739:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    773d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7745:	48 89 ce             	mov    %rcx,%rsi
    7748:	48 89 c7             	mov    %rax,%rdi
    774b:	e8 63 05 00 00       	call   7cb3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    7750:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7758:	c9                   	leave
    7759:	c3                   	ret

000000000000775a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
    775a:	55                   	push   %rbp
    775b:	48 89 e5             	mov    %rsp,%rbp
    775e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    7762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7766:	5d                   	pop    %rbp
    7767:	c3                   	ret

0000000000007768 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
    7768:	55                   	push   %rbp
    7769:	48 89 e5             	mov    %rsp,%rbp
    776c:	48 83 ec 10          	sub    $0x10,%rsp
    7770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7774:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
    7778:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    777c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7780:	48 89 d6             	mov    %rdx,%rsi
    7783:	48 89 c7             	mov    %rax,%rdi
    7786:	e8 89 05 00 00       	call   7d14 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
    778b:	90                   	nop
    778c:	c9                   	leave
    778d:	c3                   	ret

000000000000778e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    778e:	55                   	push   %rbp
    778f:	48 89 e5             	mov    %rsp,%rbp
    7792:	48 83 ec 20          	sub    $0x20,%rsp
    7796:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    779a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    779e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    77a2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    77a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    77aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77ae:	48 89 ce             	mov    %rcx,%rsi
    77b1:	48 89 c7             	mov    %rax,%rdi
    77b4:	e8 7b 05 00 00       	call   7d34 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
    77b9:	90                   	nop
    77ba:	c9                   	leave
    77bb:	c3                   	ret

00000000000077bc <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
    77bc:	55                   	push   %rbp
    77bd:	48 89 e5             	mov    %rsp,%rbp
    77c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
    77c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    77c8:	5d                   	pop    %rbp
    77c9:	c3                   	ret

00000000000077ca <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
    77ca:	55                   	push   %rbp
    77cb:	48 89 e5             	mov    %rsp,%rbp
    77ce:	48 83 ec 10          	sub    $0x10,%rsp
    77d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    77d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
    77da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    77de:	48 89 c7             	mov    %rax,%rdi
    77e1:	e8 f8 eb ff ff       	call   63de <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
    77e6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    77ea:	48 89 02             	mov    %rax,(%rdx)
    77ed:	90                   	nop
    77ee:	c9                   	leave
    77ef:	c3                   	ret

00000000000077f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
    77f0:	55                   	push   %rbp
    77f1:	48 89 e5             	mov    %rsp,%rbp
    77f4:	48 83 ec 10          	sub    $0x10,%rsp
    77f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
    77fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7800:	48 89 c7             	mov    %rax,%rdi
    7803:	e8 52 ff ff ff       	call   775a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7808:	be 01 00 00 00       	mov    $0x1,%esi
    780d:	48 89 c7             	mov    %rax,%rdi
    7810:	e8 59 05 00 00       	call   7d6e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
    7815:	c9                   	leave
    7816:	c3                   	ret
    7817:	90                   	nop

0000000000007818 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
    7818:	55                   	push   %rbp
    7819:	48 89 e5             	mov    %rsp,%rbp
    781c:	41 56                	push   %r14
    781e:	41 55                	push   %r13
    7820:	41 54                	push   %r12
    7822:	53                   	push   %rbx
    7823:	48 83 ec 30          	sub    $0x30,%rsp
    7827:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    782b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    782f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    7833:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
    7837:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
    783b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    783f:	48 89 c6             	mov    %rax,%rsi
    7842:	bf 48 00 00 00       	mov    $0x48,%edi
    7847:	e8 f7 d0 ff ff       	call   4943 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
    784c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7850:	48 89 c7             	mov    %rax,%rdi
    7853:	e8 e3 eb ff ff       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7858:	49 89 c6             	mov    %rax,%r14
    785b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    785f:	48 89 c7             	mov    %rax,%rdi
    7862:	e8 c6 eb ff ff       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    7867:	49 89 c5             	mov    %rax,%r13
    786a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    786e:	48 89 c7             	mov    %rax,%rdi
    7871:	e8 a9 eb ff ff       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7876:	49 89 c4             	mov    %rax,%r12
    7879:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    787d:	48 89 c7             	mov    %rax,%rdi
    7880:	e8 13 eb ff ff       	call   6398 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
    7885:	48 89 c3             	mov    %rax,%rbx
    7888:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    788c:	48 89 c7             	mov    %rax,%rdi
    788f:	e8 c6 fe ff ff       	call   775a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
    7894:	4d 89 f0             	mov    %r14,%r8
    7897:	4c 89 e9             	mov    %r13,%rcx
    789a:	4c 89 e2             	mov    %r12,%rdx
    789d:	48 89 de             	mov    %rbx,%rsi
    78a0:	48 89 c7             	mov    %rax,%rdi
    78a3:	e8 f0 04 00 00       	call   7d98 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
    78a8:	eb 33                	jmp    78dd <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
    78aa:	48 89 c7             	mov    %rax,%rdi
    78ad:	e8 fe a7 ff ff       	call   20b0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
    78b2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    78b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78ba:	48 89 d6             	mov    %rdx,%rsi
    78bd:	48 89 c7             	mov    %rax,%rdi
    78c0:	e8 d3 f5 ff ff       	call   6e98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
    78c5:	e8 a6 aa ff ff       	call   2370 <__cxa_rethrow@plt>
	  __catch(...)
    78ca:	48 89 c3             	mov    %rax,%rbx
    78cd:	e8 fe aa ff ff       	call   23d0 <__cxa_end_catch@plt>
    78d2:	48 89 d8             	mov    %rbx,%rax
    78d5:	48 89 c7             	mov    %rax,%rdi
    78d8:	e8 23 ab ff ff       	call   2400 <_Unwind_Resume@plt>
	}
    78dd:	48 83 c4 30          	add    $0x30,%rsp
    78e1:	5b                   	pop    %rbx
    78e2:	41 5c                	pop    %r12
    78e4:	41 5d                	pop    %r13
    78e6:	41 5e                	pop    %r14
    78e8:	5d                   	pop    %rbp
    78e9:	c3                   	ret

00000000000078ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    78ea:	55                   	push   %rbp
    78eb:	48 89 e5             	mov    %rsp,%rbp
    78ee:	48 83 ec 20          	sub    $0x20,%rsp
    78f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    78f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    78fa:	48 8b 50 18          	mov    0x18(%rax),%rdx
    78fe:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7902:	48 89 d6             	mov    %rdx,%rsi
    7905:	48 89 c7             	mov    %rax,%rdi
    7908:	e8 b1 f0 ff ff       	call   69be <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
    790d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7911:	c9                   	leave
    7912:	c3                   	ret
    7913:	90                   	nop

0000000000007914 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    7914:	55                   	push   %rbp
    7915:	48 89 e5             	mov    %rsp,%rbp
    7918:	48 83 ec 20          	sub    $0x20,%rsp
    791c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7920:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7924:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    7928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    792c:	48 89 c7             	mov    %rax,%rdi
    792f:	e8 d0 04 00 00       	call   7e04 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
    7934:	48 8b 10             	mov    (%rax),%rdx
    7937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    793b:	48 89 10             	mov    %rdx,(%rax)
    793e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7942:	48 89 c7             	mov    %rax,%rdi
    7945:	e8 0e 00 00 00       	call   7958 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
    794a:	48 8b 10             	mov    (%rax),%rdx
    794d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7951:	48 89 50 08          	mov    %rdx,0x8(%rax)
    7955:	90                   	nop
    7956:	c9                   	leave
    7957:	c3                   	ret

0000000000007958 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7958:	55                   	push   %rbp
    7959:	48 89 e5             	mov    %rsp,%rbp
    795c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7964:	5d                   	pop    %rbp
    7965:	c3                   	ret

0000000000007966 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
    7966:	55                   	push   %rbp
    7967:	48 89 e5             	mov    %rsp,%rbp
    796a:	48 83 ec 10          	sub    $0x10,%rsp
    796e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    7972:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7976:	48 83 c0 20          	add    $0x20,%rax
    797a:	48 89 c7             	mov    %rax,%rdi
    797d:	e8 90 04 00 00       	call   7e12 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
    7982:	c9                   	leave
    7983:	c3                   	ret

0000000000007984 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
    7984:	55                   	push   %rbp
    7985:	48 89 e5             	mov    %rsp,%rbp
    7988:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    798c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
    7990:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7994:	5d                   	pop    %rbp
    7995:	c3                   	ret

0000000000007996 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7996:	55                   	push   %rbp
    7997:	48 89 e5             	mov    %rsp,%rbp
    799a:	48 83 ec 10          	sub    $0x10,%rsp
    799e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    79a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79a6:	48 89 c7             	mov    %rax,%rdi
    79a9:	e8 7e 04 00 00       	call   7e2c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    79ae:	c9                   	leave
    79af:	c3                   	ret

00000000000079b0 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    79b0:	55                   	push   %rbp
    79b1:	48 89 e5             	mov    %rsp,%rbp
    79b4:	48 83 ec 10          	sub    $0x10,%rsp
    79b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    79bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    79c0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    79c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    79c8:	ba 00 00 00 00       	mov    $0x0,%edx
    79cd:	48 89 ce             	mov    %rcx,%rsi
    79d0:	48 89 c7             	mov    %rax,%rdi
    79d3:	e8 68 04 00 00       	call   7e40 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    79d8:	c9                   	leave
    79d9:	c3                   	ret

00000000000079da <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    79da:	55                   	push   %rbp
    79db:	48 89 e5             	mov    %rsp,%rbp
    79de:	48 83 ec 20          	sub    $0x20,%rsp
    79e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    79e6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    79ea:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    79ef:	74 40                	je     7a31 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    79f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79f5:	48 89 c7             	mov    %rax,%rdi
    79f8:	e8 a4 04 00 00       	call   7ea1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    79fd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    7a01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a05:	48 89 c7             	mov    %rax,%rdi
    7a08:	e8 a2 04 00 00       	call   7eaf <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    7a0d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    7a12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7a16:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    7a1a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7a1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7a22:	48 89 ce             	mov    %rcx,%rsi
    7a25:	48 89 c7             	mov    %rax,%rdi
    7a28:	e8 a9 04 00 00       	call   7ed6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    7a2d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    7a31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    7a35:	c9                   	leave
    7a36:	c3                   	ret
    7a37:	90                   	nop

0000000000007a38 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7a38:	55                   	push   %rbp
    7a39:	48 89 e5             	mov    %rsp,%rbp
    7a3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7a40:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    7a47:	55 55 05 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    7a4a:	5d                   	pop    %rbp
    7a4b:	c3                   	ret

0000000000007a4c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7a4c:	55                   	push   %rbp
    7a4d:	48 89 e5             	mov    %rsp,%rbp
    7a50:	48 83 ec 20          	sub    $0x20,%rsp
    7a54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7a58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7a5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7a64:	48 89 c7             	mov    %rax,%rdi
    7a67:	e8 cc ff ff ff       	call   7a38 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    7a6c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a70:	0f 92 c0             	setb   %al
    7a73:	0f b6 c0             	movzbl %al,%eax
    7a76:	48 85 c0             	test   %rax,%rax
    7a79:	0f 95 c0             	setne  %al
    7a7c:	84 c0                	test   %al,%al
    7a7e:	74 1a                	je     7a9a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7a80:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    7a87:	aa aa 0a 
    7a8a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7a8e:	73 05                	jae    7a95 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7a90:	e8 1b a7 ff ff       	call   21b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7a95:	e8 e6 a5 ff ff       	call   2080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7a9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7a9e:	48 89 d0             	mov    %rdx,%rax
    7aa1:	48 01 c0             	add    %rax,%rax
    7aa4:	48 01 d0             	add    %rdx,%rax
    7aa7:	48 c1 e0 03          	shl    $0x3,%rax
    7aab:	48 89 c7             	mov    %rax,%rdi
    7aae:	e8 8d a7 ff ff       	call   2240 <_Znwm@plt>
    7ab3:	90                   	nop
      }
    7ab4:	c9                   	leave
    7ab5:	c3                   	ret

0000000000007ab6 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7ab6:	55                   	push   %rbp
    7ab7:	48 89 e5             	mov    %rsp,%rbp
    7aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ac2:	5d                   	pop    %rbp
    7ac3:	c3                   	ret

0000000000007ac4 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7ac4:	55                   	push   %rbp
    7ac5:	48 89 e5             	mov    %rsp,%rbp
    7ac8:	48 83 ec 10          	sub    $0x10,%rsp
    7acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7ad0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ad4:	48 89 c6             	mov    %rax,%rsi
    7ad7:	bf 18 00 00 00       	mov    $0x18,%edi
    7adc:	e8 62 ce ff ff       	call   4943 <_ZnwmPv>
    7ae1:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    7ae7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    7aee:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    7af5:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    7afc:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    7b03:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    7b0a:	90                   	nop
    7b0b:	c9                   	leave
    7b0c:	c3                   	ret

0000000000007b0d <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7b0d:	55                   	push   %rbp
    7b0e:	48 89 e5             	mov    %rsp,%rbp
    7b11:	48 83 ec 20          	sub    $0x20,%rsp
    7b15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7b1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    7b21:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7b25:	48 89 c7             	mov    %rax,%rdi
    7b28:	e8 ed 03 00 00       	call   7f1a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7b2d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7b31:	48 89 c7             	mov    %rax,%rdi
    7b34:	e8 2b ce ff ff       	call   4964 <_ZSt17__size_to_integerm>
    7b39:	48 89 c1             	mov    %rax,%rcx
    7b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7b44:	48 89 ce             	mov    %rcx,%rsi
    7b47:	48 89 c7             	mov    %rax,%rdi
    7b4a:	e8 d6 03 00 00       	call   7f25 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7b4f:	c9                   	leave
    7b50:	c3                   	ret
    7b51:	90                   	nop

0000000000007b52 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    7b52:	55                   	push   %rbp
    7b53:	48 89 e5             	mov    %rsp,%rbp
    7b56:	48 83 ec 10          	sub    $0x10,%rsp
    7b5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    7b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b62:	48 89 c7             	mov    %rax,%rdi
    7b65:	e8 02 00 00 00       	call   7b6c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    7b6a:	c9                   	leave
    7b6b:	c3                   	ret

0000000000007b6c <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7b6c:	55                   	push   %rbp
    7b6d:	48 89 e5             	mov    %rsp,%rbp
    7b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7b74:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7b7b:	ff ff 0f 
      }
    7b7e:	5d                   	pop    %rbp
    7b7f:	c3                   	ret

0000000000007b80 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    7b80:	55                   	push   %rbp
    7b81:	48 89 e5             	mov    %rsp,%rbp
    7b84:	53                   	push   %rbx
    7b85:	48 83 ec 28          	sub    $0x28,%rsp
    7b89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7b8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7b91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    7b95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7b99:	48 89 c7             	mov    %rax,%rdi
    7b9c:	e8 f1 03 00 00       	call   7f92 <_ZSt12__miter_baseIPKPKcET_S4_>
    7ba1:	48 89 c3             	mov    %rax,%rbx
    7ba4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ba8:	48 89 c7             	mov    %rax,%rdi
    7bab:	e8 e2 03 00 00       	call   7f92 <_ZSt12__miter_baseIPKPKcET_S4_>
    7bb0:	48 89 c1             	mov    %rax,%rcx
    7bb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7bb7:	48 89 c2             	mov    %rax,%rdx
    7bba:	48 89 de             	mov    %rbx,%rsi
    7bbd:	48 89 cf             	mov    %rcx,%rdi
    7bc0:	e8 db 03 00 00       	call   7fa0 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    7bc5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7bc9:	c9                   	leave
    7bca:	c3                   	ret
    7bcb:	90                   	nop

0000000000007bcc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7bcc:	55                   	push   %rbp
    7bcd:	48 89 e5             	mov    %rsp,%rbp
    7bd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7bd4:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    7bdb:	07 7e 00 
      }
    7bde:	5d                   	pop    %rbp
    7bdf:	c3                   	ret

0000000000007be0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7be0:	55                   	push   %rbp
    7be1:	48 89 e5             	mov    %rsp,%rbp
    7be4:	48 83 ec 20          	sub    $0x20,%rsp
    7be8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7bf0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bf8:	48 89 c7             	mov    %rax,%rdi
    7bfb:	e8 cc ff ff ff       	call   7bcc <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    7c00:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7c04:	0f 92 c0             	setb   %al
    7c07:	0f b6 c0             	movzbl %al,%eax
    7c0a:	48 85 c0             	test   %rax,%rax
    7c0d:	0f 95 c0             	setne  %al
    7c10:	84 c0                	test   %al,%al
    7c12:	74 1a                	je     7c2e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7c14:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    7c1b:	0f fc 00 
    7c1e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7c22:	73 05                	jae    7c29 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7c24:	e8 87 a5 ff ff       	call   21b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7c29:	e8 52 a4 ff ff       	call   2080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7c2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7c32:	48 89 d0             	mov    %rdx,%rax
    7c35:	48 c1 e0 06          	shl    $0x6,%rax
    7c39:	48 01 d0             	add    %rdx,%rax
    7c3c:	48 c1 e0 02          	shl    $0x2,%rax
    7c40:	48 89 c7             	mov    %rax,%rdi
    7c43:	e8 f8 a5 ff ff       	call   2240 <_Znwm@plt>
    7c48:	90                   	nop
      }
    7c49:	c9                   	leave
    7c4a:	c3                   	ret

0000000000007c4b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7c4b:	55                   	push   %rbp
    7c4c:	48 89 e5             	mov    %rsp,%rbp
    7c4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7c53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c57:	5d                   	pop    %rbp
    7c58:	c3                   	ret

0000000000007c59 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7c59:	55                   	push   %rbp
    7c5a:	48 89 e5             	mov    %rsp,%rbp
    7c5d:	48 83 ec 10          	sub    $0x10,%rsp
    7c61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7c65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c69:	48 89 c6             	mov    %rax,%rsi
    7c6c:	bf 04 01 00 00       	mov    $0x104,%edi
    7c71:	e8 cd cc ff ff       	call   4943 <_ZnwmPv>
    7c76:	b9 04 01 00 00       	mov    $0x104,%ecx
    7c7b:	be 00 00 00 00       	mov    $0x0,%esi
    7c80:	48 89 30             	mov    %rsi,(%rax)
    7c83:	89 ca                	mov    %ecx,%edx
    7c85:	48 01 c2             	add    %rax,%rdx
    7c88:	48 83 c2 08          	add    $0x8,%rdx
    7c8c:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    7c90:	48 8d 50 08          	lea    0x8(%rax),%rdx
    7c94:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    7c98:	48 29 d0             	sub    %rdx,%rax
    7c9b:	01 c1                	add    %eax,%ecx
    7c9d:	83 e1 f8             	and    $0xfffffff8,%ecx
    7ca0:	89 c8                	mov    %ecx,%eax
    7ca2:	c1 e8 03             	shr    $0x3,%eax
    7ca5:	89 c1                	mov    %eax,%ecx
    7ca7:	48 89 d7             	mov    %rdx,%rdi
    7caa:	48 89 f0             	mov    %rsi,%rax
    7cad:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    7cb0:	90                   	nop
    7cb1:	c9                   	leave
    7cb2:	c3                   	ret

0000000000007cb3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7cb3:	55                   	push   %rbp
    7cb4:	48 89 e5             	mov    %rsp,%rbp
    7cb7:	48 83 ec 20          	sub    $0x20,%rsp
    7cbb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7cbf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7cc3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7cc7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7ccb:	48 89 c7             	mov    %rax,%rdi
    7cce:	e8 37 03 00 00       	call   800a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7cd3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7cd7:	48 89 c7             	mov    %rax,%rdi
    7cda:	e8 85 cc ff ff       	call   4964 <_ZSt17__size_to_integerm>
    7cdf:	48 89 c1             	mov    %rax,%rcx
    7ce2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ce6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7cea:	48 89 ce             	mov    %rcx,%rsi
    7ced:	48 89 c7             	mov    %rax,%rdi
    7cf0:	e8 20 03 00 00       	call   8015 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    7cf5:	c9                   	leave
    7cf6:	c3                   	ret
    7cf7:	90                   	nop

0000000000007cf8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
    7cf8:	55                   	push   %rbp
    7cf9:	48 89 e5             	mov    %rsp,%rbp
    7cfc:	48 83 ec 10          	sub    $0x10,%rsp
    7d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d08:	48 89 c7             	mov    %rax,%rdi
    7d0b:	e8 10 a4 ff ff       	call   2120 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7d10:	90                   	nop
    7d11:	c9                   	leave
    7d12:	c3                   	ret
    7d13:	90                   	nop

0000000000007d14 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
    7d14:	55                   	push   %rbp
    7d15:	48 89 e5             	mov    %rsp,%rbp
    7d18:	48 83 ec 10          	sub    $0x10,%rsp
    7d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
    7d24:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d28:	48 89 c7             	mov    %rax,%rdi
    7d2b:	e8 c8 ff ff ff       	call   7cf8 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
    7d30:	90                   	nop
    7d31:	c9                   	leave
    7d32:	c3                   	ret
    7d33:	90                   	nop

0000000000007d34 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    7d34:	55                   	push   %rbp
    7d35:	48 89 e5             	mov    %rsp,%rbp
    7d38:	48 83 ec 20          	sub    $0x20,%rsp
    7d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7d44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    7d48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7d4c:	48 89 d0             	mov    %rdx,%rax
    7d4f:	48 c1 e0 03          	shl    $0x3,%rax
    7d53:	48 01 d0             	add    %rdx,%rax
    7d56:	48 c1 e0 03          	shl    $0x3,%rax
    7d5a:	48 89 c2             	mov    %rax,%rdx
    7d5d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7d61:	48 89 d6             	mov    %rdx,%rsi
    7d64:	48 89 c7             	mov    %rax,%rdi
    7d67:	e8 e4 a4 ff ff       	call   2250 <_ZdlPvm@plt>
      }
    7d6c:	c9                   	leave
    7d6d:	c3                   	ret

0000000000007d6e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
    7d6e:	55                   	push   %rbp
    7d6f:	48 89 e5             	mov    %rsp,%rbp
    7d72:	48 83 ec 10          	sub    $0x10,%rsp
    7d76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    7d7e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    7d82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d86:	ba 00 00 00 00       	mov    $0x0,%edx
    7d8b:	48 89 ce             	mov    %rcx,%rsi
    7d8e:	48 89 c7             	mov    %rax,%rdi
    7d91:	e8 ee 02 00 00       	call   8084 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
    7d96:	c9                   	leave
    7d97:	c3                   	ret

0000000000007d98 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    7d98:	55                   	push   %rbp
    7d99:	48 89 e5             	mov    %rsp,%rbp
    7d9c:	41 54                	push   %r12
    7d9e:	53                   	push   %rbx
    7d9f:	48 83 ec 30          	sub    $0x30,%rsp
    7da3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7da7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7dab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    7daf:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    7db3:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    7db7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7dbb:	48 89 c7             	mov    %rax,%rdi
    7dbe:	e8 78 e6 ff ff       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    7dc3:	49 89 c4             	mov    %rax,%r12
    7dc6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7dca:	48 89 c7             	mov    %rax,%rdi
    7dcd:	e8 5b e6 ff ff       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    7dd2:	48 89 c3             	mov    %rax,%rbx
    7dd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dd9:	48 89 c7             	mov    %rax,%rdi
    7ddc:	e8 3e e6 ff ff       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    7de1:	48 89 c2             	mov    %rax,%rdx
    7de4:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    7de8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7dec:	4d 89 e0             	mov    %r12,%r8
    7def:	48 89 d9             	mov    %rbx,%rcx
    7df2:	48 89 c7             	mov    %rax,%rdi
    7df5:	e8 1c 03 00 00       	call   8116 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
    7dfa:	90                   	nop
    7dfb:	48 83 c4 30          	add    $0x30,%rsp
    7dff:	5b                   	pop    %rbx
    7e00:	41 5c                	pop    %r12
    7e02:	5d                   	pop    %rbp
    7e03:	c3                   	ret

0000000000007e04 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    7e04:	55                   	push   %rbp
    7e05:	48 89 e5             	mov    %rsp,%rbp
    7e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    7e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e10:	5d                   	pop    %rbp
    7e11:	c3                   	ret

0000000000007e12 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
    7e12:	55                   	push   %rbp
    7e13:	48 89 e5             	mov    %rsp,%rbp
    7e16:	48 83 ec 10          	sub    $0x10,%rsp
    7e1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    7e1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e22:	48 89 c7             	mov    %rax,%rdi
    7e25:	e8 9c 03 00 00       	call   81c6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
    7e2a:	c9                   	leave
    7e2b:	c3                   	ret

0000000000007e2c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    7e2c:	55                   	push   %rbp
    7e2d:	48 89 e5             	mov    %rsp,%rbp
    7e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    7e34:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    7e3b:	ff ff 0f 
      }
    7e3e:	5d                   	pop    %rbp
    7e3f:	c3                   	ret

0000000000007e40 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    7e40:	55                   	push   %rbp
    7e41:	48 89 e5             	mov    %rsp,%rbp
    7e44:	48 83 ec 20          	sub    $0x20,%rsp
    7e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7e50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    7e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e58:	48 89 c7             	mov    %rax,%rdi
    7e5b:	e8 cc ff ff ff       	call   7e2c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    7e60:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7e64:	0f 92 c0             	setb   %al
    7e67:	0f b6 c0             	movzbl %al,%eax
    7e6a:	48 85 c0             	test   %rax,%rax
    7e6d:	0f 95 c0             	setne  %al
    7e70:	84 c0                	test   %al,%al
    7e72:	74 1a                	je     7e8e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    7e74:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    7e7b:	ff ff 1f 
    7e7e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    7e82:	73 05                	jae    7e89 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    7e84:	e8 27 a3 ff ff       	call   21b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    7e89:	e8 f2 a1 ff ff       	call   2080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    7e8e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7e92:	48 c1 e0 03          	shl    $0x3,%rax
    7e96:	48 89 c7             	mov    %rax,%rdi
    7e99:	e8 a2 a3 ff ff       	call   2240 <_Znwm@plt>
    7e9e:	90                   	nop
      }
    7e9f:	c9                   	leave
    7ea0:	c3                   	ret

0000000000007ea1 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    7ea1:	55                   	push   %rbp
    7ea2:	48 89 e5             	mov    %rsp,%rbp
    7ea5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    7ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ead:	5d                   	pop    %rbp
    7eae:	c3                   	ret

0000000000007eaf <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    7eaf:	55                   	push   %rbp
    7eb0:	48 89 e5             	mov    %rsp,%rbp
    7eb3:	48 83 ec 10          	sub    $0x10,%rsp
    7eb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    7ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ebf:	48 89 c6             	mov    %rax,%rsi
    7ec2:	bf 08 00 00 00       	mov    $0x8,%edi
    7ec7:	e8 77 ca ff ff       	call   4943 <_ZnwmPv>
    7ecc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    7ed3:	90                   	nop
    7ed4:	c9                   	leave
    7ed5:	c3                   	ret

0000000000007ed6 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    7ed6:	55                   	push   %rbp
    7ed7:	48 89 e5             	mov    %rsp,%rbp
    7eda:	48 83 ec 20          	sub    $0x20,%rsp
    7ede:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ee2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7ee6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    7eea:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    7eee:	48 89 c7             	mov    %rax,%rdi
    7ef1:	e8 de 02 00 00       	call   81d4 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    7ef6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7efa:	48 89 c7             	mov    %rax,%rdi
    7efd:	e8 62 ca ff ff       	call   4964 <_ZSt17__size_to_integerm>
    7f02:	48 89 c1             	mov    %rax,%rcx
    7f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f09:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f0d:	48 89 ce             	mov    %rcx,%rsi
    7f10:	48 89 c7             	mov    %rax,%rdi
    7f13:	e8 c7 02 00 00       	call   81df <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    7f18:	c9                   	leave
    7f19:	c3                   	ret

0000000000007f1a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    7f1a:	55                   	push   %rbp
    7f1b:	48 89 e5             	mov    %rsp,%rbp
    7f1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    7f22:	90                   	nop
    7f23:	5d                   	pop    %rbp
    7f24:	c3                   	ret

0000000000007f25 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    7f25:	55                   	push   %rbp
    7f26:	48 89 e5             	mov    %rsp,%rbp
    7f29:	48 83 ec 20          	sub    $0x20,%rsp
    7f2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7f35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    7f39:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    7f3e:	75 06                	jne    7f46 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    7f40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f44:	eb 4a                	jmp    7f90 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    7f46:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f4a:	48 89 d0             	mov    %rdx,%rax
    7f4d:	48 01 c0             	add    %rax,%rax
    7f50:	48 01 d0             	add    %rdx,%rax
    7f53:	48 c1 e0 03          	shl    $0x3,%rax
    7f57:	48 89 c2             	mov    %rax,%rdx
    7f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f5e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    7f62:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f6a:	48 89 ce             	mov    %rcx,%rsi
    7f6d:	48 89 c7             	mov    %rax,%rdi
    7f70:	e8 c7 02 00 00       	call   823c <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    7f75:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f79:	48 89 d0             	mov    %rdx,%rax
    7f7c:	48 01 c0             	add    %rax,%rax
    7f7f:	48 01 d0             	add    %rdx,%rax
    7f82:	48 c1 e0 03          	shl    $0x3,%rax
    7f86:	48 89 c2             	mov    %rax,%rdx
    7f89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f8d:	48 01 d0             	add    %rdx,%rax
    }
    7f90:	c9                   	leave
    7f91:	c3                   	ret

0000000000007f92 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    7f92:	55                   	push   %rbp
    7f93:	48 89 e5             	mov    %rsp,%rbp
    7f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    7f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f9e:	5d                   	pop    %rbp
    7f9f:	c3                   	ret

0000000000007fa0 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    7fa0:	55                   	push   %rbp
    7fa1:	48 89 e5             	mov    %rsp,%rbp
    7fa4:	41 54                	push   %r12
    7fa6:	53                   	push   %rbx
    7fa7:	48 83 ec 20          	sub    $0x20,%rsp
    7fab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7faf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7fb3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    7fb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fbb:	48 89 c7             	mov    %rax,%rdi
    7fbe:	e8 b5 02 00 00       	call   8278 <_ZSt12__niter_baseIPPKcET_S3_>
    7fc3:	49 89 c4             	mov    %rax,%r12
    7fc6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7fca:	48 89 c7             	mov    %rax,%rdi
    7fcd:	e8 98 02 00 00       	call   826a <_ZSt12__niter_baseIPKPKcET_S4_>
    7fd2:	48 89 c3             	mov    %rax,%rbx
    7fd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fd9:	48 89 c7             	mov    %rax,%rdi
    7fdc:	e8 89 02 00 00       	call   826a <_ZSt12__niter_baseIPKPKcET_S4_>
    7fe1:	4c 89 e2             	mov    %r12,%rdx
    7fe4:	48 89 de             	mov    %rbx,%rsi
    7fe7:	48 89 c7             	mov    %rax,%rdi
    7fea:	e8 97 02 00 00       	call   8286 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    7fef:	48 89 c2             	mov    %rax,%rdx
    7ff2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    7ff6:	48 89 d6             	mov    %rdx,%rsi
    7ff9:	48 89 c7             	mov    %rax,%rdi
    7ffc:	e8 b2 02 00 00       	call   82b3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    8001:	48 83 c4 20          	add    $0x20,%rsp
    8005:	5b                   	pop    %rbx
    8006:	41 5c                	pop    %r12
    8008:	5d                   	pop    %rbp
    8009:	c3                   	ret

000000000000800a <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    800a:	55                   	push   %rbp
    800b:	48 89 e5             	mov    %rsp,%rbp
    800e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    8012:	90                   	nop
    8013:	5d                   	pop    %rbp
    8014:	c3                   	ret

0000000000008015 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    8015:	55                   	push   %rbp
    8016:	48 89 e5             	mov    %rsp,%rbp
    8019:	48 83 ec 20          	sub    $0x20,%rsp
    801d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8021:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8025:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    8029:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    802e:	75 06                	jne    8036 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    8030:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8034:	eb 4c                	jmp    8082 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    8036:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    803a:	48 89 d0             	mov    %rdx,%rax
    803d:	48 c1 e0 06          	shl    $0x6,%rax
    8041:	48 01 d0             	add    %rdx,%rax
    8044:	48 c1 e0 02          	shl    $0x2,%rax
    8048:	48 89 c2             	mov    %rax,%rdx
    804b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    804f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8053:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    805b:	48 89 ce             	mov    %rcx,%rsi
    805e:	48 89 c7             	mov    %rax,%rdi
    8061:	e8 5f 02 00 00       	call   82c5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    8066:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    806a:	48 89 d0             	mov    %rdx,%rax
    806d:	48 c1 e0 06          	shl    $0x6,%rax
    8071:	48 01 d0             	add    %rdx,%rax
    8074:	48 c1 e0 02          	shl    $0x2,%rax
    8078:	48 89 c2             	mov    %rax,%rdx
    807b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    807f:	48 01 d0             	add    %rdx,%rax
    }
    8082:	c9                   	leave
    8083:	c3                   	ret

0000000000008084 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    8084:	55                   	push   %rbp
    8085:	48 89 e5             	mov    %rsp,%rbp
    8088:	48 83 ec 20          	sub    $0x20,%rsp
    808c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8090:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8094:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    8098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    809c:	48 89 c7             	mov    %rax,%rdi
    809f:	e8 50 02 00 00       	call   82f4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
    80a4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    80a8:	0f 92 c0             	setb   %al
    80ab:	0f b6 c0             	movzbl %al,%eax
    80ae:	48 85 c0             	test   %rax,%rax
    80b1:	0f 95 c0             	setne  %al
    80b4:	84 c0                	test   %al,%al
    80b6:	74 1a                	je     80d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    80b8:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
    80bf:	38 8e 03 
    80c2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    80c6:	73 05                	jae    80cd <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    80c8:	e8 e3 a0 ff ff       	call   21b0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    80cd:	e8 ae 9f ff ff       	call   2080 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    80d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    80d6:	48 89 d0             	mov    %rdx,%rax
    80d9:	48 c1 e0 03          	shl    $0x3,%rax
    80dd:	48 01 d0             	add    %rdx,%rax
    80e0:	48 c1 e0 03          	shl    $0x3,%rax
    80e4:	48 89 c7             	mov    %rax,%rdi
    80e7:	e8 54 a1 ff ff       	call   2240 <_Znwm@plt>
    80ec:	90                   	nop
      }
    80ed:	c9                   	leave
    80ee:	c3                   	ret
    80ef:	90                   	nop

00000000000080f0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
    80f0:	55                   	push   %rbp
    80f1:	48 89 e5             	mov    %rsp,%rbp
    80f4:	48 83 ec 10          	sub    $0x10,%rsp
    80f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    80fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8104:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8108:	48 89 d6             	mov    %rdx,%rsi
    810b:	48 89 c7             	mov    %rax,%rdi
    810e:	e8 f5 01 00 00       	call   8308 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    8113:	90                   	nop
    8114:	c9                   	leave
    8115:	c3                   	ret

0000000000008116 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    8116:	55                   	push   %rbp
    8117:	48 89 e5             	mov    %rsp,%rbp
    811a:	41 56                	push   %r14
    811c:	41 55                	push   %r13
    811e:	41 54                	push   %r12
    8120:	53                   	push   %rbx
    8121:	48 83 ec 40          	sub    $0x40,%rsp
    8125:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    8129:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    812d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    8131:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
    8135:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    8139:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
    813d:	48 89 de             	mov    %rbx,%rsi
    8140:	bf 28 00 00 00       	mov    $0x28,%edi
    8145:	e8 f9 c7 ff ff       	call   4943 <_ZnwmPv>
    814a:	49 89 c4             	mov    %rax,%r12
    814d:	41 be 01 00 00 00    	mov    $0x1,%r14d
    8153:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8157:	48 89 c7             	mov    %rax,%rdi
    815a:	e8 dc e2 ff ff       	call   643b <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
    815f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    8163:	48 89 c7             	mov    %rax,%rdi
    8166:	e8 c2 e2 ff ff       	call   642d <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
    816b:	48 89 c2             	mov    %rax,%rdx
    816e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    8172:	48 89 d6             	mov    %rdx,%rsi
    8175:	48 89 c7             	mov    %rax,%rdi
    8178:	e8 73 ff ff ff       	call   80f0 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
    817d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8181:	48 89 c7             	mov    %rax,%rdi
    8184:	e8 96 e2 ff ff       	call   641f <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
    8189:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    818d:	48 89 c6             	mov    %rax,%rsi
    8190:	4c 89 e7             	mov    %r12,%rdi
    8193:	e8 8e 01 00 00       	call   8326 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
    8198:	eb 1e                	jmp    81b8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
    819a:	49 89 c5             	mov    %rax,%r13
    819d:	45 84 f6             	test   %r14b,%r14b
    81a0:	74 0b                	je     81ad <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
    81a2:	48 89 de             	mov    %rbx,%rsi
    81a5:	4c 89 e7             	mov    %r12,%rdi
    81a8:	e8 a8 c7 ff ff       	call   4955 <_ZdlPvS_>
    81ad:	4c 89 e8             	mov    %r13,%rax
    81b0:	48 89 c7             	mov    %rax,%rdi
    81b3:	e8 48 a2 ff ff       	call   2400 <_Unwind_Resume@plt>
    81b8:	48 83 c4 40          	add    $0x40,%rsp
    81bc:	5b                   	pop    %rbx
    81bd:	41 5c                	pop    %r12
    81bf:	41 5d                	pop    %r13
    81c1:	41 5e                	pop    %r14
    81c3:	5d                   	pop    %rbp
    81c4:	c3                   	ret
    81c5:	90                   	nop

00000000000081c6 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
    81c6:	55                   	push   %rbp
    81c7:	48 89 e5             	mov    %rsp,%rbp
    81ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
    81ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81d2:	5d                   	pop    %rbp
    81d3:	c3                   	ret

00000000000081d4 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    81d4:	55                   	push   %rbp
    81d5:	48 89 e5             	mov    %rsp,%rbp
    81d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    81dc:	90                   	nop
    81dd:	5d                   	pop    %rbp
    81de:	c3                   	ret

00000000000081df <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    81df:	55                   	push   %rbp
    81e0:	48 89 e5             	mov    %rsp,%rbp
    81e3:	48 83 ec 20          	sub    $0x20,%rsp
    81e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    81ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    81f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    81f8:	75 06                	jne    8200 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    81fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81fe:	eb 3a                	jmp    823a <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    8200:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8204:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    820b:	00 
    820c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8210:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    8214:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821c:	48 89 ce             	mov    %rcx,%rsi
    821f:	48 89 c7             	mov    %rax,%rdi
    8222:	e8 29 01 00 00       	call   8350 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    8227:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    822b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8232:	00 
    8233:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8237:	48 01 d0             	add    %rdx,%rax
    }
    823a:	c9                   	leave
    823b:	c3                   	ret

000000000000823c <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    823c:	55                   	push   %rbp
    823d:	48 89 e5             	mov    %rsp,%rbp
    8240:	48 83 ec 20          	sub    $0x20,%rsp
    8244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    824c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8250:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8254:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    825c:	48 89 ce             	mov    %rcx,%rsi
    825f:	48 89 c7             	mov    %rax,%rdi
    8262:	e8 17 01 00 00       	call   837e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    8267:	90                   	nop
    8268:	c9                   	leave
    8269:	c3                   	ret

000000000000826a <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    826a:	55                   	push   %rbp
    826b:	48 89 e5             	mov    %rsp,%rbp
    826e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8276:	5d                   	pop    %rbp
    8277:	c3                   	ret

0000000000008278 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    8278:	55                   	push   %rbp
    8279:	48 89 e5             	mov    %rsp,%rbp
    827c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    8280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8284:	5d                   	pop    %rbp
    8285:	c3                   	ret

0000000000008286 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    8286:	55                   	push   %rbp
    8287:	48 89 e5             	mov    %rsp,%rbp
    828a:	48 83 ec 20          	sub    $0x20,%rsp
    828e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8292:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8296:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    829a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    829e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82a6:	48 89 ce             	mov    %rcx,%rsi
    82a9:	48 89 c7             	mov    %rax,%rdi
    82ac:	e8 10 01 00 00       	call   83c1 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    82b1:	c9                   	leave
    82b2:	c3                   	ret

00000000000082b3 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    82b3:	55                   	push   %rbp
    82b4:	48 89 e5             	mov    %rsp,%rbp
    82b7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82bb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    82bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    82c3:	5d                   	pop    %rbp
    82c4:	c3                   	ret

00000000000082c5 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    82c5:	55                   	push   %rbp
    82c6:	48 89 e5             	mov    %rsp,%rbp
    82c9:	48 83 ec 20          	sub    $0x20,%rsp
    82cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    82d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    82d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    82dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    82e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82e5:	48 89 ce             	mov    %rcx,%rsi
    82e8:	48 89 c7             	mov    %rax,%rdi
    82eb:	e8 fe 00 00 00       	call   83ee <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    82f0:	90                   	nop
    82f1:	c9                   	leave
    82f2:	c3                   	ret
    82f3:	90                   	nop

00000000000082f4 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    82f4:	55                   	push   %rbp
    82f5:	48 89 e5             	mov    %rsp,%rbp
    82f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    82fc:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
    8303:	1c c7 01 
      }
    8306:	5d                   	pop    %rbp
    8307:	c3                   	ret

0000000000008308 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
    8308:	55                   	push   %rbp
    8309:	48 89 e5             	mov    %rsp,%rbp
    830c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
    8314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8318:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    831c:	48 8b 12             	mov    (%rdx),%rdx
    831f:	48 89 10             	mov    %rdx,(%rax)
      { }
    8322:	90                   	nop
    8323:	5d                   	pop    %rbp
    8324:	c3                   	ret
    8325:	90                   	nop

0000000000008326 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
    8326:	55                   	push   %rbp
    8327:	48 89 e5             	mov    %rsp,%rbp
    832a:	48 83 ec 20          	sub    $0x20,%rsp
    832e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8332:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
    8336:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    833a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    833e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8342:	48 89 ce             	mov    %rcx,%rsi
    8345:	48 89 c7             	mov    %rax,%rdi
    8348:	e8 19 01 00 00       	call   8466 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
    834d:	90                   	nop
    834e:	c9                   	leave
    834f:	c3                   	ret

0000000000008350 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    8350:	55                   	push   %rbp
    8351:	48 89 e5             	mov    %rsp,%rbp
    8354:	48 83 ec 20          	sub    $0x20,%rsp
    8358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    835c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8360:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    8364:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8368:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    836c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8370:	48 89 ce             	mov    %rcx,%rsi
    8373:	48 89 c7             	mov    %rax,%rdi
    8376:	e8 35 01 00 00       	call   84b0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    837b:	90                   	nop
    837c:	c9                   	leave
    837d:	c3                   	ret

000000000000837e <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    837e:	55                   	push   %rbp
    837f:	48 89 e5             	mov    %rsp,%rbp
    8382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    838a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    838e:	eb 23                	jmp    83b3 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    8390:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8394:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    8398:	48 8b 06             	mov    (%rsi),%rax
    839b:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    839f:	48 89 01             	mov    %rax,(%rcx)
    83a2:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    83a6:	48 8b 46 10          	mov    0x10(%rsi),%rax
    83aa:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    83ae:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    83b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b7:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    83bb:	75 d3                	jne    8390 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    83bd:	90                   	nop
    83be:	90                   	nop
    83bf:	5d                   	pop    %rbp
    83c0:	c3                   	ret

00000000000083c1 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    83c1:	55                   	push   %rbp
    83c2:	48 89 e5             	mov    %rsp,%rbp
    83c5:	48 83 ec 20          	sub    $0x20,%rsp
    83c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    83d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    83dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83e1:	48 89 ce             	mov    %rcx,%rsi
    83e4:	48 89 c7             	mov    %rax,%rdi
    83e7:	e8 ff 00 00 00       	call   84eb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    83ec:	c9                   	leave
    83ed:	c3                   	ret

00000000000083ee <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    83ee:	55                   	push   %rbp
    83ef:	48 89 e5             	mov    %rsp,%rbp
    83f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    83f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    83fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    83fe:	eb 58                	jmp    8458 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    8400:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8404:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8408:	b9 04 01 00 00       	mov    $0x104,%ecx
    840d:	48 8b 32             	mov    (%rdx),%rsi
    8410:	48 89 30             	mov    %rsi,(%rax)
    8413:	89 ce                	mov    %ecx,%esi
    8415:	48 01 c6             	add    %rax,%rsi
    8418:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    841c:	89 ce                	mov    %ecx,%esi
    841e:	48 01 d6             	add    %rdx,%rsi
    8421:	48 83 c6 08          	add    $0x8,%rsi
    8425:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    8429:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    842d:	48 8d 78 08          	lea    0x8(%rax),%rdi
    8431:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    8435:	48 29 f8             	sub    %rdi,%rax
    8438:	48 29 c2             	sub    %rax,%rdx
    843b:	01 c1                	add    %eax,%ecx
    843d:	83 e1 f8             	and    $0xfffffff8,%ecx
    8440:	89 c8                	mov    %ecx,%eax
    8442:	c1 e8 03             	shr    $0x3,%eax
    8445:	89 c0                	mov    %eax,%eax
    8447:	48 89 d6             	mov    %rdx,%rsi
    844a:	48 89 c1             	mov    %rax,%rcx
    844d:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    8450:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    8457:	00 
    8458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    845c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    8460:	75 9e                	jne    8400 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    8462:	90                   	nop
    8463:	90                   	nop
    8464:	5d                   	pop    %rbp
    8465:	c3                   	ret

0000000000008466 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
    8466:	55                   	push   %rbp
    8467:	48 89 e5             	mov    %rsp,%rbp
    846a:	53                   	push   %rbx
    846b:	48 83 ec 28          	sub    $0x28,%rsp
    846f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8473:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8477:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
    847b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    847f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8483:	48 89 c7             	mov    %rax,%rdi
    8486:	e8 bf 00 00 00       	call   854a <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
    848b:	48 89 c7             	mov    %rax,%rdi
    848e:	e8 d1 00 00 00       	call   8564 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
    8493:	48 89 c6             	mov    %rax,%rsi
    8496:	48 89 df             	mov    %rbx,%rdi
    8499:	e8 72 9c ff ff       	call   2110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
    849e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84a2:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
    84a9:	90                   	nop
    84aa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84ae:	c9                   	leave
    84af:	c3                   	ret

00000000000084b0 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    84b0:	55                   	push   %rbp
    84b1:	48 89 e5             	mov    %rsp,%rbp
    84b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84b8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84bc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    84c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    84c4:	48 8b 00             	mov    (%rax),%rax
    84c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    84cb:	eb 10                	jmp    84dd <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    84cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    84d5:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    84d8:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    84dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84e1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    84e5:	75 e6                	jne    84cd <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    84e7:	90                   	nop
    84e8:	90                   	nop
    84e9:	5d                   	pop    %rbp
    84ea:	c3                   	ret

00000000000084eb <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    84eb:	55                   	push   %rbp
    84ec:	48 89 e5             	mov    %rsp,%rbp
    84ef:	48 83 ec 30          	sub    $0x30,%rsp
    84f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    84fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    84ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8503:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    8507:	48 c1 f8 03          	sar    $0x3,%rax
    850b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    850f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8514:	74 1f                	je     8535 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    8516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    851a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8521:	00 
    8522:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8526:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    852a:	48 89 ce             	mov    %rcx,%rsi
    852d:	48 89 c7             	mov    %rax,%rdi
    8530:	e8 8b 9e ff ff       	call   23c0 <memmove@plt>
	  return __result + _Num;
    8535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8539:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    8540:	00 
    8541:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8545:	48 01 d0             	add    %rdx,%rax
	}
    8548:	c9                   	leave
    8549:	c3                   	ret

000000000000854a <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
    854a:	55                   	push   %rbp
    854b:	48 89 e5             	mov    %rsp,%rbp
    854e:	48 83 ec 10          	sub    $0x10,%rsp
    8552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
    8556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    855a:	48 89 c7             	mov    %rax,%rdi
    855d:	e8 10 00 00 00       	call   8572 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
    8562:	c9                   	leave
    8563:	c3                   	ret

0000000000008564 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    8564:	55                   	push   %rbp
    8565:	48 89 e5             	mov    %rsp,%rbp
    8568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    856c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8570:	5d                   	pop    %rbp
    8571:	c3                   	ret

0000000000008572 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
    8572:	55                   	push   %rbp
    8573:	48 89 e5             	mov    %rsp,%rbp
    8576:	48 83 ec 10          	sub    $0x10,%rsp
    857a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
    857e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8582:	48 89 c7             	mov    %rax,%rdi
    8585:	e8 02 00 00 00       	call   858c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
    858a:	c9                   	leave
    858b:	c3                   	ret

000000000000858c <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
    858c:	55                   	push   %rbp
    858d:	48 89 e5             	mov    %rsp,%rbp
    8590:	48 83 ec 10          	sub    $0x10,%rsp
    8594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    859c:	48 89 c7             	mov    %rax,%rdi
    859f:	e8 02 00 00 00       	call   85a6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
    85a4:	c9                   	leave
    85a5:	c3                   	ret

00000000000085a6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
    85a6:	55                   	push   %rbp
    85a7:	48 89 e5             	mov    %rsp,%rbp
    85aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85b2:	48 8b 00             	mov    (%rax),%rax
    85b5:	5d                   	pop    %rbp
    85b6:	c3                   	ret
    85b7:	90                   	nop

00000000000085b8 <_ZN4neko7Context13createContextEv>:

namespace neko {

static std::atomic<u32> contextCount = 0;

void Context::createContext() {
    85b8:	55                   	push   %rbp
    85b9:	48 89 e5             	mov    %rsp,%rbp
    85bc:	41 54                	push   %r12
    85be:	53                   	push   %rbx
  if (glfwInit() != GLFW_TRUE) {
    85bf:	e8 2c 9d ff ff       	call   22f0 <glfwInit@plt>
    85c4:	83 f8 01             	cmp    $0x1,%eax
    85c7:	0f 95 c0             	setne  %al
    85ca:	84 c0                	test   %al,%al
    85cc:	74 3b                	je     8609 <_ZN4neko7Context13createContextEv+0x51>
    throw std::runtime_error(
        "A bug or configuration error in GLFW, the underlying operating "
        "system or its drivers, or a lack of required resources.");
    85ce:	bf 10 00 00 00       	mov    $0x10,%edi
    85d3:	e8 08 9b ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    85d8:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    85db:	48 8d 05 ce 2e 00 00 	lea    0x2ece(%rip),%rax        # b4b0 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    85e2:	48 89 c6             	mov    %rax,%rsi
    85e5:	48 89 df             	mov    %rbx,%rdi
    85e8:	e8 a3 9a ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
        "system or its drivers, or a lack of required resources.");
    85ed:	48 8b 05 bc b9 00 00 	mov    0xb9bc(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    85f4:	48 89 c2             	mov    %rax,%rdx
    85f7:	48 8d 05 62 b7 00 00 	lea    0xb762(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    85fe:	48 89 c6             	mov    %rax,%rsi
    8601:	48 89 df             	mov    %rbx,%rdi
    8604:	e8 d7 9d ff ff       	call   23e0 <__cxa_throw@plt>
  }
  ++contextCount;
    8609:	48 8d 05 68 be 00 00 	lea    0xbe68(%rip),%rax        # 14478 <_ZN4nekoL12contextCountE>
    8610:	48 89 c7             	mov    %rax,%rdi
    8613:	e8 98 01 00 00       	call   87b0 <_ZNSt13__atomic_baseIjEppEv>
}
    8618:	eb 16                	jmp    8630 <_ZN4neko7Context13createContextEv+0x78>
        "system or its drivers, or a lack of required resources.");
    861a:	49 89 c4             	mov    %rax,%r12
    861d:	48 89 df             	mov    %rbx,%rdi
    8620:	e8 3b 9b ff ff       	call   2160 <__cxa_free_exception@plt>
    8625:	4c 89 e0             	mov    %r12,%rax
    8628:	48 89 c7             	mov    %rax,%rdi
    862b:	e8 d0 9d ff ff       	call   2400 <_Unwind_Resume@plt>
}
    8630:	5b                   	pop    %rbx
    8631:	41 5c                	pop    %r12
    8633:	5d                   	pop    %rbp
    8634:	c3                   	ret
    8635:	90                   	nop

0000000000008636 <_ZN4neko7Context17moveCreateContextEv>:

void Context::moveCreateContext() { ++contextCount; }
    8636:	55                   	push   %rbp
    8637:	48 89 e5             	mov    %rsp,%rbp
    863a:	48 8d 05 37 be 00 00 	lea    0xbe37(%rip),%rax        # 14478 <_ZN4nekoL12contextCountE>
    8641:	48 89 c7             	mov    %rax,%rdi
    8644:	e8 67 01 00 00       	call   87b0 <_ZNSt13__atomic_baseIjEppEv>
    8649:	90                   	nop
    864a:	5d                   	pop    %rbp
    864b:	c3                   	ret

000000000000864c <_ZN4neko7Context14destroyContextEv>:

void Context::destroyContext() {
    864c:	55                   	push   %rbp
    864d:	48 89 e5             	mov    %rsp,%rbp
  --contextCount;
    8650:	48 8d 05 21 be 00 00 	lea    0xbe21(%rip),%rax        # 14478 <_ZN4nekoL12contextCountE>
    8657:	48 89 c7             	mov    %rax,%rdi
    865a:	e8 6b 01 00 00       	call   87ca <_ZNSt13__atomic_baseIjEmmEv>
  if (contextCount == 0) {
    865f:	48 8d 05 12 be 00 00 	lea    0xbe12(%rip),%rax        # 14478 <_ZN4nekoL12contextCountE>
    8666:	48 89 c7             	mov    %rax,%rdi
    8669:	e8 7c 01 00 00       	call   87ea <_ZNKSt13__atomic_baseIjEcvjEv>
    866e:	85 c0                	test   %eax,%eax
    8670:	0f 94 c0             	sete   %al
    8673:	84 c0                	test   %al,%al
    8675:	74 05                	je     867c <_ZN4neko7Context14destroyContextEv+0x30>
    glfwTerminate();
    8677:	e8 f4 9b ff ff       	call   2270 <glfwTerminate@plt>
  }
}
    867c:	90                   	nop
    867d:	5d                   	pop    %rbp
    867e:	c3                   	ret
    867f:	90                   	nop

0000000000008680 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult Context::createDebugMessenger(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pMessenger) const {
    8680:	55                   	push   %rbp
    8681:	48 89 e5             	mov    %rsp,%rbp
    8684:	48 83 ec 40          	sub    $0x40,%rsp
    8688:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    868c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8690:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    8694:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    8698:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  auto pFunc = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    869c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86a0:	48 8d 15 81 2e 00 00 	lea    0x2e81(%rip),%rdx        # b528 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x80>
    86a7:	48 89 d6             	mov    %rdx,%rsi
    86aa:	48 89 c7             	mov    %rax,%rdi
    86ad:	e8 5e 9b ff ff       	call   2210 <vkGetInstanceProcAddr@plt>
    86b2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (pFunc != nullptr) {
    86b6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    86bb:	74 1c                	je     86d9 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x59>
    return pFunc(instance, pCreateInfo, pAllocator, pMessenger);
    86bd:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    86c1:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    86c5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    86c9:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    86cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86d1:	48 89 c7             	mov    %rax,%rdi
    86d4:	41 ff d0             	call   *%r8
    86d7:	eb 05                	jmp    86de <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5e>
  } else {
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    86d9:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
  }
}
    86de:	c9                   	leave
    86df:	c3                   	ret

00000000000086e0 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void Context::destroyDebugMessenger(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) const noexcept {
    86e0:	55                   	push   %rbp
    86e1:	48 89 e5             	mov    %rsp,%rbp
    86e4:	48 83 ec 30          	sub    $0x30,%rsp
    86e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    86ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    86f0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    86f4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    86f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    86fc:	48 8d 15 45 2e 00 00 	lea    0x2e45(%rip),%rdx        # b548 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xa0>
    8703:	48 89 d6             	mov    %rdx,%rsi
    8706:	48 89 c7             	mov    %rax,%rdi
    8709:	e8 02 9b ff ff       	call   2210 <vkGetInstanceProcAddr@plt>
    870e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    8712:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    8717:	74 19                	je     8732 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x52>
    func(instance, debugMessenger, pAllocator);
    8719:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    871d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8721:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    8725:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8729:	48 89 ce             	mov    %rcx,%rsi
    872c:	48 89 c7             	mov    %rax,%rdi
    872f:	41 ff d0             	call   *%r8
  }
}
    8732:	90                   	nop
    8733:	c9                   	leave
    8734:	c3                   	ret

0000000000008735 <_Z41__static_initialization_and_destruction_0ii>:

    8735:	55                   	push   %rbp
    8736:	48 89 e5             	mov    %rsp,%rbp
    8739:	48 83 ec 10          	sub    $0x10,%rsp
    873d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8740:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8743:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    8747:	75 3b                	jne    8784 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    8749:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    8750:	75 32                	jne    8784 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    8752:	48 8d 05 1b bd 00 00 	lea    0xbd1b(%rip),%rax        # 14474 <_ZStL8__ioinit>
    8759:	48 89 c7             	mov    %rax,%rdi
    875c:	e8 2f 9c ff ff       	call   2390 <_ZNSt8ios_base4InitC1Ev@plt>
    8761:	48 8d 05 b0 ba 00 00 	lea    0xbab0(%rip),%rax        # 14218 <__dso_handle>
    8768:	48 89 c2             	mov    %rax,%rdx
    876b:	48 8d 05 02 bd 00 00 	lea    0xbd02(%rip),%rax        # 14474 <_ZStL8__ioinit>
    8772:	48 89 c6             	mov    %rax,%rsi
    8775:	48 8b 05 54 b8 00 00 	mov    0xb854(%rip),%rax        # 13fd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    877c:	48 89 c7             	mov    %rax,%rdi
    877f:	e8 7c 9a ff ff       	call   2200 <__cxa_atexit@plt>
    8784:	90                   	nop
    8785:	c9                   	leave
    8786:	c3                   	ret

0000000000008787 <_GLOBAL__sub_I__ZN4neko7Context13createContextEv>:
    8787:	55                   	push   %rbp
    8788:	48 89 e5             	mov    %rsp,%rbp
    878b:	be ff ff 00 00       	mov    $0xffff,%esi
    8790:	bf 01 00 00 00       	mov    $0x1,%edi
    8795:	e8 9b ff ff ff       	call   8735 <_Z41__static_initialization_and_destruction_0ii>
    879a:	5d                   	pop    %rbp
    879b:	c3                   	ret

000000000000879c <_ZStanSt12memory_orderSt23__memory_order_modifier>:
    return memory_order(int(__m) | int(__mod));
  }

  constexpr memory_order
  operator&(memory_order __m, __memory_order_modifier __mod)
  {
    879c:	55                   	push   %rbp
    879d:	48 89 e5             	mov    %rsp,%rbp
    87a0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    87a3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    return memory_order(int(__m) & int(__mod));
    87a6:	8b 55 fc             	mov    -0x4(%rbp),%edx
    87a9:	8b 45 f8             	mov    -0x8(%rbp),%eax
    87ac:	21 d0                	and    %edx,%eax
  }
    87ae:	5d                   	pop    %rbp
    87af:	c3                   	ret

00000000000087b0 <_ZNSt13__atomic_baseIjEppEv>:
      __int_type
      operator--(int) volatile noexcept
      { return fetch_sub(1); }

      __int_type
      operator++() noexcept
    87b0:	55                   	push   %rbp
    87b1:	48 89 e5             	mov    %rsp,%rbp
    87b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    87b8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    87bc:	b8 01 00 00 00       	mov    $0x1,%eax
    87c1:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    87c5:	83 c0 01             	add    $0x1,%eax
    87c8:	5d                   	pop    %rbp
    87c9:	c3                   	ret

00000000000087ca <_ZNSt13__atomic_baseIjEmmEv>:
      __int_type
      operator++() volatile noexcept
      { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }

      __int_type
      operator--() noexcept
    87ca:	55                   	push   %rbp
    87cb:	48 89 e5             	mov    %rsp,%rbp
    87ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
    87d2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    87d6:	b8 01 00 00 00       	mov    $0x1,%eax
    87db:	f7 d8                	neg    %eax
    87dd:	89 c1                	mov    %eax,%ecx
    87df:	89 c8                	mov    %ecx,%eax
    87e1:	f0 0f c1 02          	lock xadd %eax,(%rdx)
    87e5:	01 c8                	add    %ecx,%eax
    87e7:	5d                   	pop    %rbp
    87e8:	c3                   	ret
    87e9:	90                   	nop

00000000000087ea <_ZNKSt13__atomic_baseIjEcvjEv>:
      operator __int_type() const noexcept
    87ea:	55                   	push   %rbp
    87eb:	48 89 e5             	mov    %rsp,%rbp
    87ee:	48 83 ec 20          	sub    $0x20,%rsp
    87f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    87fe:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)

      _GLIBCXX_ALWAYS_INLINE __int_type
      load(memory_order __m = memory_order_seq_cst) const noexcept
      {
	memory_order __b __attribute__ ((__unused__))
	  = __m & __memory_order_mask;
    8805:	8b 45 f4             	mov    -0xc(%rbp),%eax
    8808:	be ff ff 00 00       	mov    $0xffff,%esi
    880d:	89 c7                	mov    %eax,%edi
    880f:	e8 88 ff ff ff       	call   879c <_ZStanSt12memory_orderSt23__memory_order_modifier>
    8814:	89 45 f0             	mov    %eax,-0x10(%rbp)
	__glibcxx_assert(__b != memory_order_release);
    8817:	e8 88 9f ff ff       	call   27a4 <_ZSt23__is_constant_evaluatedv>
    881c:	84 c0                	test   %al,%al
    881e:	74 0d                	je     882d <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    8820:	83 7d f0 03          	cmpl   $0x3,-0x10(%rbp)
    8824:	75 07                	jne    882d <_ZNKSt13__atomic_baseIjEcvjEv+0x43>
    8826:	b8 01 00 00 00       	mov    $0x1,%eax
    882b:	eb 05                	jmp    8832 <_ZNKSt13__atomic_baseIjEcvjEv+0x48>
    882d:	b8 00 00 00 00       	mov    $0x0,%eax
    8832:	84 c0                	test   %al,%al
	__glibcxx_assert(__b != memory_order_acq_rel);
    8834:	e8 6b 9f ff ff       	call   27a4 <_ZSt23__is_constant_evaluatedv>
    8839:	84 c0                	test   %al,%al
    883b:	74 0d                	je     884a <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    883d:	83 7d f0 04          	cmpl   $0x4,-0x10(%rbp)
    8841:	75 07                	jne    884a <_ZNKSt13__atomic_baseIjEcvjEv+0x60>
    8843:	b8 01 00 00 00       	mov    $0x1,%eax
    8848:	eb 05                	jmp    884f <_ZNKSt13__atomic_baseIjEcvjEv+0x65>
    884a:	b8 00 00 00 00       	mov    $0x0,%eax
    884f:	84 c0                	test   %al,%al

	return __atomic_load_n(&_M_i, int(__m));
    8851:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8855:	8b 00                	mov    (%rax),%eax
    8857:	90                   	nop
      { return load(); }
    8858:	c9                   	leave
    8859:	c3                   	ret

000000000000885a <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL Instance::debugMessengerCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    885a:	55                   	push   %rbp
    885b:	48 89 e5             	mov    %rsp,%rbp
    885e:	48 83 ec 20          	sub    $0x20,%rsp
    8862:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8865:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8868:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    886c:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    8870:	8b 45 fc             	mov    -0x4(%rbp),%eax
    8873:	83 f8 01             	cmp    $0x1,%eax
    8876:	7e 3c                	jle    88b4 <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    8878:	be 0a 00 00 00       	mov    $0xa,%esi
    887d:	48 8d 05 dc ba 00 00 	lea    0xbadc(%rip),%rax        # 14360 <_ZSt4cerr@GLIBCXX_3.4>
    8884:	48 89 c7             	mov    %rax,%rdi
    8887:	e8 74 9a ff ff       	call   2300 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    888c:	48 89 c2             	mov    %rax,%rdx
    888f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8893:	48 8b 40 28          	mov    0x28(%rax),%rax
    8897:	48 89 c6             	mov    %rax,%rsi
    889a:	48 89 d7             	mov    %rdx,%rdi
    889d:	e8 8e 99 ff ff       	call   2230 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    88a2:	48 8b 15 f7 b6 00 00 	mov    0xb6f7(%rip),%rdx        # 13fa0 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    88a9:	48 89 d6             	mov    %rdx,%rsi
    88ac:	48 89 c7             	mov    %rax,%rdi
    88af:	e8 dc 99 ff ff       	call   2290 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    88b4:	b8 00 00 00 00       	mov    $0x0,%eax
}
    88b9:	c9                   	leave
    88ba:	c3                   	ret
    88bb:	90                   	nop

00000000000088bc <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void Instance::populateDebugMessengerInfo(
    VkDebugUtilsMessengerCreateInfoEXT &debugMessengerInfo) {
    88bc:	55                   	push   %rbp
    88bd:	48 89 e5             	mov    %rsp,%rbp
    88c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  debugMessengerInfo.sType =
    88c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88cc:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
      VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
  debugMessengerInfo.messageSeverity =
    88d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88d6:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      // VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  debugMessengerInfo.messageType =
    88dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88e1:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
      VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  debugMessengerInfo.pfnUserCallback = debugMessengerCallback;
    88e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88ec:	48 8d 15 67 ff ff ff 	lea    -0x99(%rip),%rdx        # 885a <_ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    88f3:	48 89 50 20          	mov    %rdx,0x20(%rax)
  debugMessengerInfo.pUserData = nullptr;
    88f7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88fb:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    8902:	00 
}
    8903:	90                   	nop
    8904:	5d                   	pop    %rbp
    8905:	c3                   	ret

0000000000008906 <_ZN4neko8Instance21getRequiredExtensionsEv>:

std::vector<const char *> Instance::getRequiredExtensions() {
    8906:	55                   	push   %rbp
    8907:	48 89 e5             	mov    %rsp,%rbp
    890a:	53                   	push   %rbx
    890b:	48 83 ec 58          	sub    $0x58,%rsp
    890f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    8913:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  uint32_t requiredExtensionCount;
  const char **pRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    8917:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    891b:	48 89 c7             	mov    %rax,%rdi
    891e:	e8 7d 98 ff ff       	call   21a0 <glfwGetRequiredInstanceExtensions@plt>
    8923:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    8927:	8b 45 c8             	mov    -0x38(%rbp),%eax
    892a:	89 c3                	mov    %eax,%ebx
    892c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8930:	48 89 c7             	mov    %rax,%rdi
    8933:	e8 a6 c3 ff ff       	call   4cde <_ZNSaIPKcEC1Ev>
    8938:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    893c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8940:	48 89 de             	mov    %rbx,%rsi
    8943:	48 89 c7             	mov    %rax,%rdi
    8946:	e8 79 06 00 00       	call   8fc4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    894b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    894f:	48 89 c7             	mov    %rax,%rdi
    8952:	e8 a3 c3 ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
  size_t iExtension = 0;
    8957:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    895e:	00 
  for (auto &extension : requiredExtensions) {
    895f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    8963:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8967:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    896b:	48 89 c7             	mov    %rax,%rdi
    896e:	e8 c7 06 00 00       	call   903a <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    8973:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8977:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    897b:	48 89 c7             	mov    %rax,%rdi
    897e:	e8 dd 06 00 00       	call   9060 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    8983:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    8987:	eb 3e                	jmp    89c7 <_ZN4neko8Instance21getRequiredExtensionsEv+0xc1>
    8989:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    898d:	48 89 c7             	mov    %rax,%rdi
    8990:	e8 4f 07 00 00       	call   90e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    8995:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    extension = pRequiredExtensions[iExtension];
    8999:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    899d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    89a4:	00 
    89a5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    89a9:	48 01 d0             	add    %rdx,%rax
    89ac:	48 8b 10             	mov    (%rax),%rdx
    89af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    89b3:	48 89 10             	mov    %rdx,(%rax)
    ++iExtension;
    89b6:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (auto &extension : requiredExtensions) {
    89bb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    89bf:	48 89 c7             	mov    %rax,%rdi
    89c2:	e8 fd 06 00 00       	call   90c4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    89c7:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    89cb:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    89cf:	48 89 d6             	mov    %rdx,%rsi
    89d2:	48 89 c7             	mov    %rax,%rdi
    89d5:	e8 af 06 00 00       	call   9089 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    89da:	84 c0                	test   %al,%al
    89dc:	75 ab                	jne    8989 <_ZN4neko8Instance21getRequiredExtensionsEv+0x83>
  }
  return requiredExtensions;
    89de:	eb 1a                	jmp    89fa <_ZN4neko8Instance21getRequiredExtensionsEv+0xf4>
  std::vector<const char *> requiredExtensions{requiredExtensionCount};
    89e0:	48 89 c3             	mov    %rax,%rbx
    89e3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    89e7:	48 89 c7             	mov    %rax,%rdi
    89ea:	e8 0b c3 ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
    89ef:	48 89 d8             	mov    %rbx,%rax
    89f2:	48 89 c7             	mov    %rax,%rdi
    89f5:	e8 06 9a ff ff       	call   2400 <_Unwind_Resume@plt>
}
    89fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    89fe:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a02:	c9                   	leave
    8a03:	c3                   	ret

0000000000008a04 <_ZN4neko8InstanceC1ERKNS_8SettingsE>:

Instance::Instance(const Settings &settings) {
    8a04:	55                   	push   %rbp
    8a05:	48 89 e5             	mov    %rsp,%rbp
    8a08:	41 55                	push   %r13
    8a0a:	41 54                	push   %r12
    8a0c:	53                   	push   %rbx
    8a0d:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    8a14:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    8a1b:	48 89 b5 d0 fe ff ff 	mov    %rsi,-0x130(%rbp)
    8a22:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a29:	48 89 c7             	mov    %rax,%rdi
    8a2c:	e8 67 05 00 00       	call   8f98 <_ZN4neko7ContextC1Ev>
    8a31:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a38:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    8a3f:	00 
    8a40:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a47:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    8a4e:	00 
    8a4f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a56:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  uint32_t apiVersion;
  vkEnumerateInstanceVersion(&apiVersion);
    8a5a:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    8a5e:	48 89 c7             	mov    %rax,%rdi
    8a61:	e8 ca 98 ff ff       	call   2330 <vkEnumerateInstanceVersion@plt>

  VkApplicationInfo applicationInfo{};
    8a66:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8a6a:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    8a71:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    8a78:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
  applicationInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    8a7f:	c7 85 e0 fe ff ff 00 	movl   $0x0,-0x120(%rbp)
    8a86:	00 00 00 
  applicationInfo.pApplicationName = settings.general.appName.c_str();
    8a89:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8a90:	48 89 c7             	mov    %rax,%rdi
    8a93:	e8 28 96 ff ff       	call   20c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8a98:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  applicationInfo.applicationVersion = settings.general.appVersion;
    8a9f:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8aa6:	8b 40 20             	mov    0x20(%rax),%eax
    8aa9:	89 85 f8 fe ff ff    	mov    %eax,-0x108(%rbp)
  applicationInfo.pEngineName = settings.general.engineName.c_str();
    8aaf:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8ab6:	48 83 c0 28          	add    $0x28,%rax
    8aba:	48 89 c7             	mov    %rax,%rdi
    8abd:	e8 fe 95 ff ff       	call   20c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    8ac2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
  applicationInfo.engineVersion = settings.general.engineVersion;
    8ac9:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    8ad0:	8b 40 48             	mov    0x48(%rax),%eax
    8ad3:	89 85 08 ff ff ff    	mov    %eax,-0xf8(%rbp)
  applicationInfo.apiVersion = apiVersion;
    8ad9:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    8adc:	89 85 0c ff ff ff    	mov    %eax,-0xf4(%rbp)

  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    8ae2:	48 8d 05 af 30 00 00 	lea    0x30af(%rip),%rax        # bb98 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    8ae9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8aed:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    8af1:	49 89 c4             	mov    %rax,%r12
    8af4:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    8afa:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8afe:	48 89 c7             	mov    %rax,%rdi
    8b01:	e8 d8 c1 ff ff       	call   4cde <_ZNSaIPKcEC1Ev>
    8b06:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    8b0a:	4c 89 e6             	mov    %r12,%rsi
    8b0d:	4c 89 ef             	mov    %r13,%rdi
    8b10:	4c 89 e1             	mov    %r12,%rcx
    8b13:	4c 89 eb             	mov    %r13,%rbx
    8b16:	48 89 df             	mov    %rbx,%rdi
    8b19:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8b1d:	48 89 d1             	mov    %rdx,%rcx
    8b20:	48 89 fa             	mov    %rdi,%rdx
    8b23:	48 89 c7             	mov    %rax,%rdi
    8b26:	e8 eb c1 ff ff       	call   4d16 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    8b2b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8b2f:	48 89 c7             	mov    %rax,%rdi
    8b32:	e8 c3 c1 ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
  auto extensions = getRequiredExtensions();
    8b37:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8b3b:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8b42:	48 89 d6             	mov    %rdx,%rsi
    8b45:	48 89 c7             	mov    %rax,%rdi
    8b48:	e8 b9 fd ff ff       	call   8906 <_ZN4neko8Instance21getRequiredExtensionsEv>

  VkDebugUtilsMessengerCreateInfoEXT *pDebugMessengerInfo = nullptr;
    8b4d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    8b54:	00 
  VkDebugUtilsMessengerCreateInfoEXT debugMessengerInfo{};
    8b55:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8b59:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    8b60:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    8b67:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)

  if constexpr (neko::debugMode) {
    layers.emplace_back("VK_LAYER_KHRONOS_validation");
    8b6e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8b72:	48 8d 15 39 30 00 00 	lea    0x3039(%rip),%rdx        # bbb2 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x22>
    8b79:	48 89 d6             	mov    %rdx,%rsi
    8b7c:	48 89 c7             	mov    %rax,%rdi
    8b7f:	e8 72 05 00 00       	call   90f6 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>
    extensions.emplace_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    8b84:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8b88:	48 8d 15 3f 30 00 00 	lea    0x303f(%rip),%rdx        # bbce <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x3e>
    8b8f:	48 89 d6             	mov    %rdx,%rsi
    8b92:	48 89 c7             	mov    %rax,%rdi
    8b95:	e8 00 06 00 00       	call   919a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>

    populateDebugMessengerInfo(debugMessengerInfo);
    8b9a:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    8ba1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ba8:	48 89 d6             	mov    %rdx,%rsi
    8bab:	48 89 c7             	mov    %rax,%rdi
    8bae:	e8 09 fd ff ff       	call   88bc <_ZN4neko8Instance26populateDebugMessengerInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    pDebugMessengerInfo = &debugMessengerInfo;
    8bb3:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    8bba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  }

  VkInstanceCreateInfo instanceInfo{};
    8bbe:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8bc2:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    8bc9:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    8bd0:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    8bd7:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    8bde:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    8be5:	00 00 00 
  instanceInfo.pNext = pDebugMessengerInfo;
    8be8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bec:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.pApplicationInfo = &applicationInfo;
    8bf3:	48 8d 85 e0 fe ff ff 	lea    -0x120(%rbp),%rax
    8bfa:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  instanceInfo.enabledLayerCount = vku32(layers.size());
    8c01:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8c05:	48 89 c7             	mov    %rax,%rdi
    8c08:	e8 31 06 00 00       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8c0d:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%rbp)
  instanceInfo.ppEnabledLayerNames = layers.data();
    8c13:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8c17:	48 89 c7             	mov    %rax,%rdi
    8c1a:	e8 43 06 00 00       	call   9262 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8c1f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  instanceInfo.enabledExtensionCount = vku32(extensions.size());
    8c26:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8c2a:	48 89 c7             	mov    %rax,%rdi
    8c2d:	e8 0c 06 00 00       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    8c32:	89 85 70 ff ff ff    	mov    %eax,-0x90(%rbp)
  instanceInfo.ppEnabledExtensionNames = extensions.data();
    8c38:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8c3c:	48 89 c7             	mov    %rax,%rdi
    8c3f:	e8 1e 06 00 00       	call   9262 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    8c44:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  if (vkCreateInstance(&instanceInfo, nullptr, &mInstance) != VK_SUCCESS) {
    8c4b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c52:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8c56:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    8c5d:	be 00 00 00 00       	mov    $0x0,%esi
    8c62:	48 89 c7             	mov    %rax,%rdi
    8c65:	e8 a6 96 ff ff       	call   2310 <vkCreateInstance@plt>
    8c6a:	85 c0                	test   %eax,%eax
    8c6c:	0f 95 c0             	setne  %al
    8c6f:	84 c0                	test   %al,%al
    8c71:	74 3b                	je     8cae <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x2aa>
    throw std::runtime_error("Failed to create instance.");
    8c73:	bf 10 00 00 00       	mov    $0x10,%edi
    8c78:	e8 63 94 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    8c7d:	48 89 c3             	mov    %rax,%rbx
    8c80:	48 8d 05 5a 2f 00 00 	lea    0x2f5a(%rip),%rax        # bbe1 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x51>
    8c87:	48 89 c6             	mov    %rax,%rsi
    8c8a:	48 89 df             	mov    %rbx,%rdi
    8c8d:	e8 fe 93 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    8c92:	48 8b 05 17 b3 00 00 	mov    0xb317(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8c99:	48 89 c2             	mov    %rax,%rdx
    8c9c:	48 8d 05 bd b0 00 00 	lea    0xb0bd(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8ca3:	48 89 c6             	mov    %rax,%rsi
    8ca6:	48 89 df             	mov    %rbx,%rdi
    8ca9:	e8 32 97 ff ff       	call   23e0 <__cxa_throw@plt>
  }

  if constexpr (neko::debugMode) {
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8cae:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cb5:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8cbc:	48 8d 4a 10          	lea    0x10(%rdx),%rcx
    8cc0:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    8cc7:	48 8b 72 08          	mov    0x8(%rdx),%rsi
    8ccb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ccf:	49 89 c8             	mov    %rcx,%r8
    8cd2:	b9 00 00 00 00       	mov    $0x0,%ecx
    8cd7:	48 89 c7             	mov    %rax,%rdi
    8cda:	e8 a1 f9 ff ff       	call   8680 <_ZNK4neko7Context20createDebugMessengerEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                      &mDebugMessenger) != VK_SUCCESS) {
    8cdf:	85 c0                	test   %eax,%eax
    8ce1:	0f 95 c0             	setne  %al
    if (mContext.createDebugMessenger(mInstance, pDebugMessengerInfo, nullptr,
    8ce4:	84 c0                	test   %al,%al
    8ce6:	74 3b                	je     8d23 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x31f>
      throw std::runtime_error("Failed to create debug messenger");
    8ce8:	bf 10 00 00 00       	mov    $0x10,%edi
    8ced:	e8 ee 93 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    8cf2:	48 89 c3             	mov    %rax,%rbx
    8cf5:	48 8d 05 04 2f 00 00 	lea    0x2f04(%rip),%rax        # bc00 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x70>
    8cfc:	48 89 c6             	mov    %rax,%rsi
    8cff:	48 89 df             	mov    %rbx,%rdi
    8d02:	e8 89 93 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    8d07:	48 8b 05 a2 b2 00 00 	mov    0xb2a2(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8d0e:	48 89 c2             	mov    %rax,%rdx
    8d11:	48 8d 05 48 b0 00 00 	lea    0xb048(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8d18:	48 89 c6             	mov    %rax,%rsi
    8d1b:	48 89 df             	mov    %rbx,%rdi
    8d1e:	e8 bd 96 ff ff       	call   23e0 <__cxa_throw@plt>
    }
  }

  mIsOwner = true;
    8d23:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8d2a:	c6 40 18 01          	movb   $0x1,0x18(%rax)
}
    8d2e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8d32:	48 89 c7             	mov    %rax,%rdi
    8d35:	e8 64 c0 ff ff       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8d3a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8d3e:	48 89 c7             	mov    %rax,%rdi
    8d41:	e8 58 c0 ff ff       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8d46:	eb 70                	jmp    8db8 <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x3b4>
  std::vector<const char *> layers = {"VK_LAYER_MANGOHUD_overlay"};
    8d48:	48 89 c3             	mov    %rax,%rbx
    8d4b:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    8d4f:	48 89 c7             	mov    %rax,%rdi
    8d52:	e8 a3 bf ff ff       	call   4cfa <_ZNSaIPKcED1Ev>
    8d57:	eb 45                	jmp    8d9e <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    throw std::runtime_error("Failed to create instance.");
    8d59:	49 89 c4             	mov    %rax,%r12
    8d5c:	48 89 df             	mov    %rbx,%rdi
    8d5f:	e8 fc 93 ff ff       	call   2160 <__cxa_free_exception@plt>
    8d64:	4c 89 e3             	mov    %r12,%rbx
    8d67:	eb 13                	jmp    8d7c <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
      throw std::runtime_error("Failed to create debug messenger");
    8d69:	49 89 c4             	mov    %rax,%r12
    8d6c:	48 89 df             	mov    %rbx,%rdi
    8d6f:	e8 ec 93 ff ff       	call   2160 <__cxa_free_exception@plt>
    8d74:	4c 89 e3             	mov    %r12,%rbx
    8d77:	eb 03                	jmp    8d7c <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x378>
}
    8d79:	48 89 c3             	mov    %rax,%rbx
    8d7c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8d80:	48 89 c7             	mov    %rax,%rdi
    8d83:	e8 16 c0 ff ff       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8d88:	eb 03                	jmp    8d8d <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x389>
    8d8a:	48 89 c3             	mov    %rax,%rbx
    8d8d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    8d91:	48 89 c7             	mov    %rax,%rdi
    8d94:	e8 05 c0 ff ff       	call   4d9e <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    8d99:	eb 03                	jmp    8d9e <_ZN4neko8InstanceC1ERKNS_8SettingsE+0x39a>
    8d9b:	48 89 c3             	mov    %rax,%rbx
    8d9e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8da5:	48 89 c7             	mov    %rax,%rdi
    8da8:	e8 35 9a ff ff       	call   27e2 <_ZN4neko7ContextD1Ev>
    8dad:	48 89 d8             	mov    %rbx,%rax
    8db0:	48 89 c7             	mov    %rax,%rdi
    8db3:	e8 48 96 ff ff       	call   2400 <_Unwind_Resume@plt>
    8db8:	48 81 c4 18 01 00 00 	add    $0x118,%rsp
    8dbf:	5b                   	pop    %rbx
    8dc0:	41 5c                	pop    %r12
    8dc2:	41 5d                	pop    %r13
    8dc4:	5d                   	pop    %rbp
    8dc5:	c3                   	ret

0000000000008dc6 <_ZN4neko8InstanceC1EOS0_>:

Instance::Instance(Instance &&rhs) noexcept
    8dc6:	55                   	push   %rbp
    8dc7:	48 89 e5             	mov    %rsp,%rbp
    8dca:	53                   	push   %rbx
    8dcb:	48 83 ec 28          	sub    $0x28,%rsp
    8dcf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8dd3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    : mContext{std::move(rhs.mContext)}, mInstance{std::move(rhs.mInstance)},
    8dd7:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    8ddb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8ddf:	48 89 c7             	mov    %rax,%rdi
    8de2:	e8 9f 04 00 00       	call   9286 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
    8de7:	48 89 c6             	mov    %rax,%rsi
    8dea:	48 89 df             	mov    %rbx,%rdi
    8ded:	e8 ba 01 00 00       	call   8fac <_ZN4neko7ContextC1EOS0_>
    8df2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8df6:	48 83 c0 08          	add    $0x8,%rax
    8dfa:	48 89 c7             	mov    %rax,%rdi
    8dfd:	e8 92 04 00 00       	call   9294 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    8e02:	48 8b 10             	mov    (%rax),%rdx
    8e05:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e09:	48 89 50 08          	mov    %rdx,0x8(%rax)
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    8e0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e11:	48 83 c0 10          	add    $0x10,%rax
    8e15:	48 89 c7             	mov    %rax,%rdi
    8e18:	e8 85 04 00 00       	call   92a2 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    8e1d:	48 8b 10             	mov    (%rax),%rdx
    8e20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8e24:	48 89 50 10          	mov    %rdx,0x10(%rax)
                                                           rhs.mIsOwner,
                                                           false)} {}
    8e28:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
                                                           rhs.mIsOwner,
    8e2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8e30:	48 8d 50 18          	lea    0x18(%rax),%rdx
      mDebugMessenger{std::move(rhs.mDebugMessenger)}, mIsOwner{std::exchange(
    8e34:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e38:	48 89 c6             	mov    %rax,%rsi
    8e3b:	48 89 d7             	mov    %rdx,%rdi
    8e3e:	e8 6d 04 00 00       	call   92b0 <_ZSt8exchangeIbbET_RS0_OT0_>
    8e43:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e47:	88 42 18             	mov    %al,0x18(%rdx)
                                                           false)} {}
    8e4a:	90                   	nop
    8e4b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e4f:	c9                   	leave
    8e50:	c3                   	ret
    8e51:	90                   	nop

0000000000008e52 <_ZN4neko8InstanceaSEOS0_>:

Instance &Instance::operator=(Instance &&rhs) {
    8e52:	55                   	push   %rbp
    8e53:	48 89 e5             	mov    %rsp,%rbp
    8e56:	48 83 ec 20          	sub    $0x20,%rsp
    8e5a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e5e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  release();
    8e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e66:	48 89 c7             	mov    %rax,%rdi
    8e69:	e8 6a 00 00 00       	call   8ed8 <_ZN4neko8Instance7releaseEv>
  mContext = std::move(rhs.mContext);
    8e6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e72:	48 89 c7             	mov    %rax,%rdi
    8e75:	e8 0c 04 00 00       	call   9286 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>
  mInstance = std::move(rhs.mInstance);
    8e7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e7e:	48 83 c0 08          	add    $0x8,%rax
    8e82:	48 89 c7             	mov    %rax,%rdi
    8e85:	e8 0a 04 00 00       	call   9294 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>
    8e8a:	48 8b 10             	mov    (%rax),%rdx
    8e8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e91:	48 89 50 08          	mov    %rdx,0x8(%rax)
  mDebugMessenger = std::move(rhs.mDebugMessenger);
    8e95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8e99:	48 83 c0 10          	add    $0x10,%rax
    8e9d:	48 89 c7             	mov    %rax,%rdi
    8ea0:	e8 fd 03 00 00       	call   92a2 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>
    8ea5:	48 8b 10             	mov    (%rax),%rdx
    8ea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eac:	48 89 50 10          	mov    %rdx,0x10(%rax)
  mIsOwner = std::exchange(rhs.mIsOwner, false);
    8eb0:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    8eb4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8eb8:	48 8d 50 18          	lea    0x18(%rax),%rdx
    8ebc:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    8ec0:	48 89 c6             	mov    %rax,%rsi
    8ec3:	48 89 d7             	mov    %rdx,%rdi
    8ec6:	e8 e5 03 00 00       	call   92b0 <_ZSt8exchangeIbbET_RS0_OT0_>
    8ecb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ecf:	88 42 18             	mov    %al,0x18(%rdx)
  return *this;
    8ed2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
}
    8ed6:	c9                   	leave
    8ed7:	c3                   	ret

0000000000008ed8 <_ZN4neko8Instance7releaseEv>:

void Instance::release() noexcept {
    8ed8:	55                   	push   %rbp
    8ed9:	48 89 e5             	mov    %rsp,%rbp
    8edc:	48 83 ec 10          	sub    $0x10,%rsp
    8ee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  if (mIsOwner) {
    8ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ee8:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    8eec:	84 c0                	test   %al,%al
    8eee:	74 3e                	je     8f2e <_ZN4neko8Instance7releaseEv+0x56>
    if constexpr (neko::debugMode) {
      mContext.destroyDebugMessenger(mInstance, mDebugMessenger, nullptr);
    8ef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ef4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8ef8:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    8efc:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    8f00:	48 8b 71 08          	mov    0x8(%rcx),%rsi
    8f04:	b9 00 00 00 00       	mov    $0x0,%ecx
    8f09:	48 89 c7             	mov    %rax,%rdi
    8f0c:	e8 cf f7 ff ff       	call   86e0 <_ZNK4neko7Context21destroyDebugMessengerEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
    }
    vkDestroyInstance(mInstance, nullptr);
    8f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f15:	48 8b 40 08          	mov    0x8(%rax),%rax
    8f19:	be 00 00 00 00       	mov    $0x0,%esi
    8f1e:	48 89 c7             	mov    %rax,%rdi
    8f21:	e8 3a 93 ff ff       	call   2260 <vkDestroyInstance@plt>
    mIsOwner = false;
    8f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f2a:	c6 40 18 00          	movb   $0x0,0x18(%rax)
  }
}
    8f2e:	90                   	nop
    8f2f:	c9                   	leave
    8f30:	c3                   	ret

0000000000008f31 <_Z41__static_initialization_and_destruction_0ii>:

    8f31:	55                   	push   %rbp
    8f32:	48 89 e5             	mov    %rsp,%rbp
    8f35:	48 83 ec 10          	sub    $0x10,%rsp
    8f39:	89 7d fc             	mov    %edi,-0x4(%rbp)
    8f3c:	89 75 f8             	mov    %esi,-0x8(%rbp)
    8f3f:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    8f43:	75 3b                	jne    8f80 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    8f45:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    8f4c:	75 32                	jne    8f80 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    8f4e:	48 8d 05 27 b5 00 00 	lea    0xb527(%rip),%rax        # 1447c <_ZStL8__ioinit>
    8f55:	48 89 c7             	mov    %rax,%rdi
    8f58:	e8 33 94 ff ff       	call   2390 <_ZNSt8ios_base4InitC1Ev@plt>
    8f5d:	48 8d 05 b4 b2 00 00 	lea    0xb2b4(%rip),%rax        # 14218 <__dso_handle>
    8f64:	48 89 c2             	mov    %rax,%rdx
    8f67:	48 8d 05 0e b5 00 00 	lea    0xb50e(%rip),%rax        # 1447c <_ZStL8__ioinit>
    8f6e:	48 89 c6             	mov    %rax,%rsi
    8f71:	48 8b 05 58 b0 00 00 	mov    0xb058(%rip),%rax        # 13fd0 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    8f78:	48 89 c7             	mov    %rax,%rdi
    8f7b:	e8 80 92 ff ff       	call   2200 <__cxa_atexit@plt>
    8f80:	90                   	nop
    8f81:	c9                   	leave
    8f82:	c3                   	ret

0000000000008f83 <_GLOBAL__sub_I__ZN4neko8Instance22debugMessengerCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    8f83:	55                   	push   %rbp
    8f84:	48 89 e5             	mov    %rsp,%rbp
    8f87:	be ff ff 00 00       	mov    $0xffff,%esi
    8f8c:	bf 01 00 00 00       	mov    $0x1,%edi
    8f91:	e8 9b ff ff ff       	call   8f31 <_Z41__static_initialization_and_destruction_0ii>
    8f96:	5d                   	pop    %rbp
    8f97:	c3                   	ret

0000000000008f98 <_ZN4neko7ContextC1Ev>:
  Context() { createContext(); }
    8f98:	55                   	push   %rbp
    8f99:	48 89 e5             	mov    %rsp,%rbp
    8f9c:	48 83 ec 10          	sub    $0x10,%rsp
    8fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fa4:	e8 0f f6 ff ff       	call   85b8 <_ZN4neko7Context13createContextEv>
    8fa9:	90                   	nop
    8faa:	c9                   	leave
    8fab:	c3                   	ret

0000000000008fac <_ZN4neko7ContextC1EOS0_>:
  Context(Context &&) { moveCreateContext(); }
    8fac:	55                   	push   %rbp
    8fad:	48 89 e5             	mov    %rsp,%rbp
    8fb0:	48 83 ec 10          	sub    $0x10,%rsp
    8fb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fb8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fbc:	e8 75 f6 ff ff       	call   8636 <_ZN4neko7Context17moveCreateContextEv>
    8fc1:	90                   	nop
    8fc2:	c9                   	leave
    8fc3:	c3                   	ret

0000000000008fc4 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8fc4:	55                   	push   %rbp
    8fc5:	48 89 e5             	mov    %rsp,%rbp
    8fc8:	53                   	push   %rbx
    8fc9:	48 83 ec 28          	sub    $0x28,%rsp
    8fcd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8fd1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8fd5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8fd9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8fdd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fe1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fe5:	48 89 d6             	mov    %rdx,%rsi
    8fe8:	48 89 c7             	mov    %rax,%rdi
    8feb:	e8 3f d0 ff ff       	call   602f <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    8ff0:	48 89 c1             	mov    %rax,%rcx
    8ff3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ff7:	48 89 c2             	mov    %rax,%rdx
    8ffa:	48 89 ce             	mov    %rcx,%rsi
    8ffd:	48 89 df             	mov    %rbx,%rdi
    9000:	e8 db 02 00 00       	call   92e0 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    9005:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9009:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    900d:	48 89 d6             	mov    %rdx,%rsi
    9010:	48 89 c7             	mov    %rax,%rdi
    9013:	e8 26 03 00 00       	call   933e <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    9018:	eb 1a                	jmp    9034 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    901a:	48 89 c3             	mov    %rax,%rbx
    901d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9021:	48 89 c7             	mov    %rax,%rdi
    9024:	e8 8f c5 ff ff       	call   55b8 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    9029:	48 89 d8             	mov    %rbx,%rax
    902c:	48 89 c7             	mov    %rax,%rdi
    902f:	e8 cc 93 ff ff       	call   2400 <_Unwind_Resume@plt>
    9034:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9038:	c9                   	leave
    9039:	c3                   	ret

000000000000903a <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    903a:	55                   	push   %rbp
    903b:	48 89 e5             	mov    %rsp,%rbp
    903e:	48 83 ec 20          	sub    $0x20,%rsp
    9042:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9046:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    904a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    904e:	48 89 d6             	mov    %rdx,%rsi
    9051:	48 89 c7             	mov    %rax,%rdi
    9054:	e8 25 03 00 00       	call   937e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    905d:	c9                   	leave
    905e:	c3                   	ret
    905f:	90                   	nop

0000000000009060 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9060:	55                   	push   %rbp
    9061:	48 89 e5             	mov    %rsp,%rbp
    9064:	48 83 ec 20          	sub    $0x20,%rsp
    9068:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    906c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9070:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9074:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9078:	48 89 d6             	mov    %rdx,%rsi
    907b:	48 89 c7             	mov    %rax,%rdi
    907e:	e8 fb 02 00 00       	call   937e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9083:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9087:	c9                   	leave
    9088:	c3                   	ret

0000000000009089 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9089:	55                   	push   %rbp
    908a:	48 89 e5             	mov    %rsp,%rbp
    908d:	53                   	push   %rbx
    908e:	48 83 ec 18          	sub    $0x18,%rsp
    9092:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9096:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    909a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    909e:	48 89 c7             	mov    %rax,%rdi
    90a1:	e8 f6 02 00 00       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    90a6:	48 8b 18             	mov    (%rax),%rbx
    90a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90ad:	48 89 c7             	mov    %rax,%rdi
    90b0:	e8 e7 02 00 00       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    90b5:	48 8b 00             	mov    (%rax),%rax
    90b8:	48 39 c3             	cmp    %rax,%rbx
    90bb:	0f 95 c0             	setne  %al
    90be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90c2:	c9                   	leave
    90c3:	c3                   	ret

00000000000090c4 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    90c4:	55                   	push   %rbp
    90c5:	48 89 e5             	mov    %rsp,%rbp
    90c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    90cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90d0:	48 8b 00             	mov    (%rax),%rax
    90d3:	48 8d 50 08          	lea    0x8(%rax),%rdx
    90d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90db:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    90de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    90e2:	5d                   	pop    %rbp
    90e3:	c3                   	ret

00000000000090e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    90e4:	55                   	push   %rbp
    90e5:	48 89 e5             	mov    %rsp,%rbp
    90e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    90ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90f0:	48 8b 00             	mov    (%rax),%rax
    90f3:	5d                   	pop    %rbp
    90f4:	c3                   	ret
    90f5:	90                   	nop

00000000000090f6 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    90f6:	55                   	push   %rbp
    90f7:	48 89 e5             	mov    %rsp,%rbp
    90fa:	53                   	push   %rbx
    90fb:	48 83 ec 18          	sub    $0x18,%rsp
    90ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9103:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    9107:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    910b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    910f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9113:	48 8b 40 10          	mov    0x10(%rax),%rax
    9117:	48 39 c2             	cmp    %rax,%rdx
    911a:	74 3c                	je     9158 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    911c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9120:	48 89 c7             	mov    %rax,%rdi
    9123:	e8 82 02 00 00       	call   93aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9128:	48 89 c2             	mov    %rax,%rdx
    912b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    912f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9133:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9137:	48 89 ce             	mov    %rcx,%rsi
    913a:	48 89 c7             	mov    %rax,%rdi
    913d:	e8 76 02 00 00       	call   93b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    9142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9146:	48 8b 40 08          	mov    0x8(%rax),%rax
    914a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    914e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9152:	48 89 50 08          	mov    %rdx,0x8(%rax)
    9156:	eb 30                	jmp    9188 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA28_S0_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    9158:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    915c:	48 89 c7             	mov    %rax,%rdi
    915f:	e8 46 02 00 00       	call   93aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9164:	48 89 c3             	mov    %rax,%rbx
    9167:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    916b:	48 89 c7             	mov    %rax,%rdi
    916e:	e8 ed fe ff ff       	call   9060 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    9173:	48 89 c1             	mov    %rax,%rcx
    9176:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    917a:	48 89 da             	mov    %rbx,%rdx
    917d:	48 89 ce             	mov    %rcx,%rsi
    9180:	48 89 c7             	mov    %rax,%rdi
    9183:	e8 6a 02 00 00       	call   93f2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    9188:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    918c:	48 89 c7             	mov    %rax,%rdi
    918f:	e8 f0 03 00 00       	call   9584 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    9194:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9198:	c9                   	leave
    9199:	c3                   	ret

000000000000919a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
    919a:	55                   	push   %rbp
    919b:	48 89 e5             	mov    %rsp,%rbp
    919e:	53                   	push   %rbx
    919f:	48 83 ec 18          	sub    $0x18,%rsp
    91a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    91a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    91ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    91b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91b7:	48 8b 40 10          	mov    0x10(%rax),%rax
    91bb:	48 39 c2             	cmp    %rax,%rdx
    91be:	74 3c                	je     91fc <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    91c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    91c4:	48 89 c7             	mov    %rax,%rdi
    91c7:	e8 f7 03 00 00       	call   95c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    91cc:	48 89 c2             	mov    %rax,%rdx
    91cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91d3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    91d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91db:	48 89 ce             	mov    %rcx,%rsi
    91de:	48 89 c7             	mov    %rax,%rdi
    91e1:	e8 eb 03 00 00       	call   95d1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    91e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91ea:	48 8b 40 08          	mov    0x8(%rax),%rax
    91ee:	48 8d 50 08          	lea    0x8(%rax),%rdx
    91f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    91fa:	eb 30                	jmp    922c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRA19_S0_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    91fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9200:	48 89 c7             	mov    %rax,%rdi
    9203:	e8 bb 03 00 00       	call   95c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9208:	48 89 c3             	mov    %rax,%rbx
    920b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    920f:	48 89 c7             	mov    %rax,%rdi
    9212:	e8 49 fe ff ff       	call   9060 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    9217:	48 89 c1             	mov    %rax,%rcx
    921a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    921e:	48 89 da             	mov    %rbx,%rdx
    9221:	48 89 ce             	mov    %rcx,%rsi
    9224:	48 89 c7             	mov    %rax,%rdi
    9227:	e8 de 03 00 00       	call   960a <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
    922c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9230:	48 89 c7             	mov    %rax,%rdi
    9233:	e8 4c 03 00 00       	call   9584 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
      }
    9238:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    923c:	c9                   	leave
    923d:	c3                   	ret

000000000000923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    923e:	55                   	push   %rbp
    923f:	48 89 e5             	mov    %rsp,%rbp
    9242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    924a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    924e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9252:	48 8b 00             	mov    (%rax),%rax
    9255:	48 29 c2             	sub    %rax,%rdx
    9258:	48 89 d0             	mov    %rdx,%rax
    925b:	48 c1 f8 03          	sar    $0x3,%rax
    925f:	5d                   	pop    %rbp
    9260:	c3                   	ret
    9261:	90                   	nop

0000000000009262 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9262:	55                   	push   %rbp
    9263:	48 89 e5             	mov    %rsp,%rbp
    9266:	48 83 ec 10          	sub    $0x10,%rsp
    926a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    926e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9272:	48 8b 10             	mov    (%rax),%rdx
    9275:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9279:	48 89 d6             	mov    %rdx,%rsi
    927c:	48 89 c7             	mov    %rax,%rdi
    927f:	e8 18 05 00 00       	call   979c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9284:	c9                   	leave
    9285:	c3                   	ret

0000000000009286 <_ZSt4moveIRN4neko7ContextEEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    9286:	55                   	push   %rbp
    9287:	48 89 e5             	mov    %rsp,%rbp
    928a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    928e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9292:	5d                   	pop    %rbp
    9293:	c3                   	ret

0000000000009294 <_ZSt4moveIRP12VkInstance_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    9294:	55                   	push   %rbp
    9295:	48 89 e5             	mov    %rsp,%rbp
    9298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    929c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a0:	5d                   	pop    %rbp
    92a1:	c3                   	ret

00000000000092a2 <_ZSt4moveIRP26VkDebugUtilsMessengerEXT_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
    92a2:	55                   	push   %rbp
    92a3:	48 89 e5             	mov    %rsp,%rbp
    92a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    92aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92ae:	5d                   	pop    %rbp
    92af:	c3                   	ret

00000000000092b0 <_ZSt8exchangeIbbET_RS0_OT0_>:

  /// Assign @p __new_val to @p __obj and return its previous value.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    exchange(_Tp& __obj, _Up&& __new_val)
    92b0:	55                   	push   %rbp
    92b1:	48 89 e5             	mov    %rsp,%rbp
    92b4:	48 83 ec 10          	sub    $0x10,%rsp
    92b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    noexcept(__and_<is_nothrow_move_constructible<_Tp>,
		    is_nothrow_assignable<_Tp&, _Up>>::value)
    { return std::__exchange(__obj, std::forward<_Up>(__new_val)); }
    92c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    92c4:	48 89 c7             	mov    %rax,%rdi
    92c7:	e8 e2 04 00 00       	call   97ae <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
    92cc:	48 89 c2             	mov    %rax,%rdx
    92cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92d3:	48 89 d6             	mov    %rdx,%rsi
    92d6:	48 89 c7             	mov    %rax,%rdi
    92d9:	e8 de 04 00 00       	call   97bc <_ZSt10__exchangeIbbET_RS0_OT0_>
    92de:	c9                   	leave
    92df:	c3                   	ret

00000000000092e0 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    92e0:	55                   	push   %rbp
    92e1:	48 89 e5             	mov    %rsp,%rbp
    92e4:	53                   	push   %rbx
    92e5:	48 83 ec 28          	sub    $0x28,%rsp
    92e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92ed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    92f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    92f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    92fd:	48 89 d6             	mov    %rdx,%rsi
    9300:	48 89 c7             	mov    %rax,%rdi
    9303:	e8 88 cc ff ff       	call   5f90 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9308:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    930c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9310:	48 89 d6             	mov    %rdx,%rsi
    9313:	48 89 c7             	mov    %rax,%rdi
    9316:	e8 df 04 00 00       	call   97fa <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    931b:	eb 1a                	jmp    9337 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    931d:	48 89 c3             	mov    %rax,%rbx
    9320:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9324:	48 89 c7             	mov    %rax,%rdi
    9327:	e8 4a c2 ff ff       	call   5576 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    932c:	48 89 d8             	mov    %rbx,%rax
    932f:	48 89 c7             	mov    %rax,%rdi
    9332:	e8 c9 90 ff ff       	call   2400 <_Unwind_Resume@plt>
    9337:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    933b:	c9                   	leave
    933c:	c3                   	ret
    933d:	90                   	nop

000000000000933e <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    933e:	55                   	push   %rbp
    933f:	48 89 e5             	mov    %rsp,%rbp
    9342:	48 83 ec 10          	sub    $0x10,%rsp
    9346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    934a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    934e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9352:	48 89 c7             	mov    %rax,%rdi
    9355:	e8 d4 c3 ff ff       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    935a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    935d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9361:	48 8b 00             	mov    (%rax),%rax
    9364:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9368:	48 89 ce             	mov    %rcx,%rsi
    936b:	48 89 c7             	mov    %rax,%rdi
    936e:	e8 dd 04 00 00       	call   9850 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9373:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9377:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    937b:	90                   	nop
    937c:	c9                   	leave
    937d:	c3                   	ret

000000000000937e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    937e:	55                   	push   %rbp
    937f:	48 89 e5             	mov    %rsp,%rbp
    9382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    938a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    938e:	48 8b 10             	mov    (%rax),%rdx
    9391:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9395:	48 89 10             	mov    %rdx,(%rax)
    9398:	90                   	nop
    9399:	5d                   	pop    %rbp
    939a:	c3                   	ret
    939b:	90                   	nop

000000000000939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    939c:	55                   	push   %rbp
    939d:	48 89 e5             	mov    %rsp,%rbp
    93a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    93a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a8:	5d                   	pop    %rbp
    93a9:	c3                   	ret

00000000000093aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    93aa:	55                   	push   %rbp
    93ab:	48 89 e5             	mov    %rsp,%rbp
    93ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    93b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b6:	5d                   	pop    %rbp
    93b7:	c3                   	ret

00000000000093b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    93b8:	55                   	push   %rbp
    93b9:	48 89 e5             	mov    %rsp,%rbp
    93bc:	48 83 ec 20          	sub    $0x20,%rsp
    93c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    93c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    93cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    93d0:	48 89 c7             	mov    %rax,%rdi
    93d3:	e8 d2 ff ff ff       	call   93aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    93d8:	48 89 c2             	mov    %rax,%rdx
    93db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93e3:	48 89 ce             	mov    %rcx,%rsi
    93e6:	48 89 c7             	mov    %rax,%rdi
    93e9:	e8 8c 04 00 00       	call   987a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>
	}
    93ee:	90                   	nop
    93ef:	c9                   	leave
    93f0:	c3                   	ret
    93f1:	90                   	nop

00000000000093f2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA28_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
    93f2:	55                   	push   %rbp
    93f3:	48 89 e5             	mov    %rsp,%rbp
    93f6:	53                   	push   %rbx
    93f7:	48 83 ec 68          	sub    $0x68,%rsp
    93fb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    93ff:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    9403:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    9407:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    940b:	48 8d 15 47 28 00 00 	lea    0x2847(%rip),%rdx        # bc59 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    9412:	be 01 00 00 00       	mov    $0x1,%esi
    9417:	48 89 c7             	mov    %rax,%rdi
    941a:	e8 9b 04 00 00       	call   98ba <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    941f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    9423:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9427:	48 8b 00             	mov    (%rax),%rax
    942a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    942e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9432:	48 8b 40 08          	mov    0x8(%rax),%rax
    9436:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    943a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    943e:	48 89 c7             	mov    %rax,%rdi
    9441:	e8 f4 fb ff ff       	call   903a <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    9446:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    944a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    944e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9452:	48 89 d6             	mov    %rdx,%rsi
    9455:	48 89 c7             	mov    %rax,%rdi
    9458:	e8 25 05 00 00       	call   9982 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    945d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    9461:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9465:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9469:	48 89 d6             	mov    %rdx,%rsi
    946c:	48 89 c7             	mov    %rax,%rdi
    946f:	e8 1c cc ff ff       	call   6090 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9474:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    9478:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    947c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
    9480:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9484:	48 89 c7             	mov    %rax,%rdi
    9487:	e8 1e ff ff ff       	call   93aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    948c:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    948f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9493:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    949a:	00 
	  _Alloc_traits::construct(this->_M_impl,
    949b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    949f:	48 01 c1             	add    %rax,%rcx
    94a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    94a6:	48 89 ce             	mov    %rcx,%rsi
    94a9:	48 89 c7             	mov    %rax,%rdi
    94ac:	e8 07 ff ff ff       	call   93b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA28_S0_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
    94b1:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    94b8:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
    94b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    94bd:	48 89 c7             	mov    %rax,%rdi
    94c0:	e8 69 c2 ff ff       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    94c5:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    94c8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    94cc:	48 89 c7             	mov    %rax,%rdi
    94cf:	e8 c8 fe ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    94d4:	48 8b 30             	mov    (%rax),%rsi
    94d7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    94db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94df:	48 89 d9             	mov    %rbx,%rcx
    94e2:	48 89 c7             	mov    %rax,%rdi
    94e5:	e8 da 04 00 00       	call   99c4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    94ea:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
    94ee:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
    94f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    94f7:	48 89 c7             	mov    %rax,%rdi
    94fa:	e8 2f c2 ff ff       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    94ff:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    9502:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9506:	48 89 c7             	mov    %rax,%rdi
    9509:	e8 8e fe ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    950e:	48 8b 00             	mov    (%rax),%rax
    9511:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9515:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    9519:	48 89 d9             	mov    %rbx,%rcx
    951c:	48 89 c7             	mov    %rax,%rdi
    951f:	e8 a0 04 00 00       	call   99c4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9524:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
    9528:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    952c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9530:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    9534:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    9538:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    953c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9540:	48 89 ce             	mov    %rcx,%rsi
    9543:	48 89 c7             	mov    %rax,%rdi
    9546:	e8 77 ca ff ff       	call   5fc2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    954b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    954f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    9553:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    9556:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    955a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    955e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    9562:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9566:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    956d:	00 
    956e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9572:	48 01 c2             	add    %rax,%rdx
    9575:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9579:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    957d:	90                   	nop
    957e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9582:	c9                   	leave
    9583:	c3                   	ret

0000000000009584 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    9584:	55                   	push   %rbp
    9585:	48 89 e5             	mov    %rsp,%rbp
    9588:	48 83 ec 20          	sub    $0x20,%rsp
    958c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    9590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9594:	48 89 c7             	mov    %rax,%rdi
    9597:	e8 c4 fa ff ff       	call   9060 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    959c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    95a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    95a4:	be 01 00 00 00       	mov    $0x1,%esi
    95a9:	48 89 c7             	mov    %rax,%rdi
    95ac:	e8 45 04 00 00       	call   99f6 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    95b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    95b5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    95b9:	48 89 c7             	mov    %rax,%rdi
    95bc:	e8 23 fb ff ff       	call   90e4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    95c1:	c9                   	leave
    95c2:	c3                   	ret

00000000000095c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    95c3:	55                   	push   %rbp
    95c4:	48 89 e5             	mov    %rsp,%rbp
    95c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    95cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95cf:	5d                   	pop    %rbp
    95d0:	c3                   	ret

00000000000095d1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    95d1:	55                   	push   %rbp
    95d2:	48 89 e5             	mov    %rsp,%rbp
    95d5:	48 83 ec 20          	sub    $0x20,%rsp
    95d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    95e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    95e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95e9:	48 89 c7             	mov    %rax,%rdi
    95ec:	e8 d2 ff ff ff       	call   95c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    95f1:	48 89 c2             	mov    %rax,%rdx
    95f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95fc:	48 89 ce             	mov    %rcx,%rsi
    95ff:	48 89 c7             	mov    %rax,%rdi
    9602:	e8 31 04 00 00       	call   9a38 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>
	}
    9607:	90                   	nop
    9608:	c9                   	leave
    9609:	c3                   	ret

000000000000960a <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRA19_S0_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    960a:	55                   	push   %rbp
    960b:	48 89 e5             	mov    %rsp,%rbp
    960e:	53                   	push   %rbx
    960f:	48 83 ec 68          	sub    $0x68,%rsp
    9613:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    9617:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    961b:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    961f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9623:	48 8d 15 2f 26 00 00 	lea    0x262f(%rip),%rdx        # bc59 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0xc9>
    962a:	be 01 00 00 00       	mov    $0x1,%esi
    962f:	48 89 c7             	mov    %rax,%rdi
    9632:	e8 83 02 00 00       	call   98ba <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    9637:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    963b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    963f:	48 8b 00             	mov    (%rax),%rax
    9642:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    9646:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    964a:	48 8b 40 08          	mov    0x8(%rax),%rax
    964e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    9652:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9656:	48 89 c7             	mov    %rax,%rdi
    9659:	e8 dc f9 ff ff       	call   903a <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    965e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    9662:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    9666:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    966a:	48 89 d6             	mov    %rdx,%rsi
    966d:	48 89 c7             	mov    %rax,%rdi
    9670:	e8 0d 03 00 00       	call   9982 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    9675:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    9679:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    967d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9681:	48 89 d6             	mov    %rdx,%rsi
    9684:	48 89 c7             	mov    %rax,%rdi
    9687:	e8 04 ca ff ff       	call   6090 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    968c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    9690:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9694:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    9698:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    969c:	48 89 c7             	mov    %rax,%rdi
    969f:	e8 1f ff ff ff       	call   95c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    96a4:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    96a7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    96ab:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    96b2:	00 
	  _Alloc_traits::construct(this->_M_impl,
    96b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    96b7:	48 01 c1             	add    %rax,%rcx
    96ba:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    96be:	48 89 ce             	mov    %rcx,%rsi
    96c1:	48 89 c7             	mov    %rax,%rdi
    96c4:	e8 08 ff ff ff       	call   95d1 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRA19_S0_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    96c9:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    96d0:	00 
					 __new_start, _M_get_Tp_allocator());
    96d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    96d5:	48 89 c7             	mov    %rax,%rdi
    96d8:	e8 51 c0 ff ff       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    96dd:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    96e0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    96e4:	48 89 c7             	mov    %rax,%rdi
    96e7:	e8 b0 fc ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    96ec:	48 8b 30             	mov    (%rax),%rsi
    96ef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    96f3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    96f7:	48 89 d9             	mov    %rbx,%rcx
    96fa:	48 89 c7             	mov    %rax,%rdi
    96fd:	e8 c2 02 00 00       	call   99c4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    9702:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    9706:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    970b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    970f:	48 89 c7             	mov    %rax,%rdi
    9712:	e8 17 c0 ff ff       	call   572e <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9717:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    971a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    971e:	48 89 c7             	mov    %rax,%rdi
    9721:	e8 76 fc ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    9726:	48 8b 00             	mov    (%rax),%rax
    9729:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    972d:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    9731:	48 89 d9             	mov    %rbx,%rcx
    9734:	48 89 c7             	mov    %rax,%rdi
    9737:	e8 88 02 00 00       	call   99c4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    973c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    9740:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    9744:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    9748:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    974c:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    9750:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    9754:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9758:	48 89 ce             	mov    %rcx,%rsi
    975b:	48 89 c7             	mov    %rax,%rdi
    975e:	e8 5f c8 ff ff       	call   5fc2 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    9763:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9767:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    976b:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    976e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9772:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    9776:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    977a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    977e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9785:	00 
    9786:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    978a:	48 01 c2             	add    %rax,%rdx
    978d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    9791:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    9795:	90                   	nop
    9796:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    979a:	c9                   	leave
    979b:	c3                   	ret

000000000000979c <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    979c:	55                   	push   %rbp
    979d:	48 89 e5             	mov    %rsp,%rbp
    97a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    97a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97ac:	5d                   	pop    %rbp
    97ad:	c3                   	ret

00000000000097ae <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    97ae:	55                   	push   %rbp
    97af:	48 89 e5             	mov    %rsp,%rbp
    97b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    97b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ba:	5d                   	pop    %rbp
    97bb:	c3                   	ret

00000000000097bc <_ZSt10__exchangeIbbET_RS0_OT0_>:

  // C++11 version of std::exchange for internal use.
  template <typename _Tp, typename _Up = _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _Tp
    __exchange(_Tp& __obj, _Up&& __new_val)
    97bc:	55                   	push   %rbp
    97bd:	48 89 e5             	mov    %rsp,%rbp
    97c0:	48 83 ec 20          	sub    $0x20,%rsp
    97c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    97c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    {
      _Tp __old_val = std::move(__obj);
    97cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97d0:	48 89 c7             	mov    %rax,%rdi
    97d3:	e8 9f 02 00 00       	call   9a77 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>
    97d8:	0f b6 00             	movzbl (%rax),%eax
    97db:	88 45 ff             	mov    %al,-0x1(%rbp)
      __obj = std::forward<_Up>(__new_val);
    97de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    97e2:	48 89 c7             	mov    %rax,%rdi
    97e5:	e8 c4 ff ff ff       	call   97ae <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
    97ea:	0f b6 10             	movzbl (%rax),%edx
    97ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97f1:	88 10                	mov    %dl,(%rax)
      return __old_val;
    97f3:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    }
    97f7:	c9                   	leave
    97f8:	c3                   	ret
    97f9:	90                   	nop

00000000000097fa <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    97fa:	55                   	push   %rbp
    97fb:	48 89 e5             	mov    %rsp,%rbp
    97fe:	48 83 ec 10          	sub    $0x10,%rsp
    9802:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9806:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    980a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    980e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9812:	48 89 d6             	mov    %rdx,%rsi
    9815:	48 89 c7             	mov    %rax,%rdi
    9818:	e8 73 c8 ff ff       	call   6090 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    981d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9821:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9828:	48 8b 10             	mov    (%rax),%rdx
    982b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    982f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9837:	48 8b 00             	mov    (%rax),%rax
    983a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    983e:	48 c1 e2 03          	shl    $0x3,%rdx
    9842:	48 01 c2             	add    %rax,%rdx
    9845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9849:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    984d:	90                   	nop
    984e:	c9                   	leave
    984f:	c3                   	ret

0000000000009850 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9850:	55                   	push   %rbp
    9851:	48 89 e5             	mov    %rsp,%rbp
    9854:	48 83 ec 20          	sub    $0x20,%rsp
    9858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    985c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9860:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9864:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    986c:	48 89 d6             	mov    %rdx,%rsi
    986f:	48 89 c7             	mov    %rax,%rdi
    9872:	e8 0e 02 00 00       	call   9a85 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9877:	c9                   	leave
    9878:	c3                   	ret
    9879:	90                   	nop

000000000000987a <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA28_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    987a:	55                   	push   %rbp
    987b:	48 89 e5             	mov    %rsp,%rbp
    987e:	53                   	push   %rbx
    987f:	48 83 ec 28          	sub    $0x28,%rsp
    9883:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9887:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    988b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    988f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9893:	48 89 c6             	mov    %rax,%rsi
    9896:	bf 08 00 00 00       	mov    $0x8,%edi
    989b:	e8 a3 b0 ff ff       	call   4943 <_ZnwmPv>
    98a0:	48 89 c3             	mov    %rax,%rbx
    98a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98a7:	48 89 c7             	mov    %rax,%rdi
    98aa:	e8 fb fa ff ff       	call   93aa <_ZSt7forwardIRA28_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    98af:	48 89 03             	mov    %rax,(%rbx)
    98b2:	90                   	nop
    98b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98b7:	c9                   	leave
    98b8:	c3                   	ret
    98b9:	90                   	nop

00000000000098ba <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    98ba:	55                   	push   %rbp
    98bb:	48 89 e5             	mov    %rsp,%rbp
    98be:	53                   	push   %rbx
    98bf:	48 83 ec 38          	sub    $0x38,%rsp
    98c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    98c7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    98cb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    98cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98d3:	48 89 c7             	mov    %rax,%rdi
    98d6:	e8 d3 01 00 00       	call   9aae <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    98db:	48 89 c3             	mov    %rax,%rbx
    98de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    98e2:	48 89 c7             	mov    %rax,%rdi
    98e5:	e8 54 f9 ff ff       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    98ea:	48 29 c3             	sub    %rax,%rbx
    98ed:	48 89 da             	mov    %rbx,%rdx
    98f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    98f4:	48 39 c2             	cmp    %rax,%rdx
    98f7:	0f 92 c0             	setb   %al
    98fa:	84 c0                	test   %al,%al
    98fc:	74 0c                	je     990a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    98fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    9902:	48 89 c7             	mov    %rax,%rdi
    9905:	e8 e6 87 ff ff       	call   20f0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    990a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    990e:	48 89 c7             	mov    %rax,%rdi
    9911:	e8 28 f9 ff ff       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9916:	48 89 c3             	mov    %rax,%rbx
    9919:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    991d:	48 89 c7             	mov    %rax,%rdi
    9920:	e8 19 f9 ff ff       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9925:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9929:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    992d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9931:	48 89 d6             	mov    %rdx,%rsi
    9934:	48 89 c7             	mov    %rax,%rdi
    9937:	e8 94 01 00 00       	call   9ad0 <_ZSt3maxImERKT_S2_S2_>
    993c:	48 8b 00             	mov    (%rax),%rax
    993f:	48 01 d8             	add    %rbx,%rax
    9942:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    9946:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    994a:	48 89 c7             	mov    %rax,%rdi
    994d:	e8 ec f8 ff ff       	call   923e <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    9952:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9956:	72 12                	jb     996a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    9958:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    995c:	48 89 c7             	mov    %rax,%rdi
    995f:	e8 4a 01 00 00       	call   9aae <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9964:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    9968:	73 0e                	jae    9978 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    996a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    996e:	48 89 c7             	mov    %rax,%rdi
    9971:	e8 38 01 00 00       	call   9aae <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    9976:	eb 04                	jmp    997c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    9978:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    997c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9980:	c9                   	leave
    9981:	c3                   	ret

0000000000009982 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    9982:	55                   	push   %rbp
    9983:	48 89 e5             	mov    %rsp,%rbp
    9986:	53                   	push   %rbx
    9987:	48 83 ec 18          	sub    $0x18,%rsp
    998b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    998f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    9993:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9997:	48 89 c7             	mov    %rax,%rdi
    999a:	e8 fd f9 ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    999f:	48 8b 18             	mov    (%rax),%rbx
    99a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    99a6:	48 89 c7             	mov    %rax,%rdi
    99a9:	e8 ee f9 ff ff       	call   939c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    99ae:	48 8b 00             	mov    (%rax),%rax
    99b1:	48 89 da             	mov    %rbx,%rdx
    99b4:	48 29 c2             	sub    %rax,%rdx
    99b7:	48 89 d0             	mov    %rdx,%rax
    99ba:	48 c1 f8 03          	sar    $0x3,%rax
    99be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99c2:	c9                   	leave
    99c3:	c3                   	ret

00000000000099c4 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    99c4:	55                   	push   %rbp
    99c5:	48 89 e5             	mov    %rsp,%rbp
    99c8:	48 83 ec 20          	sub    $0x20,%rsp
    99cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    99d8:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    99dc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    99e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    99e4:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    99e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99ec:	48 89 c7             	mov    %rax,%rdi
    99ef:	e8 07 01 00 00       	call   9afb <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    99f4:	c9                   	leave
    99f5:	c3                   	ret

00000000000099f6 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    99f6:	55                   	push   %rbp
    99f7:	48 89 e5             	mov    %rsp,%rbp
    99fa:	48 83 ec 20          	sub    $0x20,%rsp
    99fe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    9a06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a0a:	48 8b 00             	mov    (%rax),%rax
    9a0d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a11:	48 c1 e2 03          	shl    $0x3,%rdx
    9a15:	48 f7 da             	neg    %rdx
    9a18:	48 01 d0             	add    %rdx,%rax
    9a1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9a1f:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    9a23:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    9a27:	48 89 d6             	mov    %rdx,%rsi
    9a2a:	48 89 c7             	mov    %rax,%rdi
    9a2d:	e8 4c f9 ff ff       	call   937e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9a32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9a36:	c9                   	leave
    9a37:	c3                   	ret

0000000000009a38 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRA19_S0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    9a38:	55                   	push   %rbp
    9a39:	48 89 e5             	mov    %rsp,%rbp
    9a3c:	53                   	push   %rbx
    9a3d:	48 83 ec 28          	sub    $0x28,%rsp
    9a41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9a49:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    9a4d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a51:	48 89 c6             	mov    %rax,%rsi
    9a54:	bf 08 00 00 00       	mov    $0x8,%edi
    9a59:	e8 e5 ae ff ff       	call   4943 <_ZnwmPv>
    9a5e:	48 89 c3             	mov    %rax,%rbx
    9a61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9a65:	48 89 c7             	mov    %rax,%rdi
    9a68:	e8 56 fb ff ff       	call   95c3 <_ZSt7forwardIRA19_KcEOT_RNSt16remove_referenceIS3_E4typeE>
    9a6d:	48 89 03             	mov    %rax,(%rbx)
    9a70:	90                   	nop
    9a71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a75:	c9                   	leave
    9a76:	c3                   	ret

0000000000009a77 <_ZSt4moveIRbEONSt16remove_referenceIT_E4typeEOS2_>:
    move(_Tp&& __t) noexcept
    9a77:	55                   	push   %rbp
    9a78:	48 89 e5             	mov    %rsp,%rbp
    9a7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    9a7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a83:	5d                   	pop    %rbp
    9a84:	c3                   	ret

0000000000009a85 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    9a85:	55                   	push   %rbp
    9a86:	48 89 e5             	mov    %rsp,%rbp
    9a89:	48 83 ec 20          	sub    $0x20,%rsp
    9a8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    9a95:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    9a99:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9a9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9aa1:	48 89 d6             	mov    %rdx,%rsi
    9aa4:	48 89 c7             	mov    %rax,%rdi
    9aa7:	e8 b2 00 00 00       	call   9b5e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    9aac:	c9                   	leave
    9aad:	c3                   	ret

0000000000009aae <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    9aae:	55                   	push   %rbp
    9aaf:	48 89 e5             	mov    %rsp,%rbp
    9ab2:	48 83 ec 10          	sub    $0x10,%rsp
    9ab6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    9aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9abe:	48 89 c7             	mov    %rax,%rdi
    9ac1:	e8 f6 00 00 00       	call   9bbc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    9ac6:	48 89 c7             	mov    %rax,%rdi
    9ac9:	e8 ea d1 ff ff       	call   6cb8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    9ace:	c9                   	leave
    9acf:	c3                   	ret

0000000000009ad0 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    9ad0:	55                   	push   %rbp
    9ad1:	48 89 e5             	mov    %rsp,%rbp
    9ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ad8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    9adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ae0:	48 8b 10             	mov    (%rax),%rdx
    9ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9ae7:	48 8b 00             	mov    (%rax),%rax
    9aea:	48 39 c2             	cmp    %rax,%rdx
    9aed:	73 06                	jae    9af5 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    9aef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9af3:	eb 04                	jmp    9af9 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    9af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    9af9:	5d                   	pop    %rbp
    9afa:	c3                   	ret

0000000000009afb <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    9afb:	55                   	push   %rbp
    9afc:	48 89 e5             	mov    %rsp,%rbp
    9aff:	41 54                	push   %r12
    9b01:	53                   	push   %rbx
    9b02:	48 83 ec 20          	sub    $0x20,%rsp
    9b06:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b0a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9b0e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9b12:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    9b16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9b1a:	48 89 c7             	mov    %rax,%rdi
    9b1d:	e8 56 e7 ff ff       	call   8278 <_ZSt12__niter_baseIPPKcET_S3_>
    9b22:	49 89 c4             	mov    %rax,%r12
    9b25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b29:	48 89 c7             	mov    %rax,%rdi
    9b2c:	e8 47 e7 ff ff       	call   8278 <_ZSt12__niter_baseIPPKcET_S3_>
    9b31:	48 89 c3             	mov    %rax,%rbx
    9b34:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b38:	48 89 c7             	mov    %rax,%rdi
    9b3b:	e8 38 e7 ff ff       	call   8278 <_ZSt12__niter_baseIPPKcET_S3_>
    9b40:	48 89 c7             	mov    %rax,%rdi
    9b43:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9b47:	48 89 c1             	mov    %rax,%rcx
    9b4a:	4c 89 e2             	mov    %r12,%rdx
    9b4d:	48 89 de             	mov    %rbx,%rsi
    9b50:	e8 75 00 00 00       	call   9bca <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    9b55:	48 83 c4 20          	add    $0x20,%rsp
    9b59:	5b                   	pop    %rbx
    9b5a:	41 5c                	pop    %r12
    9b5c:	5d                   	pop    %rbp
    9b5d:	c3                   	ret

0000000000009b5e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    9b5e:	55                   	push   %rbp
    9b5f:	48 89 e5             	mov    %rsp,%rbp
    9b62:	48 83 ec 20          	sub    $0x20,%rsp
    9b66:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9b6a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    9b6e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    9b73:	74 40                	je     9bb5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    9b75:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b79:	48 89 c7             	mov    %rax,%rdi
    9b7c:	e8 ac 00 00 00       	call   9c2d <_ZSt11__addressofIPKcEPT_RS2_>
    9b81:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    9b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b89:	48 89 c7             	mov    %rax,%rdi
    9b8c:	e8 aa 00 00 00       	call   9c3b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    9b91:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    9b96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b9a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    9b9e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ba6:	48 89 ce             	mov    %rcx,%rsi
    9ba9:	48 89 c7             	mov    %rax,%rdi
    9bac:	e8 b1 00 00 00       	call   9c62 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    9bb1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    9bb5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9bb9:	c9                   	leave
    9bba:	c3                   	ret
    9bbb:	90                   	nop

0000000000009bbc <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    9bbc:	55                   	push   %rbp
    9bbd:	48 89 e5             	mov    %rsp,%rbp
    9bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc8:	5d                   	pop    %rbp
    9bc9:	c3                   	ret

0000000000009bca <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
    9bca:	55                   	push   %rbp
    9bcb:	48 89 e5             	mov    %rsp,%rbp
    9bce:	48 83 ec 30          	sub    $0x30,%rsp
    9bd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9bd6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9bda:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    9bde:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
    9be2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9be6:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    9bea:	48 c1 f8 03          	sar    $0x3,%rax
    9bee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
    9bf2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    9bf7:	7e 1f                	jle    9c18 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
    9bf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bfd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9c04:	00 
    9c05:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    9c09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c0d:	48 89 ce             	mov    %rcx,%rsi
    9c10:	48 89 c7             	mov    %rax,%rdi
    9c13:	e8 a8 87 ff ff       	call   23c0 <memmove@plt>
      return __result + __count;
    9c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c1c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9c23:	00 
    9c24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9c28:	48 01 d0             	add    %rdx,%rax
    }
    9c2b:	c9                   	leave
    9c2c:	c3                   	ret

0000000000009c2d <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    9c2d:	55                   	push   %rbp
    9c2e:	48 89 e5             	mov    %rsp,%rbp
    9c31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    9c35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c39:	5d                   	pop    %rbp
    9c3a:	c3                   	ret

0000000000009c3b <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    9c3b:	55                   	push   %rbp
    9c3c:	48 89 e5             	mov    %rsp,%rbp
    9c3f:	48 83 ec 10          	sub    $0x10,%rsp
    9c43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    9c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4b:	48 89 c6             	mov    %rax,%rsi
    9c4e:	bf 08 00 00 00       	mov    $0x8,%edi
    9c53:	e8 eb ac ff ff       	call   4943 <_ZnwmPv>
    9c58:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    9c5f:	90                   	nop
    9c60:	c9                   	leave
    9c61:	c3                   	ret

0000000000009c62 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    9c62:	55                   	push   %rbp
    9c63:	48 89 e5             	mov    %rsp,%rbp
    9c66:	48 83 ec 20          	sub    $0x20,%rsp
    9c6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    9c76:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9c7a:	48 89 c7             	mov    %rax,%rdi
    9c7d:	e8 24 00 00 00       	call   9ca6 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    9c82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9c86:	48 89 c7             	mov    %rax,%rdi
    9c89:	e8 d6 ac ff ff       	call   4964 <_ZSt17__size_to_integerm>
    9c8e:	48 89 c1             	mov    %rax,%rcx
    9c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c99:	48 89 ce             	mov    %rcx,%rsi
    9c9c:	48 89 c7             	mov    %rax,%rdi
    9c9f:	e8 0d 00 00 00       	call   9cb1 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    9ca4:	c9                   	leave
    9ca5:	c3                   	ret

0000000000009ca6 <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    9ca6:	55                   	push   %rbp
    9ca7:	48 89 e5             	mov    %rsp,%rbp
    9caa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    9cae:	90                   	nop
    9caf:	5d                   	pop    %rbp
    9cb0:	c3                   	ret

0000000000009cb1 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    9cb1:	55                   	push   %rbp
    9cb2:	48 89 e5             	mov    %rsp,%rbp
    9cb5:	48 83 ec 20          	sub    $0x20,%rsp
    9cb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cc1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    9cc5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9cca:	75 06                	jne    9cd2 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    9ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cd0:	eb 3a                	jmp    9d0c <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    9cd2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cd6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9cdd:	00 
    9cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ce2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    9ce6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cee:	48 89 ce             	mov    %rcx,%rsi
    9cf1:	48 89 c7             	mov    %rax,%rdi
    9cf4:	e8 15 00 00 00       	call   9d0e <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    9cf9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9cfd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    9d04:	00 
    9d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d09:	48 01 d0             	add    %rdx,%rax
    }
    9d0c:	c9                   	leave
    9d0d:	c3                   	ret

0000000000009d0e <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    9d0e:	55                   	push   %rbp
    9d0f:	48 89 e5             	mov    %rsp,%rbp
    9d12:	48 83 ec 20          	sub    $0x20,%rsp
    9d16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d1e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    9d22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9d26:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d2e:	48 89 ce             	mov    %rcx,%rsi
    9d31:	48 89 c7             	mov    %rax,%rdi
    9d34:	e8 03 00 00 00       	call   9d3c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    9d39:	90                   	nop
    9d3a:	c9                   	leave
    9d3b:	c3                   	ret

0000000000009d3c <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    9d3c:	55                   	push   %rbp
    9d3d:	48 89 e5             	mov    %rsp,%rbp
    9d40:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9d44:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9d48:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    9d4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d50:	48 8b 00             	mov    (%rax),%rax
    9d53:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    9d57:	eb 10                	jmp    9d69 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    9d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d61:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    9d64:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    9d69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d6d:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    9d71:	75 e6                	jne    9d59 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    9d73:	90                   	nop
    9d74:	90                   	nop
    9d75:	5d                   	pop    %rbp
    9d76:	c3                   	ret
    9d77:	90                   	nop

0000000000009d78 <_ZN4neko6WindowC1ERKNS_8SettingsE>:
#include "window.hpp"

namespace neko {

Window::Window(const Settings &settings)
    9d78:	55                   	push   %rbp
    9d79:	48 89 e5             	mov    %rsp,%rbp
    9d7c:	48 83 ec 10          	sub    $0x10,%rsp
    9d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    : mWidth{settings.graphics.screenWidth},
    9d88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d8c:	8b 50 50             	mov    0x50(%rax),%edx
    9d8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d93:	89 50 08             	mov    %edx,0x8(%rax)
      mHeight{settings.graphics.screenHeight} {
    9d96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9d9a:	8b 50 54             	mov    0x54(%rax),%edx
    9d9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da1:	89 50 0c             	mov    %edx,0xc(%rax)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    9da4:	be 00 00 00 00       	mov    $0x0,%esi
    9da9:	bf 01 20 02 00       	mov    $0x22001,%edi
    9dae:	e8 3d 84 ff ff       	call   21f0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    9db3:	be 00 00 00 00       	mov    $0x0,%esi
    9db8:	bf 03 00 02 00       	mov    $0x20003,%edi
    9dbd:	e8 2e 84 ff ff       	call   21f0 <glfwWindowHint@plt>
  mWindow = glfwCreateWindow(mWidth, mHeight, settings.general.appName.c_str(),
    9dc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9dc6:	48 89 c7             	mov    %rax,%rdi
    9dc9:	e8 f2 82 ff ff       	call   20c0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt>
    9dce:	48 89 c2             	mov    %rax,%rdx
    9dd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd5:	8b 40 0c             	mov    0xc(%rax),%eax
    9dd8:	89 c6                	mov    %eax,%esi
    9dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dde:	8b 40 08             	mov    0x8(%rax),%eax
    9de1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9de7:	b9 00 00 00 00       	mov    $0x0,%ecx
    9dec:	89 c7                	mov    %eax,%edi
    9dee:	e8 bd 85 ff ff       	call   23b0 <glfwCreateWindow@plt>
    9df3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9df7:	48 89 02             	mov    %rax,(%rdx)
                             nullptr, nullptr);
}
    9dfa:	90                   	nop
    9dfb:	c9                   	leave
    9dfc:	c3                   	ret
    9dfd:	90                   	nop

0000000000009dfe <_ZN4neko6WindowD1Ev>:

Window::~Window() { glfwDestroyWindow(mWindow); }
    9dfe:	55                   	push   %rbp
    9dff:	48 89 e5             	mov    %rsp,%rbp
    9e02:	48 83 ec 10          	sub    $0x10,%rsp
    9e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e0e:	48 8b 00             	mov    (%rax),%rax
    9e11:	48 89 c7             	mov    %rax,%rdi
    9e14:	e8 57 82 ff ff       	call   2070 <glfwDestroyWindow@plt>
    9e19:	90                   	nop
    9e1a:	c9                   	leave
    9e1b:	c3                   	ret

0000000000009e1c <_ZN4neko6Window4openEv>:

void Window::open() {
    9e1c:	55                   	push   %rbp
    9e1d:	48 89 e5             	mov    %rsp,%rbp
    9e20:	48 83 ec 10          	sub    $0x10,%rsp
    9e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  while (!glfwWindowShouldClose(mWindow)) {
    9e28:	eb 05                	jmp    9e2f <_ZN4neko6Window4openEv+0x13>
    glfwPollEvents();
    9e2a:	e8 f1 83 ff ff       	call   2220 <glfwPollEvents@plt>
  while (!glfwWindowShouldClose(mWindow)) {
    9e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e33:	48 8b 00             	mov    (%rax),%rax
    9e36:	48 89 c7             	mov    %rax,%rdi
    9e39:	e8 f2 85 ff ff       	call   2430 <glfwWindowShouldClose@plt>
    9e3e:	85 c0                	test   %eax,%eax
    9e40:	0f 94 c0             	sete   %al
    9e43:	84 c0                	test   %al,%al
    9e45:	75 e3                	jne    9e2a <_ZN4neko6Window4openEv+0xe>
  }
}
    9e47:	90                   	nop
    9e48:	90                   	nop
    9e49:	c9                   	leave
    9e4a:	c3                   	ret
    9e4b:	90                   	nop

0000000000009e4c <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE>:
#include "renderer/basic/instance/instance.hpp"
#include "renderer/basic/window/window.hpp"

namespace neko {

Surface::Surface(const Instance &crInstance, const Window &crWindow)
    9e4c:	55                   	push   %rbp
    9e4d:	48 89 e5             	mov    %rsp,%rbp
    9e50:	41 54                	push   %r12
    9e52:	53                   	push   %rbx
    9e53:	48 83 ec 20          	sub    $0x20,%rsp
    9e57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9e5b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9e5f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    : mcrInstance{crInstance} {
    9e63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e67:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9e6b:	48 89 10             	mov    %rdx,(%rax)
  if (glfwCreateWindowSurface(*crInstance, *crWindow, nullptr, &mSurface) !=
    9e6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e72:	4c 8d 60 08          	lea    0x8(%rax),%r12
    9e76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9e7a:	48 89 c7             	mov    %rax,%rdi
    9e7d:	e8 c8 00 00 00       	call   9f4a <_ZNK4neko6WindowdeEv>
    9e82:	48 8b 18             	mov    (%rax),%rbx
    9e85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9e89:	48 89 c7             	mov    %rax,%rdi
    9e8c:	e8 e1 aa ff ff       	call   4972 <_ZNK4neko8InstancedeEv>
    9e91:	48 8b 00             	mov    (%rax),%rax
    9e94:	4c 89 e1             	mov    %r12,%rcx
    9e97:	ba 00 00 00 00       	mov    $0x0,%edx
    9e9c:	48 89 de             	mov    %rbx,%rsi
    9e9f:	48 89 c7             	mov    %rax,%rdi
    9ea2:	e8 f9 84 ff ff       	call   23a0 <glfwCreateWindowSurface@plt>
    9ea7:	85 c0                	test   %eax,%eax
    9ea9:	0f 95 c0             	setne  %al
    9eac:	84 c0                	test   %al,%al
    9eae:	74 51                	je     9f01 <_ZN4neko7SurfaceC1ERKNS_8InstanceERKNS_6WindowE+0xb5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    9eb0:	bf 10 00 00 00       	mov    $0x10,%edi
    9eb5:	e8 26 82 ff ff       	call   20e0 <__cxa_allocate_exception@plt>
    9eba:	48 89 c3             	mov    %rax,%rbx
    9ebd:	48 8d 05 14 2a 00 00 	lea    0x2a14(%rip),%rax        # c8d8 <_ZL44VK_FORMAT_FEATURE_2_OPTICAL_FLOW_COST_BIT_NV+0x8>
    9ec4:	48 89 c6             	mov    %rax,%rsi
    9ec7:	48 89 df             	mov    %rbx,%rdi
    9eca:	e8 c1 81 ff ff       	call   2090 <_ZNSt13runtime_errorC1EPKc@plt>
    9ecf:	48 8b 05 da a0 00 00 	mov    0xa0da(%rip),%rax        # 13fb0 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9ed6:	48 89 c2             	mov    %rax,%rdx
    9ed9:	48 8d 05 80 9e 00 00 	lea    0x9e80(%rip),%rax        # 13d60 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9ee0:	48 89 c6             	mov    %rax,%rsi
    9ee3:	48 89 df             	mov    %rbx,%rdi
    9ee6:	e8 f5 84 ff ff       	call   23e0 <__cxa_throw@plt>
    9eeb:	49 89 c4             	mov    %rax,%r12
    9eee:	48 89 df             	mov    %rbx,%rdi
    9ef1:	e8 6a 82 ff ff       	call   2160 <__cxa_free_exception@plt>
    9ef6:	4c 89 e0             	mov    %r12,%rax
    9ef9:	48 89 c7             	mov    %rax,%rdi
    9efc:	e8 ff 84 ff ff       	call   2400 <_Unwind_Resume@plt>
  }
}
    9f01:	90                   	nop
    9f02:	48 83 c4 20          	add    $0x20,%rsp
    9f06:	5b                   	pop    %rbx
    9f07:	41 5c                	pop    %r12
    9f09:	5d                   	pop    %rbp
    9f0a:	c3                   	ret
    9f0b:	90                   	nop

0000000000009f0c <_ZN4neko7SurfaceD1Ev>:

Surface::~Surface() { vkDestroySurfaceKHR(*mcrInstance, mSurface, nullptr); }
    9f0c:	55                   	push   %rbp
    9f0d:	48 89 e5             	mov    %rsp,%rbp
    9f10:	53                   	push   %rbx
    9f11:	48 83 ec 18          	sub    $0x18,%rsp
    9f15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f1d:	48 8b 58 08          	mov    0x8(%rax),%rbx
    9f21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f25:	48 8b 00             	mov    (%rax),%rax
    9f28:	48 89 c7             	mov    %rax,%rdi
    9f2b:	e8 42 aa ff ff       	call   4972 <_ZNK4neko8InstancedeEv>
    9f30:	48 8b 00             	mov    (%rax),%rax
    9f33:	ba 00 00 00 00       	mov    $0x0,%edx
    9f38:	48 89 de             	mov    %rbx,%rsi
    9f3b:	48 89 c7             	mov    %rax,%rdi
    9f3e:	e8 ad 84 ff ff       	call   23f0 <vkDestroySurfaceKHR@plt>
    9f43:	90                   	nop
    9f44:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9f48:	c9                   	leave
    9f49:	c3                   	ret

0000000000009f4a <_ZNK4neko6WindowdeEv>:

  Window &operator=(Window &&) = default;

  ~Window();

  const GLWindow &operator*() const noexcept { return mWindow; }
    9f4a:	55                   	push   %rbp
    9f4b:	48 89 e5             	mov    %rsp,%rbp
    9f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f56:	5d                   	pop    %rbp
    9f57:	c3                   	ret

Disassembly of section .fini:

0000000000009f58 <_fini>:
    9f58:	48 83 ec 08          	sub    $0x8,%rsp
    9f5c:	48 83 c4 08          	add    $0x8,%rsp
    9f60:	c3                   	ret
