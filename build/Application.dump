
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000003000 <_init>:
    3000:	48 83 ec 08          	sub    $0x8,%rsp
    3004:	48 8b 05 ad df 01 00 	mov    0x1dfad(%rip),%rax        # 20fb8 <__gmon_start__@Base>
    300b:	48 85 c0             	test   %rax,%rax
    300e:	74 02                	je     3012 <_init+0x12>
    3010:	ff d0                	call   *%rax
    3012:	48 83 c4 08          	add    $0x8,%rsp
    3016:	c3                   	ret

Disassembly of section .plt:

0000000000003020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    3020:	ff 35 ca df 01 00    	push   0x1dfca(%rip)        # 20ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    3026:	ff 25 cc df 01 00    	jmp    *0x1dfcc(%rip)        # 20ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    302c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    3030:	ff 25 ca df 01 00    	jmp    *0x1dfca(%rip)        # 21000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    3036:	68 00 00 00 00       	push   $0x0
    303b:	e9 e0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003040 <vkCmdEndRenderPass@plt>:
    3040:	ff 25 c2 df 01 00    	jmp    *0x1dfc2(%rip)        # 21008 <vkCmdEndRenderPass@Base>
    3046:	68 01 00 00 00       	push   $0x1
    304b:	e9 d0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    3050:	ff 25 ba df 01 00    	jmp    *0x1dfba(%rip)        # 21010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    3056:	68 02 00 00 00       	push   $0x2
    305b:	e9 c0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003060 <_ZNSaIcED2Ev@plt>:
    3060:	ff 25 b2 df 01 00    	jmp    *0x1dfb2(%rip)        # 21018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    3066:	68 03 00 00 00       	push   $0x3
    306b:	e9 b0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    3070:	ff 25 aa df 01 00    	jmp    *0x1dfaa(%rip)        # 21020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    3076:	68 04 00 00 00       	push   $0x4
    307b:	e9 a0 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003080 <vkDeviceWaitIdle@plt>:
    3080:	ff 25 a2 df 01 00    	jmp    *0x1dfa2(%rip)        # 21028 <vkDeviceWaitIdle@Base>
    3086:	68 05 00 00 00       	push   $0x5
    308b:	e9 90 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003090 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    3090:	ff 25 9a df 01 00    	jmp    *0x1df9a(%rip)        # 21030 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    3096:	68 06 00 00 00       	push   $0x6
    309b:	e9 80 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030a0 <vkDestroySwapchainKHR@plt>:
    30a0:	ff 25 92 df 01 00    	jmp    *0x1df92(%rip)        # 21038 <vkDestroySwapchainKHR@Base>
    30a6:	68 07 00 00 00       	push   $0x7
    30ab:	e9 70 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030b0 <vkDestroySemaphore@plt>:
    30b0:	ff 25 8a df 01 00    	jmp    *0x1df8a(%rip)        # 21040 <vkDestroySemaphore@Base>
    30b6:	68 08 00 00 00       	push   $0x8
    30bb:	e9 60 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030c0 <glfwDestroyWindow@plt>:
    30c0:	ff 25 82 df 01 00    	jmp    *0x1df82(%rip)        # 21048 <glfwDestroyWindow@Base>
    30c6:	68 09 00 00 00       	push   $0x9
    30cb:	e9 50 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030d0 <_ZSt17__throw_bad_allocv@plt>:
    30d0:	ff 25 7a df 01 00    	jmp    *0x1df7a(%rip)        # 21050 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    30d6:	68 0a 00 00 00       	push   $0xa
    30db:	e9 40 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030e0 <_ZNSt13runtime_errorC1EPKc@plt>:
    30e0:	ff 25 72 df 01 00    	jmp    *0x1df72(%rip)        # 21058 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    30e6:	68 0b 00 00 00       	push   $0xb
    30eb:	e9 30 ff ff ff       	jmp    3020 <_init+0x20>

00000000000030f0 <__cxa_begin_catch@plt>:
    30f0:	ff 25 6a df 01 00    	jmp    *0x1df6a(%rip)        # 21060 <__cxa_begin_catch@CXXABI_1.3>
    30f6:	68 0c 00 00 00       	push   $0xc
    30fb:	e9 20 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003100 <vkAcquireNextImageKHR@plt>:
    3100:	ff 25 62 df 01 00    	jmp    *0x1df62(%rip)        # 21068 <vkAcquireNextImageKHR@Base>
    3106:	68 0d 00 00 00       	push   $0xd
    310b:	e9 10 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003110 <vkCreateCommandPool@plt>:
    3110:	ff 25 5a df 01 00    	jmp    *0x1df5a(%rip)        # 21070 <vkCreateCommandPool@Base>
    3116:	68 0e 00 00 00       	push   $0xe
    311b:	e9 00 ff ff ff       	jmp    3020 <_init+0x20>

0000000000003120 <strlen@plt>:
    3120:	ff 25 52 df 01 00    	jmp    *0x1df52(%rip)        # 21078 <strlen@GLIBC_2.2.5>
    3126:	68 0f 00 00 00       	push   $0xf
    312b:	e9 f0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003130 <vkCreateGraphicsPipelines@plt>:
    3130:	ff 25 4a df 01 00    	jmp    *0x1df4a(%rip)        # 21080 <vkCreateGraphicsPipelines@Base>
    3136:	68 10 00 00 00       	push   $0x10
    313b:	e9 e0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003140 <__cxa_allocate_exception@plt>:
    3140:	ff 25 42 df 01 00    	jmp    *0x1df42(%rip)        # 21088 <__cxa_allocate_exception@CXXABI_1.3>
    3146:	68 11 00 00 00       	push   $0x11
    314b:	e9 d0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003150 <_ZSt20__throw_length_errorPKc@plt>:
    3150:	ff 25 3a df 01 00    	jmp    *0x1df3a(%rip)        # 21090 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    3156:	68 12 00 00 00       	push   $0x12
    315b:	e9 c0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003160 <vkEnumeratePhysicalDevices@plt>:
    3160:	ff 25 32 df 01 00    	jmp    *0x1df32(%rip)        # 21098 <vkEnumeratePhysicalDevices@Base>
    3166:	68 13 00 00 00       	push   $0x13
    316b:	e9 b0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003170 <memset@plt>:
    3170:	ff 25 2a df 01 00    	jmp    *0x1df2a(%rip)        # 210a0 <memset@GLIBC_2.2.5>
    3176:	68 14 00 00 00       	push   $0x14
    317b:	e9 a0 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003180 <_ZNSaIcEC1ERKS_@plt>:
    3180:	ff 25 22 df 01 00    	jmp    *0x1df22(%rip)        # 210a8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    3186:	68 15 00 00 00       	push   $0x15
    318b:	e9 90 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003190 <vkWaitForFences@plt>:
    3190:	ff 25 1a df 01 00    	jmp    *0x1df1a(%rip)        # 210b0 <vkWaitForFences@Base>
    3196:	68 16 00 00 00       	push   $0x16
    319b:	e9 80 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031a0 <vkGetSwapchainImagesKHR@plt>:
    31a0:	ff 25 12 df 01 00    	jmp    *0x1df12(%rip)        # 210b8 <vkGetSwapchainImagesKHR@Base>
    31a6:	68 17 00 00 00       	push   $0x17
    31ab:	e9 70 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
    31b0:	ff 25 0a df 01 00    	jmp    *0x1df0a(%rip)        # 210c0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@GLIBCXX_3.4>
    31b6:	68 18 00 00 00       	push   $0x18
    31bb:	e9 60 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    31c0:	ff 25 02 df 01 00    	jmp    *0x1df02(%rip)        # 210c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    31c6:	68 19 00 00 00       	push   $0x19
    31cb:	e9 50 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031d0 <vkCreateRenderPass@plt>:
    31d0:	ff 25 fa de 01 00    	jmp    *0x1defa(%rip)        # 210d0 <vkCreateRenderPass@Base>
    31d6:	68 1a 00 00 00       	push   $0x1a
    31db:	e9 40 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    31e0:	ff 25 f2 de 01 00    	jmp    *0x1def2(%rip)        # 210d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    31e6:	68 1b 00 00 00       	push   $0x1b
    31eb:	e9 30 fe ff ff       	jmp    3020 <_init+0x20>

00000000000031f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    31f0:	ff 25 ea de 01 00    	jmp    *0x1deea(%rip)        # 210e0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    31f6:	68 1c 00 00 00       	push   $0x1c
    31fb:	e9 20 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003200 <_ZSt19__throw_logic_errorPKc@plt>:
    3200:	ff 25 e2 de 01 00    	jmp    *0x1dee2(%rip)        # 210e8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    3206:	68 1d 00 00 00       	push   $0x1d
    320b:	e9 10 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003210 <__cxa_free_exception@plt>:
    3210:	ff 25 da de 01 00    	jmp    *0x1deda(%rip)        # 210f0 <__cxa_free_exception@CXXABI_1.3>
    3216:	68 1e 00 00 00       	push   $0x1e
    321b:	e9 00 fe ff ff       	jmp    3020 <_init+0x20>

0000000000003220 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    3220:	ff 25 d2 de 01 00    	jmp    *0x1ded2(%rip)        # 210f8 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    3226:	68 1f 00 00 00       	push   $0x1f
    322b:	e9 f0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003230 <glfwGetRequiredInstanceExtensions@plt>:
    3230:	ff 25 ca de 01 00    	jmp    *0x1deca(%rip)        # 21100 <glfwGetRequiredInstanceExtensions@Base>
    3236:	68 20 00 00 00       	push   $0x20
    323b:	e9 e0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003240 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    3240:	ff 25 c2 de 01 00    	jmp    *0x1dec2(%rip)        # 21108 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    3246:	68 21 00 00 00       	push   $0x21
    324b:	e9 d0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003250 <vkCreateShaderModule@plt>:
    3250:	ff 25 ba de 01 00    	jmp    *0x1deba(%rip)        # 21110 <vkCreateShaderModule@Base>
    3256:	68 22 00 00 00       	push   $0x22
    325b:	e9 c0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    3260:	ff 25 b2 de 01 00    	jmp    *0x1deb2(%rip)        # 21118 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    3266:	68 23 00 00 00       	push   $0x23
    326b:	e9 b0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003270 <vkDestroyDevice@plt>:
    3270:	ff 25 aa de 01 00    	jmp    *0x1deaa(%rip)        # 21120 <vkDestroyDevice@Base>
    3276:	68 24 00 00 00       	push   $0x24
    327b:	e9 a0 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003280 <vkCreatePipelineLayout@plt>:
    3280:	ff 25 a2 de 01 00    	jmp    *0x1dea2(%rip)        # 21128 <vkCreatePipelineLayout@Base>
    3286:	68 25 00 00 00       	push   $0x25
    328b:	e9 90 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003290 <vkEnumerateInstanceExtensionProperties@plt>:
    3290:	ff 25 9a de 01 00    	jmp    *0x1de9a(%rip)        # 21130 <vkEnumerateInstanceExtensionProperties@Base>
    3296:	68 26 00 00 00       	push   $0x26
    329b:	e9 80 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    32a0:	ff 25 92 de 01 00    	jmp    *0x1de92(%rip)        # 21138 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    32a6:	68 27 00 00 00       	push   $0x27
    32ab:	e9 70 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032b0 <glfwWindowHint@plt>:
    32b0:	ff 25 8a de 01 00    	jmp    *0x1de8a(%rip)        # 21140 <glfwWindowHint@Base>
    32b6:	68 28 00 00 00       	push   $0x28
    32bb:	e9 60 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    32c0:	ff 25 82 de 01 00    	jmp    *0x1de82(%rip)        # 21148 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    32c6:	68 29 00 00 00       	push   $0x29
    32cb:	e9 50 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032d0 <vkCmdBindPipeline@plt>:
    32d0:	ff 25 7a de 01 00    	jmp    *0x1de7a(%rip)        # 21150 <vkCmdBindPipeline@Base>
    32d6:	68 2a 00 00 00       	push   $0x2a
    32db:	e9 40 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032e0 <__cxa_atexit@plt>:
    32e0:	ff 25 72 de 01 00    	jmp    *0x1de72(%rip)        # 21158 <__cxa_atexit@GLIBC_2.2.5>
    32e6:	68 2b 00 00 00       	push   $0x2b
    32eb:	e9 30 fd ff ff       	jmp    3020 <_init+0x20>

00000000000032f0 <vkAllocateCommandBuffers@plt>:
    32f0:	ff 25 6a de 01 00    	jmp    *0x1de6a(%rip)        # 21160 <vkAllocateCommandBuffers@Base>
    32f6:	68 2c 00 00 00       	push   $0x2c
    32fb:	e9 20 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003300 <vkGetInstanceProcAddr@plt>:
    3300:	ff 25 62 de 01 00    	jmp    *0x1de62(%rip)        # 21168 <vkGetInstanceProcAddr@Base>
    3306:	68 2d 00 00 00       	push   $0x2d
    330b:	e9 10 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003310 <glfwPollEvents@plt>:
    3310:	ff 25 5a de 01 00    	jmp    *0x1de5a(%rip)        # 21170 <glfwPollEvents@Base>
    3316:	68 2e 00 00 00       	push   $0x2e
    331b:	e9 00 fd ff ff       	jmp    3020 <_init+0x20>

0000000000003320 <vkDestroyRenderPass@plt>:
    3320:	ff 25 52 de 01 00    	jmp    *0x1de52(%rip)        # 21178 <vkDestroyRenderPass@Base>
    3326:	68 2f 00 00 00       	push   $0x2f
    332b:	e9 f0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    3330:	ff 25 4a de 01 00    	jmp    *0x1de4a(%rip)        # 21180 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    3336:	68 30 00 00 00       	push   $0x30
    333b:	e9 e0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003340 <_Znwm@plt>:
    3340:	ff 25 42 de 01 00    	jmp    *0x1de42(%rip)        # 21188 <_Znwm@GLIBCXX_3.4>
    3346:	68 31 00 00 00       	push   $0x31
    334b:	e9 d0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003350 <vkBeginCommandBuffer@plt>:
    3350:	ff 25 3a de 01 00    	jmp    *0x1de3a(%rip)        # 21190 <vkBeginCommandBuffer@Base>
    3356:	68 32 00 00 00       	push   $0x32
    335b:	e9 c0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003360 <_ZdlPvm@plt>:
    3360:	ff 25 32 de 01 00    	jmp    *0x1de32(%rip)        # 21198 <_ZdlPvm@CXXABI_1.3.9>
    3366:	68 33 00 00 00       	push   $0x33
    336b:	e9 b0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003370 <vkDestroyInstance@plt>:
    3370:	ff 25 2a de 01 00    	jmp    *0x1de2a(%rip)        # 211a0 <vkDestroyInstance@Base>
    3376:	68 34 00 00 00       	push   $0x34
    337b:	e9 a0 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003380 <glfwTerminate@plt>:
    3380:	ff 25 22 de 01 00    	jmp    *0x1de22(%rip)        # 211a8 <glfwTerminate@Base>
    3386:	68 35 00 00 00       	push   $0x35
    338b:	e9 90 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003390 <vkCreateImageView@plt>:
    3390:	ff 25 1a de 01 00    	jmp    *0x1de1a(%rip)        # 211b0 <vkCreateImageView@Base>
    3396:	68 36 00 00 00       	push   $0x36
    339b:	e9 80 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    33a0:	ff 25 12 de 01 00    	jmp    *0x1de12(%rip)        # 211b8 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    33a6:	68 37 00 00 00       	push   $0x37
    33ab:	e9 70 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033b0 <_ZNSolsEPFRSoS_E@plt>:
    33b0:	ff 25 0a de 01 00    	jmp    *0x1de0a(%rip)        # 211c0 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    33b6:	68 38 00 00 00       	push   $0x38
    33bb:	e9 60 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    33c0:	ff 25 02 de 01 00    	jmp    *0x1de02(%rip)        # 211c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    33c6:	68 39 00 00 00       	push   $0x39
    33cb:	e9 50 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    33d0:	ff 25 fa dd 01 00    	jmp    *0x1ddfa(%rip)        # 211d0 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    33d6:	68 3a 00 00 00       	push   $0x3a
    33db:	e9 40 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033e0 <_ZNSaIcED1Ev@plt>:
    33e0:	ff 25 f2 dd 01 00    	jmp    *0x1ddf2(%rip)        # 211d8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    33e6:	68 3b 00 00 00       	push   $0x3b
    33eb:	e9 30 fc ff ff       	jmp    3020 <_init+0x20>

00000000000033f0 <vkDestroyFence@plt>:
    33f0:	ff 25 ea dd 01 00    	jmp    *0x1ddea(%rip)        # 211e0 <vkDestroyFence@Base>
    33f6:	68 3c 00 00 00       	push   $0x3c
    33fb:	e9 20 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003400 <vkDestroyPipeline@plt>:
    3400:	ff 25 e2 dd 01 00    	jmp    *0x1dde2(%rip)        # 211e8 <vkDestroyPipeline@Base>
    3406:	68 3d 00 00 00       	push   $0x3d
    340b:	e9 10 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003410 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    3410:	ff 25 da dd 01 00    	jmp    *0x1ddda(%rip)        # 211f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    3416:	68 3e 00 00 00       	push   $0x3e
    341b:	e9 00 fc ff ff       	jmp    3020 <_init+0x20>

0000000000003420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    3420:	ff 25 d2 dd 01 00    	jmp    *0x1ddd2(%rip)        # 211f8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    3426:	68 3f 00 00 00       	push   $0x3f
    342b:	e9 f0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003430 <vkEnumerateInstanceLayerProperties@plt>:
    3430:	ff 25 ca dd 01 00    	jmp    *0x1ddca(%rip)        # 21200 <vkEnumerateInstanceLayerProperties@Base>
    3436:	68 40 00 00 00       	push   $0x40
    343b:	e9 e0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003440 <glfwInit@plt>:
    3440:	ff 25 c2 dd 01 00    	jmp    *0x1ddc2(%rip)        # 21208 <glfwInit@Base>
    3446:	68 41 00 00 00       	push   $0x41
    344b:	e9 d0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003450 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
    3450:	ff 25 ba dd 01 00    	jmp    *0x1ddba(%rip)        # 21210 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@GLIBCXX_3.4>
    3456:	68 42 00 00 00       	push   $0x42
    345b:	e9 c0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    3460:	ff 25 b2 dd 01 00    	jmp    *0x1ddb2(%rip)        # 21218 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    3466:	68 43 00 00 00       	push   $0x43
    346b:	e9 b0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003470 <vkCreateSwapchainKHR@plt>:
    3470:	ff 25 aa dd 01 00    	jmp    *0x1ddaa(%rip)        # 21220 <vkCreateSwapchainKHR@Base>
    3476:	68 44 00 00 00       	push   $0x44
    347b:	e9 a0 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003480 <vkDestroyShaderModule@plt>:
    3480:	ff 25 a2 dd 01 00    	jmp    *0x1dda2(%rip)        # 21228 <vkDestroyShaderModule@Base>
    3486:	68 45 00 00 00       	push   $0x45
    348b:	e9 90 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003490 <vkCreateInstance@plt>:
    3490:	ff 25 9a dd 01 00    	jmp    *0x1dd9a(%rip)        # 21230 <vkCreateInstance@Base>
    3496:	68 46 00 00 00       	push   $0x46
    349b:	e9 80 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    34a0:	ff 25 92 dd 01 00    	jmp    *0x1dd92(%rip)        # 21238 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    34a6:	68 47 00 00 00       	push   $0x47
    34ab:	e9 70 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034b0 <vkCreateFence@plt>:
    34b0:	ff 25 8a dd 01 00    	jmp    *0x1dd8a(%rip)        # 21240 <vkCreateFence@Base>
    34b6:	68 48 00 00 00       	push   $0x48
    34bb:	e9 60 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034c0 <vkResetCommandBuffer@plt>:
    34c0:	ff 25 82 dd 01 00    	jmp    *0x1dd82(%rip)        # 21248 <vkResetCommandBuffer@Base>
    34c6:	68 49 00 00 00       	push   $0x49
    34cb:	e9 50 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034d0 <vkDestroyPipelineLayout@plt>:
    34d0:	ff 25 7a dd 01 00    	jmp    *0x1dd7a(%rip)        # 21250 <vkDestroyPipelineLayout@Base>
    34d6:	68 4a 00 00 00       	push   $0x4a
    34db:	e9 40 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034e0 <_ZNSi4readEPcl@plt>:
    34e0:	ff 25 72 dd 01 00    	jmp    *0x1dd72(%rip)        # 21258 <_ZNSi4readEPcl@GLIBCXX_3.4>
    34e6:	68 4b 00 00 00       	push   $0x4b
    34eb:	e9 30 fb ff ff       	jmp    3020 <_init+0x20>

00000000000034f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    34f0:	ff 25 6a dd 01 00    	jmp    *0x1dd6a(%rip)        # 21260 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    34f6:	68 4c 00 00 00       	push   $0x4c
    34fb:	e9 20 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    3500:	ff 25 62 dd 01 00    	jmp    *0x1dd62(%rip)        # 21268 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    3506:	68 4d 00 00 00       	push   $0x4d
    350b:	e9 10 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    3510:	ff 25 5a dd 01 00    	jmp    *0x1dd5a(%rip)        # 21270 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    3516:	68 4e 00 00 00       	push   $0x4e
    351b:	e9 00 fb ff ff       	jmp    3020 <_init+0x20>

0000000000003520 <vkQueueSubmit@plt>:
    3520:	ff 25 52 dd 01 00    	jmp    *0x1dd52(%rip)        # 21278 <vkQueueSubmit@Base>
    3526:	68 4f 00 00 00       	push   $0x4f
    352b:	e9 f0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003530 <vkGetDeviceQueue@plt>:
    3530:	ff 25 4a dd 01 00    	jmp    *0x1dd4a(%rip)        # 21280 <vkGetDeviceQueue@Base>
    3536:	68 50 00 00 00       	push   $0x50
    353b:	e9 e0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003540 <vkCreateFramebuffer@plt>:
    3540:	ff 25 42 dd 01 00    	jmp    *0x1dd42(%rip)        # 21288 <vkCreateFramebuffer@Base>
    3546:	68 51 00 00 00       	push   $0x51
    354b:	e9 d0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003550 <vkEnumerateDeviceExtensionProperties@plt>:
    3550:	ff 25 3a dd 01 00    	jmp    *0x1dd3a(%rip)        # 21290 <vkEnumerateDeviceExtensionProperties@Base>
    3556:	68 52 00 00 00       	push   $0x52
    355b:	e9 c0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003560 <vkCreateSemaphore@plt>:
    3560:	ff 25 32 dd 01 00    	jmp    *0x1dd32(%rip)        # 21298 <vkCreateSemaphore@Base>
    3566:	68 53 00 00 00       	push   $0x53
    356b:	e9 b0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003570 <vkCmdBeginRenderPass@plt>:
    3570:	ff 25 2a dd 01 00    	jmp    *0x1dd2a(%rip)        # 212a0 <vkCmdBeginRenderPass@Base>
    3576:	68 54 00 00 00       	push   $0x54
    357b:	e9 a0 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003580 <vkDestroyCommandPool@plt>:
    3580:	ff 25 22 dd 01 00    	jmp    *0x1dd22(%rip)        # 212a8 <vkDestroyCommandPool@Base>
    3586:	68 55 00 00 00       	push   $0x55
    358b:	e9 90 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003590 <strcmp@plt>:
    3590:	ff 25 1a dd 01 00    	jmp    *0x1dd1a(%rip)        # 212b0 <strcmp@GLIBC_2.2.5>
    3596:	68 56 00 00 00       	push   $0x56
    359b:	e9 80 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035a0 <_ZNSaIcEC2ERKS_@plt>:
    35a0:	ff 25 12 dd 01 00    	jmp    *0x1dd12(%rip)        # 212b8 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    35a6:	68 57 00 00 00       	push   $0x57
    35ab:	e9 70 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035b0 <__cxa_rethrow@plt>:
    35b0:	ff 25 0a dd 01 00    	jmp    *0x1dd0a(%rip)        # 212c0 <__cxa_rethrow@CXXABI_1.3>
    35b6:	68 58 00 00 00       	push   $0x58
    35bb:	e9 60 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035c0 <vkCreateDevice@plt>:
    35c0:	ff 25 02 dd 01 00    	jmp    *0x1dd02(%rip)        # 212c8 <vkCreateDevice@Base>
    35c6:	68 59 00 00 00       	push   $0x59
    35cb:	e9 50 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035d0 <_ZNSt8ios_base4InitC1Ev@plt>:
    35d0:	ff 25 fa dc 01 00    	jmp    *0x1dcfa(%rip)        # 212d0 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    35d6:	68 5a 00 00 00       	push   $0x5a
    35db:	e9 40 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035e0 <glfwCreateWindowSurface@plt>:
    35e0:	ff 25 f2 dc 01 00    	jmp    *0x1dcf2(%rip)        # 212d8 <glfwCreateWindowSurface@Base>
    35e6:	68 5b 00 00 00       	push   $0x5b
    35eb:	e9 30 fa ff ff       	jmp    3020 <_init+0x20>

00000000000035f0 <vkResetFences@plt>:
    35f0:	ff 25 ea dc 01 00    	jmp    *0x1dcea(%rip)        # 212e0 <vkResetFences@Base>
    35f6:	68 5c 00 00 00       	push   $0x5c
    35fb:	e9 20 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003600 <glfwCreateWindow@plt>:
    3600:	ff 25 e2 dc 01 00    	jmp    *0x1dce2(%rip)        # 212e8 <glfwCreateWindow@Base>
    3606:	68 5d 00 00 00       	push   $0x5d
    360b:	e9 10 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003610 <vkQueuePresentKHR@plt>:
    3610:	ff 25 da dc 01 00    	jmp    *0x1dcda(%rip)        # 212f0 <vkQueuePresentKHR@Base>
    3616:	68 5e 00 00 00       	push   $0x5e
    361b:	e9 00 fa ff ff       	jmp    3020 <_init+0x20>

0000000000003620 <glfwGetFramebufferSize@plt>:
    3620:	ff 25 d2 dc 01 00    	jmp    *0x1dcd2(%rip)        # 212f8 <glfwGetFramebufferSize@Base>
    3626:	68 5f 00 00 00       	push   $0x5f
    362b:	e9 f0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    3630:	ff 25 ca dc 01 00    	jmp    *0x1dcca(%rip)        # 21300 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    3636:	68 60 00 00 00       	push   $0x60
    363b:	e9 e0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    3640:	ff 25 c2 dc 01 00    	jmp    *0x1dcc2(%rip)        # 21308 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    3646:	68 61 00 00 00       	push   $0x61
    364b:	e9 d0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003650 <memmove@plt>:
    3650:	ff 25 ba dc 01 00    	jmp    *0x1dcba(%rip)        # 21310 <memmove@GLIBC_2.2.5>
    3656:	68 62 00 00 00       	push   $0x62
    365b:	e9 c0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003660 <__cxa_end_catch@plt>:
    3660:	ff 25 b2 dc 01 00    	jmp    *0x1dcb2(%rip)        # 21318 <__cxa_end_catch@CXXABI_1.3>
    3666:	68 63 00 00 00       	push   $0x63
    366b:	e9 b0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003670 <vkDestroyFramebuffer@plt>:
    3670:	ff 25 aa dc 01 00    	jmp    *0x1dcaa(%rip)        # 21320 <vkDestroyFramebuffer@Base>
    3676:	68 64 00 00 00       	push   $0x64
    367b:	e9 a0 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003680 <__cxa_throw@plt>:
    3680:	ff 25 a2 dc 01 00    	jmp    *0x1dca2(%rip)        # 21328 <__cxa_throw@CXXABI_1.3>
    3686:	68 65 00 00 00       	push   $0x65
    368b:	e9 90 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003690 <_ZNSi5tellgEv@plt>:
    3690:	ff 25 9a dc 01 00    	jmp    *0x1dc9a(%rip)        # 21330 <_ZNSi5tellgEv@GLIBCXX_3.4>
    3696:	68 66 00 00 00       	push   $0x66
    369b:	e9 80 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036a0 <vkDestroySurfaceKHR@plt>:
    36a0:	ff 25 92 dc 01 00    	jmp    *0x1dc92(%rip)        # 21338 <vkDestroySurfaceKHR@Base>
    36a6:	68 67 00 00 00       	push   $0x67
    36ab:	e9 70 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036b0 <_Unwind_Resume@plt>:
    36b0:	ff 25 8a dc 01 00    	jmp    *0x1dc8a(%rip)        # 21340 <_Unwind_Resume@GCC_3.0>
    36b6:	68 68 00 00 00       	push   $0x68
    36bb:	e9 60 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036c0 <_ZNSaIcEC1Ev@plt>:
    36c0:	ff 25 82 dc 01 00    	jmp    *0x1dc82(%rip)        # 21348 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    36c6:	68 69 00 00 00       	push   $0x69
    36cb:	e9 50 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036d0 <vkDestroyImageView@plt>:
    36d0:	ff 25 7a dc 01 00    	jmp    *0x1dc7a(%rip)        # 21350 <vkDestroyImageView@Base>
    36d6:	68 6a 00 00 00       	push   $0x6a
    36db:	e9 40 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    36e0:	ff 25 72 dc 01 00    	jmp    *0x1dc72(%rip)        # 21358 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    36e6:	68 6b 00 00 00       	push   $0x6b
    36eb:	e9 30 f9 ff ff       	jmp    3020 <_init+0x20>

00000000000036f0 <_ZNSt9exceptionD2Ev@plt>:
    36f0:	ff 25 6a dc 01 00    	jmp    *0x1dc6a(%rip)        # 21360 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    36f6:	68 6c 00 00 00       	push   $0x6c
    36fb:	e9 20 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003700 <glfwWindowShouldClose@plt>:
    3700:	ff 25 62 dc 01 00    	jmp    *0x1dc62(%rip)        # 21368 <glfwWindowShouldClose@Base>
    3706:	68 6d 00 00 00       	push   $0x6d
    370b:	e9 10 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003710 <vkEndCommandBuffer@plt>:
    3710:	ff 25 5a dc 01 00    	jmp    *0x1dc5a(%rip)        # 21370 <vkEndCommandBuffer@Base>
    3716:	68 6e 00 00 00       	push   $0x6e
    371b:	e9 00 f9 ff ff       	jmp    3020 <_init+0x20>

0000000000003720 <vkCmdDraw@plt>:
    3720:	ff 25 52 dc 01 00    	jmp    *0x1dc52(%rip)        # 21378 <vkCmdDraw@Base>
    3726:	68 6f 00 00 00       	push   $0x6f
    372b:	e9 f0 f8 ff ff       	jmp    3020 <_init+0x20>

0000000000003730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    3730:	ff 25 4a dc 01 00    	jmp    *0x1dc4a(%rip)        # 21380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    3736:	68 70 00 00 00       	push   $0x70
    373b:	e9 e0 f8 ff ff       	jmp    3020 <_init+0x20>

Disassembly of section .plt.got:

0000000000003740 <__cxa_finalize@plt>:
    3740:	ff 25 4a d8 01 00    	jmp    *0x1d84a(%rip)        # 20f90 <__cxa_finalize@GLIBC_2.2.5>
    3746:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000003750 <_start>:
    3750:	31 ed                	xor    %ebp,%ebp
    3752:	49 89 d1             	mov    %rdx,%r9
    3755:	5e                   	pop    %rsi
    3756:	48 89 e2             	mov    %rsp,%rdx
    3759:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    375d:	50                   	push   %rax
    375e:	54                   	push   %rsp
    375f:	45 31 c0             	xor    %r8d,%r8d
    3762:	31 c9                	xor    %ecx,%ecx
    3764:	48 8d 3d 40 01 00 00 	lea    0x140(%rip),%rdi        # 38ab <main>
    376b:	ff 15 2f d8 01 00    	call   *0x1d82f(%rip)        # 20fa0 <__libc_start_main@GLIBC_2.34>
    3771:	f4                   	hlt
    3772:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3779:	00 00 00 
    377c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003780 <deregister_tm_clones>:
    3780:	48 8d 3d 21 dc 01 00 	lea    0x1dc21(%rip),%rdi        # 213a8 <__TMC_END__>
    3787:	48 8d 05 1a dc 01 00 	lea    0x1dc1a(%rip),%rax        # 213a8 <__TMC_END__>
    378e:	48 39 f8             	cmp    %rdi,%rax
    3791:	74 15                	je     37a8 <deregister_tm_clones+0x28>
    3793:	48 8b 05 16 d8 01 00 	mov    0x1d816(%rip),%rax        # 20fb0 <_ITM_deregisterTMCloneTable@Base>
    379a:	48 85 c0             	test   %rax,%rax
    379d:	74 09                	je     37a8 <deregister_tm_clones+0x28>
    379f:	ff e0                	jmp    *%rax
    37a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    37a8:	c3                   	ret
    37a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000037b0 <register_tm_clones>:
    37b0:	48 8d 3d f1 db 01 00 	lea    0x1dbf1(%rip),%rdi        # 213a8 <__TMC_END__>
    37b7:	48 8d 35 ea db 01 00 	lea    0x1dbea(%rip),%rsi        # 213a8 <__TMC_END__>
    37be:	48 29 fe             	sub    %rdi,%rsi
    37c1:	48 89 f0             	mov    %rsi,%rax
    37c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    37c8:	48 c1 f8 03          	sar    $0x3,%rax
    37cc:	48 01 c6             	add    %rax,%rsi
    37cf:	48 d1 fe             	sar    %rsi
    37d2:	74 14                	je     37e8 <register_tm_clones+0x38>
    37d4:	48 8b 05 e5 d7 01 00 	mov    0x1d7e5(%rip),%rax        # 20fc0 <_ITM_registerTMCloneTable@Base>
    37db:	48 85 c0             	test   %rax,%rax
    37de:	74 08                	je     37e8 <register_tm_clones+0x38>
    37e0:	ff e0                	jmp    *%rax
    37e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    37e8:	c3                   	ret
    37e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000037f0 <__do_global_dtors_aux>:
    37f0:	f3 0f 1e fa          	endbr64
    37f4:	80 3d f5 dd 01 00 00 	cmpb   $0x0,0x1ddf5(%rip)        # 215f0 <completed.0>
    37fb:	75 2b                	jne    3828 <__do_global_dtors_aux+0x38>
    37fd:	55                   	push   %rbp
    37fe:	48 83 3d 8a d7 01 00 	cmpq   $0x0,0x1d78a(%rip)        # 20f90 <__cxa_finalize@GLIBC_2.2.5>
    3805:	00 
    3806:	48 89 e5             	mov    %rsp,%rbp
    3809:	74 0c                	je     3817 <__do_global_dtors_aux+0x27>
    380b:	48 8b 3d 7e db 01 00 	mov    0x1db7e(%rip),%rdi        # 21390 <__dso_handle>
    3812:	e8 29 ff ff ff       	call   3740 <__cxa_finalize@plt>
    3817:	e8 64 ff ff ff       	call   3780 <deregister_tm_clones>
    381c:	c6 05 cd dd 01 00 01 	movb   $0x1,0x1ddcd(%rip)        # 215f0 <completed.0>
    3823:	5d                   	pop    %rbp
    3824:	c3                   	ret
    3825:	0f 1f 00             	nopl   (%rax)
    3828:	c3                   	ret
    3829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003830 <frame_dummy>:
    3830:	f3 0f 1e fa          	endbr64
    3834:	e9 77 ff ff ff       	jmp    37b0 <register_tm_clones>

0000000000003839 <_Z14protected_mainiPPc>:

using namespace rtvc;

int protected_main([[maybe_unused]] int argc,
                   [[maybe_unused]] char **argv)
{
    3839:	55                   	push   %rbp
    383a:	48 89 e5             	mov    %rsp,%rbp
    383d:	53                   	push   %rbx
    383e:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    3845:	89 bd cc fe ff ff    	mov    %edi,-0x134(%rbp)
    384b:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
    RenderApplication app;
    3852:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    3859:	48 89 c7             	mov    %rax,%rdi
    385c:	e8 83 02 00 00       	call   3ae4 <_ZN4rtvc17RenderApplicationC1Ev>
    app.run();
    3861:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    3868:	48 89 c7             	mov    %rax,%rdi
    386b:	e8 fc 4d 00 00       	call   866c <_ZN4rtvc17RenderApplication3runEv>

    return EXIT_SUCCESS;
    3870:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    3875:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    387c:	48 89 c7             	mov    %rax,%rdi
    387f:	e8 e8 03 00 00       	call   3c6c <_ZN4rtvc17RenderApplicationD1Ev>
    return EXIT_SUCCESS;
    3884:	89 d8                	mov    %ebx,%eax
    3886:	eb 1d                	jmp    38a5 <_Z14protected_mainiPPc+0x6c>
}
    3888:	48 89 c3             	mov    %rax,%rbx
    388b:	48 8d 85 d0 fe ff ff 	lea    -0x130(%rbp),%rax
    3892:	48 89 c7             	mov    %rax,%rdi
    3895:	e8 d2 03 00 00       	call   3c6c <_ZN4rtvc17RenderApplicationD1Ev>
    389a:	48 89 d8             	mov    %rbx,%rax
    389d:	48 89 c7             	mov    %rax,%rdi
    38a0:	e8 0b fe ff ff       	call   36b0 <_Unwind_Resume@plt>
    38a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    38a9:	c9                   	leave
    38aa:	c3                   	ret

00000000000038ab <main>:

int main([[maybe_unused]] int argc,
         [[maybe_unused]] char **argv)
{
    38ab:	55                   	push   %rbp
    38ac:	48 89 e5             	mov    %rsp,%rbp
    38af:	53                   	push   %rbx
    38b0:	48 83 ec 28          	sub    $0x28,%rsp
    38b4:	89 7d dc             	mov    %edi,-0x24(%rbp)
    38b7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    try
    {
        return protected_main(argc, argv);
    38bb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    38bf:	8b 45 dc             	mov    -0x24(%rbp),%eax
    38c2:	48 89 d6             	mov    %rdx,%rsi
    38c5:	89 c7                	mov    %eax,%edi
    38c7:	e8 6d ff ff ff       	call   3839 <_Z14protected_mainiPPc>
    38cc:	e9 aa 00 00 00       	jmp    397b <main+0xd0>
    }
    catch (...)
    {
        std::cerr << "Uncaught exception.\n";
    }
    return EXIT_FAILURE;
    38d1:	b8 01 00 00 00       	mov    $0x1,%eax
    38d6:	e9 a0 00 00 00       	jmp    397b <main+0xd0>
    catch (const std::exception &e)
    38db:	48 83 fa 01          	cmp    $0x1,%rdx
    38df:	75 49                	jne    392a <main+0x7f>
    38e1:	48 89 c7             	mov    %rax,%rdi
    38e4:	e8 07 f8 ff ff       	call   30f0 <__cxa_begin_catch@plt>
    38e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        std::cerr << e.what() << '\n';
    38ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38f1:	48 8b 00             	mov    (%rax),%rax
    38f4:	48 83 c0 10          	add    $0x10,%rax
    38f8:	48 8b 10             	mov    (%rax),%rdx
    38fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    38ff:	48 89 c7             	mov    %rax,%rdi
    3902:	ff d2                	call   *%rdx
    3904:	48 89 c6             	mov    %rax,%rsi
    3907:	48 8d 05 d2 db 01 00 	lea    0x1dbd2(%rip),%rax        # 214e0 <_ZSt4cerr@GLIBCXX_3.4>
    390e:	48 89 c7             	mov    %rax,%rdi
    3911:	e8 1a fa ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    3916:	be 0a 00 00 00       	mov    $0xa,%esi
    391b:	48 89 c7             	mov    %rax,%rdi
    391e:	e8 3d fb ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    }
    3923:	e8 38 fd ff ff       	call   3660 <__cxa_end_catch@plt>
    3928:	eb a7                	jmp    38d1 <main+0x26>
    catch (...)
    392a:	48 89 c7             	mov    %rax,%rdi
    392d:	e8 be f7 ff ff       	call   30f0 <__cxa_begin_catch@plt>
        std::cerr << "Uncaught exception.\n";
    3932:	48 8d 05 d8 0c 01 00 	lea    0x10cd8(%rip),%rax        # 14611 <_ZN6__pstl9execution2v1L5unseqE+0x2e>
    3939:	48 89 c6             	mov    %rax,%rsi
    393c:	48 8d 05 9d db 01 00 	lea    0x1db9d(%rip),%rax        # 214e0 <_ZSt4cerr@GLIBCXX_3.4>
    3943:	48 89 c7             	mov    %rax,%rdi
    3946:	e8 e5 f9 ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    }
    394b:	e8 10 fd ff ff       	call   3660 <__cxa_end_catch@plt>
    3950:	e9 7c ff ff ff       	jmp    38d1 <main+0x26>
    }
    3955:	48 89 c3             	mov    %rax,%rbx
    3958:	e8 03 fd ff ff       	call   3660 <__cxa_end_catch@plt>
    395d:	48 89 d8             	mov    %rbx,%rax
    3960:	48 89 c7             	mov    %rax,%rdi
    3963:	e8 48 fd ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    3968:	48 89 c3             	mov    %rax,%rbx
    396b:	e8 f0 fc ff ff       	call   3660 <__cxa_end_catch@plt>
    3970:	48 89 d8             	mov    %rbx,%rax
    3973:	48 89 c7             	mov    %rax,%rdi
    3976:	e8 35 fd ff ff       	call   36b0 <_Unwind_Resume@plt>
    397b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    397f:	c9                   	leave
    3980:	c3                   	ret

0000000000003981 <_Z41__static_initialization_and_destruction_0ii>:
    3981:	55                   	push   %rbp
    3982:	48 89 e5             	mov    %rsp,%rbp
    3985:	48 83 ec 10          	sub    $0x10,%rsp
    3989:	89 7d fc             	mov    %edi,-0x4(%rbp)
    398c:	89 75 f8             	mov    %esi,-0x8(%rbp)
    398f:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    3993:	75 3b                	jne    39d0 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    3995:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    399c:	75 32                	jne    39d0 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    399e:	48 8d 05 4c dc 01 00 	lea    0x1dc4c(%rip),%rax        # 215f1 <_ZStL8__ioinit>
    39a5:	48 89 c7             	mov    %rax,%rdi
    39a8:	e8 23 fc ff ff       	call   35d0 <_ZNSt8ios_base4InitC1Ev@plt>
    39ad:	48 8d 05 dc d9 01 00 	lea    0x1d9dc(%rip),%rax        # 21390 <__dso_handle>
    39b4:	48 89 c2             	mov    %rax,%rdx
    39b7:	48 8d 05 33 dc 01 00 	lea    0x1dc33(%rip),%rax        # 215f1 <_ZStL8__ioinit>
    39be:	48 89 c6             	mov    %rax,%rsi
    39c1:	48 8b 05 00 d6 01 00 	mov    0x1d600(%rip),%rax        # 20fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    39c8:	48 89 c7             	mov    %rax,%rdi
    39cb:	e8 10 f9 ff ff       	call   32e0 <__cxa_atexit@plt>
    39d0:	90                   	nop
    39d1:	c9                   	leave
    39d2:	c3                   	ret

00000000000039d3 <_GLOBAL__sub_I__Z14protected_mainiPPc>:
    39d3:	55                   	push   %rbp
    39d4:	48 89 e5             	mov    %rsp,%rbp
    39d7:	be ff ff 00 00       	mov    $0xffff,%esi
    39dc:	bf 01 00 00 00       	mov    $0x1,%edi
    39e1:	e8 9b ff ff ff       	call   3981 <_Z41__static_initialization_and_destruction_0ii>
    39e6:	5d                   	pop    %rbp
    39e7:	c3                   	ret

00000000000039e8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    39e8:	55                   	push   %rbp
    39e9:	48 89 e5             	mov    %rsp,%rbp
    39ec:	48 83 ec 10          	sub    $0x10,%rsp
    39f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    39f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    39f8:	48 89 c7             	mov    %rax,%rdi
    39fb:	e8 fe 03 00 00       	call   3dfe <_ZNSaIP9VkImage_TED1Ev>
    3a00:	90                   	nop
    3a01:	c9                   	leave
    3a02:	c3                   	ret
    3a03:	90                   	nop

0000000000003a04 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      allocator_type
      get_allocator() const _GLIBCXX_NOEXCEPT
      { return allocator_type(_M_get_Tp_allocator()); }

#if __cplusplus >= 201103L
      _Vector_base() = default;
    3a04:	55                   	push   %rbp
    3a05:	48 89 e5             	mov    %rsp,%rbp
    3a08:	48 83 ec 10          	sub    $0x10,%rsp
    3a0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a14:	48 89 c7             	mov    %rax,%rdi
    3a17:	e8 ba 03 00 00       	call   3dd6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
    3a1c:	90                   	nop
    3a1d:	c9                   	leave
    3a1e:	c3                   	ret
    3a1f:	90                   	nop

0000000000003a20 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:

      /**
       *  @brief  Creates a %vector with no elements.
       */
#if __cplusplus >= 201103L
      vector() = default;
    3a20:	55                   	push   %rbp
    3a21:	48 89 e5             	mov    %rsp,%rbp
    3a24:	48 83 ec 10          	sub    $0x10,%rsp
    3a28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a30:	48 89 c7             	mov    %rax,%rdi
    3a33:	e8 cc ff ff ff       	call   3a04 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
    3a38:	90                   	nop
    3a39:	c9                   	leave
    3a3a:	c3                   	ret
    3a3b:	90                   	nop

0000000000003a3c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    3a3c:	55                   	push   %rbp
    3a3d:	48 89 e5             	mov    %rsp,%rbp
    3a40:	48 83 ec 10          	sub    $0x10,%rsp
    3a44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a4c:	48 89 c7             	mov    %rax,%rdi
    3a4f:	e8 80 04 00 00       	call   3ed4 <_ZNSaIP13VkImageView_TED1Ev>
    3a54:	90                   	nop
    3a55:	c9                   	leave
    3a56:	c3                   	ret
    3a57:	90                   	nop

0000000000003a58 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    3a58:	55                   	push   %rbp
    3a59:	48 89 e5             	mov    %rsp,%rbp
    3a5c:	48 83 ec 10          	sub    $0x10,%rsp
    3a60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a68:	48 89 c7             	mov    %rax,%rdi
    3a6b:	e8 3c 04 00 00       	call   3eac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
    3a70:	90                   	nop
    3a71:	c9                   	leave
    3a72:	c3                   	ret
    3a73:	90                   	nop

0000000000003a74 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
    3a74:	55                   	push   %rbp
    3a75:	48 89 e5             	mov    %rsp,%rbp
    3a78:	48 83 ec 10          	sub    $0x10,%rsp
    3a7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3a84:	48 89 c7             	mov    %rax,%rdi
    3a87:	e8 cc ff ff ff       	call   3a58 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
    3a8c:	90                   	nop
    3a8d:	c9                   	leave
    3a8e:	c3                   	ret
    3a8f:	90                   	nop

0000000000003a90 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    3a90:	55                   	push   %rbp
    3a91:	48 89 e5             	mov    %rsp,%rbp
    3a94:	48 83 ec 10          	sub    $0x10,%rsp
    3a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3a9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3aa0:	48 89 c7             	mov    %rax,%rdi
    3aa3:	e8 02 05 00 00       	call   3faa <_ZNSaIP15VkFramebuffer_TED1Ev>
    3aa8:	90                   	nop
    3aa9:	c9                   	leave
    3aaa:	c3                   	ret
    3aab:	90                   	nop

0000000000003aac <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
    3aac:	55                   	push   %rbp
    3aad:	48 89 e5             	mov    %rsp,%rbp
    3ab0:	48 83 ec 10          	sub    $0x10,%rsp
    3ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3abc:	48 89 c7             	mov    %rax,%rdi
    3abf:	e8 be 04 00 00       	call   3f82 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>
    3ac4:	90                   	nop
    3ac5:	c9                   	leave
    3ac6:	c3                   	ret
    3ac7:	90                   	nop

0000000000003ac8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>:
      vector() = default;
    3ac8:	55                   	push   %rbp
    3ac9:	48 89 e5             	mov    %rsp,%rbp
    3acc:	48 83 ec 10          	sub    $0x10,%rsp
    3ad0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ad8:	48 89 c7             	mov    %rax,%rdi
    3adb:	e8 cc ff ff ff       	call   3aac <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EEC1Ev>
    3ae0:	90                   	nop
    3ae1:	c9                   	leave
    3ae2:	c3                   	ret
    3ae3:	90                   	nop

0000000000003ae4 <_ZN4rtvc17RenderApplicationC1Ev>:
    {
    public:
        static const uint32_t init_window_width = 1024;
        static const uint32_t init_window_height = 720;

        RenderApplication()
    3ae4:	55                   	push   %rbp
    3ae5:	48 89 e5             	mov    %rsp,%rbp
    3ae8:	41 57                	push   %r15
    3aea:	41 56                	push   %r14
    3aec:	41 55                	push   %r13
    3aee:	41 54                	push   %r12
    3af0:	53                   	push   %rbx
    3af1:	48 83 ec 38          	sub    $0x38,%rsp
    3af5:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
            : window{nullptr, init_window_width, init_window_height} {}
    3af9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3afd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3b04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b08:	c7 40 08 00 04 00 00 	movl   $0x400,0x8(%rax)
    3b0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b13:	c7 40 0c d0 02 00 00 	movl   $0x2d0,0xc(%rax)
    3b1a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b1e:	48 8d 58 18          	lea    0x18(%rax),%rbx
    3b22:	48 8d 05 bb 0a 01 00 	lea    0x10abb(%rip),%rax        # 145e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    3b29:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    3b2d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    3b31:	49 89 c6             	mov    %rax,%r14
    3b34:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    3b3a:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3b3e:	48 89 c7             	mov    %rax,%rdi
    3b41:	e8 8c 01 00 00       	call   3cd2 <_ZNSaIPKcEC1Ev>
    3b46:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3b4a:	4d 89 f0             	mov    %r14,%r8
    3b4d:	4d 89 f9             	mov    %r15,%r9
    3b50:	4c 89 f6             	mov    %r14,%rsi
    3b53:	4c 89 ff             	mov    %r15,%rdi
    3b56:	48 89 fa             	mov    %rdi,%rdx
    3b59:	48 89 c1             	mov    %rax,%rcx
    3b5c:	4c 89 c6             	mov    %r8,%rsi
    3b5f:	48 89 df             	mov    %rbx,%rdi
    3b62:	e8 a3 01 00 00       	call   3d0a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    3b67:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3b6b:	48 89 c7             	mov    %rax,%rdi
    3b6e:	e8 7b 01 00 00       	call   3cee <_ZNSaIPKcED1Ev>
    3b73:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b77:	c6 40 30 01          	movb   $0x1,0x30(%rax)
    3b7b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b7f:	48 c7 40 40 00 00 00 	movq   $0x0,0x40(%rax)
    3b86:	00 
    3b87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3b8b:	48 8d 58 68          	lea    0x68(%rax),%rbx
    3b8f:	48 8d 05 6a 0a 01 00 	lea    0x10a6a(%rip),%rax        # 14600 <_ZN6__pstl9execution2v1L5unseqE+0x1d>
    3b96:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3b9a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3b9e:	49 89 c4             	mov    %rax,%r12
    3ba1:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3ba7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3bab:	48 89 c7             	mov    %rax,%rdi
    3bae:	e8 1f 01 00 00       	call   3cd2 <_ZNSaIPKcEC1Ev>
    3bb3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3bb7:	4d 89 e0             	mov    %r12,%r8
    3bba:	4d 89 e9             	mov    %r13,%r9
    3bbd:	4c 89 e6             	mov    %r12,%rsi
    3bc0:	4c 89 ef             	mov    %r13,%rdi
    3bc3:	48 89 fa             	mov    %rdi,%rdx
    3bc6:	48 89 c1             	mov    %rax,%rcx
    3bc9:	4c 89 c6             	mov    %r8,%rsi
    3bcc:	48 89 df             	mov    %rbx,%rdi
    3bcf:	e8 36 01 00 00       	call   3d0a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    3bd4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3bd8:	48 89 c7             	mov    %rax,%rdi
    3bdb:	e8 0e 01 00 00       	call   3cee <_ZNSaIPKcED1Ev>
    3be0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3be4:	48 05 88 00 00 00    	add    $0x88,%rax
    3bea:	48 89 c7             	mov    %rax,%rdi
    3bed:	e8 2e fe ff ff       	call   3a20 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    3bf2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3bf6:	48 05 b0 00 00 00    	add    $0xb0,%rax
    3bfc:	48 89 c7             	mov    %rax,%rdi
    3bff:	e8 70 fe ff ff       	call   3a74 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    3c04:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3c08:	48 05 e0 00 00 00    	add    $0xe0,%rax
    3c0e:	48 89 c7             	mov    %rax,%rdi
    3c11:	e8 b2 fe ff ff       	call   3ac8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEC1Ev>
    3c16:	eb 44                	jmp    3c5c <_ZN4rtvc17RenderApplicationC1Ev+0x178>
    3c18:	48 89 c3             	mov    %rax,%rbx
    3c1b:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    3c1f:	48 89 c7             	mov    %rax,%rdi
    3c22:	e8 c7 00 00 00       	call   3cee <_ZNSaIPKcED1Ev>
    3c27:	48 89 d8             	mov    %rbx,%rax
    3c2a:	48 89 c7             	mov    %rax,%rdi
    3c2d:	e8 7e fa ff ff       	call   36b0 <_Unwind_Resume@plt>
    3c32:	48 89 c3             	mov    %rax,%rbx
    3c35:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    3c39:	48 89 c7             	mov    %rax,%rdi
    3c3c:	e8 ad 00 00 00       	call   3cee <_ZNSaIPKcED1Ev>
    3c41:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    3c45:	48 83 c0 18          	add    $0x18,%rax
    3c49:	48 89 c7             	mov    %rax,%rdi
    3c4c:	e8 41 01 00 00       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3c51:	48 89 d8             	mov    %rbx,%rax
    3c54:	48 89 c7             	mov    %rax,%rdi
    3c57:	e8 54 fa ff ff       	call   36b0 <_Unwind_Resume@plt>
    3c5c:	48 83 c4 38          	add    $0x38,%rsp
    3c60:	5b                   	pop    %rbx
    3c61:	41 5c                	pop    %r12
    3c63:	41 5d                	pop    %r13
    3c65:	41 5e                	pop    %r14
    3c67:	41 5f                	pop    %r15
    3c69:	5d                   	pop    %rbp
    3c6a:	c3                   	ret
    3c6b:	90                   	nop

0000000000003c6c <_ZN4rtvc17RenderApplicationD1Ev>:
    class RenderApplication
    3c6c:	55                   	push   %rbp
    3c6d:	48 89 e5             	mov    %rsp,%rbp
    3c70:	48 83 ec 10          	sub    $0x10,%rsp
    3c74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c7c:	48 05 e0 00 00 00    	add    $0xe0,%rax
    3c82:	48 89 c7             	mov    %rax,%rdi
    3c85:	e8 8a 03 00 00       	call   4014 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    3c8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3c8e:	48 05 b0 00 00 00    	add    $0xb0,%rax
    3c94:	48 89 c7             	mov    %rax,%rdi
    3c97:	e8 a2 02 00 00       	call   3f3e <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    3c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ca0:	48 05 88 00 00 00    	add    $0x88,%rax
    3ca6:	48 89 c7             	mov    %rax,%rdi
    3ca9:	e8 ba 01 00 00       	call   3e68 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    3cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cb2:	48 83 c0 68          	add    $0x68,%rax
    3cb6:	48 89 c7             	mov    %rax,%rdi
    3cb9:	e8 d4 00 00 00       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cc2:	48 83 c0 18          	add    $0x18,%rax
    3cc6:	48 89 c7             	mov    %rax,%rdi
    3cc9:	e8 c4 00 00 00       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    3cce:	90                   	nop
    3ccf:	c9                   	leave
    3cd0:	c3                   	ret
    3cd1:	90                   	nop

0000000000003cd2 <_ZNSaIPKcEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    3cd2:	55                   	push   %rbp
    3cd3:	48 89 e5             	mov    %rsp,%rbp
    3cd6:	48 83 ec 10          	sub    $0x10,%rsp
    3cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ce2:	48 89 c7             	mov    %rax,%rdi
    3ce5:	e8 6e 03 00 00       	call   4058 <_ZNSt15__new_allocatorIPKcEC1Ev>
    3cea:	90                   	nop
    3ceb:	c9                   	leave
    3cec:	c3                   	ret
    3ced:	90                   	nop

0000000000003cee <_ZNSaIPKcED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    3cee:	55                   	push   %rbp
    3cef:	48 89 e5             	mov    %rsp,%rbp
    3cf2:	48 83 ec 10          	sub    $0x10,%rsp
    3cf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3cfe:	48 89 c7             	mov    %rax,%rdi
    3d01:	e8 5e 03 00 00       	call   4064 <_ZNSt15__new_allocatorIPKcED1Ev>
    3d06:	90                   	nop
    3d07:	c9                   	leave
    3d08:	c3                   	ret
    3d09:	90                   	nop

0000000000003d0a <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
       *
       *  This will call the element type's copy constructor N times
       *  (where N is @a __l.size()) and do no memory reallocation.
       */
      _GLIBCXX20_CONSTEXPR
      vector(initializer_list<value_type> __l,
    3d0a:	55                   	push   %rbp
    3d0b:	48 89 e5             	mov    %rsp,%rbp
    3d0e:	53                   	push   %rbx
    3d0f:	48 83 ec 38          	sub    $0x38,%rsp
    3d13:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    3d17:	48 89 f0             	mov    %rsi,%rax
    3d1a:	48 89 d6             	mov    %rdx,%rsi
    3d1d:	48 89 f2             	mov    %rsi,%rdx
    3d20:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    3d24:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    3d28:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
	     const allocator_type& __a = allocator_type())
      : _Base(__a)
    3d2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d30:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    3d34:	48 89 d6             	mov    %rdx,%rsi
    3d37:	48 89 c7             	mov    %rax,%rdi
    3d3a:	e8 4d 03 00 00       	call   408c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
      {
	_M_range_initialize(__l.begin(), __l.end(),
    3d3f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3d43:	48 89 c7             	mov    %rax,%rdi
    3d46:	e8 c7 03 00 00       	call   4112 <_ZNKSt16initializer_listIPKcE3endEv>
    3d4b:	48 89 c3             	mov    %rax,%rbx
    3d4e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    3d52:	48 89 c7             	mov    %rax,%rdi
    3d55:	e8 a6 03 00 00       	call   4100 <_ZNKSt16initializer_listIPKcE5beginEv>
    3d5a:	48 89 c1             	mov    %rax,%rcx
    3d5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d61:	48 89 da             	mov    %rbx,%rdx
    3d64:	48 89 ce             	mov    %rcx,%rsi
    3d67:	48 89 c7             	mov    %rax,%rdi
    3d6a:	e8 09 04 00 00       	call   4178 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
			    random_access_iterator_tag());
      }
    3d6f:	eb 1a                	jmp    3d8b <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    3d71:	48 89 c3             	mov    %rax,%rbx
    3d74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    3d78:	48 89 c7             	mov    %rax,%rdi
    3d7b:	e8 32 03 00 00       	call   40b2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3d80:	48 89 d8             	mov    %rbx,%rax
    3d83:	48 89 c7             	mov    %rax,%rdi
    3d86:	e8 25 f9 ff ff       	call   36b0 <_Unwind_Resume@plt>
    3d8b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    3d8f:	c9                   	leave
    3d90:	c3                   	ret
    3d91:	90                   	nop

0000000000003d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    3d92:	55                   	push   %rbp
    3d93:	48 89 e5             	mov    %rsp,%rbp
    3d96:	48 83 ec 10          	sub    $0x10,%rsp
    3d9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    3d9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3da2:	48 89 c7             	mov    %rax,%rdi
    3da5:	e8 7e 04 00 00       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    3daa:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3dad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3db5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3db9:	48 8b 00             	mov    (%rax),%rax
    3dbc:	48 89 ce             	mov    %rcx,%rsi
    3dbf:	48 89 c7             	mov    %rax,%rdi
    3dc2:	e8 6f 04 00 00       	call   4236 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    3dc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3dcb:	48 89 c7             	mov    %rax,%rdi
    3dce:	e8 df 02 00 00       	call   40b2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    3dd3:	90                   	nop
    3dd4:	c9                   	leave
    3dd5:	c3                   	ret

0000000000003dd6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    3dd6:	55                   	push   %rbp
    3dd7:	48 89 e5             	mov    %rsp,%rbp
    3dda:	48 83 ec 10          	sub    $0x10,%rsp
    3dde:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    3de2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3de6:	48 89 c7             	mov    %rax,%rdi
    3de9:	e8 72 04 00 00       	call   4260 <_ZNSaIP9VkImage_TEC1Ev>
    3dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3df2:	48 89 c7             	mov    %rax,%rdi
    3df5:	e8 82 04 00 00       	call   427c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3dfa:	90                   	nop
    3dfb:	c9                   	leave
    3dfc:	c3                   	ret
    3dfd:	90                   	nop

0000000000003dfe <_ZNSaIP9VkImage_TED1Ev>:
    3dfe:	55                   	push   %rbp
    3dff:	48 89 e5             	mov    %rsp,%rbp
    3e02:	48 83 ec 10          	sub    $0x10,%rsp
    3e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e0e:	48 89 c7             	mov    %rax,%rdi
    3e11:	e8 94 04 00 00       	call   42aa <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    3e16:	90                   	nop
    3e17:	c9                   	leave
    3e18:	c3                   	ret
    3e19:	90                   	nop

0000000000003e1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3e1a:	55                   	push   %rbp
    3e1b:	48 89 e5             	mov    %rsp,%rbp
    3e1e:	48 83 ec 10          	sub    $0x10,%rsp
    3e22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3e26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e2a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e32:	48 8b 00             	mov    (%rax),%rax
    3e35:	48 29 c2             	sub    %rax,%rdx
    3e38:	48 89 d0             	mov    %rdx,%rax
    3e3b:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3e3f:	48 89 c2             	mov    %rax,%rdx
    3e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e46:	48 8b 08             	mov    (%rax),%rcx
    3e49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e4d:	48 89 ce             	mov    %rcx,%rsi
    3e50:	48 89 c7             	mov    %rax,%rdi
    3e53:	e8 5e 04 00 00       	call   42b6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e5c:	48 89 c7             	mov    %rax,%rdi
    3e5f:	e8 84 fb ff ff       	call   39e8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    3e64:	90                   	nop
    3e65:	c9                   	leave
    3e66:	c3                   	ret
    3e67:	90                   	nop

0000000000003e68 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3e68:	55                   	push   %rbp
    3e69:	48 89 e5             	mov    %rsp,%rbp
    3e6c:	48 83 ec 10          	sub    $0x10,%rsp
    3e70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3e74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e78:	48 89 c7             	mov    %rax,%rdi
    3e7b:	e8 6c 04 00 00       	call   42ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3e80:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3e83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e87:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3e8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3e8f:	48 8b 00             	mov    (%rax),%rax
    3e92:	48 89 ce             	mov    %rcx,%rsi
    3e95:	48 89 c7             	mov    %rax,%rdi
    3e98:	e8 5d 04 00 00       	call   42fa <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    3e9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ea1:	48 89 c7             	mov    %rax,%rdi
    3ea4:	e8 71 ff ff ff       	call   3e1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    3ea9:	90                   	nop
    3eaa:	c9                   	leave
    3eab:	c3                   	ret

0000000000003eac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    3eac:	55                   	push   %rbp
    3ead:	48 89 e5             	mov    %rsp,%rbp
    3eb0:	48 83 ec 10          	sub    $0x10,%rsp
    3eb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    3eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ebc:	48 89 c7             	mov    %rax,%rdi
    3ebf:	e8 60 04 00 00       	call   4324 <_ZNSaIP13VkImageView_TEC1Ev>
    3ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ec8:	48 89 c7             	mov    %rax,%rdi
    3ecb:	e8 70 04 00 00       	call   4340 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3ed0:	90                   	nop
    3ed1:	c9                   	leave
    3ed2:	c3                   	ret
    3ed3:	90                   	nop

0000000000003ed4 <_ZNSaIP13VkImageView_TED1Ev>:
    3ed4:	55                   	push   %rbp
    3ed5:	48 89 e5             	mov    %rsp,%rbp
    3ed8:	48 83 ec 10          	sub    $0x10,%rsp
    3edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ee4:	48 89 c7             	mov    %rax,%rdi
    3ee7:	e8 82 04 00 00       	call   436e <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    3eec:	90                   	nop
    3eed:	c9                   	leave
    3eee:	c3                   	ret
    3eef:	90                   	nop

0000000000003ef0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3ef0:	55                   	push   %rbp
    3ef1:	48 89 e5             	mov    %rsp,%rbp
    3ef4:	48 83 ec 10          	sub    $0x10,%rsp
    3ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3efc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f00:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3f04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f08:	48 8b 00             	mov    (%rax),%rax
    3f0b:	48 29 c2             	sub    %rax,%rdx
    3f0e:	48 89 d0             	mov    %rdx,%rax
    3f11:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3f15:	48 89 c2             	mov    %rax,%rdx
    3f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f1c:	48 8b 08             	mov    (%rax),%rcx
    3f1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f23:	48 89 ce             	mov    %rcx,%rsi
    3f26:	48 89 c7             	mov    %rax,%rdi
    3f29:	e8 4c 04 00 00       	call   437a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    3f2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f32:	48 89 c7             	mov    %rax,%rdi
    3f35:	e8 02 fb ff ff       	call   3a3c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
    3f3a:	90                   	nop
    3f3b:	c9                   	leave
    3f3c:	c3                   	ret
    3f3d:	90                   	nop

0000000000003f3e <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    3f3e:	55                   	push   %rbp
    3f3f:	48 89 e5             	mov    %rsp,%rbp
    3f42:	48 83 ec 10          	sub    $0x10,%rsp
    3f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    3f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f4e:	48 89 c7             	mov    %rax,%rdi
    3f51:	e8 5a 04 00 00       	call   43b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    3f56:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    3f59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f5d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f65:	48 8b 00             	mov    (%rax),%rax
    3f68:	48 89 ce             	mov    %rcx,%rsi
    3f6b:	48 89 c7             	mov    %rax,%rdi
    3f6e:	e8 4b 04 00 00       	call   43be <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
    3f73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f77:	48 89 c7             	mov    %rax,%rdi
    3f7a:	e8 71 ff ff ff       	call   3ef0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
    3f7f:	90                   	nop
    3f80:	c9                   	leave
    3f81:	c3                   	ret

0000000000003f82 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    3f82:	55                   	push   %rbp
    3f83:	48 89 e5             	mov    %rsp,%rbp
    3f86:	48 83 ec 10          	sub    $0x10,%rsp
    3f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    3f8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f92:	48 89 c7             	mov    %rax,%rdi
    3f95:	e8 4e 04 00 00       	call   43e8 <_ZNSaIP15VkFramebuffer_TEC1Ev>
    3f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3f9e:	48 89 c7             	mov    %rax,%rdi
    3fa1:	e8 5e 04 00 00       	call   4404 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    3fa6:	90                   	nop
    3fa7:	c9                   	leave
    3fa8:	c3                   	ret
    3fa9:	90                   	nop

0000000000003faa <_ZNSaIP15VkFramebuffer_TED1Ev>:
    3faa:	55                   	push   %rbp
    3fab:	48 89 e5             	mov    %rsp,%rbp
    3fae:	48 83 ec 10          	sub    $0x10,%rsp
    3fb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    3fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fba:	48 89 c7             	mov    %rax,%rdi
    3fbd:	e8 70 04 00 00       	call   4432 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
    3fc2:	90                   	nop
    3fc3:	c9                   	leave
    3fc4:	c3                   	ret
    3fc5:	90                   	nop

0000000000003fc6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    3fc6:	55                   	push   %rbp
    3fc7:	48 89 e5             	mov    %rsp,%rbp
    3fca:	48 83 ec 10          	sub    $0x10,%rsp
    3fce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    3fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fd6:	48 8b 50 10          	mov    0x10(%rax),%rdx
    3fda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3fde:	48 8b 00             	mov    (%rax),%rax
    3fe1:	48 29 c2             	sub    %rax,%rdx
    3fe4:	48 89 d0             	mov    %rdx,%rax
    3fe7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    3feb:	48 89 c2             	mov    %rax,%rdx
    3fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ff2:	48 8b 08             	mov    (%rax),%rcx
    3ff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    3ff9:	48 89 ce             	mov    %rcx,%rsi
    3ffc:	48 89 c7             	mov    %rax,%rdi
    3fff:	e8 3a 04 00 00       	call   443e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4008:	48 89 c7             	mov    %rax,%rdi
    400b:	e8 80 fa ff ff       	call   3a90 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
    4010:	90                   	nop
    4011:	c9                   	leave
    4012:	c3                   	ret
    4013:	90                   	nop

0000000000004014 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    4014:	55                   	push   %rbp
    4015:	48 89 e5             	mov    %rsp,%rbp
    4018:	48 83 ec 10          	sub    $0x10,%rsp
    401c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    4020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4024:	48 89 c7             	mov    %rax,%rdi
    4027:	e8 48 04 00 00       	call   4474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    402c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    402f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4033:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    403b:	48 8b 00             	mov    (%rax),%rax
    403e:	48 89 ce             	mov    %rcx,%rsi
    4041:	48 89 c7             	mov    %rax,%rdi
    4044:	e8 39 04 00 00       	call   4482 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
    4049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    404d:	48 89 c7             	mov    %rax,%rdi
    4050:	e8 71 ff ff ff       	call   3fc6 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
    4055:	90                   	nop
    4056:	c9                   	leave
    4057:	c3                   	ret

0000000000004058 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4058:	55                   	push   %rbp
    4059:	48 89 e5             	mov    %rsp,%rbp
    405c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4060:	90                   	nop
    4061:	5d                   	pop    %rbp
    4062:	c3                   	ret
    4063:	90                   	nop

0000000000004064 <_ZNSt15__new_allocatorIPKcED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4064:	55                   	push   %rbp
    4065:	48 89 e5             	mov    %rsp,%rbp
    4068:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    406c:	90                   	nop
    406d:	5d                   	pop    %rbp
    406e:	c3                   	ret
    406f:	90                   	nop

0000000000004070 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    4070:	55                   	push   %rbp
    4071:	48 89 e5             	mov    %rsp,%rbp
    4074:	48 83 ec 10          	sub    $0x10,%rsp
    4078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    407c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4080:	48 89 c7             	mov    %rax,%rdi
    4083:	e8 66 fc ff ff       	call   3cee <_ZNSaIPKcED1Ev>
    4088:	90                   	nop
    4089:	c9                   	leave
    408a:	c3                   	ret
    408b:	90                   	nop

000000000000408c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    408c:	55                   	push   %rbp
    408d:	48 89 e5             	mov    %rsp,%rbp
    4090:	48 83 ec 10          	sub    $0x10,%rsp
    4094:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4098:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    409c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    40a4:	48 89 d6             	mov    %rdx,%rsi
    40a7:	48 89 c7             	mov    %rax,%rdi
    40aa:	e8 fd 03 00 00       	call   44ac <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    40af:	90                   	nop
    40b0:	c9                   	leave
    40b1:	c3                   	ret

00000000000040b2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    40b2:	55                   	push   %rbp
    40b3:	48 89 e5             	mov    %rsp,%rbp
    40b6:	48 83 ec 10          	sub    $0x10,%rsp
    40ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    40be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40c2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    40c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40ca:	48 8b 00             	mov    (%rax),%rax
    40cd:	48 29 c2             	sub    %rax,%rdx
    40d0:	48 89 d0             	mov    %rdx,%rax
    40d3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    40d7:	48 89 c2             	mov    %rax,%rdx
    40da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40de:	48 8b 08             	mov    (%rax),%rcx
    40e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40e5:	48 89 ce             	mov    %rcx,%rsi
    40e8:	48 89 c7             	mov    %rax,%rdi
    40eb:	e8 ee 03 00 00       	call   44de <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    40f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    40f4:	48 89 c7             	mov    %rax,%rdi
    40f7:	e8 74 ff ff ff       	call   4070 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    40fc:	90                   	nop
    40fd:	c9                   	leave
    40fe:	c3                   	ret
    40ff:	90                   	nop

0000000000004100 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    4100:	55                   	push   %rbp
    4101:	48 89 e5             	mov    %rsp,%rbp
    4104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    410c:	48 8b 00             	mov    (%rax),%rax
    410f:	5d                   	pop    %rbp
    4110:	c3                   	ret
    4111:	90                   	nop

0000000000004112 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    4112:	55                   	push   %rbp
    4113:	48 89 e5             	mov    %rsp,%rbp
    4116:	53                   	push   %rbx
    4117:	48 83 ec 18          	sub    $0x18,%rsp
    411b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    411f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4123:	48 89 c7             	mov    %rax,%rdi
    4126:	e8 d5 ff ff ff       	call   4100 <_ZNKSt16initializer_listIPKcE5beginEv>
    412b:	48 89 c3             	mov    %rax,%rbx
    412e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4132:	48 89 c7             	mov    %rax,%rdi
    4135:	e8 da 03 00 00       	call   4514 <_ZNKSt16initializer_listIPKcE4sizeEv>
    413a:	48 c1 e0 03          	shl    $0x3,%rax
    413e:	48 01 d8             	add    %rbx,%rax
    4141:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4145:	c9                   	leave
    4146:	c3                   	ret

0000000000004147 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4147:	55                   	push   %rbp
    4148:	48 89 e5             	mov    %rsp,%rbp
    414b:	48 83 ec 10          	sub    $0x10,%rsp
    414f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4153:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4157:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    415b:	48 89 c7             	mov    %rax,%rdi
    415e:	e8 c3 03 00 00       	call   4526 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    4163:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4167:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    416b:	48 89 d6             	mov    %rdx,%rsi
    416e:	48 89 c7             	mov    %rax,%rdi
    4171:	e8 bb 03 00 00       	call   4531 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    4176:	c9                   	leave
    4177:	c3                   	ret

0000000000004178 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:

      // Called by the second initialize_dispatch above
      template<typename _ForwardIterator>
	_GLIBCXX20_CONSTEXPR
	void
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    4178:	55                   	push   %rbp
    4179:	48 89 e5             	mov    %rsp,%rbp
    417c:	53                   	push   %rbx
    417d:	48 83 ec 38          	sub    $0x38,%rsp
    4181:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4185:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4189:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
			    std::forward_iterator_tag)
	{
	  const size_type __n = std::distance(__first, __last);
    418d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4191:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4195:	48 89 d6             	mov    %rdx,%rsi
    4198:	48 89 c7             	mov    %rax,%rdi
    419b:	e8 a7 ff ff ff       	call   4147 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    41a0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  this->_M_impl._M_start
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    41a4:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    41a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41ac:	48 89 c7             	mov    %rax,%rdi
    41af:	e8 74 00 00 00       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    41b4:	48 89 c2             	mov    %rax,%rdx
    41b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    41bb:	48 89 d6             	mov    %rdx,%rsi
    41be:	48 89 c7             	mov    %rax,%rdi
    41c1:	e8 85 03 00 00       	call   454b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    41c6:	48 89 c6             	mov    %rax,%rsi
    41c9:	48 89 df             	mov    %rbx,%rdi
    41cc:	e8 db 03 00 00       	call   45ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    41d1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    41d5:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    41d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41dc:	48 8b 00             	mov    (%rax),%rax
    41df:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    41e3:	48 c1 e2 03          	shl    $0x3,%rdx
    41e7:	48 01 c2             	add    %rax,%rdx
    41ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41ee:	48 89 50 10          	mov    %rdx,0x10(%rax)
	  this->_M_impl._M_finish =
	    std::__uninitialized_copy_a(__first, __last,
					this->_M_impl._M_start,
					_M_get_Tp_allocator());
    41f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    41f6:	48 89 c7             	mov    %rax,%rdi
    41f9:	e8 2a 00 00 00       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    41fe:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    4201:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4205:	48 8b 10             	mov    (%rax),%rdx
    4208:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    420c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4210:	48 89 c7             	mov    %rax,%rdi
    4213:	e8 c7 03 00 00       	call   45df <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    4218:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    421c:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    4220:	90                   	nop
    4221:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4225:	c9                   	leave
    4226:	c3                   	ret
    4227:	90                   	nop

0000000000004228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    4228:	55                   	push   %rbp
    4229:	48 89 e5             	mov    %rsp,%rbp
    422c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    4230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4234:	5d                   	pop    %rbp
    4235:	c3                   	ret

0000000000004236 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    4236:	55                   	push   %rbp
    4237:	48 89 e5             	mov    %rsp,%rbp
    423a:	48 83 ec 20          	sub    $0x20,%rsp
    423e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4242:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4246:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    424a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    424e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4252:	48 89 d6             	mov    %rdx,%rsi
    4255:	48 89 c7             	mov    %rax,%rdi
    4258:	e8 b3 03 00 00       	call   4610 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    425d:	90                   	nop
    425e:	c9                   	leave
    425f:	c3                   	ret

0000000000004260 <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    4260:	55                   	push   %rbp
    4261:	48 89 e5             	mov    %rsp,%rbp
    4264:	48 83 ec 10          	sub    $0x10,%rsp
    4268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    426c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4270:	48 89 c7             	mov    %rax,%rdi
    4273:	e8 be 03 00 00       	call   4636 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    4278:	90                   	nop
    4279:	c9                   	leave
    427a:	c3                   	ret
    427b:	90                   	nop

000000000000427c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    427c:	55                   	push   %rbp
    427d:	48 89 e5             	mov    %rsp,%rbp
    4280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4288:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    428f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4293:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    429a:	00 
    429b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    429f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    42a6:	00 
	{ }
    42a7:	90                   	nop
    42a8:	5d                   	pop    %rbp
    42a9:	c3                   	ret

00000000000042aa <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    42aa:	55                   	push   %rbp
    42ab:	48 89 e5             	mov    %rsp,%rbp
    42ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42b2:	90                   	nop
    42b3:	5d                   	pop    %rbp
    42b4:	c3                   	ret
    42b5:	90                   	nop

00000000000042b6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    42b6:	55                   	push   %rbp
    42b7:	48 89 e5             	mov    %rsp,%rbp
    42ba:	48 83 ec 20          	sub    $0x20,%rsp
    42be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    42c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    42c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    42ca:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    42cf:	74 17                	je     42e8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    42d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    42d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    42dd:	48 89 ce             	mov    %rcx,%rsi
    42e0:	48 89 c7             	mov    %rax,%rdi
    42e3:	e8 59 03 00 00       	call   4641 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    42e8:	90                   	nop
    42e9:	c9                   	leave
    42ea:	c3                   	ret
    42eb:	90                   	nop

00000000000042ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    42ec:	55                   	push   %rbp
    42ed:	48 89 e5             	mov    %rsp,%rbp
    42f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    42f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    42f8:	5d                   	pop    %rbp
    42f9:	c3                   	ret

00000000000042fa <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    42fa:	55                   	push   %rbp
    42fb:	48 89 e5             	mov    %rsp,%rbp
    42fe:	48 83 ec 20          	sub    $0x20,%rsp
    4302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4306:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    430a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    430e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4316:	48 89 d6             	mov    %rdx,%rsi
    4319:	48 89 c7             	mov    %rax,%rdi
    431c:	e8 4e 03 00 00       	call   466f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    4321:	90                   	nop
    4322:	c9                   	leave
    4323:	c3                   	ret

0000000000004324 <_ZNSaIP13VkImageView_TEC1Ev>:
    4324:	55                   	push   %rbp
    4325:	48 89 e5             	mov    %rsp,%rbp
    4328:	48 83 ec 10          	sub    $0x10,%rsp
    432c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4334:	48 89 c7             	mov    %rax,%rdi
    4337:	e8 5a 03 00 00       	call   4696 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
    433c:	90                   	nop
    433d:	c9                   	leave
    433e:	c3                   	ret
    433f:	90                   	nop

0000000000004340 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4340:	55                   	push   %rbp
    4341:	48 89 e5             	mov    %rsp,%rbp
    4344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    434c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4357:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    435e:	00 
    435f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4363:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    436a:	00 
	{ }
    436b:	90                   	nop
    436c:	5d                   	pop    %rbp
    436d:	c3                   	ret

000000000000436e <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
    436e:	55                   	push   %rbp
    436f:	48 89 e5             	mov    %rsp,%rbp
    4372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4376:	90                   	nop
    4377:	5d                   	pop    %rbp
    4378:	c3                   	ret
    4379:	90                   	nop

000000000000437a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    437a:	55                   	push   %rbp
    437b:	48 89 e5             	mov    %rsp,%rbp
    437e:	48 83 ec 20          	sub    $0x20,%rsp
    4382:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4386:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    438a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    438e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4393:	74 17                	je     43ac <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4395:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4399:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    439d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    43a1:	48 89 ce             	mov    %rcx,%rsi
    43a4:	48 89 c7             	mov    %rax,%rdi
    43a7:	e8 f5 02 00 00       	call   46a1 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
    43ac:	90                   	nop
    43ad:	c9                   	leave
    43ae:	c3                   	ret
    43af:	90                   	nop

00000000000043b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    43b0:	55                   	push   %rbp
    43b1:	48 89 e5             	mov    %rsp,%rbp
    43b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    43b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43bc:	5d                   	pop    %rbp
    43bd:	c3                   	ret

00000000000043be <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    43be:	55                   	push   %rbp
    43bf:	48 89 e5             	mov    %rsp,%rbp
    43c2:	48 83 ec 20          	sub    $0x20,%rsp
    43c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    43ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    43d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    43d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43da:	48 89 d6             	mov    %rdx,%rsi
    43dd:	48 89 c7             	mov    %rax,%rdi
    43e0:	e8 ea 02 00 00       	call   46cf <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
    43e5:	90                   	nop
    43e6:	c9                   	leave
    43e7:	c3                   	ret

00000000000043e8 <_ZNSaIP15VkFramebuffer_TEC1Ev>:
    43e8:	55                   	push   %rbp
    43e9:	48 89 e5             	mov    %rsp,%rbp
    43ec:	48 83 ec 10          	sub    $0x10,%rsp
    43f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    43f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    43f8:	48 89 c7             	mov    %rax,%rdi
    43fb:	e8 f6 02 00 00       	call   46f6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>
    4400:	90                   	nop
    4401:	c9                   	leave
    4402:	c3                   	ret
    4403:	90                   	nop

0000000000004404 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    4404:	55                   	push   %rbp
    4405:	48 89 e5             	mov    %rsp,%rbp
    4408:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    440c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4410:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    4417:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    441b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    4422:	00 
    4423:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4427:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    442e:	00 
	{ }
    442f:	90                   	nop
    4430:	5d                   	pop    %rbp
    4431:	c3                   	ret

0000000000004432 <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
    4432:	55                   	push   %rbp
    4433:	48 89 e5             	mov    %rsp,%rbp
    4436:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    443a:	90                   	nop
    443b:	5d                   	pop    %rbp
    443c:	c3                   	ret
    443d:	90                   	nop

000000000000443e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    443e:	55                   	push   %rbp
    443f:	48 89 e5             	mov    %rsp,%rbp
    4442:	48 83 ec 20          	sub    $0x20,%rsp
    4446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    444a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    444e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    4452:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    4457:	74 17                	je     4470 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    4459:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    445d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4461:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4465:	48 89 ce             	mov    %rcx,%rsi
    4468:	48 89 c7             	mov    %rax,%rdi
    446b:	e8 91 02 00 00       	call   4701 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
    4470:	90                   	nop
    4471:	c9                   	leave
    4472:	c3                   	ret
    4473:	90                   	nop

0000000000004474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    4474:	55                   	push   %rbp
    4475:	48 89 e5             	mov    %rsp,%rbp
    4478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    447c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4480:	5d                   	pop    %rbp
    4481:	c3                   	ret

0000000000004482 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    4482:	55                   	push   %rbp
    4483:	48 89 e5             	mov    %rsp,%rbp
    4486:	48 83 ec 20          	sub    $0x20,%rsp
    448a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    448e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4492:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    4496:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    449a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    449e:	48 89 d6             	mov    %rdx,%rsi
    44a1:	48 89 c7             	mov    %rax,%rdi
    44a4:	e8 86 02 00 00       	call   472f <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
    44a9:	90                   	nop
    44aa:	c9                   	leave
    44ab:	c3                   	ret

00000000000044ac <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    44ac:	55                   	push   %rbp
    44ad:	48 89 e5             	mov    %rsp,%rbp
    44b0:	48 83 ec 10          	sub    $0x10,%rsp
    44b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    44bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    44c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44c4:	48 89 d6             	mov    %rdx,%rsi
    44c7:	48 89 c7             	mov    %rax,%rdi
    44ca:	e8 87 02 00 00       	call   4756 <_ZNSaIPKcEC1ERKS1_>
    44cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44d3:	48 89 c7             	mov    %rax,%rdi
    44d6:	e8 a1 02 00 00       	call   477c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    44db:	90                   	nop
    44dc:	c9                   	leave
    44dd:	c3                   	ret

00000000000044de <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    44de:	55                   	push   %rbp
    44df:	48 89 e5             	mov    %rsp,%rbp
    44e2:	48 83 ec 20          	sub    $0x20,%rsp
    44e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    44ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    44ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    44f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    44f7:	74 17                	je     4510 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    44f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    44fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4501:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4505:	48 89 ce             	mov    %rcx,%rsi
    4508:	48 89 c7             	mov    %rax,%rdi
    450b:	e8 9a 02 00 00       	call   47aa <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    4510:	90                   	nop
    4511:	c9                   	leave
    4512:	c3                   	ret
    4513:	90                   	nop

0000000000004514 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
    4514:	55                   	push   %rbp
    4515:	48 89 e5             	mov    %rsp,%rbp
    4518:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    451c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4520:	48 8b 40 08          	mov    0x8(%rax),%rax
    4524:	5d                   	pop    %rbp
    4525:	c3                   	ret

0000000000004526 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4526:	55                   	push   %rbp
    4527:	48 89 e5             	mov    %rsp,%rbp
    452a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    452e:	90                   	nop
    452f:	5d                   	pop    %rbp
    4530:	c3                   	ret

0000000000004531 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4531:	55                   	push   %rbp
    4532:	48 89 e5             	mov    %rsp,%rbp
    4535:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4539:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    453d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4541:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    4545:	48 c1 f8 03          	sar    $0x3,%rax
    }
    4549:	5d                   	pop    %rbp
    454a:	c3                   	ret

000000000000454b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    454b:	55                   	push   %rbp
    454c:	48 89 e5             	mov    %rsp,%rbp
    454f:	53                   	push   %rbx
    4550:	48 83 ec 28          	sub    $0x28,%rsp
    4554:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4558:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    455c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4560:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4564:	48 89 d6             	mov    %rdx,%rsi
    4567:	48 89 c7             	mov    %rax,%rdi
    456a:	e8 e7 01 00 00       	call   4756 <_ZNSaIPKcEC1ERKS1_>
    456f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4573:	48 89 c7             	mov    %rax,%rdi
    4576:	e8 5d 02 00 00       	call   47d8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    457b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    457f:	0f 92 c3             	setb   %bl
    4582:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4586:	48 89 c7             	mov    %rax,%rdi
    4589:	e8 60 f7 ff ff       	call   3cee <_ZNSaIPKcED1Ev>
    458e:	84 db                	test   %bl,%bl
    4590:	74 0f                	je     45a1 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    4592:	48 8d 05 8f 00 01 00 	lea    0x1008f(%rip),%rax        # 14628 <_ZN6__pstl9execution2v1L5unseqE+0x45>
    4599:	48 89 c7             	mov    %rax,%rdi
    459c:	e8 af eb ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    45a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    45a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    45a9:	c9                   	leave
    45aa:	c3                   	ret
    45ab:	90                   	nop

00000000000045ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    45ac:	55                   	push   %rbp
    45ad:	48 89 e5             	mov    %rsp,%rbp
    45b0:	48 83 ec 10          	sub    $0x10,%rsp
    45b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    45bc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    45c1:	74 15                	je     45d8 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    45c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    45c7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    45cb:	48 89 d6             	mov    %rdx,%rsi
    45ce:	48 89 c7             	mov    %rax,%rdi
    45d1:	e8 44 02 00 00       	call   481a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    45d6:	eb 05                	jmp    45dd <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    45d8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    45dd:	c9                   	leave
    45de:	c3                   	ret

00000000000045df <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    }

  template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    45df:	55                   	push   %rbp
    45e0:	48 89 e5             	mov    %rsp,%rbp
    45e3:	48 83 ec 20          	sub    $0x20,%rsp
    45e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    45eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    45ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    45f3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
    {
#ifdef __cpp_lib_is_constant_evaluated
      if (std::is_constant_evaluated())
	return std::__do_uninit_copy(__first, __last, __result);
#endif
      return std::uninitialized_copy(__first, __last, __result);
    45f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    45fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    45ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4603:	48 89 ce             	mov    %rcx,%rsi
    4606:	48 89 c7             	mov    %rax,%rdi
    4609:	e8 36 02 00 00       	call   4844 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
    460e:	c9                   	leave
    460f:	c3                   	ret

0000000000004610 <_ZSt8_DestroyIPPKcEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    4610:	55                   	push   %rbp
    4611:	48 89 e5             	mov    %rsp,%rbp
    4614:	48 83 ec 10          	sub    $0x10,%rsp
    4618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    461c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    4620:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4628:	48 89 d6             	mov    %rdx,%rsi
    462b:	48 89 c7             	mov    %rax,%rdi
    462e:	e8 46 02 00 00       	call   4879 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
    4633:	90                   	nop
    4634:	c9                   	leave
    4635:	c3                   	ret

0000000000004636 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4636:	55                   	push   %rbp
    4637:	48 89 e5             	mov    %rsp,%rbp
    463a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    463e:	90                   	nop
    463f:	5d                   	pop    %rbp
    4640:	c3                   	ret

0000000000004641 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4641:	55                   	push   %rbp
    4642:	48 89 e5             	mov    %rsp,%rbp
    4645:	48 83 ec 20          	sub    $0x20,%rsp
    4649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    464d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4651:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4655:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4659:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    465d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4661:	48 89 ce             	mov    %rcx,%rsi
    4664:	48 89 c7             	mov    %rax,%rdi
    4667:	e8 1c 02 00 00       	call   4888 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    466c:	90                   	nop
    466d:	c9                   	leave
    466e:	c3                   	ret

000000000000466f <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    466f:	55                   	push   %rbp
    4670:	48 89 e5             	mov    %rsp,%rbp
    4673:	48 83 ec 10          	sub    $0x10,%rsp
    4677:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    467b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    467f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4687:	48 89 d6             	mov    %rdx,%rsi
    468a:	48 89 c7             	mov    %rax,%rdi
    468d:	e8 27 02 00 00       	call   48b9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    4692:	90                   	nop
    4693:	c9                   	leave
    4694:	c3                   	ret
    4695:	90                   	nop

0000000000004696 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
    4696:	55                   	push   %rbp
    4697:	48 89 e5             	mov    %rsp,%rbp
    469a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    469e:	90                   	nop
    469f:	5d                   	pop    %rbp
    46a0:	c3                   	ret

00000000000046a1 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    46a1:	55                   	push   %rbp
    46a2:	48 89 e5             	mov    %rsp,%rbp
    46a5:	48 83 ec 20          	sub    $0x20,%rsp
    46a9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    46b1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    46b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    46b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    46bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46c1:	48 89 ce             	mov    %rcx,%rsi
    46c4:	48 89 c7             	mov    %rax,%rdi
    46c7:	e8 fc 01 00 00       	call   48c8 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
    46cc:	90                   	nop
    46cd:	c9                   	leave
    46ce:	c3                   	ret

00000000000046cf <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    46cf:	55                   	push   %rbp
    46d0:	48 89 e5             	mov    %rsp,%rbp
    46d3:	48 83 ec 10          	sub    $0x10,%rsp
    46d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46db:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    46df:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    46e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    46e7:	48 89 d6             	mov    %rdx,%rsi
    46ea:	48 89 c7             	mov    %rax,%rdi
    46ed:	e8 07 02 00 00       	call   48f9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
    46f2:	90                   	nop
    46f3:	c9                   	leave
    46f4:	c3                   	ret
    46f5:	90                   	nop

00000000000046f6 <_ZNSt15__new_allocatorIP15VkFramebuffer_TEC1Ev>:
    46f6:	55                   	push   %rbp
    46f7:	48 89 e5             	mov    %rsp,%rbp
    46fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    46fe:	90                   	nop
    46ff:	5d                   	pop    %rbp
    4700:	c3                   	ret

0000000000004701 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    4701:	55                   	push   %rbp
    4702:	48 89 e5             	mov    %rsp,%rbp
    4705:	48 83 ec 20          	sub    $0x20,%rsp
    4709:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    470d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4711:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    4715:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4719:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    471d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4721:	48 89 ce             	mov    %rcx,%rsi
    4724:	48 89 c7             	mov    %rax,%rdi
    4727:	e8 dc 01 00 00       	call   4908 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
    472c:	90                   	nop
    472d:	c9                   	leave
    472e:	c3                   	ret

000000000000472f <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    472f:	55                   	push   %rbp
    4730:	48 89 e5             	mov    %rsp,%rbp
    4733:	48 83 ec 10          	sub    $0x10,%rsp
    4737:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    473b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    473f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4747:	48 89 d6             	mov    %rdx,%rsi
    474a:	48 89 c7             	mov    %rax,%rdi
    474d:	e8 e7 01 00 00       	call   4939 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
    4752:	90                   	nop
    4753:	c9                   	leave
    4754:	c3                   	ret
    4755:	90                   	nop

0000000000004756 <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    4756:	55                   	push   %rbp
    4757:	48 89 e5             	mov    %rsp,%rbp
    475a:	48 83 ec 10          	sub    $0x10,%rsp
    475e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4762:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    4766:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    476a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    476e:	48 89 d6             	mov    %rdx,%rsi
    4771:	48 89 c7             	mov    %rax,%rdi
    4774:	e8 cf 01 00 00       	call   4948 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    4779:	90                   	nop
    477a:	c9                   	leave
    477b:	c3                   	ret

000000000000477c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    477c:	55                   	push   %rbp
    477d:	48 89 e5             	mov    %rsp,%rbp
    4780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    4784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4788:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    478f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4793:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    479a:	00 
    479b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    479f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    47a6:	00 
	{ }
    47a7:	90                   	nop
    47a8:	5d                   	pop    %rbp
    47a9:	c3                   	ret

00000000000047aa <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    47aa:	55                   	push   %rbp
    47ab:	48 89 e5             	mov    %rsp,%rbp
    47ae:	48 83 ec 20          	sub    $0x20,%rsp
    47b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    47b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    47ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    47be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    47c2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    47c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    47ca:	48 89 ce             	mov    %rcx,%rsi
    47cd:	48 89 c7             	mov    %rax,%rdi
    47d0:	e8 83 01 00 00       	call   4958 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    47d5:	90                   	nop
    47d6:	c9                   	leave
    47d7:	c3                   	ret

00000000000047d8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:

      static _GLIBCXX20_CONSTEXPR size_type
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    47d8:	55                   	push   %rbp
    47d9:	48 89 e5             	mov    %rsp,%rbp
    47dc:	48 83 ec 20          	sub    $0x20,%rsp
    47e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      {
	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
	// (even if std::allocator_traits::max_size says we can).
	const size_t __diffmax
    47e4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    47eb:	ff ff 0f 
    47ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    47f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    47f6:	48 89 c7             	mov    %rax,%rdi
    47f9:	e8 8b 01 00 00       	call   4989 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    47fe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    4802:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    4806:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    480a:	48 89 d6             	mov    %rdx,%rsi
    480d:	48 89 c7             	mov    %rax,%rdi
    4810:	e8 8e 01 00 00       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    4815:	48 8b 00             	mov    (%rax),%rax
      }
    4818:	c9                   	leave
    4819:	c3                   	ret

000000000000481a <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    481a:	55                   	push   %rbp
    481b:	48 89 e5             	mov    %rsp,%rbp
    481e:	48 83 ec 10          	sub    $0x10,%rsp
    4822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4826:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    482a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    482e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4832:	ba 00 00 00 00       	mov    $0x0,%edx
    4837:	48 89 ce             	mov    %rcx,%rsi
    483a:	48 89 c7             	mov    %rax,%rdi
    483d:	e8 8c 01 00 00       	call   49ce <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    4842:	c9                   	leave
    4843:	c3                   	ret

0000000000004844 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    4844:	55                   	push   %rbp
    4845:	48 89 e5             	mov    %rsp,%rbp
    4848:	48 83 ec 30          	sub    $0x30,%rsp
    484c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4850:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4854:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    4858:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    485c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    4860:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4864:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4868:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    486c:	48 89 ce             	mov    %rcx,%rsi
    486f:	48 89 c7             	mov    %rax,%rdi
    4872:	e8 b8 01 00 00       	call   4a2f <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
    4877:	c9                   	leave
    4878:	c3                   	ret

0000000000004879 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    4879:	55                   	push   %rbp
    487a:	48 89 e5             	mov    %rsp,%rbp
    487d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4881:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4885:	90                   	nop
    4886:	5d                   	pop    %rbp
    4887:	c3                   	ret

0000000000004888 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4888:	55                   	push   %rbp
    4889:	48 89 e5             	mov    %rsp,%rbp
    488c:	48 83 ec 20          	sub    $0x20,%rsp
    4890:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4894:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4898:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    489c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48a0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    48a7:	00 
    48a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48ac:	48 89 d6             	mov    %rdx,%rsi
    48af:	48 89 c7             	mov    %rax,%rdi
    48b2:	e8 a9 ea ff ff       	call   3360 <_ZdlPvm@plt>
      }
    48b7:	c9                   	leave
    48b8:	c3                   	ret

00000000000048b9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    48b9:	55                   	push   %rbp
    48ba:	48 89 e5             	mov    %rsp,%rbp
    48bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48c5:	90                   	nop
    48c6:	5d                   	pop    %rbp
    48c7:	c3                   	ret

00000000000048c8 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    48c8:	55                   	push   %rbp
    48c9:	48 89 e5             	mov    %rsp,%rbp
    48cc:	48 83 ec 20          	sub    $0x20,%rsp
    48d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    48d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    48d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    48dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    48e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    48e7:	00 
    48e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    48ec:	48 89 d6             	mov    %rdx,%rsi
    48ef:	48 89 c7             	mov    %rax,%rdi
    48f2:	e8 69 ea ff ff       	call   3360 <_ZdlPvm@plt>
      }
    48f7:	c9                   	leave
    48f8:	c3                   	ret

00000000000048f9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
    48f9:	55                   	push   %rbp
    48fa:	48 89 e5             	mov    %rsp,%rbp
    48fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4901:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4905:	90                   	nop
    4906:	5d                   	pop    %rbp
    4907:	c3                   	ret

0000000000004908 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4908:	55                   	push   %rbp
    4909:	48 89 e5             	mov    %rsp,%rbp
    490c:	48 83 ec 20          	sub    $0x20,%rsp
    4910:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4914:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4918:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    491c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4920:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4927:	00 
    4928:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    492c:	48 89 d6             	mov    %rdx,%rsi
    492f:	48 89 c7             	mov    %rax,%rdi
    4932:	e8 29 ea ff ff       	call   3360 <_ZdlPvm@plt>
      }
    4937:	c9                   	leave
    4938:	c3                   	ret

0000000000004939 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
    4939:	55                   	push   %rbp
    493a:	48 89 e5             	mov    %rsp,%rbp
    493d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4941:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4945:	90                   	nop
    4946:	5d                   	pop    %rbp
    4947:	c3                   	ret

0000000000004948 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    4948:	55                   	push   %rbp
    4949:	48 89 e5             	mov    %rsp,%rbp
    494c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4950:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4954:	90                   	nop
    4955:	5d                   	pop    %rbp
    4956:	c3                   	ret
    4957:	90                   	nop

0000000000004958 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    4958:	55                   	push   %rbp
    4959:	48 89 e5             	mov    %rsp,%rbp
    495c:	48 83 ec 20          	sub    $0x20,%rsp
    4960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4964:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4968:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    496c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4970:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4977:	00 
    4978:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    497c:	48 89 d6             	mov    %rdx,%rsi
    497f:	48 89 c7             	mov    %rax,%rdi
    4982:	e8 d9 e9 ff ff       	call   3360 <_ZdlPvm@plt>
      }
    4987:	c9                   	leave
    4988:	c3                   	ret

0000000000004989 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    4989:	55                   	push   %rbp
    498a:	48 89 e5             	mov    %rsp,%rbp
    498d:	48 83 ec 10          	sub    $0x10,%rsp
    4991:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    4995:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4999:	48 89 c7             	mov    %rax,%rdi
    499c:	e8 bb 00 00 00       	call   4a5c <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    49a1:	c9                   	leave
    49a2:	c3                   	ret

00000000000049a3 <_ZSt3minImERKT_S2_S2_>:
   *  preprocessor macro.
  */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR
    inline const _Tp&
    min(const _Tp& __a, const _Tp& __b)
    49a3:	55                   	push   %rbp
    49a4:	48 89 e5             	mov    %rsp,%rbp
    49a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
      //return __b < __a ? __b : __a;
      if (__b < __a)
    49af:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    49b3:	48 8b 10             	mov    (%rax),%rdx
    49b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49ba:	48 8b 00             	mov    (%rax),%rax
    49bd:	48 39 c2             	cmp    %rax,%rdx
    49c0:	73 06                	jae    49c8 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    49c2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    49c6:	eb 04                	jmp    49cc <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    49c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    49cc:	5d                   	pop    %rbp
    49cd:	c3                   	ret

00000000000049ce <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    49ce:	55                   	push   %rbp
    49cf:	48 89 e5             	mov    %rsp,%rbp
    49d2:	48 83 ec 20          	sub    $0x20,%rsp
    49d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    49da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    49de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    49e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    49e6:	48 89 c7             	mov    %rax,%rdi
    49e9:	e8 88 00 00 00       	call   4a76 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    49ee:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    49f2:	0f 92 c0             	setb   %al
    49f5:	0f b6 c0             	movzbl %al,%eax
    49f8:	48 85 c0             	test   %rax,%rax
    49fb:	0f 95 c0             	setne  %al
    49fe:	84 c0                	test   %al,%al
    4a00:	74 1a                	je     4a1c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    4a02:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    4a09:	ff ff 1f 
    4a0c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    4a10:	73 05                	jae    4a17 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    4a12:	e8 29 e8 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    4a17:	e8 b4 e6 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    4a1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4a20:	48 c1 e0 03          	shl    $0x3,%rax
    4a24:	48 89 c7             	mov    %rax,%rdi
    4a27:	e8 14 e9 ff ff       	call   3340 <_Znwm@plt>
    4a2c:	90                   	nop
      }
    4a2d:	c9                   	leave
    4a2e:	c3                   	ret

0000000000004a2f <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    4a2f:	55                   	push   %rbp
    4a30:	48 89 e5             	mov    %rsp,%rbp
    4a33:	48 83 ec 20          	sub    $0x20,%rsp
    4a37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a3b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4a3f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    4a43:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a47:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4a4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a4f:	48 89 ce             	mov    %rcx,%rsi
    4a52:	48 89 c7             	mov    %rax,%rdi
    4a55:	e8 30 00 00 00       	call   4a8a <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
    4a5a:	c9                   	leave
    4a5b:	c3                   	ret

0000000000004a5c <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    4a5c:	55                   	push   %rbp
    4a5d:	48 89 e5             	mov    %rsp,%rbp
    4a60:	48 83 ec 10          	sub    $0x10,%rsp
    4a64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    4a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a6c:	48 89 c7             	mov    %rax,%rdi
    4a6f:	e8 02 00 00 00       	call   4a76 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    4a74:	c9                   	leave
    4a75:	c3                   	ret

0000000000004a76 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    4a76:	55                   	push   %rbp
    4a77:	48 89 e5             	mov    %rsp,%rbp
    4a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    4a7e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    4a85:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    4a88:	5d                   	pop    %rbp
    4a89:	c3                   	ret

0000000000004a8a <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
   *  within [first,last).
  */
  template<typename _II, typename _OI>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    copy(_II __first, _II __last, _OI __result)
    4a8a:	55                   	push   %rbp
    4a8b:	48 89 e5             	mov    %rsp,%rbp
    4a8e:	53                   	push   %rbx
    4a8f:	48 83 ec 28          	sub    $0x28,%rsp
    4a93:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a97:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4a9b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      __glibcxx_function_requires(_OutputIteratorConcept<_OI,
	    typename iterator_traits<_II>::reference>)
      __glibcxx_requires_can_increment_range(__first, __last, __result);

      return std::__copy_move_a<__is_move_iterator<_II>::__value>
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    4a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4aa3:	48 89 c7             	mov    %rax,%rdi
    4aa6:	e8 2a 00 00 00       	call   4ad5 <_ZSt12__miter_baseIPKPKcET_S4_>
    4aab:	48 89 c3             	mov    %rax,%rbx
    4aae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ab2:	48 89 c7             	mov    %rax,%rdi
    4ab5:	e8 1b 00 00 00       	call   4ad5 <_ZSt12__miter_baseIPKPKcET_S4_>
    4aba:	48 89 c1             	mov    %rax,%rcx
    4abd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ac1:	48 89 c2             	mov    %rax,%rdx
    4ac4:	48 89 de             	mov    %rbx,%rsi
    4ac7:	48 89 cf             	mov    %rcx,%rdi
    4aca:	e8 14 00 00 00       	call   4ae3 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
    4acf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4ad3:	c9                   	leave
    4ad4:	c3                   	ret

0000000000004ad5 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    4ad5:	55                   	push   %rbp
    4ad6:	48 89 e5             	mov    %rsp,%rbp
    4ad9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    4add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ae1:	5d                   	pop    %rbp
    4ae2:	c3                   	ret

0000000000004ae3 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    4ae3:	55                   	push   %rbp
    4ae4:	48 89 e5             	mov    %rsp,%rbp
    4ae7:	41 54                	push   %r12
    4ae9:	53                   	push   %rbx
    4aea:	48 83 ec 20          	sub    $0x20,%rsp
    4aee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4af2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4af6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    4afa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4afe:	48 89 c7             	mov    %rax,%rdi
    4b01:	e8 55 00 00 00       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
    4b06:	49 89 c4             	mov    %rax,%r12
    4b09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4b0d:	48 89 c7             	mov    %rax,%rdi
    4b10:	e8 38 00 00 00       	call   4b4d <_ZSt12__niter_baseIPKPKcET_S4_>
    4b15:	48 89 c3             	mov    %rax,%rbx
    4b18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b1c:	48 89 c7             	mov    %rax,%rdi
    4b1f:	e8 29 00 00 00       	call   4b4d <_ZSt12__niter_baseIPKPKcET_S4_>
    4b24:	4c 89 e2             	mov    %r12,%rdx
    4b27:	48 89 de             	mov    %rbx,%rsi
    4b2a:	48 89 c7             	mov    %rax,%rdi
    4b2d:	e8 37 00 00 00       	call   4b69 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    4b32:	48 89 c2             	mov    %rax,%rdx
    4b35:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4b39:	48 89 d6             	mov    %rdx,%rsi
    4b3c:	48 89 c7             	mov    %rax,%rdi
    4b3f:	e8 52 00 00 00       	call   4b96 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
    4b44:	48 83 c4 20          	add    $0x20,%rsp
    4b48:	5b                   	pop    %rbx
    4b49:	41 5c                	pop    %r12
    4b4b:	5d                   	pop    %rbp
    4b4c:	c3                   	ret

0000000000004b4d <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
    4b4d:	55                   	push   %rbp
    4b4e:	48 89 e5             	mov    %rsp,%rbp
    4b51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    4b55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b59:	5d                   	pop    %rbp
    4b5a:	c3                   	ret

0000000000004b5b <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
    4b5b:	55                   	push   %rbp
    4b5c:	48 89 e5             	mov    %rsp,%rbp
    4b5f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    4b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b67:	5d                   	pop    %rbp
    4b68:	c3                   	ret

0000000000004b69 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    4b69:	55                   	push   %rbp
    4b6a:	48 89 e5             	mov    %rsp,%rbp
    4b6d:	48 83 ec 20          	sub    $0x20,%rsp
    4b71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4b79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    4b7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b89:	48 89 ce             	mov    %rcx,%rsi
    4b8c:	48 89 c7             	mov    %rax,%rdi
    4b8f:	e8 14 00 00 00       	call   4ba8 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
    4b94:	c9                   	leave
    4b95:	c3                   	ret

0000000000004b96 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    4b96:	55                   	push   %rbp
    4b97:	48 89 e5             	mov    %rsp,%rbp
    4b9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    4ba2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ba6:	5d                   	pop    %rbp
    4ba7:	c3                   	ret

0000000000004ba8 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    4ba8:	55                   	push   %rbp
    4ba9:	48 89 e5             	mov    %rsp,%rbp
    4bac:	48 83 ec 20          	sub    $0x20,%rsp
    4bb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bb8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    4bbc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4bc0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    4bc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bc8:	48 89 ce             	mov    %rcx,%rsi
    4bcb:	48 89 c7             	mov    %rax,%rdi
    4bce:	e8 02 00 00 00       	call   4bd5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
    4bd3:	c9                   	leave
    4bd4:	c3                   	ret

0000000000004bd5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    4bd5:	55                   	push   %rbp
    4bd6:	48 89 e5             	mov    %rsp,%rbp
    4bd9:	48 83 ec 30          	sub    $0x30,%rsp
    4bdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4be1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4be5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    4be9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4bed:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    4bf1:	48 c1 f8 03          	sar    $0x3,%rax
    4bf5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    4bf9:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4bfe:	74 1f                	je     4c1f <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    4c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c04:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4c0b:	00 
    4c0c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4c10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c14:	48 89 ce             	mov    %rcx,%rsi
    4c17:	48 89 c7             	mov    %rax,%rdi
    4c1a:	e8 31 ea ff ff       	call   3650 <memmove@plt>
	  return __result + _Num;
    4c1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c23:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4c2a:	00 
    4c2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c2f:	48 01 d0             	add    %rdx,%rax
	}
    4c32:	c9                   	leave
    4c33:	c3                   	ret

0000000000004c34 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
VkResult rtvc::createDebugUtilsMessengerEXT(
    VkInstance instance,
    const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger)
{
    4c34:	55                   	push   %rbp
    4c35:	48 89 e5             	mov    %rsp,%rbp
    4c38:	48 83 ec 30          	sub    $0x30,%rsp
    4c3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4c44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    4c48:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    auto func = (PFN_vkCreateDebugUtilsMessengerEXT)
        vkGetInstanceProcAddr(instance, "vkCreateDebugUtilsMessengerEXT");
    4c4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c50:	48 8d 15 e1 ff 00 00 	lea    0xffe1(%rip),%rdx        # 14c38 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4c57:	48 89 d6             	mov    %rdx,%rsi
    4c5a:	48 89 c7             	mov    %rax,%rdi
    4c5d:	e8 9e e6 ff ff       	call   3300 <vkGetInstanceProcAddr@plt>
    4c62:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (func != nullptr)
    4c66:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4c6b:	74 1c                	je     4c89 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x55>
        return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    4c6d:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    4c71:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4c75:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c79:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    4c7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4c81:	48 89 c7             	mov    %rax,%rdi
    4c84:	41 ff d0             	call   *%r8
    4c87:	eb 05                	jmp    4c8e <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5a>
    else
        return VK_ERROR_EXTENSION_NOT_PRESENT;
    4c89:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
}
    4c8e:	c9                   	leave
    4c8f:	c3                   	ret

0000000000004c90 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void rtvc::destroyDebugUtilsMessengerEXT(
    VkInstance instance,
    VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator)
{
    4c90:	55                   	push   %rbp
    4c91:	48 89 e5             	mov    %rsp,%rbp
    4c94:	48 83 ec 30          	sub    $0x30,%rsp
    4c98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4c9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ca0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)
        vkGetInstanceProcAddr(instance, "vkDestroyDebugUtilsMessengerEXT");
    4ca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ca8:	48 8d 15 a9 ff 00 00 	lea    0xffa9(%rip),%rdx        # 14c58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    4caf:	48 89 d6             	mov    %rdx,%rsi
    4cb2:	48 89 c7             	mov    %rax,%rdi
    4cb5:	e8 46 e6 ff ff       	call   3300 <vkGetInstanceProcAddr@plt>
    4cba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (func != nullptr)
    4cbe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    4cc3:	74 1a                	je     4cdf <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4f>
        return func(instance, debugMessenger, pAllocator);
    4cc5:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    4cc9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ccd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    4cd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4cd5:	48 89 ce             	mov    %rcx,%rsi
    4cd8:	48 89 c7             	mov    %rax,%rdi
    4cdb:	41 ff d0             	call   *%r8
    4cde:	90                   	nop
    4cdf:	c9                   	leave
    4ce0:	c3                   	ret
    4ce1:	90                   	nop

0000000000004ce2 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
VKAPI_ATTR VkBool32 VKAPI_CALL rtvc::RenderApplication::debugCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData)
{
    4ce2:	55                   	push   %rbp
    4ce3:	48 89 e5             	mov    %rsp,%rbp
    4ce6:	48 83 ec 20          	sub    $0x20,%rsp
    4cea:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4ced:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4cf0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    4cf4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    if (messageSeverity >= VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT)
    4cf8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4cfb:	3d ff 00 00 00       	cmp    $0xff,%eax
    4d00:	7e 39                	jle    4d3b <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x59>
        std::cerr << pCallbackData->pMessage << '\n'
    4d02:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d06:	48 8b 40 28          	mov    0x28(%rax),%rax
    4d0a:	48 89 c6             	mov    %rax,%rsi
    4d0d:	48 8d 05 cc c7 01 00 	lea    0x1c7cc(%rip),%rax        # 214e0 <_ZSt4cerr@GLIBCXX_3.4>
    4d14:	48 89 c7             	mov    %rax,%rdi
    4d17:	e8 14 e6 ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4d1c:	be 0a 00 00 00       	mov    $0xa,%esi
    4d21:	48 89 c7             	mov    %rax,%rdi
    4d24:	e8 37 e7 ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
                  << std::endl;
    4d29:	48 8b 15 68 c2 01 00 	mov    0x1c268(%rip),%rdx        # 20f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    4d30:	48 89 d6             	mov    %rdx,%rsi
    4d33:	48 89 c7             	mov    %rax,%rdi
    4d36:	e8 75 e6 ff ff       	call   33b0 <_ZNSolsEPFRSoS_E@plt>

    return VK_FALSE;
    4d3b:	b8 00 00 00 00       	mov    $0x0,%eax
}
    4d40:	c9                   	leave
    4d41:	c3                   	ret

0000000000004d42 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>:

std::vector<VkExtensionProperties>
rtvc::RenderApplication::getSupportedExtensions()
{
    4d42:	55                   	push   %rbp
    4d43:	48 89 e5             	mov    %rsp,%rbp
    4d46:	53                   	push   %rbx
    4d47:	48 83 ec 28          	sub    $0x28,%rsp
    4d4b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d4f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    uint32_t extensionsCount = 0;
    4d53:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    4d5a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4d5e:	ba 00 00 00 00       	mov    $0x0,%edx
    4d63:	48 89 c6             	mov    %rax,%rsi
    4d66:	bf 00 00 00 00       	mov    $0x0,%edi
    4d6b:	e8 20 e5 ff ff       	call   3290 <vkEnumerateInstanceExtensionProperties@plt>

    std::vector<VkExtensionProperties> extensions{extensionsCount};
    4d70:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4d73:	89 c3                	mov    %eax,%ebx
    4d75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d79:	48 89 c7             	mov    %rax,%rdi
    4d7c:	e8 dd 3d 00 00       	call   8b5e <_ZNSaI21VkExtensionPropertiesEC1Ev>
    4d81:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d89:	48 89 de             	mov    %rbx,%rsi
    4d8c:	48 89 c7             	mov    %rax,%rdi
    4d8f:	e8 02 3e 00 00       	call   8b96 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    4d94:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d98:	48 89 c7             	mov    %rax,%rdi
    4d9b:	e8 da 3d 00 00       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, extensions.data());
    4da0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4da4:	48 89 c7             	mov    %rax,%rdi
    4da7:	e8 a4 3e 00 00       	call   8c50 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    4dac:	48 89 c2             	mov    %rax,%rdx
    4daf:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4db3:	48 89 c6             	mov    %rax,%rsi
    4db6:	bf 00 00 00 00       	mov    $0x0,%edi
    4dbb:	e8 d0 e4 ff ff       	call   3290 <vkEnumerateInstanceExtensionProperties@plt>

    return extensions;
    4dc0:	eb 34                	jmp    4df6 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xb4>
    std::vector<VkExtensionProperties> extensions{extensionsCount};
    4dc2:	48 89 c3             	mov    %rax,%rbx
    4dc5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4dc9:	48 89 c7             	mov    %rax,%rdi
    4dcc:	e8 a9 3d 00 00       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    4dd1:	48 89 d8             	mov    %rbx,%rax
    4dd4:	48 89 c7             	mov    %rax,%rdi
    4dd7:	e8 d4 e8 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    4ddc:	48 89 c3             	mov    %rax,%rbx
    4ddf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4de3:	48 89 c7             	mov    %rax,%rdi
    4de6:	e8 21 3e 00 00       	call   8c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    4deb:	48 89 d8             	mov    %rbx,%rax
    4dee:	48 89 c7             	mov    %rax,%rdi
    4df1:	e8 ba e8 ff ff       	call   36b0 <_Unwind_Resume@plt>
    4df6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dfa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4dfe:	c9                   	leave
    4dff:	c3                   	ret

0000000000004e00 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>:

std::vector<const char *> rtvc::RenderApplication::getRequiredExtensions()
{
    4e00:	55                   	push   %rbp
    4e01:	48 89 e5             	mov    %rsp,%rbp
    4e04:	41 54                	push   %r12
    4e06:	53                   	push   %rbx
    4e07:	48 83 ec 30          	sub    $0x30,%rsp
    4e0b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    4e0f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    uint32_t glfwExtensionCount = 0;
    4e13:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    const char **glfwExtensions;
    glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    4e1a:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    4e1e:	48 89 c7             	mov    %rax,%rdi
    4e21:	e8 0a e4 ff ff       	call   3230 <glfwGetRequiredInstanceExtensions@plt>
    4e26:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

    std::vector<const char *> extensions{glfwExtensions, glfwExtensions + glfwExtensionCount};
    4e2a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4e2e:	8b 45 d8             	mov    -0x28(%rbp),%eax
    4e31:	89 c0                	mov    %eax,%eax
    4e33:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    4e3a:	00 
    4e3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4e3f:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    4e43:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4e47:	48 89 c7             	mov    %rax,%rdi
    4e4a:	e8 83 ee ff ff       	call   3cd2 <_ZNSaIPKcEC1Ev>
    4e4f:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    4e53:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4e57:	48 89 d1             	mov    %rdx,%rcx
    4e5a:	4c 89 e2             	mov    %r12,%rdx
    4e5d:	48 89 de             	mov    %rbx,%rsi
    4e60:	48 89 c7             	mov    %rax,%rdi
    4e63:	e8 64 3e 00 00       	call   8ccc <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>
    4e68:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4e6c:	48 89 c7             	mov    %rax,%rdi
    4e6f:	e8 7a ee ff ff       	call   3cee <_ZNSaIPKcED1Ev>

    if (enableValidationLayers)
    4e74:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    4e78:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    4e7c:	84 c0                	test   %al,%al
    4e7e:	74 54                	je     4ed4 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0xd4>
        extensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    4e80:	48 8d 05 e1 03 01 00 	lea    0x103e1(%rip),%rax        # 15268 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    4e87:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e8b:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    4e8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4e93:	48 89 d6             	mov    %rdx,%rsi
    4e96:	48 89 c7             	mov    %rax,%rdi
    4e99:	e8 a0 3e 00 00       	call   8d3e <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>

    return extensions;
    4e9e:	eb 34                	jmp    4ed4 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0xd4>
    std::vector<const char *> extensions{glfwExtensions, glfwExtensions + glfwExtensionCount};
    4ea0:	48 89 c3             	mov    %rax,%rbx
    4ea3:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    4ea7:	48 89 c7             	mov    %rax,%rdi
    4eaa:	e8 3f ee ff ff       	call   3cee <_ZNSaIPKcED1Ev>
    4eaf:	48 89 d8             	mov    %rbx,%rax
    4eb2:	48 89 c7             	mov    %rax,%rdi
    4eb5:	e8 f6 e7 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    4eba:	48 89 c3             	mov    %rax,%rbx
    4ebd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4ec1:	48 89 c7             	mov    %rax,%rdi
    4ec4:	e8 c9 ee ff ff       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    4ec9:	48 89 d8             	mov    %rbx,%rax
    4ecc:	48 89 c7             	mov    %rax,%rdi
    4ecf:	e8 dc e7 ff ff       	call   36b0 <_Unwind_Resume@plt>
    return extensions;
    4ed4:	90                   	nop
}
    4ed5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4ed9:	48 83 c4 30          	add    $0x30,%rsp
    4edd:	5b                   	pop    %rbx
    4ede:	41 5c                	pop    %r12
    4ee0:	5d                   	pop    %rbp
    4ee1:	c3                   	ret

0000000000004ee2 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>:

bool rtvc::RenderApplication::checkValidationLayerSupport()
{
    4ee2:	55                   	push   %rbp
    4ee3:	48 89 e5             	mov    %rsp,%rbp
    4ee6:	53                   	push   %rbx
    4ee7:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    4eee:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    uint32_t layerCount;
    vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    4ef5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4ef9:	be 00 00 00 00       	mov    $0x0,%esi
    4efe:	48 89 c7             	mov    %rax,%rdi
    4f01:	e8 2a e5 ff ff       	call   3430 <vkEnumerateInstanceLayerProperties@plt>

    std::vector<VkLayerProperties> availableLayers{layerCount};
    4f06:	8b 45 c0             	mov    -0x40(%rbp),%eax
    4f09:	89 c3                	mov    %eax,%ebx
    4f0b:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    4f0f:	48 89 c7             	mov    %rax,%rdi
    4f12:	e8 59 3e 00 00       	call   8d70 <_ZNSaI17VkLayerPropertiesEC1Ev>
    4f17:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
    4f1b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4f1f:	48 89 de             	mov    %rbx,%rsi
    4f22:	48 89 c7             	mov    %rax,%rdi
    4f25:	e8 7e 3e 00 00       	call   8da8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    4f2a:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    4f2e:	48 89 c7             	mov    %rax,%rdi
    4f31:	e8 56 3e 00 00       	call   8d8c <_ZNSaI17VkLayerPropertiesED1Ev>
    vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    4f36:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4f3a:	48 89 c7             	mov    %rax,%rdi
    4f3d:	e8 20 3f 00 00       	call   8e62 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    4f42:	48 89 c2             	mov    %rax,%rdx
    4f45:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4f49:	48 89 d6             	mov    %rdx,%rsi
    4f4c:	48 89 c7             	mov    %rax,%rdi
    4f4f:	e8 dc e4 ff ff       	call   3430 <vkEnumerateInstanceLayerProperties@plt>

    for (const char *layerName : validationLayers)
    4f54:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    4f5b:	48 83 c0 18          	add    $0x18,%rax
    4f5f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4f63:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f67:	48 89 c7             	mov    %rax,%rdi
    4f6a:	e8 17 3f 00 00       	call   8e86 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    4f6f:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    4f73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4f77:	48 89 c7             	mov    %rax,%rdi
    4f7a:	e8 2d 3f 00 00       	call   8eac <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    4f7f:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    4f83:	e9 af 00 00 00       	jmp    5037 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x155>
    4f88:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    4f8c:	48 89 c7             	mov    %rax,%rdi
    4f8f:	e8 9c 3f 00 00       	call   8f30 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    4f94:	48 8b 00             	mov    (%rax),%rax
    4f97:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    {
        bool layerFound = false;
    4f9b:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)

        for (const auto &layerProperties : availableLayers)
    4f9f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4fa3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    4fa7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4fab:	48 89 c7             	mov    %rax,%rdi
    4fae:	e8 8f 3f 00 00       	call   8f42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    4fb3:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    4fb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4fbb:	48 89 c7             	mov    %rax,%rdi
    4fbe:	e8 a5 3f 00 00       	call   8f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    4fc3:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    4fc7:	eb 39                	jmp    5002 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x120>
    4fc9:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    4fcd:	48 89 c7             	mov    %rax,%rdi
    4fd0:	e8 1b 40 00 00       	call   8ff0 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    4fd5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
        {
            if (strcmp(layerName, layerProperties.layerName) == 0)
    4fd9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4fdd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4fe1:	48 89 d6             	mov    %rdx,%rsi
    4fe4:	48 89 c7             	mov    %rax,%rdi
    4fe7:	e8 a4 e5 ff ff       	call   3590 <strcmp@plt>
    4fec:	85 c0                	test   %eax,%eax
    4fee:	75 06                	jne    4ff6 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x114>
            {
                layerFound = true;
    4ff0:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
                break;
    4ff4:	eb 23                	jmp    5019 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x137>
        for (const auto &layerProperties : availableLayers)
    4ff6:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    4ffa:	48 89 c7             	mov    %rax,%rdi
    4ffd:	e8 ca 3f 00 00       	call   8fcc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5002:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    5006:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    500a:	48 89 d6             	mov    %rdx,%rsi
    500d:	48 89 c7             	mov    %rax,%rdi
    5010:	e8 7c 3f 00 00       	call   8f91 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5015:	84 c0                	test   %al,%al
    5017:	75 b0                	jne    4fc9 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xe7>
            }
        }

        if (!layerFound)
    5019:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    501d:	83 f0 01             	xor    $0x1,%eax
    5020:	84 c0                	test   %al,%al
    5022:	74 07                	je     502b <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x149>
            return false;
    5024:	bb 00 00 00 00       	mov    $0x0,%ebx
    5029:	eb 2c                	jmp    5057 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x175>
    for (const char *layerName : validationLayers)
    502b:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    502f:	48 89 c7             	mov    %rax,%rdi
    5032:	e8 d9 3e 00 00       	call   8f10 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    5037:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    503b:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    503f:	48 89 d6             	mov    %rdx,%rsi
    5042:	48 89 c7             	mov    %rax,%rdi
    5045:	e8 8b 3e 00 00       	call   8ed5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    504a:	84 c0                	test   %al,%al
    504c:	0f 85 36 ff ff ff    	jne    4f88 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xa6>
    }

    return true;
    5052:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    5057:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    505b:	48 89 c7             	mov    %rax,%rdi
    505e:	e8 bb 3d 00 00       	call   8e1e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    5063:	89 d8                	mov    %ebx,%eax
    5065:	eb 34                	jmp    509b <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1b9>
    std::vector<VkLayerProperties> availableLayers{layerCount};
    5067:	48 89 c3             	mov    %rax,%rbx
    506a:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    506e:	48 89 c7             	mov    %rax,%rdi
    5071:	e8 16 3d 00 00       	call   8d8c <_ZNSaI17VkLayerPropertiesED1Ev>
    5076:	48 89 d8             	mov    %rbx,%rax
    5079:	48 89 c7             	mov    %rax,%rdi
    507c:	e8 2f e6 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    5081:	48 89 c3             	mov    %rax,%rbx
    5084:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    5088:	48 89 c7             	mov    %rax,%rdi
    508b:	e8 8e 3d 00 00       	call   8e1e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    5090:	48 89 d8             	mov    %rbx,%rax
    5093:	48 89 c7             	mov    %rax,%rdi
    5096:	e8 15 e6 ff ff       	call   36b0 <_Unwind_Resume@plt>
    509b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    509f:	c9                   	leave
    50a0:	c3                   	ret
    50a1:	90                   	nop

00000000000050a2 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void rtvc::RenderApplication::populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo)
{
    50a2:	55                   	push   %rbp
    50a3:	48 89 e5             	mov    %rsp,%rbp
    50a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    createInfo = {};
    50ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50b2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    50b6:	0f 11 00             	movups %xmm0,(%rax)
    50b9:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    50bd:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    50c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50c5:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
    createInfo.messageSeverity =
    50cb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50cf:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
    createInfo.messageType =
    50d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50da:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
        VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
        VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
    createInfo.pfnUserCallback = debugCallback;
    50e1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50e5:	48 8d 15 f6 fb ff ff 	lea    -0x40a(%rip),%rdx        # 4ce2 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    50ec:	48 89 50 20          	mov    %rdx,0x20(%rax)
    createInfo.pUserData = nullptr;
    50f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    50f4:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    50fb:	00 
}
    50fc:	90                   	nop
    50fd:	5d                   	pop    %rbp
    50fe:	c3                   	ret
    50ff:	90                   	nop

0000000000005100 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>:

void rtvc::RenderApplication::setupDebugMessenger()
{
    5100:	55                   	push   %rbp
    5101:	48 89 e5             	mov    %rsp,%rbp
    5104:	41 54                	push   %r12
    5106:	53                   	push   %rbx
    5107:	48 83 ec 40          	sub    $0x40,%rsp
    510b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    if (!enableValidationLayers)
    510f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5113:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    5117:	83 f0 01             	xor    $0x1,%eax
    511a:	84 c0                	test   %al,%al
    511c:	74 06                	je     5124 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv+0x24>
        return;
    511e:	90                   	nop
    populateDebugMessengerCreateInfo(createInfo);

    if (createDebugUtilsMessengerEXT(instance, &createInfo,
                                     nullptr, &debugMessenger) != VK_SUCCESS)
        throw std::runtime_error("Failed to set up debug messenger.");
}
    511f:	e9 91 00 00 00       	jmp    51b5 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv+0xb5>
    populateDebugMessengerCreateInfo(createInfo);
    5124:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    5128:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    512c:	48 89 d6             	mov    %rdx,%rsi
    512f:	48 89 c7             	mov    %rax,%rdi
    5132:	e8 6b ff ff ff       	call   50a2 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    if (createDebugUtilsMessengerEXT(instance, &createInfo,
    5137:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    513b:	48 8d 50 38          	lea    0x38(%rax),%rdx
    513f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5143:	48 8b 40 10          	mov    0x10(%rax),%rax
    5147:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    514b:	48 89 d1             	mov    %rdx,%rcx
    514e:	ba 00 00 00 00       	mov    $0x0,%edx
    5153:	48 89 c7             	mov    %rax,%rdi
    5156:	e8 d9 fa ff ff       	call   4c34 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                     nullptr, &debugMessenger) != VK_SUCCESS)
    515b:	85 c0                	test   %eax,%eax
    515d:	0f 95 c0             	setne  %al
    if (createDebugUtilsMessengerEXT(instance, &createInfo,
    5160:	84 c0                	test   %al,%al
    5162:	74 51                	je     51b5 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv+0xb5>
        throw std::runtime_error("Failed to set up debug messenger.");
    5164:	bf 10 00 00 00       	mov    $0x10,%edi
    5169:	e8 d2 df ff ff       	call   3140 <__cxa_allocate_exception@plt>
    516e:	48 89 c3             	mov    %rax,%rbx
    5171:	48 8d 05 08 01 01 00 	lea    0x10108(%rip),%rax        # 15280 <_ZN6__pstl9execution2v1L5unseqE+0x19>
    5178:	48 89 c6             	mov    %rax,%rsi
    517b:	48 89 df             	mov    %rbx,%rdi
    517e:	e8 5d df ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5183:	48 8b 05 1e be 01 00 	mov    0x1be1e(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    518a:	48 89 c2             	mov    %rax,%rdx
    518d:	48 8d 05 ac bb 01 00 	lea    0x1bbac(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5194:	48 89 c6             	mov    %rax,%rsi
    5197:	48 89 df             	mov    %rbx,%rdi
    519a:	e8 e1 e4 ff ff       	call   3680 <__cxa_throw@plt>
    519f:	49 89 c4             	mov    %rax,%r12
    51a2:	48 89 df             	mov    %rbx,%rdi
    51a5:	e8 66 e0 ff ff       	call   3210 <__cxa_free_exception@plt>
    51aa:	4c 89 e0             	mov    %r12,%rax
    51ad:	48 89 c7             	mov    %rax,%rdi
    51b0:	e8 fb e4 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    51b5:	90                   	nop
    51b6:	48 83 c4 40          	add    $0x40,%rsp
    51ba:	5b                   	pop    %rbx
    51bb:	41 5c                	pop    %r12
    51bd:	5d                   	pop    %rbp
    51be:	c3                   	ret
    51bf:	90                   	nop

00000000000051c0 <_ZN4rtvc17RenderApplication13creatInstanceEv>:

void rtvc::RenderApplication::creatInstance()
{
    51c0:	55                   	push   %rbp
    51c1:	48 89 e5             	mov    %rsp,%rbp
    51c4:	41 54                	push   %r12
    51c6:	53                   	push   %rbx
    51c7:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
    51ce:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    if (enableValidationLayers && !checkValidationLayerSupport())
    51d5:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    51dc:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    51e0:	84 c0                	test   %al,%al
    51e2:	74 1d                	je     5201 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x41>
    51e4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    51eb:	48 89 c7             	mov    %rax,%rdi
    51ee:	e8 ef fc ff ff       	call   4ee2 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>
    51f3:	83 f0 01             	xor    $0x1,%eax
    51f6:	84 c0                	test   %al,%al
    51f8:	74 07                	je     5201 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x41>
    51fa:	b8 01 00 00 00       	mov    $0x1,%eax
    51ff:	eb 05                	jmp    5206 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x46>
    5201:	b8 00 00 00 00       	mov    $0x0,%eax
    5206:	84 c0                	test   %al,%al
    5208:	74 3b                	je     5245 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x85>
        throw std::runtime_error("Validation layers requested but not available.");
    520a:	bf 10 00 00 00       	mov    $0x10,%edi
    520f:	e8 2c df ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5214:	48 89 c3             	mov    %rax,%rbx
    5217:	48 8d 05 8a 00 01 00 	lea    0x1008a(%rip),%rax        # 152a8 <_ZN6__pstl9execution2v1L5unseqE+0x41>
    521e:	48 89 c6             	mov    %rax,%rsi
    5221:	48 89 df             	mov    %rbx,%rdi
    5224:	e8 b7 de ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5229:	48 8b 05 78 bd 01 00 	mov    0x1bd78(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5230:	48 89 c2             	mov    %rax,%rdx
    5233:	48 8d 05 06 bb 01 00 	lea    0x1bb06(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    523a:	48 89 c6             	mov    %rax,%rsi
    523d:	48 89 df             	mov    %rbx,%rdi
    5240:	e8 3b e4 ff ff       	call   3680 <__cxa_throw@plt>

    // std::cout << enableValidationLayers << '\n';
    VkApplicationInfo appInfo{};
    5245:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5249:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    524d:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    5251:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    5255:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    appInfo.pApplicationName = "Test Triangle";
    525c:	48 8d 05 74 00 01 00 	lea    0x10074(%rip),%rax        # 152d7 <_ZN6__pstl9execution2v1L5unseqE+0x70>
    5263:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    5267:	c7 45 b8 00 00 40 00 	movl   $0x400000,-0x48(%rbp)
    appInfo.pEngineName = "No Engine";
    526e:	48 8d 05 70 00 01 00 	lea    0x10070(%rip),%rax        # 152e5 <_ZN6__pstl9execution2v1L5unseqE+0x7e>
    5275:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    5279:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
    appInfo.apiVersion = VK_API_VERSION_1_0;
    5280:	c7 45 cc 00 00 40 00 	movl   $0x400000,-0x34(%rbp)

    VkInstanceCreateInfo createInfo{};
    5287:	66 0f ef c0          	pxor   %xmm0,%xmm0
    528b:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    5292:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    5299:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    529d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    52a1:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    52a8:	00 00 00 
    createInfo.pApplicationInfo = &appInfo;
    52ab:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    52af:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

    auto requiredExtensions = getRequiredExtensions();
    52b6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    52bd:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    52c4:	48 89 d6             	mov    %rdx,%rsi
    52c7:	48 89 c7             	mov    %rax,%rdi
    52ca:	e8 31 fb ff ff       	call   4e00 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>
    createInfo.enabledExtensionCount = static_cast<uint32_t>(requiredExtensions.size());
    52cf:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    52d6:	48 89 c7             	mov    %rax,%rdi
    52d9:	e8 24 3d 00 00       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    52de:	89 45 90             	mov    %eax,-0x70(%rbp)
    createInfo.ppEnabledExtensionNames = requiredExtensions.data();
    52e1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    52e8:	48 89 c7             	mov    %rax,%rdi
    52eb:	e8 36 3d 00 00       	call   9026 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    52f0:	48 89 45 98          	mov    %rax,-0x68(%rbp)

    VkDebugUtilsMessengerCreateInfoEXT debugCreateInfo{};
    52f4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    52f8:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    52ff:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    5306:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    if (enableValidationLayers)
    530d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5314:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    5318:	84 c0                	test   %al,%al
    531a:	74 56                	je     5372 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1b2>
    {
        createInfo.enabledLayerCount = static_cast<uint32_t>(validationLayers.size());
    531c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5323:	48 83 c0 18          	add    $0x18,%rax
    5327:	48 89 c7             	mov    %rax,%rdi
    532a:	e8 d3 3c 00 00       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    532f:	89 45 80             	mov    %eax,-0x80(%rbp)
        createInfo.ppEnabledLayerNames = validationLayers.data();
    5332:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5339:	48 83 c0 18          	add    $0x18,%rax
    533d:	48 89 c7             	mov    %rax,%rdi
    5340:	e8 05 3d 00 00       	call   904a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    5345:	48 89 45 88          	mov    %rax,-0x78(%rbp)

        populateDebugMessengerCreateInfo(debugCreateInfo);
    5349:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    5350:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    5357:	48 89 d6             	mov    %rdx,%rsi
    535a:	48 89 c7             	mov    %rax,%rdi
    535d:	e8 40 fd ff ff       	call   50a2 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
        createInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    5362:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    5369:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    5370:	eb 12                	jmp    5384 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1c4>
    }
    else
    {
        createInfo.enabledLayerCount = 0;
    5372:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%rbp)
        createInfo.pNext = nullptr;
    5379:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    5380:	00 00 00 00 
    }

    if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    5384:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    538b:	48 8d 50 10          	lea    0x10(%rax),%rdx
    538f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5396:	be 00 00 00 00       	mov    $0x0,%esi
    539b:	48 89 c7             	mov    %rax,%rdi
    539e:	e8 ed e0 ff ff       	call   3490 <vkCreateInstance@plt>
    53a3:	85 c0                	test   %eax,%eax
    53a5:	0f 95 c0             	setne  %al
    53a8:	84 c0                	test   %al,%al
    53aa:	74 3b                	je     53e7 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x227>
        throw std::runtime_error("Failed to create instance.");
    53ac:	bf 10 00 00 00       	mov    $0x10,%edi
    53b1:	e8 8a dd ff ff       	call   3140 <__cxa_allocate_exception@plt>
    53b6:	48 89 c3             	mov    %rax,%rbx
    53b9:	48 8d 05 2f ff 00 00 	lea    0xff2f(%rip),%rax        # 152ef <_ZN6__pstl9execution2v1L5unseqE+0x88>
    53c0:	48 89 c6             	mov    %rax,%rsi
    53c3:	48 89 df             	mov    %rbx,%rdi
    53c6:	e8 15 dd ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    53cb:	48 8b 05 d6 bb 01 00 	mov    0x1bbd6(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    53d2:	48 89 c2             	mov    %rax,%rdx
    53d5:	48 8d 05 64 b9 01 00 	lea    0x1b964(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    53dc:	48 89 c6             	mov    %rax,%rsi
    53df:	48 89 df             	mov    %rbx,%rdi
    53e2:	e8 99 e2 ff ff       	call   3680 <__cxa_throw@plt>

    auto supportedExtensions = getSupportedExtensions();
    53e7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    53ee:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    53f5:	48 89 d6             	mov    %rdx,%rsi
    53f8:	48 89 c7             	mov    %rax,%rdi
    53fb:	e8 42 f9 ff ff       	call   4d42 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>
    std::cout << "Available extensions:\n";
    5400:	48 8d 05 03 ff 00 00 	lea    0xff03(%rip),%rax        # 1530a <_ZN6__pstl9execution2v1L5unseqE+0xa3>
    5407:	48 89 c6             	mov    %rax,%rsi
    540a:	48 8d 05 af bf 01 00 	lea    0x1bfaf(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    5411:	48 89 c7             	mov    %rax,%rdi
    5414:	e8 17 df ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    for (const auto &extension : supportedExtensions)
    5419:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    5420:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5428:	48 89 c7             	mov    %rax,%rdi
    542b:	e8 3e 3c 00 00       	call   906e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    5430:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    5437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    543b:	48 89 c7             	mov    %rax,%rdi
    543e:	e8 51 3c 00 00       	call   9094 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    5443:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    544a:	eb 55                	jmp    54a1 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x2e1>
    544c:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    5453:	48 89 c7             	mov    %rax,%rdi
    5456:	e8 c1 3c 00 00       	call   911c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    545b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
        std::cout << '\t' << extension.extensionName << '\n';
    545f:	be 09 00 00 00       	mov    $0x9,%esi
    5464:	48 8d 05 55 bf 01 00 	lea    0x1bf55(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    546b:	48 89 c7             	mov    %rax,%rdi
    546e:	e8 ed df ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    5473:	48 89 c2             	mov    %rax,%rdx
    5476:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    547a:	48 89 c6             	mov    %rax,%rsi
    547d:	48 89 d7             	mov    %rdx,%rdi
    5480:	e8 ab de ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    5485:	be 0a 00 00 00       	mov    $0xa,%esi
    548a:	48 89 c7             	mov    %rax,%rdi
    548d:	e8 ce df ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : supportedExtensions)
    5492:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    5499:	48 89 c7             	mov    %rax,%rdi
    549c:	e8 57 3c 00 00       	call   90f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    54a1:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    54a8:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    54af:	48 89 d6             	mov    %rdx,%rsi
    54b2:	48 89 c7             	mov    %rax,%rdi
    54b5:	e8 03 3c 00 00       	call   90bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    54ba:	84 c0                	test   %al,%al
    54bc:	75 8e                	jne    544c <_ZN4rtvc17RenderApplication13creatInstanceEv+0x28c>
    std::cout << '\n';
    54be:	be 0a 00 00 00       	mov    $0xa,%esi
    54c3:	48 8d 05 f6 be 01 00 	lea    0x1bef6(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    54ca:	48 89 c7             	mov    %rax,%rdi
    54cd:	e8 8e df ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

    std::cout << "Required extensions:\n";
    54d2:	48 8d 05 48 fe 00 00 	lea    0xfe48(%rip),%rax        # 15321 <_ZN6__pstl9execution2v1L5unseqE+0xba>
    54d9:	48 89 c6             	mov    %rax,%rsi
    54dc:	48 8d 05 dd be 01 00 	lea    0x1bedd(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    54e3:	48 89 c7             	mov    %rax,%rdi
    54e6:	e8 45 de ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    for (const auto &extension : requiredExtensions)
    54eb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    54f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    54f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    54fa:	48 89 c7             	mov    %rax,%rdi
    54fd:	e8 2c 3c 00 00       	call   912e <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    5502:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    5509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    550d:	48 89 c7             	mov    %rax,%rdi
    5510:	e8 3f 3c 00 00       	call   9154 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    5515:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    551c:	eb 58                	jmp    5576 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x3b6>
    551e:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    5525:	48 89 c7             	mov    %rax,%rdi
    5528:	e8 ab 3c 00 00       	call   91d8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    552d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        std::cout << '\t' << extension << '\n';
    5531:	be 09 00 00 00       	mov    $0x9,%esi
    5536:	48 8d 05 83 be 01 00 	lea    0x1be83(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    553d:	48 89 c7             	mov    %rax,%rdi
    5540:	e8 1b df ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    5545:	48 89 c2             	mov    %rax,%rdx
    5548:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    554c:	48 8b 00             	mov    (%rax),%rax
    554f:	48 89 c6             	mov    %rax,%rsi
    5552:	48 89 d7             	mov    %rdx,%rdi
    5555:	e8 d6 dd ff ff       	call   3330 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    555a:	be 0a 00 00 00       	mov    $0xa,%esi
    555f:	48 89 c7             	mov    %rax,%rdi
    5562:	e8 f9 de ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : requiredExtensions)
    5567:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    556e:	48 89 c7             	mov    %rax,%rdi
    5571:	e8 42 3c 00 00       	call   91b8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    5576:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    557d:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    5584:	48 89 d6             	mov    %rdx,%rsi
    5587:	48 89 c7             	mov    %rax,%rdi
    558a:	e8 ee 3b 00 00       	call   917d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    558f:	84 c0                	test   %al,%al
    5591:	75 8b                	jne    551e <_ZN4rtvc17RenderApplication13creatInstanceEv+0x35e>
    std::cout << '\n';
    5593:	be 0a 00 00 00       	mov    $0xa,%esi
    5598:	48 8d 05 21 be 01 00 	lea    0x1be21(%rip),%rax        # 213c0 <_ZSt4cout@GLIBCXX_3.4>
    559f:	48 89 c7             	mov    %rax,%rdi
    55a2:	e8 b9 de ff ff       	call   3460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
}
    55a7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    55ae:	48 89 c7             	mov    %rax,%rdi
    55b1:	e8 56 36 00 00       	call   8c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    55b6:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    55bd:	48 89 c7             	mov    %rax,%rdi
    55c0:	e8 cd e7 ff ff       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    55c5:	eb 57                	jmp    561e <_ZN4rtvc17RenderApplication13creatInstanceEv+0x45e>
        throw std::runtime_error("Validation layers requested but not available.");
    55c7:	49 89 c4             	mov    %rax,%r12
    55ca:	48 89 df             	mov    %rbx,%rdi
    55cd:	e8 3e dc ff ff       	call   3210 <__cxa_free_exception@plt>
    55d2:	4c 89 e0             	mov    %r12,%rax
    55d5:	48 89 c7             	mov    %rax,%rdi
    55d8:	e8 d3 e0 ff ff       	call   36b0 <_Unwind_Resume@plt>
        throw std::runtime_error("Failed to create instance.");
    55dd:	49 89 c4             	mov    %rax,%r12
    55e0:	48 89 df             	mov    %rbx,%rdi
    55e3:	e8 28 dc ff ff       	call   3210 <__cxa_free_exception@plt>
    55e8:	4c 89 e3             	mov    %r12,%rbx
    55eb:	eb 17                	jmp    5604 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x444>
}
    55ed:	48 89 c3             	mov    %rax,%rbx
    55f0:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    55f7:	48 89 c7             	mov    %rax,%rdi
    55fa:	e8 0d 36 00 00       	call   8c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    55ff:	eb 03                	jmp    5604 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x444>
    5601:	48 89 c3             	mov    %rax,%rbx
    5604:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    560b:	48 89 c7             	mov    %rax,%rdi
    560e:	e8 7f e7 ff ff       	call   3d92 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    5613:	48 89 d8             	mov    %rbx,%rax
    5616:	48 89 c7             	mov    %rax,%rdi
    5619:	e8 92 e0 ff ff       	call   36b0 <_Unwind_Resume@plt>
    561e:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
    5625:	5b                   	pop    %rbx
    5626:	41 5c                	pop    %r12
    5628:	5d                   	pop    %rbp
    5629:	c3                   	ret

000000000000562a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::checkDeviceExtensionSupport(VkPhysicalDevice device)
{
    562a:	55                   	push   %rbp
    562b:	48 89 e5             	mov    %rsp,%rbp
    562e:	53                   	push   %rbx
    562f:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    5636:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    563d:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
    uint32_t extensionCount;
    vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount, nullptr);
    5644:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    5648:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    564f:	b9 00 00 00 00       	mov    $0x0,%ecx
    5654:	be 00 00 00 00       	mov    $0x0,%esi
    5659:	48 89 c7             	mov    %rax,%rdi
    565c:	e8 ef de ff ff       	call   3550 <vkEnumerateDeviceExtensionProperties@plt>

    std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    5661:	8b 45 a8             	mov    -0x58(%rbp),%eax
    5664:	89 c3                	mov    %eax,%ebx
    5666:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    566a:	48 89 c7             	mov    %rax,%rdi
    566d:	e8 ec 34 00 00       	call   8b5e <_ZNSaI21VkExtensionPropertiesEC1Ev>
    5672:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    5676:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    567a:	48 89 de             	mov    %rbx,%rsi
    567d:	48 89 c7             	mov    %rax,%rdi
    5680:	e8 11 35 00 00       	call   8b96 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    5685:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    5689:	48 89 c7             	mov    %rax,%rdi
    568c:	e8 e9 34 00 00       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    5691:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5695:	48 89 c7             	mov    %rax,%rdi
    5698:	e8 b3 35 00 00       	call   8c50 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    569d:	48 89 c1             	mov    %rax,%rcx
    56a0:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    56a4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    56ab:	be 00 00 00 00       	mov    $0x0,%esi
    56b0:	48 89 c7             	mov    %rax,%rdi
    56b3:	e8 98 de ff ff       	call   3550 <vkEnumerateDeviceExtensionProperties@plt>
                                         availableExtensions.data());

    std::set<std::string> requiredExtensions{deviceExtensions.begin(), deviceExtensions.end()};
    56b8:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    56bf:	48 83 c0 68          	add    $0x68,%rax
    56c3:	48 89 c7             	mov    %rax,%rdi
    56c6:	e8 bb 37 00 00       	call   8e86 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    56cb:	48 89 c3             	mov    %rax,%rbx
    56ce:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    56d5:	48 83 c0 68          	add    $0x68,%rax
    56d9:	48 89 c7             	mov    %rax,%rdi
    56dc:	e8 cb 37 00 00       	call   8eac <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    56e1:	48 89 c2             	mov    %rax,%rdx
    56e4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    56eb:	48 89 de             	mov    %rbx,%rsi
    56ee:	48 89 c7             	mov    %rax,%rdi
    56f1:	e8 2c 3b 00 00       	call   9222 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>

    for (const auto &extension : availableExtensions)
    56f6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    56fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    56fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5702:	48 89 c7             	mov    %rax,%rdi
    5705:	e8 64 39 00 00       	call   906e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    570a:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    5711:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5715:	48 89 c7             	mov    %rax,%rdi
    5718:	e8 77 39 00 00       	call   9094 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    571d:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    5724:	eb 73                	jmp    5799 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x16f>
    5726:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    572d:	48 89 c7             	mov    %rax,%rdi
    5730:	e8 e7 39 00 00       	call   911c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    5735:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
        requiredExtensions.erase(extension.extensionName);
    5739:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    573d:	48 89 c7             	mov    %rax,%rdi
    5740:	e8 7b df ff ff       	call   36c0 <_ZNSaIcEC1Ev@plt>
    5745:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    5749:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    574d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5751:	48 89 ce             	mov    %rcx,%rsi
    5754:	48 89 c7             	mov    %rax,%rdi
    5757:	e8 6e 3b 00 00       	call   92ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    575c:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    5760:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5767:	48 89 d6             	mov    %rdx,%rsi
    576a:	48 89 c7             	mov    %rax,%rdi
    576d:	e8 f8 3b 00 00       	call   936a <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    5772:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5776:	48 89 c7             	mov    %rax,%rdi
    5779:	e8 42 da ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    577e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5782:	48 89 c7             	mov    %rax,%rdi
    5785:	e8 56 dc ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    for (const auto &extension : availableExtensions)
    578a:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    5791:	48 89 c7             	mov    %rax,%rdi
    5794:	e8 5f 39 00 00       	call   90f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5799:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    57a0:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    57a7:	48 89 d6             	mov    %rdx,%rsi
    57aa:	48 89 c7             	mov    %rax,%rdi
    57ad:	e8 0b 39 00 00       	call   90bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    57b2:	84 c0                	test   %al,%al
    57b4:	0f 85 6c ff ff ff    	jne    5726 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xfc>

    return requiredExtensions.empty();
    57ba:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    57c1:	48 89 c7             	mov    %rax,%rdi
    57c4:	e8 c7 3b 00 00       	call   9390 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>
    57c9:	89 c3                	mov    %eax,%ebx
    57cb:	90                   	nop
}
    57cc:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    57d3:	48 89 c7             	mov    %rax,%rdi
    57d6:	e8 13 31 00 00       	call   88ee <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    57db:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    57df:	48 89 c7             	mov    %rax,%rdi
    57e2:	e8 25 34 00 00       	call   8c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    return requiredExtensions.empty();
    57e7:	89 d8                	mov    %ebx,%eax
    57e9:	eb 65                	jmp    5850 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x226>
    std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    57eb:	48 89 c3             	mov    %rax,%rbx
    57ee:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    57f2:	48 89 c7             	mov    %rax,%rdi
    57f5:	e8 80 33 00 00       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    57fa:	48 89 d8             	mov    %rbx,%rax
    57fd:	48 89 c7             	mov    %rax,%rdi
    5800:	e8 ab de ff ff       	call   36b0 <_Unwind_Resume@plt>
        requiredExtensions.erase(extension.extensionName);
    5805:	48 89 c3             	mov    %rax,%rbx
    5808:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    580c:	48 89 c7             	mov    %rax,%rdi
    580f:	e8 ac d9 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5814:	eb 03                	jmp    5819 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1ef>
    5816:	48 89 c3             	mov    %rax,%rbx
    5819:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    581d:	48 89 c7             	mov    %rax,%rdi
    5820:	e8 bb db ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
}
    5825:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    582c:	48 89 c7             	mov    %rax,%rdi
    582f:	e8 ba 30 00 00       	call   88ee <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    5834:	eb 03                	jmp    5839 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x20f>
    5836:	48 89 c3             	mov    %rax,%rbx
    5839:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    583d:	48 89 c7             	mov    %rax,%rdi
    5840:	e8 c7 33 00 00       	call   8c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    5845:	48 89 d8             	mov    %rbx,%rax
    5848:	48 89 c7             	mov    %rax,%rdi
    584b:	e8 60 de ff ff       	call   36b0 <_Unwind_Resume@plt>
    5850:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5854:	c9                   	leave
    5855:	c3                   	ret

0000000000005856 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::SwapChainSupportDetails
rtvc::RenderApplication::querySwapChainSupport(VkPhysicalDevice device)
{
    5856:	55                   	push   %rbp
    5857:	48 89 e5             	mov    %rsp,%rbp
    585a:	53                   	push   %rbx
    585b:	48 83 ec 38          	sub    $0x38,%rsp
    585f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5863:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5867:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    SwapChainSupportDetails details;
    586b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    586f:	48 89 c7             	mov    %rax,%rdi
    5872:	e8 3b 31 00 00       	call   89b2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>

    vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface, &details.capabilities);
    5877:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    587b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    587f:	48 8b 48 58          	mov    0x58(%rax),%rcx
    5883:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5887:	48 89 ce             	mov    %rcx,%rsi
    588a:	48 89 c7             	mov    %rax,%rdi
    588d:	e8 2e da ff ff       	call   32c0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>

    uint32_t formatCount;
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount, nullptr);
    5892:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5896:	48 8b 70 58          	mov    0x58(%rax),%rsi
    589a:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    589e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    58a2:	b9 00 00 00 00       	mov    $0x0,%ecx
    58a7:	48 89 c7             	mov    %rax,%rdi
    58aa:	e8 51 dc ff ff       	call   3500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
    if (formatCount != 0)
    58af:	8b 45 ec             	mov    -0x14(%rbp),%eax
    58b2:	85 c0                	test   %eax,%eax
    58b4:	74 43                	je     58f9 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xa3>
    {
        details.formats.resize(formatCount);
    58b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58ba:	48 83 c0 38          	add    $0x38,%rax
    58be:	8b 55 ec             	mov    -0x14(%rbp),%edx
    58c1:	89 d2                	mov    %edx,%edx
    58c3:	48 89 d6             	mov    %rdx,%rsi
    58c6:	48 89 c7             	mov    %rax,%rdi
    58c9:	e8 88 3c 00 00       	call   9556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>
        vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    58ce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58d2:	48 83 c0 38          	add    $0x38,%rax
    58d6:	48 89 c7             	mov    %rax,%rdi
    58d9:	e8 fe 3c 00 00       	call   95dc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    58de:	48 89 c1             	mov    %rax,%rcx
    58e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    58e5:	48 8b 70 58          	mov    0x58(%rax),%rsi
    58e9:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    58ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    58f1:	48 89 c7             	mov    %rax,%rdi
    58f4:	e8 07 dc ff ff       	call   3500 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                             details.formats.data());
    }

    uint32_t presentModeCount;
    vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount, nullptr);
    58f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    58fd:	48 8b 70 58          	mov    0x58(%rax),%rsi
    5901:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5905:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5909:	b9 00 00 00 00       	mov    $0x0,%ecx
    590e:	48 89 c7             	mov    %rax,%rdi
    5911:	e8 fa db ff ff       	call   3510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    if (presentModeCount != 0)
    5916:	8b 45 e8             	mov    -0x18(%rbp),%eax
    5919:	85 c0                	test   %eax,%eax
    591b:	74 5f                	je     597c <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
    {
        details.presentModes.resize(presentModeCount);
    591d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5921:	48 83 c0 50          	add    $0x50,%rax
    5925:	8b 55 e8             	mov    -0x18(%rbp),%edx
    5928:	89 d2                	mov    %edx,%edx
    592a:	48 89 d6             	mov    %rdx,%rsi
    592d:	48 89 c7             	mov    %rax,%rdi
    5930:	e8 cb 3c 00 00       	call   9600 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>
        vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount,
    5935:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5939:	48 83 c0 50          	add    $0x50,%rax
    593d:	48 89 c7             	mov    %rax,%rdi
    5940:	e8 41 3d 00 00       	call   9686 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    5945:	48 89 c1             	mov    %rax,%rcx
    5948:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    594c:	48 8b 70 58          	mov    0x58(%rax),%rsi
    5950:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    5954:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5958:	48 89 c7             	mov    %rax,%rdi
    595b:	e8 b0 db ff ff       	call   3510 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
                                                  details.presentModes.data());
    }

    return details;
    5960:	eb 1a                	jmp    597c <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
}
    5962:	48 89 c3             	mov    %rax,%rbx
    5965:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5969:	48 89 c7             	mov    %rax,%rdi
    596c:	e8 71 30 00 00       	call   89e2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    5971:	48 89 d8             	mov    %rbx,%rax
    5974:	48 89 c7             	mov    %rax,%rdi
    5977:	e8 34 dd ff ff       	call   36b0 <_Unwind_Resume@plt>
    return details;
    597c:	90                   	nop
}
    597d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5981:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5985:	c9                   	leave
    5986:	c3                   	ret
    5987:	90                   	nop

0000000000005988 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::isSuitableDevice(VkPhysicalDevice device)
{
    5988:	55                   	push   %rbp
    5989:	48 89 e5             	mov    %rsp,%rbp
    598c:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    5993:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    599a:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    QueueFamilyIndices indices = findQueueFamilies(device);
    59a1:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    59a8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    59af:	48 89 d6             	mov    %rdx,%rsi
    59b2:	48 89 c7             	mov    %rax,%rdi
    59b5:	e8 ea 02 00 00       	call   5ca4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    59ba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    59be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

    bool extensionsSupported = checkDeviceExtensionSupport(device);
    59c2:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    59c9:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    59d0:	48 89 d6             	mov    %rdx,%rsi
    59d3:	48 89 c7             	mov    %rax,%rdi
    59d6:	e8 4f fc ff ff       	call   562a <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    59db:	88 45 fe             	mov    %al,-0x2(%rbp)

    bool swapChainAdequate = false;
    59de:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    if (extensionsSupported)
    59e2:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    59e6:	74 72                	je     5a5a <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xd2>
    {
        SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    59e8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    59ef:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    59f6:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    59fd:	48 89 ce             	mov    %rcx,%rsi
    5a00:	48 89 c7             	mov    %rax,%rdi
    5a03:	e8 4e fe ff ff       	call   5856 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
        swapChainAdequate = !swapChainSupport.formats.empty() &&
    5a08:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    5a0f:	48 83 c0 38          	add    $0x38,%rax
    5a13:	48 89 c7             	mov    %rax,%rdi
    5a16:	e8 8f 3c 00 00       	call   96aa <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    5a1b:	83 f0 01             	xor    $0x1,%eax
    5a1e:	84 c0                	test   %al,%al
    5a20:	74 21                	je     5a43 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
                            !swapChainSupport.presentModes.empty();
    5a22:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    5a29:	48 83 c0 50          	add    $0x50,%rax
    5a2d:	48 89 c7             	mov    %rax,%rdi
    5a30:	e8 b7 3c 00 00       	call   96ec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>
    5a35:	83 f0 01             	xor    $0x1,%eax
        swapChainAdequate = !swapChainSupport.formats.empty() &&
    5a38:	84 c0                	test   %al,%al
    5a3a:	74 07                	je     5a43 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
    5a3c:	b8 01 00 00 00       	mov    $0x1,%eax
    5a41:	eb 05                	jmp    5a48 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xc0>
    5a43:	b8 00 00 00 00       	mov    $0x0,%eax
    5a48:	88 45 ff             	mov    %al,-0x1(%rbp)
    }
    5a4b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    5a52:	48 89 c7             	mov    %rax,%rdi
    5a55:	e8 88 2f 00 00       	call   89e2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>

    return indices.isComplete() &&
    5a5a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    5a5e:	48 89 c7             	mov    %rax,%rdi
    5a61:	e8 2e 2e 00 00       	call   8894 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
           extensionsSupported &&
    5a66:	84 c0                	test   %al,%al
    5a68:	74 13                	je     5a7d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    return indices.isComplete() &&
    5a6a:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    5a6e:	74 0d                	je     5a7d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
           extensionsSupported &&
    5a70:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    5a74:	74 07                	je     5a7d <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    5a76:	b8 01 00 00 00       	mov    $0x1,%eax
    5a7b:	eb 05                	jmp    5a82 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xfa>
    5a7d:	b8 00 00 00 00       	mov    $0x0,%eax
           swapChainAdequate;
}
    5a82:	c9                   	leave
    5a83:	c3                   	ret

0000000000005a84 <_ZN4rtvc17RenderApplication21rateDeviceSuitabilityEP18VkPhysicalDevice_T>:

int rtvc::RenderApplication::rateDeviceSuitability(
    [[maybe_unused]] VkPhysicalDevice device)
{
    5a84:	55                   	push   %rbp
    5a85:	48 89 e5             	mov    %rsp,%rbp
    5a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    return 0;
    5a90:	b8 00 00 00 00       	mov    $0x0,%eax
}
    5a95:	5d                   	pop    %rbp
    5a96:	c3                   	ret
    5a97:	90                   	nop

0000000000005a98 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>:

void rtvc::RenderApplication::selectPhysicalDevice()
{
    5a98:	55                   	push   %rbp
    5a99:	48 89 e5             	mov    %rsp,%rbp
    5a9c:	41 54                	push   %r12
    5a9e:	53                   	push   %rbx
    5a9f:	48 83 ec 50          	sub    $0x50,%rsp
    5aa3:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    uint32_t deviceCount = 0;
    5aa7:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
    vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    5aae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5ab2:	48 8b 40 10          	mov    0x10(%rax),%rax
    5ab6:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    5aba:	ba 00 00 00 00       	mov    $0x0,%edx
    5abf:	48 89 ce             	mov    %rcx,%rsi
    5ac2:	48 89 c7             	mov    %rax,%rdi
    5ac5:	e8 96 d6 ff ff       	call   3160 <vkEnumeratePhysicalDevices@plt>

    if (deviceCount == 0)
    5aca:	8b 45 d8             	mov    -0x28(%rbp),%eax
    5acd:	85 c0                	test   %eax,%eax
    5acf:	75 3b                	jne    5b0c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x74>
        throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    5ad1:	bf 10 00 00 00       	mov    $0x10,%edi
    5ad6:	e8 65 d6 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5adb:	48 89 c3             	mov    %rax,%rbx
    5ade:	48 8d 05 53 f8 00 00 	lea    0xf853(%rip),%rax        # 15338 <_ZN6__pstl9execution2v1L5unseqE+0xd1>
    5ae5:	48 89 c6             	mov    %rax,%rsi
    5ae8:	48 89 df             	mov    %rbx,%rdi
    5aeb:	e8 f0 d5 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5af0:	48 8b 05 b1 b4 01 00 	mov    0x1b4b1(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5af7:	48 89 c2             	mov    %rax,%rdx
    5afa:	48 8d 05 3f b2 01 00 	lea    0x1b23f(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b01:	48 89 c6             	mov    %rax,%rsi
    5b04:	48 89 df             	mov    %rbx,%rdi
    5b07:	e8 74 db ff ff       	call   3680 <__cxa_throw@plt>

    std::vector<VkPhysicalDevice> devices{deviceCount};
    5b0c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    5b0f:	89 c3                	mov    %eax,%ebx
    5b11:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5b15:	48 89 c7             	mov    %rax,%rdi
    5b18:	e8 11 3c 00 00       	call   972e <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    5b1d:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    5b21:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5b25:	48 89 de             	mov    %rbx,%rsi
    5b28:	48 89 c7             	mov    %rax,%rdi
    5b2b:	e8 36 3c 00 00       	call   9766 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    5b30:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5b34:	48 89 c7             	mov    %rax,%rdi
    5b37:	e8 0e 3c 00 00       	call   974a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    vkEnumeratePhysicalDevices(instance, &deviceCount, devices.data());
    5b3c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5b40:	48 89 c7             	mov    %rax,%rdi
    5b43:	e8 d8 3c 00 00       	call   9820 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    5b48:	48 89 c2             	mov    %rax,%rdx
    5b4b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5b4f:	48 8b 40 10          	mov    0x10(%rax),%rax
    5b53:	48 8d 4d d8          	lea    -0x28(%rbp),%rcx
    5b57:	48 89 ce             	mov    %rcx,%rsi
    5b5a:	48 89 c7             	mov    %rax,%rdi
    5b5d:	e8 fe d5 ff ff       	call   3160 <vkEnumeratePhysicalDevices@plt>

    for (const auto &device : devices)
    5b62:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5b66:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5b6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b6e:	48 89 c7             	mov    %rax,%rdi
    5b71:	e8 ce 3c 00 00       	call   9844 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    5b76:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    5b7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5b7e:	48 89 c7             	mov    %rax,%rdi
    5b81:	e8 e4 3c 00 00       	call   986a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    5b86:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b8a:	eb 47                	jmp    5bd3 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x13b>
    5b8c:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    5b90:	48 89 c7             	mov    %rax,%rdi
    5b93:	e8 56 3d 00 00       	call   98ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    5b98:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    {
        if (isSuitableDevice(device))
    5b9c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5ba0:	48 8b 10             	mov    (%rax),%rdx
    5ba3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5ba7:	48 89 d6             	mov    %rdx,%rsi
    5baa:	48 89 c7             	mov    %rax,%rdi
    5bad:	e8 d6 fd ff ff       	call   5988 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    5bb2:	84 c0                	test   %al,%al
    5bb4:	74 11                	je     5bc7 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x12f>
        {
            physicalDevice = device;
    5bb6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5bba:	48 8b 10             	mov    (%rax),%rdx
    5bbd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5bc1:	48 89 50 40          	mov    %rdx,0x40(%rax)
            break;
    5bc5:	eb 23                	jmp    5bea <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x152>
    for (const auto &device : devices)
    5bc7:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    5bcb:	48 89 c7             	mov    %rax,%rdi
    5bce:	e8 fb 3c 00 00       	call   98ce <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    5bd3:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    5bd7:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    5bdb:	48 89 d6             	mov    %rdx,%rsi
    5bde:	48 89 c7             	mov    %rax,%rdi
    5be1:	e8 ad 3c 00 00       	call   9893 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    5be6:	84 c0                	test   %al,%al
    5be8:	75 a2                	jne    5b8c <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0xf4>
        }
    }

    if (physicalDevice == VK_NULL_HANDLE)
    5bea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5bee:	48 8b 40 40          	mov    0x40(%rax),%rax
    5bf2:	48 85 c0             	test   %rax,%rax
    5bf5:	75 3b                	jne    5c32 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x19a>
        throw std::runtime_error("Failed to find a suitable GPU.");
    5bf7:	bf 10 00 00 00       	mov    $0x10,%edi
    5bfc:	e8 3f d5 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    5c01:	48 89 c3             	mov    %rax,%rbx
    5c04:	48 8d 05 5d f7 00 00 	lea    0xf75d(%rip),%rax        # 15368 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    5c0b:	48 89 c6             	mov    %rax,%rsi
    5c0e:	48 89 df             	mov    %rbx,%rdi
    5c11:	e8 ca d4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    5c16:	48 8b 05 8b b3 01 00 	mov    0x1b38b(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5c1d:	48 89 c2             	mov    %rax,%rdx
    5c20:	48 8d 05 19 b1 01 00 	lea    0x1b119(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5c27:	48 89 c6             	mov    %rax,%rsi
    5c2a:	48 89 df             	mov    %rbx,%rdi
    5c2d:	e8 4e da ff ff       	call   3680 <__cxa_throw@plt>

    // std::cout << "Found GPUs with Vulkan support:\n";
    // for (const auto &device : devices)
    //     std::cout << '\t' << device << '\n';
}
    5c32:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c36:	48 89 c7             	mov    %rax,%rdi
    5c39:	e8 9e 3b 00 00       	call   97dc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5c3e:	eb 5a                	jmp    5c9a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x202>
        throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    5c40:	49 89 c4             	mov    %rax,%r12
    5c43:	48 89 df             	mov    %rbx,%rdi
    5c46:	e8 c5 d5 ff ff       	call   3210 <__cxa_free_exception@plt>
    5c4b:	4c 89 e0             	mov    %r12,%rax
    5c4e:	48 89 c7             	mov    %rax,%rdi
    5c51:	e8 5a da ff ff       	call   36b0 <_Unwind_Resume@plt>
    std::vector<VkPhysicalDevice> devices{deviceCount};
    5c56:	48 89 c3             	mov    %rax,%rbx
    5c59:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    5c5d:	48 89 c7             	mov    %rax,%rdi
    5c60:	e8 e5 3a 00 00       	call   974a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    5c65:	48 89 d8             	mov    %rbx,%rax
    5c68:	48 89 c7             	mov    %rax,%rdi
    5c6b:	e8 40 da ff ff       	call   36b0 <_Unwind_Resume@plt>
        throw std::runtime_error("Failed to find a suitable GPU.");
    5c70:	49 89 c4             	mov    %rax,%r12
    5c73:	48 89 df             	mov    %rbx,%rdi
    5c76:	e8 95 d5 ff ff       	call   3210 <__cxa_free_exception@plt>
    5c7b:	4c 89 e3             	mov    %r12,%rbx
    5c7e:	eb 03                	jmp    5c83 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x1eb>
}
    5c80:	48 89 c3             	mov    %rax,%rbx
    5c83:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    5c87:	48 89 c7             	mov    %rax,%rdi
    5c8a:	e8 4d 3b 00 00       	call   97dc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5c8f:	48 89 d8             	mov    %rbx,%rax
    5c92:	48 89 c7             	mov    %rax,%rdi
    5c95:	e8 16 da ff ff       	call   36b0 <_Unwind_Resume@plt>
    5c9a:	48 83 c4 50          	add    $0x50,%rsp
    5c9e:	5b                   	pop    %rbx
    5c9f:	41 5c                	pop    %r12
    5ca1:	5d                   	pop    %rbp
    5ca2:	c3                   	ret
    5ca3:	90                   	nop

0000000000005ca4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::QueueFamilyIndices
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device)
{
    5ca4:	55                   	push   %rbp
    5ca5:	48 89 e5             	mov    %rsp,%rbp
    5ca8:	53                   	push   %rbx
    5ca9:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    5cb0:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    5cb7:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    QueueFamilyIndices indices{};
    5cbe:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5cc2:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    uint32_t queueFamilyCount = 0;
    5cc6:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    5ccd:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    5cd1:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5cd8:	ba 00 00 00 00       	mov    $0x0,%edx
    5cdd:	48 89 ce             	mov    %rcx,%rsi
    5ce0:	48 89 c7             	mov    %rax,%rdi
    5ce3:	e8 38 d5 ff ff       	call   3220 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

    std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    5ce8:	8b 45 ac             	mov    -0x54(%rbp),%eax
    5ceb:	89 c3                	mov    %eax,%ebx
    5ced:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5cf1:	48 89 c7             	mov    %rax,%rdi
    5cf4:	e8 07 3c 00 00       	call   9900 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    5cf9:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5cfd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d01:	48 89 de             	mov    %rbx,%rsi
    5d04:	48 89 c7             	mov    %rax,%rdi
    5d07:	e8 2c 3c 00 00       	call   9938 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    5d0c:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5d10:	48 89 c7             	mov    %rax,%rdi
    5d13:	e8 04 3c 00 00       	call   991c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, queueFamilies.data());
    5d18:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d1c:	48 89 c7             	mov    %rax,%rdi
    5d1f:	e8 ce 3c 00 00       	call   99f2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    5d24:	48 89 c2             	mov    %rax,%rdx
    5d27:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    5d2b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5d32:	48 89 ce             	mov    %rcx,%rsi
    5d35:	48 89 c7             	mov    %rax,%rdi
    5d38:	e8 e3 d4 ff ff       	call   3220 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

    int i = 0;
    5d3d:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
    for (const auto &queueFamily : queueFamilies)
    5d44:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5d48:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    5d4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d50:	48 89 c7             	mov    %rax,%rdi
    5d53:	e8 be 3c 00 00       	call   9a16 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    5d58:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    5d5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d60:	48 89 c7             	mov    %rax,%rdi
    5d63:	e8 d4 3c 00 00       	call   9a3c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    5d68:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    5d6f:	e9 a6 00 00 00       	jmp    5e1a <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
    5d74:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5d78:	48 89 c7             	mov    %rax,%rdi
    5d7b:	e8 40 3d 00 00       	call   9ac0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    5d80:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    {
        if (queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT)
    5d84:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5d88:	8b 00                	mov    (%rax),%eax
    5d8a:	83 e0 01             	and    $0x1,%eax
    5d8d:	85 c0                	test   %eax,%eax
    5d8f:	74 13                	je     5da4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x100>
            indices.graphicsFamily = i;
    5d91:	48 8d 55 8c          	lea    -0x74(%rbp),%rdx
    5d95:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5d99:	48 89 d6             	mov    %rdx,%rsi
    5d9c:	48 89 c7             	mov    %rax,%rdi
    5d9f:	e8 2e 3d 00 00       	call   9ad2 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

        VkBool32 presentSupport = false;
    5da4:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    5dab:	00 00 00 
        vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    5dae:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    5db5:	48 8b 50 58          	mov    0x58(%rax),%rdx
    5db9:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5dbc:	89 c6                	mov    %eax,%esi
    5dbe:	48 8d 8d 74 ff ff ff 	lea    -0x8c(%rbp),%rcx
    5dc5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    5dcc:	48 89 c7             	mov    %rax,%rdi
    5dcf:	e8 fc d5 ff ff       	call   33d0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>

        if (presentSupport)
    5dd4:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    5dda:	85 c0                	test   %eax,%eax
    5ddc:	74 17                	je     5df5 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x151>
            indices.presentFamily = i;
    5dde:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    5de2:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    5de6:	48 83 c2 08          	add    $0x8,%rdx
    5dea:	48 89 c6             	mov    %rax,%rsi
    5ded:	48 89 d7             	mov    %rdx,%rdi
    5df0:	e8 dd 3c 00 00       	call   9ad2 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

        if (indices.isComplete())
    5df5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5df9:	48 89 c7             	mov    %rax,%rdi
    5dfc:	e8 93 2a 00 00       	call   8894 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
    5e01:	84 c0                	test   %al,%al
    5e03:	75 35                	jne    5e3a <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x196>
            break;

        ++i;
    5e05:	8b 45 8c             	mov    -0x74(%rbp),%eax
    5e08:	83 c0 01             	add    $0x1,%eax
    5e0b:	89 45 8c             	mov    %eax,-0x74(%rbp)
    for (const auto &queueFamily : queueFamilies)
    5e0e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5e12:	48 89 c7             	mov    %rax,%rdi
    5e15:	e8 86 3c 00 00       	call   9aa0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    5e1a:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    5e21:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    5e25:	48 89 d6             	mov    %rdx,%rsi
    5e28:	48 89 c7             	mov    %rax,%rdi
    5e2b:	e8 35 3c 00 00       	call   9a65 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    5e30:	84 c0                	test   %al,%al
    5e32:	0f 85 3c ff ff ff    	jne    5d74 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xd0>
    5e38:	eb 01                	jmp    5e3b <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x197>
            break;
    5e3a:	90                   	nop
    }

    return indices;
    5e3b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    5e3f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    5e43:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    5e47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
}
    5e4b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5e4f:	48 89 c7             	mov    %rax,%rdi
    5e52:	e8 57 3b 00 00       	call   99ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    return indices;
    5e57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5e5b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5e5f:	eb 34                	jmp    5e95 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1f1>
    std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    5e61:	48 89 c3             	mov    %rax,%rbx
    5e64:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5e68:	48 89 c7             	mov    %rax,%rdi
    5e6b:	e8 ac 3a 00 00       	call   991c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    5e70:	48 89 d8             	mov    %rbx,%rax
    5e73:	48 89 c7             	mov    %rax,%rdi
    5e76:	e8 35 d8 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    5e7b:	48 89 c3             	mov    %rax,%rbx
    5e7e:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5e82:	48 89 c7             	mov    %rax,%rdi
    5e85:	e8 24 3b 00 00       	call   99ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    5e8a:	48 89 d8             	mov    %rbx,%rax
    5e8d:	48 89 c7             	mov    %rax,%rdi
    5e90:	e8 1b d8 ff ff       	call   36b0 <_Unwind_Resume@plt>
    5e95:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5e99:	c9                   	leave
    5e9a:	c3                   	ret
    5e9b:	90                   	nop

0000000000005e9c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>:

void rtvc::RenderApplication::createLogicalDevice()
{
    5e9c:	55                   	push   %rbp
    5e9d:	48 89 e5             	mov    %rsp,%rbp
    5ea0:	41 55                	push   %r13
    5ea2:	41 54                	push   %r12
    5ea4:	53                   	push   %rbx
    5ea5:	48 81 ec 08 02 00 00 	sub    $0x208,%rsp
    5eac:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
    QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    5eb3:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5eba:	48 8b 50 40          	mov    0x40(%rax),%rdx
    5ebe:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    5ec5:	48 89 d6             	mov    %rdx,%rsi
    5ec8:	48 89 c7             	mov    %rax,%rdi
    5ecb:	e8 d4 fd ff ff       	call   5ca4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    5ed0:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5ed4:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)

    std::vector<VkDeviceQueueCreateInfo> queueCreateInfos;
    5ed8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5edc:	48 89 c7             	mov    %rax,%rdi
    5edf:	e8 66 2b 00 00       	call   8a4a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    std::set<uint32_t> uniqueQueueFamilies = {indices.graphicsFamily.value(),
    5ee4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5ee8:	48 89 c7             	mov    %rax,%rdi
    5eeb:	e8 76 2b 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    5ef0:	8b 00                	mov    (%rax),%eax
                                              indices.presentFamily.value()};
    5ef2:	89 45 c8             	mov    %eax,-0x38(%rbp)
    5ef5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5ef9:	48 83 c0 08          	add    $0x8,%rax
    5efd:	48 89 c7             	mov    %rax,%rdi
    5f00:	e8 61 2b 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    5f05:	8b 00                	mov    (%rax),%eax
    5f07:	89 45 cc             	mov    %eax,-0x34(%rbp)
    5f0a:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    5f0e:	49 89 c4             	mov    %rax,%r12
    5f11:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    5f17:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    5f1b:	48 89 c7             	mov    %rax,%rdi
    5f1e:	e8 3d 3d 00 00       	call   9c60 <_ZNSaIjEC1Ev>
    5f23:	4c 8d 45 d3          	lea    -0x2d(%rbp),%r8
    5f27:	48 8d 55 d2          	lea    -0x2e(%rbp),%rdx
    5f2b:	4c 89 e6             	mov    %r12,%rsi
    5f2e:	4c 89 ef             	mov    %r13,%rdi
    5f31:	4c 89 e1             	mov    %r12,%rcx
    5f34:	4c 89 eb             	mov    %r13,%rbx
    5f37:	48 89 df             	mov    %rbx,%rdi
    5f3a:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5f41:	48 89 d1             	mov    %rdx,%rcx
    5f44:	48 89 fa             	mov    %rdi,%rdx
    5f47:	48 89 c7             	mov    %rax,%rdi
    5f4a:	e8 49 3d 00 00       	call   9c98 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>
    5f4f:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    5f53:	48 89 c7             	mov    %rax,%rdi
    5f56:	e8 21 3d 00 00       	call   9c7c <_ZNSaIjED1Ev>

    float queuePriority = 1.0f;
    5f5b:	f3 0f 10 05 5d f7 00 	movss  0xf75d(%rip),%xmm0        # 156c0 <_ZN6__pstl9execution2v1L5unseqE+0x459>
    5f62:	00 
    5f63:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    5f6a:	ff 
    for (uint32_t queueFamily : uniqueQueueFamilies)
    5f6b:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    5f72:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    5f76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f7a:	48 89 c7             	mov    %rax,%rdi
    5f7d:	e8 36 3e 00 00       	call   9db8 <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>
    5f82:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    5f89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f8d:	48 89 c7             	mov    %rax,%rdi
    5f90:	e8 3d 3e 00 00       	call   9dd2 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>
    5f95:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    5f9c:	eb 7e                	jmp    601c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x180>
    5f9e:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    5fa5:	48 89 c7             	mov    %rax,%rdi
    5fa8:	e8 89 3e 00 00       	call   9e36 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>
    5fad:	8b 00                	mov    (%rax),%eax
    5faf:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    {
        VkDeviceQueueCreateInfo queueCreateInfo{};
    5fb2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5fb6:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    5fbd:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
    5fc4:	66 0f d6 85 10 fe ff 	movq   %xmm0,-0x1f0(%rbp)
    5fcb:	ff 
        queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    5fcc:	c7 85 f0 fd ff ff 02 	movl   $0x2,-0x210(%rbp)
    5fd3:	00 00 00 
        queueCreateInfo.queueFamilyIndex = queueFamily;
    5fd6:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    5fd9:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
        queueCreateInfo.queueCount = 1;
    5fdf:	c7 85 08 fe ff ff 01 	movl   $0x1,-0x1f8(%rbp)
    5fe6:	00 00 00 
        queueCreateInfo.pQueuePriorities = &queuePriority;
    5fe9:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
    5ff0:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
        queueCreateInfos.push_back(queueCreateInfo);
    5ff7:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    5ffe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6002:	48 89 d6             	mov    %rdx,%rsi
    6005:	48 89 c7             	mov    %rax,%rdi
    6008:	e8 47 3e 00 00       	call   9e54 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>
    for (uint32_t queueFamily : uniqueQueueFamilies)
    600d:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    6014:	48 89 c7             	mov    %rax,%rdi
    6017:	e8 f2 3d 00 00       	call   9e0e <_ZNSt23_Rb_tree_const_iteratorIjEppEv>
    601c:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    6023:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    602a:	48 89 d6             	mov    %rdx,%rsi
    602d:	48 89 c7             	mov    %rax,%rdi
    6030:	e8 b7 3d 00 00       	call   9dec <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>
    6035:	84 c0                	test   %al,%al
    6037:	0f 85 61 ff ff ff    	jne    5f9e <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x102>
    }

    VkPhysicalDeviceFeatures deviceFeatures{};
    603d:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    6044:	b8 00 00 00 00       	mov    $0x0,%eax
    6049:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    604e:	48 89 d7             	mov    %rdx,%rdi
    6051:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    6054:	48 89 fa             	mov    %rdi,%rdx
    6057:	89 02                	mov    %eax,(%rdx)
    6059:	48 83 c2 04          	add    $0x4,%rdx

    VkDeviceCreateInfo createInfo{};
    605d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6061:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    6068:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    606f:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    6076:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    607d:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    6084:	ff 
    createInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    6085:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    608c:	00 00 00 
    createInfo.queueCreateInfoCount = queueCreateInfos.size();
    608f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6093:	48 89 c7             	mov    %rax,%rdi
    6096:	e8 35 3e 00 00       	call   9ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    609b:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
    createInfo.pQueueCreateInfos = queueCreateInfos.data();
    60a1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    60a5:	48 89 c7             	mov    %rax,%rdi
    60a8:	e8 51 3e 00 00       	call   9efe <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>
    60ad:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
    createInfo.pEnabledFeatures = &deviceFeatures;
    60b4:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    60bb:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    createInfo.enabledExtensionCount = static_cast<uint32_t>(deviceExtensions.size());
    60c2:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    60c9:	48 83 c0 68          	add    $0x68,%rax
    60cd:	48 89 c7             	mov    %rax,%rdi
    60d0:	e8 2d 2f 00 00       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    60d5:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
    createInfo.ppEnabledExtensionNames = deviceExtensions.data();
    60db:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    60e2:	48 83 c0 68          	add    $0x68,%rax
    60e6:	48 89 c7             	mov    %rax,%rdi
    60e9:	e8 5c 2f 00 00       	call   904a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    60ee:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

    if (enableValidationLayers)
    60f5:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    60fc:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    6100:	84 c0                	test   %al,%al
    6102:	74 35                	je     6139 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x29d>
    {
        createInfo.enabledLayerCount = static_cast<uint32_t>(validationLayers.size());
    6104:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    610b:	48 83 c0 18          	add    $0x18,%rax
    610f:	48 89 c7             	mov    %rax,%rdi
    6112:	e8 eb 2e 00 00       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    6117:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
        createInfo.ppEnabledLayerNames = validationLayers.data();
    611d:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    6124:	48 83 c0 18          	add    $0x18,%rax
    6128:	48 89 c7             	mov    %rax,%rdi
    612b:	e8 1a 2f 00 00       	call   904a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    6130:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
    6137:	eb 0a                	jmp    6143 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x2a7>
    }
    else
    {
        createInfo.enabledLayerCount = 0;
    6139:	c7 85 50 fe ff ff 00 	movl   $0x0,-0x1b0(%rbp)
    6140:	00 00 00 
    }

    if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) != VK_SUCCESS)
    6143:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    614a:	48 8d 50 48          	lea    0x48(%rax),%rdx
    614e:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    6155:	48 8b 40 40          	mov    0x40(%rax),%rax
    6159:	48 8d b5 30 fe ff ff 	lea    -0x1d0(%rbp),%rsi
    6160:	48 89 d1             	mov    %rdx,%rcx
    6163:	ba 00 00 00 00       	mov    $0x0,%edx
    6168:	48 89 c7             	mov    %rax,%rdi
    616b:	e8 50 d4 ff ff       	call   35c0 <vkCreateDevice@plt>
    6170:	85 c0                	test   %eax,%eax
    6172:	0f 95 c0             	setne  %al
    6175:	84 c0                	test   %al,%al
    6177:	74 3b                	je     61b4 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x318>
        throw std::runtime_error("Failed to create logical device.");
    6179:	bf 10 00 00 00       	mov    $0x10,%edi
    617e:	e8 bd cf ff ff       	call   3140 <__cxa_allocate_exception@plt>
    6183:	48 89 c3             	mov    %rax,%rbx
    6186:	48 8d 05 fb f1 00 00 	lea    0xf1fb(%rip),%rax        # 15388 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    618d:	48 89 c6             	mov    %rax,%rsi
    6190:	48 89 df             	mov    %rbx,%rdi
    6193:	e8 48 cf ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    6198:	48 8b 05 09 ae 01 00 	mov    0x1ae09(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    619f:	48 89 c2             	mov    %rax,%rdx
    61a2:	48 8d 05 97 ab 01 00 	lea    0x1ab97(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    61a9:	48 89 c6             	mov    %rax,%rsi
    61ac:	48 89 df             	mov    %rbx,%rdi
    61af:	e8 cc d4 ff ff       	call   3680 <__cxa_throw@plt>

    vkGetDeviceQueue(device, indices.graphicsFamily.value(), 0, &graphicsQueue);
    61b4:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    61bb:	48 8d 58 50          	lea    0x50(%rax),%rbx
    61bf:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    61c3:	48 89 c7             	mov    %rax,%rdi
    61c6:	e8 9b 28 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    61cb:	8b 30                	mov    (%rax),%esi
    61cd:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    61d4:	48 8b 40 48          	mov    0x48(%rax),%rax
    61d8:	48 89 d9             	mov    %rbx,%rcx
    61db:	ba 00 00 00 00       	mov    $0x0,%edx
    61e0:	48 89 c7             	mov    %rax,%rdi
    61e3:	e8 48 d3 ff ff       	call   3530 <vkGetDeviceQueue@plt>
    vkGetDeviceQueue(device, indices.presentFamily.value(), 0, &presentQueue);
    61e8:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    61ef:	48 8d 58 60          	lea    0x60(%rax),%rbx
    61f3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    61f7:	48 83 c0 08          	add    $0x8,%rax
    61fb:	48 89 c7             	mov    %rax,%rdi
    61fe:	e8 63 28 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    6203:	8b 30                	mov    (%rax),%esi
    6205:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    620c:	48 8b 40 48          	mov    0x48(%rax),%rax
    6210:	48 89 d9             	mov    %rbx,%rcx
    6213:	ba 00 00 00 00       	mov    $0x0,%edx
    6218:	48 89 c7             	mov    %rax,%rdi
    621b:	e8 10 d3 ff ff       	call   3530 <vkGetDeviceQueue@plt>
}
    6220:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    6227:	48 89 c7             	mov    %rax,%rdi
    622a:	e8 7b 28 00 00       	call   8aaa <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    622f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6233:	48 89 c7             	mov    %rax,%rdi
    6236:	e8 9d 39 00 00       	call   9bd8 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    623b:	eb 4f                	jmp    628c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3f0>
                                              indices.presentFamily.value()};
    623d:	48 89 c3             	mov    %rax,%rbx
    6240:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    6244:	48 89 c7             	mov    %rax,%rdi
    6247:	e8 30 3a 00 00       	call   9c7c <_ZNSaIjED1Ev>
    624c:	eb 27                	jmp    6275 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3d9>
        throw std::runtime_error("Failed to create logical device.");
    624e:	49 89 c4             	mov    %rax,%r12
    6251:	48 89 df             	mov    %rbx,%rdi
    6254:	e8 b7 cf ff ff       	call   3210 <__cxa_free_exception@plt>
    6259:	4c 89 e3             	mov    %r12,%rbx
    625c:	eb 03                	jmp    6261 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3c5>
}
    625e:	48 89 c3             	mov    %rax,%rbx
    6261:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    6268:	48 89 c7             	mov    %rax,%rdi
    626b:	e8 3a 28 00 00       	call   8aaa <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    6270:	eb 03                	jmp    6275 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3d9>
    6272:	48 89 c3             	mov    %rax,%rbx
    6275:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    6279:	48 89 c7             	mov    %rax,%rdi
    627c:	e8 57 39 00 00       	call   9bd8 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    6281:	48 89 d8             	mov    %rbx,%rax
    6284:	48 89 c7             	mov    %rax,%rdi
    6287:	e8 24 d4 ff ff       	call   36b0 <_Unwind_Resume@plt>
    628c:	48 81 c4 08 02 00 00 	add    $0x208,%rsp
    6293:	5b                   	pop    %rbx
    6294:	41 5c                	pop    %r12
    6296:	41 5d                	pop    %r13
    6298:	5d                   	pop    %rbp
    6299:	c3                   	ret

000000000000629a <_ZN4rtvc17RenderApplication13createSurfaceEv>:

void rtvc::RenderApplication::createSurface()
{
    629a:	55                   	push   %rbp
    629b:	48 89 e5             	mov    %rsp,%rbp
    629e:	41 54                	push   %r12
    62a0:	53                   	push   %rbx
    62a1:	48 83 ec 10          	sub    $0x10,%rsp
    62a5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    if (glfwCreateWindowSurface(instance, window.ref, nullptr, &surface) != VK_SUCCESS)
    62a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62ad:	48 8d 50 58          	lea    0x58(%rax),%rdx
    62b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62b5:	48 8b 30             	mov    (%rax),%rsi
    62b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    62bc:	48 8b 40 10          	mov    0x10(%rax),%rax
    62c0:	48 89 d1             	mov    %rdx,%rcx
    62c3:	ba 00 00 00 00       	mov    $0x0,%edx
    62c8:	48 89 c7             	mov    %rax,%rdi
    62cb:	e8 10 d3 ff ff       	call   35e0 <glfwCreateWindowSurface@plt>
    62d0:	85 c0                	test   %eax,%eax
    62d2:	0f 95 c0             	setne  %al
    62d5:	84 c0                	test   %al,%al
    62d7:	74 51                	je     632a <_ZN4rtvc17RenderApplication13createSurfaceEv+0x90>
        throw std::runtime_error("Failed to create window surface.");
    62d9:	bf 10 00 00 00       	mov    $0x10,%edi
    62de:	e8 5d ce ff ff       	call   3140 <__cxa_allocate_exception@plt>
    62e3:	48 89 c3             	mov    %rax,%rbx
    62e6:	48 8d 05 c3 f0 00 00 	lea    0xf0c3(%rip),%rax        # 153b0 <_ZN6__pstl9execution2v1L5unseqE+0x149>
    62ed:	48 89 c6             	mov    %rax,%rsi
    62f0:	48 89 df             	mov    %rbx,%rdi
    62f3:	e8 e8 cd ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    62f8:	48 8b 05 a9 ac 01 00 	mov    0x1aca9(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    62ff:	48 89 c2             	mov    %rax,%rdx
    6302:	48 8d 05 37 aa 01 00 	lea    0x1aa37(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6309:	48 89 c6             	mov    %rax,%rsi
    630c:	48 89 df             	mov    %rbx,%rdi
    630f:	e8 6c d3 ff ff       	call   3680 <__cxa_throw@plt>
    6314:	49 89 c4             	mov    %rax,%r12
    6317:	48 89 df             	mov    %rbx,%rdi
    631a:	e8 f1 ce ff ff       	call   3210 <__cxa_free_exception@plt>
    631f:	4c 89 e0             	mov    %r12,%rax
    6322:	48 89 c7             	mov    %rax,%rdi
    6325:	e8 86 d3 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    632a:	90                   	nop
    632b:	48 83 c4 10          	add    $0x10,%rsp
    632f:	5b                   	pop    %rbx
    6330:	41 5c                	pop    %r12
    6332:	5d                   	pop    %rbp
    6333:	c3                   	ret

0000000000006334 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>:

VkSurfaceFormatKHR rtvc::RenderApplication::selectSwapSurfaceFormat(
    const std::vector<VkSurfaceFormatKHR> &availableFormats)
{
    6334:	55                   	push   %rbp
    6335:	48 89 e5             	mov    %rsp,%rbp
    6338:	48 83 ec 30          	sub    $0x30,%rsp
    633c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6340:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    for (const auto &availableFormat : availableFormats)
    6344:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6348:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    634c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6350:	48 89 c7             	mov    %rax,%rdi
    6353:	e8 ca 3b 00 00       	call   9f22 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    6358:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    635c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6360:	48 89 c7             	mov    %rax,%rdi
    6363:	e8 e0 3b 00 00       	call   9f48 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    6368:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    636c:	eb 3b                	jmp    63a9 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x75>
    636e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6372:	48 89 c7             	mov    %rax,%rdi
    6375:	e8 52 3c 00 00       	call   9fcc <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    637a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
        if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    637e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6382:	8b 00                	mov    (%rax),%eax
    6384:	83 f8 32             	cmp    $0x32,%eax
    6387:	75 14                	jne    639d <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
            availableFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
    6389:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    638d:	8b 40 04             	mov    0x4(%rax),%eax
        if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    6390:	85 c0                	test   %eax,%eax
    6392:	75 09                	jne    639d <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
            return availableFormat;
    6394:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6398:	48 8b 00             	mov    (%rax),%rax
    639b:	eb 37                	jmp    63d4 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0xa0>
    for (const auto &availableFormat : availableFormats)
    639d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    63a1:	48 89 c7             	mov    %rax,%rdi
    63a4:	e8 03 3c 00 00       	call   9fac <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    63a9:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    63ad:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    63b1:	48 89 d6             	mov    %rdx,%rsi
    63b4:	48 89 c7             	mov    %rax,%rdi
    63b7:	e8 b5 3b 00 00       	call   9f71 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    63bc:	84 c0                	test   %al,%al
    63be:	75 ae                	jne    636e <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x3a>

    return availableFormats[0];
    63c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    63c4:	be 00 00 00 00       	mov    $0x0,%esi
    63c9:	48 89 c7             	mov    %rax,%rdi
    63cc:	e8 0d 3c 00 00       	call   9fde <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    63d1:	48 8b 00             	mov    (%rax),%rax
}
    63d4:	c9                   	leave
    63d5:	c3                   	ret

00000000000063d6 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>:

VkPresentModeKHR rtvc::RenderApplication::selectSwapPresentMode(
    const std::vector<VkPresentModeKHR> &availablePresentModes)
{
    63d6:	55                   	push   %rbp
    63d7:	48 89 e5             	mov    %rsp,%rbp
    63da:	48 83 ec 30          	sub    $0x30,%rsp
    63de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    63e2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    for (const auto &availablePresentMode : availablePresentModes)
    63e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    63ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    63ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f2:	48 89 c7             	mov    %rax,%rdi
    63f5:	e8 04 3c 00 00       	call   9ffe <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    63fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    63fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6402:	48 89 c7             	mov    %rax,%rdi
    6405:	e8 1a 3c 00 00       	call   a024 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    640a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    640e:	eb 2f                	jmp    643f <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x69>
    6410:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6414:	48 89 c7             	mov    %rax,%rdi
    6417:	e8 8c 3c 00 00       	call   a0a8 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    641c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
        if (availablePresentMode == VK_PRESENT_MODE_MAILBOX_KHR)
    6420:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6424:	8b 00                	mov    (%rax),%eax
    6426:	83 f8 01             	cmp    $0x1,%eax
    6429:	75 08                	jne    6433 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x5d>
            return availablePresentMode;
    642b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    642f:	8b 00                	mov    (%rax),%eax
    6431:	eb 28                	jmp    645b <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x85>
    for (const auto &availablePresentMode : availablePresentModes)
    6433:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6437:	48 89 c7             	mov    %rax,%rdi
    643a:	e8 49 3c 00 00       	call   a088 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    643f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    6443:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6447:	48 89 d6             	mov    %rdx,%rsi
    644a:	48 89 c7             	mov    %rax,%rdi
    644d:	e8 fb 3b 00 00       	call   a04d <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6452:	84 c0                	test   %al,%al
    6454:	75 ba                	jne    6410 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x3a>

    return VK_PRESENT_MODE_FIFO_KHR;
    6456:	b8 02 00 00 00       	mov    $0x2,%eax
}
    645b:	c9                   	leave
    645c:	c3                   	ret
    645d:	90                   	nop

000000000000645e <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>:

VkExtent2D rtvc::RenderApplication::selectSwapExtent(
    const VkSurfaceCapabilitiesKHR &capabilities)
{
    645e:	55                   	push   %rbp
    645f:	48 89 e5             	mov    %rsp,%rbp
    6462:	53                   	push   %rbx
    6463:	48 83 ec 28          	sub    $0x28,%rsp
    6467:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    646b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    646f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6473:	8b 58 08             	mov    0x8(%rax),%ebx
    6476:	e8 0d 24 00 00       	call   8888 <_ZNSt14numeric_limitsIjE3maxEv>
    647b:	39 c3                	cmp    %eax,%ebx
    647d:	0f 95 c0             	setne  %al
    6480:	84 c0                	test   %al,%al
    6482:	74 0a                	je     648e <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0x30>
        return capabilities.currentExtent;
    6484:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6488:	48 8b 40 08          	mov    0x8(%rax),%rax
    648c:	eb 76                	jmp    6504 <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0xa6>
    else
    {
        int width, height;
        glfwGetFramebufferSize(window.ref, &width, &height);
    648e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6492:	48 8b 00             	mov    (%rax),%rax
    6495:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6499:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
    649d:	48 89 ce             	mov    %rcx,%rsi
    64a0:	48 89 c7             	mov    %rax,%rdi
    64a3:	e8 78 d1 ff ff       	call   3620 <glfwGetFramebufferSize@plt>

        VkExtent2D actualExtent = {
            static_cast<uint32_t>(width),
    64a8:	8b 45 ec             	mov    -0x14(%rbp),%eax
            static_cast<uint32_t>(height)};
    64ab:	89 45 e0             	mov    %eax,-0x20(%rbp)
    64ae:	8b 45 e8             	mov    -0x18(%rbp),%eax
    64b1:	89 45 e4             	mov    %eax,-0x1c(%rbp)

        actualExtent.width = std::clamp(actualExtent.width,
                                        capabilities.minImageExtent.width,
                                        capabilities.maxImageExtent.width);
    64b4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64b8:	48 8d 50 18          	lea    0x18(%rax),%rdx
                                        capabilities.minImageExtent.width,
    64bc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64c0:	48 8d 48 10          	lea    0x10(%rax),%rcx
        actualExtent.width = std::clamp(actualExtent.width,
    64c4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    64c8:	48 89 ce             	mov    %rcx,%rsi
    64cb:	48 89 c7             	mov    %rax,%rdi
    64ce:	e8 e6 3b 00 00       	call   a0b9 <_ZSt5clampIjERKT_S2_S2_S2_>
    64d3:	8b 00                	mov    (%rax),%eax
    64d5:	89 45 e0             	mov    %eax,-0x20(%rbp)

        actualExtent.height = std::clamp(actualExtent.height,
                                         capabilities.minImageExtent.height,
                                         capabilities.maxImageExtent.height);
    64d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64dc:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
                                         capabilities.minImageExtent.height,
    64e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    64e4:	48 8d 48 14          	lea    0x14(%rax),%rcx
        actualExtent.height = std::clamp(actualExtent.height,
    64e8:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    64ec:	48 83 c0 04          	add    $0x4,%rax
    64f0:	48 89 ce             	mov    %rcx,%rsi
    64f3:	48 89 c7             	mov    %rax,%rdi
    64f6:	e8 be 3b 00 00       	call   a0b9 <_ZSt5clampIjERKT_S2_S2_S2_>
    64fb:	8b 00                	mov    (%rax),%eax
    64fd:	89 45 e4             	mov    %eax,-0x1c(%rbp)
        return actualExtent;
    6500:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
}
    6504:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6508:	c9                   	leave
    6509:	c3                   	ret

000000000000650a <_ZN4rtvc17RenderApplication15createSwapChainEv>:

void rtvc::RenderApplication::createSwapChain()
{
    650a:	55                   	push   %rbp
    650b:	48 89 e5             	mov    %rsp,%rbp
    650e:	41 54                	push   %r12
    6510:	53                   	push   %rbx
    6511:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    6518:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(physicalDevice);
    651f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6526:	48 8b 50 40          	mov    0x40(%rax),%rdx
    652a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    652e:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
    6535:	48 89 ce             	mov    %rcx,%rsi
    6538:	48 89 c7             	mov    %rax,%rdi
    653b:	e8 16 f3 ff ff       	call   5856 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>

    VkSurfaceFormatKHR surfaceFormat = selectSwapSurfaceFormat(swapChainSupport.formats);
    6540:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6544:	48 8d 50 38          	lea    0x38(%rax),%rdx
    6548:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    654f:	48 89 d6             	mov    %rdx,%rsi
    6552:	48 89 c7             	mov    %rax,%rdi
    6555:	e8 da fd ff ff       	call   6334 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>
    655a:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    VkPresentModeKHR presentMode = selectSwapPresentMode(swapChainSupport.presentModes);
    6561:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    6565:	48 8d 50 50          	lea    0x50(%rax),%rdx
    6569:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6570:	48 89 d6             	mov    %rdx,%rsi
    6573:	48 89 c7             	mov    %rax,%rdi
    6576:	e8 5b fe ff ff       	call   63d6 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>
    657b:	89 45 ec             	mov    %eax,-0x14(%rbp)
    VkExtent2D extent = selectSwapExtent(swapChainSupport.capabilities);
    657e:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    6582:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6589:	48 89 d6             	mov    %rdx,%rsi
    658c:	48 89 c7             	mov    %rax,%rdi
    658f:	e8 ca fe ff ff       	call   645e <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>
    6594:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    659b:	8b 45 80             	mov    -0x80(%rbp),%eax
    659e:	83 c0 01             	add    $0x1,%eax
    65a1:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

    if (swapChainSupport.capabilities.maxImageCount > 0 &&
    65a7:	8b 45 84             	mov    -0x7c(%rbp),%eax
    65aa:	85 c0                	test   %eax,%eax
    65ac:	74 16                	je     65c4 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
        imageCount > swapChainSupport.capabilities.maxImageCount)
    65ae:	8b 55 84             	mov    -0x7c(%rbp),%edx
    65b1:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    if (swapChainSupport.capabilities.maxImageCount > 0 &&
    65b7:	39 c2                	cmp    %eax,%edx
    65b9:	73 09                	jae    65c4 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
        imageCount = swapChainSupport.capabilities.maxImageCount;
    65bb:	8b 45 84             	mov    -0x7c(%rbp),%eax
    65be:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

    VkSwapchainCreateInfoKHR createInfo{};
    65c4:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    65cb:	b8 00 00 00 00       	mov    $0x0,%eax
    65d0:	b9 0d 00 00 00       	mov    $0xd,%ecx
    65d5:	48 89 d7             	mov    %rdx,%rdi
    65d8:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    createInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    65db:	c7 85 00 ff ff ff e8 	movl   $0x3b9acde8,-0x100(%rbp)
    65e2:	cd 9a 3b 
    createInfo.surface = surface;
    65e5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    65ec:	48 8b 40 58          	mov    0x58(%rax),%rax
    65f0:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    createInfo.minImageCount = imageCount;
    65f7:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    65fd:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
    createInfo.imageFormat = surfaceFormat.format;
    6603:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    6609:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
    createInfo.imageColorSpace = surfaceFormat.colorSpace;
    660f:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    6615:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
    createInfo.imageExtent = extent;
    661b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    6622:	48 89 85 2c ff ff ff 	mov    %rax,-0xd4(%rbp)
    createInfo.imageArrayLayers = 1;
    6629:	c7 85 34 ff ff ff 01 	movl   $0x1,-0xcc(%rbp)
    6630:	00 00 00 
    createInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    6633:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    663a:	00 00 00 

    QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    663d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6644:	48 8b 50 40          	mov    0x40(%rax),%rdx
    6648:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    664f:	48 89 d6             	mov    %rdx,%rsi
    6652:	48 89 c7             	mov    %rax,%rdi
    6655:	e8 4a f6 ff ff       	call   5ca4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    665a:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    6661:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
    uint32_t QueueFamilyIndices[] = {indices.graphicsFamily.value(),
    6668:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    666f:	48 89 c7             	mov    %rax,%rdi
    6672:	e8 ef 23 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    6677:	8b 00                	mov    (%rax),%eax
                                     indices.presentFamily.value()};
    6679:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
    667f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    6686:	48 83 c0 08          	add    $0x8,%rax
    668a:	48 89 c7             	mov    %rax,%rdi
    668d:	e8 d4 23 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    6692:	8b 00                	mov    (%rax),%eax
    6694:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)

    if (indices.graphicsFamily != indices.presentFamily)
    669a:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    66a1:	48 8d 50 08          	lea    0x8(%rax),%rdx
    66a5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    66ac:	48 89 d6             	mov    %rdx,%rsi
    66af:	48 89 c7             	mov    %rax,%rdi
    66b2:	e8 64 3a 00 00       	call   a11b <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>
    66b7:	84 c0                	test   %al,%al
    66b9:	74 24                	je     66df <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1d5>
    {
        createInfo.imageSharingMode = VK_SHARING_MODE_CONCURRENT;
    66bb:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    66c2:	00 00 00 
        createInfo.queueFamilyIndexCount = 2;
    66c5:	c7 85 40 ff ff ff 02 	movl   $0x2,-0xc0(%rbp)
    66cc:	00 00 00 
        createInfo.pQueueFamilyIndices = QueueFamilyIndices;
    66cf:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    66d6:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    66dd:	eb 1f                	jmp    66fe <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1f4>
    }
    else
    {
        createInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    66df:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    66e6:	00 00 00 
        createInfo.queueFamilyIndexCount = 0;
    66e9:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    66f0:	00 00 00 
        createInfo.pQueueFamilyIndices = nullptr;
    66f3:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    66fa:	00 00 00 00 
    }

    createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    66fe:	8b 45 a8             	mov    -0x58(%rbp),%eax
    6701:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
    createInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    6707:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
    670e:	00 00 00 
    createInfo.presentMode = presentMode;
    6711:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6714:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
    createInfo.clipped = VK_TRUE;
    671a:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
    6721:	00 00 00 
    createInfo.oldSwapchain = VK_NULL_HANDLE;
    6724:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    672b:	00 00 00 00 

    if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) != VK_SUCCESS)
    672f:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6736:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    673d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    6744:	48 8b 40 48          	mov    0x48(%rax),%rax
    6748:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
    674f:	48 89 d1             	mov    %rdx,%rcx
    6752:	ba 00 00 00 00       	mov    $0x0,%edx
    6757:	48 89 c7             	mov    %rax,%rdi
    675a:	e8 11 cd ff ff       	call   3470 <vkCreateSwapchainKHR@plt>
    675f:	85 c0                	test   %eax,%eax
    6761:	0f 95 c0             	setne  %al
    6764:	84 c0                	test   %al,%al
    6766:	74 3b                	je     67a3 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x299>
        throw std::runtime_error("Failed to create swap chain.");
    6768:	bf 10 00 00 00       	mov    $0x10,%edi
    676d:	e8 ce c9 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    6772:	48 89 c3             	mov    %rax,%rbx
    6775:	48 8d 05 55 ec 00 00 	lea    0xec55(%rip),%rax        # 153d1 <_ZN6__pstl9execution2v1L5unseqE+0x16a>
    677c:	48 89 c6             	mov    %rax,%rsi
    677f:	48 89 df             	mov    %rbx,%rdi
    6782:	e8 59 c9 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    6787:	48 8b 05 1a a8 01 00 	mov    0x1a81a(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    678e:	48 89 c2             	mov    %rax,%rdx
    6791:	48 8d 05 a8 a5 01 00 	lea    0x1a5a8(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6798:	48 89 c6             	mov    %rax,%rsi
    679b:	48 89 df             	mov    %rbx,%rdi
    679e:	e8 dd ce ff ff       	call   3680 <__cxa_throw@plt>

    vkGetSwapchainImagesKHR(device, swapChain, &imageCount, nullptr);
    67a3:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    67aa:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    67b1:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    67b8:	48 8b 40 48          	mov    0x48(%rax),%rax
    67bc:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    67c3:	b9 00 00 00 00       	mov    $0x0,%ecx
    67c8:	48 89 c7             	mov    %rax,%rdi
    67cb:	e8 d0 c9 ff ff       	call   31a0 <vkGetSwapchainImagesKHR@plt>
    swapChainImages.resize(imageCount);
    67d0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    67d7:	48 05 88 00 00 00    	add    $0x88,%rax
    67dd:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    67e3:	89 d2                	mov    %edx,%edx
    67e5:	48 89 d6             	mov    %rdx,%rsi
    67e8:	48 89 c7             	mov    %rax,%rdi
    67eb:	e8 9c 39 00 00       	call   a18c <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>
    vkGetSwapchainImagesKHR(device, swapChain, &imageCount, swapChainImages.data());
    67f0:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    67f7:	48 05 88 00 00 00    	add    $0x88,%rax
    67fd:	48 89 c7             	mov    %rax,%rdi
    6800:	e8 0d 3a 00 00       	call   a212 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    6805:	48 89 c1             	mov    %rax,%rcx
    6808:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    680f:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    6816:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    681d:	48 8b 40 48          	mov    0x48(%rax),%rax
    6821:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    6828:	48 89 c7             	mov    %rax,%rdi
    682b:	e8 70 c9 ff ff       	call   31a0 <vkGetSwapchainImagesKHR@plt>

    swapChainImageFormat = surfaceFormat.format;
    6830:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    6836:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    683d:	89 90 a0 00 00 00    	mov    %edx,0xa0(%rax)
    swapChainExtent = extent;
    6843:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    684a:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    6851:	48 89 90 a4 00 00 00 	mov    %rdx,0xa4(%rax)
}
    6858:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    685c:	48 89 c7             	mov    %rax,%rdi
    685f:	e8 7e 21 00 00       	call   89e2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    6864:	eb 2a                	jmp    6890 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x386>
        throw std::runtime_error("Failed to create swap chain.");
    6866:	49 89 c4             	mov    %rax,%r12
    6869:	48 89 df             	mov    %rbx,%rdi
    686c:	e8 9f c9 ff ff       	call   3210 <__cxa_free_exception@plt>
    6871:	4c 89 e3             	mov    %r12,%rbx
    6874:	eb 03                	jmp    6879 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x36f>
}
    6876:	48 89 c3             	mov    %rax,%rbx
    6879:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    687d:	48 89 c7             	mov    %rax,%rdi
    6880:	e8 5d 21 00 00       	call   89e2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    6885:	48 89 d8             	mov    %rbx,%rax
    6888:	48 89 c7             	mov    %rax,%rdi
    688b:	e8 20 ce ff ff       	call   36b0 <_Unwind_Resume@plt>
    6890:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
    6897:	5b                   	pop    %rbx
    6898:	41 5c                	pop    %r12
    689a:	5d                   	pop    %rbp
    689b:	c3                   	ret

000000000000689c <_ZN4rtvc17RenderApplication16createImageViewsEv>:

void rtvc::RenderApplication::createImageViews()
{
    689c:	55                   	push   %rbp
    689d:	48 89 e5             	mov    %rsp,%rbp
    68a0:	41 54                	push   %r12
    68a2:	53                   	push   %rbx
    68a3:	48 83 ec 70          	sub    $0x70,%rsp
    68a7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    swapChainImageViews.resize(swapChainImages.size());
    68ab:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    68af:	48 8d 98 b0 00 00 00 	lea    0xb0(%rax),%rbx
    68b6:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    68ba:	48 05 88 00 00 00    	add    $0x88,%rax
    68c0:	48 89 c7             	mov    %rax,%rdi
    68c3:	e8 6e 39 00 00       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    68c8:	48 89 c6             	mov    %rax,%rsi
    68cb:	48 89 df             	mov    %rbx,%rdi
    68ce:	e8 87 39 00 00       	call   a25a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
    for (size_t i = 0; i < swapChainImages.size(); i++)
    68d3:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    68da:	00 
    68db:	e9 15 01 00 00       	jmp    69f5 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x159>
    {
        VkImageViewCreateInfo createInfo{};
    68e0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    68e4:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    68e8:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    68ec:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    68f0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    68f4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
        createInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    68f8:	c7 45 90 0f 00 00 00 	movl   $0xf,-0x70(%rbp)
        createInfo.image = swapChainImages[i];
    68ff:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6903:	48 8d 90 88 00 00 00 	lea    0x88(%rax),%rdx
    690a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    690e:	48 89 c6             	mov    %rax,%rsi
    6911:	48 89 d7             	mov    %rdx,%rdi
    6914:	e8 c7 39 00 00       	call   a2e0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    6919:	48 8b 00             	mov    (%rax),%rax
    691c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
        createInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    6920:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
        createInfo.format = swapChainImageFormat;
    6927:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    692b:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    6931:	89 45 b4             	mov    %eax,-0x4c(%rbp)

        createInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    6934:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
        createInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    693b:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
        createInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    6942:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
        createInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    6949:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)

        createInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    6950:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
        createInfo.subresourceRange.baseArrayLayer = 0;
    6957:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
        createInfo.subresourceRange.levelCount = 1;
    695e:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
        createInfo.subresourceRange.baseArrayLayer = 0;
    6965:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
        createInfo.subresourceRange.layerCount = 1;
    696c:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

        if (vkCreateImageView(device, &createInfo, nullptr, &swapChainImageViews[i]) != VK_SUCCESS)
    6973:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6977:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
    697e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6982:	48 89 c6             	mov    %rax,%rsi
    6985:	48 89 d7             	mov    %rdx,%rdi
    6988:	e8 73 39 00 00       	call   a300 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    698d:	48 89 c2             	mov    %rax,%rdx
    6990:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    6994:	48 8b 40 48          	mov    0x48(%rax),%rax
    6998:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    699c:	48 89 d1             	mov    %rdx,%rcx
    699f:	ba 00 00 00 00       	mov    $0x0,%edx
    69a4:	48 89 c7             	mov    %rax,%rdi
    69a7:	e8 e4 c9 ff ff       	call   3390 <vkCreateImageView@plt>
    69ac:	85 c0                	test   %eax,%eax
    69ae:	0f 95 c0             	setne  %al
    69b1:	84 c0                	test   %al,%al
    69b3:	74 3b                	je     69f0 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x154>
            throw std::runtime_error("Failed to create image view.");
    69b5:	bf 10 00 00 00       	mov    $0x10,%edi
    69ba:	e8 81 c7 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    69bf:	48 89 c3             	mov    %rax,%rbx
    69c2:	48 8d 05 25 ea 00 00 	lea    0xea25(%rip),%rax        # 153ee <_ZN6__pstl9execution2v1L5unseqE+0x187>
    69c9:	48 89 c6             	mov    %rax,%rsi
    69cc:	48 89 df             	mov    %rbx,%rdi
    69cf:	e8 0c c7 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    69d4:	48 8b 05 cd a5 01 00 	mov    0x1a5cd(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    69db:	48 89 c2             	mov    %rax,%rdx
    69de:	48 8d 05 5b a3 01 00 	lea    0x1a35b(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    69e5:	48 89 c6             	mov    %rax,%rsi
    69e8:	48 89 df             	mov    %rbx,%rdi
    69eb:	e8 90 cc ff ff       	call   3680 <__cxa_throw@plt>
    for (size_t i = 0; i < swapChainImages.size(); i++)
    69f0:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    69f5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    69f9:	48 05 88 00 00 00    	add    $0x88,%rax
    69ff:	48 89 c7             	mov    %rax,%rdi
    6a02:	e8 2f 38 00 00       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    6a07:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    6a0b:	0f 92 c0             	setb   %al
    6a0e:	84 c0                	test   %al,%al
    6a10:	0f 85 ca fe ff ff    	jne    68e0 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x44>
    }
}
    6a16:	eb 16                	jmp    6a2e <_ZN4rtvc17RenderApplication16createImageViewsEv+0x192>
            throw std::runtime_error("Failed to create image view.");
    6a18:	49 89 c4             	mov    %rax,%r12
    6a1b:	48 89 df             	mov    %rbx,%rdi
    6a1e:	e8 ed c7 ff ff       	call   3210 <__cxa_free_exception@plt>
    6a23:	4c 89 e0             	mov    %r12,%rax
    6a26:	48 89 c7             	mov    %rax,%rdi
    6a29:	e8 82 cc ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    6a2e:	48 83 c4 70          	add    $0x70,%rsp
    6a32:	5b                   	pop    %rbx
    6a33:	41 5c                	pop    %r12
    6a35:	5d                   	pop    %rbp
    6a36:	c3                   	ret
    6a37:	90                   	nop

0000000000006a38 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

std::vector<char> rtvc::RenderApplication::readShader(const std::string &filePath)
{
    6a38:	55                   	push   %rbp
    6a39:	48 89 e5             	mov    %rsp,%rbp
    6a3c:	41 54                	push   %r12
    6a3e:	53                   	push   %rbx
    6a3f:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    6a46:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    6a4d:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    6a54:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
    std::ifstream file(filePath, std::ios::ate | std::ios::binary);
    6a5b:	be 04 00 00 00       	mov    $0x4,%esi
    6a60:	bf 02 00 00 00       	mov    $0x2,%edi
    6a65:	e8 2e 1d 00 00       	call   8798 <_ZStorSt13_Ios_OpenmodeS_>
    6a6a:	89 c2                	mov    %eax,%edx
    6a6c:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
    6a73:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6a7a:	48 89 ce             	mov    %rcx,%rsi
    6a7d:	48 89 c7             	mov    %rax,%rdi
    6a80:	e8 bb cb ff ff       	call   3640 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>

    if (!file.is_open())
    6a85:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6a8c:	48 89 c7             	mov    %rax,%rdi
    6a8f:	e8 9c cb ff ff       	call   3630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    6a94:	83 f0 01             	xor    $0x1,%eax
    6a97:	84 c0                	test   %al,%al
    6a99:	74 3b                	je     6ad6 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
        throw std::runtime_error("Failed to open shader file");
    6a9b:	bf 10 00 00 00       	mov    $0x10,%edi
    6aa0:	e8 9b c6 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    6aa5:	48 89 c3             	mov    %rax,%rbx
    6aa8:	48 8d 05 5c e9 00 00 	lea    0xe95c(%rip),%rax        # 1540b <_ZN6__pstl9execution2v1L5unseqE+0x1a4>
    6aaf:	48 89 c6             	mov    %rax,%rsi
    6ab2:	48 89 df             	mov    %rbx,%rdi
    6ab5:	e8 26 c6 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    6aba:	48 8b 05 e7 a4 01 00 	mov    0x1a4e7(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ac1:	48 89 c2             	mov    %rax,%rdx
    6ac4:	48 8d 05 75 a2 01 00 	lea    0x1a275(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6acb:	48 89 c6             	mov    %rax,%rsi
    6ace:	48 89 df             	mov    %rbx,%rdi
    6ad1:	e8 aa cb ff ff       	call   3680 <__cxa_throw@plt>

    size_t fileSize = static_cast<size_t>(file.tellg());
    6ad6:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6add:	48 89 c7             	mov    %rax,%rdi
    6ae0:	e8 ab cb ff ff       	call   3690 <_ZNSi5tellgEv@plt>
    6ae5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    6ae9:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    6aed:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    6af1:	48 89 c7             	mov    %rax,%rdi
    6af4:	e8 27 38 00 00       	call   a320 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    6af9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::vector<char> buffer(fileSize);
    6afd:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6b01:	48 89 c7             	mov    %rax,%rdi
    6b04:	e8 b7 cb ff ff       	call   36c0 <_ZNSaIcEC1Ev@plt>
    6b09:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    6b0d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6b11:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6b18:	48 89 ce             	mov    %rcx,%rsi
    6b1b:	48 89 c7             	mov    %rax,%rdi
    6b1e:	e8 0f 38 00 00       	call   a332 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    6b23:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6b27:	48 89 c7             	mov    %rax,%rdi
    6b2a:	e8 b1 c8 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>

    file.seekg(0);
    6b2f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    6b33:	be 00 00 00 00       	mov    $0x0,%esi
    6b38:	48 89 c7             	mov    %rax,%rdi
    6b3b:	e8 ac 38 00 00       	call   a3ec <_ZNSt4fposI11__mbstate_tEC1El>
    6b40:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6b44:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6b48:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6b4f:	48 89 ce             	mov    %rcx,%rsi
    6b52:	48 89 c7             	mov    %rax,%rdi
    6b55:	e8 96 c9 ff ff       	call   34f0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
    file.read(buffer.data(), fileSize);
    6b5a:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6b5e:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6b65:	48 89 c7             	mov    %rax,%rdi
    6b68:	e8 af 38 00 00       	call   a41c <_ZNSt6vectorIcSaIcEE4dataEv>
    6b6d:	48 89 c1             	mov    %rax,%rcx
    6b70:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6b77:	48 89 da             	mov    %rbx,%rdx
    6b7a:	48 89 ce             	mov    %rcx,%rsi
    6b7d:	48 89 c7             	mov    %rax,%rdi
    6b80:	e8 5b c9 ff ff       	call   34e0 <_ZNSi4readEPcl@plt>

    file.close();
    6b85:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6b8c:	48 89 c7             	mov    %rax,%rdi
    6b8f:	e8 dc c4 ff ff       	call   3070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>
    return buffer;
    6b94:	90                   	nop
}
    6b95:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6b9c:	48 89 c7             	mov    %rax,%rdi
    6b9f:	e8 ec c4 ff ff       	call   3090 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    return buffer;
    6ba4:	eb 52                	jmp    6bf8 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>
        throw std::runtime_error("Failed to open shader file");
    6ba6:	49 89 c4             	mov    %rax,%r12
    6ba9:	48 89 df             	mov    %rbx,%rdi
    6bac:	e8 5f c6 ff ff       	call   3210 <__cxa_free_exception@plt>
    6bb1:	4c 89 e3             	mov    %r12,%rbx
    6bb4:	eb 28                	jmp    6bde <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    std::vector<char> buffer(fileSize);
    6bb6:	48 89 c3             	mov    %rax,%rbx
    6bb9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    6bbd:	48 89 c7             	mov    %rax,%rdi
    6bc0:	e8 1b c8 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    6bc5:	eb 17                	jmp    6bde <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
}
    6bc7:	48 89 c3             	mov    %rax,%rbx
    6bca:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6bd1:	48 89 c7             	mov    %rax,%rdi
    6bd4:	e8 cf 37 00 00       	call   a3a8 <_ZNSt6vectorIcSaIcEED1Ev>
    6bd9:	eb 03                	jmp    6bde <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    6bdb:	48 89 c3             	mov    %rax,%rbx
    6bde:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    6be5:	48 89 c7             	mov    %rax,%rdi
    6be8:	e8 a3 c4 ff ff       	call   3090 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    6bed:	48 89 d8             	mov    %rbx,%rax
    6bf0:	48 89 c7             	mov    %rax,%rdi
    6bf3:	e8 b8 ca ff ff       	call   36b0 <_Unwind_Resume@plt>
    6bf8:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    6bff:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    6c06:	5b                   	pop    %rbx
    6c07:	41 5c                	pop    %r12
    6c09:	5d                   	pop    %rbp
    6c0a:	c3                   	ret
    6c0b:	90                   	nop

0000000000006c0c <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>:

VkShaderModule rtvc::RenderApplication::createShaderModule(
    const std::vector<char> &code)
{
    6c0c:	55                   	push   %rbp
    6c0d:	48 89 e5             	mov    %rsp,%rbp
    6c10:	41 54                	push   %r12
    6c12:	53                   	push   %rbx
    6c13:	48 83 ec 50          	sub    $0x50,%rsp
    6c17:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    6c1b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    VkShaderModuleCreateInfo createInfo{};
    6c1f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6c23:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    6c27:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    6c2b:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    6c30:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
    createInfo.codeSize = code.size();
    6c37:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6c3b:	48 89 c7             	mov    %rax,%rdi
    6c3e:	e8 41 38 00 00       	call   a484 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    6c43:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    6c47:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    6c4b:	48 89 c7             	mov    %rax,%rdi
    6c4e:	e8 51 38 00 00       	call   a4a4 <_ZNKSt6vectorIcSaIcEE4dataEv>
    6c53:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    VkShaderModule shaderModule;
    if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) != VK_SUCCESS)
    6c57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    6c5b:	48 8b 40 48          	mov    0x48(%rax),%rax
    6c5f:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    6c63:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    6c67:	48 89 d1             	mov    %rdx,%rcx
    6c6a:	ba 00 00 00 00       	mov    $0x0,%edx
    6c6f:	48 89 c7             	mov    %rax,%rdi
    6c72:	e8 d9 c5 ff ff       	call   3250 <vkCreateShaderModule@plt>
    6c77:	85 c0                	test   %eax,%eax
    6c79:	0f 95 c0             	setne  %al
    6c7c:	84 c0                	test   %al,%al
    6c7e:	74 3b                	je     6cbb <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xaf>
        throw std::runtime_error("Failed to create shader module.");
    6c80:	bf 10 00 00 00       	mov    $0x10,%edi
    6c85:	e8 b6 c4 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    6c8a:	48 89 c3             	mov    %rax,%rbx
    6c8d:	48 8d 05 94 e7 00 00 	lea    0xe794(%rip),%rax        # 15428 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    6c94:	48 89 c6             	mov    %rax,%rsi
    6c97:	48 89 df             	mov    %rbx,%rdi
    6c9a:	e8 41 c4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    6c9f:	48 8b 05 02 a3 01 00 	mov    0x1a302(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6ca6:	48 89 c2             	mov    %rax,%rdx
    6ca9:	48 8d 05 90 a0 01 00 	lea    0x1a090(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cb0:	48 89 c6             	mov    %rax,%rsi
    6cb3:	48 89 df             	mov    %rbx,%rdi
    6cb6:	e8 c5 c9 ff ff       	call   3680 <__cxa_throw@plt>

    return shaderModule;
    6cbb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    6cbf:	eb 16                	jmp    6cd7 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xcb>
        throw std::runtime_error("Failed to create shader module.");
    6cc1:	49 89 c4             	mov    %rax,%r12
    6cc4:	48 89 df             	mov    %rbx,%rdi
    6cc7:	e8 44 c5 ff ff       	call   3210 <__cxa_free_exception@plt>
    6ccc:	4c 89 e0             	mov    %r12,%rax
    6ccf:	48 89 c7             	mov    %rax,%rdi
    6cd2:	e8 d9 c9 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    6cd7:	48 83 c4 50          	add    $0x50,%rsp
    6cdb:	5b                   	pop    %rbx
    6cdc:	41 5c                	pop    %r12
    6cde:	5d                   	pop    %rbp
    6cdf:	c3                   	ret

0000000000006ce0 <_ZN4rtvc17RenderApplication16createRenderPassEv>:

void rtvc::RenderApplication::createRenderPass()
{
    6ce0:	55                   	push   %rbp
    6ce1:	48 89 e5             	mov    %rsp,%rbp
    6ce4:	41 54                	push   %r12
    6ce6:	53                   	push   %rbx
    6ce7:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    6cee:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
    VkAttachmentDescription colorAttachment{};
    6cf5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6cf9:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    6cfd:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    6d01:	66 0f 7e 45 e0       	movd   %xmm0,-0x20(%rbp)
    colorAttachment.format = swapChainImageFormat;
    6d06:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6d0d:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    6d13:	89 45 c4             	mov    %eax,-0x3c(%rbp)
    colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    6d16:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    6d1d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
    colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    6d24:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
    colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    6d2b:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
    colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    6d32:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    6d39:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    6d40:	c7 45 e0 ea cd 9a 3b 	movl   $0x3b9acdea,-0x20(%rbp)

    VkAttachmentReference colorAttachmentRef{};
    6d47:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    6d4e:	00 
    colorAttachmentRef.attachment = 0;
    6d4f:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    6d56:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)

    VkSubpassDescription subpass{};
    6d5d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6d61:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    6d68:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    6d6c:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    6d70:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    6d74:	66 0f d6 45 b0       	movq   %xmm0,-0x50(%rbp)
    subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    6d79:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    6d80:	00 00 00 
    subpass.colorAttachmentCount = 1;
    6d83:	c7 45 88 01 00 00 00 	movl   $0x1,-0x78(%rbp)
    subpass.pColorAttachments = &colorAttachmentRef;
    6d8a:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    6d8e:	48 89 45 90          	mov    %rax,-0x70(%rbp)

    VkSubpassDependency dependency{};
    6d92:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6d96:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    6d9d:	0f 11 85 5c ff ff ff 	movups %xmm0,-0xa4(%rbp)
    dependency.srcSubpass = VK_SUBPASS_EXTERNAL;
    6da4:	c7 85 50 ff ff ff ff 	movl   $0xffffffff,-0xb0(%rbp)
    6dab:	ff ff ff 
    dependency.dstSubpass = 0;
    6dae:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    6db5:	00 00 00 
    dependency.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    6db8:	c7 85 58 ff ff ff 00 	movl   $0x400,-0xa8(%rbp)
    6dbf:	04 00 00 
    dependency.srcAccessMask = 0;
    6dc2:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    6dc9:	00 00 00 
    dependency.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    6dcc:	c7 85 5c ff ff ff 00 	movl   $0x400,-0xa4(%rbp)
    6dd3:	04 00 00 
    dependency.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    6dd6:	c7 85 64 ff ff ff 00 	movl   $0x100,-0x9c(%rbp)
    6ddd:	01 00 00 

    VkRenderPassCreateInfo renderPassInfo{};
    6de0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6de4:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    6deb:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    6df2:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    6df9:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    6e00:	c7 85 10 ff ff ff 26 	movl   $0x26,-0xf0(%rbp)
    6e07:	00 00 00 
    renderPassInfo.attachmentCount = 1;
    6e0a:	c7 85 24 ff ff ff 01 	movl   $0x1,-0xdc(%rbp)
    6e11:	00 00 00 
    renderPassInfo.pAttachments = &colorAttachment;
    6e14:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    6e18:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    renderPassInfo.subpassCount = 1;
    6e1f:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    6e26:	00 00 00 
    renderPassInfo.pSubpasses = &subpass;
    6e29:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6e30:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    renderPassInfo.dependencyCount = 1;
    6e37:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    6e3e:	00 00 00 
    renderPassInfo.pDependencies = &dependency;
    6e41:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    6e48:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)

    if (vkCreateRenderPass(device, &renderPassInfo,
    6e4f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6e56:	48 8d 90 c8 00 00 00 	lea    0xc8(%rax),%rdx
    6e5d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    6e64:	48 8b 40 48          	mov    0x48(%rax),%rax
    6e68:	48 8d b5 10 ff ff ff 	lea    -0xf0(%rbp),%rsi
    6e6f:	48 89 d1             	mov    %rdx,%rcx
    6e72:	ba 00 00 00 00       	mov    $0x0,%edx
    6e77:	48 89 c7             	mov    %rax,%rdi
    6e7a:	e8 51 c3 ff ff       	call   31d0 <vkCreateRenderPass@plt>
                           nullptr, &renderPass) != VK_SUCCESS)
    6e7f:	85 c0                	test   %eax,%eax
    6e81:	0f 95 c0             	setne  %al
    if (vkCreateRenderPass(device, &renderPassInfo,
    6e84:	84 c0                	test   %al,%al
    6e86:	74 51                	je     6ed9 <_ZN4rtvc17RenderApplication16createRenderPassEv+0x1f9>
        throw std::runtime_error("Failed to create render pass.");
    6e88:	bf 10 00 00 00       	mov    $0x10,%edi
    6e8d:	e8 ae c2 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    6e92:	48 89 c3             	mov    %rax,%rbx
    6e95:	48 8d 05 ac e5 00 00 	lea    0xe5ac(%rip),%rax        # 15448 <_ZN6__pstl9execution2v1L5unseqE+0x1e1>
    6e9c:	48 89 c6             	mov    %rax,%rsi
    6e9f:	48 89 df             	mov    %rbx,%rdi
    6ea2:	e8 39 c2 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    6ea7:	48 8b 05 fa a0 01 00 	mov    0x1a0fa(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6eae:	48 89 c2             	mov    %rax,%rdx
    6eb1:	48 8d 05 88 9e 01 00 	lea    0x19e88(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6eb8:	48 89 c6             	mov    %rax,%rsi
    6ebb:	48 89 df             	mov    %rbx,%rdi
    6ebe:	e8 bd c7 ff ff       	call   3680 <__cxa_throw@plt>
    6ec3:	49 89 c4             	mov    %rax,%r12
    6ec6:	48 89 df             	mov    %rbx,%rdi
    6ec9:	e8 42 c3 ff ff       	call   3210 <__cxa_free_exception@plt>
    6ece:	4c 89 e0             	mov    %r12,%rax
    6ed1:	48 89 c7             	mov    %rax,%rdi
    6ed4:	e8 d7 c7 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    6ed9:	90                   	nop
    6eda:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
    6ee1:	5b                   	pop    %rbx
    6ee2:	41 5c                	pop    %r12
    6ee4:	5d                   	pop    %rbp
    6ee5:	c3                   	ret

0000000000006ee6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>:

void rtvc::RenderApplication::createGraphicsPipeline()
{
    6ee6:	55                   	push   %rbp
    6ee7:	48 89 e5             	mov    %rsp,%rbp
    6eea:	41 55                	push   %r13
    6eec:	41 54                	push   %r12
    6eee:	53                   	push   %rbx
    6eef:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    6ef6:	48 89 bd e8 fb ff ff 	mov    %rdi,-0x418(%rbp)
    auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    6efd:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    6f01:	48 89 c7             	mov    %rax,%rdi
    6f04:	e8 b7 c7 ff ff       	call   36c0 <_ZNSaIcEC1Ev@plt>
    6f09:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    6f0d:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6f14:	48 8d 0d 4d e5 00 00 	lea    0xe54d(%rip),%rcx        # 15468 <_ZN6__pstl9execution2v1L5unseqE+0x201>
    6f1b:	48 89 ce             	mov    %rcx,%rsi
    6f1e:	48 89 c7             	mov    %rax,%rdi
    6f21:	e8 a4 23 00 00       	call   92ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f26:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    6f2d:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    6f34:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
    6f3b:	48 89 ce             	mov    %rcx,%rsi
    6f3e:	48 89 c7             	mov    %rax,%rdi
    6f41:	e8 f2 fa ff ff       	call   6a38 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    6f46:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 6b c2 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6f55:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    6f59:	48 89 c7             	mov    %rax,%rdi
    6f5c:	e8 7f c4 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    6f61:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    6f65:	48 89 c7             	mov    %rax,%rdi
    6f68:	e8 53 c7 ff ff       	call   36c0 <_ZNSaIcEC1Ev@plt>
    6f6d:	48 8d 55 c3          	lea    -0x3d(%rbp),%rdx
    6f71:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6f75:	48 8d 0d 0c e5 00 00 	lea    0xe50c(%rip),%rcx        # 15488 <_ZN6__pstl9execution2v1L5unseqE+0x221>
    6f7c:	48 89 ce             	mov    %rcx,%rsi
    6f7f:	48 89 c7             	mov    %rax,%rdi
    6f82:	e8 43 23 00 00       	call   92ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    6f87:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    6f8e:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    6f92:	48 8b 8d e8 fb ff ff 	mov    -0x418(%rbp),%rcx
    6f99:	48 89 ce             	mov    %rcx,%rsi
    6f9c:	48 89 c7             	mov    %rax,%rdi
    6f9f:	e8 94 fa ff ff       	call   6a38 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    6fa4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    6fa8:	48 89 c7             	mov    %rax,%rdi
    6fab:	e8 10 c2 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    6fb0:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    6fb4:	48 89 c7             	mov    %rax,%rdi
    6fb7:	e8 24 c4 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>

    VkShaderModule vertShaderModule = createShaderModule(vertShaderCode);
    6fbc:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    6fc3:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    6fca:	48 89 d6             	mov    %rdx,%rsi
    6fcd:	48 89 c7             	mov    %rax,%rdi
    6fd0:	e8 37 fc ff ff       	call   6c0c <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    6fd5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkShaderModule fragShaderModule = createShaderModule(fragShaderCode);
    6fd9:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    6fe0:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    6fe7:	48 89 d6             	mov    %rdx,%rsi
    6fea:	48 89 c7             	mov    %rax,%rdi
    6fed:	e8 1a fc ff ff       	call   6c0c <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    6ff2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)

    VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    6ff6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6ffa:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    7001:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    7008:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    vertShaderStageInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    700f:	c7 85 00 ff ff ff 12 	movl   $0x12,-0x100(%rbp)
    7016:	00 00 00 
    vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    7019:	c7 85 14 ff ff ff 01 	movl   $0x1,-0xec(%rbp)
    7020:	00 00 00 
    vertShaderStageInfo.module = vertShaderModule;
    7023:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7027:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    vertShaderStageInfo.pName = "main";
    702e:	48 8d 05 73 e4 00 00 	lea    0xe473(%rip),%rax        # 154a8 <_ZN6__pstl9execution2v1L5unseqE+0x241>
    7035:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    vertShaderStageInfo.pSpecializationInfo = nullptr;
    703c:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
    7043:	00 00 00 00 

    VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    7047:	66 0f ef c0          	pxor   %xmm0,%xmm0
    704b:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    7052:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    7059:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
    fragShaderStageInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    7060:	c7 85 d0 fe ff ff 12 	movl   $0x12,-0x130(%rbp)
    7067:	00 00 00 
    fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    706a:	c7 85 e4 fe ff ff 10 	movl   $0x10,-0x11c(%rbp)
    7071:	00 00 00 
    fragShaderStageInfo.module = fragShaderModule;
    7074:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7078:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    fragShaderStageInfo.pName = "main";
    707f:	48 8d 05 22 e4 00 00 	lea    0xe422(%rip),%rax        # 154a8 <_ZN6__pstl9execution2v1L5unseqE+0x241>
    7086:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    fragShaderStageInfo.pSpecializationInfo = nullptr;
    708d:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    7094:	00 00 00 00 

    VkPipelineShaderStageCreateInfo shaderStages[] = {
        vertShaderStageInfo, fragShaderStageInfo};
    7098:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    709f:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    70a6:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    70ad:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    70b4:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    70bb:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    70c2:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    70c9:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    70d0:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    70d7:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    70de:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    70e5:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
    70ec:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    70f3:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    70fa:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    7101:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    7108:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    710f:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    7116:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    711d:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
    7124:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    712b:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    7132:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    7139:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)

    VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    7140:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7144:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    714b:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    7152:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    vertexInputInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
    7159:	c7 85 40 fe ff ff 13 	movl   $0x13,-0x1c0(%rbp)
    7160:	00 00 00 
    vertexInputInfo.vertexBindingDescriptionCount = 0;
    7163:	c7 85 54 fe ff ff 00 	movl   $0x0,-0x1ac(%rbp)
    716a:	00 00 00 
    vertexInputInfo.pVertexBindingDescriptions = nullptr;
    716d:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    7174:	00 00 00 00 
    vertexInputInfo.vertexAttributeDescriptionCount = 0;
    7178:	c7 85 60 fe ff ff 00 	movl   $0x0,-0x1a0(%rbp)
    717f:	00 00 00 
    vertexInputInfo.pVertexAttributeDescriptions = nullptr;
    7182:	48 c7 85 68 fe ff ff 	movq   $0x0,-0x198(%rbp)
    7189:	00 00 00 00 

    VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    718d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7191:	0f 29 85 20 fe ff ff 	movaps %xmm0,-0x1e0(%rbp)
    7198:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    inputAssembly.sType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
    719f:	c7 85 20 fe ff ff 14 	movl   $0x14,-0x1e0(%rbp)
    71a6:	00 00 00 
    inputAssembly.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    71a9:	c7 85 34 fe ff ff 03 	movl   $0x3,-0x1cc(%rbp)
    71b0:	00 00 00 
    inputAssembly.primitiveRestartEnable = VK_FALSE;
    71b3:	c7 85 38 fe ff ff 00 	movl   $0x0,-0x1c8(%rbp)
    71ba:	00 00 00 

    VkViewport viewport{};
    71bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    71c1:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
    71c8:	66 0f d6 85 10 fe ff 	movq   %xmm0,-0x1f0(%rbp)
    71cf:	ff 
    viewport.x = 0.0f;
    71d0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    71d4:	f3 0f 11 85 00 fe ff 	movss  %xmm0,-0x200(%rbp)
    71db:	ff 
    viewport.y = 0.0f;
    71dc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    71e0:	f3 0f 11 85 04 fe ff 	movss  %xmm0,-0x1fc(%rbp)
    71e7:	ff 
    viewport.width = static_cast<float>(swapChainExtent.width);
    71e8:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    71ef:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
    71f5:	89 c0                	mov    %eax,%eax
    71f7:	48 85 c0             	test   %rax,%rax
    71fa:	78 0b                	js     7207 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x321>
    71fc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7200:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    7205:	eb 19                	jmp    7220 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x33a>
    7207:	48 89 c2             	mov    %rax,%rdx
    720a:	48 d1 ea             	shr    %rdx
    720d:	83 e0 01             	and    $0x1,%eax
    7210:	48 09 c2             	or     %rax,%rdx
    7213:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7217:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    721c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    7220:	f3 0f 11 85 08 fe ff 	movss  %xmm0,-0x1f8(%rbp)
    7227:	ff 
    viewport.height = static_cast<float>(swapChainExtent.height);
    7228:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    722f:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
    7235:	89 c0                	mov    %eax,%eax
    7237:	48 85 c0             	test   %rax,%rax
    723a:	78 0b                	js     7247 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x361>
    723c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7240:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    7245:	eb 19                	jmp    7260 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x37a>
    7247:	48 89 c2             	mov    %rax,%rdx
    724a:	48 d1 ea             	shr    %rdx
    724d:	83 e0 01             	and    $0x1,%eax
    7250:	48 09 c2             	or     %rax,%rdx
    7253:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7257:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    725c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    7260:	f3 0f 11 85 0c fe ff 	movss  %xmm0,-0x1f4(%rbp)
    7267:	ff 
    viewport.minDepth = 0.0f;
    7268:	66 0f ef c0          	pxor   %xmm0,%xmm0
    726c:	f3 0f 11 85 10 fe ff 	movss  %xmm0,-0x1f0(%rbp)
    7273:	ff 
    viewport.maxDepth = 1.0f;
    7274:	f3 0f 10 05 44 e4 00 	movss  0xe444(%rip),%xmm0        # 156c0 <_ZN6__pstl9execution2v1L5unseqE+0x459>
    727b:	00 
    727c:	f3 0f 11 85 14 fe ff 	movss  %xmm0,-0x1ec(%rbp)
    7283:	ff 

    VkRect2D scissor{};
    7284:	48 c7 85 f0 fd ff ff 	movq   $0x0,-0x210(%rbp)
    728b:	00 00 00 00 
    728f:	48 c7 85 f8 fd ff ff 	movq   $0x0,-0x208(%rbp)
    7296:	00 00 00 00 
    scissor.offset = {0, 0};
    729a:	c7 85 f0 fd ff ff 00 	movl   $0x0,-0x210(%rbp)
    72a1:	00 00 00 
    72a4:	c7 85 f4 fd ff ff 00 	movl   $0x0,-0x20c(%rbp)
    72ab:	00 00 00 
    scissor.extent = swapChainExtent;
    72ae:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    72b5:	48 8b 80 a4 00 00 00 	mov    0xa4(%rax),%rax
    72bc:	48 89 85 f8 fd ff ff 	mov    %rax,-0x208(%rbp)

    VkPipelineViewportStateCreateInfo viewportState{};
    72c3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    72c7:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    72ce:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    72d5:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
    viewportState.sType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    72dc:	c7 85 c0 fd ff ff 16 	movl   $0x16,-0x240(%rbp)
    72e3:	00 00 00 
    viewportState.viewportCount = 1;
    72e6:	c7 85 d4 fd ff ff 01 	movl   $0x1,-0x22c(%rbp)
    72ed:	00 00 00 
    viewportState.pViewports = &viewport;
    72f0:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    72f7:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
    viewportState.scissorCount = 1;
    72fe:	c7 85 e0 fd ff ff 01 	movl   $0x1,-0x220(%rbp)
    7305:	00 00 00 
    viewportState.pScissors = &scissor;
    7308:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    730f:	48 89 85 e8 fd ff ff 	mov    %rax,-0x218(%rbp)

    VkPipelineRasterizationStateCreateInfo rasterizer{};
    7316:	66 0f ef c0          	pxor   %xmm0,%xmm0
    731a:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    7321:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    7328:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    732f:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
    rasterizer.sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    7336:	c7 85 80 fd ff ff 17 	movl   $0x17,-0x280(%rbp)
    733d:	00 00 00 
    rasterizer.depthClampEnable = VK_FALSE;
    7340:	c7 85 94 fd ff ff 00 	movl   $0x0,-0x26c(%rbp)
    7347:	00 00 00 
    rasterizer.rasterizerDiscardEnable = VK_FALSE;
    734a:	c7 85 98 fd ff ff 00 	movl   $0x0,-0x268(%rbp)
    7351:	00 00 00 
    rasterizer.polygonMode = VK_POLYGON_MODE_FILL;
    7354:	c7 85 9c fd ff ff 00 	movl   $0x0,-0x264(%rbp)
    735b:	00 00 00 
    rasterizer.lineWidth = 1.0f;
    735e:	f3 0f 10 05 5a e3 00 	movss  0xe35a(%rip),%xmm0        # 156c0 <_ZN6__pstl9execution2v1L5unseqE+0x459>
    7365:	00 
    7366:	f3 0f 11 85 b8 fd ff 	movss  %xmm0,-0x248(%rbp)
    736d:	ff 
    rasterizer.cullMode = VK_CULL_MODE_BACK_BIT;
    736e:	c7 85 a0 fd ff ff 02 	movl   $0x2,-0x260(%rbp)
    7375:	00 00 00 
    rasterizer.frontFace = VK_FRONT_FACE_CLOCKWISE;
    7378:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    737f:	00 00 00 
    rasterizer.depthBiasEnable = VK_FALSE;
    7382:	c7 85 a8 fd ff ff 00 	movl   $0x0,-0x258(%rbp)
    7389:	00 00 00 
    rasterizer.depthBiasConstantFactor = 0.0f;
    738c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7390:	f3 0f 11 85 ac fd ff 	movss  %xmm0,-0x254(%rbp)
    7397:	ff 
    rasterizer.depthBiasClamp = 0.0f;
    7398:	66 0f ef c0          	pxor   %xmm0,%xmm0
    739c:	f3 0f 11 85 b0 fd ff 	movss  %xmm0,-0x250(%rbp)
    73a3:	ff 
    rasterizer.depthBiasSlopeFactor = 0.0f;
    73a4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    73a8:	f3 0f 11 85 b4 fd ff 	movss  %xmm0,-0x24c(%rbp)
    73af:	ff 

    VkPipelineMultisampleStateCreateInfo multisampling{};
    73b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    73b4:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    73bb:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
    73c2:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    multisampling.sType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
    73c9:	c7 85 50 fd ff ff 18 	movl   $0x18,-0x2b0(%rbp)
    73d0:	00 00 00 
    multisampling.sampleShadingEnable = VK_FALSE;
    73d3:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
    73da:	00 00 00 
    multisampling.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    73dd:	c7 85 64 fd ff ff 01 	movl   $0x1,-0x29c(%rbp)
    73e4:	00 00 00 
    multisampling.minSampleShading = 1.0F;
    73e7:	f3 0f 10 05 d1 e2 00 	movss  0xe2d1(%rip),%xmm0        # 156c0 <_ZN6__pstl9execution2v1L5unseqE+0x459>
    73ee:	00 
    73ef:	f3 0f 11 85 6c fd ff 	movss  %xmm0,-0x294(%rbp)
    73f6:	ff 
    multisampling.pSampleMask = nullptr;
    73f7:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    73fe:	00 00 00 00 
    multisampling.alphaToCoverageEnable = VK_FALSE;
    7402:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
    7409:	00 00 00 
    multisampling.alphaToOneEnable = VK_FALSE;
    740c:	c7 85 7c fd ff ff 00 	movl   $0x0,-0x284(%rbp)
    7413:	00 00 00 

    // VkPipelineDepthStencilStateCreateInfo

    VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    7416:	66 0f ef c0          	pxor   %xmm0,%xmm0
    741a:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
    7421:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    colorBlendAttachment.colorWriteMask =
    7428:	c7 85 4c fd ff ff 0f 	movl   $0xf,-0x2b4(%rbp)
    742f:	00 00 00 
        VK_COLOR_COMPONENT_R_BIT |
        VK_COLOR_COMPONENT_G_BIT |
        VK_COLOR_COMPONENT_B_BIT |
        VK_COLOR_COMPONENT_A_BIT;
    colorBlendAttachment.blendEnable = VK_FALSE;
    7432:	c7 85 30 fd ff ff 00 	movl   $0x0,-0x2d0(%rbp)
    7439:	00 00 00 
    colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_ONE;
    743c:	c7 85 34 fd ff ff 01 	movl   $0x1,-0x2cc(%rbp)
    7443:	00 00 00 
    colorBlendAttachment.dstColorBlendFactor = VK_BLEND_FACTOR_ZERO;
    7446:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
    744d:	00 00 00 
    colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    7450:	c7 85 3c fd ff ff 00 	movl   $0x0,-0x2c4(%rbp)
    7457:	00 00 00 
    colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    745a:	c7 85 40 fd ff ff 01 	movl   $0x1,-0x2c0(%rbp)
    7461:	00 00 00 
    colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    7464:	c7 85 44 fd ff ff 00 	movl   $0x0,-0x2bc(%rbp)
    746b:	00 00 00 
    colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    746e:	c7 85 48 fd ff ff 00 	movl   $0x0,-0x2b8(%rbp)
    7475:	00 00 00 
    // colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    // colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    // colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    // colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;

    VkPipelineColorBlendStateCreateInfo colorBlending{};
    7478:	66 0f ef c0          	pxor   %xmm0,%xmm0
    747c:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    7483:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    748a:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    7491:	66 0f d6 85 20 fd ff 	movq   %xmm0,-0x2e0(%rbp)
    7498:	ff 
    colorBlending.sType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
    7499:	c7 85 f0 fc ff ff 1a 	movl   $0x1a,-0x310(%rbp)
    74a0:	00 00 00 
    colorBlending.logicOpEnable = VK_FALSE;
    74a3:	c7 85 04 fd ff ff 00 	movl   $0x0,-0x2fc(%rbp)
    74aa:	00 00 00 
    colorBlending.logicOp = VK_LOGIC_OP_COPY;
    74ad:	c7 85 08 fd ff ff 03 	movl   $0x3,-0x2f8(%rbp)
    74b4:	00 00 00 
    colorBlending.attachmentCount = 1;
    74b7:	c7 85 0c fd ff ff 01 	movl   $0x1,-0x2f4(%rbp)
    74be:	00 00 00 
    colorBlending.pAttachments = &colorBlendAttachment;
    74c1:	48 8d 85 30 fd ff ff 	lea    -0x2d0(%rbp),%rax
    74c8:	48 89 85 10 fd ff ff 	mov    %rax,-0x2f0(%rbp)
    colorBlending.blendConstants[0] = 0.0f;
    74cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    74d3:	f3 0f 11 85 18 fd ff 	movss  %xmm0,-0x2e8(%rbp)
    74da:	ff 
    colorBlending.blendConstants[1] = 0.0f;
    74db:	66 0f ef c0          	pxor   %xmm0,%xmm0
    74df:	f3 0f 11 85 1c fd ff 	movss  %xmm0,-0x2e4(%rbp)
    74e6:	ff 
    colorBlending.blendConstants[2] = 0.0f;
    74e7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    74eb:	f3 0f 11 85 20 fd ff 	movss  %xmm0,-0x2e0(%rbp)
    74f2:	ff 
    colorBlending.blendConstants[3] = 0.0f;
    74f3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    74f7:	f3 0f 11 85 24 fd ff 	movss  %xmm0,-0x2dc(%rbp)
    74fe:	ff 

    std::vector<VkDynamicState> dynamicStates = {
        VK_DYNAMIC_STATE_VIEWPORT,
        VK_DYNAMIC_STATE_LINE_WIDTH};
    74ff:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    7506:	c7 45 c8 02 00 00 00 	movl   $0x2,-0x38(%rbp)
    750d:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    7511:	49 89 c4             	mov    %rax,%r12
    7514:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    751a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    751e:	48 89 c7             	mov    %rax,%rdi
    7521:	e8 a2 2f 00 00       	call   a4c8 <_ZNSaI14VkDynamicStateEC1Ev>
    7526:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    752a:	4c 89 e6             	mov    %r12,%rsi
    752d:	4c 89 ef             	mov    %r13,%rdi
    7530:	4c 89 e1             	mov    %r12,%rcx
    7533:	4c 89 eb             	mov    %r13,%rbx
    7536:	48 89 df             	mov    %rbx,%rdi
    7539:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    7540:	48 89 d1             	mov    %rdx,%rcx
    7543:	48 89 fa             	mov    %rdi,%rdx
    7546:	48 89 c7             	mov    %rax,%rdi
    7549:	e8 b2 2f 00 00       	call   a500 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    754e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7552:	48 89 c7             	mov    %rax,%rdi
    7555:	e8 8a 2f 00 00       	call   a4e4 <_ZNSaI14VkDynamicStateED1Ev>

    VkPipelineDynamicStateCreateInfo dynamicState{};
    755a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    755e:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    7565:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
    dynamicState.sType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    756c:	c7 85 b0 fc ff ff 1b 	movl   $0x1b,-0x350(%rbp)
    7573:	00 00 00 
    dynamicState.dynamicStateCount = static_cast<uint32_t>(dynamicStates.size());
    7576:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    757d:	48 89 c7             	mov    %rax,%rdi
    7580:	e8 47 30 00 00       	call   a5cc <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>
    7585:	89 85 c4 fc ff ff    	mov    %eax,-0x33c(%rbp)
    dynamicState.pDynamicStates = dynamicStates.data();
    758b:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    7592:	48 89 c7             	mov    %rax,%rdi
    7595:	e8 56 30 00 00       	call   a5f0 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>
    759a:	48 89 85 c8 fc ff ff 	mov    %rax,-0x338(%rbp)

    VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    75a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    75a5:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    75ac:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    75b3:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    75ba:	c7 85 80 fc ff ff 1e 	movl   $0x1e,-0x380(%rbp)
    75c1:	00 00 00 
    pipelineLayoutInfo.setLayoutCount = 0;
    75c4:	c7 85 94 fc ff ff 00 	movl   $0x0,-0x36c(%rbp)
    75cb:	00 00 00 
    pipelineLayoutInfo.pSetLayouts = nullptr;
    75ce:	48 c7 85 98 fc ff ff 	movq   $0x0,-0x368(%rbp)
    75d5:	00 00 00 00 
    pipelineLayoutInfo.pushConstantRangeCount = 0;
    75d9:	c7 85 a0 fc ff ff 00 	movl   $0x0,-0x360(%rbp)
    75e0:	00 00 00 
    pipelineLayoutInfo.pPushConstantRanges = nullptr;
    75e3:	48 c7 85 a8 fc ff ff 	movq   $0x0,-0x358(%rbp)
    75ea:	00 00 00 00 

    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo,
    75ee:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    75f5:	48 8d 90 d0 00 00 00 	lea    0xd0(%rax),%rdx
    75fc:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    7603:	48 8b 40 48          	mov    0x48(%rax),%rax
    7607:	48 8d b5 80 fc ff ff 	lea    -0x380(%rbp),%rsi
    760e:	48 89 d1             	mov    %rdx,%rcx
    7611:	ba 00 00 00 00       	mov    $0x0,%edx
    7616:	48 89 c7             	mov    %rax,%rdi
    7619:	e8 62 bc ff ff       	call   3280 <vkCreatePipelineLayout@plt>
                               nullptr, &pipelineLayout) != VK_SUCCESS)
    761e:	85 c0                	test   %eax,%eax
    7620:	0f 95 c0             	setne  %al
    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo,
    7623:	84 c0                	test   %al,%al
    7625:	74 3b                	je     7662 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x77c>
        throw std::runtime_error("Failed to create pipeline layout.");
    7627:	bf 10 00 00 00       	mov    $0x10,%edi
    762c:	e8 0f bb ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7631:	48 89 c3             	mov    %rax,%rbx
    7634:	48 8d 05 75 de 00 00 	lea    0xde75(%rip),%rax        # 154b0 <_ZN6__pstl9execution2v1L5unseqE+0x249>
    763b:	48 89 c6             	mov    %rax,%rsi
    763e:	48 89 df             	mov    %rbx,%rdi
    7641:	e8 9a ba ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7646:	48 8b 05 5b 99 01 00 	mov    0x1995b(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    764d:	48 89 c2             	mov    %rax,%rdx
    7650:	48 8d 05 e9 96 01 00 	lea    0x196e9(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7657:	48 89 c6             	mov    %rax,%rsi
    765a:	48 89 df             	mov    %rbx,%rdi
    765d:	e8 1e c0 ff ff       	call   3680 <__cxa_throw@plt>

    VkGraphicsPipelineCreateInfo pipelineInfo{};
    7662:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
    7669:	b8 00 00 00 00       	mov    $0x0,%eax
    766e:	b9 12 00 00 00       	mov    $0x12,%ecx
    7673:	48 89 d7             	mov    %rdx,%rdi
    7676:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    7679:	c7 85 f0 fb ff ff 1c 	movl   $0x1c,-0x410(%rbp)
    7680:	00 00 00 
    pipelineInfo.stageCount = 2;
    7683:	c7 85 04 fc ff ff 02 	movl   $0x2,-0x3fc(%rbp)
    768a:	00 00 00 
    pipelineInfo.pStages = shaderStages;
    768d:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    7694:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
    pipelineInfo.pVertexInputState = &vertexInputInfo;
    769b:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
    76a2:	48 89 85 10 fc ff ff 	mov    %rax,-0x3f0(%rbp)
    pipelineInfo.pInputAssemblyState = &inputAssembly;
    76a9:	48 8d 85 20 fe ff ff 	lea    -0x1e0(%rbp),%rax
    76b0:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
    pipelineInfo.pViewportState = &viewportState;
    76b7:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    76be:	48 89 85 28 fc ff ff 	mov    %rax,-0x3d8(%rbp)
    pipelineInfo.pRasterizationState = &rasterizer;
    76c5:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    76cc:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
    pipelineInfo.pMultisampleState = &multisampling;
    76d3:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    76da:	48 89 85 38 fc ff ff 	mov    %rax,-0x3c8(%rbp)
    pipelineInfo.pDepthStencilState = nullptr;
    76e1:	48 c7 85 40 fc ff ff 	movq   $0x0,-0x3c0(%rbp)
    76e8:	00 00 00 00 
    pipelineInfo.pColorBlendState = &colorBlending;
    76ec:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    76f3:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
    pipelineInfo.pDynamicState = nullptr;
    76fa:	48 c7 85 50 fc ff ff 	movq   $0x0,-0x3b0(%rbp)
    7701:	00 00 00 00 
    pipelineInfo.layout = pipelineLayout;
    7705:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    770c:	48 8b 80 d0 00 00 00 	mov    0xd0(%rax),%rax
    7713:	48 89 85 58 fc ff ff 	mov    %rax,-0x3a8(%rbp)
    pipelineInfo.renderPass = renderPass;
    771a:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    7721:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    7728:	48 89 85 60 fc ff ff 	mov    %rax,-0x3a0(%rbp)
    pipelineInfo.subpass = 0;
    772f:	c7 85 68 fc ff ff 00 	movl   $0x0,-0x398(%rbp)
    7736:	00 00 00 
    pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    7739:	48 c7 85 70 fc ff ff 	movq   $0x0,-0x390(%rbp)
    7740:	00 00 00 00 
    pipelineInfo.basePipelineIndex = -1;
    7744:	c7 85 78 fc ff ff ff 	movl   $0xffffffff,-0x388(%rbp)
    774b:	ff ff ff 

    if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1,
    774e:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    7755:	48 8d 88 d8 00 00 00 	lea    0xd8(%rax),%rcx
    775c:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    7763:	48 8b 40 48          	mov    0x48(%rax),%rax
    7767:	48 8d 95 f0 fb ff ff 	lea    -0x410(%rbp),%rdx
    776e:	49 89 c9             	mov    %rcx,%r9
    7771:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    7777:	48 89 d1             	mov    %rdx,%rcx
    777a:	ba 01 00 00 00       	mov    $0x1,%edx
    777f:	be 00 00 00 00       	mov    $0x0,%esi
    7784:	48 89 c7             	mov    %rax,%rdi
    7787:	e8 a4 b9 ff ff       	call   3130 <vkCreateGraphicsPipelines@plt>
                                  &pipelineInfo, nullptr,
                                  &graphicsPipeline) != VK_SUCCESS)
    778c:	85 c0                	test   %eax,%eax
    778e:	0f 95 c0             	setne  %al
    if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1,
    7791:	84 c0                	test   %al,%al
    7793:	74 3b                	je     77d0 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x8ea>
        throw std::runtime_error("Failed to create graphics pipeline.");
    7795:	bf 10 00 00 00       	mov    $0x10,%edi
    779a:	e8 a1 b9 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    779f:	48 89 c3             	mov    %rax,%rbx
    77a2:	48 8d 05 2f dd 00 00 	lea    0xdd2f(%rip),%rax        # 154d8 <_ZN6__pstl9execution2v1L5unseqE+0x271>
    77a9:	48 89 c6             	mov    %rax,%rsi
    77ac:	48 89 df             	mov    %rbx,%rdi
    77af:	e8 2c b9 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    77b4:	48 8b 05 ed 97 01 00 	mov    0x197ed(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    77bb:	48 89 c2             	mov    %rax,%rdx
    77be:	48 8d 05 7b 95 01 00 	lea    0x1957b(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    77c5:	48 89 c6             	mov    %rax,%rsi
    77c8:	48 89 df             	mov    %rbx,%rdi
    77cb:	e8 b0 be ff ff       	call   3680 <__cxa_throw@plt>

    vkDestroyShaderModule(device, fragShaderModule, nullptr);
    77d0:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    77d7:	48 8b 40 48          	mov    0x48(%rax),%rax
    77db:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    77df:	ba 00 00 00 00       	mov    $0x0,%edx
    77e4:	48 89 ce             	mov    %rcx,%rsi
    77e7:	48 89 c7             	mov    %rax,%rdi
    77ea:	e8 91 bc ff ff       	call   3480 <vkDestroyShaderModule@plt>
    vkDestroyShaderModule(device, vertShaderModule, nullptr);
    77ef:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    77f6:	48 8b 40 48          	mov    0x48(%rax),%rax
    77fa:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    77fe:	ba 00 00 00 00       	mov    $0x0,%edx
    7803:	48 89 ce             	mov    %rcx,%rsi
    7806:	48 89 c7             	mov    %rax,%rdi
    7809:	e8 72 bc ff ff       	call   3480 <vkDestroyShaderModule@plt>
}
    780e:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    7815:	48 89 c7             	mov    %rax,%rdi
    7818:	e8 6b 2d 00 00       	call   a588 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    781d:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    7824:	48 89 c7             	mov    %rax,%rdi
    7827:	e8 7c 2b 00 00       	call   a3a8 <_ZNSt6vectorIcSaIcEED1Ev>
    782c:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    7833:	48 89 c7             	mov    %rax,%rdi
    7836:	e8 6d 2b 00 00       	call   a3a8 <_ZNSt6vectorIcSaIcEED1Ev>
    783b:	e9 c1 00 00 00       	jmp    7901 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa1b>
    auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    7840:	48 89 c3             	mov    %rax,%rbx
    7843:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    784a:	48 89 c7             	mov    %rax,%rdi
    784d:	e8 6e b9 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7852:	eb 03                	jmp    7857 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x971>
    7854:	48 89 c3             	mov    %rax,%rbx
    7857:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    785b:	48 89 c7             	mov    %rax,%rdi
    785e:	e8 7d bb ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    7863:	48 89 d8             	mov    %rbx,%rax
    7866:	48 89 c7             	mov    %rax,%rdi
    7869:	e8 42 be ff ff       	call   36b0 <_Unwind_Resume@plt>
    auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    786e:	48 89 c3             	mov    %rax,%rbx
    7871:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7875:	48 89 c7             	mov    %rax,%rdi
    7878:	e8 43 b9 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    787d:	eb 03                	jmp    7882 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x99c>
    787f:	48 89 c3             	mov    %rax,%rbx
    7882:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    7886:	48 89 c7             	mov    %rax,%rdi
    7889:	e8 52 bb ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    788e:	eb 57                	jmp    78e7 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa01>
        VK_DYNAMIC_STATE_LINE_WIDTH};
    7890:	48 89 c3             	mov    %rax,%rbx
    7893:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7897:	48 89 c7             	mov    %rax,%rdi
    789a:	e8 45 2c 00 00       	call   a4e4 <_ZNSaI14VkDynamicStateED1Ev>
    789f:	eb 37                	jmp    78d8 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9f2>
        throw std::runtime_error("Failed to create pipeline layout.");
    78a1:	49 89 c4             	mov    %rax,%r12
    78a4:	48 89 df             	mov    %rbx,%rdi
    78a7:	e8 64 b9 ff ff       	call   3210 <__cxa_free_exception@plt>
    78ac:	4c 89 e3             	mov    %r12,%rbx
    78af:	eb 13                	jmp    78c4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9de>
        throw std::runtime_error("Failed to create graphics pipeline.");
    78b1:	49 89 c4             	mov    %rax,%r12
    78b4:	48 89 df             	mov    %rbx,%rdi
    78b7:	e8 54 b9 ff ff       	call   3210 <__cxa_free_exception@plt>
    78bc:	4c 89 e3             	mov    %r12,%rbx
    78bf:	eb 03                	jmp    78c4 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9de>
}
    78c1:	48 89 c3             	mov    %rax,%rbx
    78c4:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    78cb:	48 89 c7             	mov    %rax,%rdi
    78ce:	e8 b5 2c 00 00       	call   a588 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    78d3:	eb 03                	jmp    78d8 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9f2>
    78d5:	48 89 c3             	mov    %rax,%rbx
    78d8:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    78df:	48 89 c7             	mov    %rax,%rdi
    78e2:	e8 c1 2a 00 00       	call   a3a8 <_ZNSt6vectorIcSaIcEED1Ev>
    78e7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    78ee:	48 89 c7             	mov    %rax,%rdi
    78f1:	e8 b2 2a 00 00       	call   a3a8 <_ZNSt6vectorIcSaIcEED1Ev>
    78f6:	48 89 d8             	mov    %rbx,%rax
    78f9:	48 89 c7             	mov    %rax,%rdi
    78fc:	e8 af bd ff ff       	call   36b0 <_Unwind_Resume@plt>
    7901:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
    7908:	5b                   	pop    %rbx
    7909:	41 5c                	pop    %r12
    790b:	41 5d                	pop    %r13
    790d:	5d                   	pop    %rbp
    790e:	c3                   	ret
    790f:	90                   	nop

0000000000007910 <_ZN4rtvc17RenderApplication18createFramebuffersEv>:

void rtvc::RenderApplication::createFramebuffers()
{
    7910:	55                   	push   %rbp
    7911:	48 89 e5             	mov    %rsp,%rbp
    7914:	41 54                	push   %r12
    7916:	53                   	push   %rbx
    7917:	48 83 ec 60          	sub    $0x60,%rsp
    791b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    swapChainFrameBuffers.resize(swapChainImageViews.size());
    791f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7923:	48 8d 98 e0 00 00 00 	lea    0xe0(%rax),%rbx
    792a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    792e:	48 05 b0 00 00 00    	add    $0xb0,%rax
    7934:	48 89 c7             	mov    %rax,%rdi
    7937:	e8 d8 2c 00 00       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    793c:	48 89 c6             	mov    %rax,%rsi
    793f:	48 89 df             	mov    %rbx,%rdi
    7942:	e8 f1 2c 00 00       	call   a638 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>

    for (size_t i = 0; i < swapChainImageViews.size(); ++i)
    7947:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    794e:	00 
    794f:	e9 fd 00 00 00       	jmp    7a51 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x141>
    {
        VkImageView attachments[] = {swapChainImageViews[i]};
    7954:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7958:	48 8d 90 b0 00 00 00 	lea    0xb0(%rax),%rdx
    795f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7963:	48 89 c6             	mov    %rax,%rsi
    7966:	48 89 d7             	mov    %rdx,%rdi
    7969:	e8 92 29 00 00       	call   a300 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    796e:	48 8b 00             	mov    (%rax),%rax
    7971:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

        VkFramebufferCreateInfo framebufferInfo{};
    7975:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7979:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    797d:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    7981:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    7985:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
        framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    7989:	c7 45 a0 25 00 00 00 	movl   $0x25,-0x60(%rbp)
        framebufferInfo.renderPass = renderPass;
    7990:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7994:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    799b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
        framebufferInfo.attachmentCount = 1;
    799f:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
        framebufferInfo.pAttachments = attachments;
    79a6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    79aa:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
        framebufferInfo.width = swapChainExtent.width;
    79ae:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    79b2:	8b 80 a4 00 00 00    	mov    0xa4(%rax),%eax
    79b8:	89 45 d0             	mov    %eax,-0x30(%rbp)
        framebufferInfo.height = swapChainExtent.height;
    79bb:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    79bf:	8b 80 a8 00 00 00    	mov    0xa8(%rax),%eax
    79c5:	89 45 d4             	mov    %eax,-0x2c(%rbp)
        framebufferInfo.layers = 1;
    79c8:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

        if (vkCreateFramebuffer(device, &framebufferInfo,
                                nullptr,
                                &swapChainFrameBuffers[i]) != VK_SUCCESS)
    79cf:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    79d3:	48 8d 90 e0 00 00 00 	lea    0xe0(%rax),%rdx
    79da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    79de:	48 89 c6             	mov    %rax,%rsi
    79e1:	48 89 d7             	mov    %rdx,%rdi
    79e4:	e8 d5 2c 00 00       	call   a6be <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    79e9:	48 89 c2             	mov    %rax,%rdx
        if (vkCreateFramebuffer(device, &framebufferInfo,
    79ec:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    79f0:	48 8b 40 48          	mov    0x48(%rax),%rax
    79f4:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    79f8:	48 89 d1             	mov    %rdx,%rcx
    79fb:	ba 00 00 00 00       	mov    $0x0,%edx
    7a00:	48 89 c7             	mov    %rax,%rdi
    7a03:	e8 38 bb ff ff       	call   3540 <vkCreateFramebuffer@plt>
                                &swapChainFrameBuffers[i]) != VK_SUCCESS)
    7a08:	85 c0                	test   %eax,%eax
    7a0a:	0f 95 c0             	setne  %al
        if (vkCreateFramebuffer(device, &framebufferInfo,
    7a0d:	84 c0                	test   %al,%al
    7a0f:	74 3b                	je     7a4c <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x13c>
            throw std::runtime_error("Failed to create framebuffer.");
    7a11:	bf 10 00 00 00       	mov    $0x10,%edi
    7a16:	e8 25 b7 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7a1b:	48 89 c3             	mov    %rax,%rbx
    7a1e:	48 8d 05 d7 da 00 00 	lea    0xdad7(%rip),%rax        # 154fc <_ZN6__pstl9execution2v1L5unseqE+0x295>
    7a25:	48 89 c6             	mov    %rax,%rsi
    7a28:	48 89 df             	mov    %rbx,%rdi
    7a2b:	e8 b0 b6 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7a30:	48 8b 05 71 95 01 00 	mov    0x19571(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a37:	48 89 c2             	mov    %rax,%rdx
    7a3a:	48 8d 05 ff 92 01 00 	lea    0x192ff(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a41:	48 89 c6             	mov    %rax,%rsi
    7a44:	48 89 df             	mov    %rbx,%rdi
    7a47:	e8 34 bc ff ff       	call   3680 <__cxa_throw@plt>
    for (size_t i = 0; i < swapChainImageViews.size(); ++i)
    7a4c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    7a51:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7a55:	48 05 b0 00 00 00    	add    $0xb0,%rax
    7a5b:	48 89 c7             	mov    %rax,%rdi
    7a5e:	e8 b1 2b 00 00       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    7a63:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    7a67:	0f 92 c0             	setb   %al
    7a6a:	84 c0                	test   %al,%al
    7a6c:	0f 85 e2 fe ff ff    	jne    7954 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x44>
    }
}
    7a72:	eb 16                	jmp    7a8a <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x17a>
            throw std::runtime_error("Failed to create framebuffer.");
    7a74:	49 89 c4             	mov    %rax,%r12
    7a77:	48 89 df             	mov    %rbx,%rdi
    7a7a:	e8 91 b7 ff ff       	call   3210 <__cxa_free_exception@plt>
    7a7f:	4c 89 e0             	mov    %r12,%rax
    7a82:	48 89 c7             	mov    %rax,%rdi
    7a85:	e8 26 bc ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    7a8a:	48 83 c4 60          	add    $0x60,%rsp
    7a8e:	5b                   	pop    %rbx
    7a8f:	41 5c                	pop    %r12
    7a91:	5d                   	pop    %rbp
    7a92:	c3                   	ret
    7a93:	90                   	nop

0000000000007a94 <_ZN4rtvc17RenderApplication17createCommandPoolEv>:

void rtvc::RenderApplication::createCommandPool()
{
    7a94:	55                   	push   %rbp
    7a95:	48 89 e5             	mov    %rsp,%rbp
    7a98:	41 54                	push   %r12
    7a9a:	53                   	push   %rbx
    7a9b:	48 83 ec 40          	sub    $0x40,%rsp
    7a9f:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    7aa3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7aa7:	48 8b 50 40          	mov    0x40(%rax),%rdx
    7aab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7aaf:	48 89 d6             	mov    %rdx,%rsi
    7ab2:	48 89 c7             	mov    %rax,%rdi
    7ab5:	e8 ea e1 ff ff       	call   5ca4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    7aba:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7abe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

    VkCommandPoolCreateInfo poolInfo{};
    7ac2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7ac6:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    7aca:	66 0f d6 45 d0       	movq   %xmm0,-0x30(%rbp)
    poolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    7acf:	c7 45 c0 27 00 00 00 	movl   $0x27,-0x40(%rbp)
    poolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    7ad6:	c7 45 d0 02 00 00 00 	movl   $0x2,-0x30(%rbp)
    poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();
    7add:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7ae1:	48 89 c7             	mov    %rax,%rdi
    7ae4:	e8 7d 0f 00 00       	call   8a66 <_ZNRSt8optionalIjE5valueEv>
    7ae9:	8b 00                	mov    (%rax),%eax
    7aeb:	89 45 d4             	mov    %eax,-0x2c(%rbp)

    if (vkCreateCommandPool(device, &poolInfo,
    7aee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7af2:	48 8d 90 f8 00 00 00 	lea    0xf8(%rax),%rdx
    7af9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    7afd:	48 8b 40 48          	mov    0x48(%rax),%rax
    7b01:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    7b05:	48 89 d1             	mov    %rdx,%rcx
    7b08:	ba 00 00 00 00       	mov    $0x0,%edx
    7b0d:	48 89 c7             	mov    %rax,%rdi
    7b10:	e8 fb b5 ff ff       	call   3110 <vkCreateCommandPool@plt>
                            nullptr, &commandPool) != VK_SUCCESS)
    7b15:	85 c0                	test   %eax,%eax
    7b17:	0f 95 c0             	setne  %al
    if (vkCreateCommandPool(device, &poolInfo,
    7b1a:	84 c0                	test   %al,%al
    7b1c:	74 51                	je     7b6f <_ZN4rtvc17RenderApplication17createCommandPoolEv+0xdb>
        throw std::runtime_error("Failed to create command pool.");
    7b1e:	bf 10 00 00 00       	mov    $0x10,%edi
    7b23:	e8 18 b6 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7b28:	48 89 c3             	mov    %rax,%rbx
    7b2b:	48 8d 05 ee d9 00 00 	lea    0xd9ee(%rip),%rax        # 15520 <_ZN6__pstl9execution2v1L5unseqE+0x2b9>
    7b32:	48 89 c6             	mov    %rax,%rsi
    7b35:	48 89 df             	mov    %rbx,%rdi
    7b38:	e8 a3 b5 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7b3d:	48 8b 05 64 94 01 00 	mov    0x19464(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7b44:	48 89 c2             	mov    %rax,%rdx
    7b47:	48 8d 05 f2 91 01 00 	lea    0x191f2(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7b4e:	48 89 c6             	mov    %rax,%rsi
    7b51:	48 89 df             	mov    %rbx,%rdi
    7b54:	e8 27 bb ff ff       	call   3680 <__cxa_throw@plt>
    7b59:	49 89 c4             	mov    %rax,%r12
    7b5c:	48 89 df             	mov    %rbx,%rdi
    7b5f:	e8 ac b6 ff ff       	call   3210 <__cxa_free_exception@plt>
    7b64:	4c 89 e0             	mov    %r12,%rax
    7b67:	48 89 c7             	mov    %rax,%rdi
    7b6a:	e8 41 bb ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    7b6f:	90                   	nop
    7b70:	48 83 c4 40          	add    $0x40,%rsp
    7b74:	5b                   	pop    %rbx
    7b75:	41 5c                	pop    %r12
    7b77:	5d                   	pop    %rbp
    7b78:	c3                   	ret
    7b79:	90                   	nop

0000000000007b7a <_ZN4rtvc17RenderApplication19createCommandBufferEv>:

void rtvc::RenderApplication::createCommandBuffer()
{
    7b7a:	55                   	push   %rbp
    7b7b:	48 89 e5             	mov    %rsp,%rbp
    7b7e:	41 54                	push   %r12
    7b80:	53                   	push   %rbx
    7b81:	48 83 ec 30          	sub    $0x30,%rsp
    7b85:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    VkCommandBufferAllocateInfo allocInfo{};
    7b89:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7b8d:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    7b91:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    7b95:	c7 45 d0 28 00 00 00 	movl   $0x28,-0x30(%rbp)
    allocInfo.commandPool = commandPool;
    7b9c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ba0:	48 8b 80 f8 00 00 00 	mov    0xf8(%rax),%rax
    7ba7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    7bab:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    allocInfo.commandBufferCount = 1;
    7bb2:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)

    if (vkAllocateCommandBuffers(device, &allocInfo,
    7bb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7bbd:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx
    7bc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7bc8:	48 8b 40 48          	mov    0x48(%rax),%rax
    7bcc:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    7bd0:	48 89 ce             	mov    %rcx,%rsi
    7bd3:	48 89 c7             	mov    %rax,%rdi
    7bd6:	e8 15 b7 ff ff       	call   32f0 <vkAllocateCommandBuffers@plt>
                                 &commandBuffer) != VK_SUCCESS)
    7bdb:	85 c0                	test   %eax,%eax
    7bdd:	0f 95 c0             	setne  %al
    if (vkAllocateCommandBuffers(device, &allocInfo,
    7be0:	84 c0                	test   %al,%al
    7be2:	74 51                	je     7c35 <_ZN4rtvc17RenderApplication19createCommandBufferEv+0xbb>
        throw std::runtime_error("Failed to allocate command buffer.");
    7be4:	bf 10 00 00 00       	mov    $0x10,%edi
    7be9:	e8 52 b5 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7bee:	48 89 c3             	mov    %rax,%rbx
    7bf1:	48 8d 05 48 d9 00 00 	lea    0xd948(%rip),%rax        # 15540 <_ZN6__pstl9execution2v1L5unseqE+0x2d9>
    7bf8:	48 89 c6             	mov    %rax,%rsi
    7bfb:	48 89 df             	mov    %rbx,%rdi
    7bfe:	e8 dd b4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7c03:	48 8b 05 9e 93 01 00 	mov    0x1939e(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c0a:	48 89 c2             	mov    %rax,%rdx
    7c0d:	48 8d 05 2c 91 01 00 	lea    0x1912c(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c14:	48 89 c6             	mov    %rax,%rsi
    7c17:	48 89 df             	mov    %rbx,%rdi
    7c1a:	e8 61 ba ff ff       	call   3680 <__cxa_throw@plt>
    7c1f:	49 89 c4             	mov    %rax,%r12
    7c22:	48 89 df             	mov    %rbx,%rdi
    7c25:	e8 e6 b5 ff ff       	call   3210 <__cxa_free_exception@plt>
    7c2a:	4c 89 e0             	mov    %r12,%rax
    7c2d:	48 89 c7             	mov    %rax,%rdi
    7c30:	e8 7b ba ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    7c35:	90                   	nop
    7c36:	48 83 c4 30          	add    $0x30,%rsp
    7c3a:	5b                   	pop    %rbx
    7c3b:	41 5c                	pop    %r12
    7c3d:	5d                   	pop    %rbp
    7c3e:	c3                   	ret
    7c3f:	90                   	nop

0000000000007c40 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>:

void rtvc::RenderApplication::recordCommandBuffer(
    VkCommandBuffer commandBuffer, uint32_t imageIndex)
{
    7c40:	55                   	push   %rbp
    7c41:	48 89 e5             	mov    %rsp,%rbp
    7c44:	41 54                	push   %r12
    7c46:	53                   	push   %rbx
    7c47:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    7c4e:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    7c55:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
    7c5c:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)
    VkCommandBufferBeginInfo beginInfo{};
    7c62:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7c66:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    7c6a:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    7c6e:	c7 45 d0 2a 00 00 00 	movl   $0x2a,-0x30(%rbp)
    beginInfo.flags = 0;
    7c75:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
    beginInfo.pInheritanceInfo = nullptr;
    7c7c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7c83:	00 

    if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    7c84:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    7c88:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7c8f:	48 89 d6             	mov    %rdx,%rsi
    7c92:	48 89 c7             	mov    %rax,%rdi
    7c95:	e8 b6 b6 ff ff       	call   3350 <vkBeginCommandBuffer@plt>
    7c9a:	85 c0                	test   %eax,%eax
    7c9c:	0f 95 c0             	setne  %al
    7c9f:	84 c0                	test   %al,%al
    7ca1:	74 3b                	je     7cde <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x9e>
        throw std::runtime_error("Failed to begin recording command buffer.");
    7ca3:	bf 10 00 00 00       	mov    $0x10,%edi
    7ca8:	e8 93 b4 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7cad:	48 89 c3             	mov    %rax,%rbx
    7cb0:	48 8d 05 b1 d8 00 00 	lea    0xd8b1(%rip),%rax        # 15568 <_ZN6__pstl9execution2v1L5unseqE+0x301>
    7cb7:	48 89 c6             	mov    %rax,%rsi
    7cba:	48 89 df             	mov    %rbx,%rdi
    7cbd:	e8 1e b4 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7cc2:	48 8b 05 df 92 01 00 	mov    0x192df(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7cc9:	48 89 c2             	mov    %rax,%rdx
    7ccc:	48 8d 05 6d 90 01 00 	lea    0x1906d(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7cd3:	48 89 c6             	mov    %rax,%rsi
    7cd6:	48 89 df             	mov    %rbx,%rdi
    7cd9:	e8 a2 b9 ff ff       	call   3680 <__cxa_throw@plt>

    VkRenderPassBeginInfo renderPassInfo{};
    7cde:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7ce2:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    7ce6:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    7cea:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    7cee:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    7cf2:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
    renderPassInfo.renderPass = renderPass;
    7cf9:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7d00:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    7d07:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    renderPassInfo.framebuffer = swapChainFrameBuffers[imageIndex];
    7d0b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7d12:	48 8d 90 e0 00 00 00 	lea    0xe0(%rax),%rdx
    7d19:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    7d1f:	48 89 c6             	mov    %rax,%rsi
    7d22:	48 89 d7             	mov    %rdx,%rdi
    7d25:	e8 94 29 00 00       	call   a6be <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    7d2a:	48 8b 00             	mov    (%rax),%rax
    7d2d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    renderPassInfo.renderArea.offset = {0, 0};
    7d31:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    7d38:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    renderPassInfo.renderArea.extent = swapChainExtent;
    7d3f:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7d46:	48 8b 80 a4 00 00 00 	mov    0xa4(%rax),%rax
    7d4d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)

    VkClearValue clearColor{{{0.0f, 0.0f, 0.0f, 1.0f}}};
    7d51:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7d55:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    7d5a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7d5e:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    7d63:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7d67:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    7d6c:	f3 0f 10 05 4c d9 00 	movss  0xd94c(%rip),%xmm0        # 156c0 <_ZN6__pstl9execution2v1L5unseqE+0x459>
    7d73:	00 
    7d74:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    renderPassInfo.clearValueCount = 1;
    7d79:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    renderPassInfo.pClearValues = &clearColor;
    7d80:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    7d84:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

    vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    7d88:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    7d8c:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7d93:	ba 00 00 00 00       	mov    $0x0,%edx
    7d98:	48 89 ce             	mov    %rcx,%rsi
    7d9b:	48 89 c7             	mov    %rax,%rdi
    7d9e:	e8 cd b7 ff ff       	call   3570 <vkCmdBeginRenderPass@plt>
                         VK_SUBPASS_CONTENTS_INLINE);

    vkCmdBindPipeline(commandBuffer,
    7da3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    7daa:	48 8b 90 d8 00 00 00 	mov    0xd8(%rax),%rdx
    7db1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7db8:	be 00 00 00 00       	mov    $0x0,%esi
    7dbd:	48 89 c7             	mov    %rax,%rdi
    7dc0:	e8 0b b5 ff ff       	call   32d0 <vkCmdBindPipeline@plt>
                      VK_PIPELINE_BIND_POINT_GRAPHICS,
                      graphicsPipeline);

    vkCmdDraw(commandBuffer, 3, 1, 0, 0);
    7dc5:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7dcc:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    7dd2:	b9 00 00 00 00       	mov    $0x0,%ecx
    7dd7:	ba 01 00 00 00       	mov    $0x1,%edx
    7ddc:	be 03 00 00 00       	mov    $0x3,%esi
    7de1:	48 89 c7             	mov    %rax,%rdi
    7de4:	e8 37 b9 ff ff       	call   3720 <vkCmdDraw@plt>

    vkCmdEndRenderPass(commandBuffer);
    7de9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7df0:	48 89 c7             	mov    %rax,%rdi
    7df3:	e8 48 b2 ff ff       	call   3040 <vkCmdEndRenderPass@plt>

    if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS)
    7df8:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    7dff:	48 89 c7             	mov    %rax,%rdi
    7e02:	e8 09 b9 ff ff       	call   3710 <vkEndCommandBuffer@plt>
    7e07:	85 c0                	test   %eax,%eax
    7e09:	0f 95 c0             	setne  %al
    7e0c:	84 c0                	test   %al,%al
    7e0e:	74 67                	je     7e77 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x237>
        throw std::runtime_error("Failed to record command buffer");
    7e10:	bf 10 00 00 00       	mov    $0x10,%edi
    7e15:	e8 26 b3 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7e1a:	48 89 c3             	mov    %rax,%rbx
    7e1d:	48 8d 05 74 d7 00 00 	lea    0xd774(%rip),%rax        # 15598 <_ZN6__pstl9execution2v1L5unseqE+0x331>
    7e24:	48 89 c6             	mov    %rax,%rsi
    7e27:	48 89 df             	mov    %rbx,%rdi
    7e2a:	e8 b1 b2 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7e2f:	48 8b 05 72 91 01 00 	mov    0x19172(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7e36:	48 89 c2             	mov    %rax,%rdx
    7e39:	48 8d 05 00 8f 01 00 	lea    0x18f00(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7e40:	48 89 c6             	mov    %rax,%rsi
    7e43:	48 89 df             	mov    %rbx,%rdi
    7e46:	e8 35 b8 ff ff       	call   3680 <__cxa_throw@plt>
        throw std::runtime_error("Failed to begin recording command buffer.");
    7e4b:	49 89 c4             	mov    %rax,%r12
    7e4e:	48 89 df             	mov    %rbx,%rdi
    7e51:	e8 ba b3 ff ff       	call   3210 <__cxa_free_exception@plt>
    7e56:	4c 89 e0             	mov    %r12,%rax
    7e59:	48 89 c7             	mov    %rax,%rdi
    7e5c:	e8 4f b8 ff ff       	call   36b0 <_Unwind_Resume@plt>
        throw std::runtime_error("Failed to record command buffer");
    7e61:	49 89 c4             	mov    %rax,%r12
    7e64:	48 89 df             	mov    %rbx,%rdi
    7e67:	e8 a4 b3 ff ff       	call   3210 <__cxa_free_exception@plt>
    7e6c:	4c 89 e0             	mov    %r12,%rax
    7e6f:	48 89 c7             	mov    %rax,%rdi
    7e72:	e8 39 b8 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    7e77:	90                   	nop
    7e78:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    7e7f:	5b                   	pop    %rbx
    7e80:	41 5c                	pop    %r12
    7e82:	5d                   	pop    %rbp
    7e83:	c3                   	ret

0000000000007e84 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>:

void rtvc::RenderApplication::createSyncObjects()
{
    7e84:	55                   	push   %rbp
    7e85:	48 89 e5             	mov    %rsp,%rbp
    7e88:	41 54                	push   %r12
    7e8a:	53                   	push   %rbx
    7e8b:	48 83 ec 50          	sub    $0x50,%rsp
    7e8f:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    VkSemaphoreCreateInfo semaphoreInfo{};
    7e93:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7e97:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    7e9b:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
    semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    7ea0:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

    VkFenceCreateInfo fenceInfo{};
    7ea7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7eab:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    7eaf:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
    fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    7eb4:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
    fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    7ebb:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    7ec2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7ec6:	48 8d 90 08 01 00 00 	lea    0x108(%rax),%rdx
    7ecd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7ed1:	48 8b 40 48          	mov    0x48(%rax),%rax
    7ed5:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    7ed9:	48 89 d1             	mov    %rdx,%rcx
    7edc:	ba 00 00 00 00       	mov    $0x0,%edx
    7ee1:	48 89 c7             	mov    %rax,%rdi
    7ee4:	e8 77 b6 ff ff       	call   3560 <vkCreateSemaphore@plt>
                          &imageAvailableSemaphore) != VK_SUCCESS ||
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
                          &renderFinishedSemaphore) != VK_SUCCESS ||
    7ee9:	85 c0                	test   %eax,%eax
    7eeb:	75 56                	jne    7f43 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0xbf>
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    7eed:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7ef1:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
    7ef8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7efc:	48 8b 40 48          	mov    0x48(%rax),%rax
    7f00:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    7f04:	48 89 d1             	mov    %rdx,%rcx
    7f07:	ba 00 00 00 00       	mov    $0x0,%edx
    7f0c:	48 89 c7             	mov    %rax,%rdi
    7f0f:	e8 4c b6 ff ff       	call   3560 <vkCreateSemaphore@plt>
                          &imageAvailableSemaphore) != VK_SUCCESS ||
    7f14:	85 c0                	test   %eax,%eax
    7f16:	75 2b                	jne    7f43 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0xbf>
        vkCreateFence(device, &fenceInfo,
    7f18:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7f1c:	48 8d 90 18 01 00 00 	lea    0x118(%rax),%rdx
    7f23:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    7f27:	48 8b 40 48          	mov    0x48(%rax),%rax
    7f2b:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    7f2f:	48 89 d1             	mov    %rdx,%rcx
    7f32:	ba 00 00 00 00       	mov    $0x0,%edx
    7f37:	48 89 c7             	mov    %rax,%rdi
    7f3a:	e8 71 b5 ff ff       	call   34b0 <vkCreateFence@plt>
                          &renderFinishedSemaphore) != VK_SUCCESS ||
    7f3f:	85 c0                	test   %eax,%eax
    7f41:	74 07                	je     7f4a <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0xc6>
    7f43:	b8 01 00 00 00       	mov    $0x1,%eax
    7f48:	eb 05                	jmp    7f4f <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0xcb>
    7f4a:	b8 00 00 00 00       	mov    $0x0,%eax
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    7f4f:	84 c0                	test   %al,%al
    7f51:	74 51                	je     7fa4 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x120>
                      nullptr, &inFlightFence) != VK_SUCCESS)
        throw std::runtime_error("Failed to create semaphores.");
    7f53:	bf 10 00 00 00       	mov    $0x10,%edi
    7f58:	e8 e3 b1 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    7f5d:	48 89 c3             	mov    %rax,%rbx
    7f60:	48 8d 05 51 d6 00 00 	lea    0xd651(%rip),%rax        # 155b8 <_ZN6__pstl9execution2v1L5unseqE+0x351>
    7f67:	48 89 c6             	mov    %rax,%rsi
    7f6a:	48 89 df             	mov    %rbx,%rdi
    7f6d:	e8 6e b1 ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    7f72:	48 8b 05 2f 90 01 00 	mov    0x1902f(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7f79:	48 89 c2             	mov    %rax,%rdx
    7f7c:	48 8d 05 bd 8d 01 00 	lea    0x18dbd(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7f83:	48 89 c6             	mov    %rax,%rsi
    7f86:	48 89 df             	mov    %rbx,%rdi
    7f89:	e8 f2 b6 ff ff       	call   3680 <__cxa_throw@plt>
    7f8e:	49 89 c4             	mov    %rax,%r12
    7f91:	48 89 df             	mov    %rbx,%rdi
    7f94:	e8 77 b2 ff ff       	call   3210 <__cxa_free_exception@plt>
    7f99:	4c 89 e0             	mov    %r12,%rax
    7f9c:	48 89 c7             	mov    %rax,%rdi
    7f9f:	e8 0c b7 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    7fa4:	90                   	nop
    7fa5:	48 83 c4 50          	add    $0x50,%rsp
    7fa9:	5b                   	pop    %rbx
    7faa:	41 5c                	pop    %r12
    7fac:	5d                   	pop    %rbp
    7fad:	c3                   	ret

0000000000007fae <_ZN4rtvc17RenderApplication10initWindowEv>:

void rtvc::RenderApplication::initWindow()
{
    7fae:	55                   	push   %rbp
    7faf:	48 89 e5             	mov    %rsp,%rbp
    7fb2:	48 83 ec 10          	sub    $0x10,%rsp
    7fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    glfwInit();
    7fba:	e8 81 b4 ff ff       	call   3440 <glfwInit@plt>

    glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    7fbf:	be 00 00 00 00       	mov    $0x0,%esi
    7fc4:	bf 01 20 02 00       	mov    $0x22001,%edi
    7fc9:	e8 e2 b2 ff ff       	call   32b0 <glfwWindowHint@plt>
    glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    7fce:	be 00 00 00 00       	mov    $0x0,%esi
    7fd3:	bf 03 00 02 00       	mov    $0x20003,%edi
    7fd8:	e8 d3 b2 ff ff       	call   32b0 <glfwWindowHint@plt>

    window.ref = glfwCreateWindow(window.width, window.height,
    7fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fe1:	8b 40 0c             	mov    0xc(%rax),%eax
    7fe4:	89 c6                	mov    %eax,%esi
    7fe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fea:	8b 40 08             	mov    0x8(%rax),%eax
    7fed:	89 c7                	mov    %eax,%edi
    7fef:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    7ff5:	b9 00 00 00 00       	mov    $0x0,%ecx
    7ffa:	48 8d 05 d4 d5 00 00 	lea    0xd5d4(%rip),%rax        # 155d5 <_ZN6__pstl9execution2v1L5unseqE+0x36e>
    8001:	48 89 c2             	mov    %rax,%rdx
    8004:	e8 f7 b5 ff ff       	call   3600 <glfwCreateWindow@plt>
    8009:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    800d:	48 89 02             	mov    %rax,(%rdx)
                                  "Vulkan Triangle Application",
                                  nullptr, nullptr);
}
    8010:	90                   	nop
    8011:	c9                   	leave
    8012:	c3                   	ret
    8013:	90                   	nop

0000000000008014 <_ZN4rtvc17RenderApplication10initVulkanEv>:

void rtvc::RenderApplication::initVulkan()
{
    8014:	55                   	push   %rbp
    8015:	48 89 e5             	mov    %rsp,%rbp
    8018:	48 83 ec 10          	sub    $0x10,%rsp
    801c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    creatInstance();
    8020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8024:	48 89 c7             	mov    %rax,%rdi
    8027:	e8 94 d1 ff ff       	call   51c0 <_ZN4rtvc17RenderApplication13creatInstanceEv>
    setupDebugMessenger();
    802c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8030:	48 89 c7             	mov    %rax,%rdi
    8033:	e8 c8 d0 ff ff       	call   5100 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>
    createSurface();
    8038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    803c:	48 89 c7             	mov    %rax,%rdi
    803f:	e8 56 e2 ff ff       	call   629a <_ZN4rtvc17RenderApplication13createSurfaceEv>
    selectPhysicalDevice();
    8044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8048:	48 89 c7             	mov    %rax,%rdi
    804b:	e8 48 da ff ff       	call   5a98 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>
    createLogicalDevice();
    8050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8054:	48 89 c7             	mov    %rax,%rdi
    8057:	e8 40 de ff ff       	call   5e9c <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>
    createSwapChain();
    805c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8060:	48 89 c7             	mov    %rax,%rdi
    8063:	e8 a2 e4 ff ff       	call   650a <_ZN4rtvc17RenderApplication15createSwapChainEv>
    createImageViews();
    8068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    806c:	48 89 c7             	mov    %rax,%rdi
    806f:	e8 28 e8 ff ff       	call   689c <_ZN4rtvc17RenderApplication16createImageViewsEv>
    createRenderPass();
    8074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8078:	48 89 c7             	mov    %rax,%rdi
    807b:	e8 60 ec ff ff       	call   6ce0 <_ZN4rtvc17RenderApplication16createRenderPassEv>
    createGraphicsPipeline();
    8080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8084:	48 89 c7             	mov    %rax,%rdi
    8087:	e8 5a ee ff ff       	call   6ee6 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
    createFramebuffers();
    808c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8090:	48 89 c7             	mov    %rax,%rdi
    8093:	e8 78 f8 ff ff       	call   7910 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
    createCommandPool();
    8098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    809c:	48 89 c7             	mov    %rax,%rdi
    809f:	e8 f0 f9 ff ff       	call   7a94 <_ZN4rtvc17RenderApplication17createCommandPoolEv>
    createCommandBuffer();
    80a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80a8:	48 89 c7             	mov    %rax,%rdi
    80ab:	e8 ca fa ff ff       	call   7b7a <_ZN4rtvc17RenderApplication19createCommandBufferEv>
    createSyncObjects();
    80b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b4:	48 89 c7             	mov    %rax,%rdi
    80b7:	e8 c8 fd ff ff       	call   7e84 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>
}
    80bc:	90                   	nop
    80bd:	c9                   	leave
    80be:	c3                   	ret
    80bf:	90                   	nop

00000000000080c0 <_ZN4rtvc17RenderApplication9drawFrameEv>:

void rtvc::RenderApplication::drawFrame()
{
    80c0:	55                   	push   %rbp
    80c1:	48 89 e5             	mov    %rsp,%rbp
    80c4:	41 54                	push   %r12
    80c6:	53                   	push   %rbx
    80c7:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    80ce:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
    vkWaitForFences(device, 1, &inFlightFence, VK_TRUE, UINT64_MAX);
    80d5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    80dc:	48 8d 90 18 01 00 00 	lea    0x118(%rax),%rdx
    80e3:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    80ea:	48 8b 40 48          	mov    0x48(%rax),%rax
    80ee:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    80f5:	b9 01 00 00 00       	mov    $0x1,%ecx
    80fa:	be 01 00 00 00       	mov    $0x1,%esi
    80ff:	48 89 c7             	mov    %rax,%rdi
    8102:	e8 89 b0 ff ff       	call   3190 <vkWaitForFences@plt>
    vkResetFences(device, 1, &inFlightFence);
    8107:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    810e:	48 8d 90 18 01 00 00 	lea    0x118(%rax),%rdx
    8115:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    811c:	48 8b 40 48          	mov    0x48(%rax),%rax
    8120:	be 01 00 00 00       	mov    $0x1,%esi
    8125:	48 89 c7             	mov    %rax,%rdi
    8128:	e8 c3 b4 ff ff       	call   35f0 <vkResetFences@plt>

    uint32_t imageIndex;
    vkAcquireNextImageKHR(device, swapChain, UINT64_MAX,
    812d:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8134:	48 8b 90 08 01 00 00 	mov    0x108(%rax),%rdx
    813b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8142:	48 8b b0 80 00 00 00 	mov    0x80(%rax),%rsi
    8149:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8150:	48 8b 40 48          	mov    0x48(%rax),%rax
    8154:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
    8158:	49 89 c9             	mov    %rcx,%r9
    815b:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    8161:	48 89 d1             	mov    %rdx,%rcx
    8164:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    816b:	48 89 c7             	mov    %rax,%rdi
    816e:	e8 8d af ff ff       	call   3100 <vkAcquireNextImageKHR@plt>
                          imageAvailableSemaphore, VK_NULL_HANDLE,
                          &imageIndex);

    vkResetCommandBuffer(commandBuffer, 0);
    8173:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    817a:	48 8b 80 00 01 00 00 	mov    0x100(%rax),%rax
    8181:	be 00 00 00 00       	mov    $0x0,%esi
    8186:	48 89 c7             	mov    %rax,%rdi
    8189:	e8 32 b3 ff ff       	call   34c0 <vkResetCommandBuffer@plt>
    recordCommandBuffer(commandBuffer, imageIndex);
    818e:	8b 55 ec             	mov    -0x14(%rbp),%edx
    8191:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8198:	48 8b 88 00 01 00 00 	mov    0x100(%rax),%rcx
    819f:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    81a6:	48 89 ce             	mov    %rcx,%rsi
    81a9:	48 89 c7             	mov    %rax,%rdi
    81ac:	e8 8f fa ff ff       	call   7c40 <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>

    VkSubmitInfo submitInfo{};
    81b1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    81b5:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    81b9:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    81bd:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    81c1:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    81c5:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
    submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    81ca:	c7 45 a0 04 00 00 00 	movl   $0x4,-0x60(%rbp)

    VkSemaphore waitSemaphores[] = {imageAvailableSemaphore};
    81d1:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    81d8:	48 8b 80 08 01 00 00 	mov    0x108(%rax),%rax
    81df:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    VkPipelineStageFlags waitStages[] =
    81e3:	c7 45 94 00 04 00 00 	movl   $0x400,-0x6c(%rbp)
        {VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT};
    submitInfo.waitSemaphoreCount = 1;
    81ea:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    submitInfo.pWaitSemaphores = waitSemaphores;
    81f1:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    81f5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    submitInfo.pWaitDstStageMask = waitStages;
    81f9:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    81fd:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    submitInfo.commandBufferCount = 1;
    8201:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    submitInfo.pCommandBuffers = &commandBuffer;
    8208:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    820f:	48 05 00 01 00 00    	add    $0x100,%rax
    8215:	48 89 45 d0          	mov    %rax,-0x30(%rbp)

    VkSemaphore signalSemaphores[] = {renderFinishedSemaphore};
    8219:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8220:	48 8b 80 10 01 00 00 	mov    0x110(%rax),%rax
    8227:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    submitInfo.signalSemaphoreCount = 1;
    822b:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
    submitInfo.pSignalSemaphores = signalSemaphores;
    8232:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    8236:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    if(vkQueueSubmit(graphicsQueue,1,&submitInfo, inFlightFence)!=VK_SUCCESS)
    823a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8241:	48 8b 88 18 01 00 00 	mov    0x118(%rax),%rcx
    8248:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    824f:	48 8b 40 50          	mov    0x50(%rax),%rax
    8253:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    8257:	be 01 00 00 00       	mov    $0x1,%esi
    825c:	48 89 c7             	mov    %rax,%rdi
    825f:	e8 bc b2 ff ff       	call   3520 <vkQueueSubmit@plt>
    8264:	85 c0                	test   %eax,%eax
    8266:	0f 95 c0             	setne  %al
    8269:	84 c0                	test   %al,%al
    826b:	74 3b                	je     82a8 <_ZN4rtvc17RenderApplication9drawFrameEv+0x1e8>
        throw std::runtime_error("Failed to submit draw command buffer.");
    826d:	bf 10 00 00 00       	mov    $0x10,%edi
    8272:	e8 c9 ae ff ff       	call   3140 <__cxa_allocate_exception@plt>
    8277:	48 89 c3             	mov    %rax,%rbx
    827a:	48 8d 05 77 d3 00 00 	lea    0xd377(%rip),%rax        # 155f8 <_ZN6__pstl9execution2v1L5unseqE+0x391>
    8281:	48 89 c6             	mov    %rax,%rsi
    8284:	48 89 df             	mov    %rbx,%rdi
    8287:	e8 54 ae ff ff       	call   30e0 <_ZNSt13runtime_errorC1EPKc@plt>
    828c:	48 8b 05 15 8d 01 00 	mov    0x18d15(%rip),%rax        # 20fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8293:	48 89 c2             	mov    %rax,%rdx
    8296:	48 8d 05 a3 8a 01 00 	lea    0x18aa3(%rip),%rax        # 20d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    829d:	48 89 c6             	mov    %rax,%rsi
    82a0:	48 89 df             	mov    %rbx,%rdi
    82a3:	e8 d8 b3 ff ff       	call   3680 <__cxa_throw@plt>

    VkPresentInfoKHR presentInfo{};
    82a8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    82ac:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    82b3:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    82ba:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    82c1:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    82c8:	c7 85 40 ff ff ff e9 	movl   $0x3b9acde9,-0xc0(%rbp)
    82cf:	cd 9a 3b 
    presentInfo.waitSemaphoreCount = 1;
    82d2:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
    82d9:	00 00 00 
    presentInfo.pWaitSemaphores = signalSemaphores;
    82dc:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    82e0:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

    VkSwapchainKHR swapChains[] = {swapChain};
    82e7:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    82ee:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
    82f5:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    presentInfo.swapchainCount = 1;
    82fc:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    8303:	00 00 00 
    presentInfo.pSwapchains = swapChains;
    8306:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    830d:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    presentInfo.pImageIndices = &imageIndex;
    8314:	48 8d 45 ec          	lea    -0x14(%rbp),%rax
    8318:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    presentInfo.pResults = nullptr;
    831f:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    8326:	00 00 00 00 
    
    vkQueuePresentKHR(presentQueue, &presentInfo);
    832a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    8331:	48 8b 40 60          	mov    0x60(%rax),%rax
    8335:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    833c:	48 89 d6             	mov    %rdx,%rsi
    833f:	48 89 c7             	mov    %rax,%rdi
    8342:	e8 c9 b2 ff ff       	call   3610 <vkQueuePresentKHR@plt>
}
    8347:	eb 16                	jmp    835f <_ZN4rtvc17RenderApplication9drawFrameEv+0x29f>
        throw std::runtime_error("Failed to submit draw command buffer.");
    8349:	49 89 c4             	mov    %rax,%r12
    834c:	48 89 df             	mov    %rbx,%rdi
    834f:	e8 bc ae ff ff       	call   3210 <__cxa_free_exception@plt>
    8354:	4c 89 e0             	mov    %r12,%rax
    8357:	48 89 c7             	mov    %rax,%rdi
    835a:	e8 51 b3 ff ff       	call   36b0 <_Unwind_Resume@plt>
}
    835f:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    8366:	5b                   	pop    %rbx
    8367:	41 5c                	pop    %r12
    8369:	5d                   	pop    %rbp
    836a:	c3                   	ret
    836b:	90                   	nop

000000000000836c <_ZN4rtvc17RenderApplication8mainLoopEv>:

void rtvc::RenderApplication::mainLoop()
{
    836c:	55                   	push   %rbp
    836d:	48 89 e5             	mov    %rsp,%rbp
    8370:	48 83 ec 10          	sub    $0x10,%rsp
    8374:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    while (!glfwWindowShouldClose(window.ref))
    8378:	eb 11                	jmp    838b <_ZN4rtvc17RenderApplication8mainLoopEv+0x1f>
    {
        glfwPollEvents();
    837a:	e8 91 af ff ff       	call   3310 <glfwPollEvents@plt>
        drawFrame();
    837f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8383:	48 89 c7             	mov    %rax,%rdi
    8386:	e8 35 fd ff ff       	call   80c0 <_ZN4rtvc17RenderApplication9drawFrameEv>
    while (!glfwWindowShouldClose(window.ref))
    838b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    838f:	48 8b 00             	mov    (%rax),%rax
    8392:	48 89 c7             	mov    %rax,%rdi
    8395:	e8 66 b3 ff ff       	call   3700 <glfwWindowShouldClose@plt>
    839a:	85 c0                	test   %eax,%eax
    839c:	0f 94 c0             	sete   %al
    839f:	84 c0                	test   %al,%al
    83a1:	75 d7                	jne    837a <_ZN4rtvc17RenderApplication8mainLoopEv+0xe>
    }

    vkDeviceWaitIdle(device);
    83a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a7:	48 8b 40 48          	mov    0x48(%rax),%rax
    83ab:	48 89 c7             	mov    %rax,%rdi
    83ae:	e8 cd ac ff ff       	call   3080 <vkDeviceWaitIdle@plt>
}
    83b3:	90                   	nop
    83b4:	c9                   	leave
    83b5:	c3                   	ret

00000000000083b6 <_ZN4rtvc17RenderApplication7cleanUpEv>:

void rtvc::RenderApplication::cleanUp()
{
    83b6:	55                   	push   %rbp
    83b7:	48 89 e5             	mov    %rsp,%rbp
    83ba:	48 83 ec 50          	sub    $0x50,%rsp
    83be:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    vkDestroySemaphore(device, imageAvailableSemaphore, nullptr);
    83c2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    83c6:	48 8b 88 08 01 00 00 	mov    0x108(%rax),%rcx
    83cd:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    83d1:	48 8b 40 48          	mov    0x48(%rax),%rax
    83d5:	ba 00 00 00 00       	mov    $0x0,%edx
    83da:	48 89 ce             	mov    %rcx,%rsi
    83dd:	48 89 c7             	mov    %rax,%rdi
    83e0:	e8 cb ac ff ff       	call   30b0 <vkDestroySemaphore@plt>
    vkDestroySemaphore(device, renderFinishedSemaphore, nullptr);
    83e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    83e9:	48 8b 88 10 01 00 00 	mov    0x110(%rax),%rcx
    83f0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    83f4:	48 8b 40 48          	mov    0x48(%rax),%rax
    83f8:	ba 00 00 00 00       	mov    $0x0,%edx
    83fd:	48 89 ce             	mov    %rcx,%rsi
    8400:	48 89 c7             	mov    %rax,%rdi
    8403:	e8 a8 ac ff ff       	call   30b0 <vkDestroySemaphore@plt>
    vkDestroyFence(device, inFlightFence, nullptr);
    8408:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    840c:	48 8b 88 18 01 00 00 	mov    0x118(%rax),%rcx
    8413:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8417:	48 8b 40 48          	mov    0x48(%rax),%rax
    841b:	ba 00 00 00 00       	mov    $0x0,%edx
    8420:	48 89 ce             	mov    %rcx,%rsi
    8423:	48 89 c7             	mov    %rax,%rdi
    8426:	e8 c5 af ff ff       	call   33f0 <vkDestroyFence@plt>

    vkDestroyCommandPool(device, commandPool, nullptr);
    842b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    842f:	48 8b 88 f8 00 00 00 	mov    0xf8(%rax),%rcx
    8436:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    843a:	48 8b 40 48          	mov    0x48(%rax),%rax
    843e:	ba 00 00 00 00       	mov    $0x0,%edx
    8443:	48 89 ce             	mov    %rcx,%rsi
    8446:	48 89 c7             	mov    %rax,%rdi
    8449:	e8 32 b1 ff ff       	call   3580 <vkDestroyCommandPool@plt>

    for (auto framebuffer : swapChainFrameBuffers)
    844e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8452:	48 05 e0 00 00 00    	add    $0xe0,%rax
    8458:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    845c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8460:	48 89 c7             	mov    %rax,%rdi
    8463:	e8 76 22 00 00       	call   a6de <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>
    8468:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    846c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8470:	48 89 c7             	mov    %rax,%rdi
    8473:	e8 8c 22 00 00       	call   a704 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>
    8478:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    847c:	eb 3b                	jmp    84b9 <_ZN4rtvc17RenderApplication7cleanUpEv+0x103>
    847e:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    8482:	48 89 c7             	mov    %rax,%rdi
    8485:	e8 fe 22 00 00       	call   a788 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>
    848a:	48 8b 00             	mov    (%rax),%rax
    848d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
        vkDestroyFramebuffer(device, framebuffer, nullptr);
    8491:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8495:	48 8b 40 48          	mov    0x48(%rax),%rax
    8499:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    849d:	ba 00 00 00 00       	mov    $0x0,%edx
    84a2:	48 89 ce             	mov    %rcx,%rsi
    84a5:	48 89 c7             	mov    %rax,%rdi
    84a8:	e8 c3 b1 ff ff       	call   3670 <vkDestroyFramebuffer@plt>
    for (auto framebuffer : swapChainFrameBuffers)
    84ad:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    84b1:	48 89 c7             	mov    %rax,%rdi
    84b4:	e8 af 22 00 00       	call   a768 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>
    84b9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    84bd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    84c1:	48 89 d6             	mov    %rdx,%rsi
    84c4:	48 89 c7             	mov    %rax,%rdi
    84c7:	e8 61 22 00 00       	call   a72d <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    84cc:	84 c0                	test   %al,%al
    84ce:	75 ae                	jne    847e <_ZN4rtvc17RenderApplication7cleanUpEv+0xc8>

    vkDestroyPipeline(device, graphicsPipeline, nullptr);
    84d0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    84d4:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    84db:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    84df:	48 8b 40 48          	mov    0x48(%rax),%rax
    84e3:	ba 00 00 00 00       	mov    $0x0,%edx
    84e8:	48 89 ce             	mov    %rcx,%rsi
    84eb:	48 89 c7             	mov    %rax,%rdi
    84ee:	e8 0d af ff ff       	call   3400 <vkDestroyPipeline@plt>
    vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    84f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    84f7:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    84fe:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8502:	48 8b 40 48          	mov    0x48(%rax),%rax
    8506:	ba 00 00 00 00       	mov    $0x0,%edx
    850b:	48 89 ce             	mov    %rcx,%rsi
    850e:	48 89 c7             	mov    %rax,%rdi
    8511:	e8 ba af ff ff       	call   34d0 <vkDestroyPipelineLayout@plt>

    vkDestroyRenderPass(device, renderPass, nullptr);
    8516:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    851a:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
    8521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8525:	48 8b 40 48          	mov    0x48(%rax),%rax
    8529:	ba 00 00 00 00       	mov    $0x0,%edx
    852e:	48 89 ce             	mov    %rcx,%rsi
    8531:	48 89 c7             	mov    %rax,%rdi
    8534:	e8 e7 ad ff ff       	call   3320 <vkDestroyRenderPass@plt>

    for (auto imageView : swapChainImageViews)
    8539:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    853d:	48 05 b0 00 00 00    	add    $0xb0,%rax
    8543:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    8547:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    854b:	48 89 c7             	mov    %rax,%rdi
    854e:	e8 47 22 00 00       	call   a79a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    8553:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    8557:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    855b:	48 89 c7             	mov    %rax,%rdi
    855e:	e8 5d 22 00 00       	call   a7c0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    8563:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    8567:	eb 3b                	jmp    85a4 <_ZN4rtvc17RenderApplication7cleanUpEv+0x1ee>
    8569:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    856d:	48 89 c7             	mov    %rax,%rdi
    8570:	e8 cf 22 00 00       	call   a844 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    8575:	48 8b 00             	mov    (%rax),%rax
    8578:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
        vkDestroyImageView(device, imageView, nullptr);
    857c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8580:	48 8b 40 48          	mov    0x48(%rax),%rax
    8584:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8588:	ba 00 00 00 00       	mov    $0x0,%edx
    858d:	48 89 ce             	mov    %rcx,%rsi
    8590:	48 89 c7             	mov    %rax,%rdi
    8593:	e8 38 b1 ff ff       	call   36d0 <vkDestroyImageView@plt>
    for (auto imageView : swapChainImageViews)
    8598:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    859c:	48 89 c7             	mov    %rax,%rdi
    859f:	e8 80 22 00 00       	call   a824 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    85a4:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    85a8:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    85ac:	48 89 d6             	mov    %rdx,%rsi
    85af:	48 89 c7             	mov    %rax,%rdi
    85b2:	e8 32 22 00 00       	call   a7e9 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    85b7:	84 c0                	test   %al,%al
    85b9:	75 ae                	jne    8569 <_ZN4rtvc17RenderApplication7cleanUpEv+0x1b3>

    vkDestroySwapchainKHR(device, swapChain, nullptr);
    85bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85bf:	48 8b 88 80 00 00 00 	mov    0x80(%rax),%rcx
    85c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85ca:	48 8b 40 48          	mov    0x48(%rax),%rax
    85ce:	ba 00 00 00 00       	mov    $0x0,%edx
    85d3:	48 89 ce             	mov    %rcx,%rsi
    85d6:	48 89 c7             	mov    %rax,%rdi
    85d9:	e8 c2 aa ff ff       	call   30a0 <vkDestroySwapchainKHR@plt>

    vkDestroyDevice(device, nullptr);
    85de:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85e2:	48 8b 40 48          	mov    0x48(%rax),%rax
    85e6:	be 00 00 00 00       	mov    $0x0,%esi
    85eb:	48 89 c7             	mov    %rax,%rdi
    85ee:	e8 7d ac ff ff       	call   3270 <vkDestroyDevice@plt>

    if (enableValidationLayers)
    85f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    85f7:	0f b6 40 30          	movzbl 0x30(%rax),%eax
    85fb:	84 c0                	test   %al,%al
    85fd:	74 20                	je     861f <_ZN4rtvc17RenderApplication7cleanUpEv+0x269>
        destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    85ff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8603:	48 8b 48 38          	mov    0x38(%rax),%rcx
    8607:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    860b:	48 8b 40 10          	mov    0x10(%rax),%rax
    860f:	ba 00 00 00 00       	mov    $0x0,%edx
    8614:	48 89 ce             	mov    %rcx,%rsi
    8617:	48 89 c7             	mov    %rax,%rdi
    861a:	e8 71 c6 ff ff       	call   4c90 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>

    vkDestroySurfaceKHR(instance, surface, nullptr);
    861f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8623:	48 8b 48 58          	mov    0x58(%rax),%rcx
    8627:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    862b:	48 8b 40 10          	mov    0x10(%rax),%rax
    862f:	ba 00 00 00 00       	mov    $0x0,%edx
    8634:	48 89 ce             	mov    %rcx,%rsi
    8637:	48 89 c7             	mov    %rax,%rdi
    863a:	e8 61 b0 ff ff       	call   36a0 <vkDestroySurfaceKHR@plt>

    vkDestroyInstance(instance, nullptr);
    863f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8643:	48 8b 40 10          	mov    0x10(%rax),%rax
    8647:	be 00 00 00 00       	mov    $0x0,%esi
    864c:	48 89 c7             	mov    %rax,%rdi
    864f:	e8 1c ad ff ff       	call   3370 <vkDestroyInstance@plt>

    glfwDestroyWindow(window.ref);
    8654:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    8658:	48 8b 00             	mov    (%rax),%rax
    865b:	48 89 c7             	mov    %rax,%rdi
    865e:	e8 5d aa ff ff       	call   30c0 <glfwDestroyWindow@plt>

    glfwTerminate();
    8663:	e8 18 ad ff ff       	call   3380 <glfwTerminate@plt>
}
    8668:	90                   	nop
    8669:	c9                   	leave
    866a:	c3                   	ret
    866b:	90                   	nop

000000000000866c <_ZN4rtvc17RenderApplication3runEv>:

void rtvc::RenderApplication::run()
{
    866c:	55                   	push   %rbp
    866d:	48 89 e5             	mov    %rsp,%rbp
    8670:	48 83 ec 10          	sub    $0x10,%rsp
    8674:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    initWindow();
    8678:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    867c:	48 89 c7             	mov    %rax,%rdi
    867f:	e8 2a f9 ff ff       	call   7fae <_ZN4rtvc17RenderApplication10initWindowEv>
    initVulkan();
    8684:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8688:	48 89 c7             	mov    %rax,%rdi
    868b:	e8 84 f9 ff ff       	call   8014 <_ZN4rtvc17RenderApplication10initVulkanEv>
    mainLoop();
    8690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8694:	48 89 c7             	mov    %rax,%rdi
    8697:	e8 d0 fc ff ff       	call   836c <_ZN4rtvc17RenderApplication8mainLoopEv>
    cleanUp();
    869c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86a0:	48 89 c7             	mov    %rax,%rdi
    86a3:	e8 0e fd ff ff       	call   83b6 <_ZN4rtvc17RenderApplication7cleanUpEv>
    86a8:	90                   	nop
    86a9:	c9                   	leave
    86aa:	c3                   	ret

00000000000086ab <_Z41__static_initialization_and_destruction_0ii>:
    86ab:	55                   	push   %rbp
    86ac:	48 89 e5             	mov    %rsp,%rbp
    86af:	48 83 ec 10          	sub    $0x10,%rsp
    86b3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    86b6:	89 75 f8             	mov    %esi,-0x8(%rbp)
    86b9:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    86bd:	75 3b                	jne    86fa <_Z41__static_initialization_and_destruction_0ii+0x4f>
    86bf:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    86c6:	75 32                	jne    86fa <_Z41__static_initialization_and_destruction_0ii+0x4f>
    86c8:	48 8d 05 23 8f 01 00 	lea    0x18f23(%rip),%rax        # 215f2 <_ZStL8__ioinit>
    86cf:	48 89 c7             	mov    %rax,%rdi
    86d2:	e8 f9 ae ff ff       	call   35d0 <_ZNSt8ios_base4InitC1Ev@plt>
    86d7:	48 8d 05 b2 8c 01 00 	lea    0x18cb2(%rip),%rax        # 21390 <__dso_handle>
    86de:	48 89 c2             	mov    %rax,%rdx
    86e1:	48 8d 05 0a 8f 01 00 	lea    0x18f0a(%rip),%rax        # 215f2 <_ZStL8__ioinit>
    86e8:	48 89 c6             	mov    %rax,%rsi
    86eb:	48 8b 05 d6 88 01 00 	mov    0x188d6(%rip),%rax        # 20fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    86f2:	48 89 c7             	mov    %rax,%rdi
    86f5:	e8 e6 ab ff ff       	call   32e0 <__cxa_atexit@plt>
    86fa:	90                   	nop
    86fb:	c9                   	leave
    86fc:	c3                   	ret

00000000000086fd <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    86fd:	55                   	push   %rbp
    86fe:	48 89 e5             	mov    %rsp,%rbp
    8701:	be ff ff 00 00       	mov    $0xffff,%esi
    8706:	bf 01 00 00 00       	mov    $0x1,%edi
    870b:	e8 9b ff ff ff       	call   86ab <_Z41__static_initialization_and_destruction_0ii>
    8710:	5d                   	pop    %rbp
    8711:	c3                   	ret

0000000000008712 <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    8712:	55                   	push   %rbp
    8713:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    8716:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    871b:	5d                   	pop    %rbp
    871c:	c3                   	ret
    871d:	90                   	nop

000000000000871e <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    871e:	55                   	push   %rbp
    871f:	48 89 e5             	mov    %rsp,%rbp
    8722:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8726:	48 8d 15 e3 85 01 00 	lea    0x185e3(%rip),%rdx        # 20d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    872d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8731:	48 89 10             	mov    %rdx,(%rax)
    8734:	90                   	nop
    8735:	5d                   	pop    %rbp
    8736:	c3                   	ret

0000000000008737 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    8737:	55                   	push   %rbp
    8738:	48 89 e5             	mov    %rsp,%rbp
    873b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    873f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8743:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8747:	5d                   	pop    %rbp
    8748:	c3                   	ret

0000000000008749 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    8749:	55                   	push   %rbp
    874a:	48 89 e5             	mov    %rsp,%rbp
    874d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8751:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8755:	90                   	nop
    8756:	5d                   	pop    %rbp
    8757:	c3                   	ret

0000000000008758 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    8758:	55                   	push   %rbp
    8759:	48 89 e5             	mov    %rsp,%rbp
    875c:	48 83 ec 10          	sub    $0x10,%rsp
    8760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    8764:	e8 a9 ff ff ff       	call   8712 <_ZSt23__is_constant_evaluatedv>
    8769:	84 c0                	test   %al,%al
    876b:	74 0e                	je     877b <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    876d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8771:	48 89 c7             	mov    %rax,%rdi
    8774:	e8 69 03 00 00       	call   8ae2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    8779:	eb 0d                	jmp    8788 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    877b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    877f:	48 89 c7             	mov    %rax,%rdi
    8782:	e8 99 a9 ff ff       	call   3120 <strlen@plt>
    8787:	90                   	nop
      }
    8788:	c9                   	leave
    8789:	c3                   	ret

000000000000878a <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    878a:	55                   	push   %rbp
    878b:	48 89 e5             	mov    %rsp,%rbp
    878e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8792:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8796:	5d                   	pop    %rbp
    8797:	c3                   	ret

0000000000008798 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    8798:	55                   	push   %rbp
    8799:	48 89 e5             	mov    %rsp,%rbp
    879c:	89 7d fc             	mov    %edi,-0x4(%rbp)
    879f:	89 75 f8             	mov    %esi,-0x8(%rbp)
    87a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    87a5:	0b 45 f8             	or     -0x8(%rbp),%eax
    87a8:	5d                   	pop    %rbp
    87a9:	c3                   	ret

00000000000087aa <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    87aa:	55                   	push   %rbp
    87ab:	48 89 e5             	mov    %rsp,%rbp
    87ae:	48 83 ec 10          	sub    $0x10,%rsp
    87b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    87b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87ba:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    87c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c4:	48 89 c7             	mov    %rax,%rdi
    87c7:	e8 04 00 00 00       	call   87d0 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    87cc:	90                   	nop
    87cd:	c9                   	leave
    87ce:	c3                   	ret
    87cf:	90                   	nop

00000000000087d0 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    87d0:	55                   	push   %rbp
    87d1:	48 89 e5             	mov    %rsp,%rbp
    87d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    87d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87dc:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    87e3:	00 
      _M_header._M_left = &_M_header;
    87e4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    87e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87ec:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    87f0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    87f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87f8:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    87fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8800:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    8807:	00 
    }
    8808:	90                   	nop
    8809:	5d                   	pop    %rbp
    880a:	c3                   	ret
    880b:	90                   	nop

000000000000880c <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    880c:	55                   	push   %rbp
    880d:	48 89 e5             	mov    %rsp,%rbp
    8810:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    8814:	48 8d 05 35 ca 00 00 	lea    0xca35(%rip),%rax        # 15250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    881b:	5d                   	pop    %rbp
    881c:	c3                   	ret
    881d:	90                   	nop

000000000000881e <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    881e:	55                   	push   %rbp
    881f:	48 89 e5             	mov    %rsp,%rbp
    8822:	48 83 ec 10          	sub    $0x10,%rsp
    8826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    882a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    882e:	48 89 c7             	mov    %rax,%rdi
    8831:	e8 e8 fe ff ff       	call   871e <_ZNSt9exceptionC1Ev>
    8836:	48 8d 15 93 84 01 00 	lea    0x18493(%rip),%rdx        # 20cd0 <_ZTVSt19bad_optional_access+0x10>
    883d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8841:	48 89 10             	mov    %rdx,(%rax)
    8844:	90                   	nop
    8845:	c9                   	leave
    8846:	c3                   	ret

0000000000008847 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    8847:	55                   	push   %rbp
    8848:	48 89 e5             	mov    %rsp,%rbp
    884b:	53                   	push   %rbx
    884c:	48 83 ec 08          	sub    $0x8,%rsp
    8850:	bf 08 00 00 00       	mov    $0x8,%edi
    8855:	e8 e6 a8 ff ff       	call   3140 <__cxa_allocate_exception@plt>
    885a:	48 89 c3             	mov    %rax,%rbx
    885d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    8864:	48 89 df             	mov    %rbx,%rdi
    8867:	e8 b2 ff ff ff       	call   881e <_ZNSt19bad_optional_accessC1Ev>
    886c:	48 8d 05 ff ad 00 00 	lea    0xadff(%rip),%rax        # 13672 <_ZNSt19bad_optional_accessD1Ev>
    8873:	48 89 c2             	mov    %rax,%rdx
    8876:	48 8d 05 db 84 01 00 	lea    0x184db(%rip),%rax        # 20d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    887d:	48 89 c6             	mov    %rax,%rsi
    8880:	48 89 df             	mov    %rbx,%rdi
    8883:	e8 f8 ad ff ff       	call   3680 <__cxa_throw@plt>

0000000000008888 <_ZNSt14numeric_limitsIjE3maxEv>:

      static _GLIBCXX_CONSTEXPR unsigned int
      min() _GLIBCXX_USE_NOEXCEPT { return 0; }

      static _GLIBCXX_CONSTEXPR unsigned int
      max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__ * 2U + 1; }
    8888:	55                   	push   %rbp
    8889:	48 89 e5             	mov    %rsp,%rbp
    888c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8891:	5d                   	pop    %rbp
    8892:	c3                   	ret
    8893:	90                   	nop

0000000000008894 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>:
        struct QueueFamilyIndices
        {
            std::optional<uint32_t> graphicsFamily;
            std::optional<uint32_t> presentFamily;

            bool isComplete()
    8894:	55                   	push   %rbp
    8895:	48 89 e5             	mov    %rsp,%rbp
    8898:	48 83 ec 10          	sub    $0x10,%rsp
    889c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
            {
                return graphicsFamily.has_value() && presentFamily.has_value();
    88a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88a4:	48 89 c7             	mov    %rax,%rdi
    88a7:	e8 98 02 00 00       	call   8b44 <_ZNKSt8optionalIjE9has_valueEv>
    88ac:	84 c0                	test   %al,%al
    88ae:	74 1b                	je     88cb <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    88b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88b4:	48 83 c0 08          	add    $0x8,%rax
    88b8:	48 89 c7             	mov    %rax,%rdi
    88bb:	e8 84 02 00 00       	call   8b44 <_ZNKSt8optionalIjE9has_valueEv>
    88c0:	84 c0                	test   %al,%al
    88c2:	74 07                	je     88cb <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    88c4:	b8 01 00 00 00       	mov    $0x1,%eax
    88c9:	eb 05                	jmp    88d0 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x3c>
    88cb:	b8 00 00 00 00       	mov    $0x0,%eax
            }
    88d0:	c9                   	leave
    88d1:	c3                   	ret

00000000000088d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    88d2:	55                   	push   %rbp
    88d3:	48 89 e5             	mov    %rsp,%rbp
    88d6:	48 83 ec 10          	sub    $0x10,%rsp
    88da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88e2:	48 89 c7             	mov    %rax,%rdi
    88e5:	e8 90 02 00 00       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    88ea:	90                   	nop
    88eb:	c9                   	leave
    88ec:	c3                   	ret
    88ed:	90                   	nop

00000000000088ee <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way. Managing the pointer is the user's responsibility.
       */
      ~set() = default;
    88ee:	55                   	push   %rbp
    88ef:	48 89 e5             	mov    %rsp,%rbp
    88f2:	48 83 ec 10          	sub    $0x10,%rsp
    88f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88fe:	48 89 c7             	mov    %rax,%rdi
    8901:	e8 8a 09 00 00       	call   9290 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    8906:	90                   	nop
    8907:	c9                   	leave
    8908:	c3                   	ret
    8909:	90                   	nop

000000000000890a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    890a:	55                   	push   %rbp
    890b:	48 89 e5             	mov    %rsp,%rbp
    890e:	48 83 ec 10          	sub    $0x10,%rsp
    8912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    891a:	48 89 c7             	mov    %rax,%rdi
    891d:	e8 b0 0a 00 00       	call   93d2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    8922:	90                   	nop
    8923:	c9                   	leave
    8924:	c3                   	ret
    8925:	90                   	nop

0000000000008926 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    8926:	55                   	push   %rbp
    8927:	48 89 e5             	mov    %rsp,%rbp
    892a:	48 83 ec 10          	sub    $0x10,%rsp
    892e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8936:	48 89 c7             	mov    %rax,%rdi
    8939:	e8 6c 0a 00 00       	call   93aa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>
    893e:	90                   	nop
    893f:	c9                   	leave
    8940:	c3                   	ret
    8941:	90                   	nop

0000000000008942 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      vector() = default;
    8942:	55                   	push   %rbp
    8943:	48 89 e5             	mov    %rsp,%rbp
    8946:	48 83 ec 10          	sub    $0x10,%rsp
    894a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    894e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8952:	48 89 c7             	mov    %rax,%rdi
    8955:	e8 cc ff ff ff       	call   8926 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    895a:	90                   	nop
    895b:	c9                   	leave
    895c:	c3                   	ret
    895d:	90                   	nop

000000000000895e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    895e:	55                   	push   %rbp
    895f:	48 89 e5             	mov    %rsp,%rbp
    8962:	48 83 ec 10          	sub    $0x10,%rsp
    8966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    896a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    896e:	48 89 c7             	mov    %rax,%rdi
    8971:	e8 32 0b 00 00       	call   94a8 <_ZNSaI16VkPresentModeKHRED1Ev>
    8976:	90                   	nop
    8977:	c9                   	leave
    8978:	c3                   	ret
    8979:	90                   	nop

000000000000897a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    897a:	55                   	push   %rbp
    897b:	48 89 e5             	mov    %rsp,%rbp
    897e:	48 83 ec 10          	sub    $0x10,%rsp
    8982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    898a:	48 89 c7             	mov    %rax,%rdi
    898d:	e8 ee 0a 00 00       	call   9480 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>
    8992:	90                   	nop
    8993:	c9                   	leave
    8994:	c3                   	ret
    8995:	90                   	nop

0000000000008996 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>:
      vector() = default;
    8996:	55                   	push   %rbp
    8997:	48 89 e5             	mov    %rsp,%rbp
    899a:	48 83 ec 10          	sub    $0x10,%rsp
    899e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a6:	48 89 c7             	mov    %rax,%rdi
    89a9:	e8 cc ff ff ff       	call   897a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>
    89ae:	90                   	nop
    89af:	c9                   	leave
    89b0:	c3                   	ret
    89b1:	90                   	nop

00000000000089b2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>:

        VkSurfaceKHR surface;

        VkQueue presentQueue;

        struct SwapChainSupportDetails
    89b2:	55                   	push   %rbp
    89b3:	48 89 e5             	mov    %rsp,%rbp
    89b6:	48 83 ec 10          	sub    $0x10,%rsp
    89ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c2:	48 83 c0 38          	add    $0x38,%rax
    89c6:	48 89 c7             	mov    %rax,%rdi
    89c9:	e8 74 ff ff ff       	call   8942 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    89ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89d2:	48 83 c0 50          	add    $0x50,%rax
    89d6:	48 89 c7             	mov    %rax,%rdi
    89d9:	e8 b8 ff ff ff       	call   8996 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>
    89de:	90                   	nop
    89df:	c9                   	leave
    89e0:	c3                   	ret
    89e1:	90                   	nop

00000000000089e2 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>:
    89e2:	55                   	push   %rbp
    89e3:	48 89 e5             	mov    %rsp,%rbp
    89e6:	48 83 ec 10          	sub    $0x10,%rsp
    89ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89f2:	48 83 c0 50          	add    $0x50,%rax
    89f6:	48 89 c7             	mov    %rax,%rdi
    89f9:	e8 14 0b 00 00       	call   9512 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    89fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a02:	48 83 c0 38          	add    $0x38,%rax
    8a06:	48 89 c7             	mov    %rax,%rdi
    8a09:	e8 2e 0a 00 00       	call   943c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8a0e:	90                   	nop
    8a0f:	c9                   	leave
    8a10:	c3                   	ret
    8a11:	90                   	nop

0000000000008a12 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    8a12:	55                   	push   %rbp
    8a13:	48 89 e5             	mov    %rsp,%rbp
    8a16:	48 83 ec 10          	sub    $0x10,%rsp
    8a1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a22:	48 89 c7             	mov    %rax,%rdi
    8a25:	e8 3a 11 00 00       	call   9b64 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>
    8a2a:	90                   	nop
    8a2b:	c9                   	leave
    8a2c:	c3                   	ret
    8a2d:	90                   	nop

0000000000008a2e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      _Vector_base() = default;
    8a2e:	55                   	push   %rbp
    8a2f:	48 89 e5             	mov    %rsp,%rbp
    8a32:	48 83 ec 10          	sub    $0x10,%rsp
    8a36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a3e:	48 89 c7             	mov    %rax,%rdi
    8a41:	e8 f6 10 00 00       	call   9b3c <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>
    8a46:	90                   	nop
    8a47:	c9                   	leave
    8a48:	c3                   	ret
    8a49:	90                   	nop

0000000000008a4a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      vector() = default;
    8a4a:	55                   	push   %rbp
    8a4b:	48 89 e5             	mov    %rsp,%rbp
    8a4e:	48 83 ec 10          	sub    $0x10,%rsp
    8a52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a5a:	48 89 c7             	mov    %rax,%rdi
    8a5d:	e8 cc ff ff ff       	call   8a2e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    8a62:	90                   	nop
    8a63:	c9                   	leave
    8a64:	c3                   	ret
    8a65:	90                   	nop

0000000000008a66 <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    8a66:	55                   	push   %rbp
    8a67:	48 89 e5             	mov    %rsp,%rbp
    8a6a:	48 83 ec 10          	sub    $0x10,%rsp
    8a6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    8a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a76:	48 89 c7             	mov    %rax,%rdi
    8a79:	e8 1a 00 00 00       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    8a7e:	84 c0                	test   %al,%al
    8a80:	74 0e                	je     8a90 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    8a82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a86:	48 89 c7             	mov    %rax,%rdi
    8a89:	e8 8e 11 00 00       	call   9c1c <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    8a8e:	eb 05                	jmp    8a95 <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    8a90:	e8 b2 fd ff ff       	call   8847 <_ZSt27__throw_bad_optional_accessv>
      }
    8a95:	c9                   	leave
    8a96:	c3                   	ret
    8a97:	90                   	nop

0000000000008a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    8a98:	55                   	push   %rbp
    8a99:	48 89 e5             	mov    %rsp,%rbp
    8a9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    8aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aa4:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    8aa8:	5d                   	pop    %rbp
    8aa9:	c3                   	ret

0000000000008aaa <_ZNSt3setIjSt4lessIjESaIjEED1Ev>:
    8aaa:	55                   	push   %rbp
    8aab:	48 89 e5             	mov    %rsp,%rbp
    8aae:	48 83 ec 10          	sub    $0x10,%rsp
    8ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ab6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aba:	48 89 c7             	mov    %rax,%rdi
    8abd:	e8 bc 12 00 00       	call   9d7e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    8ac2:	90                   	nop
    8ac3:	c9                   	leave
    8ac4:	c3                   	ret
    8ac5:	90                   	nop

0000000000008ac6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    8ac6:	55                   	push   %rbp
    8ac7:	48 89 e5             	mov    %rsp,%rbp
    8aca:	48 83 ec 10          	sub    $0x10,%rsp
    8ace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ad6:	48 89 c7             	mov    %rax,%rdi
    8ad9:	e8 82 a5 ff ff       	call   3060 <_ZNSaIcED2Ev@plt>
    8ade:	90                   	nop
    8adf:	c9                   	leave
    8ae0:	c3                   	ret
    8ae1:	90                   	nop

0000000000008ae2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    8ae2:	55                   	push   %rbp
    8ae3:	48 89 e5             	mov    %rsp,%rbp
    8ae6:	48 83 ec 20          	sub    $0x20,%rsp
    8aea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    8aee:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    8af5:	00 
      while (!eq(__p[__i], char_type()))
    8af6:	eb 05                	jmp    8afd <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    8af8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    8afd:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    8b01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8b05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b09:	48 01 c2             	add    %rax,%rdx
    8b0c:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    8b10:	48 89 c6             	mov    %rax,%rsi
    8b13:	48 89 d7             	mov    %rdx,%rdi
    8b16:	e8 3a 1d 00 00       	call   a855 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    8b1b:	83 f0 01             	xor    $0x1,%eax
    8b1e:	84 c0                	test   %al,%al
    8b20:	75 d6                	jne    8af8 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    8b22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    8b26:	c9                   	leave
    8b27:	c3                   	ret

0000000000008b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    8b28:	55                   	push   %rbp
    8b29:	48 89 e5             	mov    %rsp,%rbp
    8b2c:	48 83 ec 10          	sub    $0x10,%rsp
    8b30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b38:	48 89 c7             	mov    %rax,%rdi
    8b3b:	e8 20 a5 ff ff       	call   3060 <_ZNSaIcED2Ev@plt>
    8b40:	90                   	nop
    8b41:	c9                   	leave
    8b42:	c3                   	ret
    8b43:	90                   	nop

0000000000008b44 <_ZNKSt8optionalIjE9has_valueEv>:
      constexpr bool has_value() const noexcept
    8b44:	55                   	push   %rbp
    8b45:	48 89 e5             	mov    %rsp,%rbp
    8b48:	48 83 ec 10          	sub    $0x10,%rsp
    8b4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    8b50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b54:	48 89 c7             	mov    %rax,%rdi
    8b57:	e8 3c ff ff ff       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    8b5c:	c9                   	leave
    8b5d:	c3                   	ret

0000000000008b5e <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8b5e:	55                   	push   %rbp
    8b5f:	48 89 e5             	mov    %rsp,%rbp
    8b62:	48 83 ec 10          	sub    $0x10,%rsp
    8b66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b6e:	48 89 c7             	mov    %rax,%rdi
    8b71:	e8 2c 1e 00 00       	call   a9a2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    8b76:	90                   	nop
    8b77:	c9                   	leave
    8b78:	c3                   	ret
    8b79:	90                   	nop

0000000000008b7a <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8b7a:	55                   	push   %rbp
    8b7b:	48 89 e5             	mov    %rsp,%rbp
    8b7e:	48 83 ec 10          	sub    $0x10,%rsp
    8b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b8a:	48 89 c7             	mov    %rax,%rdi
    8b8d:	e8 1c 1e 00 00       	call   a9ae <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    8b92:	90                   	nop
    8b93:	c9                   	leave
    8b94:	c3                   	ret
    8b95:	90                   	nop

0000000000008b96 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8b96:	55                   	push   %rbp
    8b97:	48 89 e5             	mov    %rsp,%rbp
    8b9a:	53                   	push   %rbx
    8b9b:	48 83 ec 28          	sub    $0x28,%rsp
    8b9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ba3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ba7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8bab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8baf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8bb3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8bb7:	48 89 d6             	mov    %rdx,%rsi
    8bba:	48 89 c7             	mov    %rax,%rdi
    8bbd:	e8 f7 1d 00 00       	call   a9b9 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8bc2:	48 89 c1             	mov    %rax,%rcx
    8bc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8bc9:	48 89 c2             	mov    %rax,%rdx
    8bcc:	48 89 ce             	mov    %rcx,%rsi
    8bcf:	48 89 df             	mov    %rbx,%rdi
    8bd2:	e8 43 1e 00 00       	call   aa1a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8bd7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8bdb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bdf:	48 89 d6             	mov    %rdx,%rsi
    8be2:	48 89 c7             	mov    %rax,%rdi
    8be5:	e8 8e 1e 00 00       	call   aa78 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    8bea:	eb 1a                	jmp    8c06 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8bec:	48 89 c3             	mov    %rax,%rbx
    8bef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8bf3:	48 89 c7             	mov    %rax,%rdi
    8bf6:	e8 79 00 00 00       	call   8c74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8bfb:	48 89 d8             	mov    %rbx,%rax
    8bfe:	48 89 c7             	mov    %rax,%rdi
    8c01:	e8 aa aa ff ff       	call   36b0 <_Unwind_Resume@plt>
    8c06:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c0a:	c9                   	leave
    8c0b:	c3                   	ret

0000000000008c0c <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8c0c:	55                   	push   %rbp
    8c0d:	48 89 e5             	mov    %rsp,%rbp
    8c10:	48 83 ec 10          	sub    $0x10,%rsp
    8c14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c1c:	48 89 c7             	mov    %rax,%rdi
    8c1f:	e8 94 1e 00 00       	call   aab8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8c24:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8c27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c2b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8c2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c33:	48 8b 00             	mov    (%rax),%rax
    8c36:	48 89 ce             	mov    %rcx,%rsi
    8c39:	48 89 c7             	mov    %rax,%rdi
    8c3c:	e8 85 1e 00 00       	call   aac6 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8c41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c45:	48 89 c7             	mov    %rax,%rdi
    8c48:	e8 27 00 00 00       	call   8c74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    8c4d:	90                   	nop
    8c4e:	c9                   	leave
    8c4f:	c3                   	ret

0000000000008c50 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8c50:	55                   	push   %rbp
    8c51:	48 89 e5             	mov    %rsp,%rbp
    8c54:	48 83 ec 10          	sub    $0x10,%rsp
    8c58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c60:	48 8b 10             	mov    (%rax),%rdx
    8c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c67:	48 89 d6             	mov    %rdx,%rsi
    8c6a:	48 89 c7             	mov    %rax,%rdi
    8c6d:	e8 7e 1e 00 00       	call   aaf0 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8c72:	c9                   	leave
    8c73:	c3                   	ret

0000000000008c74 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8c74:	55                   	push   %rbp
    8c75:	48 89 e5             	mov    %rsp,%rbp
    8c78:	48 83 ec 10          	sub    $0x10,%rsp
    8c7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c84:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c8c:	48 8b 00             	mov    (%rax),%rax
    8c8f:	48 29 c2             	sub    %rax,%rdx
    8c92:	48 c1 fa 02          	sar    $0x2,%rdx
    8c96:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    8c9d:	fc c0 0f 
    8ca0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8ca4:	48 89 c2             	mov    %rax,%rdx
    8ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cab:	48 8b 08             	mov    (%rax),%rcx
    8cae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cb2:	48 89 ce             	mov    %rcx,%rsi
    8cb5:	48 89 c7             	mov    %rax,%rdi
    8cb8:	e8 6b 1e 00 00       	call   ab28 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8cbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cc1:	48 89 c7             	mov    %rax,%rdi
    8cc4:	e8 09 fc ff ff       	call   88d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8cc9:	90                   	nop
    8cca:	c9                   	leave
    8ccb:	c3                   	ret

0000000000008ccc <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>:
	vector(_InputIterator __first, _InputIterator __last,
    8ccc:	55                   	push   %rbp
    8ccd:	48 89 e5             	mov    %rsp,%rbp
    8cd0:	53                   	push   %rbx
    8cd1:	48 83 ec 38          	sub    $0x38,%rsp
    8cd5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8cd9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    8cdd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    8ce1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	: _Base(__a)
    8ce5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ce9:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    8ced:	48 89 d6             	mov    %rdx,%rsi
    8cf0:	48 89 c7             	mov    %rax,%rdi
    8cf3:	e8 94 b3 ff ff       	call   408c <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
			      std::__iterator_category(__first));
    8cf8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8cfc:	48 89 c7             	mov    %rax,%rdi
    8cff:	e8 59 1e 00 00       	call   ab5d <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
	  _M_range_initialize(__first, __last,
    8d04:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    8d08:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    8d0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d10:	48 89 ce             	mov    %rcx,%rsi
    8d13:	48 89 c7             	mov    %rax,%rdi
    8d16:	e8 7f 1e 00 00       	call   ab9a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>
	}
    8d1b:	eb 1a                	jmp    8d37 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_+0x6b>
    8d1d:	48 89 c3             	mov    %rax,%rbx
    8d20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8d24:	48 89 c7             	mov    %rax,%rdi
    8d27:	e8 86 b3 ff ff       	call   40b2 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    8d2c:	48 89 d8             	mov    %rbx,%rax
    8d2f:	48 89 c7             	mov    %rax,%rdi
    8d32:	e8 79 a9 ff ff       	call   36b0 <_Unwind_Resume@plt>
    8d37:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8d3b:	c9                   	leave
    8d3c:	c3                   	ret
    8d3d:	90                   	nop

0000000000008d3e <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
    8d3e:	55                   	push   %rbp
    8d3f:	48 89 e5             	mov    %rsp,%rbp
    8d42:	48 83 ec 10          	sub    $0x10,%rsp
    8d46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    8d4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d52:	48 89 c7             	mov    %rax,%rdi
    8d55:	e8 ef 1e 00 00       	call   ac49 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    8d5a:	48 89 c2             	mov    %rax,%rdx
    8d5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d61:	48 89 d6             	mov    %rdx,%rsi
    8d64:	48 89 c7             	mov    %rax,%rdi
    8d67:	e8 ec 1e 00 00       	call   ac58 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    8d6c:	90                   	nop
    8d6d:	c9                   	leave
    8d6e:	c3                   	ret
    8d6f:	90                   	nop

0000000000008d70 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8d70:	55                   	push   %rbp
    8d71:	48 89 e5             	mov    %rsp,%rbp
    8d74:	48 83 ec 10          	sub    $0x10,%rsp
    8d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d80:	48 89 c7             	mov    %rax,%rdi
    8d83:	e8 74 1f 00 00       	call   acfc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    8d88:	90                   	nop
    8d89:	c9                   	leave
    8d8a:	c3                   	ret
    8d8b:	90                   	nop

0000000000008d8c <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8d8c:	55                   	push   %rbp
    8d8d:	48 89 e5             	mov    %rsp,%rbp
    8d90:	48 83 ec 10          	sub    $0x10,%rsp
    8d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d9c:	48 89 c7             	mov    %rax,%rdi
    8d9f:	e8 64 1f 00 00       	call   ad08 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    8da4:	90                   	nop
    8da5:	c9                   	leave
    8da6:	c3                   	ret
    8da7:	90                   	nop

0000000000008da8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8da8:	55                   	push   %rbp
    8da9:	48 89 e5             	mov    %rsp,%rbp
    8dac:	53                   	push   %rbx
    8dad:	48 83 ec 28          	sub    $0x28,%rsp
    8db1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8db5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8db9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8dbd:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8dc1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8dc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8dc9:	48 89 d6             	mov    %rdx,%rsi
    8dcc:	48 89 c7             	mov    %rax,%rdi
    8dcf:	e8 3f 1f 00 00       	call   ad13 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    8dd4:	48 89 c1             	mov    %rax,%rcx
    8dd7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8ddb:	48 89 c2             	mov    %rax,%rdx
    8dde:	48 89 ce             	mov    %rcx,%rsi
    8de1:	48 89 df             	mov    %rbx,%rdi
    8de4:	e8 a7 1f 00 00       	call   ad90 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8de9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ded:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8df1:	48 89 d6             	mov    %rdx,%rsi
    8df4:	48 89 c7             	mov    %rax,%rdi
    8df7:	e8 4a 20 00 00       	call   ae46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    8dfc:	eb 1a                	jmp    8e18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8dfe:	48 89 c3             	mov    %rax,%rbx
    8e01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e05:	48 89 c7             	mov    %rax,%rdi
    8e08:	e8 e1 1f 00 00       	call   adee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8e0d:	48 89 d8             	mov    %rbx,%rax
    8e10:	48 89 c7             	mov    %rax,%rdi
    8e13:	e8 98 a8 ff ff       	call   36b0 <_Unwind_Resume@plt>
    8e18:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e1c:	c9                   	leave
    8e1d:	c3                   	ret

0000000000008e1e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8e1e:	55                   	push   %rbp
    8e1f:	48 89 e5             	mov    %rsp,%rbp
    8e22:	48 83 ec 10          	sub    $0x10,%rsp
    8e26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8e2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e2e:	48 89 c7             	mov    %rax,%rdi
    8e31:	e8 50 20 00 00       	call   ae86 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8e36:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8e39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e3d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8e41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e45:	48 8b 00             	mov    (%rax),%rax
    8e48:	48 89 ce             	mov    %rcx,%rsi
    8e4b:	48 89 c7             	mov    %rax,%rdi
    8e4e:	e8 41 20 00 00       	call   ae94 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    8e53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e57:	48 89 c7             	mov    %rax,%rdi
    8e5a:	e8 8f 1f 00 00       	call   adee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    8e5f:	90                   	nop
    8e60:	c9                   	leave
    8e61:	c3                   	ret

0000000000008e62 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8e62:	55                   	push   %rbp
    8e63:	48 89 e5             	mov    %rsp,%rbp
    8e66:	48 83 ec 10          	sub    $0x10,%rsp
    8e6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8e6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e72:	48 8b 10             	mov    (%rax),%rdx
    8e75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e79:	48 89 d6             	mov    %rdx,%rsi
    8e7c:	48 89 c7             	mov    %rax,%rdi
    8e7f:	e8 3a 20 00 00       	call   aebe <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8e84:	c9                   	leave
    8e85:	c3                   	ret

0000000000008e86 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    8e86:	55                   	push   %rbp
    8e87:	48 89 e5             	mov    %rsp,%rbp
    8e8a:	48 83 ec 20          	sub    $0x20,%rsp
    8e8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    8e92:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8e96:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8e9a:	48 89 d6             	mov    %rdx,%rsi
    8e9d:	48 89 c7             	mov    %rax,%rdi
    8ea0:	e8 2b 20 00 00       	call   aed0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    8ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea9:	c9                   	leave
    8eaa:	c3                   	ret
    8eab:	90                   	nop

0000000000008eac <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    8eac:	55                   	push   %rbp
    8ead:	48 89 e5             	mov    %rsp,%rbp
    8eb0:	48 83 ec 20          	sub    $0x20,%rsp
    8eb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    8eb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ebc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8ec0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8ec4:	48 89 d6             	mov    %rdx,%rsi
    8ec7:	48 89 c7             	mov    %rax,%rdi
    8eca:	e8 01 20 00 00       	call   aed0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    8ecf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed3:	c9                   	leave
    8ed4:	c3                   	ret

0000000000008ed5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8ed5:	55                   	push   %rbp
    8ed6:	48 89 e5             	mov    %rsp,%rbp
    8ed9:	53                   	push   %rbx
    8eda:	48 83 ec 18          	sub    $0x18,%rsp
    8ede:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ee2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    8ee6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8eea:	48 89 c7             	mov    %rax,%rdi
    8eed:	e8 fc 1f 00 00       	call   aeee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    8ef2:	48 8b 18             	mov    (%rax),%rbx
    8ef5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8ef9:	48 89 c7             	mov    %rax,%rdi
    8efc:	e8 ed 1f 00 00       	call   aeee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    8f01:	48 8b 00             	mov    (%rax),%rax
    8f04:	48 39 c3             	cmp    %rax,%rbx
    8f07:	0f 95 c0             	setne  %al
    8f0a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f0e:	c9                   	leave
    8f0f:	c3                   	ret

0000000000008f10 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8f10:	55                   	push   %rbp
    8f11:	48 89 e5             	mov    %rsp,%rbp
    8f14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8f18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f1c:	48 8b 00             	mov    (%rax),%rax
    8f1f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8f23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f27:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8f2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8f2e:	5d                   	pop    %rbp
    8f2f:	c3                   	ret

0000000000008f30 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8f30:	55                   	push   %rbp
    8f31:	48 89 e5             	mov    %rsp,%rbp
    8f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f3c:	48 8b 00             	mov    (%rax),%rax
    8f3f:	5d                   	pop    %rbp
    8f40:	c3                   	ret
    8f41:	90                   	nop

0000000000008f42 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8f42:	55                   	push   %rbp
    8f43:	48 89 e5             	mov    %rsp,%rbp
    8f46:	48 83 ec 20          	sub    $0x20,%rsp
    8f4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8f4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f52:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8f56:	48 89 d6             	mov    %rdx,%rsi
    8f59:	48 89 c7             	mov    %rax,%rdi
    8f5c:	e8 9b 1f 00 00       	call   aefc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f65:	c9                   	leave
    8f66:	c3                   	ret
    8f67:	90                   	nop

0000000000008f68 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    8f68:	55                   	push   %rbp
    8f69:	48 89 e5             	mov    %rsp,%rbp
    8f6c:	48 83 ec 20          	sub    $0x20,%rsp
    8f70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8f74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f78:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8f7c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8f80:	48 89 d6             	mov    %rdx,%rsi
    8f83:	48 89 c7             	mov    %rax,%rdi
    8f86:	e8 71 1f 00 00       	call   aefc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f8f:	c9                   	leave
    8f90:	c3                   	ret

0000000000008f91 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8f91:	55                   	push   %rbp
    8f92:	48 89 e5             	mov    %rsp,%rbp
    8f95:	53                   	push   %rbx
    8f96:	48 83 ec 18          	sub    $0x18,%rsp
    8f9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f9e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8fa2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fa6:	48 89 c7             	mov    %rax,%rdi
    8fa9:	e8 6c 1f 00 00       	call   af1a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8fae:	48 8b 18             	mov    (%rax),%rbx
    8fb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8fb5:	48 89 c7             	mov    %rax,%rdi
    8fb8:	e8 5d 1f 00 00       	call   af1a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8fbd:	48 8b 00             	mov    (%rax),%rax
    8fc0:	48 39 c3             	cmp    %rax,%rbx
    8fc3:	0f 95 c0             	setne  %al
    8fc6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8fca:	c9                   	leave
    8fcb:	c3                   	ret

0000000000008fcc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8fcc:	55                   	push   %rbp
    8fcd:	48 89 e5             	mov    %rsp,%rbp
    8fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    8fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fd8:	48 8b 00             	mov    (%rax),%rax
    8fdb:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    8fe2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fe6:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    8fe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8fed:	5d                   	pop    %rbp
    8fee:	c3                   	ret
    8fef:	90                   	nop

0000000000008ff0 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8ff0:	55                   	push   %rbp
    8ff1:	48 89 e5             	mov    %rsp,%rbp
    8ff4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ffc:	48 8b 00             	mov    (%rax),%rax
    8fff:	5d                   	pop    %rbp
    9000:	c3                   	ret
    9001:	90                   	nop

0000000000009002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9002:	55                   	push   %rbp
    9003:	48 89 e5             	mov    %rsp,%rbp
    9006:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    900a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    900e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9016:	48 8b 00             	mov    (%rax),%rax
    9019:	48 29 c2             	sub    %rax,%rdx
    901c:	48 89 d0             	mov    %rdx,%rax
    901f:	48 c1 f8 03          	sar    $0x3,%rax
    9023:	5d                   	pop    %rbp
    9024:	c3                   	ret
    9025:	90                   	nop

0000000000009026 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9026:	55                   	push   %rbp
    9027:	48 89 e5             	mov    %rsp,%rbp
    902a:	48 83 ec 10          	sub    $0x10,%rsp
    902e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9036:	48 8b 10             	mov    (%rax),%rdx
    9039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    903d:	48 89 d6             	mov    %rdx,%rsi
    9040:	48 89 c7             	mov    %rax,%rdi
    9043:	e8 e0 1e 00 00       	call   af28 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9048:	c9                   	leave
    9049:	c3                   	ret

000000000000904a <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    904a:	55                   	push   %rbp
    904b:	48 89 e5             	mov    %rsp,%rbp
    904e:	48 83 ec 10          	sub    $0x10,%rsp
    9052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9056:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    905a:	48 8b 10             	mov    (%rax),%rdx
    905d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9061:	48 89 d6             	mov    %rdx,%rsi
    9064:	48 89 c7             	mov    %rax,%rdi
    9067:	e8 bc 1e 00 00       	call   af28 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    906c:	c9                   	leave
    906d:	c3                   	ret

000000000000906e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    906e:	55                   	push   %rbp
    906f:	48 89 e5             	mov    %rsp,%rbp
    9072:	48 83 ec 20          	sub    $0x20,%rsp
    9076:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    907a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    907e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9082:	48 89 d6             	mov    %rdx,%rsi
    9085:	48 89 c7             	mov    %rax,%rdi
    9088:	e8 ad 1e 00 00       	call   af3a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    908d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9091:	c9                   	leave
    9092:	c3                   	ret
    9093:	90                   	nop

0000000000009094 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9094:	55                   	push   %rbp
    9095:	48 89 e5             	mov    %rsp,%rbp
    9098:	48 83 ec 20          	sub    $0x20,%rsp
    909c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    90a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    90a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    90ac:	48 89 d6             	mov    %rdx,%rsi
    90af:	48 89 c7             	mov    %rax,%rdi
    90b2:	e8 83 1e 00 00       	call   af3a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    90b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90bb:	c9                   	leave
    90bc:	c3                   	ret

00000000000090bd <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    90bd:	55                   	push   %rbp
    90be:	48 89 e5             	mov    %rsp,%rbp
    90c1:	53                   	push   %rbx
    90c2:	48 83 ec 18          	sub    $0x18,%rsp
    90c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    90ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    90d2:	48 89 c7             	mov    %rax,%rdi
    90d5:	e8 7e 1e 00 00       	call   af58 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    90da:	48 8b 18             	mov    (%rax),%rbx
    90dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    90e1:	48 89 c7             	mov    %rax,%rdi
    90e4:	e8 6f 1e 00 00       	call   af58 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    90e9:	48 8b 00             	mov    (%rax),%rax
    90ec:	48 39 c3             	cmp    %rax,%rbx
    90ef:	0f 95 c0             	setne  %al
    90f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90f6:	c9                   	leave
    90f7:	c3                   	ret

00000000000090f8 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    90f8:	55                   	push   %rbp
    90f9:	48 89 e5             	mov    %rsp,%rbp
    90fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9100:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9104:	48 8b 00             	mov    (%rax),%rax
    9107:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    910e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9112:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9115:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9119:	5d                   	pop    %rbp
    911a:	c3                   	ret
    911b:	90                   	nop

000000000000911c <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    911c:	55                   	push   %rbp
    911d:	48 89 e5             	mov    %rsp,%rbp
    9120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9128:	48 8b 00             	mov    (%rax),%rax
    912b:	5d                   	pop    %rbp
    912c:	c3                   	ret
    912d:	90                   	nop

000000000000912e <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    912e:	55                   	push   %rbp
    912f:	48 89 e5             	mov    %rsp,%rbp
    9132:	48 83 ec 20          	sub    $0x20,%rsp
    9136:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    913a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    913e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9142:	48 89 d6             	mov    %rdx,%rsi
    9145:	48 89 c7             	mov    %rax,%rdi
    9148:	e8 19 1e 00 00       	call   af66 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    914d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9151:	c9                   	leave
    9152:	c3                   	ret
    9153:	90                   	nop

0000000000009154 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9154:	55                   	push   %rbp
    9155:	48 89 e5             	mov    %rsp,%rbp
    9158:	48 83 ec 20          	sub    $0x20,%rsp
    915c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9160:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9164:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9168:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    916c:	48 89 d6             	mov    %rdx,%rsi
    916f:	48 89 c7             	mov    %rax,%rdi
    9172:	e8 ef 1d 00 00       	call   af66 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    917b:	c9                   	leave
    917c:	c3                   	ret

000000000000917d <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    917d:	55                   	push   %rbp
    917e:	48 89 e5             	mov    %rsp,%rbp
    9181:	53                   	push   %rbx
    9182:	48 83 ec 18          	sub    $0x18,%rsp
    9186:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    918a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    918e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9192:	48 89 c7             	mov    %rax,%rdi
    9195:	e8 ea 1d 00 00       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    919a:	48 8b 18             	mov    (%rax),%rbx
    919d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    91a1:	48 89 c7             	mov    %rax,%rdi
    91a4:	e8 db 1d 00 00       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    91a9:	48 8b 00             	mov    (%rax),%rax
    91ac:	48 39 c3             	cmp    %rax,%rbx
    91af:	0f 95 c0             	setne  %al
    91b2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91b6:	c9                   	leave
    91b7:	c3                   	ret

00000000000091b8 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    91b8:	55                   	push   %rbp
    91b9:	48 89 e5             	mov    %rsp,%rbp
    91bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    91c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91c4:	48 8b 00             	mov    (%rax),%rax
    91c7:	48 8d 50 08          	lea    0x8(%rax),%rdx
    91cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91cf:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    91d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    91d6:	5d                   	pop    %rbp
    91d7:	c3                   	ret

00000000000091d8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    91d8:	55                   	push   %rbp
    91d9:	48 89 e5             	mov    %rsp,%rbp
    91dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    91e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91e4:	48 8b 00             	mov    (%rax),%rax
    91e7:	5d                   	pop    %rbp
    91e8:	c3                   	ret
    91e9:	90                   	nop

00000000000091ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    91ea:	55                   	push   %rbp
    91eb:	48 89 e5             	mov    %rsp,%rbp
    91ee:	48 83 ec 10          	sub    $0x10,%rsp
    91f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91fa:	48 89 c7             	mov    %rax,%rdi
    91fd:	e8 c8 1d 00 00       	call   afca <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    9202:	90                   	nop
    9203:	c9                   	leave
    9204:	c3                   	ret
    9205:	90                   	nop

0000000000009206 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    9206:	55                   	push   %rbp
    9207:	48 89 e5             	mov    %rsp,%rbp
    920a:	48 83 ec 10          	sub    $0x10,%rsp
    920e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9216:	48 89 c7             	mov    %rax,%rdi
    9219:	e8 74 1d 00 00       	call   af92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>
    921e:	90                   	nop
    921f:	c9                   	leave
    9220:	c3                   	ret
    9221:	90                   	nop

0000000000009222 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>:
	set(_InputIterator __first, _InputIterator __last)
    9222:	55                   	push   %rbp
    9223:	48 89 e5             	mov    %rsp,%rbp
    9226:	53                   	push   %rbx
    9227:	48 83 ec 28          	sub    $0x28,%rsp
    922b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    922f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9233:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _M_t()
    9237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    923b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    923f:	0f 11 00             	movups %xmm0,(%rax)
    9242:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    9246:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    924a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    924e:	48 89 c7             	mov    %rax,%rdi
    9251:	e8 b0 ff ff ff       	call   9206 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>
	{ _M_t._M_insert_range_unique(__first, __last); }
    9256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    925a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    925e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    9262:	48 89 ce             	mov    %rcx,%rsi
    9265:	48 89 c7             	mov    %rax,%rdi
    9268:	e8 79 1d 00 00       	call   afe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>
    926d:	eb 1a                	jmp    9289 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_+0x67>
    926f:	48 89 c3             	mov    %rax,%rbx
    9272:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9276:	48 89 c7             	mov    %rax,%rdi
    9279:	e8 12 00 00 00       	call   9290 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    927e:	48 89 d8             	mov    %rbx,%rax
    9281:	48 89 c7             	mov    %rax,%rdi
    9284:	e8 27 a4 ff ff       	call   36b0 <_Unwind_Resume@plt>
    9289:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    928d:	c9                   	leave
    928e:	c3                   	ret
    928f:	90                   	nop

0000000000009290 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    9290:	55                   	push   %rbp
    9291:	48 89 e5             	mov    %rsp,%rbp
    9294:	48 83 ec 10          	sub    $0x10,%rsp
    9298:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    929c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92a0:	48 89 c7             	mov    %rax,%rdi
    92a3:	e8 00 1e 00 00       	call   b0a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    92a8:	48 89 c2             	mov    %rax,%rdx
    92ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92af:	48 89 d6             	mov    %rdx,%rsi
    92b2:	48 89 c7             	mov    %rax,%rdi
    92b5:	e8 88 1d 00 00       	call   b042 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
    92ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    92be:	48 89 c7             	mov    %rax,%rdi
    92c1:	e8 24 ff ff ff       	call   91ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>
    92c6:	90                   	nop
    92c7:	c9                   	leave
    92c8:	c3                   	ret
    92c9:	90                   	nop

00000000000092ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    92ca:	55                   	push   %rbp
    92cb:	48 89 e5             	mov    %rsp,%rbp
    92ce:	53                   	push   %rbx
    92cf:	48 83 ec 38          	sub    $0x38,%rsp
    92d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    92d7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    92db:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    92df:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    92e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    92e7:	48 89 c7             	mov    %rax,%rdi
    92ea:	e8 71 9f ff ff       	call   3260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    92ef:	48 89 c1             	mov    %rax,%rcx
    92f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    92f6:	48 89 c2             	mov    %rax,%rdx
    92f9:	48 89 ce             	mov    %rcx,%rsi
    92fc:	48 89 df             	mov    %rbx,%rdi
    92ff:	e8 bc a0 ff ff       	call   33c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    9304:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    9309:	75 0f                	jne    931a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    930b:	48 8d 05 0e c3 00 00 	lea    0xc30e(%rip),%rax        # 15620 <_ZN6__pstl9execution2v1L5unseqE+0x3b9>
    9312:	48 89 c7             	mov    %rax,%rdi
    9315:	e8 e6 9e ff ff       	call   3200 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    931a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    931e:	48 89 c7             	mov    %rax,%rdi
    9321:	e8 32 f4 ff ff       	call   8758 <_ZNSt11char_traitsIcE6lengthEPKc>
    9326:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    932a:	48 01 d0             	add    %rdx,%rax
    932d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    9331:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9335:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9339:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    933d:	48 89 ce             	mov    %rcx,%rsi
    9340:	48 89 c7             	mov    %rax,%rdi
    9343:	e8 72 15 00 00       	call   a8ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    9348:	eb 1a                	jmp    9364 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    934a:	48 89 c3             	mov    %rax,%rbx
    934d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9351:	48 89 c7             	mov    %rax,%rdi
    9354:	e8 cf f7 ff ff       	call   8b28 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    9359:	48 89 d8             	mov    %rbx,%rax
    935c:	48 89 c7             	mov    %rax,%rdi
    935f:	e8 4c a3 ff ff       	call   36b0 <_Unwind_Resume@plt>
    9364:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9368:	c9                   	leave
    9369:	c3                   	ret

000000000000936a <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
    936a:	55                   	push   %rbp
    936b:	48 89 e5             	mov    %rsp,%rbp
    936e:	48 83 ec 10          	sub    $0x10,%rsp
    9372:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9376:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
    937a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    937e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9382:	48 89 d6             	mov    %rdx,%rsi
    9385:	48 89 c7             	mov    %rax,%rdi
    9388:	e8 35 1d 00 00       	call   b0c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    938d:	c9                   	leave
    938e:	c3                   	ret
    938f:	90                   	nop

0000000000009390 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    9390:	55                   	push   %rbp
    9391:	48 89 e5             	mov    %rsp,%rbp
    9394:	48 83 ec 10          	sub    $0x10,%rsp
    9398:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.empty(); }
    939c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a0:	48 89 c7             	mov    %rax,%rdi
    93a3:	e8 ae 1d 00 00       	call   b156 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>
    93a8:	c9                   	leave
    93a9:	c3                   	ret

00000000000093aa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    93aa:	55                   	push   %rbp
    93ab:	48 89 e5             	mov    %rsp,%rbp
    93ae:	48 83 ec 10          	sub    $0x10,%rsp
    93b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    93b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ba:	48 89 c7             	mov    %rax,%rdi
    93bd:	e8 ac 1d 00 00       	call   b16e <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    93c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93c6:	48 89 c7             	mov    %rax,%rdi
    93c9:	e8 bc 1d 00 00       	call   b18a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    93ce:	90                   	nop
    93cf:	c9                   	leave
    93d0:	c3                   	ret
    93d1:	90                   	nop

00000000000093d2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
    93d2:	55                   	push   %rbp
    93d3:	48 89 e5             	mov    %rsp,%rbp
    93d6:	48 83 ec 10          	sub    $0x10,%rsp
    93da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93e2:	48 89 c7             	mov    %rax,%rdi
    93e5:	e8 ce 1d 00 00       	call   b1b8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    93ea:	90                   	nop
    93eb:	c9                   	leave
    93ec:	c3                   	ret
    93ed:	90                   	nop

00000000000093ee <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    93ee:	55                   	push   %rbp
    93ef:	48 89 e5             	mov    %rsp,%rbp
    93f2:	48 83 ec 10          	sub    $0x10,%rsp
    93f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    93fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93fe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9402:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9406:	48 8b 00             	mov    (%rax),%rax
    9409:	48 29 c2             	sub    %rax,%rdx
    940c:	48 89 d0             	mov    %rdx,%rax
    940f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    9413:	48 89 c2             	mov    %rax,%rdx
    9416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    941a:	48 8b 08             	mov    (%rax),%rcx
    941d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9421:	48 89 ce             	mov    %rcx,%rsi
    9424:	48 89 c7             	mov    %rax,%rdi
    9427:	e8 98 1d 00 00       	call   b1c4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    942c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9430:	48 89 c7             	mov    %rax,%rdi
    9433:	e8 d2 f4 ff ff       	call   890a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9438:	90                   	nop
    9439:	c9                   	leave
    943a:	c3                   	ret
    943b:	90                   	nop

000000000000943c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    943c:	55                   	push   %rbp
    943d:	48 89 e5             	mov    %rsp,%rbp
    9440:	48 83 ec 10          	sub    $0x10,%rsp
    9444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    944c:	48 89 c7             	mov    %rax,%rdi
    944f:	e8 a6 1d 00 00       	call   b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9454:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    945b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    945f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9463:	48 8b 00             	mov    (%rax),%rax
    9466:	48 89 ce             	mov    %rcx,%rsi
    9469:	48 89 c7             	mov    %rax,%rdi
    946c:	e8 97 1d 00 00       	call   b208 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    9471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9475:	48 89 c7             	mov    %rax,%rdi
    9478:	e8 71 ff ff ff       	call   93ee <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    947d:	90                   	nop
    947e:	c9                   	leave
    947f:	c3                   	ret

0000000000009480 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    9480:	55                   	push   %rbp
    9481:	48 89 e5             	mov    %rsp,%rbp
    9484:	48 83 ec 10          	sub    $0x10,%rsp
    9488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    948c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9490:	48 89 c7             	mov    %rax,%rdi
    9493:	e8 9a 1d 00 00       	call   b232 <_ZNSaI16VkPresentModeKHREC1Ev>
    9498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    949c:	48 89 c7             	mov    %rax,%rdi
    949f:	e8 aa 1d 00 00       	call   b24e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    94a4:	90                   	nop
    94a5:	c9                   	leave
    94a6:	c3                   	ret
    94a7:	90                   	nop

00000000000094a8 <_ZNSaI16VkPresentModeKHRED1Ev>:
    94a8:	55                   	push   %rbp
    94a9:	48 89 e5             	mov    %rsp,%rbp
    94ac:	48 83 ec 10          	sub    $0x10,%rsp
    94b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94b8:	48 89 c7             	mov    %rax,%rdi
    94bb:	e8 bc 1d 00 00       	call   b27c <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    94c0:	90                   	nop
    94c1:	c9                   	leave
    94c2:	c3                   	ret
    94c3:	90                   	nop

00000000000094c4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    94c4:	55                   	push   %rbp
    94c5:	48 89 e5             	mov    %rsp,%rbp
    94c8:	48 83 ec 10          	sub    $0x10,%rsp
    94cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    94d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    94d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94dc:	48 8b 00             	mov    (%rax),%rax
    94df:	48 29 c2             	sub    %rax,%rdx
    94e2:	48 89 d0             	mov    %rdx,%rax
    94e5:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    94e9:	48 89 c2             	mov    %rax,%rdx
    94ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f0:	48 8b 08             	mov    (%rax),%rcx
    94f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94f7:	48 89 ce             	mov    %rcx,%rsi
    94fa:	48 89 c7             	mov    %rax,%rdi
    94fd:	e8 86 1d 00 00       	call   b288 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    9502:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9506:	48 89 c7             	mov    %rax,%rdi
    9509:	e8 50 f4 ff ff       	call   895e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    950e:	90                   	nop
    950f:	c9                   	leave
    9510:	c3                   	ret
    9511:	90                   	nop

0000000000009512 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9512:	55                   	push   %rbp
    9513:	48 89 e5             	mov    %rsp,%rbp
    9516:	48 83 ec 10          	sub    $0x10,%rsp
    951a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    951e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9522:	48 89 c7             	mov    %rax,%rdi
    9525:	e8 94 1d 00 00       	call   b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    952a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    952d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9531:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9539:	48 8b 00             	mov    (%rax),%rax
    953c:	48 89 ce             	mov    %rcx,%rsi
    953f:	48 89 c7             	mov    %rax,%rdi
    9542:	e8 85 1d 00 00       	call   b2cc <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    9547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    954b:	48 89 c7             	mov    %rax,%rdi
    954e:	e8 71 ff ff ff       	call   94c4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    9553:	90                   	nop
    9554:	c9                   	leave
    9555:	c3                   	ret

0000000000009556 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    9556:	55                   	push   %rbp
    9557:	48 89 e5             	mov    %rsp,%rbp
    955a:	48 83 ec 10          	sub    $0x10,%rsp
    955e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9562:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    9566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    956a:	48 89 c7             	mov    %rax,%rdi
    956d:	e8 84 1d 00 00       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    9572:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9576:	0f 92 c0             	setb   %al
    9579:	84 c0                	test   %al,%al
    957b:	74 24                	je     95a1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    957d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9581:	48 89 c7             	mov    %rax,%rdi
    9584:	e8 6d 1d 00 00       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    9589:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    958d:	48 29 c2             	sub    %rax,%rdx
    9590:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9594:	48 89 d6             	mov    %rdx,%rsi
    9597:	48 89 c7             	mov    %rax,%rdi
    959a:	e8 7b 1d 00 00       	call   b31a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>
      }
    959f:	eb 38                	jmp    95d9 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    95a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95a5:	48 89 c7             	mov    %rax,%rdi
    95a8:	e8 49 1d 00 00       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    95ad:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    95b1:	0f 92 c0             	setb   %al
    95b4:	84 c0                	test   %al,%al
    95b6:	74 21                	je     95d9 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    95b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95bc:	48 8b 00             	mov    (%rax),%rax
    95bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    95c3:	48 c1 e2 03          	shl    $0x3,%rdx
    95c7:	48 01 c2             	add    %rax,%rdx
    95ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ce:	48 89 d6             	mov    %rdx,%rsi
    95d1:	48 89 c7             	mov    %rax,%rdi
    95d4:	e8 4b 1f 00 00       	call   b524 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    95d9:	90                   	nop
    95da:	c9                   	leave
    95db:	c3                   	ret

00000000000095dc <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    95dc:	55                   	push   %rbp
    95dd:	48 89 e5             	mov    %rsp,%rbp
    95e0:	48 83 ec 10          	sub    $0x10,%rsp
    95e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    95e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95ec:	48 8b 10             	mov    (%rax),%rdx
    95ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95f3:	48 89 d6             	mov    %rdx,%rsi
    95f6:	48 89 c7             	mov    %rax,%rdi
    95f9:	e8 86 1f 00 00       	call   b584 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    95fe:	c9                   	leave
    95ff:	c3                   	ret

0000000000009600 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    9600:	55                   	push   %rbp
    9601:	48 89 e5             	mov    %rsp,%rbp
    9604:	48 83 ec 10          	sub    $0x10,%rsp
    9608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    960c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    9610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9614:	48 89 c7             	mov    %rax,%rdi
    9617:	e8 7a 1f 00 00       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    961c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    9620:	0f 92 c0             	setb   %al
    9623:	84 c0                	test   %al,%al
    9625:	74 24                	je     964b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    9627:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    962b:	48 89 c7             	mov    %rax,%rdi
    962e:	e8 63 1f 00 00       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    9633:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9637:	48 29 c2             	sub    %rax,%rdx
    963a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963e:	48 89 d6             	mov    %rdx,%rsi
    9641:	48 89 c7             	mov    %rax,%rdi
    9644:	e8 71 1f 00 00       	call   b5ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>
      }
    9649:	eb 38                	jmp    9683 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    964b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    964f:	48 89 c7             	mov    %rax,%rdi
    9652:	e8 3f 1f 00 00       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    9657:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    965b:	0f 92 c0             	setb   %al
    965e:	84 c0                	test   %al,%al
    9660:	74 21                	je     9683 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    9662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9666:	48 8b 00             	mov    (%rax),%rax
    9669:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    966d:	48 c1 e2 02          	shl    $0x2,%rdx
    9671:	48 01 c2             	add    %rax,%rdx
    9674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9678:	48 89 d6             	mov    %rdx,%rsi
    967b:	48 89 c7             	mov    %rax,%rdi
    967e:	e8 41 21 00 00       	call   b7c4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    9683:	90                   	nop
    9684:	c9                   	leave
    9685:	c3                   	ret

0000000000009686 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9686:	55                   	push   %rbp
    9687:	48 89 e5             	mov    %rsp,%rbp
    968a:	48 83 ec 10          	sub    $0x10,%rsp
    968e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9692:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9696:	48 8b 10             	mov    (%rax),%rdx
    9699:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    969d:	48 89 d6             	mov    %rdx,%rsi
    96a0:	48 89 c7             	mov    %rax,%rdi
    96a3:	e8 7c 21 00 00       	call   b824 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    96a8:	c9                   	leave
    96a9:	c3                   	ret

00000000000096aa <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    96aa:	55                   	push   %rbp
    96ab:	48 89 e5             	mov    %rsp,%rbp
    96ae:	48 83 ec 20          	sub    $0x20,%rsp
    96b2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    96b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ba:	48 89 c7             	mov    %rax,%rdi
    96bd:	e8 86 08 00 00       	call   9f48 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    96c2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    96c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ca:	48 89 c7             	mov    %rax,%rdi
    96cd:	e8 50 08 00 00       	call   9f22 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    96d2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    96d6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    96da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    96de:	48 89 d6             	mov    %rdx,%rsi
    96e1:	48 89 c7             	mov    %rax,%rdi
    96e4:	e8 4d 21 00 00       	call   b836 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    96e9:	c9                   	leave
    96ea:	c3                   	ret
    96eb:	90                   	nop

00000000000096ec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    96ec:	55                   	push   %rbp
    96ed:	48 89 e5             	mov    %rsp,%rbp
    96f0:	48 83 ec 20          	sub    $0x20,%rsp
    96f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    96f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96fc:	48 89 c7             	mov    %rax,%rdi
    96ff:	e8 20 09 00 00       	call   a024 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    9704:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    9708:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    970c:	48 89 c7             	mov    %rax,%rdi
    970f:	e8 ea 08 00 00       	call   9ffe <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    9714:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    9718:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    971c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9720:	48 89 d6             	mov    %rdx,%rsi
    9723:	48 89 c7             	mov    %rax,%rdi
    9726:	e8 46 21 00 00       	call   b871 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    972b:	c9                   	leave
    972c:	c3                   	ret
    972d:	90                   	nop

000000000000972e <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    972e:	55                   	push   %rbp
    972f:	48 89 e5             	mov    %rsp,%rbp
    9732:	48 83 ec 10          	sub    $0x10,%rsp
    9736:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    973a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    973e:	48 89 c7             	mov    %rax,%rdi
    9741:	e8 66 21 00 00       	call   b8ac <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    9746:	90                   	nop
    9747:	c9                   	leave
    9748:	c3                   	ret
    9749:	90                   	nop

000000000000974a <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    974a:	55                   	push   %rbp
    974b:	48 89 e5             	mov    %rsp,%rbp
    974e:	48 83 ec 10          	sub    $0x10,%rsp
    9752:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    975a:	48 89 c7             	mov    %rax,%rdi
    975d:	e8 56 21 00 00       	call   b8b8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    9762:	90                   	nop
    9763:	c9                   	leave
    9764:	c3                   	ret
    9765:	90                   	nop

0000000000009766 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9766:	55                   	push   %rbp
    9767:	48 89 e5             	mov    %rsp,%rbp
    976a:	53                   	push   %rbx
    976b:	48 83 ec 28          	sub    $0x28,%rsp
    976f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9773:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9777:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    977b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    977f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9783:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9787:	48 89 d6             	mov    %rdx,%rsi
    978a:	48 89 c7             	mov    %rax,%rdi
    978d:	e8 31 21 00 00       	call   b8c3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    9792:	48 89 c1             	mov    %rax,%rcx
    9795:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9799:	48 89 c2             	mov    %rax,%rdx
    979c:	48 89 ce             	mov    %rcx,%rsi
    979f:	48 89 df             	mov    %rbx,%rdi
    97a2:	e8 99 21 00 00       	call   b940 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    97a7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    97ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97af:	48 89 d6             	mov    %rdx,%rsi
    97b2:	48 89 c7             	mov    %rax,%rdi
    97b5:	e8 32 22 00 00       	call   b9ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    97ba:	eb 1a                	jmp    97d6 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    97bc:	48 89 c3             	mov    %rax,%rbx
    97bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    97c3:	48 89 c7             	mov    %rax,%rdi
    97c6:	e8 d3 21 00 00       	call   b99e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    97cb:	48 89 d8             	mov    %rbx,%rax
    97ce:	48 89 c7             	mov    %rax,%rdi
    97d1:	e8 da 9e ff ff       	call   36b0 <_Unwind_Resume@plt>
    97d6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97da:	c9                   	leave
    97db:	c3                   	ret

00000000000097dc <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    97dc:	55                   	push   %rbp
    97dd:	48 89 e5             	mov    %rsp,%rbp
    97e0:	48 83 ec 10          	sub    $0x10,%rsp
    97e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    97e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97ec:	48 89 c7             	mov    %rax,%rdi
    97ef:	e8 38 22 00 00       	call   ba2c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    97f4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    97f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97fb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    97ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9803:	48 8b 00             	mov    (%rax),%rax
    9806:	48 89 ce             	mov    %rcx,%rsi
    9809:	48 89 c7             	mov    %rax,%rdi
    980c:	e8 29 22 00 00       	call   ba3a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    9811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9815:	48 89 c7             	mov    %rax,%rdi
    9818:	e8 81 21 00 00       	call   b99e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    981d:	90                   	nop
    981e:	c9                   	leave
    981f:	c3                   	ret

0000000000009820 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9820:	55                   	push   %rbp
    9821:	48 89 e5             	mov    %rsp,%rbp
    9824:	48 83 ec 10          	sub    $0x10,%rsp
    9828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    982c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9830:	48 8b 10             	mov    (%rax),%rdx
    9833:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9837:	48 89 d6             	mov    %rdx,%rsi
    983a:	48 89 c7             	mov    %rax,%rdi
    983d:	e8 22 22 00 00       	call   ba64 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    9842:	c9                   	leave
    9843:	c3                   	ret

0000000000009844 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9844:	55                   	push   %rbp
    9845:	48 89 e5             	mov    %rsp,%rbp
    9848:	48 83 ec 20          	sub    $0x20,%rsp
    984c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9850:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9854:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9858:	48 89 d6             	mov    %rdx,%rsi
    985b:	48 89 c7             	mov    %rax,%rdi
    985e:	e8 13 22 00 00       	call   ba76 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    9863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9867:	c9                   	leave
    9868:	c3                   	ret
    9869:	90                   	nop

000000000000986a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    986a:	55                   	push   %rbp
    986b:	48 89 e5             	mov    %rsp,%rbp
    986e:	48 83 ec 20          	sub    $0x20,%rsp
    9872:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9876:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    987a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    987e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9882:	48 89 d6             	mov    %rdx,%rsi
    9885:	48 89 c7             	mov    %rax,%rdi
    9888:	e8 e9 21 00 00       	call   ba76 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    988d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9891:	c9                   	leave
    9892:	c3                   	ret

0000000000009893 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9893:	55                   	push   %rbp
    9894:	48 89 e5             	mov    %rsp,%rbp
    9897:	53                   	push   %rbx
    9898:	48 83 ec 18          	sub    $0x18,%rsp
    989c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    98a0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    98a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98a8:	48 89 c7             	mov    %rax,%rdi
    98ab:	e8 e4 21 00 00       	call   ba94 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    98b0:	48 8b 18             	mov    (%rax),%rbx
    98b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    98b7:	48 89 c7             	mov    %rax,%rdi
    98ba:	e8 d5 21 00 00       	call   ba94 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    98bf:	48 8b 00             	mov    (%rax),%rax
    98c2:	48 39 c3             	cmp    %rax,%rbx
    98c5:	0f 95 c0             	setne  %al
    98c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98cc:	c9                   	leave
    98cd:	c3                   	ret

00000000000098ce <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    98ce:	55                   	push   %rbp
    98cf:	48 89 e5             	mov    %rsp,%rbp
    98d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    98d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98da:	48 8b 00             	mov    (%rax),%rax
    98dd:	48 8d 50 08          	lea    0x8(%rax),%rdx
    98e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98e5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    98e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    98ec:	5d                   	pop    %rbp
    98ed:	c3                   	ret

00000000000098ee <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    98ee:	55                   	push   %rbp
    98ef:	48 89 e5             	mov    %rsp,%rbp
    98f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    98f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    98fa:	48 8b 00             	mov    (%rax),%rax
    98fd:	5d                   	pop    %rbp
    98fe:	c3                   	ret
    98ff:	90                   	nop

0000000000009900 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9900:	55                   	push   %rbp
    9901:	48 89 e5             	mov    %rsp,%rbp
    9904:	48 83 ec 10          	sub    $0x10,%rsp
    9908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    990c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9910:	48 89 c7             	mov    %rax,%rdi
    9913:	e8 8a 21 00 00       	call   baa2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    9918:	90                   	nop
    9919:	c9                   	leave
    991a:	c3                   	ret
    991b:	90                   	nop

000000000000991c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    991c:	55                   	push   %rbp
    991d:	48 89 e5             	mov    %rsp,%rbp
    9920:	48 83 ec 10          	sub    $0x10,%rsp
    9924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    992c:	48 89 c7             	mov    %rax,%rdi
    992f:	e8 7a 21 00 00       	call   baae <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    9934:	90                   	nop
    9935:	c9                   	leave
    9936:	c3                   	ret
    9937:	90                   	nop

0000000000009938 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    9938:	55                   	push   %rbp
    9939:	48 89 e5             	mov    %rsp,%rbp
    993c:	53                   	push   %rbx
    993d:	48 83 ec 28          	sub    $0x28,%rsp
    9941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9945:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9949:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    994d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9951:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9955:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9959:	48 89 d6             	mov    %rdx,%rsi
    995c:	48 89 c7             	mov    %rax,%rdi
    995f:	e8 55 21 00 00       	call   bab9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    9964:	48 89 c1             	mov    %rax,%rcx
    9967:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    996b:	48 89 c2             	mov    %rax,%rdx
    996e:	48 89 ce             	mov    %rcx,%rsi
    9971:	48 89 df             	mov    %rbx,%rdi
    9974:	e8 bd 21 00 00       	call   bb36 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    9979:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    997d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9981:	48 89 d6             	mov    %rdx,%rsi
    9984:	48 89 c7             	mov    %rax,%rdi
    9987:	e8 60 22 00 00       	call   bbec <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    998c:	eb 1a                	jmp    99a8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    998e:	48 89 c3             	mov    %rax,%rbx
    9991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9995:	48 89 c7             	mov    %rax,%rdi
    9998:	e8 f7 21 00 00       	call   bb94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    999d:	48 89 d8             	mov    %rbx,%rax
    99a0:	48 89 c7             	mov    %rax,%rdi
    99a3:	e8 08 9d ff ff       	call   36b0 <_Unwind_Resume@plt>
    99a8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    99ac:	c9                   	leave
    99ad:	c3                   	ret

00000000000099ae <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    99ae:	55                   	push   %rbp
    99af:	48 89 e5             	mov    %rsp,%rbp
    99b2:	48 83 ec 10          	sub    $0x10,%rsp
    99b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    99ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99be:	48 89 c7             	mov    %rax,%rdi
    99c1:	e8 66 22 00 00       	call   bc2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    99c6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    99c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99cd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    99d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99d5:	48 8b 00             	mov    (%rax),%rax
    99d8:	48 89 ce             	mov    %rcx,%rsi
    99db:	48 89 c7             	mov    %rax,%rdi
    99de:	e8 57 22 00 00       	call   bc3a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    99e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99e7:	48 89 c7             	mov    %rax,%rdi
    99ea:	e8 a5 21 00 00       	call   bb94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    99ef:	90                   	nop
    99f0:	c9                   	leave
    99f1:	c3                   	ret

00000000000099f2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    99f2:	55                   	push   %rbp
    99f3:	48 89 e5             	mov    %rsp,%rbp
    99f6:	48 83 ec 10          	sub    $0x10,%rsp
    99fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    99fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a02:	48 8b 10             	mov    (%rax),%rdx
    9a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a09:	48 89 d6             	mov    %rdx,%rsi
    9a0c:	48 89 c7             	mov    %rax,%rdi
    9a0f:	e8 50 22 00 00       	call   bc64 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9a14:	c9                   	leave
    9a15:	c3                   	ret

0000000000009a16 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    9a16:	55                   	push   %rbp
    9a17:	48 89 e5             	mov    %rsp,%rbp
    9a1a:	48 83 ec 20          	sub    $0x20,%rsp
    9a1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    9a22:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a26:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a2a:	48 89 d6             	mov    %rdx,%rsi
    9a2d:	48 89 c7             	mov    %rax,%rdi
    9a30:	e8 41 22 00 00       	call   bc76 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a39:	c9                   	leave
    9a3a:	c3                   	ret
    9a3b:	90                   	nop

0000000000009a3c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    9a3c:	55                   	push   %rbp
    9a3d:	48 89 e5             	mov    %rsp,%rbp
    9a40:	48 83 ec 20          	sub    $0x20,%rsp
    9a44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    9a48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a4c:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9a50:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a54:	48 89 d6             	mov    %rdx,%rsi
    9a57:	48 89 c7             	mov    %rax,%rdi
    9a5a:	e8 17 22 00 00       	call   bc76 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    9a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a63:	c9                   	leave
    9a64:	c3                   	ret

0000000000009a65 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9a65:	55                   	push   %rbp
    9a66:	48 89 e5             	mov    %rsp,%rbp
    9a69:	53                   	push   %rbx
    9a6a:	48 83 ec 18          	sub    $0x18,%rsp
    9a6e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9a72:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9a76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a7a:	48 89 c7             	mov    %rax,%rdi
    9a7d:	e8 12 22 00 00       	call   bc94 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9a82:	48 8b 18             	mov    (%rax),%rbx
    9a85:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9a89:	48 89 c7             	mov    %rax,%rdi
    9a8c:	e8 03 22 00 00       	call   bc94 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    9a91:	48 8b 00             	mov    (%rax),%rax
    9a94:	48 39 c3             	cmp    %rax,%rbx
    9a97:	0f 95 c0             	setne  %al
    9a9a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9a9e:	c9                   	leave
    9a9f:	c3                   	ret

0000000000009aa0 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9aa0:	55                   	push   %rbp
    9aa1:	48 89 e5             	mov    %rsp,%rbp
    9aa4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aac:	48 8b 00             	mov    (%rax),%rax
    9aaf:	48 8d 50 18          	lea    0x18(%rax),%rdx
    9ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9aba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9abe:	5d                   	pop    %rbp
    9abf:	c3                   	ret

0000000000009ac0 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9ac0:	55                   	push   %rbp
    9ac1:	48 89 e5             	mov    %rsp,%rbp
    9ac4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9acc:	48 8b 00             	mov    (%rax),%rax
    9acf:	5d                   	pop    %rbp
    9ad0:	c3                   	ret
    9ad1:	90                   	nop

0000000000009ad2 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    9ad2:	55                   	push   %rbp
    9ad3:	48 89 e5             	mov    %rsp,%rbp
    9ad6:	53                   	push   %rbx
    9ad7:	48 83 ec 18          	sub    $0x18,%rsp
    9adb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9adf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    9ae3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9ae7:	48 89 c7             	mov    %rax,%rdi
    9aea:	e8 a9 ef ff ff       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    9aef:	84 c0                	test   %al,%al
    9af1:	74 20                	je     9b13 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x41>
	    this->_M_get() = std::forward<_Up>(__u);
    9af3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9af7:	48 89 c7             	mov    %rax,%rdi
    9afa:	e8 a3 21 00 00       	call   bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    9aff:	8b 00                	mov    (%rax),%eax
    9b01:	89 c3                	mov    %eax,%ebx
    9b03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b07:	48 89 c7             	mov    %rax,%rdi
    9b0a:	e8 0d 01 00 00       	call   9c1c <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    9b0f:	89 18                	mov    %ebx,(%rax)
    9b11:	eb 1e                	jmp    9b31 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x5f>
	    this->_M_construct(std::forward<_Up>(__u));
    9b13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9b17:	48 89 c7             	mov    %rax,%rdi
    9b1a:	e8 83 21 00 00       	call   bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    9b1f:	48 89 c2             	mov    %rax,%rdx
    9b22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b26:	48 89 d6             	mov    %rdx,%rsi
    9b29:	48 89 c7             	mov    %rax,%rdi
    9b2c:	e8 7f 21 00 00       	call   bcb0 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>
	  return *this;
    9b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    9b35:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9b39:	c9                   	leave
    9b3a:	c3                   	ret
    9b3b:	90                   	nop

0000000000009b3c <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    9b3c:	55                   	push   %rbp
    9b3d:	48 89 e5             	mov    %rsp,%rbp
    9b40:	48 83 ec 10          	sub    $0x10,%rsp
    9b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    9b48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b4c:	48 89 c7             	mov    %rax,%rdi
    9b4f:	e8 90 21 00 00       	call   bce4 <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>
    9b54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b58:	48 89 c7             	mov    %rax,%rdi
    9b5b:	e8 a0 21 00 00       	call   bd00 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9b60:	90                   	nop
    9b61:	c9                   	leave
    9b62:	c3                   	ret
    9b63:	90                   	nop

0000000000009b64 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>:
    9b64:	55                   	push   %rbp
    9b65:	48 89 e5             	mov    %rsp,%rbp
    9b68:	48 83 ec 10          	sub    $0x10,%rsp
    9b6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b74:	48 89 c7             	mov    %rax,%rdi
    9b77:	e8 b2 21 00 00       	call   bd2e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>
    9b7c:	90                   	nop
    9b7d:	c9                   	leave
    9b7e:	c3                   	ret
    9b7f:	90                   	nop

0000000000009b80 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    9b80:	55                   	push   %rbp
    9b81:	48 89 e5             	mov    %rsp,%rbp
    9b84:	48 83 ec 10          	sub    $0x10,%rsp
    9b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    9b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b90:	48 8b 50 10          	mov    0x10(%rax),%rdx
    9b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b98:	48 8b 00             	mov    (%rax),%rax
    9b9b:	48 29 c2             	sub    %rax,%rdx
    9b9e:	48 c1 fa 03          	sar    $0x3,%rdx
    9ba2:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    9ba9:	cc cc cc 
    9bac:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    9bb0:	48 89 c2             	mov    %rax,%rdx
    9bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bb7:	48 8b 08             	mov    (%rax),%rcx
    9bba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bbe:	48 89 ce             	mov    %rcx,%rsi
    9bc1:	48 89 c7             	mov    %rax,%rdi
    9bc4:	e8 71 21 00 00       	call   bd3a <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
    9bc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bcd:	48 89 c7             	mov    %rax,%rdi
    9bd0:	e8 3d ee ff ff       	call   8a12 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>
    9bd5:	90                   	nop
    9bd6:	c9                   	leave
    9bd7:	c3                   	ret

0000000000009bd8 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    9bd8:	55                   	push   %rbp
    9bd9:	48 89 e5             	mov    %rsp,%rbp
    9bdc:	48 83 ec 10          	sub    $0x10,%rsp
    9be0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    9be4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be8:	48 89 c7             	mov    %rax,%rdi
    9beb:	e8 80 21 00 00       	call   bd70 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    9bf0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    9bf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bf7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9bfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bff:	48 8b 00             	mov    (%rax),%rax
    9c02:	48 89 ce             	mov    %rcx,%rsi
    9c05:	48 89 c7             	mov    %rax,%rdi
    9c08:	e8 71 21 00 00       	call   bd7e <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>
      }
    9c0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c11:	48 89 c7             	mov    %rax,%rdi
    9c14:	e8 67 ff ff ff       	call   9b80 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    9c19:	90                   	nop
    9c1a:	c9                   	leave
    9c1b:	c3                   	ret

0000000000009c1c <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    9c1c:	55                   	push   %rbp
    9c1d:	48 89 e5             	mov    %rsp,%rbp
    9c20:	48 83 ec 10          	sub    $0x10,%rsp
    9c24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    9c28:	e8 e5 ea ff ff       	call   8712 <_ZSt23__is_constant_evaluatedv>
    9c2d:	84 c0                	test   %al,%al
    9c2f:	74 1a                	je     9c4b <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    9c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c35:	48 89 c7             	mov    %rax,%rdi
    9c38:	e8 5b ee ff ff       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    9c3d:	83 f0 01             	xor    $0x1,%eax
    9c40:	84 c0                	test   %al,%al
    9c42:	74 07                	je     9c4b <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    9c44:	b8 01 00 00 00       	mov    $0x1,%eax
    9c49:	eb 05                	jmp    9c50 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    9c4b:	b8 00 00 00 00       	mov    $0x0,%eax
    9c50:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9c52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c56:	48 89 c7             	mov    %rax,%rdi
    9c59:	e8 4a 21 00 00       	call   bda8 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    9c5e:	c9                   	leave
    9c5f:	c3                   	ret

0000000000009c60 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    9c60:	55                   	push   %rbp
    9c61:	48 89 e5             	mov    %rsp,%rbp
    9c64:	48 83 ec 10          	sub    $0x10,%rsp
    9c68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c70:	48 89 c7             	mov    %rax,%rdi
    9c73:	e8 3e 21 00 00       	call   bdb6 <_ZNSt15__new_allocatorIjEC1Ev>
    9c78:	90                   	nop
    9c79:	c9                   	leave
    9c7a:	c3                   	ret
    9c7b:	90                   	nop

0000000000009c7c <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    9c7c:	55                   	push   %rbp
    9c7d:	48 89 e5             	mov    %rsp,%rbp
    9c80:	48 83 ec 10          	sub    $0x10,%rsp
    9c84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c8c:	48 89 c7             	mov    %rax,%rdi
    9c8f:	e8 2e 21 00 00       	call   bdc2 <_ZNSt15__new_allocatorIjED1Ev>
    9c94:	90                   	nop
    9c95:	c9                   	leave
    9c96:	c3                   	ret
    9c97:	90                   	nop

0000000000009c98 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>:
      set(initializer_list<value_type> __l,
    9c98:	55                   	push   %rbp
    9c99:	48 89 e5             	mov    %rsp,%rbp
    9c9c:	41 54                	push   %r12
    9c9e:	53                   	push   %rbx
    9c9f:	48 83 ec 40          	sub    $0x40,%rsp
    9ca3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9ca7:	48 89 f0             	mov    %rsi,%rax
    9caa:	48 89 d6             	mov    %rdx,%rsi
    9cad:	48 89 f2             	mov    %rsi,%rdx
    9cb0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    9cb4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    9cb8:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    9cbc:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      : _M_t(__comp, _Key_alloc_type(__a))
    9cc0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9cc4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    9cc8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9ccc:	48 89 d6             	mov    %rdx,%rsi
    9ccf:	48 89 c7             	mov    %rax,%rdi
    9cd2:	e8 f7 20 00 00       	call   bdce <_ZNSaIjEC1ERKS_>
    9cd7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    9cdb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    9cdf:	48 89 c6             	mov    %rax,%rsi
    9ce2:	48 89 df             	mov    %rbx,%rdi
    9ce5:	e8 0a 21 00 00       	call   bdf4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>
    9cea:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9cee:	48 89 c7             	mov    %rax,%rdi
    9cf1:	e8 86 ff ff ff       	call   9c7c <_ZNSaIjED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    9cf6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    9cfa:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9cfe:	48 89 c7             	mov    %rax,%rdi
    9d01:	e8 6e 21 00 00       	call   be74 <_ZNKSt16initializer_listIjE3endEv>
    9d06:	49 89 c4             	mov    %rax,%r12
    9d09:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    9d0d:	48 89 c7             	mov    %rax,%rdi
    9d10:	e8 4d 21 00 00       	call   be62 <_ZNKSt16initializer_listIjE5beginEv>
    9d15:	4c 89 e2             	mov    %r12,%rdx
    9d18:	48 89 c6             	mov    %rax,%rsi
    9d1b:	48 89 df             	mov    %rbx,%rdi
    9d1e:	e8 87 21 00 00       	call   beaa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>
    9d23:	eb 34                	jmp    9d59 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_+0xc1>
      : _M_t(__comp, _Key_alloc_type(__a))
    9d25:	48 89 c3             	mov    %rax,%rbx
    9d28:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9d2c:	48 89 c7             	mov    %rax,%rdi
    9d2f:	e8 48 ff ff ff       	call   9c7c <_ZNSaIjED1Ev>
    9d34:	48 89 d8             	mov    %rbx,%rax
    9d37:	48 89 c7             	mov    %rax,%rdi
    9d3a:	e8 71 99 ff ff       	call   36b0 <_Unwind_Resume@plt>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    9d3f:	48 89 c3             	mov    %rax,%rbx
    9d42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9d46:	48 89 c7             	mov    %rax,%rdi
    9d49:	e8 30 00 00 00       	call   9d7e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    9d4e:	48 89 d8             	mov    %rbx,%rax
    9d51:	48 89 c7             	mov    %rax,%rdi
    9d54:	e8 57 99 ff ff       	call   36b0 <_Unwind_Resume@plt>
    9d59:	48 83 c4 40          	add    $0x40,%rsp
    9d5d:	5b                   	pop    %rbx
    9d5e:	41 5c                	pop    %r12
    9d60:	5d                   	pop    %rbp
    9d61:	c3                   	ret

0000000000009d62 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>:
	struct _Rb_tree_impl
    9d62:	55                   	push   %rbp
    9d63:	48 89 e5             	mov    %rsp,%rbp
    9d66:	48 83 ec 10          	sub    $0x10,%rsp
    9d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d72:	48 89 c7             	mov    %rax,%rdi
    9d75:	e8 a8 21 00 00       	call   bf22 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    9d7a:	90                   	nop
    9d7b:	c9                   	leave
    9d7c:	c3                   	ret
    9d7d:	90                   	nop

0000000000009d7e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    9d7e:	55                   	push   %rbp
    9d7f:	48 89 e5             	mov    %rsp,%rbp
    9d82:	48 83 ec 10          	sub    $0x10,%rsp
    9d86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    9d8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d8e:	48 89 c7             	mov    %rax,%rdi
    9d91:	e8 0e 22 00 00       	call   bfa4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
    9d96:	48 89 c2             	mov    %rax,%rdx
    9d99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d9d:	48 89 d6             	mov    %rdx,%rsi
    9da0:	48 89 c7             	mov    %rax,%rdi
    9da3:	e8 96 21 00 00       	call   bf3e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
    9da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dac:	48 89 c7             	mov    %rax,%rdi
    9daf:	e8 ae ff ff ff       	call   9d62 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>
    9db4:	90                   	nop
    9db5:	c9                   	leave
    9db6:	c3                   	ret
    9db7:	90                   	nop

0000000000009db8 <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    9db8:	55                   	push   %rbp
    9db9:	48 89 e5             	mov    %rsp,%rbp
    9dbc:	48 83 ec 10          	sub    $0x10,%rsp
    9dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.begin(); }
    9dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc8:	48 89 c7             	mov    %rax,%rdi
    9dcb:	e8 ee 21 00 00       	call   bfbe <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
    9dd0:	c9                   	leave
    9dd1:	c3                   	ret

0000000000009dd2 <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    9dd2:	55                   	push   %rbp
    9dd3:	48 89 e5             	mov    %rsp,%rbp
    9dd6:	48 83 ec 10          	sub    $0x10,%rsp
    9dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    9dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9de2:	48 89 c7             	mov    %rax,%rdi
    9de5:	e8 fe 21 00 00       	call   bfe8 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    9dea:	c9                   	leave
    9deb:	c3                   	ret

0000000000009dec <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    9dec:	55                   	push   %rbp
    9ded:	48 89 e5             	mov    %rsp,%rbp
    9df0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9df4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    9df8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dfc:	48 8b 10             	mov    (%rax),%rdx
    9dff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9e03:	48 8b 00             	mov    (%rax),%rax
    9e06:	48 39 c2             	cmp    %rax,%rdx
    9e09:	0f 95 c0             	setne  %al
    9e0c:	5d                   	pop    %rbp
    9e0d:	c3                   	ret

0000000000009e0e <_ZNSt23_Rb_tree_const_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9e0e:	55                   	push   %rbp
    9e0f:	48 89 e5             	mov    %rsp,%rbp
    9e12:	48 83 ec 10          	sub    $0x10,%rsp
    9e16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    9e1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e1e:	48 8b 00             	mov    (%rax),%rax
    9e21:	48 89 c7             	mov    %rax,%rdi
    9e24:	e8 27 96 ff ff       	call   3450 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    9e29:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e2d:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    9e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9e34:	c9                   	leave
    9e35:	c3                   	ret

0000000000009e36 <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9e36:	55                   	push   %rbp
    9e37:	48 89 e5             	mov    %rsp,%rbp
    9e3a:	48 83 ec 10          	sub    $0x10,%rsp
    9e3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    9e42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e46:	48 8b 00             	mov    (%rax),%rax
    9e49:	48 89 c7             	mov    %rax,%rdi
    9e4c:	e8 c1 21 00 00       	call   c012 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
    9e51:	c9                   	leave
    9e52:	c3                   	ret
    9e53:	90                   	nop

0000000000009e54 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>:
      push_back(const value_type& __x)
    9e54:	55                   	push   %rbp
    9e55:	48 89 e5             	mov    %rsp,%rbp
    9e58:	48 83 ec 10          	sub    $0x10,%rsp
    9e5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    9e64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e68:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e70:	48 8b 40 10          	mov    0x10(%rax),%rax
    9e74:	48 39 c2             	cmp    %rax,%rdx
    9e77:	74 31                	je     9eaa <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x56>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    9e79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7d:	48 8b 48 08          	mov    0x8(%rax),%rcx
    9e81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e89:	48 89 ce             	mov    %rcx,%rsi
    9e8c:	48 89 c7             	mov    %rax,%rdi
    9e8f:	e8 9c 21 00 00       	call   c030 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    9e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e98:	48 8b 40 08          	mov    0x8(%rax),%rax
    9e9c:	48 8d 50 28          	lea    0x28(%rax),%rdx
    9ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea4:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    9ea8:	eb 22                	jmp    9ecc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x78>
	  _M_realloc_insert(end(), __x);
    9eaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eae:	48 89 c7             	mov    %rax,%rdi
    9eb1:	e8 b4 21 00 00       	call   c06a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>
    9eb6:	48 89 c1             	mov    %rax,%rcx
    9eb9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ec1:	48 89 ce             	mov    %rcx,%rsi
    9ec4:	48 89 c7             	mov    %rax,%rdi
    9ec7:	e8 c8 21 00 00       	call   c094 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
      }
    9ecc:	90                   	nop
    9ecd:	c9                   	leave
    9ece:	c3                   	ret
    9ecf:	90                   	nop

0000000000009ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    9ed0:	55                   	push   %rbp
    9ed1:	48 89 e5             	mov    %rsp,%rbp
    9ed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    9ed8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9edc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    9ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee4:	48 8b 00             	mov    (%rax),%rax
    9ee7:	48 29 c2             	sub    %rax,%rdx
    9eea:	48 c1 fa 03          	sar    $0x3,%rdx
    9eee:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    9ef5:	cc cc cc 
    9ef8:	48 0f af c2          	imul   %rdx,%rax
    9efc:	5d                   	pop    %rbp
    9efd:	c3                   	ret

0000000000009efe <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    9efe:	55                   	push   %rbp
    9eff:	48 89 e5             	mov    %rsp,%rbp
    9f02:	48 83 ec 10          	sub    $0x10,%rsp
    9f06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    9f0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f0e:	48 8b 10             	mov    (%rax),%rdx
    9f11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f15:	48 89 d6             	mov    %rdx,%rsi
    9f18:	48 89 c7             	mov    %rax,%rdi
    9f1b:	e8 2e 23 00 00       	call   c24e <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    9f20:	c9                   	leave
    9f21:	c3                   	ret

0000000000009f22 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    9f22:	55                   	push   %rbp
    9f23:	48 89 e5             	mov    %rsp,%rbp
    9f26:	48 83 ec 20          	sub    $0x20,%rsp
    9f2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    9f2e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f32:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f36:	48 89 d6             	mov    %rdx,%rsi
    9f39:	48 89 c7             	mov    %rax,%rdi
    9f3c:	e8 1f 23 00 00       	call   c260 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    9f41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f45:	c9                   	leave
    9f46:	c3                   	ret
    9f47:	90                   	nop

0000000000009f48 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    9f48:	55                   	push   %rbp
    9f49:	48 89 e5             	mov    %rsp,%rbp
    9f4c:	48 83 ec 20          	sub    $0x20,%rsp
    9f50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    9f54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f58:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9f5c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f60:	48 89 d6             	mov    %rdx,%rsi
    9f63:	48 89 c7             	mov    %rax,%rdi
    9f66:	e8 f5 22 00 00       	call   c260 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    9f6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f6f:	c9                   	leave
    9f70:	c3                   	ret

0000000000009f71 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    9f71:	55                   	push   %rbp
    9f72:	48 89 e5             	mov    %rsp,%rbp
    9f75:	53                   	push   %rbx
    9f76:	48 83 ec 18          	sub    $0x18,%rsp
    9f7a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9f7e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    9f82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f86:	48 89 c7             	mov    %rax,%rdi
    9f89:	e8 f0 22 00 00       	call   c27e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9f8e:	48 8b 18             	mov    (%rax),%rbx
    9f91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9f95:	48 89 c7             	mov    %rax,%rdi
    9f98:	e8 e1 22 00 00       	call   c27e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    9f9d:	48 8b 00             	mov    (%rax),%rax
    9fa0:	48 39 c3             	cmp    %rax,%rbx
    9fa3:	0f 95 c0             	setne  %al
    9fa6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9faa:	c9                   	leave
    9fab:	c3                   	ret

0000000000009fac <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    9fac:	55                   	push   %rbp
    9fad:	48 89 e5             	mov    %rsp,%rbp
    9fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    9fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fb8:	48 8b 00             	mov    (%rax),%rax
    9fbb:	48 8d 50 08          	lea    0x8(%rax),%rdx
    9fbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc3:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    9fc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    9fca:	5d                   	pop    %rbp
    9fcb:	c3                   	ret

0000000000009fcc <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    9fcc:	55                   	push   %rbp
    9fcd:	48 89 e5             	mov    %rsp,%rbp
    9fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    9fd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd8:	48 8b 00             	mov    (%rax),%rax
    9fdb:	5d                   	pop    %rbp
    9fdc:	c3                   	ret
    9fdd:	90                   	nop

0000000000009fde <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
    9fde:	55                   	push   %rbp
    9fdf:	48 89 e5             	mov    %rsp,%rbp
    9fe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    9fea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fee:	48 8b 00             	mov    (%rax),%rax
    9ff1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ff5:	48 c1 e2 03          	shl    $0x3,%rdx
    9ff9:	48 01 d0             	add    %rdx,%rax
      }
    9ffc:	5d                   	pop    %rbp
    9ffd:	c3                   	ret

0000000000009ffe <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    9ffe:	55                   	push   %rbp
    9fff:	48 89 e5             	mov    %rsp,%rbp
    a002:	48 83 ec 20          	sub    $0x20,%rsp
    a006:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    a00a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a00e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a012:	48 89 d6             	mov    %rdx,%rsi
    a015:	48 89 c7             	mov    %rax,%rdi
    a018:	e8 6f 22 00 00       	call   c28c <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    a01d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a021:	c9                   	leave
    a022:	c3                   	ret
    a023:	90                   	nop

000000000000a024 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    a024:	55                   	push   %rbp
    a025:	48 89 e5             	mov    %rsp,%rbp
    a028:	48 83 ec 20          	sub    $0x20,%rsp
    a02c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    a030:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a034:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a038:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a03c:	48 89 d6             	mov    %rdx,%rsi
    a03f:	48 89 c7             	mov    %rax,%rdi
    a042:	e8 45 22 00 00       	call   c28c <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    a047:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04b:	c9                   	leave
    a04c:	c3                   	ret

000000000000a04d <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a04d:	55                   	push   %rbp
    a04e:	48 89 e5             	mov    %rsp,%rbp
    a051:	53                   	push   %rbx
    a052:	48 83 ec 18          	sub    $0x18,%rsp
    a056:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a05a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a05e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a062:	48 89 c7             	mov    %rax,%rdi
    a065:	e8 40 22 00 00       	call   c2aa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    a06a:	48 8b 18             	mov    (%rax),%rbx
    a06d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a071:	48 89 c7             	mov    %rax,%rdi
    a074:	e8 31 22 00 00       	call   c2aa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    a079:	48 8b 00             	mov    (%rax),%rax
    a07c:	48 39 c3             	cmp    %rax,%rbx
    a07f:	0f 95 c0             	setne  %al
    a082:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a086:	c9                   	leave
    a087:	c3                   	ret

000000000000a088 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a088:	55                   	push   %rbp
    a089:	48 89 e5             	mov    %rsp,%rbp
    a08c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a094:	48 8b 00             	mov    (%rax),%rax
    a097:	48 8d 50 04          	lea    0x4(%rax),%rdx
    a09b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a09f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a0a6:	5d                   	pop    %rbp
    a0a7:	c3                   	ret

000000000000a0a8 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    a0a8:	55                   	push   %rbp
    a0a9:	48 89 e5             	mov    %rsp,%rbp
    a0ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    a0b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0b4:	48 8b 00             	mov    (%rax),%rax
    a0b7:	5d                   	pop    %rbp
    a0b8:	c3                   	ret

000000000000a0b9 <_ZSt5clampIjERKT_S2_S2_S2_>:
   *  @retval `__val` otherwise.
   *  @pre `_Tp` is LessThanComparable and `(__hi < __lo)` is false.
   */
  template<typename _Tp>
    constexpr const _Tp&
    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
    a0b9:	55                   	push   %rbp
    a0ba:	48 89 e5             	mov    %rsp,%rbp
    a0bd:	48 83 ec 20          	sub    $0x20,%rsp
    a0c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      __glibcxx_assert(!(__hi < __lo));
    a0cd:	e8 40 e6 ff ff       	call   8712 <_ZSt23__is_constant_evaluatedv>
    a0d2:	84 c0                	test   %al,%al
    a0d4:	74 17                	je     a0ed <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    a0d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0da:	8b 10                	mov    (%rax),%edx
    a0dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a0e0:	8b 00                	mov    (%rax),%eax
    a0e2:	39 c2                	cmp    %eax,%edx
    a0e4:	73 07                	jae    a0ed <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    a0e6:	b8 01 00 00 00       	mov    $0x1,%eax
    a0eb:	eb 05                	jmp    a0f2 <_ZSt5clampIjERKT_S2_S2_S2_+0x39>
    a0ed:	b8 00 00 00 00       	mov    $0x0,%eax
    a0f2:	84 c0                	test   %al,%al
      return std::min(std::max(__val, __lo), __hi);
    a0f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0fc:	48 89 d6             	mov    %rdx,%rsi
    a0ff:	48 89 c7             	mov    %rax,%rdi
    a102:	e8 b1 21 00 00       	call   c2b8 <_ZSt3maxIjERKT_S2_S2_>
    a107:	48 89 c2             	mov    %rax,%rdx
    a10a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a10e:	48 89 c6             	mov    %rax,%rsi
    a111:	48 89 d7             	mov    %rdx,%rdi
    a114:	e8 c7 21 00 00       	call   c2e0 <_ZSt3minIjERKT_S2_S2_>
    }
    a119:	c9                   	leave
    a11a:	c3                   	ret

000000000000a11b <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>:
	     && (!__lhs || *__lhs == *__rhs);
    }

  template<typename _Tp, typename _Up>
    constexpr auto
    operator!=(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
    a11b:	55                   	push   %rbp
    a11c:	48 89 e5             	mov    %rsp,%rbp
    a11f:	53                   	push   %rbx
    a120:	48 83 ec 18          	sub    $0x18,%rsp
    a124:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a128:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    -> __optional_ne_t<_Tp, _Up>
    {
      return static_cast<bool>(__lhs) != static_cast<bool>(__rhs)
    a12c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a130:	48 89 c7             	mov    %rax,%rdi
    a133:	e8 d0 21 00 00       	call   c308 <_ZNKSt8optionalIjEcvbEv>
    a138:	89 c3                	mov    %eax,%ebx
    a13a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a13e:	48 89 c7             	mov    %rax,%rdi
    a141:	e8 c2 21 00 00       	call   c308 <_ZNKSt8optionalIjEcvbEv>
	|| (static_cast<bool>(__lhs) && *__lhs != *__rhs);
    a146:	38 c3                	cmp    %al,%bl
    a148:	75 30                	jne    a17a <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x5f>
    a14a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a14e:	48 89 c7             	mov    %rax,%rdi
    a151:	e8 b2 21 00 00       	call   c308 <_ZNKSt8optionalIjEcvbEv>
    a156:	84 c0                	test   %al,%al
    a158:	74 27                	je     a181 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    a15a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a15e:	48 89 c7             	mov    %rax,%rdi
    a161:	e8 bc 21 00 00       	call   c322 <_ZNKRSt8optionalIjEdeEv>
    a166:	8b 18                	mov    (%rax),%ebx
    a168:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a16c:	48 89 c7             	mov    %rax,%rdi
    a16f:	e8 ae 21 00 00       	call   c322 <_ZNKRSt8optionalIjEdeEv>
    a174:	8b 00                	mov    (%rax),%eax
    a176:	39 c3                	cmp    %eax,%ebx
    a178:	74 07                	je     a181 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    a17a:	b8 01 00 00 00       	mov    $0x1,%eax
    a17f:	eb 05                	jmp    a186 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x6b>
    a181:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    a186:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a18a:	c9                   	leave
    a18b:	c3                   	ret

000000000000a18c <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    a18c:	55                   	push   %rbp
    a18d:	48 89 e5             	mov    %rsp,%rbp
    a190:	48 83 ec 10          	sub    $0x10,%rsp
    a194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a198:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    a19c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a0:	48 89 c7             	mov    %rax,%rdi
    a1a3:	e8 8e 00 00 00       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    a1a8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a1ac:	0f 92 c0             	setb   %al
    a1af:	84 c0                	test   %al,%al
    a1b1:	74 24                	je     a1d7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    a1b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b7:	48 89 c7             	mov    %rax,%rdi
    a1ba:	e8 77 00 00 00       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    a1bf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1c3:	48 29 c2             	sub    %rax,%rdx
    a1c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ca:	48 89 d6             	mov    %rdx,%rsi
    a1cd:	48 89 c7             	mov    %rax,%rdi
    a1d0:	e8 67 21 00 00       	call   c33c <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>
      }
    a1d5:	eb 38                	jmp    a20f <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    a1d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1db:	48 89 c7             	mov    %rax,%rdi
    a1de:	e8 53 00 00 00       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    a1e3:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    a1e7:	0f 92 c0             	setb   %al
    a1ea:	84 c0                	test   %al,%al
    a1ec:	74 21                	je     a20f <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    a1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f2:	48 8b 00             	mov    (%rax),%rax
    a1f5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1f9:	48 c1 e2 03          	shl    $0x3,%rdx
    a1fd:	48 01 c2             	add    %rax,%rdx
    a200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a204:	48 89 d6             	mov    %rdx,%rsi
    a207:	48 89 c7             	mov    %rax,%rdi
    a20a:	e8 37 23 00 00       	call   c546 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    a20f:	90                   	nop
    a210:	c9                   	leave
    a211:	c3                   	ret

000000000000a212 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a212:	55                   	push   %rbp
    a213:	48 89 e5             	mov    %rsp,%rbp
    a216:	48 83 ec 10          	sub    $0x10,%rsp
    a21a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a222:	48 8b 10             	mov    (%rax),%rdx
    a225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a229:	48 89 d6             	mov    %rdx,%rsi
    a22c:	48 89 c7             	mov    %rax,%rdi
    a22f:	e8 72 23 00 00       	call   c5a6 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    a234:	c9                   	leave
    a235:	c3                   	ret

000000000000a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a236:	55                   	push   %rbp
    a237:	48 89 e5             	mov    %rsp,%rbp
    a23a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    a23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a242:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a246:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a24a:	48 8b 00             	mov    (%rax),%rax
    a24d:	48 29 c2             	sub    %rax,%rdx
    a250:	48 89 d0             	mov    %rdx,%rax
    a253:	48 c1 f8 03          	sar    $0x3,%rax
    a257:	5d                   	pop    %rbp
    a258:	c3                   	ret
    a259:	90                   	nop

000000000000a25a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    a25a:	55                   	push   %rbp
    a25b:	48 89 e5             	mov    %rsp,%rbp
    a25e:	48 83 ec 10          	sub    $0x10,%rsp
    a262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a266:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    a26a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a26e:	48 89 c7             	mov    %rax,%rdi
    a271:	e8 9e 03 00 00       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    a276:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a27a:	0f 92 c0             	setb   %al
    a27d:	84 c0                	test   %al,%al
    a27f:	74 24                	je     a2a5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    a281:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a285:	48 89 c7             	mov    %rax,%rdi
    a288:	e8 87 03 00 00       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    a28d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a291:	48 29 c2             	sub    %rax,%rdx
    a294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a298:	48 89 d6             	mov    %rdx,%rsi
    a29b:	48 89 c7             	mov    %rax,%rdi
    a29e:	e8 15 23 00 00       	call   c5b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    a2a3:	eb 38                	jmp    a2dd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    a2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a9:	48 89 c7             	mov    %rax,%rdi
    a2ac:	e8 63 03 00 00       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    a2b1:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    a2b5:	0f 92 c0             	setb   %al
    a2b8:	84 c0                	test   %al,%al
    a2ba:	74 21                	je     a2dd <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    a2bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c0:	48 8b 00             	mov    (%rax),%rax
    a2c3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2c7:	48 c1 e2 03          	shl    $0x3,%rdx
    a2cb:	48 01 c2             	add    %rax,%rdx
    a2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2d2:	48 89 d6             	mov    %rdx,%rsi
    a2d5:	48 89 c7             	mov    %rax,%rdi
    a2d8:	e8 e5 24 00 00       	call   c7c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    a2dd:	90                   	nop
    a2de:	c9                   	leave
    a2df:	c3                   	ret

000000000000a2e0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    a2e0:	55                   	push   %rbp
    a2e1:	48 89 e5             	mov    %rsp,%rbp
    a2e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    a2ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2f0:	48 8b 00             	mov    (%rax),%rax
    a2f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2f7:	48 c1 e2 03          	shl    $0x3,%rdx
    a2fb:	48 01 d0             	add    %rdx,%rax
      }
    a2fe:	5d                   	pop    %rbp
    a2ff:	c3                   	ret

000000000000a300 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    a300:	55                   	push   %rbp
    a301:	48 89 e5             	mov    %rsp,%rbp
    a304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    a30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a310:	48 8b 00             	mov    (%rax),%rax
    a313:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a317:	48 c1 e2 03          	shl    $0x3,%rdx
    a31b:	48 01 d0             	add    %rdx,%rax
      }
    a31e:	5d                   	pop    %rbp
    a31f:	c3                   	ret

000000000000a320 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    a320:	55                   	push   %rbp
    a321:	48 89 e5             	mov    %rsp,%rbp
    a324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a32c:	48 8b 00             	mov    (%rax),%rax
    a32f:	5d                   	pop    %rbp
    a330:	c3                   	ret
    a331:	90                   	nop

000000000000a332 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    a332:	55                   	push   %rbp
    a333:	48 89 e5             	mov    %rsp,%rbp
    a336:	53                   	push   %rbx
    a337:	48 83 ec 28          	sub    $0x28,%rsp
    a33b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a33f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    a343:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    a347:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    a34b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a34f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a353:	48 89 d6             	mov    %rdx,%rsi
    a356:	48 89 c7             	mov    %rax,%rdi
    a359:	e8 c4 24 00 00       	call   c822 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    a35e:	48 89 c1             	mov    %rax,%rcx
    a361:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a365:	48 89 c2             	mov    %rax,%rdx
    a368:	48 89 ce             	mov    %rcx,%rsi
    a36b:	48 89 df             	mov    %rbx,%rdi
    a36e:	e8 0f 25 00 00       	call   c882 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    a373:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a37b:	48 89 d6             	mov    %rdx,%rsi
    a37e:	48 89 c7             	mov    %rax,%rdi
    a381:	e8 5a 25 00 00       	call   c8e0 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    a386:	eb 1a                	jmp    a3a2 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    a388:	48 89 c3             	mov    %rax,%rbx
    a38b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a38f:	48 89 c7             	mov    %rax,%rdi
    a392:	e8 a9 00 00 00       	call   a440 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    a397:	48 89 d8             	mov    %rbx,%rax
    a39a:	48 89 c7             	mov    %rax,%rdi
    a39d:	e8 0e 93 ff ff       	call   36b0 <_Unwind_Resume@plt>
    a3a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a3a6:	c9                   	leave
    a3a7:	c3                   	ret

000000000000a3a8 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a3a8:	55                   	push   %rbp
    a3a9:	48 89 e5             	mov    %rsp,%rbp
    a3ac:	48 83 ec 10          	sub    $0x10,%rsp
    a3b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a3b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3b8:	48 89 c7             	mov    %rax,%rdi
    a3bb:	e8 60 25 00 00       	call   c920 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    a3c0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a3c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a3cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3cf:	48 8b 00             	mov    (%rax),%rax
    a3d2:	48 89 ce             	mov    %rcx,%rsi
    a3d5:	48 89 c7             	mov    %rax,%rdi
    a3d8:	e8 51 25 00 00       	call   c92e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    a3dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3e1:	48 89 c7             	mov    %rax,%rdi
    a3e4:	e8 57 00 00 00       	call   a440 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    a3e9:	90                   	nop
    a3ea:	c9                   	leave
    a3eb:	c3                   	ret

000000000000a3ec <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    a3ec:	55                   	push   %rbp
    a3ed:	48 89 e5             	mov    %rsp,%rbp
    a3f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    a3f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a400:	48 89 10             	mov    %rdx,(%rax)
    a403:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a407:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    a40e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a412:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    a419:	90                   	nop
    a41a:	5d                   	pop    %rbp
    a41b:	c3                   	ret

000000000000a41c <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a41c:	55                   	push   %rbp
    a41d:	48 89 e5             	mov    %rsp,%rbp
    a420:	48 83 ec 10          	sub    $0x10,%rsp
    a424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a428:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a42c:	48 8b 10             	mov    (%rax),%rdx
    a42f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a433:	48 89 d6             	mov    %rdx,%rsi
    a436:	48 89 c7             	mov    %rax,%rdi
    a439:	e8 1a 25 00 00       	call   c958 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    a43e:	c9                   	leave
    a43f:	c3                   	ret

000000000000a440 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    a440:	55                   	push   %rbp
    a441:	48 89 e5             	mov    %rsp,%rbp
    a444:	48 83 ec 10          	sub    $0x10,%rsp
    a448:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    a44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a450:	48 8b 50 10          	mov    0x10(%rax),%rdx
    a454:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a458:	48 8b 00             	mov    (%rax),%rax
    a45b:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    a45e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a462:	48 8b 08             	mov    (%rax),%rcx
    a465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a469:	48 89 ce             	mov    %rcx,%rsi
    a46c:	48 89 c7             	mov    %rax,%rdi
    a46f:	e8 f6 24 00 00       	call   c96a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    a474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a478:	48 89 c7             	mov    %rax,%rdi
    a47b:	e8 46 e6 ff ff       	call   8ac6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    a480:	90                   	nop
    a481:	c9                   	leave
    a482:	c3                   	ret
    a483:	90                   	nop

000000000000a484 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a484:	55                   	push   %rbp
    a485:	48 89 e5             	mov    %rsp,%rbp
    a488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    a48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a490:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a494:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a498:	48 8b 00             	mov    (%rax),%rax
    a49b:	48 29 c2             	sub    %rax,%rdx
    a49e:	48 89 d0             	mov    %rdx,%rax
    a4a1:	5d                   	pop    %rbp
    a4a2:	c3                   	ret
    a4a3:	90                   	nop

000000000000a4a4 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    a4a4:	55                   	push   %rbp
    a4a5:	48 89 e5             	mov    %rsp,%rbp
    a4a8:	48 83 ec 10          	sub    $0x10,%rsp
    a4ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a4b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b4:	48 8b 10             	mov    (%rax),%rdx
    a4b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4bb:	48 89 d6             	mov    %rdx,%rsi
    a4be:	48 89 c7             	mov    %rax,%rdi
    a4c1:	e8 92 24 00 00       	call   c958 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    a4c6:	c9                   	leave
    a4c7:	c3                   	ret

000000000000a4c8 <_ZNSaI14VkDynamicStateEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    a4c8:	55                   	push   %rbp
    a4c9:	48 89 e5             	mov    %rsp,%rbp
    a4cc:	48 83 ec 10          	sub    $0x10,%rsp
    a4d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d8:	48 89 c7             	mov    %rax,%rdi
    a4db:	e8 c0 24 00 00       	call   c9a0 <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>
    a4e0:	90                   	nop
    a4e1:	c9                   	leave
    a4e2:	c3                   	ret
    a4e3:	90                   	nop

000000000000a4e4 <_ZNSaI14VkDynamicStateED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    a4e4:	55                   	push   %rbp
    a4e5:	48 89 e5             	mov    %rsp,%rbp
    a4e8:	48 83 ec 10          	sub    $0x10,%rsp
    a4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f4:	48 89 c7             	mov    %rax,%rdi
    a4f7:	e8 b0 24 00 00       	call   c9ac <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>
    a4fc:	90                   	nop
    a4fd:	c9                   	leave
    a4fe:	c3                   	ret
    a4ff:	90                   	nop

000000000000a500 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
    a500:	55                   	push   %rbp
    a501:	48 89 e5             	mov    %rsp,%rbp
    a504:	53                   	push   %rbx
    a505:	48 83 ec 38          	sub    $0x38,%rsp
    a509:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a50d:	48 89 f0             	mov    %rsi,%rax
    a510:	48 89 d6             	mov    %rdx,%rsi
    a513:	48 89 f2             	mov    %rsi,%rdx
    a516:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    a51a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    a51e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    a522:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a526:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a52a:	48 89 d6             	mov    %rdx,%rsi
    a52d:	48 89 c7             	mov    %rax,%rdi
    a530:	e8 9f 24 00 00       	call   c9d4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
    a535:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a539:	48 89 c7             	mov    %rax,%rdi
    a53c:	e8 19 25 00 00       	call   ca5a <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>
    a541:	48 89 c3             	mov    %rax,%rbx
    a544:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    a548:	48 89 c7             	mov    %rax,%rdi
    a54b:	e8 f8 24 00 00       	call   ca48 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
    a550:	48 89 c1             	mov    %rax,%rcx
    a553:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a557:	48 89 da             	mov    %rbx,%rdx
    a55a:	48 89 ce             	mov    %rcx,%rsi
    a55d:	48 89 c7             	mov    %rax,%rdi
    a560:	e8 5b 25 00 00       	call   cac0 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
    a565:	eb 1a                	jmp    a581 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
    a567:	48 89 c3             	mov    %rax,%rbx
    a56a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a56e:	48 89 c7             	mov    %rax,%rdi
    a571:	e8 84 24 00 00       	call   c9fa <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    a576:	48 89 d8             	mov    %rbx,%rax
    a579:	48 89 c7             	mov    %rax,%rdi
    a57c:	e8 2f 91 ff ff       	call   36b0 <_Unwind_Resume@plt>
    a581:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a585:	c9                   	leave
    a586:	c3                   	ret
    a587:	90                   	nop

000000000000a588 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    a588:	55                   	push   %rbp
    a589:	48 89 e5             	mov    %rsp,%rbp
    a58c:	48 83 ec 10          	sub    $0x10,%rsp
    a590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    a594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a598:	48 89 c7             	mov    %rax,%rdi
    a59b:	e8 d0 25 00 00       	call   cb70 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
    a5a0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    a5a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    a5ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5af:	48 8b 00             	mov    (%rax),%rax
    a5b2:	48 89 ce             	mov    %rcx,%rsi
    a5b5:	48 89 c7             	mov    %rax,%rdi
    a5b8:	e8 c1 25 00 00       	call   cb7e <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>
      }
    a5bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c1:	48 89 c7             	mov    %rax,%rdi
    a5c4:	e8 31 24 00 00       	call   c9fa <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    a5c9:	90                   	nop
    a5ca:	c9                   	leave
    a5cb:	c3                   	ret

000000000000a5cc <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a5cc:	55                   	push   %rbp
    a5cd:	48 89 e5             	mov    %rsp,%rbp
    a5d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    a5d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5e0:	48 8b 00             	mov    (%rax),%rax
    a5e3:	48 29 c2             	sub    %rax,%rdx
    a5e6:	48 89 d0             	mov    %rdx,%rax
    a5e9:	48 c1 f8 02          	sar    $0x2,%rax
    a5ed:	5d                   	pop    %rbp
    a5ee:	c3                   	ret
    a5ef:	90                   	nop

000000000000a5f0 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    a5f0:	55                   	push   %rbp
    a5f1:	48 89 e5             	mov    %rsp,%rbp
    a5f4:	48 83 ec 10          	sub    $0x10,%rsp
    a5f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    a5fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a600:	48 8b 10             	mov    (%rax),%rdx
    a603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a607:	48 89 d6             	mov    %rdx,%rsi
    a60a:	48 89 c7             	mov    %rax,%rdi
    a60d:	e8 96 25 00 00       	call   cba8 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    a612:	c9                   	leave
    a613:	c3                   	ret

000000000000a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    a614:	55                   	push   %rbp
    a615:	48 89 e5             	mov    %rsp,%rbp
    a618:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    a61c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a620:	48 8b 50 08          	mov    0x8(%rax),%rdx
    a624:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a628:	48 8b 00             	mov    (%rax),%rax
    a62b:	48 29 c2             	sub    %rax,%rdx
    a62e:	48 89 d0             	mov    %rdx,%rax
    a631:	48 c1 f8 03          	sar    $0x3,%rax
    a635:	5d                   	pop    %rbp
    a636:	c3                   	ret
    a637:	90                   	nop

000000000000a638 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    a638:	55                   	push   %rbp
    a639:	48 89 e5             	mov    %rsp,%rbp
    a63c:	48 83 ec 10          	sub    $0x10,%rsp
    a640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a644:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    a648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a64c:	48 89 c7             	mov    %rax,%rdi
    a64f:	e8 66 25 00 00       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    a654:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    a658:	0f 92 c0             	setb   %al
    a65b:	84 c0                	test   %al,%al
    a65d:	74 24                	je     a683 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    a65f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a663:	48 89 c7             	mov    %rax,%rdi
    a666:	e8 4f 25 00 00       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    a66b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a66f:	48 29 c2             	sub    %rax,%rdx
    a672:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a676:	48 89 d6             	mov    %rdx,%rsi
    a679:	48 89 c7             	mov    %rax,%rdi
    a67c:	e8 5d 25 00 00       	call   cbde <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
    a681:	eb 38                	jmp    a6bb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    a683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a687:	48 89 c7             	mov    %rax,%rdi
    a68a:	e8 2b 25 00 00       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    a68f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    a693:	0f 92 c0             	setb   %al
    a696:	84 c0                	test   %al,%al
    a698:	74 21                	je     a6bb <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    a69a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a69e:	48 8b 00             	mov    (%rax),%rax
    a6a1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6a5:	48 c1 e2 03          	shl    $0x3,%rdx
    a6a9:	48 01 c2             	add    %rax,%rdx
    a6ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6b0:	48 89 d6             	mov    %rdx,%rsi
    a6b3:	48 89 c7             	mov    %rax,%rdi
    a6b6:	e8 2d 27 00 00       	call   cde8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    a6bb:	90                   	nop
    a6bc:	c9                   	leave
    a6bd:	c3                   	ret

000000000000a6be <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    a6be:	55                   	push   %rbp
    a6bf:	48 89 e5             	mov    %rsp,%rbp
    a6c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    a6ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ce:	48 8b 00             	mov    (%rax),%rax
    a6d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6d5:	48 c1 e2 03          	shl    $0x3,%rdx
    a6d9:	48 01 d0             	add    %rdx,%rax
      }
    a6dc:	5d                   	pop    %rbp
    a6dd:	c3                   	ret

000000000000a6de <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    a6de:	55                   	push   %rbp
    a6df:	48 89 e5             	mov    %rsp,%rbp
    a6e2:	48 83 ec 20          	sub    $0x20,%rsp
    a6e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    a6ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a6ee:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a6f2:	48 89 d6             	mov    %rdx,%rsi
    a6f5:	48 89 c7             	mov    %rax,%rdi
    a6f8:	e8 4b 27 00 00       	call   ce48 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a6fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a701:	c9                   	leave
    a702:	c3                   	ret
    a703:	90                   	nop

000000000000a704 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    a704:	55                   	push   %rbp
    a705:	48 89 e5             	mov    %rsp,%rbp
    a708:	48 83 ec 20          	sub    $0x20,%rsp
    a70c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    a710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a714:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a718:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a71c:	48 89 d6             	mov    %rdx,%rsi
    a71f:	48 89 c7             	mov    %rax,%rdi
    a722:	e8 21 27 00 00       	call   ce48 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a727:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a72b:	c9                   	leave
    a72c:	c3                   	ret

000000000000a72d <_ZN9__gnu_cxxneIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a72d:	55                   	push   %rbp
    a72e:	48 89 e5             	mov    %rsp,%rbp
    a731:	53                   	push   %rbx
    a732:	48 83 ec 18          	sub    $0x18,%rsp
    a736:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a73a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a73e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a742:	48 89 c7             	mov    %rax,%rdi
    a745:	e8 1c 27 00 00       	call   ce66 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a74a:	48 8b 18             	mov    (%rax),%rbx
    a74d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a751:	48 89 c7             	mov    %rax,%rdi
    a754:	e8 0d 27 00 00       	call   ce66 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a759:	48 8b 00             	mov    (%rax),%rax
    a75c:	48 39 c3             	cmp    %rax,%rbx
    a75f:	0f 95 c0             	setne  %al
    a762:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a766:	c9                   	leave
    a767:	c3                   	ret

000000000000a768 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a768:	55                   	push   %rbp
    a769:	48 89 e5             	mov    %rsp,%rbp
    a76c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a774:	48 8b 00             	mov    (%rax),%rax
    a777:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a77b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a77f:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a786:	5d                   	pop    %rbp
    a787:	c3                   	ret

000000000000a788 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    a788:	55                   	push   %rbp
    a789:	48 89 e5             	mov    %rsp,%rbp
    a78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    a790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a794:	48 8b 00             	mov    (%rax),%rax
    a797:	5d                   	pop    %rbp
    a798:	c3                   	ret
    a799:	90                   	nop

000000000000a79a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    a79a:	55                   	push   %rbp
    a79b:	48 89 e5             	mov    %rsp,%rbp
    a79e:	48 83 ec 20          	sub    $0x20,%rsp
    a7a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    a7a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7aa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a7ae:	48 89 d6             	mov    %rdx,%rsi
    a7b1:	48 89 c7             	mov    %rax,%rdi
    a7b4:	e8 bb 26 00 00       	call   ce74 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a7b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7bd:	c9                   	leave
    a7be:	c3                   	ret
    a7bf:	90                   	nop

000000000000a7c0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    a7c0:	55                   	push   %rbp
    a7c1:	48 89 e5             	mov    %rsp,%rbp
    a7c4:	48 83 ec 20          	sub    $0x20,%rsp
    a7c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    a7cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a7d4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a7d8:	48 89 d6             	mov    %rdx,%rsi
    a7db:	48 89 c7             	mov    %rax,%rdi
    a7de:	e8 91 26 00 00       	call   ce74 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    a7e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e7:	c9                   	leave
    a7e8:	c3                   	ret

000000000000a7e9 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    a7e9:	55                   	push   %rbp
    a7ea:	48 89 e5             	mov    %rsp,%rbp
    a7ed:	53                   	push   %rbx
    a7ee:	48 83 ec 18          	sub    $0x18,%rsp
    a7f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a7f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    a7fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7fe:	48 89 c7             	mov    %rax,%rdi
    a801:	e8 8c 26 00 00       	call   ce92 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a806:	48 8b 18             	mov    (%rax),%rbx
    a809:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a80d:	48 89 c7             	mov    %rax,%rdi
    a810:	e8 7d 26 00 00       	call   ce92 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
    a815:	48 8b 00             	mov    (%rax),%rax
    a818:	48 39 c3             	cmp    %rax,%rbx
    a81b:	0f 95 c0             	setne  %al
    a81e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a822:	c9                   	leave
    a823:	c3                   	ret

000000000000a824 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    a824:	55                   	push   %rbp
    a825:	48 89 e5             	mov    %rsp,%rbp
    a828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    a82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a830:	48 8b 00             	mov    (%rax),%rax
    a833:	48 8d 50 08          	lea    0x8(%rax),%rdx
    a837:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a83b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    a83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    a842:	5d                   	pop    %rbp
    a843:	c3                   	ret

000000000000a844 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    a844:	55                   	push   %rbp
    a845:	48 89 e5             	mov    %rsp,%rbp
    a848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    a84c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a850:	48 8b 00             	mov    (%rax),%rax
    a853:	5d                   	pop    %rbp
    a854:	c3                   	ret

000000000000a855 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    a855:	55                   	push   %rbp
    a856:	48 89 e5             	mov    %rsp,%rbp
    a859:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a85d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    a861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a865:	0f b6 10             	movzbl (%rax),%edx
    a868:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a86c:	0f b6 00             	movzbl (%rax),%eax
    a86f:	38 c2                	cmp    %al,%dl
    a871:	0f 94 c0             	sete   %al
    a874:	5d                   	pop    %rbp
    a875:	c3                   	ret

000000000000a876 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    a876:	55                   	push   %rbp
    a877:	48 89 e5             	mov    %rsp,%rbp
    a87a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a87e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a882:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a886:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a88a:	48 89 10             	mov    %rdx,(%rax)
    a88d:	90                   	nop
    a88e:	5d                   	pop    %rbp
    a88f:	c3                   	ret

000000000000a890 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    a890:	55                   	push   %rbp
    a891:	48 89 e5             	mov    %rsp,%rbp
    a894:	48 83 ec 10          	sub    $0x10,%rsp
    a898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a89c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8a0:	48 8b 00             	mov    (%rax),%rax
    a8a3:	48 85 c0             	test   %rax,%rax
    a8a6:	74 0f                	je     a8b7 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    a8a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8ac:	48 8b 00             	mov    (%rax),%rax
    a8af:	48 89 c7             	mov    %rax,%rdi
    a8b2:	e8 e9 8b ff ff       	call   34a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    a8b7:	90                   	nop
    a8b8:	c9                   	leave
    a8b9:	c3                   	ret

000000000000a8ba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    a8ba:	55                   	push   %rbp
    a8bb:	48 89 e5             	mov    %rsp,%rbp
    a8be:	48 83 ec 40          	sub    $0x40,%rsp
    a8c2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a8c6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    a8ca:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    a8ce:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a8d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a8d6:	48 89 d6             	mov    %rdx,%rsi
    a8d9:	48 89 c7             	mov    %rax,%rdi
    a8dc:	e8 ca 25 00 00       	call   ceab <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    a8e1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    a8e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8e9:	48 83 f8 0f          	cmp    $0xf,%rax
    a8ed:	76 3f                	jbe    a92e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    a8ef:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    a8f3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a8f7:	ba 00 00 00 00       	mov    $0x0,%edx
    a8fc:	48 89 ce             	mov    %rcx,%rsi
    a8ff:	48 89 c7             	mov    %rax,%rdi
    a902:	e8 d9 8d ff ff       	call   36e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    a907:	48 89 c2             	mov    %rax,%rdx
    a90a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a90e:	48 89 d6             	mov    %rdx,%rsi
    a911:	48 89 c7             	mov    %rax,%rdi
    a914:	e8 87 89 ff ff       	call   32a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    a919:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a91d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a921:	48 89 d6             	mov    %rdx,%rsi
    a924:	48 89 c7             	mov    %rax,%rdi
    a927:	e8 04 8e ff ff       	call   3730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    a92c:	eb 15                	jmp    a943 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    a92e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a932:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    a936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a93a:	48 89 c7             	mov    %rax,%rdi
    a93d:	e8 1e 89 ff ff       	call   3260 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    a942:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    a943:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    a947:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a94b:	48 89 d6             	mov    %rdx,%rsi
    a94e:	48 89 c7             	mov    %rax,%rdi
    a951:	e8 20 ff ff ff       	call   a876 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    a956:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a95a:	48 89 c7             	mov    %rax,%rdi
    a95d:	e8 ae 8a ff ff       	call   3410 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    a962:	48 89 c1             	mov    %rax,%rcx
    a965:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    a969:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    a96d:	48 89 c6             	mov    %rax,%rsi
    a970:	48 89 cf             	mov    %rcx,%rdi
    a973:	e8 a8 8a ff ff       	call   3420 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    a978:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    a97f:	00 

	_M_set_length(__dnew);
    a980:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a984:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a988:	48 89 d6             	mov    %rdx,%rsi
    a98b:	48 89 c7             	mov    %rax,%rdi
    a98e:	e8 4d 88 ff ff       	call   31e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    a993:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    a997:	48 89 c7             	mov    %rax,%rdi
    a99a:	e8 f1 fe ff ff       	call   a890 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    a99f:	c9                   	leave
    a9a0:	c3                   	ret
    a9a1:	90                   	nop

000000000000a9a2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a9a2:	55                   	push   %rbp
    a9a3:	48 89 e5             	mov    %rsp,%rbp
    a9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9aa:	90                   	nop
    a9ab:	5d                   	pop    %rbp
    a9ac:	c3                   	ret
    a9ad:	90                   	nop

000000000000a9ae <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    a9ae:	55                   	push   %rbp
    a9af:	48 89 e5             	mov    %rsp,%rbp
    a9b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9b6:	90                   	nop
    a9b7:	5d                   	pop    %rbp
    a9b8:	c3                   	ret

000000000000a9b9 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    a9b9:	55                   	push   %rbp
    a9ba:	48 89 e5             	mov    %rsp,%rbp
    a9bd:	53                   	push   %rbx
    a9be:	48 83 ec 28          	sub    $0x28,%rsp
    a9c2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    a9c6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    a9ca:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    a9ce:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9d2:	48 89 d6             	mov    %rdx,%rsi
    a9d5:	48 89 c7             	mov    %rax,%rdi
    a9d8:	e8 25 01 00 00       	call   ab02 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    a9dd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9e1:	48 89 c7             	mov    %rax,%rdi
    a9e4:	e8 f3 24 00 00       	call   cedc <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    a9e9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    a9ed:	0f 92 c3             	setb   %bl
    a9f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    a9f4:	48 89 c7             	mov    %rax,%rdi
    a9f7:	e8 7e e1 ff ff       	call   8b7a <_ZNSaI21VkExtensionPropertiesED1Ev>
    a9fc:	84 db                	test   %bl,%bl
    a9fe:	74 0f                	je     aa0f <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    aa00:	48 8d 05 51 ac 00 00 	lea    0xac51(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    aa07:	48 89 c7             	mov    %rax,%rdi
    aa0a:	e8 41 87 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    aa0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    aa13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa17:	c9                   	leave
    aa18:	c3                   	ret
    aa19:	90                   	nop

000000000000aa1a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    aa1a:	55                   	push   %rbp
    aa1b:	48 89 e5             	mov    %rsp,%rbp
    aa1e:	53                   	push   %rbx
    aa1f:	48 83 ec 28          	sub    $0x28,%rsp
    aa23:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa27:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    aa2b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    aa2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa33:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    aa37:	48 89 d6             	mov    %rdx,%rsi
    aa3a:	48 89 c7             	mov    %rax,%rdi
    aa3d:	e8 dc 24 00 00       	call   cf1e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    aa42:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa4a:	48 89 d6             	mov    %rdx,%rsi
    aa4d:	48 89 c7             	mov    %rax,%rdi
    aa50:	e8 fb 24 00 00       	call   cf50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    aa55:	eb 1a                	jmp    aa71 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    aa57:	48 89 c3             	mov    %rax,%rbx
    aa5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa5e:	48 89 c7             	mov    %rax,%rdi
    aa61:	e8 6c de ff ff       	call   88d2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    aa66:	48 89 d8             	mov    %rbx,%rax
    aa69:	48 89 c7             	mov    %rax,%rdi
    aa6c:	e8 3f 8c ff ff       	call   36b0 <_Unwind_Resume@plt>
    aa71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    aa75:	c9                   	leave
    aa76:	c3                   	ret
    aa77:	90                   	nop

000000000000aa78 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    aa78:	55                   	push   %rbp
    aa79:	48 89 e5             	mov    %rsp,%rbp
    aa7c:	48 83 ec 10          	sub    $0x10,%rsp
    aa80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    aa88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa8c:	48 89 c7             	mov    %rax,%rdi
    aa8f:	e8 24 00 00 00       	call   aab8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    aa94:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    aa97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa9b:	48 8b 00             	mov    (%rax),%rax
    aa9e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aaa2:	48 89 ce             	mov    %rcx,%rsi
    aaa5:	48 89 c7             	mov    %rax,%rdi
    aaa8:	e8 04 25 00 00       	call   cfb1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    aaad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aab1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    aab5:	90                   	nop
    aab6:	c9                   	leave
    aab7:	c3                   	ret

000000000000aab8 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    aab8:	55                   	push   %rbp
    aab9:	48 89 e5             	mov    %rsp,%rbp
    aabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    aac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aac4:	5d                   	pop    %rbp
    aac5:	c3                   	ret

000000000000aac6 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    aac6:	55                   	push   %rbp
    aac7:	48 89 e5             	mov    %rsp,%rbp
    aaca:	48 83 ec 20          	sub    $0x20,%rsp
    aace:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aad2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aad6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    aada:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aae2:	48 89 d6             	mov    %rdx,%rsi
    aae5:	48 89 c7             	mov    %rax,%rdi
    aae8:	e8 ed 24 00 00       	call   cfda <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    aaed:	90                   	nop
    aaee:	c9                   	leave
    aaef:	c3                   	ret

000000000000aaf0 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    aaf0:	55                   	push   %rbp
    aaf1:	48 89 e5             	mov    %rsp,%rbp
    aaf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    aafc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab00:	5d                   	pop    %rbp
    ab01:	c3                   	ret

000000000000ab02 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ab02:	55                   	push   %rbp
    ab03:	48 89 e5             	mov    %rsp,%rbp
    ab06:	48 83 ec 10          	sub    $0x10,%rsp
    ab0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ab12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab1a:	48 89 d6             	mov    %rdx,%rsi
    ab1d:	48 89 c7             	mov    %rax,%rdi
    ab20:	e8 db 24 00 00       	call   d000 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    ab25:	90                   	nop
    ab26:	c9                   	leave
    ab27:	c3                   	ret

000000000000ab28 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    ab28:	55                   	push   %rbp
    ab29:	48 89 e5             	mov    %rsp,%rbp
    ab2c:	48 83 ec 20          	sub    $0x20,%rsp
    ab30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ab3c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab41:	74 17                	je     ab5a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ab43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab47:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab4b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ab4f:	48 89 ce             	mov    %rcx,%rsi
    ab52:	48 89 c7             	mov    %rax,%rdi
    ab55:	e8 b5 24 00 00       	call   d00f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    ab5a:	90                   	nop
    ab5b:	c9                   	leave
    ab5c:	c3                   	ret

000000000000ab5d <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    ab5d:	55                   	push   %rbp
    ab5e:	48 89 e5             	mov    %rsp,%rbp
    ab61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ab65:	90                   	nop
    ab66:	5d                   	pop    %rbp
    ab67:	c3                   	ret

000000000000ab68 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
    ab68:	55                   	push   %rbp
    ab69:	48 89 e5             	mov    %rsp,%rbp
    ab6c:	48 83 ec 10          	sub    $0x10,%rsp
    ab70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    ab78:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ab7c:	48 89 c7             	mov    %rax,%rdi
    ab7f:	e8 d9 ff ff ff       	call   ab5d <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
    ab84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab8c:	48 89 d6             	mov    %rdx,%rsi
    ab8f:	48 89 c7             	mov    %rax,%rdi
    ab92:	e8 a6 24 00 00       	call   d03d <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
    ab97:	c9                   	leave
    ab98:	c3                   	ret
    ab99:	90                   	nop

000000000000ab9a <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    ab9a:	55                   	push   %rbp
    ab9b:	48 89 e5             	mov    %rsp,%rbp
    ab9e:	53                   	push   %rbx
    ab9f:	48 83 ec 38          	sub    $0x38,%rsp
    aba3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    aba7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    abab:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    abaf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    abb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    abb7:	48 89 d6             	mov    %rdx,%rsi
    abba:	48 89 c7             	mov    %rax,%rdi
    abbd:	e8 a6 ff ff ff       	call   ab68 <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>
    abc2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    abc6:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    abca:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    abce:	48 89 c7             	mov    %rax,%rdi
    abd1:	e8 52 96 ff ff       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    abd6:	48 89 c2             	mov    %rax,%rdx
    abd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abdd:	48 89 d6             	mov    %rdx,%rsi
    abe0:	48 89 c7             	mov    %rax,%rdi
    abe3:	e8 63 99 ff ff       	call   454b <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    abe8:	48 89 c6             	mov    %rax,%rsi
    abeb:	48 89 df             	mov    %rbx,%rdi
    abee:	e8 b9 99 ff ff       	call   45ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    abf3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    abf7:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    abfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    abfe:	48 8b 00             	mov    (%rax),%rax
    ac01:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac05:	48 c1 e2 03          	shl    $0x3,%rdx
    ac09:	48 01 c2             	add    %rax,%rdx
    ac0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac10:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    ac14:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac18:	48 89 c7             	mov    %rax,%rdi
    ac1b:	e8 08 96 ff ff       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ac20:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    ac23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ac27:	48 8b 10             	mov    (%rax),%rdx
    ac2a:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ac2e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ac32:	48 89 c7             	mov    %rax,%rdi
    ac35:	e8 1d 24 00 00       	call   d057 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    ac3a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ac3e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    ac42:	90                   	nop
    ac43:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac47:	c9                   	leave
    ac48:	c3                   	ret

000000000000ac49 <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    ac49:	55                   	push   %rbp
    ac4a:	48 89 e5             	mov    %rsp,%rbp
    ac4d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ac51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac55:	5d                   	pop    %rbp
    ac56:	c3                   	ret
    ac57:	90                   	nop

000000000000ac58 <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    ac58:	55                   	push   %rbp
    ac59:	48 89 e5             	mov    %rsp,%rbp
    ac5c:	53                   	push   %rbx
    ac5d:	48 83 ec 18          	sub    $0x18,%rsp
    ac61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    ac69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac6d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ac71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac75:	48 8b 40 10          	mov    0x10(%rax),%rax
    ac79:	48 39 c2             	cmp    %rax,%rdx
    ac7c:	74 3c                	je     acba <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    ac7e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac82:	48 89 c7             	mov    %rax,%rdi
    ac85:	e8 fe 23 00 00       	call   d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ac8a:	48 89 c2             	mov    %rax,%rdx
    ac8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac91:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ac95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac99:	48 89 ce             	mov    %rcx,%rsi
    ac9c:	48 89 c7             	mov    %rax,%rdi
    ac9f:	e8 f2 23 00 00       	call   d096 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    aca4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aca8:	48 8b 40 08          	mov    0x8(%rax),%rax
    acac:	48 8d 50 08          	lea    0x8(%rax),%rdx
    acb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acb4:	48 89 50 08          	mov    %rdx,0x8(%rax)
    acb8:	eb 30                	jmp    acea <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    acba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    acbe:	48 89 c7             	mov    %rax,%rdi
    acc1:	e8 c2 23 00 00       	call   d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    acc6:	48 89 c3             	mov    %rax,%rbx
    acc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    accd:	48 89 c7             	mov    %rax,%rdi
    acd0:	e8 7f e4 ff ff       	call   9154 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    acd5:	48 89 c1             	mov    %rax,%rcx
    acd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acdc:	48 89 da             	mov    %rbx,%rdx
    acdf:	48 89 ce             	mov    %rcx,%rsi
    ace2:	48 89 c7             	mov    %rax,%rdi
    ace5:	e8 e6 23 00 00       	call   d0d0 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    acea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acee:	48 89 c7             	mov    %rax,%rdi
    acf1:	e8 6c 25 00 00       	call   d262 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    acf6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    acfa:	c9                   	leave
    acfb:	c3                   	ret

000000000000acfc <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    acfc:	55                   	push   %rbp
    acfd:	48 89 e5             	mov    %rsp,%rbp
    ad00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad04:	90                   	nop
    ad05:	5d                   	pop    %rbp
    ad06:	c3                   	ret
    ad07:	90                   	nop

000000000000ad08 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ad08:	55                   	push   %rbp
    ad09:	48 89 e5             	mov    %rsp,%rbp
    ad0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad10:	90                   	nop
    ad11:	5d                   	pop    %rbp
    ad12:	c3                   	ret

000000000000ad13 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ad13:	55                   	push   %rbp
    ad14:	48 89 e5             	mov    %rsp,%rbp
    ad17:	53                   	push   %rbx
    ad18:	48 83 ec 28          	sub    $0x28,%rsp
    ad1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ad20:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ad24:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ad28:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad2c:	48 89 d6             	mov    %rdx,%rsi
    ad2f:	48 89 c7             	mov    %rax,%rdi
    ad32:	e8 ad 25 00 00       	call   d2e4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    ad37:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad3b:	48 89 c7             	mov    %rax,%rdi
    ad3e:	e8 5e 25 00 00       	call   d2a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    ad43:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ad47:	0f 92 c3             	setb   %bl
    ad4a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ad4e:	48 89 c7             	mov    %rax,%rdi
    ad51:	e8 36 e0 ff ff       	call   8d8c <_ZNSaI17VkLayerPropertiesED1Ev>
    ad56:	84 db                	test   %bl,%bl
    ad58:	74 0f                	je     ad69 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    ad5a:	48 8d 05 f7 a8 00 00 	lea    0xa8f7(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    ad61:	48 89 c7             	mov    %rax,%rdi
    ad64:	e8 e7 83 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ad69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ad6d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ad71:	c9                   	leave
    ad72:	c3                   	ret
    ad73:	90                   	nop

000000000000ad74 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    ad74:	55                   	push   %rbp
    ad75:	48 89 e5             	mov    %rsp,%rbp
    ad78:	48 83 ec 10          	sub    $0x10,%rsp
    ad7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad84:	48 89 c7             	mov    %rax,%rdi
    ad87:	e8 00 e0 ff ff       	call   8d8c <_ZNSaI17VkLayerPropertiesED1Ev>
    ad8c:	90                   	nop
    ad8d:	c9                   	leave
    ad8e:	c3                   	ret
    ad8f:	90                   	nop

000000000000ad90 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ad90:	55                   	push   %rbp
    ad91:	48 89 e5             	mov    %rsp,%rbp
    ad94:	53                   	push   %rbx
    ad95:	48 83 ec 28          	sub    $0x28,%rsp
    ad99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ada1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    ada5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ada9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    adad:	48 89 d6             	mov    %rdx,%rsi
    adb0:	48 89 c7             	mov    %rax,%rdi
    adb3:	e8 52 25 00 00       	call   d30a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    adb8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    adbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adc0:	48 89 d6             	mov    %rdx,%rsi
    adc3:	48 89 c7             	mov    %rax,%rdi
    adc6:	e8 71 25 00 00       	call   d33c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    adcb:	eb 1a                	jmp    ade7 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    adcd:	48 89 c3             	mov    %rax,%rbx
    add0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    add4:	48 89 c7             	mov    %rax,%rdi
    add7:	e8 98 ff ff ff       	call   ad74 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    addc:	48 89 d8             	mov    %rbx,%rax
    addf:	48 89 c7             	mov    %rax,%rdi
    ade2:	e8 c9 88 ff ff       	call   36b0 <_Unwind_Resume@plt>
    ade7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    adeb:	c9                   	leave
    adec:	c3                   	ret
    aded:	90                   	nop

000000000000adee <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    adee:	55                   	push   %rbp
    adef:	48 89 e5             	mov    %rsp,%rbp
    adf2:	48 83 ec 10          	sub    $0x10,%rsp
    adf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    adfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adfe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ae02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae06:	48 8b 00             	mov    (%rax),%rax
    ae09:	48 29 c2             	sub    %rax,%rdx
    ae0c:	48 c1 fa 03          	sar    $0x3,%rdx
    ae10:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    ae17:	fc c0 0f 
    ae1a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    ae1e:	48 89 c2             	mov    %rax,%rdx
    ae21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae25:	48 8b 08             	mov    (%rax),%rcx
    ae28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae2c:	48 89 ce             	mov    %rcx,%rsi
    ae2f:	48 89 c7             	mov    %rax,%rdi
    ae32:	e8 67 25 00 00       	call   d39e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    ae37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3b:	48 89 c7             	mov    %rax,%rdi
    ae3e:	e8 31 ff ff ff       	call   ad74 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    ae43:	90                   	nop
    ae44:	c9                   	leave
    ae45:	c3                   	ret

000000000000ae46 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ae46:	55                   	push   %rbp
    ae47:	48 89 e5             	mov    %rsp,%rbp
    ae4a:	48 83 ec 10          	sub    $0x10,%rsp
    ae4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ae56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae5a:	48 89 c7             	mov    %rax,%rdi
    ae5d:	e8 24 00 00 00       	call   ae86 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ae62:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ae65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae69:	48 8b 00             	mov    (%rax),%rax
    ae6c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ae70:	48 89 ce             	mov    %rcx,%rsi
    ae73:	48 89 c7             	mov    %rax,%rdi
    ae76:	e8 58 25 00 00       	call   d3d3 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ae7b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ae7f:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ae83:	90                   	nop
    ae84:	c9                   	leave
    ae85:	c3                   	ret

000000000000ae86 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ae86:	55                   	push   %rbp
    ae87:	48 89 e5             	mov    %rsp,%rbp
    ae8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ae8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae92:	5d                   	pop    %rbp
    ae93:	c3                   	ret

000000000000ae94 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ae94:	55                   	push   %rbp
    ae95:	48 89 e5             	mov    %rsp,%rbp
    ae98:	48 83 ec 20          	sub    $0x20,%rsp
    ae9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aea0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aea4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    aea8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aeac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aeb0:	48 89 d6             	mov    %rdx,%rsi
    aeb3:	48 89 c7             	mov    %rax,%rdi
    aeb6:	e8 41 25 00 00       	call   d3fc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    aebb:	90                   	nop
    aebc:	c9                   	leave
    aebd:	c3                   	ret

000000000000aebe <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    aebe:	55                   	push   %rbp
    aebf:	48 89 e5             	mov    %rsp,%rbp
    aec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aec6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    aeca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aece:	5d                   	pop    %rbp
    aecf:	c3                   	ret

000000000000aed0 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    aed0:	55                   	push   %rbp
    aed1:	48 89 e5             	mov    %rsp,%rbp
    aed4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aed8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    aedc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aee0:	48 8b 10             	mov    (%rax),%rdx
    aee3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aee7:	48 89 10             	mov    %rdx,(%rax)
    aeea:	90                   	nop
    aeeb:	5d                   	pop    %rbp
    aeec:	c3                   	ret
    aeed:	90                   	nop

000000000000aeee <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    aeee:	55                   	push   %rbp
    aeef:	48 89 e5             	mov    %rsp,%rbp
    aef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    aef6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aefa:	5d                   	pop    %rbp
    aefb:	c3                   	ret

000000000000aefc <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    aefc:	55                   	push   %rbp
    aefd:	48 89 e5             	mov    %rsp,%rbp
    af00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    af08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af0c:	48 8b 10             	mov    (%rax),%rdx
    af0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af13:	48 89 10             	mov    %rdx,(%rax)
    af16:	90                   	nop
    af17:	5d                   	pop    %rbp
    af18:	c3                   	ret
    af19:	90                   	nop

000000000000af1a <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    af1a:	55                   	push   %rbp
    af1b:	48 89 e5             	mov    %rsp,%rbp
    af1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    af22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af26:	5d                   	pop    %rbp
    af27:	c3                   	ret

000000000000af28 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    af28:	55                   	push   %rbp
    af29:	48 89 e5             	mov    %rsp,%rbp
    af2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    af34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af38:	5d                   	pop    %rbp
    af39:	c3                   	ret

000000000000af3a <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    af3a:	55                   	push   %rbp
    af3b:	48 89 e5             	mov    %rsp,%rbp
    af3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af42:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    af46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af4a:	48 8b 10             	mov    (%rax),%rdx
    af4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af51:	48 89 10             	mov    %rdx,(%rax)
    af54:	90                   	nop
    af55:	5d                   	pop    %rbp
    af56:	c3                   	ret
    af57:	90                   	nop

000000000000af58 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    af58:	55                   	push   %rbp
    af59:	48 89 e5             	mov    %rsp,%rbp
    af5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    af60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af64:	5d                   	pop    %rbp
    af65:	c3                   	ret

000000000000af66 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    af66:	55                   	push   %rbp
    af67:	48 89 e5             	mov    %rsp,%rbp
    af6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    af72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af76:	48 8b 10             	mov    (%rax),%rdx
    af79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af7d:	48 89 10             	mov    %rdx,(%rax)
    af80:	90                   	nop
    af81:	5d                   	pop    %rbp
    af82:	c3                   	ret
    af83:	90                   	nop

000000000000af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    af84:	55                   	push   %rbp
    af85:	48 89 e5             	mov    %rsp,%rbp
    af88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    af8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af90:	5d                   	pop    %rbp
    af91:	c3                   	ret

000000000000af92 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    af92:	55                   	push   %rbp
    af93:	48 89 e5             	mov    %rsp,%rbp
    af96:	48 83 ec 10          	sub    $0x10,%rsp
    af9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    af9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afa2:	48 89 c7             	mov    %rax,%rdi
    afa5:	e8 78 24 00 00       	call   d422 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    afaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afae:	48 89 c7             	mov    %rax,%rdi
    afb1:	e8 88 24 00 00       	call   d43e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    afb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afba:	48 83 c0 08          	add    $0x8,%rax
    afbe:	48 89 c7             	mov    %rax,%rdi
    afc1:	e8 e4 d7 ff ff       	call   87aa <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    afc6:	90                   	nop
    afc7:	c9                   	leave
    afc8:	c3                   	ret
    afc9:	90                   	nop

000000000000afca <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    afca:	55                   	push   %rbp
    afcb:	48 89 e5             	mov    %rsp,%rbp
    afce:	48 83 ec 10          	sub    $0x10,%rsp
    afd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    afd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afda:	48 89 c7             	mov    %rax,%rdi
    afdd:	e8 68 24 00 00       	call   d44a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    afe2:	90                   	nop
    afe3:	c9                   	leave
    afe4:	c3                   	ret
    afe5:	90                   	nop

000000000000afe6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>:
	    _M_insert_unique_(end(), *__first, __an);
	}

      template<typename _InputIterator>
	__enable_if_t<!__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	48 83 ec 20          	sub    $0x20,%rsp
    afee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aff2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aff6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{
	  for (; __first != __last; ++__first)
    affa:	eb 2a                	jmp    b026 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x40>
	    _M_emplace_unique(*__first);
    affc:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b000:	48 89 c7             	mov    %rax,%rdi
    b003:	e8 28 df ff ff       	call   8f30 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    b008:	48 89 c2             	mov    %rax,%rdx
    b00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b00f:	48 89 d6             	mov    %rdx,%rsi
    b012:	48 89 c7             	mov    %rax,%rdi
    b015:	e8 3c 24 00 00       	call   d456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>
	  for (; __first != __last; ++__first)
    b01a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b01e:	48 89 c7             	mov    %rax,%rdi
    b021:	e8 ea de ff ff       	call   8f10 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    b026:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    b02a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b02e:	48 89 d6             	mov    %rdx,%rsi
    b031:	48 89 c7             	mov    %rax,%rdi
    b034:	e8 9c de ff ff       	call   8ed5 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    b039:	84 c0                	test   %al,%al
    b03b:	75 bf                	jne    affc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x16>
	}
    b03d:	90                   	nop
    b03e:	90                   	nop
    b03f:	c9                   	leave
    b040:	c3                   	ret
    b041:	90                   	nop

000000000000b042 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b042:	55                   	push   %rbp
    b043:	48 89 e5             	mov    %rsp,%rbp
    b046:	48 83 ec 20          	sub    $0x20,%rsp
    b04a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b04e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    b052:	eb 49                	jmp    b09d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    b054:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b058:	48 89 c7             	mov    %rax,%rdi
    b05b:	e8 1a 25 00 00       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    b060:	48 89 c2             	mov    %rax,%rdx
    b063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b067:	48 89 d6             	mov    %rdx,%rsi
    b06a:	48 89 c7             	mov    %rax,%rdi
    b06d:	e8 d0 ff ff ff       	call   b042 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	  _Link_type __y = _S_left(__x);
    b072:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b076:	48 89 c7             	mov    %rax,%rdi
    b079:	e8 0e 25 00 00       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    b07e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    b082:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b086:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b08a:	48 89 d6             	mov    %rdx,%rsi
    b08d:	48 89 c7             	mov    %rax,%rdi
    b090:	e8 09 25 00 00       	call   d59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	  __x = __y;
    b095:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b099:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    b09d:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b0a2:	75 b0                	jne    b054 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x12>
	}
    }
    b0a4:	90                   	nop
    b0a5:	90                   	nop
    b0a6:	c9                   	leave
    b0a7:	c3                   	ret

000000000000b0a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    b0a8:	55                   	push   %rbp
    b0a9:	48 89 e5             	mov    %rsp,%rbp
    b0ac:	48 83 ec 10          	sub    $0x10,%rsp
    b0b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    b0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0b8:	48 89 c7             	mov    %rax,%rdi
    b0bb:	e8 18 25 00 00       	call   d5d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>
    b0c0:	c9                   	leave
    b0c1:	c3                   	ret

000000000000b0c2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    b0c2:	55                   	push   %rbp
    b0c3:	48 89 e5             	mov    %rsp,%rbp
    b0c6:	48 83 ec 40          	sub    $0x40,%rsp
    b0ca:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b0ce:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
    b0d2:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    b0d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b0da:	48 89 d6             	mov    %rdx,%rsi
    b0dd:	48 89 c7             	mov    %rax,%rdi
    b0e0:	e8 05 25 00 00       	call   d5ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>
    b0e5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    b0e9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const size_type __old_size = size();
    b0ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b0f1:	48 89 c7             	mov    %rax,%rdi
    b0f4:	e8 8f 26 00 00       	call   d788 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    b0f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_erase_aux(__p.first, __p.second);
    b0fd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    b101:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b105:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b109:	48 89 d6             	mov    %rdx,%rsi
    b10c:	48 89 c7             	mov    %rax,%rdi
    b10f:	e8 86 26 00 00       	call   d79a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    b114:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    b118:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    b11c:	48 89 d6             	mov    %rdx,%rsi
    b11f:	48 89 c7             	mov    %rax,%rdi
    b122:	e8 73 26 00 00       	call   d79a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    b127:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b12b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b12f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b133:	48 89 ce             	mov    %rcx,%rsi
    b136:	48 89 c7             	mov    %rax,%rdi
    b139:	e8 7a 26 00 00       	call   d7b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>
      return __old_size - size();
    b13e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b142:	48 89 c7             	mov    %rax,%rdi
    b145:	e8 3e 26 00 00       	call   d788 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    b14a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b14e:	48 29 c2             	sub    %rax,%rdx
    b151:	48 89 d0             	mov    %rdx,%rax
    }
    b154:	c9                   	leave
    b155:	c3                   	ret

000000000000b156 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    b156:	55                   	push   %rbp
    b157:	48 89 e5             	mov    %rsp,%rbp
    b15a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count == 0; }
    b15e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b162:	48 8b 40 28          	mov    0x28(%rax),%rax
    b166:	48 85 c0             	test   %rax,%rax
    b169:	0f 94 c0             	sete   %al
    b16c:	5d                   	pop    %rbp
    b16d:	c3                   	ret

000000000000b16e <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    b16e:	55                   	push   %rbp
    b16f:	48 89 e5             	mov    %rsp,%rbp
    b172:	48 83 ec 10          	sub    $0x10,%rsp
    b176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b17a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b17e:	48 89 c7             	mov    %rax,%rdi
    b181:	e8 16 27 00 00       	call   d89c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    b186:	90                   	nop
    b187:	c9                   	leave
    b188:	c3                   	ret
    b189:	90                   	nop

000000000000b18a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b18a:	55                   	push   %rbp
    b18b:	48 89 e5             	mov    %rsp,%rbp
    b18e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b192:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b196:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b19d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1a1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b1a8:	00 
    b1a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1ad:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b1b4:	00 
	{ }
    b1b5:	90                   	nop
    b1b6:	5d                   	pop    %rbp
    b1b7:	c3                   	ret

000000000000b1b8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
    b1b8:	55                   	push   %rbp
    b1b9:	48 89 e5             	mov    %rsp,%rbp
    b1bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1c0:	90                   	nop
    b1c1:	5d                   	pop    %rbp
    b1c2:	c3                   	ret
    b1c3:	90                   	nop

000000000000b1c4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b1c4:	55                   	push   %rbp
    b1c5:	48 89 e5             	mov    %rsp,%rbp
    b1c8:	48 83 ec 20          	sub    $0x20,%rsp
    b1cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b1d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b1d8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b1dd:	74 17                	je     b1f6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b1df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b1e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1eb:	48 89 ce             	mov    %rcx,%rsi
    b1ee:	48 89 c7             	mov    %rax,%rdi
    b1f1:	e8 b1 26 00 00       	call   d8a7 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    b1f6:	90                   	nop
    b1f7:	c9                   	leave
    b1f8:	c3                   	ret
    b1f9:	90                   	nop

000000000000b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b1fa:	55                   	push   %rbp
    b1fb:	48 89 e5             	mov    %rsp,%rbp
    b1fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b206:	5d                   	pop    %rbp
    b207:	c3                   	ret

000000000000b208 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b208:	55                   	push   %rbp
    b209:	48 89 e5             	mov    %rsp,%rbp
    b20c:	48 83 ec 20          	sub    $0x20,%rsp
    b210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b218:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b21c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b220:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b224:	48 89 d6             	mov    %rdx,%rsi
    b227:	48 89 c7             	mov    %rax,%rdi
    b22a:	e8 a6 26 00 00       	call   d8d5 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    b22f:	90                   	nop
    b230:	c9                   	leave
    b231:	c3                   	ret

000000000000b232 <_ZNSaI16VkPresentModeKHREC1Ev>:
    b232:	55                   	push   %rbp
    b233:	48 89 e5             	mov    %rsp,%rbp
    b236:	48 83 ec 10          	sub    $0x10,%rsp
    b23a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b23e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b242:	48 89 c7             	mov    %rax,%rdi
    b245:	e8 b2 26 00 00       	call   d8fc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    b24a:	90                   	nop
    b24b:	c9                   	leave
    b24c:	c3                   	ret
    b24d:	90                   	nop

000000000000b24e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    b24e:	55                   	push   %rbp
    b24f:	48 89 e5             	mov    %rsp,%rbp
    b252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    b256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b25a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    b261:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b265:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    b26c:	00 
    b26d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b271:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    b278:	00 
	{ }
    b279:	90                   	nop
    b27a:	5d                   	pop    %rbp
    b27b:	c3                   	ret

000000000000b27c <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
    b27c:	55                   	push   %rbp
    b27d:	48 89 e5             	mov    %rsp,%rbp
    b280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b284:	90                   	nop
    b285:	5d                   	pop    %rbp
    b286:	c3                   	ret
    b287:	90                   	nop

000000000000b288 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    b288:	55                   	push   %rbp
    b289:	48 89 e5             	mov    %rsp,%rbp
    b28c:	48 83 ec 20          	sub    $0x20,%rsp
    b290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b298:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    b29c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    b2a1:	74 17                	je     b2ba <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    b2a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b2ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2af:	48 89 ce             	mov    %rcx,%rsi
    b2b2:	48 89 c7             	mov    %rax,%rdi
    b2b5:	e8 4d 26 00 00       	call   d907 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    b2ba:	90                   	nop
    b2bb:	c9                   	leave
    b2bc:	c3                   	ret
    b2bd:	90                   	nop

000000000000b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    b2be:	55                   	push   %rbp
    b2bf:	48 89 e5             	mov    %rsp,%rbp
    b2c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    b2c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ca:	5d                   	pop    %rbp
    b2cb:	c3                   	ret

000000000000b2cc <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    b2cc:	55                   	push   %rbp
    b2cd:	48 89 e5             	mov    %rsp,%rbp
    b2d0:	48 83 ec 20          	sub    $0x20,%rsp
    b2d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b2dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    b2e0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b2e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2e8:	48 89 d6             	mov    %rdx,%rsi
    b2eb:	48 89 c7             	mov    %rax,%rdi
    b2ee:	e8 42 26 00 00       	call   d935 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    b2f3:	90                   	nop
    b2f4:	c9                   	leave
    b2f5:	c3                   	ret

000000000000b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    b2f6:	55                   	push   %rbp
    b2f7:	48 89 e5             	mov    %rsp,%rbp
    b2fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    b2fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b302:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30a:	48 8b 00             	mov    (%rax),%rax
    b30d:	48 29 c2             	sub    %rax,%rdx
    b310:	48 89 d0             	mov    %rdx,%rax
    b313:	48 c1 f8 03          	sar    $0x3,%rax
    b317:	5d                   	pop    %rbp
    b318:	c3                   	ret
    b319:	90                   	nop

000000000000b31a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    b31a:	55                   	push   %rbp
    b31b:	48 89 e5             	mov    %rsp,%rbp
    b31e:	53                   	push   %rbx
    b31f:	48 83 ec 38          	sub    $0x38,%rsp
    b323:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b327:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    b32b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b330:	0f 84 e7 01 00 00    	je     b51d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    b336:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b33a:	48 89 c7             	mov    %rax,%rdi
    b33d:	e8 b4 ff ff ff       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    b342:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    b346:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b34a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    b34e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b352:	48 8b 40 08          	mov    0x8(%rax),%rax
    b356:	48 29 c2             	sub    %rax,%rdx
    b359:	48 89 d0             	mov    %rdx,%rax
    b35c:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    b360:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    b364:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b368:	48 89 c7             	mov    %rax,%rdi
    b36b:	e8 ec 25 00 00       	call   d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    b370:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b374:	72 16                	jb     b38c <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x72>
    b376:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b37a:	48 89 c7             	mov    %rax,%rdi
    b37d:	e8 da 25 00 00       	call   d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    b382:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    b386:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    b38a:	73 07                	jae    b393 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x79>
    b38c:	b8 01 00 00 00       	mov    $0x1,%eax
    b391:	eb 05                	jmp    b398 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7e>
    b393:	b8 00 00 00 00       	mov    $0x0,%eax
    b398:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    b39a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b39e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    b3a2:	72 33                	jb     b3d7 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    b3a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b3a8:	48 89 c7             	mov    %rax,%rdi
    b3ab:	e8 4a fe ff ff       	call   b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b3b0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    b3b3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b3b7:	48 8b 40 08          	mov    0x8(%rax),%rax
    b3bb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b3bf:	48 89 ce             	mov    %rcx,%rsi
    b3c2:	48 89 c7             	mov    %rax,%rdi
    b3c5:	e8 b4 25 00 00       	call   d97e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    b3ca:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b3ce:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    b3d2:	e9 46 01 00 00       	jmp    b51d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    b3d7:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b3db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b3df:	48 8d 15 a3 a2 00 00 	lea    0xa2a3(%rip),%rdx        # 15689 <_ZN6__pstl9execution2v1L5unseqE+0x422>
    b3e6:	48 89 ce             	mov    %rcx,%rsi
    b3e9:	48 89 c7             	mov    %rax,%rdi
    b3ec:	e8 b7 25 00 00       	call   d9a8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>
    b3f1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    b3f5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b3f9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b3fd:	48 89 d6             	mov    %rdx,%rsi
    b400:	48 89 c7             	mov    %rax,%rdi
    b403:	e8 68 26 00 00       	call   da70 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    b408:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    b40c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b410:	48 89 c7             	mov    %rax,%rdi
    b413:	e8 e2 fd ff ff       	call   b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b418:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    b41b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b41f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    b426:	00 
    b427:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b42b:	48 01 c1             	add    %rax,%rcx
    b42e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b432:	48 89 c6             	mov    %rax,%rsi
    b435:	48 89 cf             	mov    %rcx,%rdi
    b438:	e8 41 25 00 00       	call   d97e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    b43d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b441:	48 89 c7             	mov    %rax,%rdi
    b444:	e8 b1 fd ff ff       	call   b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b449:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    b44c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b450:	48 8b 70 08          	mov    0x8(%rax),%rsi
    b454:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b458:	48 8b 00             	mov    (%rax),%rax
    b45b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b45f:	48 89 c7             	mov    %rax,%rdi
    b462:	e8 3c 26 00 00       	call   daa3 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    b467:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    b46b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b46f:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    b473:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b477:	48 8b 12             	mov    (%rdx),%rdx
    b47a:	48 29 d1             	sub    %rdx,%rcx
    b47d:	48 c1 f9 03          	sar    $0x3,%rcx
    b481:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    b484:	48 89 d6             	mov    %rdx,%rsi
    b487:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b48b:	48 8b 0a             	mov    (%rdx),%rcx
    b48e:	48 89 f2             	mov    %rsi,%rdx
    b491:	48 89 ce             	mov    %rcx,%rsi
    b494:	48 89 c7             	mov    %rax,%rdi
    b497:	e8 28 fd ff ff       	call   b1c4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    b49c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4a0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b4a4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    b4a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b4ab:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b4af:	48 01 d0             	add    %rdx,%rax
    b4b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b4b9:	00 
    b4ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b4be:	48 01 c2             	add    %rax,%rdx
    b4c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4c5:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    b4c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b4cd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    b4d4:	00 
    b4d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b4d9:	48 01 c2             	add    %rax,%rdx
    b4dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4e0:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    b4e4:	eb 37                	jmp    b51d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    b4e6:	48 89 c7             	mov    %rax,%rdi
    b4e9:	e8 02 7c ff ff       	call   30f0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    b4ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b4f2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b4f6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b4fa:	48 89 ce             	mov    %rcx,%rsi
    b4fd:	48 89 c7             	mov    %rax,%rdi
    b500:	e8 bf fc ff ff       	call   b1c4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    b505:	e8 a6 80 ff ff       	call   35b0 <__cxa_rethrow@plt>
		  __catch(...)
    b50a:	48 89 c3             	mov    %rax,%rbx
    b50d:	e8 4e 81 ff ff       	call   3660 <__cxa_end_catch@plt>
    b512:	48 89 d8             	mov    %rbx,%rax
    b515:	48 89 c7             	mov    %rax,%rdi
    b518:	e8 93 81 ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    b51d:	90                   	nop
    b51e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b522:	c9                   	leave
    b523:	c3                   	ret

000000000000b524 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    b524:	55                   	push   %rbp
    b525:	48 89 e5             	mov    %rsp,%rbp
    b528:	48 83 ec 20          	sub    $0x20,%rsp
    b52c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b530:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    b534:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b538:	48 8b 40 08          	mov    0x8(%rax),%rax
    b53c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    b540:	48 c1 f8 03          	sar    $0x3,%rax
    b544:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b548:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b54d:	74 32                	je     b581 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    b54f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b553:	48 89 c7             	mov    %rax,%rdi
    b556:	e8 9f fc ff ff       	call   b1fa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b55b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    b55e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b562:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b566:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b56a:	48 89 ce             	mov    %rcx,%rsi
    b56d:	48 89 c7             	mov    %rax,%rdi
    b570:	e8 93 fc ff ff       	call   b208 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    b575:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b579:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b57d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    b581:	90                   	nop
    b582:	c9                   	leave
    b583:	c3                   	ret

000000000000b584 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b584:	55                   	push   %rbp
    b585:	48 89 e5             	mov    %rsp,%rbp
    b588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b58c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b590:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b594:	5d                   	pop    %rbp
    b595:	c3                   	ret

000000000000b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    b596:	55                   	push   %rbp
    b597:	48 89 e5             	mov    %rsp,%rbp
    b59a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    b59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5a2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    b5a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5aa:	48 8b 00             	mov    (%rax),%rax
    b5ad:	48 29 c2             	sub    %rax,%rdx
    b5b0:	48 89 d0             	mov    %rdx,%rax
    b5b3:	48 c1 f8 02          	sar    $0x2,%rax
    b5b7:	5d                   	pop    %rbp
    b5b8:	c3                   	ret
    b5b9:	90                   	nop

000000000000b5ba <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    b5ba:	55                   	push   %rbp
    b5bb:	48 89 e5             	mov    %rsp,%rbp
    b5be:	53                   	push   %rbx
    b5bf:	48 83 ec 38          	sub    $0x38,%rsp
    b5c3:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    b5c7:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    b5cb:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    b5d0:	0f 84 e7 01 00 00    	je     b7bd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    b5d6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b5da:	48 89 c7             	mov    %rax,%rdi
    b5dd:	e8 b4 ff ff ff       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    b5e2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    b5e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b5ea:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    b5ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b5f2:	48 8b 40 08          	mov    0x8(%rax),%rax
    b5f6:	48 29 c2             	sub    %rax,%rdx
    b5f9:	48 89 d0             	mov    %rdx,%rax
    b5fc:	48 c1 f8 02          	sar    $0x2,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    b600:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    b604:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b608:	48 89 c7             	mov    %rax,%rdi
    b60b:	e8 c6 24 00 00       	call   dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    b610:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    b614:	72 16                	jb     b62c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x72>
    b616:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b61a:	48 89 c7             	mov    %rax,%rdi
    b61d:	e8 b4 24 00 00       	call   dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    b622:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    b626:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    b62a:	73 07                	jae    b633 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x79>
    b62c:	b8 01 00 00 00       	mov    $0x1,%eax
    b631:	eb 05                	jmp    b638 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7e>
    b633:	b8 00 00 00 00       	mov    $0x0,%eax
    b638:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    b63a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b63e:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    b642:	72 33                	jb     b677 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    b644:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b648:	48 89 c7             	mov    %rax,%rdi
    b64b:	e8 6e fc ff ff       	call   b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b650:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    b653:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b657:	48 8b 40 08          	mov    0x8(%rax),%rax
    b65b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b65f:	48 89 ce             	mov    %rcx,%rsi
    b662:	48 89 c7             	mov    %rax,%rdi
    b665:	e8 8e 24 00 00       	call   daf8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    b66a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b66e:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    b672:	e9 46 01 00 00       	jmp    b7bd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    b677:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    b67b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b67f:	48 8d 15 03 a0 00 00 	lea    0xa003(%rip),%rdx        # 15689 <_ZN6__pstl9execution2v1L5unseqE+0x422>
    b686:	48 89 ce             	mov    %rcx,%rsi
    b689:	48 89 c7             	mov    %rax,%rdi
    b68c:	e8 91 24 00 00       	call   db22 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>
    b691:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    b695:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b699:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b69d:	48 89 d6             	mov    %rdx,%rsi
    b6a0:	48 89 c7             	mov    %rax,%rdi
    b6a3:	e8 42 25 00 00       	call   dbea <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    b6a8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    b6ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b6b0:	48 89 c7             	mov    %rax,%rdi
    b6b3:	e8 06 fc ff ff       	call   b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b6b8:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    b6bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6bf:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    b6c6:	00 
    b6c7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b6cb:	48 01 c1             	add    %rax,%rcx
    b6ce:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b6d2:	48 89 c6             	mov    %rax,%rsi
    b6d5:	48 89 cf             	mov    %rcx,%rdi
    b6d8:	e8 1b 24 00 00       	call   daf8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    b6dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b6e1:	48 89 c7             	mov    %rax,%rdi
    b6e4:	e8 d5 fb ff ff       	call   b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b6e9:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    b6ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b6f0:	48 8b 70 08          	mov    0x8(%rax),%rsi
    b6f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b6f8:	48 8b 00             	mov    (%rax),%rax
    b6fb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b6ff:	48 89 c7             	mov    %rax,%rdi
    b702:	e8 16 25 00 00       	call   dc1d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    b707:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    b70b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b70f:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    b713:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b717:	48 8b 12             	mov    (%rdx),%rdx
    b71a:	48 29 d1             	sub    %rdx,%rcx
    b71d:	48 c1 f9 02          	sar    $0x2,%rcx
    b721:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    b724:	48 89 d6             	mov    %rdx,%rsi
    b727:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    b72b:	48 8b 0a             	mov    (%rdx),%rcx
    b72e:	48 89 f2             	mov    %rsi,%rdx
    b731:	48 89 ce             	mov    %rcx,%rsi
    b734:	48 89 c7             	mov    %rax,%rdi
    b737:	e8 4c fb ff ff       	call   b288 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    b73c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b740:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b744:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    b747:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b74b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    b74f:	48 01 d0             	add    %rdx,%rax
    b752:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    b759:	00 
    b75a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b75e:	48 01 c2             	add    %rax,%rdx
    b761:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b765:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    b769:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    b76d:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    b774:	00 
    b775:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    b779:	48 01 c2             	add    %rax,%rdx
    b77c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b780:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    b784:	eb 37                	jmp    b7bd <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    b786:	48 89 c7             	mov    %rax,%rdi
    b789:	e8 62 79 ff ff       	call   30f0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    b78e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    b792:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b796:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    b79a:	48 89 ce             	mov    %rcx,%rsi
    b79d:	48 89 c7             	mov    %rax,%rdi
    b7a0:	e8 e3 fa ff ff       	call   b288 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    b7a5:	e8 06 7e ff ff       	call   35b0 <__cxa_rethrow@plt>
		  __catch(...)
    b7aa:	48 89 c3             	mov    %rax,%rbx
    b7ad:	e8 ae 7e ff ff       	call   3660 <__cxa_end_catch@plt>
    b7b2:	48 89 d8             	mov    %rbx,%rax
    b7b5:	48 89 c7             	mov    %rax,%rdi
    b7b8:	e8 f3 7e ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    b7bd:	90                   	nop
    b7be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b7c2:	c9                   	leave
    b7c3:	c3                   	ret

000000000000b7c4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    b7c4:	55                   	push   %rbp
    b7c5:	48 89 e5             	mov    %rsp,%rbp
    b7c8:	48 83 ec 20          	sub    $0x20,%rsp
    b7cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b7d0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    b7d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7d8:	48 8b 40 08          	mov    0x8(%rax),%rax
    b7dc:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    b7e0:	48 c1 f8 02          	sar    $0x2,%rax
    b7e4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    b7e8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    b7ed:	74 32                	je     b821 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    b7ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7f3:	48 89 c7             	mov    %rax,%rdi
    b7f6:	e8 c3 fa ff ff       	call   b2be <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    b7fb:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    b7fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b802:	48 8b 48 08          	mov    0x8(%rax),%rcx
    b806:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b80a:	48 89 ce             	mov    %rcx,%rsi
    b80d:	48 89 c7             	mov    %rax,%rdi
    b810:	e8 b7 fa ff ff       	call   b2cc <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    b815:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b819:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b81d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    b821:	90                   	nop
    b822:	c9                   	leave
    b823:	c3                   	ret

000000000000b824 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    b824:	55                   	push   %rbp
    b825:	48 89 e5             	mov    %rsp,%rbp
    b828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b82c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    b830:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b834:	5d                   	pop    %rbp
    b835:	c3                   	ret

000000000000b836 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    b836:	55                   	push   %rbp
    b837:	48 89 e5             	mov    %rsp,%rbp
    b83a:	53                   	push   %rbx
    b83b:	48 83 ec 18          	sub    $0x18,%rsp
    b83f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b843:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    b847:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b84b:	48 89 c7             	mov    %rax,%rdi
    b84e:	e8 2b 0a 00 00       	call   c27e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    b853:	48 8b 18             	mov    (%rax),%rbx
    b856:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b85a:	48 89 c7             	mov    %rax,%rdi
    b85d:	e8 1c 0a 00 00       	call   c27e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    b862:	48 8b 00             	mov    (%rax),%rax
    b865:	48 39 c3             	cmp    %rax,%rbx
    b868:	0f 94 c0             	sete   %al
    b86b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b86f:	c9                   	leave
    b870:	c3                   	ret

000000000000b871 <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    b871:	55                   	push   %rbp
    b872:	48 89 e5             	mov    %rsp,%rbp
    b875:	53                   	push   %rbx
    b876:	48 83 ec 18          	sub    $0x18,%rsp
    b87a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b87e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    b882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b886:	48 89 c7             	mov    %rax,%rdi
    b889:	e8 1c 0a 00 00       	call   c2aa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    b88e:	48 8b 18             	mov    (%rax),%rbx
    b891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b895:	48 89 c7             	mov    %rax,%rdi
    b898:	e8 0d 0a 00 00       	call   c2aa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    b89d:	48 8b 00             	mov    (%rax),%rax
    b8a0:	48 39 c3             	cmp    %rax,%rbx
    b8a3:	0f 94 c0             	sete   %al
    b8a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b8aa:	c9                   	leave
    b8ab:	c3                   	ret

000000000000b8ac <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b8ac:	55                   	push   %rbp
    b8ad:	48 89 e5             	mov    %rsp,%rbp
    b8b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8b4:	90                   	nop
    b8b5:	5d                   	pop    %rbp
    b8b6:	c3                   	ret
    b8b7:	90                   	nop

000000000000b8b8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    b8b8:	55                   	push   %rbp
    b8b9:	48 89 e5             	mov    %rsp,%rbp
    b8bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8c0:	90                   	nop
    b8c1:	5d                   	pop    %rbp
    b8c2:	c3                   	ret

000000000000b8c3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    b8c3:	55                   	push   %rbp
    b8c4:	48 89 e5             	mov    %rsp,%rbp
    b8c7:	53                   	push   %rbx
    b8c8:	48 83 ec 28          	sub    $0x28,%rsp
    b8cc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    b8d0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    b8d4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    b8d8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b8dc:	48 89 d6             	mov    %rdx,%rsi
    b8df:	48 89 c7             	mov    %rax,%rdi
    b8e2:	e8 ab 23 00 00       	call   dc92 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    b8e7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b8eb:	48 89 c7             	mov    %rax,%rdi
    b8ee:	e8 5c 23 00 00       	call   dc4f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    b8f3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    b8f7:	0f 92 c3             	setb   %bl
    b8fa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    b8fe:	48 89 c7             	mov    %rax,%rdi
    b901:	e8 44 de ff ff       	call   974a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    b906:	84 db                	test   %bl,%bl
    b908:	74 0f                	je     b919 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    b90a:	48 8d 05 47 9d 00 00 	lea    0x9d47(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    b911:	48 89 c7             	mov    %rax,%rdi
    b914:	e8 37 78 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    b919:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    b91d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b921:	c9                   	leave
    b922:	c3                   	ret
    b923:	90                   	nop

000000000000b924 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    b924:	55                   	push   %rbp
    b925:	48 89 e5             	mov    %rsp,%rbp
    b928:	48 83 ec 10          	sub    $0x10,%rsp
    b92c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b930:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b934:	48 89 c7             	mov    %rax,%rdi
    b937:	e8 0e de ff ff       	call   974a <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    b93c:	90                   	nop
    b93d:	c9                   	leave
    b93e:	c3                   	ret
    b93f:	90                   	nop

000000000000b940 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    b940:	55                   	push   %rbp
    b941:	48 89 e5             	mov    %rsp,%rbp
    b944:	53                   	push   %rbx
    b945:	48 83 ec 28          	sub    $0x28,%rsp
    b949:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b94d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    b951:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    b955:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b959:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    b95d:	48 89 d6             	mov    %rdx,%rsi
    b960:	48 89 c7             	mov    %rax,%rdi
    b963:	e8 50 23 00 00       	call   dcb8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    b968:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    b96c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b970:	48 89 d6             	mov    %rdx,%rsi
    b973:	48 89 c7             	mov    %rax,%rdi
    b976:	e8 6f 23 00 00       	call   dcea <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    b97b:	eb 1a                	jmp    b997 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    b97d:	48 89 c3             	mov    %rax,%rbx
    b980:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b984:	48 89 c7             	mov    %rax,%rdi
    b987:	e8 98 ff ff ff       	call   b924 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    b98c:	48 89 d8             	mov    %rbx,%rax
    b98f:	48 89 c7             	mov    %rax,%rdi
    b992:	e8 19 7d ff ff       	call   36b0 <_Unwind_Resume@plt>
    b997:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b99b:	c9                   	leave
    b99c:	c3                   	ret
    b99d:	90                   	nop

000000000000b99e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    b99e:	55                   	push   %rbp
    b99f:	48 89 e5             	mov    %rsp,%rbp
    b9a2:	48 83 ec 10          	sub    $0x10,%rsp
    b9a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    b9aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ae:	48 8b 50 10          	mov    0x10(%rax),%rdx
    b9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9b6:	48 8b 00             	mov    (%rax),%rax
    b9b9:	48 29 c2             	sub    %rax,%rdx
    b9bc:	48 89 d0             	mov    %rdx,%rax
    b9bf:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    b9c3:	48 89 c2             	mov    %rax,%rdx
    b9c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9ca:	48 8b 08             	mov    (%rax),%rcx
    b9cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9d1:	48 89 ce             	mov    %rcx,%rsi
    b9d4:	48 89 c7             	mov    %rax,%rdi
    b9d7:	e8 64 23 00 00       	call   dd40 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    b9dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9e0:	48 89 c7             	mov    %rax,%rdi
    b9e3:	e8 3c ff ff ff       	call   b924 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    b9e8:	90                   	nop
    b9e9:	c9                   	leave
    b9ea:	c3                   	ret
    b9eb:	90                   	nop

000000000000b9ec <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    b9ec:	55                   	push   %rbp
    b9ed:	48 89 e5             	mov    %rsp,%rbp
    b9f0:	48 83 ec 10          	sub    $0x10,%rsp
    b9f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    b9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba00:	48 89 c7             	mov    %rax,%rdi
    ba03:	e8 24 00 00 00       	call   ba2c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ba08:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ba0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0f:	48 8b 00             	mov    (%rax),%rax
    ba12:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ba16:	48 89 ce             	mov    %rcx,%rsi
    ba19:	48 89 c7             	mov    %rax,%rdi
    ba1c:	e8 54 23 00 00       	call   dd75 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ba21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ba25:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ba29:	90                   	nop
    ba2a:	c9                   	leave
    ba2b:	c3                   	ret

000000000000ba2c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ba2c:	55                   	push   %rbp
    ba2d:	48 89 e5             	mov    %rsp,%rbp
    ba30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ba34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba38:	5d                   	pop    %rbp
    ba39:	c3                   	ret

000000000000ba3a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ba3a:	55                   	push   %rbp
    ba3b:	48 89 e5             	mov    %rsp,%rbp
    ba3e:	48 83 ec 20          	sub    $0x20,%rsp
    ba42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ba4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba56:	48 89 d6             	mov    %rdx,%rsi
    ba59:	48 89 c7             	mov    %rax,%rdi
    ba5c:	e8 3d 23 00 00       	call   dd9e <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    ba61:	90                   	nop
    ba62:	c9                   	leave
    ba63:	c3                   	ret

000000000000ba64 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ba64:	55                   	push   %rbp
    ba65:	48 89 e5             	mov    %rsp,%rbp
    ba68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ba70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba74:	5d                   	pop    %rbp
    ba75:	c3                   	ret

000000000000ba76 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ba76:	55                   	push   %rbp
    ba77:	48 89 e5             	mov    %rsp,%rbp
    ba7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ba82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ba86:	48 8b 10             	mov    (%rax),%rdx
    ba89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba8d:	48 89 10             	mov    %rdx,(%rax)
    ba90:	90                   	nop
    ba91:	5d                   	pop    %rbp
    ba92:	c3                   	ret
    ba93:	90                   	nop

000000000000ba94 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ba94:	55                   	push   %rbp
    ba95:	48 89 e5             	mov    %rsp,%rbp
    ba98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ba9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baa0:	5d                   	pop    %rbp
    baa1:	c3                   	ret

000000000000baa2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    baa2:	55                   	push   %rbp
    baa3:	48 89 e5             	mov    %rsp,%rbp
    baa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baaa:	90                   	nop
    baab:	5d                   	pop    %rbp
    baac:	c3                   	ret
    baad:	90                   	nop

000000000000baae <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    baae:	55                   	push   %rbp
    baaf:	48 89 e5             	mov    %rsp,%rbp
    bab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bab6:	90                   	nop
    bab7:	5d                   	pop    %rbp
    bab8:	c3                   	ret

000000000000bab9 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    bab9:	55                   	push   %rbp
    baba:	48 89 e5             	mov    %rsp,%rbp
    babd:	53                   	push   %rbx
    babe:	48 83 ec 28          	sub    $0x28,%rsp
    bac2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    bac6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    baca:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    bace:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bad2:	48 89 d6             	mov    %rdx,%rsi
    bad5:	48 89 c7             	mov    %rax,%rdi
    bad8:	e8 29 23 00 00       	call   de06 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    badd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    bae1:	48 89 c7             	mov    %rax,%rdi
    bae4:	e8 db 22 00 00       	call   ddc4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    bae9:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    baed:	0f 92 c3             	setb   %bl
    baf0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    baf4:	48 89 c7             	mov    %rax,%rdi
    baf7:	e8 20 de ff ff       	call   991c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    bafc:	84 db                	test   %bl,%bl
    bafe:	74 0f                	je     bb0f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    bb00:	48 8d 05 51 9b 00 00 	lea    0x9b51(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    bb07:	48 89 c7             	mov    %rax,%rdi
    bb0a:	e8 41 76 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    bb0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    bb13:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb17:	c9                   	leave
    bb18:	c3                   	ret
    bb19:	90                   	nop

000000000000bb1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    bb1a:	55                   	push   %rbp
    bb1b:	48 89 e5             	mov    %rsp,%rbp
    bb1e:	48 83 ec 10          	sub    $0x10,%rsp
    bb22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb2a:	48 89 c7             	mov    %rax,%rdi
    bb2d:	e8 ea dd ff ff       	call   991c <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    bb32:	90                   	nop
    bb33:	c9                   	leave
    bb34:	c3                   	ret
    bb35:	90                   	nop

000000000000bb36 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    bb36:	55                   	push   %rbp
    bb37:	48 89 e5             	mov    %rsp,%rbp
    bb3a:	53                   	push   %rbx
    bb3b:	48 83 ec 28          	sub    $0x28,%rsp
    bb3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bb43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    bb47:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    bb4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb4f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bb53:	48 89 d6             	mov    %rdx,%rsi
    bb56:	48 89 c7             	mov    %rax,%rdi
    bb59:	e8 ce 22 00 00       	call   de2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    bb5e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bb62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb66:	48 89 d6             	mov    %rdx,%rsi
    bb69:	48 89 c7             	mov    %rax,%rdi
    bb6c:	e8 ed 22 00 00       	call   de5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    bb71:	eb 1a                	jmp    bb8d <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    bb73:	48 89 c3             	mov    %rax,%rbx
    bb76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bb7a:	48 89 c7             	mov    %rax,%rdi
    bb7d:	e8 98 ff ff ff       	call   bb1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    bb82:	48 89 d8             	mov    %rbx,%rax
    bb85:	48 89 c7             	mov    %rax,%rdi
    bb88:	e8 23 7b ff ff       	call   36b0 <_Unwind_Resume@plt>
    bb8d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bb91:	c9                   	leave
    bb92:	c3                   	ret
    bb93:	90                   	nop

000000000000bb94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    bb94:	55                   	push   %rbp
    bb95:	48 89 e5             	mov    %rsp,%rbp
    bb98:	48 83 ec 10          	sub    $0x10,%rsp
    bb9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    bba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bba4:	48 8b 50 10          	mov    0x10(%rax),%rdx
    bba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbac:	48 8b 00             	mov    (%rax),%rax
    bbaf:	48 29 c2             	sub    %rax,%rdx
    bbb2:	48 c1 fa 03          	sar    $0x3,%rdx
    bbb6:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    bbbd:	aa aa aa 
    bbc0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    bbc4:	48 89 c2             	mov    %rax,%rdx
    bbc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbcb:	48 8b 08             	mov    (%rax),%rcx
    bbce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbd2:	48 89 ce             	mov    %rcx,%rsi
    bbd5:	48 89 c7             	mov    %rax,%rdi
    bbd8:	e8 e1 22 00 00       	call   debe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    bbdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe1:	48 89 c7             	mov    %rax,%rdi
    bbe4:	e8 31 ff ff ff       	call   bb1a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    bbe9:	90                   	nop
    bbea:	c9                   	leave
    bbeb:	c3                   	ret

000000000000bbec <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    bbec:	55                   	push   %rbp
    bbed:	48 89 e5             	mov    %rsp,%rbp
    bbf0:	48 83 ec 10          	sub    $0x10,%rsp
    bbf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    bbfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc00:	48 89 c7             	mov    %rax,%rdi
    bc03:	e8 24 00 00 00       	call   bc2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    bc08:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    bc0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc0f:	48 8b 00             	mov    (%rax),%rax
    bc12:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bc16:	48 89 ce             	mov    %rcx,%rsi
    bc19:	48 89 c7             	mov    %rax,%rdi
    bc1c:	e8 d2 22 00 00       	call   def3 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    bc21:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bc25:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    bc29:	90                   	nop
    bc2a:	c9                   	leave
    bc2b:	c3                   	ret

000000000000bc2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    bc2c:	55                   	push   %rbp
    bc2d:	48 89 e5             	mov    %rsp,%rbp
    bc30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    bc34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc38:	5d                   	pop    %rbp
    bc39:	c3                   	ret

000000000000bc3a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    bc3a:	55                   	push   %rbp
    bc3b:	48 89 e5             	mov    %rsp,%rbp
    bc3e:	48 83 ec 20          	sub    $0x20,%rsp
    bc42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    bc4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bc52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc56:	48 89 d6             	mov    %rdx,%rsi
    bc59:	48 89 c7             	mov    %rax,%rdi
    bc5c:	e8 bb 22 00 00       	call   df1c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    bc61:	90                   	nop
    bc62:	c9                   	leave
    bc63:	c3                   	ret

000000000000bc64 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    bc64:	55                   	push   %rbp
    bc65:	48 89 e5             	mov    %rsp,%rbp
    bc68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    bc70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc74:	5d                   	pop    %rbp
    bc75:	c3                   	ret

000000000000bc76 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    bc76:	55                   	push   %rbp
    bc77:	48 89 e5             	mov    %rsp,%rbp
    bc7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc7e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    bc82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc86:	48 8b 10             	mov    (%rax),%rdx
    bc89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc8d:	48 89 10             	mov    %rdx,(%rax)
    bc90:	90                   	nop
    bc91:	5d                   	pop    %rbp
    bc92:	c3                   	ret
    bc93:	90                   	nop

000000000000bc94 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    bc94:	55                   	push   %rbp
    bc95:	48 89 e5             	mov    %rsp,%rbp
    bc98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    bc9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca0:	5d                   	pop    %rbp
    bca1:	c3                   	ret

000000000000bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    bca2:	55                   	push   %rbp
    bca3:	48 89 e5             	mov    %rsp,%rbp
    bca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    bcaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcae:	5d                   	pop    %rbp
    bcaf:	c3                   	ret

000000000000bcb0 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    bcb0:	55                   	push   %rbp
    bcb1:	48 89 e5             	mov    %rsp,%rbp
    bcb4:	53                   	push   %rbx
    bcb5:	48 83 ec 18          	sub    $0x18,%rsp
    bcb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bcbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    bcc1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    bcc5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bcc9:	48 89 c7             	mov    %rax,%rdi
    bccc:	e8 d1 ff ff ff       	call   bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    bcd1:	48 89 c6             	mov    %rax,%rsi
    bcd4:	48 89 df             	mov    %rbx,%rdi
    bcd7:	e8 66 22 00 00       	call   df42 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>
	}
    bcdc:	90                   	nop
    bcdd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bce1:	c9                   	leave
    bce2:	c3                   	ret
    bce3:	90                   	nop

000000000000bce4 <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>:
    bce4:	55                   	push   %rbp
    bce5:	48 89 e5             	mov    %rsp,%rbp
    bce8:	48 83 ec 10          	sub    $0x10,%rsp
    bcec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf4:	48 89 c7             	mov    %rax,%rdi
    bcf7:	e8 8c 22 00 00       	call   df88 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>
    bcfc:	90                   	nop
    bcfd:	c9                   	leave
    bcfe:	c3                   	ret
    bcff:	90                   	nop

000000000000bd00 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    bd00:	55                   	push   %rbp
    bd01:	48 89 e5             	mov    %rsp,%rbp
    bd04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    bd08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    bd13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd17:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bd1e:	00 
    bd1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd23:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    bd2a:	00 
	{ }
    bd2b:	90                   	nop
    bd2c:	5d                   	pop    %rbp
    bd2d:	c3                   	ret

000000000000bd2e <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>:
    bd2e:	55                   	push   %rbp
    bd2f:	48 89 e5             	mov    %rsp,%rbp
    bd32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd36:	90                   	nop
    bd37:	5d                   	pop    %rbp
    bd38:	c3                   	ret
    bd39:	90                   	nop

000000000000bd3a <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    bd3a:	55                   	push   %rbp
    bd3b:	48 89 e5             	mov    %rsp,%rbp
    bd3e:	48 83 ec 20          	sub    $0x20,%rsp
    bd42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd4a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    bd4e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bd53:	74 17                	je     bd6c <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    bd55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd59:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd5d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    bd61:	48 89 ce             	mov    %rcx,%rsi
    bd64:	48 89 c7             	mov    %rax,%rdi
    bd67:	e8 27 22 00 00       	call   df93 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>
      }
    bd6c:	90                   	nop
    bd6d:	c9                   	leave
    bd6e:	c3                   	ret
    bd6f:	90                   	nop

000000000000bd70 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    bd70:	55                   	push   %rbp
    bd71:	48 89 e5             	mov    %rsp,%rbp
    bd74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    bd78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd7c:	5d                   	pop    %rbp
    bd7d:	c3                   	ret

000000000000bd7e <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    bd7e:	55                   	push   %rbp
    bd7f:	48 89 e5             	mov    %rsp,%rbp
    bd82:	48 83 ec 20          	sub    $0x20,%rsp
    bd86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    bd92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd9a:	48 89 d6             	mov    %rdx,%rsi
    bd9d:	48 89 c7             	mov    %rax,%rdi
    bda0:	e8 1c 22 00 00       	call   dfc1 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>
    }
    bda5:	90                   	nop
    bda6:	c9                   	leave
    bda7:	c3                   	ret

000000000000bda8 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    bda8:	55                   	push   %rbp
    bda9:	48 89 e5             	mov    %rsp,%rbp
    bdac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    bdb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb4:	5d                   	pop    %rbp
    bdb5:	c3                   	ret

000000000000bdb6 <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bdb6:	55                   	push   %rbp
    bdb7:	48 89 e5             	mov    %rsp,%rbp
    bdba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdbe:	90                   	nop
    bdbf:	5d                   	pop    %rbp
    bdc0:	c3                   	ret
    bdc1:	90                   	nop

000000000000bdc2 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    bdc2:	55                   	push   %rbp
    bdc3:	48 89 e5             	mov    %rsp,%rbp
    bdc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdca:	90                   	nop
    bdcb:	5d                   	pop    %rbp
    bdcc:	c3                   	ret
    bdcd:	90                   	nop

000000000000bdce <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    bdce:	55                   	push   %rbp
    bdcf:	48 89 e5             	mov    %rsp,%rbp
    bdd2:	48 83 ec 10          	sub    $0x10,%rsp
    bdd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    bdde:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bde2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde6:	48 89 d6             	mov    %rdx,%rsi
    bde9:	48 89 c7             	mov    %rax,%rdi
    bdec:	e8 f7 21 00 00       	call   dfe8 <_ZNSt15__new_allocatorIjEC1ERKS0_>
    bdf1:	90                   	nop
    bdf2:	c9                   	leave
    bdf3:	c3                   	ret

000000000000bdf4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>:
      _Rb_tree(const _Compare& __comp,
    bdf4:	55                   	push   %rbp
    bdf5:	48 89 e5             	mov    %rsp,%rbp
    bdf8:	53                   	push   %rbx
    bdf9:	48 83 ec 38          	sub    $0x38,%rsp
    bdfd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    be01:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    be05:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_impl(__comp, _Node_allocator(__a)) { }
    be09:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    be0d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    be11:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be15:	48 89 d6             	mov    %rdx,%rsi
    be18:	48 89 c7             	mov    %rax,%rdi
    be1b:	e8 d8 21 00 00       	call   dff8 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>
    be20:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    be24:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    be28:	48 89 c6             	mov    %rax,%rsi
    be2b:	48 89 df             	mov    %rbx,%rdi
    be2e:	e8 e5 21 00 00       	call   e018 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>
    be33:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be37:	48 89 c7             	mov    %rax,%rdi
    be3a:	e8 e3 00 00 00       	call   bf22 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    be3f:	eb 1a                	jmp    be5b <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_+0x67>
    be41:	48 89 c3             	mov    %rax,%rbx
    be44:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    be48:	48 89 c7             	mov    %rax,%rdi
    be4b:	e8 d2 00 00 00       	call   bf22 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    be50:	48 89 d8             	mov    %rbx,%rax
    be53:	48 89 c7             	mov    %rax,%rdi
    be56:	e8 55 78 ff ff       	call   36b0 <_Unwind_Resume@plt>
    be5b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    be5f:	c9                   	leave
    be60:	c3                   	ret
    be61:	90                   	nop

000000000000be62 <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
    be62:	55                   	push   %rbp
    be63:	48 89 e5             	mov    %rsp,%rbp
    be66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be6e:	48 8b 00             	mov    (%rax),%rax
    be71:	5d                   	pop    %rbp
    be72:	c3                   	ret
    be73:	90                   	nop

000000000000be74 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
    be74:	55                   	push   %rbp
    be75:	48 89 e5             	mov    %rsp,%rbp
    be78:	53                   	push   %rbx
    be79:	48 83 ec 18          	sub    $0x18,%rsp
    be7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    be81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be85:	48 89 c7             	mov    %rax,%rdi
    be88:	e8 d5 ff ff ff       	call   be62 <_ZNKSt16initializer_listIjE5beginEv>
    be8d:	48 89 c3             	mov    %rax,%rbx
    be90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    be94:	48 89 c7             	mov    %rax,%rdi
    be97:	e8 d4 21 00 00       	call   e070 <_ZNKSt16initializer_listIjE4sizeEv>
    be9c:	48 c1 e0 02          	shl    $0x2,%rax
    bea0:	48 01 d8             	add    %rbx,%rax
    bea3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    bea7:	c9                   	leave
    bea8:	c3                   	ret
    bea9:	90                   	nop

000000000000beaa <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    beaa:	55                   	push   %rbp
    beab:	48 89 e5             	mov    %rsp,%rbp
    beae:	48 83 ec 40          	sub    $0x40,%rsp
    beb2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    beb6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    beba:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Alloc_node __an(*this);
    bebe:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    bec2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    bec6:	48 89 d6             	mov    %rdx,%rsi
    bec9:	48 89 c7             	mov    %rax,%rdi
    becc:	e8 b1 21 00 00       	call   e082 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>
	  for (; __first != __last; ++__first)
    bed1:	eb 40                	jmp    bf13 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x69>
	    _M_insert_unique_(end(), *__first, __an);
    bed3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bed7:	48 89 c7             	mov    %rax,%rdi
    beda:	e8 bd 21 00 00       	call   e09c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    bedf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bee3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    bee7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    beeb:	48 89 d6             	mov    %rdx,%rsi
    beee:	48 89 c7             	mov    %rax,%rdi
    bef1:	e8 d0 21 00 00       	call   e0c6 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>
    bef6:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    befa:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    befe:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    bf02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    bf06:	48 89 c7             	mov    %rax,%rdi
    bf09:	e8 d6 21 00 00       	call   e0e4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>
	  for (; __first != __last; ++__first)
    bf0e:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
    bf13:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    bf17:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    bf1b:	75 b6                	jne    bed3 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x29>
	}
    bf1d:	90                   	nop
    bf1e:	90                   	nop
    bf1f:	c9                   	leave
    bf20:	c3                   	ret
    bf21:	90                   	nop

000000000000bf22 <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    bf22:	55                   	push   %rbp
    bf23:	48 89 e5             	mov    %rsp,%rbp
    bf26:	48 83 ec 10          	sub    $0x10,%rsp
    bf2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf32:	48 89 c7             	mov    %rax,%rdi
    bf35:	e8 42 22 00 00       	call   e17c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>
    bf3a:	90                   	nop
    bf3b:	c9                   	leave
    bf3c:	c3                   	ret
    bf3d:	90                   	nop

000000000000bf3e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    bf3e:	55                   	push   %rbp
    bf3f:	48 89 e5             	mov    %rsp,%rbp
    bf42:	48 83 ec 20          	sub    $0x20,%rsp
    bf46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    bf4a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    bf4e:	eb 49                	jmp    bf99 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x5b>
	  _M_erase(_S_right(__x));
    bf50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf54:	48 89 c7             	mov    %rax,%rdi
    bf57:	e8 2b 22 00 00       	call   e187 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    bf5c:	48 89 c2             	mov    %rax,%rdx
    bf5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf63:	48 89 d6             	mov    %rdx,%rsi
    bf66:	48 89 c7             	mov    %rax,%rdi
    bf69:	e8 d0 ff ff ff       	call   bf3e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
	  _Link_type __y = _S_left(__x);
    bf6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    bf72:	48 89 c7             	mov    %rax,%rdi
    bf75:	e8 1f 22 00 00       	call   e199 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
    bf7a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    bf7e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    bf82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bf86:	48 89 d6             	mov    %rdx,%rsi
    bf89:	48 89 c7             	mov    %rax,%rdi
    bf8c:	e8 1b 22 00 00       	call   e1ac <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>
	  __x = __y;
    bf91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf95:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    bf99:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    bf9e:	75 b0                	jne    bf50 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x12>
    }
    bfa0:	90                   	nop
    bfa1:	90                   	nop
    bfa2:	c9                   	leave
    bfa3:	c3                   	ret

000000000000bfa4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    bfa4:	55                   	push   %rbp
    bfa5:	48 89 e5             	mov    %rsp,%rbp
    bfa8:	48 83 ec 10          	sub    $0x10,%rsp
    bfac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    bfb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfb4:	48 89 c7             	mov    %rax,%rdi
    bfb7:	e8 2a 22 00 00       	call   e1e6 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>
    bfbc:	c9                   	leave
    bfbd:	c3                   	ret

000000000000bfbe <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    bfbe:	55                   	push   %rbp
    bfbf:	48 89 e5             	mov    %rsp,%rbp
    bfc2:	48 83 ec 20          	sub    $0x20,%rsp
    bfc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
    bfca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bfce:	48 8b 50 18          	mov    0x18(%rax),%rdx
    bfd2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bfd6:	48 89 d6             	mov    %rdx,%rsi
    bfd9:	48 89 c7             	mov    %rax,%rdi
    bfdc:	e8 17 22 00 00       	call   e1f8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    bfe1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe5:	c9                   	leave
    bfe6:	c3                   	ret
    bfe7:	90                   	nop

000000000000bfe8 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    bfe8:	55                   	push   %rbp
    bfe9:	48 89 e5             	mov    %rsp,%rbp
    bfec:	48 83 ec 20          	sub    $0x20,%rsp
    bff0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(&this->_M_impl._M_header); }
    bff4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    bff8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    bffc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c000:	48 89 d6             	mov    %rdx,%rsi
    c003:	48 89 c7             	mov    %rax,%rdi
    c006:	e8 ed 21 00 00       	call   e1f8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    c00b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c00f:	c9                   	leave
    c010:	c3                   	ret
    c011:	90                   	nop

000000000000c012 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr() const
    c012:	55                   	push   %rbp
    c013:	48 89 e5             	mov    %rsp,%rbp
    c016:	48 83 ec 10          	sub    $0x10,%rsp
    c01a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    c01e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c022:	48 83 c0 20          	add    $0x20,%rax
    c026:	48 89 c7             	mov    %rax,%rdi
    c029:	e8 e4 21 00 00       	call   e212 <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
    c02e:	c9                   	leave
    c02f:	c3                   	ret

000000000000c030 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    c030:	55                   	push   %rbp
    c031:	48 89 e5             	mov    %rsp,%rbp
    c034:	48 83 ec 20          	sub    $0x20,%rsp
    c038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c03c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c040:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    c044:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c048:	48 89 c7             	mov    %rax,%rdi
    c04b:	e8 dc 21 00 00       	call   e22c <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    c050:	48 89 c2             	mov    %rax,%rdx
    c053:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c05b:	48 89 ce             	mov    %rcx,%rsi
    c05e:	48 89 c7             	mov    %rax,%rdi
    c061:	e8 d4 21 00 00       	call   e23a <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>
	}
    c066:	90                   	nop
    c067:	c9                   	leave
    c068:	c3                   	ret
    c069:	90                   	nop

000000000000c06a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c06a:	55                   	push   %rbp
    c06b:	48 89 e5             	mov    %rsp,%rbp
    c06e:	48 83 ec 20          	sub    $0x20,%rsp
    c072:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c07a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c07e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c082:	48 89 d6             	mov    %rdx,%rsi
    c085:	48 89 c7             	mov    %rax,%rdi
    c088:	e8 0f 22 00 00       	call   e29c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c08d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c091:	c9                   	leave
    c092:	c3                   	ret
    c093:	90                   	nop

000000000000c094 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
    c094:	55                   	push   %rbp
    c095:	48 89 e5             	mov    %rsp,%rbp
    c098:	53                   	push   %rbx
    c099:	48 83 ec 68          	sub    $0x68,%rsp
    c09d:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    c0a1:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    c0a5:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    c0a9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c0ad:	48 8d 15 ef 95 00 00 	lea    0x95ef(%rip),%rdx        # 156a3 <_ZN6__pstl9execution2v1L5unseqE+0x43c>
    c0b4:	be 01 00 00 00       	mov    $0x1,%esi
    c0b9:	48 89 c7             	mov    %rax,%rdi
    c0bc:	e8 f9 21 00 00       	call   e2ba <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>
    c0c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    c0c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c0c9:	48 8b 00             	mov    (%rax),%rax
    c0cc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    c0d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c0d4:	48 8b 40 08          	mov    0x8(%rax),%rax
    c0d8:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    c0dc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c0e0:	48 89 c7             	mov    %rax,%rdi
    c0e3:	e8 9a 22 00 00       	call   e382 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>
    c0e8:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    c0ec:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c0f0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    c0f4:	48 89 d6             	mov    %rdx,%rsi
    c0f7:	48 89 c7             	mov    %rax,%rdi
    c0fa:	e8 a8 22 00 00       	call   e3a7 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
    c0ff:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    c103:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c107:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c10b:	48 89 d6             	mov    %rdx,%rsi
    c10e:	48 89 c7             	mov    %rax,%rdi
    c111:	e8 de 22 00 00       	call   e3f4 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>
    c116:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    c11a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c11e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    c122:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    c126:	48 89 c7             	mov    %rax,%rdi
    c129:	e8 fe 20 00 00       	call   e22c <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    c12e:	48 89 c6             	mov    %rax,%rsi
				   __new_start + __elems_before,
    c131:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c135:	48 89 d0             	mov    %rdx,%rax
    c138:	48 c1 e0 02          	shl    $0x2,%rax
    c13c:	48 01 d0             	add    %rdx,%rax
    c13f:	48 c1 e0 03          	shl    $0x3,%rax
    c143:	48 89 c2             	mov    %rax,%rdx
	  _Alloc_traits::construct(this->_M_impl,
    c146:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c14a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c14e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c152:	48 89 f2             	mov    %rsi,%rdx
    c155:	48 89 ce             	mov    %rcx,%rsi
    c158:	48 89 c7             	mov    %rax,%rdi
    c15b:	e8 d0 fe ff ff       	call   c030 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
    c160:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    c167:	00 
					 __new_start, _M_get_Tp_allocator());
    c168:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c16c:	48 89 c7             	mov    %rax,%rdi
    c16f:	e8 fc fb ff ff       	call   bd70 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    c174:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    c177:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    c17b:	48 89 c7             	mov    %rax,%rdi
    c17e:	e8 d7 22 00 00       	call   e45a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    c183:	48 8b 30             	mov    (%rax),%rsi
    c186:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c18a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c18e:	48 89 d9             	mov    %rbx,%rcx
    c191:	48 89 c7             	mov    %rax,%rdi
    c194:	e8 8e 22 00 00       	call   e427 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    c199:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    c19d:	48 83 45 c0 28       	addq   $0x28,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    c1a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c1a6:	48 89 c7             	mov    %rax,%rdi
    c1a9:	e8 c2 fb ff ff       	call   bd70 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    c1ae:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    c1b1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    c1b5:	48 89 c7             	mov    %rax,%rdi
    c1b8:	e8 9d 22 00 00       	call   e45a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    c1bd:	48 8b 00             	mov    (%rax),%rax
    c1c0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c1c4:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    c1c8:	48 89 d9             	mov    %rbx,%rcx
    c1cb:	48 89 c7             	mov    %rax,%rdi
    c1ce:	e8 54 22 00 00       	call   e427 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    c1d3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    c1d7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    c1db:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    c1df:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    c1e3:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    c1e7:	48 89 d1             	mov    %rdx,%rcx
    c1ea:	48 c1 f9 03          	sar    $0x3,%rcx
    c1ee:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
    c1f5:	cc cc cc 
    c1f8:	48 0f af d1          	imul   %rcx,%rdx
      _M_deallocate(__old_start,
    c1fc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c200:	48 89 ce             	mov    %rcx,%rsi
    c203:	48 89 c7             	mov    %rax,%rdi
    c206:	e8 2f fb ff ff       	call   bd3a <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      this->_M_impl._M_start = __new_start;
    c20b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c20f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c213:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    c216:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c21a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c21e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    c222:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c226:	48 89 d0             	mov    %rdx,%rax
    c229:	48 c1 e0 02          	shl    $0x2,%rax
    c22d:	48 01 d0             	add    %rdx,%rax
    c230:	48 c1 e0 03          	shl    $0x3,%rax
    c234:	48 89 c2             	mov    %rax,%rdx
    c237:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c23b:	48 01 c2             	add    %rax,%rdx
    c23e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c242:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    c246:	90                   	nop
    c247:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c24b:	c9                   	leave
    c24c:	c3                   	ret
    c24d:	90                   	nop

000000000000c24e <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c24e:	55                   	push   %rbp
    c24f:	48 89 e5             	mov    %rsp,%rbp
    c252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c256:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c25a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c25e:	5d                   	pop    %rbp
    c25f:	c3                   	ret

000000000000c260 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c260:	55                   	push   %rbp
    c261:	48 89 e5             	mov    %rsp,%rbp
    c264:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c268:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c26c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c270:	48 8b 10             	mov    (%rax),%rdx
    c273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c277:	48 89 10             	mov    %rdx,(%rax)
    c27a:	90                   	nop
    c27b:	5d                   	pop    %rbp
    c27c:	c3                   	ret
    c27d:	90                   	nop

000000000000c27e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c27e:	55                   	push   %rbp
    c27f:	48 89 e5             	mov    %rsp,%rbp
    c282:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c28a:	5d                   	pop    %rbp
    c28b:	c3                   	ret

000000000000c28c <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    c28c:	55                   	push   %rbp
    c28d:	48 89 e5             	mov    %rsp,%rbp
    c290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c294:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    c298:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c29c:	48 8b 10             	mov    (%rax),%rdx
    c29f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a3:	48 89 10             	mov    %rdx,(%rax)
    c2a6:	90                   	nop
    c2a7:	5d                   	pop    %rbp
    c2a8:	c3                   	ret
    c2a9:	90                   	nop

000000000000c2aa <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    c2aa:	55                   	push   %rbp
    c2ab:	48 89 e5             	mov    %rsp,%rbp
    c2ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    c2b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2b6:	5d                   	pop    %rbp
    c2b7:	c3                   	ret

000000000000c2b8 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    c2b8:	55                   	push   %rbp
    c2b9:	48 89 e5             	mov    %rsp,%rbp
    c2bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    c2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2c8:	8b 10                	mov    (%rax),%edx
    c2ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2ce:	8b 00                	mov    (%rax),%eax
    c2d0:	39 c2                	cmp    %eax,%edx
    c2d2:	73 06                	jae    c2da <_ZSt3maxIjERKT_S2_S2_+0x22>
	return __b;
    c2d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2d8:	eb 04                	jmp    c2de <_ZSt3maxIjERKT_S2_S2_+0x26>
      return __a;
    c2da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c2de:	5d                   	pop    %rbp
    c2df:	c3                   	ret

000000000000c2e0 <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    c2e0:	55                   	push   %rbp
    c2e1:	48 89 e5             	mov    %rsp,%rbp
    c2e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    c2ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c2f0:	8b 10                	mov    (%rax),%edx
    c2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f6:	8b 00                	mov    (%rax),%eax
    c2f8:	39 c2                	cmp    %eax,%edx
    c2fa:	73 06                	jae    c302 <_ZSt3minIjERKT_S2_S2_+0x22>
	return __b;
    c2fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c300:	eb 04                	jmp    c306 <_ZSt3minIjERKT_S2_S2_+0x26>
      return __a;
    c302:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c306:	5d                   	pop    %rbp
    c307:	c3                   	ret

000000000000c308 <_ZNKSt8optionalIjEcvbEv>:
      constexpr explicit operator bool() const noexcept
    c308:	55                   	push   %rbp
    c309:	48 89 e5             	mov    %rsp,%rbp
    c30c:	48 83 ec 10          	sub    $0x10,%rsp
    c310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    c314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c318:	48 89 c7             	mov    %rax,%rdi
    c31b:	e8 78 c7 ff ff       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    c320:	c9                   	leave
    c321:	c3                   	ret

000000000000c322 <_ZNKRSt8optionalIjEdeEv>:
      operator*() const& noexcept
    c322:	55                   	push   %rbp
    c323:	48 89 e5             	mov    %rsp,%rbp
    c326:	48 83 ec 10          	sub    $0x10,%rsp
    c32a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_get(); }
    c32e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c332:	48 89 c7             	mov    %rax,%rdi
    c335:	e8 2e 21 00 00       	call   e468 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    c33a:	c9                   	leave
    c33b:	c3                   	ret

000000000000c33c <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    c33c:	55                   	push   %rbp
    c33d:	48 89 e5             	mov    %rsp,%rbp
    c340:	53                   	push   %rbx
    c341:	48 83 ec 38          	sub    $0x38,%rsp
    c345:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c349:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    c34d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    c352:	0f 84 e7 01 00 00    	je     c53f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    c358:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c35c:	48 89 c7             	mov    %rax,%rdi
    c35f:	e8 d2 de ff ff       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    c364:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    c368:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c36c:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    c370:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c374:	48 8b 40 08          	mov    0x8(%rax),%rax
    c378:	48 29 c2             	sub    %rax,%rdx
    c37b:	48 89 d0             	mov    %rdx,%rax
    c37e:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    c382:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    c386:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c38a:	48 89 c7             	mov    %rax,%rdi
    c38d:	e8 1a 21 00 00       	call   e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    c392:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c396:	72 16                	jb     c3ae <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x72>
    c398:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c39c:	48 89 c7             	mov    %rax,%rdi
    c39f:	e8 08 21 00 00       	call   e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    c3a4:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    c3a8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c3ac:	73 07                	jae    c3b5 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x79>
    c3ae:	b8 01 00 00 00       	mov    $0x1,%eax
    c3b3:	eb 05                	jmp    c3ba <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7e>
    c3b5:	b8 00 00 00 00       	mov    $0x0,%eax
    c3ba:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    c3bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c3c0:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    c3c4:	72 33                	jb     c3f9 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    c3c6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c3ca:	48 89 c7             	mov    %rax,%rdi
    c3cd:	e8 1a 7f ff ff       	call   42ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c3d2:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    c3d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c3d9:	48 8b 40 08          	mov    0x8(%rax),%rax
    c3dd:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    c3e1:	48 89 ce             	mov    %rcx,%rsi
    c3e4:	48 89 c7             	mov    %rax,%rdi
    c3e7:	e8 e2 20 00 00       	call   e4ce <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    c3ec:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c3f0:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    c3f4:	e9 46 01 00 00       	jmp    c53f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    c3f9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    c3fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c401:	48 8d 15 81 92 00 00 	lea    0x9281(%rip),%rdx        # 15689 <_ZN6__pstl9execution2v1L5unseqE+0x422>
    c408:	48 89 ce             	mov    %rcx,%rsi
    c40b:	48 89 c7             	mov    %rax,%rdi
    c40e:	e8 e5 20 00 00       	call   e4f8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>
    c413:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    c417:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c41b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c41f:	48 89 d6             	mov    %rdx,%rsi
    c422:	48 89 c7             	mov    %rax,%rdi
    c425:	e8 96 21 00 00       	call   e5c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    c42a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    c42e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c432:	48 89 c7             	mov    %rax,%rdi
    c435:	e8 b2 7e ff ff       	call   42ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c43a:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    c43d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c441:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    c448:	00 
    c449:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c44d:	48 01 c1             	add    %rax,%rcx
    c450:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c454:	48 89 c6             	mov    %rax,%rsi
    c457:	48 89 cf             	mov    %rcx,%rdi
    c45a:	e8 6f 20 00 00       	call   e4ce <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    c45f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c463:	48 89 c7             	mov    %rax,%rdi
    c466:	e8 81 7e ff ff       	call   42ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c46b:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    c46e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c472:	48 8b 70 08          	mov    0x8(%rax),%rsi
    c476:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c47a:	48 8b 00             	mov    (%rax),%rax
    c47d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c481:	48 89 c7             	mov    %rax,%rdi
    c484:	e8 6a 21 00 00       	call   e5f3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    c489:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    c48d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c491:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    c495:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c499:	48 8b 12             	mov    (%rdx),%rdx
    c49c:	48 29 d1             	sub    %rdx,%rcx
    c49f:	48 c1 f9 03          	sar    $0x3,%rcx
    c4a3:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    c4a6:	48 89 d6             	mov    %rdx,%rsi
    c4a9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c4ad:	48 8b 0a             	mov    (%rdx),%rcx
    c4b0:	48 89 f2             	mov    %rsi,%rdx
    c4b3:	48 89 ce             	mov    %rcx,%rsi
    c4b6:	48 89 c7             	mov    %rax,%rdi
    c4b9:	e8 f8 7d ff ff       	call   42b6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    c4be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c4c2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c4c6:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    c4c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4cd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c4d1:	48 01 d0             	add    %rdx,%rax
    c4d4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c4db:	00 
    c4dc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c4e0:	48 01 c2             	add    %rax,%rdx
    c4e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c4e7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    c4eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4ef:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c4f6:	00 
    c4f7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c4fb:	48 01 c2             	add    %rax,%rdx
    c4fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c502:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    c506:	eb 37                	jmp    c53f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    c508:	48 89 c7             	mov    %rax,%rdi
    c50b:	e8 e0 6b ff ff       	call   30f0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    c510:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c514:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c518:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c51c:	48 89 ce             	mov    %rcx,%rsi
    c51f:	48 89 c7             	mov    %rax,%rdi
    c522:	e8 8f 7d ff ff       	call   42b6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    c527:	e8 84 70 ff ff       	call   35b0 <__cxa_rethrow@plt>
		  __catch(...)
    c52c:	48 89 c3             	mov    %rax,%rbx
    c52f:	e8 2c 71 ff ff       	call   3660 <__cxa_end_catch@plt>
    c534:	48 89 d8             	mov    %rbx,%rax
    c537:	48 89 c7             	mov    %rax,%rdi
    c53a:	e8 71 71 ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    c53f:	90                   	nop
    c540:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c544:	c9                   	leave
    c545:	c3                   	ret

000000000000c546 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    c546:	55                   	push   %rbp
    c547:	48 89 e5             	mov    %rsp,%rbp
    c54a:	48 83 ec 20          	sub    $0x20,%rsp
    c54e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c552:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    c556:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c55a:	48 8b 40 08          	mov    0x8(%rax),%rax
    c55e:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    c562:	48 c1 f8 03          	sar    $0x3,%rax
    c566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c56a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c56f:	74 32                	je     c5a3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    c571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c575:	48 89 c7             	mov    %rax,%rdi
    c578:	e8 6f 7d ff ff       	call   42ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c57d:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    c580:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c584:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c588:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c58c:	48 89 ce             	mov    %rcx,%rsi
    c58f:	48 89 c7             	mov    %rax,%rdi
    c592:	e8 63 7d ff ff       	call   42fa <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    c597:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c59b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c59f:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    c5a3:	90                   	nop
    c5a4:	c9                   	leave
    c5a5:	c3                   	ret

000000000000c5a6 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c5a6:	55                   	push   %rbp
    c5a7:	48 89 e5             	mov    %rsp,%rbp
    c5aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c5b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c5b6:	5d                   	pop    %rbp
    c5b7:	c3                   	ret

000000000000c5b8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    c5b8:	55                   	push   %rbp
    c5b9:	48 89 e5             	mov    %rsp,%rbp
    c5bc:	53                   	push   %rbx
    c5bd:	48 83 ec 38          	sub    $0x38,%rsp
    c5c1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    c5c5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    c5c9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    c5ce:	0f 84 e7 01 00 00    	je     c7bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    c5d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c5d8:	48 89 c7             	mov    %rax,%rdi
    c5db:	e8 34 e0 ff ff       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    c5e0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    c5e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c5e8:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    c5ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c5f0:	48 8b 40 08          	mov    0x8(%rax),%rax
    c5f4:	48 29 c2             	sub    %rax,%rdx
    c5f7:	48 89 d0             	mov    %rdx,%rax
    c5fa:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    c5fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    c602:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c606:	48 89 c7             	mov    %rax,%rdi
    c609:	e8 18 20 00 00       	call   e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    c60e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    c612:	72 16                	jb     c62a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
    c614:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c618:	48 89 c7             	mov    %rax,%rdi
    c61b:	e8 06 20 00 00       	call   e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    c620:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    c624:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c628:	73 07                	jae    c631 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
    c62a:	b8 01 00 00 00       	mov    $0x1,%eax
    c62f:	eb 05                	jmp    c636 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
    c631:	b8 00 00 00 00       	mov    $0x0,%eax
    c636:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    c638:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c63c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    c640:	72 33                	jb     c675 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    c642:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c646:	48 89 c7             	mov    %rax,%rdi
    c649:	e8 62 7d ff ff       	call   43b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c64e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    c651:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c655:	48 8b 40 08          	mov    0x8(%rax),%rax
    c659:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    c65d:	48 89 ce             	mov    %rcx,%rsi
    c660:	48 89 c7             	mov    %rax,%rdi
    c663:	e8 e0 1f 00 00       	call   e648 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    c668:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c66c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    c670:	e9 46 01 00 00       	jmp    c7bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    c675:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    c679:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c67d:	48 8d 15 05 90 00 00 	lea    0x9005(%rip),%rdx        # 15689 <_ZN6__pstl9execution2v1L5unseqE+0x422>
    c684:	48 89 ce             	mov    %rcx,%rsi
    c687:	48 89 c7             	mov    %rax,%rdi
    c68a:	e8 e3 1f 00 00       	call   e672 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
    c68f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    c693:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c697:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c69b:	48 89 d6             	mov    %rdx,%rsi
    c69e:	48 89 c7             	mov    %rax,%rdi
    c6a1:	e8 94 20 00 00       	call   e73a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
    c6a6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    c6aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c6ae:	48 89 c7             	mov    %rax,%rdi
    c6b1:	e8 fa 7c ff ff       	call   43b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c6b6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    c6b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c6bd:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    c6c4:	00 
    c6c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c6c9:	48 01 c1             	add    %rax,%rcx
    c6cc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c6d0:	48 89 c6             	mov    %rax,%rsi
    c6d3:	48 89 cf             	mov    %rcx,%rdi
    c6d6:	e8 6d 1f 00 00       	call   e648 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    c6db:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c6df:	48 89 c7             	mov    %rax,%rdi
    c6e2:	e8 c9 7c ff ff       	call   43b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c6e7:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    c6ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c6ee:	48 8b 70 08          	mov    0x8(%rax),%rsi
    c6f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c6f6:	48 8b 00             	mov    (%rax),%rax
    c6f9:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c6fd:	48 89 c7             	mov    %rax,%rdi
    c700:	e8 68 20 00 00       	call   e76d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    c705:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    c709:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c70d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    c711:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c715:	48 8b 12             	mov    (%rdx),%rdx
    c718:	48 29 d1             	sub    %rdx,%rcx
    c71b:	48 c1 f9 03          	sar    $0x3,%rcx
    c71f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    c722:	48 89 d6             	mov    %rdx,%rsi
    c725:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c729:	48 8b 0a             	mov    (%rdx),%rcx
    c72c:	48 89 f2             	mov    %rsi,%rdx
    c72f:	48 89 ce             	mov    %rcx,%rsi
    c732:	48 89 c7             	mov    %rax,%rdi
    c735:	e8 40 7c ff ff       	call   437a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    c73a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c73e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c742:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    c745:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c749:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    c74d:	48 01 d0             	add    %rdx,%rax
    c750:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c757:	00 
    c758:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c75c:	48 01 c2             	add    %rax,%rdx
    c75f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c763:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    c767:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c76b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c772:	00 
    c773:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c777:	48 01 c2             	add    %rax,%rdx
    c77a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c77e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    c782:	eb 37                	jmp    c7bb <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    c784:	48 89 c7             	mov    %rax,%rdi
    c787:	e8 64 69 ff ff       	call   30f0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    c78c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c790:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c794:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c798:	48 89 ce             	mov    %rcx,%rsi
    c79b:	48 89 c7             	mov    %rax,%rdi
    c79e:	e8 d7 7b ff ff       	call   437a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    c7a3:	e8 08 6e ff ff       	call   35b0 <__cxa_rethrow@plt>
		  __catch(...)
    c7a8:	48 89 c3             	mov    %rax,%rbx
    c7ab:	e8 b0 6e ff ff       	call   3660 <__cxa_end_catch@plt>
    c7b0:	48 89 d8             	mov    %rbx,%rax
    c7b3:	48 89 c7             	mov    %rax,%rdi
    c7b6:	e8 f5 6e ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    c7bb:	90                   	nop
    c7bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7c0:	c9                   	leave
    c7c1:	c3                   	ret

000000000000c7c2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    c7c2:	55                   	push   %rbp
    c7c3:	48 89 e5             	mov    %rsp,%rbp
    c7c6:	48 83 ec 20          	sub    $0x20,%rsp
    c7ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c7ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    c7d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7d6:	48 8b 40 08          	mov    0x8(%rax),%rax
    c7da:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    c7de:	48 c1 f8 03          	sar    $0x3,%rax
    c7e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    c7e6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c7eb:	74 32                	je     c81f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    c7ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7f1:	48 89 c7             	mov    %rax,%rdi
    c7f4:	e8 b7 7b ff ff       	call   43b0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c7f9:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    c7fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c800:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c808:	48 89 ce             	mov    %rcx,%rsi
    c80b:	48 89 c7             	mov    %rax,%rdi
    c80e:	e8 ab 7b ff ff       	call   43be <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    c813:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c817:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c81b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    c81f:	90                   	nop
    c820:	c9                   	leave
    c821:	c3                   	ret

000000000000c822 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    c822:	55                   	push   %rbp
    c823:	48 89 e5             	mov    %rsp,%rbp
    c826:	53                   	push   %rbx
    c827:	48 83 ec 28          	sub    $0x28,%rsp
    c82b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c82f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    c833:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c837:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c83b:	48 89 d6             	mov    %rdx,%rsi
    c83e:	48 89 c7             	mov    %rax,%rdi
    c841:	e8 3a 69 ff ff       	call   3180 <_ZNSaIcEC1ERKS_@plt>
    c846:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c84a:	48 89 c7             	mov    %rax,%rdi
    c84d:	e8 4d 1f 00 00       	call   e79f <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    c852:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c856:	0f 92 c3             	setb   %bl
    c859:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    c85d:	48 89 c7             	mov    %rax,%rdi
    c860:	e8 7b 6b ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
    c865:	84 db                	test   %bl,%bl
    c867:	74 0f                	je     c878 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    c869:	48 8d 05 e8 8d 00 00 	lea    0x8de8(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    c870:	48 89 c7             	mov    %rax,%rdi
    c873:	e8 d8 68 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    c878:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    c87c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c880:	c9                   	leave
    c881:	c3                   	ret

000000000000c882 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    c882:	55                   	push   %rbp
    c883:	48 89 e5             	mov    %rsp,%rbp
    c886:	53                   	push   %rbx
    c887:	48 83 ec 28          	sub    $0x28,%rsp
    c88b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c88f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c893:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    c897:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c89b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c89f:	48 89 d6             	mov    %rdx,%rsi
    c8a2:	48 89 c7             	mov    %rax,%rdi
    c8a5:	e8 38 1f 00 00       	call   e7e2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    c8aa:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c8ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8b2:	48 89 d6             	mov    %rdx,%rsi
    c8b5:	48 89 c7             	mov    %rax,%rdi
    c8b8:	e8 57 1f 00 00       	call   e814 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    c8bd:	eb 1a                	jmp    c8d9 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    c8bf:	48 89 c3             	mov    %rax,%rbx
    c8c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8c6:	48 89 c7             	mov    %rax,%rdi
    c8c9:	e8 f8 c1 ff ff       	call   8ac6 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    c8ce:	48 89 d8             	mov    %rbx,%rax
    c8d1:	48 89 c7             	mov    %rax,%rdi
    c8d4:	e8 d7 6d ff ff       	call   36b0 <_Unwind_Resume@plt>
    c8d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c8dd:	c9                   	leave
    c8de:	c3                   	ret
    c8df:	90                   	nop

000000000000c8e0 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    c8e0:	55                   	push   %rbp
    c8e1:	48 89 e5             	mov    %rsp,%rbp
    c8e4:	48 83 ec 10          	sub    $0x10,%rsp
    c8e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    c8f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8f4:	48 89 c7             	mov    %rax,%rdi
    c8f7:	e8 24 00 00 00       	call   c920 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    c8fc:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    c8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c903:	48 8b 00             	mov    (%rax),%rax
    c906:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c90a:	48 89 ce             	mov    %rcx,%rsi
    c90d:	48 89 c7             	mov    %rax,%rdi
    c910:	e8 51 1f 00 00       	call   e866 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    c915:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c919:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    c91d:	90                   	nop
    c91e:	c9                   	leave
    c91f:	c3                   	ret

000000000000c920 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    c920:	55                   	push   %rbp
    c921:	48 89 e5             	mov    %rsp,%rbp
    c924:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    c928:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c92c:	5d                   	pop    %rbp
    c92d:	c3                   	ret

000000000000c92e <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    c92e:	55                   	push   %rbp
    c92f:	48 89 e5             	mov    %rsp,%rbp
    c932:	48 83 ec 20          	sub    $0x20,%rsp
    c936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c93a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c93e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    c942:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c946:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c94a:	48 89 d6             	mov    %rdx,%rsi
    c94d:	48 89 c7             	mov    %rax,%rdi
    c950:	e8 3a 1f 00 00       	call   e88f <_ZSt8_DestroyIPcEvT_S1_>
    }
    c955:	90                   	nop
    c956:	c9                   	leave
    c957:	c3                   	ret

000000000000c958 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    c958:	55                   	push   %rbp
    c959:	48 89 e5             	mov    %rsp,%rbp
    c95c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c960:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    c964:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c968:	5d                   	pop    %rbp
    c969:	c3                   	ret

000000000000c96a <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    c96a:	55                   	push   %rbp
    c96b:	48 89 e5             	mov    %rsp,%rbp
    c96e:	48 83 ec 20          	sub    $0x20,%rsp
    c972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c976:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c97a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    c97e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c983:	74 17                	je     c99c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    c985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c989:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c98d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c991:	48 89 ce             	mov    %rcx,%rsi
    c994:	48 89 c7             	mov    %rax,%rdi
    c997:	e8 19 1f 00 00       	call   e8b5 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    c99c:	90                   	nop
    c99d:	c9                   	leave
    c99e:	c3                   	ret
    c99f:	90                   	nop

000000000000c9a0 <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c9a0:	55                   	push   %rbp
    c9a1:	48 89 e5             	mov    %rsp,%rbp
    c9a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9a8:	90                   	nop
    c9a9:	5d                   	pop    %rbp
    c9aa:	c3                   	ret
    c9ab:	90                   	nop

000000000000c9ac <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    c9ac:	55                   	push   %rbp
    c9ad:	48 89 e5             	mov    %rsp,%rbp
    c9b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9b4:	90                   	nop
    c9b5:	5d                   	pop    %rbp
    c9b6:	c3                   	ret
    c9b7:	90                   	nop

000000000000c9b8 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c9b8:	55                   	push   %rbp
    c9b9:	48 89 e5             	mov    %rsp,%rbp
    c9bc:	48 83 ec 10          	sub    $0x10,%rsp
    c9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9c8:	48 89 c7             	mov    %rax,%rdi
    c9cb:	e8 14 db ff ff       	call   a4e4 <_ZNSaI14VkDynamicStateED1Ev>
    c9d0:	90                   	nop
    c9d1:	c9                   	leave
    c9d2:	c3                   	ret
    c9d3:	90                   	nop

000000000000c9d4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    c9d4:	55                   	push   %rbp
    c9d5:	48 89 e5             	mov    %rsp,%rbp
    c9d8:	48 83 ec 10          	sub    $0x10,%rsp
    c9dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    c9e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c9ec:	48 89 d6             	mov    %rdx,%rsi
    c9ef:	48 89 c7             	mov    %rax,%rdi
    c9f2:	e8 ed 1e 00 00       	call   e8e4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>
    c9f7:	90                   	nop
    c9f8:	c9                   	leave
    c9f9:	c3                   	ret

000000000000c9fa <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c9fa:	55                   	push   %rbp
    c9fb:	48 89 e5             	mov    %rsp,%rbp
    c9fe:	48 83 ec 10          	sub    $0x10,%rsp
    ca02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    ca06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca0a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ca0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca12:	48 8b 00             	mov    (%rax),%rax
    ca15:	48 29 c2             	sub    %rax,%rdx
    ca18:	48 89 d0             	mov    %rdx,%rax
    ca1b:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    ca1f:	48 89 c2             	mov    %rax,%rdx
    ca22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca26:	48 8b 08             	mov    (%rax),%rcx
    ca29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca2d:	48 89 ce             	mov    %rcx,%rsi
    ca30:	48 89 c7             	mov    %rax,%rdi
    ca33:	e8 de 1e 00 00       	call   e916 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>
      }
    ca38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca3c:	48 89 c7             	mov    %rax,%rdi
    ca3f:	e8 74 ff ff ff       	call   c9b8 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>
    ca44:	90                   	nop
    ca45:	c9                   	leave
    ca46:	c3                   	ret
    ca47:	90                   	nop

000000000000ca48 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>:
      begin() const noexcept { return _M_array; }
    ca48:	55                   	push   %rbp
    ca49:	48 89 e5             	mov    %rsp,%rbp
    ca4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca54:	48 8b 00             	mov    (%rax),%rax
    ca57:	5d                   	pop    %rbp
    ca58:	c3                   	ret
    ca59:	90                   	nop

000000000000ca5a <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>:
      end() const noexcept { return begin() + size(); }
    ca5a:	55                   	push   %rbp
    ca5b:	48 89 e5             	mov    %rsp,%rbp
    ca5e:	53                   	push   %rbx
    ca5f:	48 83 ec 18          	sub    $0x18,%rsp
    ca63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca6b:	48 89 c7             	mov    %rax,%rdi
    ca6e:	e8 d5 ff ff ff       	call   ca48 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
    ca73:	48 89 c3             	mov    %rax,%rbx
    ca76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca7a:	48 89 c7             	mov    %rax,%rdi
    ca7d:	e8 ca 1e 00 00       	call   e94c <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>
    ca82:	48 c1 e0 02          	shl    $0x2,%rax
    ca86:	48 01 d8             	add    %rbx,%rax
    ca89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca8d:	c9                   	leave
    ca8e:	c3                   	ret

000000000000ca8f <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
    ca8f:	55                   	push   %rbp
    ca90:	48 89 e5             	mov    %rsp,%rbp
    ca93:	48 83 ec 10          	sub    $0x10,%rsp
    ca97:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca9b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    ca9f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    caa3:	48 89 c7             	mov    %rax,%rdi
    caa6:	e8 b3 1e 00 00       	call   e95e <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
    caab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cab3:	48 89 d6             	mov    %rdx,%rsi
    cab6:	48 89 c7             	mov    %rax,%rdi
    cab9:	e8 ab 1e 00 00       	call   e969 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
    cabe:	c9                   	leave
    cabf:	c3                   	ret

000000000000cac0 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    cac0:	55                   	push   %rbp
    cac1:	48 89 e5             	mov    %rsp,%rbp
    cac4:	53                   	push   %rbx
    cac5:	48 83 ec 38          	sub    $0x38,%rsp
    cac9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    cacd:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    cad1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    cad5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cad9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cadd:	48 89 d6             	mov    %rdx,%rsi
    cae0:	48 89 c7             	mov    %rax,%rdi
    cae3:	e8 a7 ff ff ff       	call   ca8f <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>
    cae8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    caec:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    caf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    caf4:	48 89 c7             	mov    %rax,%rdi
    caf7:	e8 74 00 00 00       	call   cb70 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
    cafc:	48 89 c2             	mov    %rax,%rdx
    caff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb03:	48 89 d6             	mov    %rdx,%rsi
    cb06:	48 89 c7             	mov    %rax,%rdi
    cb09:	e8 75 1e 00 00       	call   e983 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>
    cb0e:	48 89 c6             	mov    %rax,%rsi
    cb11:	48 89 df             	mov    %rbx,%rdi
    cb14:	e8 cb 1e 00 00       	call   e9e4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>
    cb19:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cb1d:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cb20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb24:	48 8b 00             	mov    (%rax),%rax
    cb27:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb2b:	48 c1 e2 02          	shl    $0x2,%rdx
    cb2f:	48 01 c2             	add    %rax,%rdx
    cb32:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb36:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    cb3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb3e:	48 89 c7             	mov    %rax,%rdi
    cb41:	e8 2a 00 00 00       	call   cb70 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
    cb46:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    cb49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cb4d:	48 8b 10             	mov    (%rax),%rdx
    cb50:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    cb54:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cb58:	48 89 c7             	mov    %rax,%rdi
    cb5b:	e8 b7 1e 00 00       	call   ea17 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
    cb60:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cb64:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    cb68:	90                   	nop
    cb69:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb6d:	c9                   	leave
    cb6e:	c3                   	ret
    cb6f:	90                   	nop

000000000000cb70 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    cb70:	55                   	push   %rbp
    cb71:	48 89 e5             	mov    %rsp,%rbp
    cb74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    cb78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb7c:	5d                   	pop    %rbp
    cb7d:	c3                   	ret

000000000000cb7e <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    cb7e:	55                   	push   %rbp
    cb7f:	48 89 e5             	mov    %rsp,%rbp
    cb82:	48 83 ec 20          	sub    $0x20,%rsp
    cb86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cb8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    cb92:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb9a:	48 89 d6             	mov    %rdx,%rsi
    cb9d:	48 89 c7             	mov    %rax,%rdi
    cba0:	e8 a3 1e 00 00       	call   ea48 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>
    }
    cba5:	90                   	nop
    cba6:	c9                   	leave
    cba7:	c3                   	ret

000000000000cba8 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    cba8:	55                   	push   %rbp
    cba9:	48 89 e5             	mov    %rsp,%rbp
    cbac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cbb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    cbb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cbb8:	5d                   	pop    %rbp
    cbb9:	c3                   	ret

000000000000cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    cbba:	55                   	push   %rbp
    cbbb:	48 89 e5             	mov    %rsp,%rbp
    cbbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    cbc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cbca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbce:	48 8b 00             	mov    (%rax),%rax
    cbd1:	48 29 c2             	sub    %rax,%rdx
    cbd4:	48 89 d0             	mov    %rdx,%rax
    cbd7:	48 c1 f8 03          	sar    $0x3,%rax
    cbdb:	5d                   	pop    %rbp
    cbdc:	c3                   	ret
    cbdd:	90                   	nop

000000000000cbde <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    cbde:	55                   	push   %rbp
    cbdf:	48 89 e5             	mov    %rsp,%rbp
    cbe2:	53                   	push   %rbx
    cbe3:	48 83 ec 38          	sub    $0x38,%rsp
    cbe7:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    cbeb:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    cbef:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    cbf4:	0f 84 e7 01 00 00    	je     cde1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    cbfa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cbfe:	48 89 c7             	mov    %rax,%rdi
    cc01:	e8 b4 ff ff ff       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    cc06:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    cc0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc0e:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    cc12:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc16:	48 8b 40 08          	mov    0x8(%rax),%rax
    cc1a:	48 29 c2             	sub    %rax,%rdx
    cc1d:	48 89 d0             	mov    %rdx,%rax
    cc20:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    cc24:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    cc28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc2c:	48 89 c7             	mov    %rax,%rdi
    cc2f:	e8 3a 1e 00 00       	call   ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
    cc34:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    cc38:	72 16                	jb     cc50 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
    cc3a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc3e:	48 89 c7             	mov    %rax,%rdi
    cc41:	e8 28 1e 00 00       	call   ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
    cc46:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    cc4a:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    cc4e:	73 07                	jae    cc57 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
    cc50:	b8 01 00 00 00       	mov    $0x1,%eax
    cc55:	eb 05                	jmp    cc5c <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
    cc57:	b8 00 00 00 00       	mov    $0x0,%eax
    cc5c:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    cc5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cc62:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    cc66:	72 33                	jb     cc9b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    cc68:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc6c:	48 89 c7             	mov    %rax,%rdi
    cc6f:	e8 00 78 ff ff       	call   4474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    cc74:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    cc77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cc7b:	48 8b 40 08          	mov    0x8(%rax),%rax
    cc7f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    cc83:	48 89 ce             	mov    %rcx,%rsi
    cc86:	48 89 c7             	mov    %rax,%rdi
    cc89:	e8 02 1e 00 00       	call   ea90 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    cc8e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cc92:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    cc96:	e9 46 01 00 00       	jmp    cde1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    cc9b:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    cc9f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cca3:	48 8d 15 df 89 00 00 	lea    0x89df(%rip),%rdx        # 15689 <_ZN6__pstl9execution2v1L5unseqE+0x422>
    ccaa:	48 89 ce             	mov    %rcx,%rsi
    ccad:	48 89 c7             	mov    %rax,%rdi
    ccb0:	e8 05 1e 00 00       	call   eaba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
    ccb5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    ccb9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ccbd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ccc1:	48 89 d6             	mov    %rdx,%rsi
    ccc4:	48 89 c7             	mov    %rax,%rdi
    ccc7:	e8 b6 1e 00 00       	call   eb82 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
    cccc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    ccd0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ccd4:	48 89 c7             	mov    %rax,%rdi
    ccd7:	e8 98 77 ff ff       	call   4474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ccdc:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    ccdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cce3:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    ccea:	00 
    cceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ccef:	48 01 c1             	add    %rax,%rcx
    ccf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    ccf6:	48 89 c6             	mov    %rax,%rsi
    ccf9:	48 89 cf             	mov    %rcx,%rdi
    ccfc:	e8 8f 1d 00 00       	call   ea90 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    cd01:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd05:	48 89 c7             	mov    %rax,%rdi
    cd08:	e8 67 77 ff ff       	call   4474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    cd0d:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    cd10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd14:	48 8b 70 08          	mov    0x8(%rax),%rsi
    cd18:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd1c:	48 8b 00             	mov    (%rax),%rax
    cd1f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cd23:	48 89 c7             	mov    %rax,%rdi
    cd26:	e8 8a 1e 00 00       	call   ebb5 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
    cd2b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    cd2f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cd33:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    cd37:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cd3b:	48 8b 12             	mov    (%rdx),%rdx
    cd3e:	48 29 d1             	sub    %rdx,%rcx
    cd41:	48 c1 f9 03          	sar    $0x3,%rcx
    cd45:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    cd48:	48 89 d6             	mov    %rdx,%rsi
    cd4b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    cd4f:	48 8b 0a             	mov    (%rdx),%rcx
    cd52:	48 89 f2             	mov    %rsi,%rdx
    cd55:	48 89 ce             	mov    %rcx,%rsi
    cd58:	48 89 c7             	mov    %rax,%rdi
    cd5b:	e8 de 76 ff ff       	call   443e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
    cd60:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd64:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cd68:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    cd6b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd6f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    cd73:	48 01 d0             	add    %rdx,%rax
    cd76:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cd7d:	00 
    cd7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cd82:	48 01 c2             	add    %rax,%rdx
    cd85:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cd89:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    cd8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    cd91:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    cd98:	00 
    cd99:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    cd9d:	48 01 c2             	add    %rax,%rdx
    cda0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cda4:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    cda8:	eb 37                	jmp    cde1 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
    cdaa:	48 89 c7             	mov    %rax,%rdi
    cdad:	e8 3e 63 ff ff       	call   30f0 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    cdb2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    cdb6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cdba:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cdbe:	48 89 ce             	mov    %rcx,%rsi
    cdc1:	48 89 c7             	mov    %rax,%rdi
    cdc4:	e8 75 76 ff ff       	call   443e <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
    cdc9:	e8 e2 67 ff ff       	call   35b0 <__cxa_rethrow@plt>
		  __catch(...)
    cdce:	48 89 c3             	mov    %rax,%rbx
    cdd1:	e8 8a 68 ff ff       	call   3660 <__cxa_end_catch@plt>
    cdd6:	48 89 d8             	mov    %rbx,%rax
    cdd9:	48 89 c7             	mov    %rax,%rdi
    cddc:	e8 cf 68 ff ff       	call   36b0 <_Unwind_Resume@plt>
    }
    cde1:	90                   	nop
    cde2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cde6:	c9                   	leave
    cde7:	c3                   	ret

000000000000cde8 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    cde8:	55                   	push   %rbp
    cde9:	48 89 e5             	mov    %rsp,%rbp
    cdec:	48 83 ec 20          	sub    $0x20,%rsp
    cdf0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cdf4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    cdf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdfc:	48 8b 40 08          	mov    0x8(%rax),%rax
    ce00:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    ce04:	48 c1 f8 03          	sar    $0x3,%rax
    ce08:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ce0c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    ce11:	74 32                	je     ce45 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
    ce13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce17:	48 89 c7             	mov    %rax,%rdi
    ce1a:	e8 55 76 ff ff       	call   4474 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ce1f:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    ce22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce26:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ce2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ce2e:	48 89 ce             	mov    %rcx,%rsi
    ce31:	48 89 c7             	mov    %rax,%rdi
    ce34:	e8 49 76 ff ff       	call   4482 <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    ce39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce3d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ce41:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    ce45:	90                   	nop
    ce46:	c9                   	leave
    ce47:	c3                   	ret

000000000000ce48 <_ZN9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ce48:	55                   	push   %rbp
    ce49:	48 89 e5             	mov    %rsp,%rbp
    ce4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ce54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce58:	48 8b 10             	mov    (%rax),%rdx
    ce5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce5f:	48 89 10             	mov    %rdx,(%rax)
    ce62:	90                   	nop
    ce63:	5d                   	pop    %rbp
    ce64:	c3                   	ret
    ce65:	90                   	nop

000000000000ce66 <_ZNK9__gnu_cxx17__normal_iteratorIPP15VkFramebuffer_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ce66:	55                   	push   %rbp
    ce67:	48 89 e5             	mov    %rsp,%rbp
    ce6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ce6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce72:	5d                   	pop    %rbp
    ce73:	c3                   	ret

000000000000ce74 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ce74:	55                   	push   %rbp
    ce75:	48 89 e5             	mov    %rsp,%rbp
    ce78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ce80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ce84:	48 8b 10             	mov    (%rax),%rdx
    ce87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce8b:	48 89 10             	mov    %rdx,(%rax)
    ce8e:	90                   	nop
    ce8f:	5d                   	pop    %rbp
    ce90:	c3                   	ret
    ce91:	90                   	nop

000000000000ce92 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ce92:	55                   	push   %rbp
    ce93:	48 89 e5             	mov    %rsp,%rbp
    ce96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ce9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce9e:	5d                   	pop    %rbp
    ce9f:	c3                   	ret

000000000000cea0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    cea0:	55                   	push   %rbp
    cea1:	48 89 e5             	mov    %rsp,%rbp
    cea4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    cea8:	90                   	nop
    cea9:	5d                   	pop    %rbp
    ceaa:	c3                   	ret

000000000000ceab <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    ceab:	55                   	push   %rbp
    ceac:	48 89 e5             	mov    %rsp,%rbp
    ceaf:	48 83 ec 10          	sub    $0x10,%rsp
    ceb3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ceb7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    cebb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cebf:	48 89 c7             	mov    %rax,%rdi
    cec2:	e8 20 1d 00 00       	call   ebe7 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    cec7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cecb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cecf:	48 89 d6             	mov    %rdx,%rsi
    ced2:	48 89 c7             	mov    %rax,%rdi
    ced5:	e8 18 1d 00 00       	call   ebf2 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    ceda:	c9                   	leave
    cedb:	c3                   	ret

000000000000cedc <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    cedc:	55                   	push   %rbp
    cedd:	48 89 e5             	mov    %rsp,%rbp
    cee0:	48 83 ec 20          	sub    $0x20,%rsp
    cee4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    cee8:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    ceef:	07 7e 00 
    cef2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    cef6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cefa:	48 89 c7             	mov    %rax,%rdi
    cefd:	e8 06 1d 00 00       	call   ec08 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    cf02:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    cf06:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    cf0a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cf0e:	48 89 d6             	mov    %rdx,%rsi
    cf11:	48 89 c7             	mov    %rax,%rdi
    cf14:	e8 8a 7a ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    cf19:	48 8b 00             	mov    (%rax),%rax
      }
    cf1c:	c9                   	leave
    cf1d:	c3                   	ret

000000000000cf1e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    cf1e:	55                   	push   %rbp
    cf1f:	48 89 e5             	mov    %rsp,%rbp
    cf22:	48 83 ec 10          	sub    $0x10,%rsp
    cf26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    cf2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf36:	48 89 d6             	mov    %rdx,%rsi
    cf39:	48 89 c7             	mov    %rax,%rdi
    cf3c:	e8 c1 db ff ff       	call   ab02 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    cf41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf45:	48 89 c7             	mov    %rax,%rdi
    cf48:	e8 d5 1c 00 00       	call   ec22 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    cf4d:	90                   	nop
    cf4e:	c9                   	leave
    cf4f:	c3                   	ret

000000000000cf50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    cf50:	55                   	push   %rbp
    cf51:	48 89 e5             	mov    %rsp,%rbp
    cf54:	48 83 ec 10          	sub    $0x10,%rsp
    cf58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    cf60:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf68:	48 89 d6             	mov    %rdx,%rsi
    cf6b:	48 89 c7             	mov    %rax,%rdi
    cf6e:	e8 dd 1c 00 00       	call   ec50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    cf73:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf77:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    cf7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf7e:	48 8b 10             	mov    (%rax),%rdx
    cf81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf85:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    cf89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf8d:	48 8b 08             	mov    (%rax),%rcx
    cf90:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf94:	48 89 d0             	mov    %rdx,%rax
    cf97:	48 c1 e0 06          	shl    $0x6,%rax
    cf9b:	48 01 d0             	add    %rdx,%rax
    cf9e:	48 c1 e0 02          	shl    $0x2,%rax
    cfa2:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    cfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfaa:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    cfae:	90                   	nop
    cfaf:	c9                   	leave
    cfb0:	c3                   	ret

000000000000cfb1 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    cfb1:	55                   	push   %rbp
    cfb2:	48 89 e5             	mov    %rsp,%rbp
    cfb5:	48 83 ec 20          	sub    $0x20,%rsp
    cfb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    cfc1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    cfc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cfc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfcd:	48 89 d6             	mov    %rdx,%rsi
    cfd0:	48 89 c7             	mov    %rax,%rdi
    cfd3:	e8 ab 1c 00 00       	call   ec83 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    cfd8:	c9                   	leave
    cfd9:	c3                   	ret

000000000000cfda <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    cfda:	55                   	push   %rbp
    cfdb:	48 89 e5             	mov    %rsp,%rbp
    cfde:	48 83 ec 10          	sub    $0x10,%rsp
    cfe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cfe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    cfea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cfee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff2:	48 89 d6             	mov    %rdx,%rsi
    cff5:	48 89 c7             	mov    %rax,%rdi
    cff8:	e8 af 1c 00 00       	call   ecac <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    cffd:	90                   	nop
    cffe:	c9                   	leave
    cfff:	c3                   	ret

000000000000d000 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    d000:	55                   	push   %rbp
    d001:	48 89 e5             	mov    %rsp,%rbp
    d004:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d008:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d00c:	90                   	nop
    d00d:	5d                   	pop    %rbp
    d00e:	c3                   	ret

000000000000d00f <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d00f:	55                   	push   %rbp
    d010:	48 89 e5             	mov    %rsp,%rbp
    d013:	48 83 ec 20          	sub    $0x20,%rsp
    d017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d01b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d01f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d023:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d027:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d02b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d02f:	48 89 ce             	mov    %rcx,%rsi
    d032:	48 89 c7             	mov    %rax,%rdi
    d035:	e8 82 1c 00 00       	call   ecbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    d03a:	90                   	nop
    d03b:	c9                   	leave
    d03c:	c3                   	ret

000000000000d03d <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    d03d:	55                   	push   %rbp
    d03e:	48 89 e5             	mov    %rsp,%rbp
    d041:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d045:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    d049:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d04d:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    d051:	48 c1 f8 03          	sar    $0x3,%rax
    }
    d055:	5d                   	pop    %rbp
    d056:	c3                   	ret

000000000000d057 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    d057:	55                   	push   %rbp
    d058:	48 89 e5             	mov    %rsp,%rbp
    d05b:	48 83 ec 20          	sub    $0x20,%rsp
    d05f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d063:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d067:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    d06b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    d06f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d073:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d077:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d07b:	48 89 ce             	mov    %rcx,%rsi
    d07e:	48 89 c7             	mov    %rax,%rdi
    d081:	e8 70 1c 00 00       	call   ecf6 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>
    }
    d086:	c9                   	leave
    d087:	c3                   	ret

000000000000d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    d088:	55                   	push   %rbp
    d089:	48 89 e5             	mov    %rsp,%rbp
    d08c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    d090:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d094:	5d                   	pop    %rbp
    d095:	c3                   	ret

000000000000d096 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    d096:	55                   	push   %rbp
    d097:	48 89 e5             	mov    %rsp,%rbp
    d09a:	48 83 ec 20          	sub    $0x20,%rsp
    d09e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d0a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    d0aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0ae:	48 89 c7             	mov    %rax,%rdi
    d0b1:	e8 d2 ff ff ff       	call   d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    d0b6:	48 89 c2             	mov    %rax,%rdx
    d0b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d0bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0c1:	48 89 ce             	mov    %rcx,%rsi
    d0c4:	48 89 c7             	mov    %rax,%rdi
    d0c7:	e8 60 1c 00 00       	call   ed2c <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
    d0cc:	90                   	nop
    d0cd:	c9                   	leave
    d0ce:	c3                   	ret
    d0cf:	90                   	nop

000000000000d0d0 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
    d0d0:	55                   	push   %rbp
    d0d1:	48 89 e5             	mov    %rsp,%rbp
    d0d4:	53                   	push   %rbx
    d0d5:	48 83 ec 68          	sub    $0x68,%rsp
    d0d9:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    d0dd:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    d0e1:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    d0e5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d0e9:	48 8d 15 b3 85 00 00 	lea    0x85b3(%rip),%rdx        # 156a3 <_ZN6__pstl9execution2v1L5unseqE+0x43c>
    d0f0:	be 01 00 00 00       	mov    $0x1,%esi
    d0f5:	48 89 c7             	mov    %rax,%rdi
    d0f8:	e8 71 1c 00 00       	call   ed6e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
    d0fd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    d101:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d105:	48 8b 00             	mov    (%rax),%rax
    d108:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    d10c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d110:	48 8b 40 08          	mov    0x8(%rax),%rax
    d114:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    d118:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d11c:	48 89 c7             	mov    %rax,%rdi
    d11f:	e8 0a c0 ff ff       	call   912e <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d124:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    d128:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    d12c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d130:	48 89 d6             	mov    %rdx,%rsi
    d133:	48 89 c7             	mov    %rax,%rdi
    d136:	e8 fb 1c 00 00       	call   ee36 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
    d13b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    d13f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d143:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d147:	48 89 d6             	mov    %rdx,%rsi
    d14a:	48 89 c7             	mov    %rax,%rdi
    d14d:	e8 5a 74 ff ff       	call   45ac <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    d152:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    d156:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d15a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    d15e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    d162:	48 89 c7             	mov    %rax,%rdi
    d165:	e8 1e ff ff ff       	call   d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    d16a:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
    d16d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d171:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    d178:	00 
	  _Alloc_traits::construct(this->_M_impl,
    d179:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d17d:	48 01 c1             	add    %rax,%rcx
    d180:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d184:	48 89 ce             	mov    %rcx,%rsi
    d187:	48 89 c7             	mov    %rax,%rdi
    d18a:	e8 07 ff ff ff       	call   d096 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
    d18f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    d196:	00 
					 __new_start, _M_get_Tp_allocator());
    d197:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d19b:	48 89 c7             	mov    %rax,%rdi
    d19e:	e8 85 70 ff ff       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    d1a3:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    d1a6:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1aa:	48 89 c7             	mov    %rax,%rdi
    d1ad:	e8 d2 dd ff ff       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d1b2:	48 8b 30             	mov    (%rax),%rsi
    d1b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d1b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d1bd:	48 89 d9             	mov    %rbx,%rcx
    d1c0:	48 89 c7             	mov    %rax,%rdi
    d1c3:	e8 b0 1c 00 00       	call   ee78 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    d1c8:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    d1cc:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    d1d1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d1d5:	48 89 c7             	mov    %rax,%rdi
    d1d8:	e8 4b 70 ff ff       	call   4228 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    d1dd:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    d1e0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1e4:	48 89 c7             	mov    %rax,%rdi
    d1e7:	e8 98 dd ff ff       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    d1ec:	48 8b 00             	mov    (%rax),%rax
    d1ef:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d1f3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    d1f7:	48 89 d9             	mov    %rbx,%rcx
    d1fa:	48 89 c7             	mov    %rax,%rdi
    d1fd:	e8 76 1c 00 00       	call   ee78 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
    d202:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    d206:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    d20a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    d20e:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    d212:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    d216:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
    d21a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    d21e:	48 89 ce             	mov    %rcx,%rsi
    d221:	48 89 c7             	mov    %rax,%rdi
    d224:	e8 b5 72 ff ff       	call   44de <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
    d229:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d22d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    d231:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
    d234:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d238:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    d23c:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
    d240:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d244:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    d24b:	00 
    d24c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d250:	48 01 c2             	add    %rax,%rdx
    d253:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    d257:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    d25b:	90                   	nop
    d25c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d260:	c9                   	leave
    d261:	c3                   	ret

000000000000d262 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
    d262:	55                   	push   %rbp
    d263:	48 89 e5             	mov    %rsp,%rbp
    d266:	48 83 ec 20          	sub    $0x20,%rsp
    d26a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
    d26e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d272:	48 89 c7             	mov    %rax,%rdi
    d275:	e8 da be ff ff       	call   9154 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d27a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d27e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d282:	be 01 00 00 00       	mov    $0x1,%esi
    d287:	48 89 c7             	mov    %rax,%rdi
    d28a:	e8 1b 1c 00 00       	call   eeaa <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
    d28f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d293:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    d297:	48 89 c7             	mov    %rax,%rdi
    d29a:	e8 39 bf ff ff       	call   91d8 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
    d29f:	c9                   	leave
    d2a0:	c3                   	ret

000000000000d2a1 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    d2a1:	55                   	push   %rbp
    d2a2:	48 89 e5             	mov    %rsp,%rbp
    d2a5:	48 83 ec 20          	sub    $0x20,%rsp
    d2a9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    d2ad:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    d2b4:	03 3f 00 
    d2b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    d2bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2bf:	48 89 c7             	mov    %rax,%rdi
    d2c2:	e8 25 1c 00 00       	call   eeec <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    d2c7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    d2cb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d2cf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d2d3:	48 89 d6             	mov    %rdx,%rsi
    d2d6:	48 89 c7             	mov    %rax,%rdi
    d2d9:	e8 c5 76 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    d2de:	48 8b 00             	mov    (%rax),%rax
      }
    d2e1:	c9                   	leave
    d2e2:	c3                   	ret
    d2e3:	90                   	nop

000000000000d2e4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    d2e4:	55                   	push   %rbp
    d2e5:	48 89 e5             	mov    %rsp,%rbp
    d2e8:	48 83 ec 10          	sub    $0x10,%rsp
    d2ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    d2f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2fc:	48 89 d6             	mov    %rdx,%rsi
    d2ff:	48 89 c7             	mov    %rax,%rdi
    d302:	e8 ff 1b 00 00       	call   ef06 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    d307:	90                   	nop
    d308:	c9                   	leave
    d309:	c3                   	ret

000000000000d30a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    d30a:	55                   	push   %rbp
    d30b:	48 89 e5             	mov    %rsp,%rbp
    d30e:	48 83 ec 10          	sub    $0x10,%rsp
    d312:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d316:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    d31a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d31e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d322:	48 89 d6             	mov    %rdx,%rsi
    d325:	48 89 c7             	mov    %rax,%rdi
    d328:	e8 b7 ff ff ff       	call   d2e4 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    d32d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d331:	48 89 c7             	mov    %rax,%rdi
    d334:	e8 dd 1b 00 00       	call   ef16 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d339:	90                   	nop
    d33a:	c9                   	leave
    d33b:	c3                   	ret

000000000000d33c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    d33c:	55                   	push   %rbp
    d33d:	48 89 e5             	mov    %rsp,%rbp
    d340:	48 83 ec 10          	sub    $0x10,%rsp
    d344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    d34c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d354:	48 89 d6             	mov    %rdx,%rsi
    d357:	48 89 c7             	mov    %rax,%rdi
    d35a:	e8 e5 1b 00 00       	call   ef44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    d35f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d363:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    d366:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d36a:	48 8b 10             	mov    (%rax),%rdx
    d36d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d371:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    d375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d379:	48 8b 08             	mov    (%rax),%rcx
    d37c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d380:	48 89 d0             	mov    %rdx,%rax
    d383:	48 c1 e0 06          	shl    $0x6,%rax
    d387:	48 01 d0             	add    %rdx,%rax
    d38a:	48 c1 e0 03          	shl    $0x3,%rax
    d38e:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    d392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d396:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    d39a:	90                   	nop
    d39b:	c9                   	leave
    d39c:	c3                   	ret
    d39d:	90                   	nop

000000000000d39e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    d39e:	55                   	push   %rbp
    d39f:	48 89 e5             	mov    %rsp,%rbp
    d3a2:	48 83 ec 20          	sub    $0x20,%rsp
    d3a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d3ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    d3b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    d3b7:	74 17                	je     d3d0 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    d3b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d3c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d3c5:	48 89 ce             	mov    %rcx,%rsi
    d3c8:	48 89 c7             	mov    %rax,%rdi
    d3cb:	e8 a7 1b 00 00       	call   ef77 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    d3d0:	90                   	nop
    d3d1:	c9                   	leave
    d3d2:	c3                   	ret

000000000000d3d3 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d3d3:	55                   	push   %rbp
    d3d4:	48 89 e5             	mov    %rsp,%rbp
    d3d7:	48 83 ec 20          	sub    $0x20,%rsp
    d3db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d3df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d3e3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d3e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d3eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ef:	48 89 d6             	mov    %rdx,%rsi
    d3f2:	48 89 c7             	mov    %rax,%rdi
    d3f5:	e8 ab 1b 00 00       	call   efa5 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    d3fa:	c9                   	leave
    d3fb:	c3                   	ret

000000000000d3fc <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d3fc:	55                   	push   %rbp
    d3fd:	48 89 e5             	mov    %rsp,%rbp
    d400:	48 83 ec 10          	sub    $0x10,%rsp
    d404:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d408:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d40c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d414:	48 89 d6             	mov    %rdx,%rsi
    d417:	48 89 c7             	mov    %rax,%rdi
    d41a:	e8 af 1b 00 00       	call   efce <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    d41f:	90                   	nop
    d420:	c9                   	leave
    d421:	c3                   	ret

000000000000d422 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    d422:	55                   	push   %rbp
    d423:	48 89 e5             	mov    %rsp,%rbp
    d426:	48 83 ec 10          	sub    $0x10,%rsp
    d42a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d42e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d432:	48 89 c7             	mov    %rax,%rdi
    d435:	e8 a4 1b 00 00       	call   efde <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    d43a:	90                   	nop
    d43b:	c9                   	leave
    d43c:	c3                   	ret
    d43d:	90                   	nop

000000000000d43e <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
    d43e:	55                   	push   %rbp
    d43f:	48 89 e5             	mov    %rsp,%rbp
    d442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
    d446:	90                   	nop
    d447:	5d                   	pop    %rbp
    d448:	c3                   	ret
    d449:	90                   	nop

000000000000d44a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d44a:	55                   	push   %rbp
    d44b:	48 89 e5             	mov    %rsp,%rbp
    d44e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d452:	90                   	nop
    d453:	5d                   	pop    %rbp
    d454:	c3                   	ret
    d455:	90                   	nop

000000000000d456 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d456:	55                   	push   %rbp
    d457:	48 89 e5             	mov    %rsp,%rbp
    d45a:	41 55                	push   %r13
    d45c:	41 54                	push   %r12
    d45e:	53                   	push   %rbx
    d45f:	48 83 ec 78          	sub    $0x78,%rsp
    d463:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
    d46a:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
    d471:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    d478:	48 89 c7             	mov    %rax,%rdi
    d47b:	e8 69 1b 00 00       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    d480:	48 89 c2             	mov    %rax,%rdx
    d483:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
    d48a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d48e:	48 89 ce             	mov    %rcx,%rsi
    d491:	48 89 c7             	mov    %rax,%rdi
    d494:	e8 5f 1b 00 00       	call   eff8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>
	auto __res = _M_get_insert_unique_pos(__z._M_key());
    d499:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d49d:	48 89 c7             	mov    %rax,%rdi
    d4a0:	e8 47 1d 00 00       	call   f1ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>
    d4a5:	48 89 c2             	mov    %rax,%rdx
    d4a8:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    d4af:	48 89 d6             	mov    %rdx,%rsi
    d4b2:	48 89 c7             	mov    %rax,%rdi
    d4b5:	e8 bc 1b 00 00       	call   f076 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>
    d4ba:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    d4be:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
	if (__res.second)
    d4c2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d4c6:	48 85 c0             	test   %rax,%rax
    d4c9:	74 40                	je     d50b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xb5>
	  return {__z._M_insert(__res), true};
    d4cb:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    d4cf:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    d4d3:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d4d7:	48 89 ce             	mov    %rcx,%rsi
    d4da:	48 89 c7             	mov    %rax,%rdi
    d4dd:	e8 28 1d 00 00       	call   f20a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>
    d4e2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    d4e6:	c6 45 bf 01          	movb   $0x1,-0x41(%rbp)
    d4ea:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    d4ee:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
    d4f2:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d4f6:	48 89 ce             	mov    %rcx,%rsi
    d4f9:	48 89 c7             	mov    %rax,%rdi
    d4fc:	e8 5f 1d 00 00       	call   f260 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
    d501:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
    d505:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
    d509:	eb 36                	jmp    d541 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xeb>
	return {iterator(__res.first), false};
    d50b:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    d50f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d513:	48 89 d6             	mov    %rdx,%rsi
    d516:	48 89 c7             	mov    %rax,%rdi
    d519:	e8 86 1d 00 00       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d51e:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
    d522:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    d526:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    d52a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d52e:	48 89 ce             	mov    %rcx,%rsi
    d531:	48 89 c7             	mov    %rax,%rdi
    d534:	e8 27 1d 00 00       	call   f260 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
    d539:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
    d53d:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
      }
    d541:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d545:	48 89 c7             	mov    %rax,%rdi
    d548:	e8 f3 1a 00 00       	call   f040 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
    d54d:	4c 89 e0             	mov    %r12,%rax
    d550:	4c 89 ea             	mov    %r13,%rdx
    d553:	eb 1a                	jmp    d56f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0x119>
    d555:	48 89 c3             	mov    %rax,%rbx
    d558:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d55c:	48 89 c7             	mov    %rax,%rdi
    d55f:	e8 dc 1a 00 00       	call   f040 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
    d564:	48 89 d8             	mov    %rbx,%rax
    d567:	48 89 c7             	mov    %rax,%rdi
    d56a:	e8 41 61 ff ff       	call   36b0 <_Unwind_Resume@plt>
    d56f:	48 83 c4 78          	add    $0x78,%rsp
    d573:	5b                   	pop    %rbx
    d574:	41 5c                	pop    %r12
    d576:	41 5d                	pop    %r13
    d578:	5d                   	pop    %rbp
    d579:	c3                   	ret

000000000000d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d57a:	55                   	push   %rbp
    d57b:	48 89 e5             	mov    %rsp,%rbp
    d57e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    d582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d586:	48 8b 40 18          	mov    0x18(%rax),%rax
    d58a:	5d                   	pop    %rbp
    d58b:	c3                   	ret

000000000000d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    d58c:	55                   	push   %rbp
    d58d:	48 89 e5             	mov    %rsp,%rbp
    d590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    d594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d598:	48 8b 40 10          	mov    0x10(%rax),%rax
    d59c:	5d                   	pop    %rbp
    d59d:	c3                   	ret

000000000000d59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    d59e:	55                   	push   %rbp
    d59f:	48 89 e5             	mov    %rsp,%rbp
    d5a2:	48 83 ec 10          	sub    $0x10,%rsp
    d5a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d5aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    d5ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d5b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5b6:	48 89 d6             	mov    %rdx,%rsi
    d5b9:	48 89 c7             	mov    %rax,%rdi
    d5bc:	e8 fd 1c 00 00       	call   f2be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>
	_M_put_node(__p);
    d5c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d5c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5c9:	48 89 d6             	mov    %rdx,%rsi
    d5cc:	48 89 c7             	mov    %rax,%rdi
    d5cf:	e8 28 1d 00 00       	call   f2fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
      }
    d5d4:	90                   	nop
    d5d5:	c9                   	leave
    d5d6:	c3                   	ret
    d5d7:	90                   	nop

000000000000d5d8 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    d5d8:	55                   	push   %rbp
    d5d9:	48 89 e5             	mov    %rsp,%rbp
    d5dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    d5e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e4:	48 8b 40 10          	mov    0x10(%rax),%rax
    d5e8:	5d                   	pop    %rbp
    d5e9:	c3                   	ret

000000000000d5ea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d5ea:	55                   	push   %rbp
    d5eb:	48 89 e5             	mov    %rsp,%rbp
    d5ee:	53                   	push   %rbx
    d5ef:	48 83 ec 78          	sub    $0x78,%rsp
    d5f3:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    d5f7:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    d5fb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d5ff:	48 89 c7             	mov    %rax,%rdi
    d602:	e8 a1 da ff ff       	call   b0a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    d607:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Base_ptr __y = _M_end();
    d60b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d60f:	48 89 c7             	mov    %rax,%rdi
    d612:	e8 1b 1d 00 00       	call   f332 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
    d617:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    d61b:	e9 12 01 00 00       	jmp    d732 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
    d620:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    d624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d628:	48 89 c7             	mov    %rax,%rdi
    d62b:	e8 14 1d 00 00       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    d630:	48 89 c1             	mov    %rax,%rcx
    d633:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d637:	48 89 c2             	mov    %rax,%rdx
    d63a:	48 89 ce             	mov    %rcx,%rsi
    d63d:	48 89 df             	mov    %rbx,%rdi
    d640:	e8 2b 1d 00 00       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d645:	84 c0                	test   %al,%al
    d647:	74 15                	je     d65e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x74>
	    __x = _S_right(__x);
    d649:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d64d:	48 89 c7             	mov    %rax,%rdi
    d650:	e8 25 ff ff ff       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    d655:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d659:	e9 d4 00 00 00       	jmp    d732 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
    d65e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    d662:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d666:	48 89 c7             	mov    %rax,%rdi
    d669:	e8 d6 1c 00 00       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    d66e:	48 89 c2             	mov    %rax,%rdx
    d671:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    d675:	48 89 c6             	mov    %rax,%rsi
    d678:	48 89 df             	mov    %rbx,%rdi
    d67b:	e8 f0 1c 00 00       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    d680:	84 c0                	test   %al,%al
    d682:	74 1d                	je     d6a1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xb7>
	    __y = __x, __x = _S_left(__x);
    d684:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d688:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d68c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d690:	48 89 c7             	mov    %rax,%rdi
    d693:	e8 f4 fe ff ff       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    d698:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d69c:	e9 91 00 00 00       	jmp    d732 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	      _Link_type __xu(__x);
    d6a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6a5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      _Base_ptr __yu(__y);
    d6a9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6ad:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	      __y = __x, __x = _S_left(__x);
    d6b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6b5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d6b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d6bd:	48 89 c7             	mov    %rax,%rdi
    d6c0:	e8 c7 fe ff ff       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    d6c5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      __xu = _S_right(__xu);
    d6c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d6cd:	48 89 c7             	mov    %rax,%rdi
    d6d0:	e8 a5 fe ff ff       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    d6d5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
				    _M_upper_bound(__xu, __yu, __k));
    d6d9:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    d6dd:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    d6e1:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    d6e5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d6e9:	48 89 c7             	mov    %rax,%rdi
    d6ec:	e8 3f 1d 00 00       	call   f430 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
    d6f1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
			  iterator>(_M_lower_bound(__x, __y, __k),
    d6f5:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
    d6f9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d6fd:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    d701:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    d705:	48 89 c7             	mov    %rax,%rdi
    d708:	e8 8d 1c 00 00       	call   f39a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
    d70d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
	      return pair<iterator,
    d711:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d715:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
    d719:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d71d:	48 89 ce             	mov    %rcx,%rsi
    d720:	48 89 c7             	mov    %rax,%rdi
    d723:	e8 98 1d 00 00       	call   f4c0 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				    _M_upper_bound(__xu, __yu, __k));
    d728:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    d72c:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    d730:	eb 50                	jmp    d782 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x198>
      while (__x != 0)
    d732:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d737:	0f 85 e3 fe ff ff    	jne    d620 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x36>
				      iterator(__y));
    d73d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d741:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d745:	48 89 d6             	mov    %rdx,%rsi
    d748:	48 89 c7             	mov    %rax,%rdi
    d74b:	e8 54 1b 00 00       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      return pair<iterator, iterator>(iterator(__y),
    d750:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d754:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d758:	48 89 d6             	mov    %rdx,%rsi
    d75b:	48 89 c7             	mov    %rax,%rdi
    d75e:	e8 41 1b 00 00       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    d763:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d767:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    d76b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d76f:	48 89 ce             	mov    %rcx,%rsi
    d772:	48 89 c7             	mov    %rax,%rdi
    d775:	e8 46 1d 00 00       	call   f4c0 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				      iterator(__y));
    d77a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    d77e:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    }
    d782:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d786:	c9                   	leave
    d787:	c3                   	ret

000000000000d788 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d788:	55                   	push   %rbp
    d789:	48 89 e5             	mov    %rsp,%rbp
    d78c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
    d790:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d794:	48 8b 40 28          	mov    0x28(%rax),%rax
    d798:	5d                   	pop    %rbp
    d799:	c3                   	ret

000000000000d79a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    d79a:	55                   	push   %rbp
    d79b:	48 89 e5             	mov    %rsp,%rbp
    d79e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    d7a6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7aa:	48 8b 10             	mov    (%rax),%rdx
    d7ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7b1:	48 89 10             	mov    %rdx,(%rax)
    d7b4:	90                   	nop
    d7b5:	5d                   	pop    %rbp
    d7b6:	c3                   	ret
    d7b7:	90                   	nop

000000000000d7b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    d7b8:	55                   	push   %rbp
    d7b9:	48 89 e5             	mov    %rsp,%rbp
    d7bc:	48 83 ec 40          	sub    $0x40,%rsp
    d7c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d7c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d7c8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      if (__first == begin() && __last == end())
    d7cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d7d0:	48 89 c7             	mov    %rax,%rdi
    d7d3:	e8 2c 1d 00 00       	call   f504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
    d7d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d7dc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    d7e0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    d7e4:	48 89 d6             	mov    %rdx,%rsi
    d7e7:	48 89 c7             	mov    %rax,%rdi
    d7ea:	e8 ab ff ff ff       	call   d79a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    d7ef:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    d7f3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d7f7:	48 89 d6             	mov    %rdx,%rsi
    d7fa:	48 89 c7             	mov    %rax,%rdi
    d7fd:	e8 2b 1d 00 00       	call   f52d <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    d802:	84 c0                	test   %al,%al
    d804:	74 41                	je     d847 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
    d806:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d80a:	48 89 c7             	mov    %rax,%rdi
    d80d:	e8 3e 1d 00 00       	call   f550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>
    d812:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d816:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    d81a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    d81e:	48 89 d6             	mov    %rdx,%rsi
    d821:	48 89 c7             	mov    %rax,%rdi
    d824:	e8 71 ff ff ff       	call   d79a <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    d829:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d82d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    d831:	48 89 d6             	mov    %rdx,%rsi
    d834:	48 89 c7             	mov    %rax,%rdi
    d837:	e8 f1 1c 00 00       	call   f52d <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    d83c:	84 c0                	test   %al,%al
    d83e:	74 07                	je     d847 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
    d840:	b8 01 00 00 00       	mov    $0x1,%eax
    d845:	eb 05                	jmp    d84c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x94>
    d847:	b8 00 00 00 00       	mov    $0x0,%eax
    d84c:	84 c0                	test   %al,%al
    d84e:	74 31                	je     d881 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xc9>
	clear();
    d850:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d854:	48 89 c7             	mov    %rax,%rdi
    d857:	e8 1e 1d 00 00       	call   f57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>
    }
    d85c:	eb 3a                	jmp    d898 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xe0>
	  _M_erase_aux(__first++);
    d85e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d862:	be 00 00 00 00       	mov    $0x0,%esi
    d867:	48 89 c7             	mov    %rax,%rdi
    d86a:	e8 6b 1d 00 00       	call   f5da <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>
    d86f:	48 89 c2             	mov    %rax,%rdx
    d872:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d876:	48 89 d6             	mov    %rdx,%rsi
    d879:	48 89 c7             	mov    %rax,%rdi
    d87c:	e8 8f 1d 00 00       	call   f610 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>
	while (__first != __last)
    d881:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
    d885:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    d889:	48 89 d6             	mov    %rdx,%rsi
    d88c:	48 89 c7             	mov    %rax,%rdi
    d88f:	e8 23 1d 00 00       	call   f5b7 <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    d894:	84 c0                	test   %al,%al
    d896:	75 c6                	jne    d85e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xa6>
    }
    d898:	90                   	nop
    d899:	c9                   	leave
    d89a:	c3                   	ret
    d89b:	90                   	nop

000000000000d89c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    d89c:	55                   	push   %rbp
    d89d:	48 89 e5             	mov    %rsp,%rbp
    d8a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8a4:	90                   	nop
    d8a5:	5d                   	pop    %rbp
    d8a6:	c3                   	ret

000000000000d8a7 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d8a7:	55                   	push   %rbp
    d8a8:	48 89 e5             	mov    %rsp,%rbp
    d8ab:	48 83 ec 20          	sub    $0x20,%rsp
    d8af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d8b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d8bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d8c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8c7:	48 89 ce             	mov    %rcx,%rsi
    d8ca:	48 89 c7             	mov    %rax,%rdi
    d8cd:	e8 94 1d 00 00       	call   f666 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    d8d2:	90                   	nop
    d8d3:	c9                   	leave
    d8d4:	c3                   	ret

000000000000d8d5 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d8d5:	55                   	push   %rbp
    d8d6:	48 89 e5             	mov    %rsp,%rbp
    d8d9:	48 83 ec 10          	sub    $0x10,%rsp
    d8dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d8e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d8e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8ed:	48 89 d6             	mov    %rdx,%rsi
    d8f0:	48 89 c7             	mov    %rax,%rdi
    d8f3:	e8 9f 1d 00 00       	call   f697 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    d8f8:	90                   	nop
    d8f9:	c9                   	leave
    d8fa:	c3                   	ret
    d8fb:	90                   	nop

000000000000d8fc <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
    d8fc:	55                   	push   %rbp
    d8fd:	48 89 e5             	mov    %rsp,%rbp
    d900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d904:	90                   	nop
    d905:	5d                   	pop    %rbp
    d906:	c3                   	ret

000000000000d907 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    d907:	55                   	push   %rbp
    d908:	48 89 e5             	mov    %rsp,%rbp
    d90b:	48 83 ec 20          	sub    $0x20,%rsp
    d90f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d913:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d917:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    d91b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d91f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    d923:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d927:	48 89 ce             	mov    %rcx,%rsi
    d92a:	48 89 c7             	mov    %rax,%rdi
    d92d:	e8 74 1d 00 00       	call   f6a6 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    d932:	90                   	nop
    d933:	c9                   	leave
    d934:	c3                   	ret

000000000000d935 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    d935:	55                   	push   %rbp
    d936:	48 89 e5             	mov    %rsp,%rbp
    d939:	48 83 ec 10          	sub    $0x10,%rsp
    d93d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d941:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    d945:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d949:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d94d:	48 89 d6             	mov    %rdx,%rsi
    d950:	48 89 c7             	mov    %rax,%rdi
    d953:	e8 7f 1d 00 00       	call   f6d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    d958:	90                   	nop
    d959:	c9                   	leave
    d95a:	c3                   	ret
    d95b:	90                   	nop

000000000000d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    d95c:	55                   	push   %rbp
    d95d:	48 89 e5             	mov    %rsp,%rbp
    d960:	48 83 ec 10          	sub    $0x10,%rsp
    d964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    d968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d96c:	48 89 c7             	mov    %rax,%rdi
    d96f:	e8 b4 1d 00 00       	call   f728 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    d974:	48 89 c7             	mov    %rax,%rdi
    d977:	e8 6a 1d 00 00       	call   f6e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    d97c:	c9                   	leave
    d97d:	c3                   	ret

000000000000d97e <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    d97e:	55                   	push   %rbp
    d97f:	48 89 e5             	mov    %rsp,%rbp
    d982:	48 83 ec 20          	sub    $0x20,%rsp
    d986:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d98a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    d98e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    d992:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d99a:	48 89 d6             	mov    %rdx,%rsi
    d99d:	48 89 c7             	mov    %rax,%rdi
    d9a0:	e8 91 1d 00 00       	call   f736 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    d9a5:	c9                   	leave
    d9a6:	c3                   	ret
    d9a7:	90                   	nop

000000000000d9a8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    d9a8:	55                   	push   %rbp
    d9a9:	48 89 e5             	mov    %rsp,%rbp
    d9ac:	53                   	push   %rbx
    d9ad:	48 83 ec 38          	sub    $0x38,%rsp
    d9b1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d9b5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    d9b9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    d9bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d9c1:	48 89 c7             	mov    %rax,%rdi
    d9c4:	e8 93 ff ff ff       	call   d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    d9c9:	48 89 c3             	mov    %rax,%rbx
    d9cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d9d0:	48 89 c7             	mov    %rax,%rdi
    d9d3:	e8 1e d9 ff ff       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    d9d8:	48 29 c3             	sub    %rax,%rbx
    d9db:	48 89 da             	mov    %rbx,%rdx
    d9de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d9e2:	48 39 c2             	cmp    %rax,%rdx
    d9e5:	0f 92 c0             	setb   %al
    d9e8:	84 c0                	test   %al,%al
    d9ea:	74 0c                	je     d9f8 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    d9ec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    d9f0:	48 89 c7             	mov    %rax,%rdi
    d9f3:	e8 58 57 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    d9f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d9fc:	48 89 c7             	mov    %rax,%rdi
    d9ff:	e8 f2 d8 ff ff       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    da04:	48 89 c3             	mov    %rax,%rbx
    da07:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da0b:	48 89 c7             	mov    %rax,%rdi
    da0e:	e8 e3 d8 ff ff       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    da13:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    da17:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    da1b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    da1f:	48 89 d6             	mov    %rdx,%rsi
    da22:	48 89 c7             	mov    %rax,%rdi
    da25:	e8 35 1d 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    da2a:	48 8b 00             	mov    (%rax),%rax
    da2d:	48 01 d8             	add    %rbx,%rax
    da30:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    da34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da38:	48 89 c7             	mov    %rax,%rdi
    da3b:	e8 b6 d8 ff ff       	call   b2f6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    da40:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    da44:	72 12                	jb     da58 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
    da46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da4a:	48 89 c7             	mov    %rax,%rdi
    da4d:	e8 0a ff ff ff       	call   d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    da52:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    da56:	73 0e                	jae    da66 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
    da58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da5c:	48 89 c7             	mov    %rax,%rdi
    da5f:	e8 f8 fe ff ff       	call   d95c <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    da64:	eb 04                	jmp    da6a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
    da66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    da6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da6e:	c9                   	leave
    da6f:	c3                   	ret

000000000000da70 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    da70:	55                   	push   %rbp
    da71:	48 89 e5             	mov    %rsp,%rbp
    da74:	48 83 ec 10          	sub    $0x10,%rsp
    da78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    da80:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    da85:	74 15                	je     da9c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    da87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    da8f:	48 89 d6             	mov    %rdx,%rsi
    da92:	48 89 c7             	mov    %rax,%rdi
    da95:	e8 f0 1c 00 00       	call   f78a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    da9a:	eb 05                	jmp    daa1 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    da9c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    daa1:	c9                   	leave
    daa2:	c3                   	ret

000000000000daa3 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    daa3:	55                   	push   %rbp
    daa4:	48 89 e5             	mov    %rsp,%rbp
    daa7:	48 83 ec 20          	sub    $0x20,%rsp
    daab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    daaf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dab3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    dab7:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    dabb:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dabf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dac3:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    dac7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dacb:	48 89 c7             	mov    %rax,%rdi
    dace:	e8 e1 1c 00 00       	call   f7b4 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    dad3:	c9                   	leave
    dad4:	c3                   	ret
    dad5:	90                   	nop

000000000000dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    dad6:	55                   	push   %rbp
    dad7:	48 89 e5             	mov    %rsp,%rbp
    dada:	48 83 ec 10          	sub    $0x10,%rsp
    dade:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    dae2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dae6:	48 89 c7             	mov    %rax,%rdi
    dae9:	e8 6c 1d 00 00       	call   f85a <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    daee:	48 89 c7             	mov    %rax,%rdi
    daf1:	e8 21 1d 00 00       	call   f817 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    daf6:	c9                   	leave
    daf7:	c3                   	ret

000000000000daf8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    daf8:	55                   	push   %rbp
    daf9:	48 89 e5             	mov    %rsp,%rbp
    dafc:	48 83 ec 20          	sub    $0x20,%rsp
    db00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    db08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    db0c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db14:	48 89 d6             	mov    %rdx,%rsi
    db17:	48 89 c7             	mov    %rax,%rdi
    db1a:	e8 49 1d 00 00       	call   f868 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    db1f:	c9                   	leave
    db20:	c3                   	ret
    db21:	90                   	nop

000000000000db22 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    db22:	55                   	push   %rbp
    db23:	48 89 e5             	mov    %rsp,%rbp
    db26:	53                   	push   %rbx
    db27:	48 83 ec 38          	sub    $0x38,%rsp
    db2b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    db2f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    db33:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    db37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db3b:	48 89 c7             	mov    %rax,%rdi
    db3e:	e8 93 ff ff ff       	call   dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    db43:	48 89 c3             	mov    %rax,%rbx
    db46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db4a:	48 89 c7             	mov    %rax,%rdi
    db4d:	e8 44 da ff ff       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    db52:	48 29 c3             	sub    %rax,%rbx
    db55:	48 89 da             	mov    %rbx,%rdx
    db58:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    db5c:	48 39 c2             	cmp    %rax,%rdx
    db5f:	0f 92 c0             	setb   %al
    db62:	84 c0                	test   %al,%al
    db64:	74 0c                	je     db72 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    db66:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    db6a:	48 89 c7             	mov    %rax,%rdi
    db6d:	e8 de 55 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    db72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db76:	48 89 c7             	mov    %rax,%rdi
    db79:	e8 18 da ff ff       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    db7e:	48 89 c3             	mov    %rax,%rbx
    db81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    db85:	48 89 c7             	mov    %rax,%rdi
    db88:	e8 09 da ff ff       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    db8d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    db91:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    db95:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    db99:	48 89 d6             	mov    %rdx,%rsi
    db9c:	48 89 c7             	mov    %rax,%rdi
    db9f:	e8 bb 1b 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    dba4:	48 8b 00             	mov    (%rax),%rax
    dba7:	48 01 d8             	add    %rbx,%rax
    dbaa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    dbae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbb2:	48 89 c7             	mov    %rax,%rdi
    dbb5:	e8 dc d9 ff ff       	call   b596 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    dbba:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    dbbe:	72 12                	jb     dbd2 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
    dbc0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbc4:	48 89 c7             	mov    %rax,%rdi
    dbc7:	e8 0a ff ff ff       	call   dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    dbcc:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    dbd0:	73 0e                	jae    dbe0 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
    dbd2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dbd6:	48 89 c7             	mov    %rax,%rdi
    dbd9:	e8 f8 fe ff ff       	call   dad6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    dbde:	eb 04                	jmp    dbe4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
    dbe0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    dbe4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dbe8:	c9                   	leave
    dbe9:	c3                   	ret

000000000000dbea <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    dbea:	55                   	push   %rbp
    dbeb:	48 89 e5             	mov    %rsp,%rbp
    dbee:	48 83 ec 10          	sub    $0x10,%rsp
    dbf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dbf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    dbfa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dbff:	74 15                	je     dc16 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    dc01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc05:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc09:	48 89 d6             	mov    %rdx,%rsi
    dc0c:	48 89 c7             	mov    %rax,%rdi
    dc0f:	e8 7d 1c 00 00       	call   f891 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    dc14:	eb 05                	jmp    dc1b <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    dc16:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    dc1b:	c9                   	leave
    dc1c:	c3                   	ret

000000000000dc1d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    dc1d:	55                   	push   %rbp
    dc1e:	48 89 e5             	mov    %rsp,%rbp
    dc21:	48 83 ec 20          	sub    $0x20,%rsp
    dc25:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc29:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dc2d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    dc31:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    dc35:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    dc39:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dc3d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    dc41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc45:	48 89 c7             	mov    %rax,%rdi
    dc48:	e8 6e 1c 00 00       	call   f8bb <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    dc4d:	c9                   	leave
    dc4e:	c3                   	ret

000000000000dc4f <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    dc4f:	55                   	push   %rbp
    dc50:	48 89 e5             	mov    %rsp,%rbp
    dc53:	48 83 ec 20          	sub    $0x20,%rsp
    dc57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    dc5b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    dc62:	ff ff 0f 
    dc65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    dc69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dc6d:	48 89 c7             	mov    %rax,%rdi
    dc70:	e8 a9 1c 00 00       	call   f91e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    dc75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    dc79:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    dc7d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    dc81:	48 89 d6             	mov    %rdx,%rsi
    dc84:	48 89 c7             	mov    %rax,%rdi
    dc87:	e8 17 6d ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    dc8c:	48 8b 00             	mov    (%rax),%rax
      }
    dc8f:	c9                   	leave
    dc90:	c3                   	ret
    dc91:	90                   	nop

000000000000dc92 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    dc92:	55                   	push   %rbp
    dc93:	48 89 e5             	mov    %rsp,%rbp
    dc96:	48 83 ec 10          	sub    $0x10,%rsp
    dc9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    dca2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcaa:	48 89 d6             	mov    %rdx,%rsi
    dcad:	48 89 c7             	mov    %rax,%rdi
    dcb0:	e8 83 1c 00 00       	call   f938 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    dcb5:	90                   	nop
    dcb6:	c9                   	leave
    dcb7:	c3                   	ret

000000000000dcb8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    dcb8:	55                   	push   %rbp
    dcb9:	48 89 e5             	mov    %rsp,%rbp
    dcbc:	48 83 ec 10          	sub    $0x10,%rsp
    dcc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    dcc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcd0:	48 89 d6             	mov    %rdx,%rsi
    dcd3:	48 89 c7             	mov    %rax,%rdi
    dcd6:	e8 b7 ff ff ff       	call   dc92 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    dcdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcdf:	48 89 c7             	mov    %rax,%rdi
    dce2:	e8 61 1c 00 00       	call   f948 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    dce7:	90                   	nop
    dce8:	c9                   	leave
    dce9:	c3                   	ret

000000000000dcea <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    dcea:	55                   	push   %rbp
    dceb:	48 89 e5             	mov    %rsp,%rbp
    dcee:	48 83 ec 10          	sub    $0x10,%rsp
    dcf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    dcfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd02:	48 89 d6             	mov    %rdx,%rsi
    dd05:	48 89 c7             	mov    %rax,%rdi
    dd08:	e8 69 1c 00 00       	call   f976 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    dd0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    dd11:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    dd14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd18:	48 8b 10             	mov    (%rax),%rdx
    dd1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd1f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    dd23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd27:	48 8b 00             	mov    (%rax),%rax
    dd2a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd2e:	48 c1 e2 03          	shl    $0x3,%rdx
    dd32:	48 01 c2             	add    %rax,%rdx
    dd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd39:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    dd3d:	90                   	nop
    dd3e:	c9                   	leave
    dd3f:	c3                   	ret

000000000000dd40 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    dd40:	55                   	push   %rbp
    dd41:	48 89 e5             	mov    %rsp,%rbp
    dd44:	48 83 ec 20          	sub    $0x20,%rsp
    dd48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    dd54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    dd59:	74 17                	je     dd72 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    dd5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd5f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dd63:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dd67:	48 89 ce             	mov    %rcx,%rsi
    dd6a:	48 89 c7             	mov    %rax,%rdi
    dd6d:	e8 37 1c 00 00       	call   f9a9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    dd72:	90                   	nop
    dd73:	c9                   	leave
    dd74:	c3                   	ret

000000000000dd75 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    dd75:	55                   	push   %rbp
    dd76:	48 89 e5             	mov    %rsp,%rbp
    dd79:	48 83 ec 20          	sub    $0x20,%rsp
    dd7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dd81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dd85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    dd89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dd8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd91:	48 89 d6             	mov    %rdx,%rsi
    dd94:	48 89 c7             	mov    %rax,%rdi
    dd97:	e8 3b 1c 00 00       	call   f9d7 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    dd9c:	c9                   	leave
    dd9d:	c3                   	ret

000000000000dd9e <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    dd9e:	55                   	push   %rbp
    dd9f:	48 89 e5             	mov    %rsp,%rbp
    dda2:	48 83 ec 10          	sub    $0x10,%rsp
    dda6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ddae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddb6:	48 89 d6             	mov    %rdx,%rsi
    ddb9:	48 89 c7             	mov    %rax,%rdi
    ddbc:	e8 3f 1c 00 00       	call   fa00 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    ddc1:	90                   	nop
    ddc2:	c9                   	leave
    ddc3:	c3                   	ret

000000000000ddc4 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    ddc4:	55                   	push   %rbp
    ddc5:	48 89 e5             	mov    %rsp,%rbp
    ddc8:	48 83 ec 20          	sub    $0x20,%rsp
    ddcc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    ddd0:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    ddd7:	55 55 05 
    ddda:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    ddde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dde2:	48 89 c7             	mov    %rax,%rdi
    dde5:	e8 25 1c 00 00       	call   fa0f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    ddea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    ddee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    ddf2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ddf6:	48 89 d6             	mov    %rdx,%rsi
    ddf9:	48 89 c7             	mov    %rax,%rdi
    ddfc:	e8 a2 6b ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    de01:	48 8b 00             	mov    (%rax),%rax
      }
    de04:	c9                   	leave
    de05:	c3                   	ret

000000000000de06 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    de06:	55                   	push   %rbp
    de07:	48 89 e5             	mov    %rsp,%rbp
    de0a:	48 83 ec 10          	sub    $0x10,%rsp
    de0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    de16:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de1e:	48 89 d6             	mov    %rdx,%rsi
    de21:	48 89 c7             	mov    %rax,%rdi
    de24:	e8 01 1c 00 00       	call   fa2a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    de29:	90                   	nop
    de2a:	c9                   	leave
    de2b:	c3                   	ret

000000000000de2c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    de2c:	55                   	push   %rbp
    de2d:	48 89 e5             	mov    %rsp,%rbp
    de30:	48 83 ec 10          	sub    $0x10,%rsp
    de34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    de3c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de44:	48 89 d6             	mov    %rdx,%rsi
    de47:	48 89 c7             	mov    %rax,%rdi
    de4a:	e8 b7 ff ff ff       	call   de06 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    de4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de53:	48 89 c7             	mov    %rax,%rdi
    de56:	e8 df 1b 00 00       	call   fa3a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    de5b:	90                   	nop
    de5c:	c9                   	leave
    de5d:	c3                   	ret

000000000000de5e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    de5e:	55                   	push   %rbp
    de5f:	48 89 e5             	mov    %rsp,%rbp
    de62:	48 83 ec 10          	sub    $0x10,%rsp
    de66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    de6e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    de72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de76:	48 89 d6             	mov    %rdx,%rsi
    de79:	48 89 c7             	mov    %rax,%rdi
    de7c:	e8 e7 1b 00 00       	call   fa68 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    de81:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    de85:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    de88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de8c:	48 8b 10             	mov    (%rax),%rdx
    de8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de93:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    de97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de9b:	48 8b 08             	mov    (%rax),%rcx
    de9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dea2:	48 89 d0             	mov    %rdx,%rax
    dea5:	48 01 c0             	add    %rax,%rax
    dea8:	48 01 d0             	add    %rdx,%rax
    deab:	48 c1 e0 03          	shl    $0x3,%rax
    deaf:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    deb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    debb:	90                   	nop
    debc:	c9                   	leave
    debd:	c3                   	ret

000000000000debe <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    debe:	55                   	push   %rbp
    debf:	48 89 e5             	mov    %rsp,%rbp
    dec2:	48 83 ec 20          	sub    $0x20,%rsp
    dec6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dece:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ded2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ded7:	74 17                	je     def0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ded9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dedd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dee1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dee5:	48 89 ce             	mov    %rcx,%rsi
    dee8:	48 89 c7             	mov    %rax,%rdi
    deeb:	e8 ab 1b 00 00       	call   fa9b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    def0:	90                   	nop
    def1:	c9                   	leave
    def2:	c3                   	ret

000000000000def3 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    def3:	55                   	push   %rbp
    def4:	48 89 e5             	mov    %rsp,%rbp
    def7:	48 83 ec 20          	sub    $0x20,%rsp
    defb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    df03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    df07:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    df0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df0f:	48 89 d6             	mov    %rdx,%rsi
    df12:	48 89 c7             	mov    %rax,%rdi
    df15:	e8 af 1b 00 00       	call   fac9 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    df1a:	c9                   	leave
    df1b:	c3                   	ret

000000000000df1c <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    df1c:	55                   	push   %rbp
    df1d:	48 89 e5             	mov    %rsp,%rbp
    df20:	48 83 ec 10          	sub    $0x10,%rsp
    df24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    df2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    df30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df34:	48 89 d6             	mov    %rdx,%rsi
    df37:	48 89 c7             	mov    %rax,%rdi
    df3a:	e8 b3 1b 00 00       	call   faf2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    df3f:	90                   	nop
    df40:	c9                   	leave
    df41:	c3                   	ret

000000000000df42 <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    df42:	55                   	push   %rbp
    df43:	48 89 e5             	mov    %rsp,%rbp
    df46:	53                   	push   %rbx
    df47:	48 83 ec 18          	sub    $0x18,%rsp
    df4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    df4f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    df53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    df57:	48 89 c7             	mov    %rax,%rdi
    df5a:	e8 43 dd ff ff       	call   bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    df5f:	48 89 c3             	mov    %rax,%rbx
    df62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df66:	48 89 c7             	mov    %rax,%rdi
    df69:	e8 93 1b 00 00       	call   fb01 <_ZSt11__addressofIjEPT_RS0_>
    df6e:	48 89 de             	mov    %rbx,%rsi
    df71:	48 89 c7             	mov    %rax,%rdi
    df74:	e8 96 1b 00 00       	call   fb0f <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>
	  this->_M_engaged = true;
    df79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df7d:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
    df81:	90                   	nop
    df82:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df86:	c9                   	leave
    df87:	c3                   	ret

000000000000df88 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>:
    df88:	55                   	push   %rbp
    df89:	48 89 e5             	mov    %rsp,%rbp
    df8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df90:	90                   	nop
    df91:	5d                   	pop    %rbp
    df92:	c3                   	ret

000000000000df93 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    df93:	55                   	push   %rbp
    df94:	48 89 e5             	mov    %rsp,%rbp
    df97:	48 83 ec 20          	sub    $0x20,%rsp
    df9b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    df9f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dfa3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    dfa7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    dfab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    dfaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfb3:	48 89 ce             	mov    %rcx,%rsi
    dfb6:	48 89 c7             	mov    %rax,%rdi
    dfb9:	e8 8e 1b 00 00       	call   fb4c <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>
    dfbe:	90                   	nop
    dfbf:	c9                   	leave
    dfc0:	c3                   	ret

000000000000dfc1 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    dfc1:	55                   	push   %rbp
    dfc2:	48 89 e5             	mov    %rsp,%rbp
    dfc5:	48 83 ec 10          	sub    $0x10,%rsp
    dfc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dfcd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    dfd1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dfd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfd9:	48 89 d6             	mov    %rdx,%rsi
    dfdc:	48 89 c7             	mov    %rax,%rdi
    dfdf:	e8 a2 1b 00 00       	call   fb86 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>
    }
    dfe4:	90                   	nop
    dfe5:	c9                   	leave
    dfe6:	c3                   	ret
    dfe7:	90                   	nop

000000000000dfe8 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    dfe8:	55                   	push   %rbp
    dfe9:	48 89 e5             	mov    %rsp,%rbp
    dfec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    dff4:	90                   	nop
    dff5:	5d                   	pop    %rbp
    dff6:	c3                   	ret
    dff7:	90                   	nop

000000000000dff8 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
    dff8:	55                   	push   %rbp
    dff9:	48 89 e5             	mov    %rsp,%rbp
    dffc:	48 83 ec 10          	sub    $0x10,%rsp
    e000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e008:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e00c:	48 89 c7             	mov    %rax,%rdi
    e00f:	e8 82 1b 00 00       	call   fb96 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>
    e014:	90                   	nop
    e015:	c9                   	leave
    e016:	c3                   	ret
    e017:	90                   	nop

000000000000e018 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
    e018:	55                   	push   %rbp
    e019:	48 89 e5             	mov    %rsp,%rbp
    e01c:	48 83 ec 20          	sub    $0x20,%rsp
    e020:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e024:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e028:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
    e02c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e030:	48 89 c7             	mov    %rax,%rdi
    e033:	e8 69 1b 00 00       	call   fba1 <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>
    e038:	48 89 c2             	mov    %rax,%rdx
    e03b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e03f:	48 89 d6             	mov    %rdx,%rsi
    e042:	48 89 c7             	mov    %rax,%rdi
    e045:	e8 66 1b 00 00       	call   fbb0 <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>
    e04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e04e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e052:	48 89 d6             	mov    %rdx,%rsi
    e055:	48 89 c7             	mov    %rax,%rdi
    e058:	e8 79 1b 00 00       	call   fbd6 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>
    e05d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e061:	48 83 c0 08          	add    $0x8,%rax
    e065:	48 89 c7             	mov    %rax,%rdi
    e068:	e8 3d a7 ff ff       	call   87aa <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    e06d:	90                   	nop
    e06e:	c9                   	leave
    e06f:	c3                   	ret

000000000000e070 <_ZNKSt16initializer_listIjE4sizeEv>:
      size() const noexcept { return _M_len; }
    e070:	55                   	push   %rbp
    e071:	48 89 e5             	mov    %rsp,%rbp
    e074:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e078:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e07c:	48 8b 40 08          	mov    0x8(%rax),%rax
    e080:	5d                   	pop    %rbp
    e081:	c3                   	ret

000000000000e082 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>:
	_Alloc_node(_Rb_tree& __t)
    e082:	55                   	push   %rbp
    e083:	48 89 e5             	mov    %rsp,%rbp
    e086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e08a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__t) { }
    e08e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e092:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e096:	48 89 10             	mov    %rdx,(%rax)
    e099:	90                   	nop
    e09a:	5d                   	pop    %rbp
    e09b:	c3                   	ret

000000000000e09c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    e09c:	55                   	push   %rbp
    e09d:	48 89 e5             	mov    %rsp,%rbp
    e0a0:	48 83 ec 20          	sub    $0x20,%rsp
    e0a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    e0a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e0ac:	48 8d 50 08          	lea    0x8(%rax),%rdx
    e0b0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e0b4:	48 89 d6             	mov    %rdx,%rsi
    e0b7:	48 89 c7             	mov    %rax,%rdi
    e0ba:	e8 27 1b 00 00       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    e0bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0c3:	c9                   	leave
    e0c4:	c3                   	ret
    e0c5:	90                   	nop

000000000000e0c6 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
    e0c6:	55                   	push   %rbp
    e0c7:	48 89 e5             	mov    %rsp,%rbp
    e0ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e0ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
    e0d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e0d6:	48 8b 10             	mov    (%rax),%rdx
    e0d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0dd:	48 89 10             	mov    %rdx,(%rax)
    e0e0:	90                   	nop
    e0e1:	5d                   	pop    %rbp
    e0e2:	c3                   	ret
    e0e3:	90                   	nop

000000000000e0e4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    e0e4:	55                   	push   %rbp
    e0e5:	48 89 e5             	mov    %rsp,%rbp
    e0e8:	48 83 ec 40          	sub    $0x40,%rsp
    e0ec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e0f0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e0f4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    e0f8:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
    e0fc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e100:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    e104:	48 89 d6             	mov    %rdx,%rsi
    e107:	48 89 c7             	mov    %rax,%rdi
    e10a:	e8 3f 1f 00 00       	call   1004e <_ZNKSt9_IdentityIjEclERKj>
    e10f:	48 89 c2             	mov    %rax,%rdx
    e112:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    e116:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e11a:	48 89 ce             	mov    %rcx,%rsi
    e11d:	48 89 c7             	mov    %rax,%rdi
    e120:	e8 db 1a 00 00       	call   fc00 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>
    e125:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e129:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__res.second)
    e12d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e131:	48 85 c0             	test   %rax,%rax
    e134:	74 2c                	je     e162 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x7e>
	return _M_insert_(__res.first, __res.second,
    e136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e13a:	48 89 c7             	mov    %rax,%rdi
    e13d:	e8 1e 1f 00 00       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
    e142:	48 89 c1             	mov    %rax,%rcx
    e145:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e149:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    e14d:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
    e151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e155:	49 89 f8             	mov    %rdi,%r8
    e158:	48 89 c7             	mov    %rax,%rdi
    e15b:	e8 0e 1f 00 00       	call   1006e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>
			  __node_gen);
    e160:	eb 17                	jmp    e179 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x95>
      return iterator(__res.first);
    e162:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e166:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e16a:	48 89 d6             	mov    %rdx,%rsi
    e16d:	48 89 c7             	mov    %rax,%rdi
    e170:	e8 71 1a 00 00       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
    e175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    e179:	c9                   	leave
    e17a:	c3                   	ret
    e17b:	90                   	nop

000000000000e17c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e17c:	55                   	push   %rbp
    e17d:	48 89 e5             	mov    %rsp,%rbp
    e180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e184:	90                   	nop
    e185:	5d                   	pop    %rbp
    e186:	c3                   	ret

000000000000e187 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    e187:	55                   	push   %rbp
    e188:	48 89 e5             	mov    %rsp,%rbp
    e18b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
    e18f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e193:	48 8b 40 18          	mov    0x18(%rax),%rax
    e197:	5d                   	pop    %rbp
    e198:	c3                   	ret

000000000000e199 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    e199:	55                   	push   %rbp
    e19a:	48 89 e5             	mov    %rsp,%rbp
    e19d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
    e1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a5:	48 8b 40 10          	mov    0x10(%rax),%rax
    e1a9:	5d                   	pop    %rbp
    e1aa:	c3                   	ret
    e1ab:	90                   	nop

000000000000e1ac <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    e1ac:	55                   	push   %rbp
    e1ad:	48 89 e5             	mov    %rsp,%rbp
    e1b0:	48 83 ec 10          	sub    $0x10,%rsp
    e1b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e1b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
    e1bc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1c4:	48 89 d6             	mov    %rdx,%rsi
    e1c7:	48 89 c7             	mov    %rax,%rdi
    e1ca:	e8 8f 1f 00 00       	call   1015e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>
	_M_put_node(__p);
    e1cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e1d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1d7:	48 89 d6             	mov    %rdx,%rsi
    e1da:	48 89 c7             	mov    %rax,%rdi
    e1dd:	e8 ba 1f 00 00       	call   1019c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>
      }
    e1e2:	90                   	nop
    e1e3:	c9                   	leave
    e1e4:	c3                   	ret
    e1e5:	90                   	nop

000000000000e1e6 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
    e1e6:	55                   	push   %rbp
    e1e7:	48 89 e5             	mov    %rsp,%rbp
    e1ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    e1ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1f2:	48 8b 40 10          	mov    0x10(%rax),%rax
    e1f6:	5d                   	pop    %rbp
    e1f7:	c3                   	ret

000000000000e1f8 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    e1f8:	55                   	push   %rbp
    e1f9:	48 89 e5             	mov    %rsp,%rbp
    e1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e200:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    e204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e208:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e20c:	48 89 10             	mov    %rdx,(%rax)
    e20f:	90                   	nop
    e210:	5d                   	pop    %rbp
    e211:	c3                   	ret

000000000000e212 <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
    e212:	55                   	push   %rbp
    e213:	48 89 e5             	mov    %rsp,%rbp
    e216:	48 83 ec 10          	sub    $0x10,%rsp
    e21a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
    e21e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e222:	48 89 c7             	mov    %rax,%rdi
    e225:	e8 a8 1f 00 00       	call   101d2 <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
    e22a:	c9                   	leave
    e22b:	c3                   	ret

000000000000e22c <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    e22c:	55                   	push   %rbp
    e22d:	48 89 e5             	mov    %rsp,%rbp
    e230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    e234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e238:	5d                   	pop    %rbp
    e239:	c3                   	ret

000000000000e23a <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    e23a:	55                   	push   %rbp
    e23b:	48 89 e5             	mov    %rsp,%rbp
    e23e:	53                   	push   %rbx
    e23f:	48 83 ec 28          	sub    $0x28,%rsp
    e243:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e247:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e24b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    e24f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e253:	48 89 c6             	mov    %rax,%rsi
    e256:	bf 28 00 00 00       	mov    $0x28,%edi
    e25b:	e8 d7 a4 ff ff       	call   8737 <_ZnwmPv>
    e260:	48 89 c3             	mov    %rax,%rbx
    e263:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e267:	48 89 c7             	mov    %rax,%rdi
    e26a:	e8 bd ff ff ff       	call   e22c <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    e26f:	48 8b 30             	mov    (%rax),%rsi
    e272:	48 8b 78 08          	mov    0x8(%rax),%rdi
    e276:	48 89 33             	mov    %rsi,(%rbx)
    e279:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
    e27d:	48 8b 70 10          	mov    0x10(%rax),%rsi
    e281:	48 8b 78 18          	mov    0x18(%rax),%rdi
    e285:	48 89 73 10          	mov    %rsi,0x10(%rbx)
    e289:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
    e28d:	48 8b 40 20          	mov    0x20(%rax),%rax
    e291:	48 89 43 20          	mov    %rax,0x20(%rbx)
    e295:	90                   	nop
    e296:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e29a:	c9                   	leave
    e29b:	c3                   	ret

000000000000e29c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    e29c:	55                   	push   %rbp
    e29d:	48 89 e5             	mov    %rsp,%rbp
    e2a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e2a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    e2a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e2ac:	48 8b 10             	mov    (%rax),%rdx
    e2af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2b3:	48 89 10             	mov    %rdx,(%rax)
    e2b6:	90                   	nop
    e2b7:	5d                   	pop    %rbp
    e2b8:	c3                   	ret
    e2b9:	90                   	nop

000000000000e2ba <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    e2ba:	55                   	push   %rbp
    e2bb:	48 89 e5             	mov    %rsp,%rbp
    e2be:	53                   	push   %rbx
    e2bf:	48 83 ec 38          	sub    $0x38,%rsp
    e2c3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e2c7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e2cb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    e2cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2d3:	48 89 c7             	mov    %rax,%rdi
    e2d6:	e8 05 1f 00 00       	call   101e0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    e2db:	48 89 c3             	mov    %rax,%rbx
    e2de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e2e2:	48 89 c7             	mov    %rax,%rdi
    e2e5:	e8 e6 bb ff ff       	call   9ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    e2ea:	48 29 c3             	sub    %rax,%rbx
    e2ed:	48 89 da             	mov    %rbx,%rdx
    e2f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e2f4:	48 39 c2             	cmp    %rax,%rdx
    e2f7:	0f 92 c0             	setb   %al
    e2fa:	84 c0                	test   %al,%al
    e2fc:	74 0c                	je     e30a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    e2fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e302:	48 89 c7             	mov    %rax,%rdi
    e305:	e8 46 4e ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    e30a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e30e:	48 89 c7             	mov    %rax,%rdi
    e311:	e8 ba bb ff ff       	call   9ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    e316:	48 89 c3             	mov    %rax,%rbx
    e319:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e31d:	48 89 c7             	mov    %rax,%rdi
    e320:	e8 ab bb ff ff       	call   9ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    e325:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e329:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e32d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e331:	48 89 d6             	mov    %rdx,%rsi
    e334:	48 89 c7             	mov    %rax,%rdi
    e337:	e8 23 14 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    e33c:	48 8b 00             	mov    (%rax),%rax
    e33f:	48 01 d8             	add    %rbx,%rax
    e342:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    e346:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e34a:	48 89 c7             	mov    %rax,%rdi
    e34d:	e8 7e bb ff ff       	call   9ed0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    e352:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    e356:	72 12                	jb     e36a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xb0>
    e358:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e35c:	48 89 c7             	mov    %rax,%rdi
    e35f:	e8 7c 1e 00 00       	call   101e0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    e364:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    e368:	73 0e                	jae    e378 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xbe>
    e36a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e36e:	48 89 c7             	mov    %rax,%rdi
    e371:	e8 6a 1e 00 00       	call   101e0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
    e376:	eb 04                	jmp    e37c <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xc2>
    e378:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    e37c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e380:	c9                   	leave
    e381:	c3                   	ret

000000000000e382 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    e382:	55                   	push   %rbp
    e383:	48 89 e5             	mov    %rsp,%rbp
    e386:	48 83 ec 20          	sub    $0x20,%rsp
    e38a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    e38e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e392:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e396:	48 89 d6             	mov    %rdx,%rsi
    e399:	48 89 c7             	mov    %rax,%rdi
    e39c:	e8 fb fe ff ff       	call   e29c <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    e3a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e3a5:	c9                   	leave
    e3a6:	c3                   	ret

000000000000e3a7 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    e3a7:	55                   	push   %rbp
    e3a8:	48 89 e5             	mov    %rsp,%rbp
    e3ab:	53                   	push   %rbx
    e3ac:	48 83 ec 18          	sub    $0x18,%rsp
    e3b0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e3b4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
    e3b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3bc:	48 89 c7             	mov    %rax,%rdi
    e3bf:	e8 96 00 00 00       	call   e45a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    e3c4:	48 8b 18             	mov    (%rax),%rbx
    e3c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    e3cb:	48 89 c7             	mov    %rax,%rdi
    e3ce:	e8 87 00 00 00       	call   e45a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    e3d3:	48 8b 00             	mov    (%rax),%rax
    e3d6:	48 29 c3             	sub    %rax,%rbx
    e3d9:	48 89 da             	mov    %rbx,%rdx
    e3dc:	48 c1 fa 03          	sar    $0x3,%rdx
    e3e0:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    e3e7:	cc cc cc 
    e3ea:	48 0f af c2          	imul   %rdx,%rax
    e3ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e3f2:	c9                   	leave
    e3f3:	c3                   	ret

000000000000e3f4 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e3f4:	55                   	push   %rbp
    e3f5:	48 89 e5             	mov    %rsp,%rbp
    e3f8:	48 83 ec 10          	sub    $0x10,%rsp
    e3fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e400:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e404:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e409:	74 15                	je     e420 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
    e40b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e40f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e413:	48 89 d6             	mov    %rdx,%rsi
    e416:	48 89 c7             	mov    %rax,%rdi
    e419:	e8 e4 1d 00 00       	call   10202 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>
    e41e:	eb 05                	jmp    e425 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x31>
    e420:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e425:	c9                   	leave
    e426:	c3                   	ret

000000000000e427 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    e427:	55                   	push   %rbp
    e428:	48 89 e5             	mov    %rsp,%rbp
    e42b:	48 83 ec 20          	sub    $0x20,%rsp
    e42f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e433:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e437:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e43b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    e43f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e443:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e447:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    e44b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e44f:	48 89 c7             	mov    %rax,%rdi
    e452:	e8 d5 1d 00 00       	call   1022c <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
    e457:	c9                   	leave
    e458:	c3                   	ret
    e459:	90                   	nop

000000000000e45a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    e45a:	55                   	push   %rbp
    e45b:	48 89 e5             	mov    %rsp,%rbp
    e45e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    e462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e466:	5d                   	pop    %rbp
    e467:	c3                   	ret

000000000000e468 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() const noexcept
    e468:	55                   	push   %rbp
    e469:	48 89 e5             	mov    %rsp,%rbp
    e46c:	48 83 ec 10          	sub    $0x10,%rsp
    e470:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    e474:	e8 99 a2 ff ff       	call   8712 <_ZSt23__is_constant_evaluatedv>
    e479:	84 c0                	test   %al,%al
    e47b:	74 1a                	je     e497 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    e47d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e481:	48 89 c7             	mov    %rax,%rdi
    e484:	e8 0f a6 ff ff       	call   8a98 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    e489:	83 f0 01             	xor    $0x1,%eax
    e48c:	84 c0                	test   %al,%al
    e48e:	74 07                	je     e497 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    e490:	b8 01 00 00 00       	mov    $0x1,%eax
    e495:	eb 05                	jmp    e49c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    e497:	b8 00 00 00 00       	mov    $0x0,%eax
    e49c:	84 c0                	test   %al,%al
	return static_cast<const _Dp*>(this)->_M_payload._M_get();
    e49e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4a2:	48 89 c7             	mov    %rax,%rdi
    e4a5:	e8 e6 1d 00 00       	call   10290 <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>
      }
    e4aa:	c9                   	leave
    e4ab:	c3                   	ret

000000000000e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    e4ac:	55                   	push   %rbp
    e4ad:	48 89 e5             	mov    %rsp,%rbp
    e4b0:	48 83 ec 10          	sub    $0x10,%rsp
    e4b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    e4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4bc:	48 89 c7             	mov    %rax,%rdi
    e4bf:	e8 1c 1e 00 00       	call   102e0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    e4c4:	48 89 c7             	mov    %rax,%rdi
    e4c7:	e8 d2 1d 00 00       	call   1029e <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    e4cc:	c9                   	leave
    e4cd:	c3                   	ret

000000000000e4ce <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    e4ce:	55                   	push   %rbp
    e4cf:	48 89 e5             	mov    %rsp,%rbp
    e4d2:	48 83 ec 20          	sub    $0x20,%rsp
    e4d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e4de:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    e4e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e4e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4ea:	48 89 d6             	mov    %rdx,%rsi
    e4ed:	48 89 c7             	mov    %rax,%rdi
    e4f0:	e8 f9 1d 00 00       	call   102ee <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    e4f5:	c9                   	leave
    e4f6:	c3                   	ret
    e4f7:	90                   	nop

000000000000e4f8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    e4f8:	55                   	push   %rbp
    e4f9:	48 89 e5             	mov    %rsp,%rbp
    e4fc:	53                   	push   %rbx
    e4fd:	48 83 ec 38          	sub    $0x38,%rsp
    e501:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e505:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e509:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    e50d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e511:	48 89 c7             	mov    %rax,%rdi
    e514:	e8 93 ff ff ff       	call   e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    e519:	48 89 c3             	mov    %rax,%rbx
    e51c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e520:	48 89 c7             	mov    %rax,%rdi
    e523:	e8 0e bd ff ff       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e528:	48 29 c3             	sub    %rax,%rbx
    e52b:	48 89 da             	mov    %rbx,%rdx
    e52e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e532:	48 39 c2             	cmp    %rax,%rdx
    e535:	0f 92 c0             	setb   %al
    e538:	84 c0                	test   %al,%al
    e53a:	74 0c                	je     e548 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    e53c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e540:	48 89 c7             	mov    %rax,%rdi
    e543:	e8 08 4c ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    e548:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e54c:	48 89 c7             	mov    %rax,%rdi
    e54f:	e8 e2 bc ff ff       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e554:	48 89 c3             	mov    %rax,%rbx
    e557:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e55b:	48 89 c7             	mov    %rax,%rdi
    e55e:	e8 d3 bc ff ff       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e563:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e567:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e56b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e56f:	48 89 d6             	mov    %rdx,%rsi
    e572:	48 89 c7             	mov    %rax,%rdi
    e575:	e8 e5 11 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    e57a:	48 8b 00             	mov    (%rax),%rax
    e57d:	48 01 d8             	add    %rbx,%rax
    e580:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    e584:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e588:	48 89 c7             	mov    %rax,%rdi
    e58b:	e8 a6 bc ff ff       	call   a236 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    e590:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    e594:	72 12                	jb     e5a8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
    e596:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e59a:	48 89 c7             	mov    %rax,%rdi
    e59d:	e8 0a ff ff ff       	call   e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    e5a2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    e5a6:	73 0e                	jae    e5b6 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
    e5a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e5ac:	48 89 c7             	mov    %rax,%rdi
    e5af:	e8 f8 fe ff ff       	call   e4ac <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
    e5b4:	eb 04                	jmp    e5ba <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
    e5b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    e5ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e5be:	c9                   	leave
    e5bf:	c3                   	ret

000000000000e5c0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e5c0:	55                   	push   %rbp
    e5c1:	48 89 e5             	mov    %rsp,%rbp
    e5c4:	48 83 ec 10          	sub    $0x10,%rsp
    e5c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e5d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e5d5:	74 15                	je     e5ec <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    e5d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e5db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e5df:	48 89 d6             	mov    %rdx,%rsi
    e5e2:	48 89 c7             	mov    %rax,%rdi
    e5e5:	e8 2d 1d 00 00       	call   10317 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    e5ea:	eb 05                	jmp    e5f1 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    e5ec:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e5f1:	c9                   	leave
    e5f2:	c3                   	ret

000000000000e5f3 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    e5f3:	55                   	push   %rbp
    e5f4:	48 89 e5             	mov    %rsp,%rbp
    e5f7:	48 83 ec 20          	sub    $0x20,%rsp
    e5fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e603:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e607:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    e60b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e60f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e613:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    e617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e61b:	48 89 c7             	mov    %rax,%rdi
    e61e:	e8 1e 1d 00 00       	call   10341 <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    e623:	c9                   	leave
    e624:	c3                   	ret
    e625:	90                   	nop

000000000000e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    e626:	55                   	push   %rbp
    e627:	48 89 e5             	mov    %rsp,%rbp
    e62a:	48 83 ec 10          	sub    $0x10,%rsp
    e62e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    e632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e636:	48 89 c7             	mov    %rax,%rdi
    e639:	e8 a8 1d 00 00       	call   103e6 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    e63e:	48 89 c7             	mov    %rax,%rdi
    e641:	e8 5e 1d 00 00       	call   103a4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
    e646:	c9                   	leave
    e647:	c3                   	ret

000000000000e648 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    e648:	55                   	push   %rbp
    e649:	48 89 e5             	mov    %rsp,%rbp
    e64c:	48 83 ec 20          	sub    $0x20,%rsp
    e650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e658:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    e65c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e664:	48 89 d6             	mov    %rdx,%rsi
    e667:	48 89 c7             	mov    %rax,%rdi
    e66a:	e8 85 1d 00 00       	call   103f4 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
    e66f:	c9                   	leave
    e670:	c3                   	ret
    e671:	90                   	nop

000000000000e672 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    e672:	55                   	push   %rbp
    e673:	48 89 e5             	mov    %rsp,%rbp
    e676:	53                   	push   %rbx
    e677:	48 83 ec 38          	sub    $0x38,%rsp
    e67b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e67f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e683:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    e687:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e68b:	48 89 c7             	mov    %rax,%rdi
    e68e:	e8 93 ff ff ff       	call   e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    e693:	48 89 c3             	mov    %rax,%rbx
    e696:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e69a:	48 89 c7             	mov    %rax,%rdi
    e69d:	e8 72 bf ff ff       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e6a2:	48 29 c3             	sub    %rax,%rbx
    e6a5:	48 89 da             	mov    %rbx,%rdx
    e6a8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e6ac:	48 39 c2             	cmp    %rax,%rdx
    e6af:	0f 92 c0             	setb   %al
    e6b2:	84 c0                	test   %al,%al
    e6b4:	74 0c                	je     e6c2 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    e6b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e6ba:	48 89 c7             	mov    %rax,%rdi
    e6bd:	e8 8e 4a ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    e6c2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6c6:	48 89 c7             	mov    %rax,%rdi
    e6c9:	e8 46 bf ff ff       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e6ce:	48 89 c3             	mov    %rax,%rbx
    e6d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e6d5:	48 89 c7             	mov    %rax,%rdi
    e6d8:	e8 37 bf ff ff       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e6dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    e6e1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    e6e5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e6e9:	48 89 d6             	mov    %rdx,%rsi
    e6ec:	48 89 c7             	mov    %rax,%rdi
    e6ef:	e8 6b 10 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    e6f4:	48 8b 00             	mov    (%rax),%rax
    e6f7:	48 01 d8             	add    %rbx,%rax
    e6fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    e6fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e702:	48 89 c7             	mov    %rax,%rdi
    e705:	e8 0a bf ff ff       	call   a614 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    e70a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    e70e:	72 12                	jb     e722 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
    e710:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e714:	48 89 c7             	mov    %rax,%rdi
    e717:	e8 0a ff ff ff       	call   e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    e71c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    e720:	73 0e                	jae    e730 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
    e722:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e726:	48 89 c7             	mov    %rax,%rdi
    e729:	e8 f8 fe ff ff       	call   e626 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
    e72e:	eb 04                	jmp    e734 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
    e730:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    e734:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e738:	c9                   	leave
    e739:	c3                   	ret

000000000000e73a <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e73a:	55                   	push   %rbp
    e73b:	48 89 e5             	mov    %rsp,%rbp
    e73e:	48 83 ec 10          	sub    $0x10,%rsp
    e742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e746:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e74a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e74f:	74 15                	je     e766 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
    e751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e755:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e759:	48 89 d6             	mov    %rdx,%rsi
    e75c:	48 89 c7             	mov    %rax,%rdi
    e75f:	e8 b9 1c 00 00       	call   1041d <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
    e764:	eb 05                	jmp    e76b <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
    e766:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    e76b:	c9                   	leave
    e76c:	c3                   	ret

000000000000e76d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    e76d:	55                   	push   %rbp
    e76e:	48 89 e5             	mov    %rsp,%rbp
    e771:	48 83 ec 20          	sub    $0x20,%rsp
    e775:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e779:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e77d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    e781:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    e785:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    e789:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e78d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    e791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e795:	48 89 c7             	mov    %rax,%rdi
    e798:	e8 aa 1c 00 00       	call   10447 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    e79d:	c9                   	leave
    e79e:	c3                   	ret

000000000000e79f <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    e79f:	55                   	push   %rbp
    e7a0:	48 89 e5             	mov    %rsp,%rbp
    e7a3:	48 83 ec 20          	sub    $0x20,%rsp
    e7a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    e7ab:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    e7b2:	ff ff 7f 
    e7b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    e7b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e7bd:	48 89 c7             	mov    %rax,%rdi
    e7c0:	e8 e5 1c 00 00       	call   104aa <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    e7c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    e7c9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    e7cd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    e7d1:	48 89 d6             	mov    %rdx,%rsi
    e7d4:	48 89 c7             	mov    %rax,%rdi
    e7d7:	e8 c7 61 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    e7dc:	48 8b 00             	mov    (%rax),%rax
      }
    e7df:	c9                   	leave
    e7e0:	c3                   	ret
    e7e1:	90                   	nop

000000000000e7e2 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    e7e2:	55                   	push   %rbp
    e7e3:	48 89 e5             	mov    %rsp,%rbp
    e7e6:	48 83 ec 10          	sub    $0x10,%rsp
    e7ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    e7f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e7f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7fa:	48 89 d6             	mov    %rdx,%rsi
    e7fd:	48 89 c7             	mov    %rax,%rdi
    e800:	e8 9b 4d ff ff       	call   35a0 <_ZNSaIcEC2ERKS_@plt>
    e805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e809:	48 89 c7             	mov    %rax,%rdi
    e80c:	e8 b3 1c 00 00       	call   104c4 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    e811:	90                   	nop
    e812:	c9                   	leave
    e813:	c3                   	ret

000000000000e814 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    e814:	55                   	push   %rbp
    e815:	48 89 e5             	mov    %rsp,%rbp
    e818:	48 83 ec 10          	sub    $0x10,%rsp
    e81c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e820:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    e824:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e82c:	48 89 d6             	mov    %rdx,%rsi
    e82f:	48 89 c7             	mov    %rax,%rdi
    e832:	e8 bb 1c 00 00       	call   104f2 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    e837:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    e83b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    e83e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e842:	48 8b 10             	mov    (%rax),%rdx
    e845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e849:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    e84d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e851:	48 8b 10             	mov    (%rax),%rdx
    e854:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e858:	48 01 c2             	add    %rax,%rdx
    e85b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e85f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    e863:	90                   	nop
    e864:	c9                   	leave
    e865:	c3                   	ret

000000000000e866 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    e866:	55                   	push   %rbp
    e867:	48 89 e5             	mov    %rsp,%rbp
    e86a:	48 83 ec 20          	sub    $0x20,%rsp
    e86e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e872:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e876:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    e87a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e87e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e882:	48 89 d6             	mov    %rdx,%rsi
    e885:	48 89 c7             	mov    %rax,%rdi
    e888:	e8 98 1c 00 00       	call   10525 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    e88d:	c9                   	leave
    e88e:	c3                   	ret

000000000000e88f <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    e88f:	55                   	push   %rbp
    e890:	48 89 e5             	mov    %rsp,%rbp
    e893:	48 83 ec 10          	sub    $0x10,%rsp
    e897:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e89b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    e89f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8a7:	48 89 d6             	mov    %rdx,%rsi
    e8aa:	48 89 c7             	mov    %rax,%rdi
    e8ad:	e8 9c 1c 00 00       	call   1054e <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    e8b2:	90                   	nop
    e8b3:	c9                   	leave
    e8b4:	c3                   	ret

000000000000e8b5 <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    e8b5:	55                   	push   %rbp
    e8b6:	48 89 e5             	mov    %rsp,%rbp
    e8b9:	48 83 ec 20          	sub    $0x20,%rsp
    e8bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8c5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    e8c9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e8cd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e8d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8d5:	48 89 ce             	mov    %rcx,%rsi
    e8d8:	48 89 c7             	mov    %rax,%rdi
    e8db:	e8 7e 1c 00 00       	call   1055e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    e8e0:	90                   	nop
    e8e1:	c9                   	leave
    e8e2:	c3                   	ret
    e8e3:	90                   	nop

000000000000e8e4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    e8e4:	55                   	push   %rbp
    e8e5:	48 89 e5             	mov    %rsp,%rbp
    e8e8:	48 83 ec 10          	sub    $0x10,%rsp
    e8ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    e8f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8fc:	48 89 d6             	mov    %rdx,%rsi
    e8ff:	48 89 c7             	mov    %rax,%rdi
    e902:	e8 81 1c 00 00       	call   10588 <_ZNSaI14VkDynamicStateEC1ERKS0_>
    e907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e90b:	48 89 c7             	mov    %rax,%rdi
    e90e:	e8 9b 1c 00 00       	call   105ae <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    e913:	90                   	nop
    e914:	c9                   	leave
    e915:	c3                   	ret

000000000000e916 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    e916:	55                   	push   %rbp
    e917:	48 89 e5             	mov    %rsp,%rbp
    e91a:	48 83 ec 20          	sub    $0x20,%rsp
    e91e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e922:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e926:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e92a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e92f:	74 17                	je     e948 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e931:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e935:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e939:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e93d:	48 89 ce             	mov    %rcx,%rsi
    e940:	48 89 c7             	mov    %rax,%rdi
    e943:	e8 94 1c 00 00       	call   105dc <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>
      }
    e948:	90                   	nop
    e949:	c9                   	leave
    e94a:	c3                   	ret
    e94b:	90                   	nop

000000000000e94c <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>:
    e94c:	55                   	push   %rbp
    e94d:	48 89 e5             	mov    %rsp,%rbp
    e950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e958:	48 8b 40 08          	mov    0x8(%rax),%rax
    e95c:	5d                   	pop    %rbp
    e95d:	c3                   	ret

000000000000e95e <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    e95e:	55                   	push   %rbp
    e95f:	48 89 e5             	mov    %rsp,%rbp
    e962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    e966:	90                   	nop
    e967:	5d                   	pop    %rbp
    e968:	c3                   	ret

000000000000e969 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    e969:	55                   	push   %rbp
    e96a:	48 89 e5             	mov    %rsp,%rbp
    e96d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e971:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    e975:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e979:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    e97d:	48 c1 f8 02          	sar    $0x2,%rax
    }
    e981:	5d                   	pop    %rbp
    e982:	c3                   	ret

000000000000e983 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e983:	55                   	push   %rbp
    e984:	48 89 e5             	mov    %rsp,%rbp
    e987:	53                   	push   %rbx
    e988:	48 83 ec 28          	sub    $0x28,%rsp
    e98c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e990:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e994:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e998:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e99c:	48 89 d6             	mov    %rdx,%rsi
    e99f:	48 89 c7             	mov    %rax,%rdi
    e9a2:	e8 e1 1b 00 00       	call   10588 <_ZNSaI14VkDynamicStateEC1ERKS0_>
    e9a7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e9ab:	48 89 c7             	mov    %rax,%rdi
    e9ae:	e8 57 1c 00 00       	call   1060a <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>
    e9b3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e9b7:	0f 92 c3             	setb   %bl
    e9ba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e9be:	48 89 c7             	mov    %rax,%rdi
    e9c1:	e8 1e bb ff ff       	call   a4e4 <_ZNSaI14VkDynamicStateED1Ev>
    e9c6:	84 db                	test   %bl,%bl
    e9c8:	74 0f                	je     e9d9 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e9ca:	48 8d 05 87 6c 00 00 	lea    0x6c87(%rip),%rax        # 15658 <_ZN6__pstl9execution2v1L5unseqE+0x3f1>
    e9d1:	48 89 c7             	mov    %rax,%rdi
    e9d4:	e8 77 47 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e9d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e9dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e9e1:	c9                   	leave
    e9e2:	c3                   	ret
    e9e3:	90                   	nop

000000000000e9e4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    e9e4:	55                   	push   %rbp
    e9e5:	48 89 e5             	mov    %rsp,%rbp
    e9e8:	48 83 ec 10          	sub    $0x10,%rsp
    e9ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e9f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    e9f4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e9f9:	74 15                	je     ea10 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x2c>
    e9fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e9ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ea03:	48 89 d6             	mov    %rdx,%rsi
    ea06:	48 89 c7             	mov    %rax,%rdi
    ea09:	e8 3e 1c 00 00       	call   1064c <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>
    ea0e:	eb 05                	jmp    ea15 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x31>
    ea10:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ea15:	c9                   	leave
    ea16:	c3                   	ret

000000000000ea17 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    ea17:	55                   	push   %rbp
    ea18:	48 89 e5             	mov    %rsp,%rbp
    ea1b:	48 83 ec 20          	sub    $0x20,%rsp
    ea1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea27:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    ea2b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    ea2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ea33:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ea37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea3b:	48 89 ce             	mov    %rcx,%rsi
    ea3e:	48 89 c7             	mov    %rax,%rdi
    ea41:	e8 30 1c 00 00       	call   10676 <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
    }
    ea46:	c9                   	leave
    ea47:	c3                   	ret

000000000000ea48 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    ea48:	55                   	push   %rbp
    ea49:	48 89 e5             	mov    %rsp,%rbp
    ea4c:	48 83 ec 10          	sub    $0x10,%rsp
    ea50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    ea58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ea5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea60:	48 89 d6             	mov    %rdx,%rsi
    ea63:	48 89 c7             	mov    %rax,%rdi
    ea66:	e8 40 1c 00 00       	call   106ab <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>
    }
    ea6b:	90                   	nop
    ea6c:	c9                   	leave
    ea6d:	c3                   	ret

000000000000ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
    ea6e:	55                   	push   %rbp
    ea6f:	48 89 e5             	mov    %rsp,%rbp
    ea72:	48 83 ec 10          	sub    $0x10,%rsp
    ea76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
    ea7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea7e:	48 89 c7             	mov    %rax,%rdi
    ea81:	e8 76 1c 00 00       	call   106fc <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    ea86:	48 89 c7             	mov    %rax,%rdi
    ea89:	e8 2c 1c 00 00       	call   106ba <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    ea8e:	c9                   	leave
    ea8f:	c3                   	ret

000000000000ea90 <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    ea90:	55                   	push   %rbp
    ea91:	48 89 e5             	mov    %rsp,%rbp
    ea94:	48 83 ec 20          	sub    $0x20,%rsp
    ea98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eaa0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    eaa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eaa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaac:	48 89 d6             	mov    %rdx,%rsi
    eaaf:	48 89 c7             	mov    %rax,%rdi
    eab2:	e8 53 1c 00 00       	call   1070a <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
    eab7:	c9                   	leave
    eab8:	c3                   	ret
    eab9:	90                   	nop

000000000000eaba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
    eaba:	55                   	push   %rbp
    eabb:	48 89 e5             	mov    %rsp,%rbp
    eabe:	53                   	push   %rbx
    eabf:	48 83 ec 38          	sub    $0x38,%rsp
    eac3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    eac7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    eacb:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    eacf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ead3:	48 89 c7             	mov    %rax,%rdi
    ead6:	e8 93 ff ff ff       	call   ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
    eadb:	48 89 c3             	mov    %rax,%rbx
    eade:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eae2:	48 89 c7             	mov    %rax,%rdi
    eae5:	e8 d0 e0 ff ff       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    eaea:	48 29 c3             	sub    %rax,%rbx
    eaed:	48 89 da             	mov    %rbx,%rdx
    eaf0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eaf4:	48 39 c2             	cmp    %rax,%rdx
    eaf7:	0f 92 c0             	setb   %al
    eafa:	84 c0                	test   %al,%al
    eafc:	74 0c                	je     eb0a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
    eafe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    eb02:	48 89 c7             	mov    %rax,%rdi
    eb05:	e8 46 46 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    eb0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb0e:	48 89 c7             	mov    %rax,%rdi
    eb11:	e8 a4 e0 ff ff       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    eb16:	48 89 c3             	mov    %rax,%rbx
    eb19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb1d:	48 89 c7             	mov    %rax,%rdi
    eb20:	e8 95 e0 ff ff       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    eb25:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    eb29:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    eb2d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    eb31:	48 89 d6             	mov    %rdx,%rsi
    eb34:	48 89 c7             	mov    %rax,%rdi
    eb37:	e8 23 0c 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    eb3c:	48 8b 00             	mov    (%rax),%rax
    eb3f:	48 01 d8             	add    %rbx,%rax
    eb42:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    eb46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb4a:	48 89 c7             	mov    %rax,%rdi
    eb4d:	e8 68 e0 ff ff       	call   cbba <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    eb52:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    eb56:	72 12                	jb     eb6a <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
    eb58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb5c:	48 89 c7             	mov    %rax,%rdi
    eb5f:	e8 0a ff ff ff       	call   ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
    eb64:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    eb68:	73 0e                	jae    eb78 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
    eb6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb6e:	48 89 c7             	mov    %rax,%rdi
    eb71:	e8 f8 fe ff ff       	call   ea6e <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
    eb76:	eb 04                	jmp    eb7c <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
    eb78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    eb7c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    eb80:	c9                   	leave
    eb81:	c3                   	ret

000000000000eb82 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    eb82:	55                   	push   %rbp
    eb83:	48 89 e5             	mov    %rsp,%rbp
    eb86:	48 83 ec 10          	sub    $0x10,%rsp
    eb8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    eb92:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eb97:	74 15                	je     ebae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    eb99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb9d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eba1:	48 89 d6             	mov    %rdx,%rsi
    eba4:	48 89 c7             	mov    %rax,%rdi
    eba7:	e8 87 1b 00 00       	call   10733 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
    ebac:	eb 05                	jmp    ebb3 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
    ebae:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ebb3:	c9                   	leave
    ebb4:	c3                   	ret

000000000000ebb5 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    ebb5:	55                   	push   %rbp
    ebb6:	48 89 e5             	mov    %rsp,%rbp
    ebb9:	48 83 ec 20          	sub    $0x20,%rsp
    ebbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebc1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ebc5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    ebc9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    ebcd:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ebd1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ebd5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    ebd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ebdd:	48 89 c7             	mov    %rax,%rdi
    ebe0:	e8 78 1b 00 00       	call   1075d <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    ebe5:	c9                   	leave
    ebe6:	c3                   	ret

000000000000ebe7 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    ebe7:	55                   	push   %rbp
    ebe8:	48 89 e5             	mov    %rsp,%rbp
    ebeb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    ebef:	90                   	nop
    ebf0:	5d                   	pop    %rbp
    ebf1:	c3                   	ret

000000000000ebf2 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    ebf2:	55                   	push   %rbp
    ebf3:	48 89 e5             	mov    %rsp,%rbp
    ebf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ebfa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    ebfe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ec02:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    ec06:	5d                   	pop    %rbp
    ec07:	c3                   	ret

000000000000ec08 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ec08:	55                   	push   %rbp
    ec09:	48 89 e5             	mov    %rsp,%rbp
    ec0c:	48 83 ec 10          	sub    $0x10,%rsp
    ec10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ec14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec18:	48 89 c7             	mov    %rax,%rdi
    ec1b:	e8 ae 1b 00 00       	call   107ce <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    ec20:	c9                   	leave
    ec21:	c3                   	ret

000000000000ec22 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ec22:	55                   	push   %rbp
    ec23:	48 89 e5             	mov    %rsp,%rbp
    ec26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ec2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec2e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ec35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec39:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ec40:	00 
    ec41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec45:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ec4c:	00 
	{ }
    ec4d:	90                   	nop
    ec4e:	5d                   	pop    %rbp
    ec4f:	c3                   	ret

000000000000ec50 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ec50:	55                   	push   %rbp
    ec51:	48 89 e5             	mov    %rsp,%rbp
    ec54:	48 83 ec 10          	sub    $0x10,%rsp
    ec58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ec5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ec60:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ec65:	74 15                	je     ec7c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ec67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec6b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ec6f:	48 89 d6             	mov    %rdx,%rsi
    ec72:	48 89 c7             	mov    %rax,%rdi
    ec75:	e8 6e 1b 00 00       	call   107e8 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    ec7a:	eb 05                	jmp    ec81 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ec7c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ec81:	c9                   	leave
    ec82:	c3                   	ret

000000000000ec83 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ec83:	55                   	push   %rbp
    ec84:	48 89 e5             	mov    %rsp,%rbp
    ec87:	48 83 ec 20          	sub    $0x20,%rsp
    ec8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ec8f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ec93:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ec97:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ec9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec9f:	48 89 d6             	mov    %rdx,%rsi
    eca2:	48 89 c7             	mov    %rax,%rdi
    eca5:	e8 68 1b 00 00       	call   10812 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    ecaa:	c9                   	leave
    ecab:	c3                   	ret

000000000000ecac <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ecac:	55                   	push   %rbp
    ecad:	48 89 e5             	mov    %rsp,%rbp
    ecb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ecb8:	90                   	nop
    ecb9:	5d                   	pop    %rbp
    ecba:	c3                   	ret
    ecbb:	90                   	nop

000000000000ecbc <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ecbc:	55                   	push   %rbp
    ecbd:	48 89 e5             	mov    %rsp,%rbp
    ecc0:	48 83 ec 20          	sub    $0x20,%rsp
    ecc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eccc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ecd0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ecd4:	48 89 d0             	mov    %rdx,%rax
    ecd7:	48 c1 e0 06          	shl    $0x6,%rax
    ecdb:	48 01 d0             	add    %rdx,%rax
    ecde:	48 c1 e0 02          	shl    $0x2,%rax
    ece2:	48 89 c2             	mov    %rax,%rdx
    ece5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ece9:	48 89 d6             	mov    %rdx,%rsi
    ecec:	48 89 c7             	mov    %rax,%rdi
    ecef:	e8 6c 46 ff ff       	call   3360 <_ZdlPvm@plt>
      }
    ecf4:	c9                   	leave
    ecf5:	c3                   	ret

000000000000ecf6 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    ecf6:	55                   	push   %rbp
    ecf7:	48 89 e5             	mov    %rsp,%rbp
    ecfa:	48 83 ec 30          	sub    $0x30,%rsp
    ecfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ed02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ed06:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    ed0a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    ed0e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    ed12:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ed16:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ed1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ed1e:	48 89 ce             	mov    %rcx,%rsi
    ed21:	48 89 c7             	mov    %rax,%rdi
    ed24:	e8 49 1b 00 00       	call   10872 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>
    }
    ed29:	c9                   	leave
    ed2a:	c3                   	ret
    ed2b:	90                   	nop

000000000000ed2c <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
    ed2c:	55                   	push   %rbp
    ed2d:	48 89 e5             	mov    %rsp,%rbp
    ed30:	53                   	push   %rbx
    ed31:	48 83 ec 28          	sub    $0x28,%rsp
    ed35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ed39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ed3d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ed41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ed45:	48 89 c6             	mov    %rax,%rsi
    ed48:	bf 08 00 00 00       	mov    $0x8,%edi
    ed4d:	e8 e5 99 ff ff       	call   8737 <_ZnwmPv>
    ed52:	48 89 c3             	mov    %rax,%rbx
    ed55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed59:	48 89 c7             	mov    %rax,%rdi
    ed5c:	e8 27 e3 ff ff       	call   d088 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ed61:	48 8b 00             	mov    (%rax),%rax
    ed64:	48 89 03             	mov    %rax,(%rbx)
    ed67:	90                   	nop
    ed68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ed6c:	c9                   	leave
    ed6d:	c3                   	ret

000000000000ed6e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
    ed6e:	55                   	push   %rbp
    ed6f:	48 89 e5             	mov    %rsp,%rbp
    ed72:	53                   	push   %rbx
    ed73:	48 83 ec 38          	sub    $0x38,%rsp
    ed77:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ed7b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    ed7f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
    ed83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed87:	48 89 c7             	mov    %rax,%rdi
    ed8a:	e8 11 1b 00 00       	call   108a0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    ed8f:	48 89 c3             	mov    %rax,%rbx
    ed92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed96:	48 89 c7             	mov    %rax,%rdi
    ed99:	e8 64 a2 ff ff       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ed9e:	48 29 c3             	sub    %rax,%rbx
    eda1:	48 89 da             	mov    %rbx,%rdx
    eda4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eda8:	48 39 c2             	cmp    %rax,%rdx
    edab:	0f 92 c0             	setb   %al
    edae:	84 c0                	test   %al,%al
    edb0:	74 0c                	je     edbe <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
    edb2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    edb6:	48 89 c7             	mov    %rax,%rdi
    edb9:	e8 92 43 ff ff       	call   3150 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
    edbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edc2:	48 89 c7             	mov    %rax,%rdi
    edc5:	e8 38 a2 ff ff       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    edca:	48 89 c3             	mov    %rax,%rbx
    edcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edd1:	48 89 c7             	mov    %rax,%rdi
    edd4:	e8 29 a2 ff ff       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    edd9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    eddd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    ede1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    ede5:	48 89 d6             	mov    %rdx,%rsi
    ede8:	48 89 c7             	mov    %rax,%rdi
    edeb:	e8 6f 09 00 00       	call   f75f <_ZSt3maxImERKT_S2_S2_>
    edf0:	48 8b 00             	mov    (%rax),%rax
    edf3:	48 01 d8             	add    %rbx,%rax
    edf6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
    edfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edfe:	48 89 c7             	mov    %rax,%rdi
    ee01:	e8 fc a1 ff ff       	call   9002 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ee06:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    ee0a:	72 12                	jb     ee1e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
    ee0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee10:	48 89 c7             	mov    %rax,%rdi
    ee13:	e8 88 1a 00 00       	call   108a0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    ee18:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    ee1c:	73 0e                	jae    ee2c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
    ee1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee22:	48 89 c7             	mov    %rax,%rdi
    ee25:	e8 76 1a 00 00       	call   108a0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
    ee2a:	eb 04                	jmp    ee30 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
    ee2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
    ee30:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ee34:	c9                   	leave
    ee35:	c3                   	ret

000000000000ee36 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
    ee36:	55                   	push   %rbp
    ee37:	48 89 e5             	mov    %rsp,%rbp
    ee3a:	53                   	push   %rbx
    ee3b:	48 83 ec 18          	sub    $0x18,%rsp
    ee3f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ee43:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
    ee47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ee4b:	48 89 c7             	mov    %rax,%rdi
    ee4e:	e8 31 c1 ff ff       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ee53:	48 8b 18             	mov    (%rax),%rbx
    ee56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ee5a:	48 89 c7             	mov    %rax,%rdi
    ee5d:	e8 22 c1 ff ff       	call   af84 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    ee62:	48 8b 00             	mov    (%rax),%rax
    ee65:	48 89 da             	mov    %rbx,%rdx
    ee68:	48 29 c2             	sub    %rax,%rdx
    ee6b:	48 89 d0             	mov    %rdx,%rax
    ee6e:	48 c1 f8 03          	sar    $0x3,%rax
    ee72:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ee76:	c9                   	leave
    ee77:	c3                   	ret

000000000000ee78 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
    ee78:	55                   	push   %rbp
    ee79:	48 89 e5             	mov    %rsp,%rbp
    ee7c:	48 83 ec 20          	sub    $0x20,%rsp
    ee80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ee88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    ee8c:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
    ee90:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ee94:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ee98:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    ee9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eea0:	48 89 c7             	mov    %rax,%rdi
    eea3:	e8 1a 1a 00 00       	call   108c2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
    eea8:	c9                   	leave
    eea9:	c3                   	ret

000000000000eeaa <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
    eeaa:	55                   	push   %rbp
    eeab:	48 89 e5             	mov    %rsp,%rbp
    eeae:	48 83 ec 20          	sub    $0x20,%rsp
    eeb2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    eeb6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
    eeba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eebe:	48 8b 00             	mov    (%rax),%rax
    eec1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    eec5:	48 c1 e2 03          	shl    $0x3,%rdx
    eec9:	48 f7 da             	neg    %rdx
    eecc:	48 01 d0             	add    %rdx,%rax
    eecf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eed3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    eed7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    eedb:	48 89 d6             	mov    %rdx,%rsi
    eede:	48 89 c7             	mov    %rax,%rdi
    eee1:	e8 80 c0 ff ff       	call   af66 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    eee6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eeea:	c9                   	leave
    eeeb:	c3                   	ret

000000000000eeec <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    eeec:	55                   	push   %rbp
    eeed:	48 89 e5             	mov    %rsp,%rbp
    eef0:	48 83 ec 10          	sub    $0x10,%rsp
    eef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    eef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eefc:	48 89 c7             	mov    %rax,%rdi
    eeff:	e8 22 1a 00 00       	call   10926 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    ef04:	c9                   	leave
    ef05:	c3                   	ret

000000000000ef06 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    ef06:	55                   	push   %rbp
    ef07:	48 89 e5             	mov    %rsp,%rbp
    ef0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef12:	90                   	nop
    ef13:	5d                   	pop    %rbp
    ef14:	c3                   	ret
    ef15:	90                   	nop

000000000000ef16 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ef16:	55                   	push   %rbp
    ef17:	48 89 e5             	mov    %rsp,%rbp
    ef1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ef1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef22:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ef29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef2d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ef34:	00 
    ef35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef39:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ef40:	00 
	{ }
    ef41:	90                   	nop
    ef42:	5d                   	pop    %rbp
    ef43:	c3                   	ret

000000000000ef44 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ef44:	55                   	push   %rbp
    ef45:	48 89 e5             	mov    %rsp,%rbp
    ef48:	48 83 ec 10          	sub    $0x10,%rsp
    ef4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ef54:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ef59:	74 15                	je     ef70 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    ef5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef5f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ef63:	48 89 d6             	mov    %rdx,%rsi
    ef66:	48 89 c7             	mov    %rax,%rdi
    ef69:	e8 d2 19 00 00       	call   10940 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    ef6e:	eb 05                	jmp    ef75 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    ef70:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ef75:	c9                   	leave
    ef76:	c3                   	ret

000000000000ef77 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    ef77:	55                   	push   %rbp
    ef78:	48 89 e5             	mov    %rsp,%rbp
    ef7b:	48 83 ec 20          	sub    $0x20,%rsp
    ef7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef83:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ef87:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    ef8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ef8f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ef93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef97:	48 89 ce             	mov    %rcx,%rsi
    ef9a:	48 89 c7             	mov    %rax,%rdi
    ef9d:	e8 c8 19 00 00       	call   1096a <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    efa2:	90                   	nop
    efa3:	c9                   	leave
    efa4:	c3                   	ret

000000000000efa5 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    efa5:	55                   	push   %rbp
    efa6:	48 89 e5             	mov    %rsp,%rbp
    efa9:	48 83 ec 20          	sub    $0x20,%rsp
    efad:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    efb1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    efb5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    efb9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    efbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    efc1:	48 89 d6             	mov    %rdx,%rsi
    efc4:	48 89 c7             	mov    %rax,%rdi
    efc7:	e8 d8 19 00 00       	call   109a4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    efcc:	c9                   	leave
    efcd:	c3                   	ret

000000000000efce <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
    efce:	55                   	push   %rbp
    efcf:	48 89 e5             	mov    %rsp,%rbp
    efd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    efda:	90                   	nop
    efdb:	5d                   	pop    %rbp
    efdc:	c3                   	ret
    efdd:	90                   	nop

000000000000efde <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    efde:	55                   	push   %rbp
    efdf:	48 89 e5             	mov    %rsp,%rbp
    efe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efe6:	90                   	nop
    efe7:	5d                   	pop    %rbp
    efe8:	c3                   	ret

000000000000efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    efe9:	55                   	push   %rbp
    efea:	48 89 e5             	mov    %rsp,%rbp
    efed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    eff1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eff5:	5d                   	pop    %rbp
    eff6:	c3                   	ret
    eff7:	90                   	nop

000000000000eff8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
    eff8:	55                   	push   %rbp
    eff9:	48 89 e5             	mov    %rsp,%rbp
    effc:	48 83 ec 20          	sub    $0x20,%rsp
    f000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f004:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f008:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _M_t(__t),
    f00c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f010:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f014:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
    f017:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f01b:	48 89 c7             	mov    %rax,%rdi
    f01e:	e8 c6 ff ff ff       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
    f023:	48 89 c2             	mov    %rax,%rdx
    f026:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f02a:	48 89 d6             	mov    %rdx,%rsi
    f02d:	48 89 c7             	mov    %rax,%rdi
    f030:	e8 cf 19 00 00       	call   10a04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>
    f035:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f039:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
    f03d:	90                   	nop
    f03e:	c9                   	leave
    f03f:	c3                   	ret

000000000000f040 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
    f040:	55                   	push   %rbp
    f041:	48 89 e5             	mov    %rsp,%rbp
    f044:	48 83 ec 10          	sub    $0x10,%rsp
    f048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
    f04c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f050:	48 8b 40 08          	mov    0x8(%rax),%rax
    f054:	48 85 c0             	test   %rax,%rax
    f057:	74 1a                	je     f073 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
    f059:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f05d:	48 8b 00             	mov    (%rax),%rax
    f060:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f064:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    f068:	48 89 d6             	mov    %rdx,%rsi
    f06b:	48 89 c7             	mov    %rax,%rdi
    f06e:	e8 2b e5 ff ff       	call   d59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	}
    f073:	90                   	nop
    f074:	c9                   	leave
    f075:	c3                   	ret

000000000000f076 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f076:	55                   	push   %rbp
    f077:	48 89 e5             	mov    %rsp,%rbp
    f07a:	53                   	push   %rbx
    f07b:	48 83 ec 78          	sub    $0x78,%rsp
    f07f:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    f083:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
    f087:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f08b:	48 89 c7             	mov    %rax,%rdi
    f08e:	e8 15 c0 ff ff       	call   b0a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    f093:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
    f097:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f09b:	48 89 c7             	mov    %rax,%rdi
    f09e:	e8 8f 02 00 00       	call   f332 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
    f0a3:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
    f0a7:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
    f0ab:	eb 51                	jmp    f0fe <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x88>
	  __y = __x;
    f0ad:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f0b1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
    f0b5:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    f0b9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f0bd:	48 89 c7             	mov    %rax,%rdi
    f0c0:	e8 7f 02 00 00       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    f0c5:	48 89 c2             	mov    %rax,%rdx
    f0c8:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f0cc:	48 89 c6             	mov    %rax,%rsi
    f0cf:	48 89 df             	mov    %rbx,%rdi
    f0d2:	e8 99 02 00 00       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f0d7:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
    f0da:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    f0de:	74 0e                	je     f0ee <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x78>
    f0e0:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f0e4:	48 89 c7             	mov    %rax,%rdi
    f0e7:	e8 a0 e4 ff ff       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    f0ec:	eb 0c                	jmp    f0fa <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
    f0ee:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f0f2:	48 89 c7             	mov    %rax,%rdi
    f0f5:	e8 80 e4 ff ff       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    f0fa:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
    f0fe:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    f102:	48 85 c0             	test   %rax,%rax
    f105:	75 a6                	jne    f0ad <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x37>
      iterator __j = iterator(__y);
    f107:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    f10b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f10f:	48 89 d6             	mov    %rdx,%rsi
    f112:	48 89 c7             	mov    %rax,%rdi
    f115:	e8 8a 01 00 00       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
    f11a:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
    f11e:	74 54                	je     f174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xfe>
	  if (__j == begin())
    f120:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f124:	48 89 c7             	mov    %rax,%rdi
    f127:	e8 d8 03 00 00       	call   f504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
    f12c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f130:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    f134:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f138:	48 89 d6             	mov    %rdx,%rsi
    f13b:	48 89 c7             	mov    %rax,%rdi
    f13e:	e8 09 19 00 00       	call   10a4c <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
    f143:	84 c0                	test   %al,%al
    f145:	74 21                	je     f168 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf2>
	    return _Res(__x, __y);
    f147:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    f14b:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    f14f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f153:	48 89 ce             	mov    %rcx,%rsi
    f156:	48 89 c7             	mov    %rax,%rdi
    f159:	e8 10 19 00 00       	call   10a6e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
    f15e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f162:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    f166:	eb 7d                	jmp    f1e5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
	    --__j;
    f168:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    f16c:	48 89 c7             	mov    %rax,%rdi
    f16f:	e8 3e 19 00 00       	call   10ab2 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
    f174:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
    f178:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    f17c:	48 89 c7             	mov    %rax,%rdi
    f17f:	e8 56 19 00 00       	call   10ada <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
    f184:	48 89 c1             	mov    %rax,%rcx
    f187:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f18b:	48 89 c2             	mov    %rax,%rdx
    f18e:	48 89 ce             	mov    %rcx,%rsi
    f191:	48 89 df             	mov    %rbx,%rdi
    f194:	e8 d7 01 00 00       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f199:	84 c0                	test   %al,%al
    f19b:	74 21                	je     f1be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x148>
	return _Res(__x, __y);
    f19d:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
    f1a1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
    f1a5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    f1a9:	48 89 ce             	mov    %rcx,%rsi
    f1ac:	48 89 c7             	mov    %rax,%rdi
    f1af:	e8 ba 18 00 00       	call   10a6e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
    f1b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f1b8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f1bc:	eb 27                	jmp    f1e5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
      return _Res(__j._M_node, 0);
    f1be:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f1c5:	00 
    f1c6:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    f1ca:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    f1ce:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f1d2:	48 89 ce             	mov    %rcx,%rsi
    f1d5:	48 89 c7             	mov    %rax,%rdi
    f1d8:	e8 17 19 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    f1dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f1e1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
    f1e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f1e9:	c9                   	leave
    f1ea:	c3                   	ret
    f1eb:	90                   	nop

000000000000f1ec <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>:
	_M_key() const
    f1ec:	55                   	push   %rbp
    f1ed:	48 89 e5             	mov    %rsp,%rbp
    f1f0:	48 83 ec 10          	sub    $0x10,%rsp
    f1f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
    f1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1fc:	48 8b 40 08          	mov    0x8(%rax),%rax
    f200:	48 89 c7             	mov    %rax,%rdi
    f203:	e8 3c 01 00 00       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    f208:	c9                   	leave
    f209:	c3                   	ret

000000000000f20a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
    f20a:	55                   	push   %rbp
    f20b:	48 89 e5             	mov    %rsp,%rbp
    f20e:	48 83 ec 30          	sub    $0x30,%rsp
    f212:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f216:	48 89 d1             	mov    %rdx,%rcx
    f219:	48 89 f0             	mov    %rsi,%rax
    f21c:	48 89 fa             	mov    %rdi,%rdx
    f21f:	48 89 ca             	mov    %rcx,%rdx
    f222:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f226:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
    f22a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f22e:	48 8b 00             	mov    (%rax),%rax
    f231:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f235:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    f239:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f23d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    f241:	48 89 c7             	mov    %rax,%rdi
    f244:	e8 db 18 00 00       	call   10b24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>
    f249:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
    f24d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f251:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f258:	00 
	  return __it;
    f259:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    f25d:	c9                   	leave
    f25e:	c3                   	ret
    f25f:	90                   	nop

000000000000f260 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
    f260:	55                   	push   %rbp
    f261:	48 89 e5             	mov    %rsp,%rbp
    f264:	48 83 ec 20          	sub    $0x20,%rsp
    f268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f26c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f270:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    f274:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f278:	48 89 c7             	mov    %rax,%rdi
    f27b:	e8 67 19 00 00       	call   10be7 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    f280:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f284:	48 8b 00             	mov    (%rax),%rax
    f287:	48 89 02             	mov    %rax,(%rdx)
    f28a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f28e:	48 89 c7             	mov    %rax,%rdi
    f291:	e8 5f 19 00 00       	call   10bf5 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
    f296:	0f b6 10             	movzbl (%rax),%edx
    f299:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f29d:	88 50 08             	mov    %dl,0x8(%rax)
    f2a0:	90                   	nop
    f2a1:	c9                   	leave
    f2a2:	c3                   	ret
    f2a3:	90                   	nop

000000000000f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    f2a4:	55                   	push   %rbp
    f2a5:	48 89 e5             	mov    %rsp,%rbp
    f2a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    f2b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f2b8:	48 89 10             	mov    %rdx,(%rax)
    f2bb:	90                   	nop
    f2bc:	5d                   	pop    %rbp
    f2bd:	c3                   	ret

000000000000f2be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    f2be:	55                   	push   %rbp
    f2bf:	48 89 e5             	mov    %rsp,%rbp
    f2c2:	53                   	push   %rbx
    f2c3:	48 83 ec 18          	sub    $0x18,%rsp
    f2c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f2cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
    f2cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f2d3:	48 89 c7             	mov    %rax,%rdi
    f2d6:	e8 37 19 00 00       	call   10c12 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
    f2db:	48 89 c3             	mov    %rax,%rbx
    f2de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f2e2:	48 89 c7             	mov    %rax,%rdi
    f2e5:	e8 1a 19 00 00       	call   10c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    f2ea:	48 89 de             	mov    %rbx,%rsi
    f2ed:	48 89 c7             	mov    %rax,%rdi
    f2f0:	e8 3b 19 00 00       	call   10c30 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>
      }
    f2f5:	90                   	nop
    f2f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f2fa:	c9                   	leave
    f2fb:	c3                   	ret

000000000000f2fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
    f2fc:	55                   	push   %rbp
    f2fd:	48 89 e5             	mov    %rsp,%rbp
    f300:	48 83 ec 10          	sub    $0x10,%rsp
    f304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
    f30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f310:	48 89 c7             	mov    %rax,%rdi
    f313:	e8 ec 18 00 00       	call   10c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
    f318:	48 89 c1             	mov    %rax,%rcx
    f31b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f31f:	ba 01 00 00 00       	mov    $0x1,%edx
    f324:	48 89 c6             	mov    %rax,%rsi
    f327:	48 89 cf             	mov    %rcx,%rdi
    f32a:	e8 27 19 00 00       	call   10c56 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>
    f32f:	90                   	nop
    f330:	c9                   	leave
    f331:	c3                   	ret

000000000000f332 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
    f332:	55                   	push   %rbp
    f333:	48 89 e5             	mov    %rsp,%rbp
    f336:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
    f33a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f33e:	48 83 c0 08          	add    $0x8,%rax
    f342:	5d                   	pop    %rbp
    f343:	c3                   	ret

000000000000f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>:
      _S_key(_Const_Link_type __x)
    f344:	55                   	push   %rbp
    f345:	48 89 e5             	mov    %rsp,%rbp
    f348:	48 83 ec 20          	sub    $0x20,%rsp
    f34c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
    f350:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f354:	48 89 c7             	mov    %rax,%rdi
    f357:	e8 28 19 00 00       	call   10c84 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
    f35c:	48 89 c2             	mov    %rax,%rdx
    f35f:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
    f363:	48 89 d6             	mov    %rdx,%rsi
    f366:	48 89 c7             	mov    %rax,%rdi
    f369:	e8 34 19 00 00       	call   10ca2 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>
      }
    f36e:	c9                   	leave
    f36f:	c3                   	ret

000000000000f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
    f370:	55                   	push   %rbp
    f371:	48 89 e5             	mov    %rsp,%rbp
    f374:	48 83 ec 20          	sub    $0x20,%rsp
    f378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f37c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f380:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
    f384:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f388:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f38c:	48 89 d6             	mov    %rdx,%rsi
    f38f:	48 89 c7             	mov    %rax,%rdi
    f392:	e8 1d 19 00 00       	call   10cb4 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
    f397:	c9                   	leave
    f398:	c3                   	ret
    f399:	90                   	nop

000000000000f39a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f39a:	55                   	push   %rbp
    f39b:	48 89 e5             	mov    %rsp,%rbp
    f39e:	53                   	push   %rbx
    f39f:	48 83 ec 38          	sub    $0x38,%rsp
    f3a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f3a7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f3ab:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    f3af:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    f3b3:	eb 56                	jmp    f40b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
    f3b5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    f3b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3bd:	48 89 c7             	mov    %rax,%rdi
    f3c0:	e8 7f ff ff ff       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    f3c5:	48 89 c1             	mov    %rax,%rcx
    f3c8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f3cc:	48 89 c2             	mov    %rax,%rdx
    f3cf:	48 89 ce             	mov    %rcx,%rsi
    f3d2:	48 89 df             	mov    %rbx,%rdi
    f3d5:	e8 96 ff ff ff       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f3da:	83 f0 01             	xor    $0x1,%eax
    f3dd:	84 c0                	test   %al,%al
    f3df:	74 1a                	je     f3fb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x61>
	  __y = __x, __x = _S_left(__x);
    f3e1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3e5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f3e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3ed:	48 89 c7             	mov    %rax,%rdi
    f3f0:	e8 97 e1 ff ff       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    f3f5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f3f9:	eb 10                	jmp    f40b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	  __x = _S_right(__x);
    f3fb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3ff:	48 89 c7             	mov    %rax,%rdi
    f402:	e8 73 e1 ff ff       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    f407:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    f40b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    f410:	75 a3                	jne    f3b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
    f412:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f416:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f41a:	48 89 d6             	mov    %rdx,%rsi
    f41d:	48 89 c7             	mov    %rax,%rdi
    f420:	e8 7f fe ff ff       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    f425:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    f429:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f42d:	c9                   	leave
    f42e:	c3                   	ret
    f42f:	90                   	nop

000000000000f430 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f430:	55                   	push   %rbp
    f431:	48 89 e5             	mov    %rsp,%rbp
    f434:	53                   	push   %rbx
    f435:	48 83 ec 38          	sub    $0x38,%rsp
    f439:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f43d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    f441:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    f445:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
    f449:	eb 50                	jmp    f49b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
    f44b:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    f44f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f453:	48 89 c7             	mov    %rax,%rdi
    f456:	e8 e9 fe ff ff       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
    f45b:	48 89 c2             	mov    %rax,%rdx
    f45e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f462:	48 89 c6             	mov    %rax,%rsi
    f465:	48 89 df             	mov    %rbx,%rdi
    f468:	e8 03 ff ff ff       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
    f46d:	84 c0                	test   %al,%al
    f46f:	74 1a                	je     f48b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x5b>
	  __y = __x, __x = _S_left(__x);
    f471:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f475:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f479:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f47d:	48 89 c7             	mov    %rax,%rdi
    f480:	e8 07 e1 ff ff       	call   d58c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    f485:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f489:	eb 10                	jmp    f49b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	  __x = _S_right(__x);
    f48b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f48f:	48 89 c7             	mov    %rax,%rdi
    f492:	e8 e3 e0 ff ff       	call   d57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    f497:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
    f49b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    f4a0:	75 a9                	jne    f44b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
    f4a2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f4a6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f4aa:	48 89 d6             	mov    %rdx,%rsi
    f4ad:	48 89 c7             	mov    %rax,%rdi
    f4b0:	e8 ef fd ff ff       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    f4b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
    f4b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f4bd:	c9                   	leave
    f4be:	c3                   	ret
    f4bf:	90                   	nop

000000000000f4c0 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
    f4c0:	55                   	push   %rbp
    f4c1:	48 89 e5             	mov    %rsp,%rbp
    f4c4:	48 83 ec 20          	sub    $0x20,%rsp
    f4c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f4cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f4d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
    f4d4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f4d8:	48 89 c7             	mov    %rax,%rdi
    f4db:	e8 07 17 00 00       	call   10be7 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    f4e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4e4:	48 8b 00             	mov    (%rax),%rax
    f4e7:	48 89 02             	mov    %rax,(%rdx)
    f4ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f4ee:	48 89 c7             	mov    %rax,%rdi
    f4f1:	e8 f1 16 00 00       	call   10be7 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
    f4f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f4fa:	48 8b 00             	mov    (%rax),%rax
    f4fd:	48 89 42 08          	mov    %rax,0x8(%rdx)
    f501:	90                   	nop
    f502:	c9                   	leave
    f503:	c3                   	ret

000000000000f504 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    f504:	55                   	push   %rbp
    f505:	48 89 e5             	mov    %rsp,%rbp
    f508:	48 83 ec 20          	sub    $0x20,%rsp
    f50c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
    f510:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f514:	48 8b 50 18          	mov    0x18(%rax),%rdx
    f518:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f51c:	48 89 d6             	mov    %rdx,%rsi
    f51f:	48 89 c7             	mov    %rax,%rdi
    f522:	e8 7d fd ff ff       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    f527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f52b:	c9                   	leave
    f52c:	c3                   	ret

000000000000f52d <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    f52d:	55                   	push   %rbp
    f52e:	48 89 e5             	mov    %rsp,%rbp
    f531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f535:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
    f539:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f53d:	48 8b 10             	mov    (%rax),%rdx
    f540:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f544:	48 8b 00             	mov    (%rax),%rax
    f547:	48 39 c2             	cmp    %rax,%rdx
    f54a:	0f 94 c0             	sete   %al
    f54d:	5d                   	pop    %rbp
    f54e:	c3                   	ret
    f54f:	90                   	nop

000000000000f550 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    f550:	55                   	push   %rbp
    f551:	48 89 e5             	mov    %rsp,%rbp
    f554:	48 83 ec 20          	sub    $0x20,%rsp
    f558:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
    f55c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f560:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f564:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f568:	48 89 d6             	mov    %rdx,%rsi
    f56b:	48 89 c7             	mov    %rax,%rdi
    f56e:	e8 31 fd ff ff       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
    f573:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f577:	c9                   	leave
    f578:	c3                   	ret
    f579:	90                   	nop

000000000000f57a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
    f57a:	55                   	push   %rbp
    f57b:	48 89 e5             	mov    %rsp,%rbp
    f57e:	48 83 ec 10          	sub    $0x10,%rsp
    f582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_erase(_M_begin());
    f586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f58a:	48 89 c7             	mov    %rax,%rdi
    f58d:	e8 16 bb ff ff       	call   b0a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    f592:	48 89 c2             	mov    %rax,%rdx
    f595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f599:	48 89 d6             	mov    %rdx,%rsi
    f59c:	48 89 c7             	mov    %rax,%rdi
    f59f:	e8 9e ba ff ff       	call   b042 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	_M_impl._M_reset();
    f5a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5a8:	48 83 c0 08          	add    $0x8,%rax
    f5ac:	48 89 c7             	mov    %rax,%rdi
    f5af:	e8 1c 92 ff ff       	call   87d0 <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
    f5b4:	90                   	nop
    f5b5:	c9                   	leave
    f5b6:	c3                   	ret

000000000000f5b7 <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    f5b7:	55                   	push   %rbp
    f5b8:	48 89 e5             	mov    %rsp,%rbp
    f5bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f5bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    f5c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5c7:	48 8b 10             	mov    (%rax),%rdx
    f5ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f5ce:	48 8b 00             	mov    (%rax),%rax
    f5d1:	48 39 c2             	cmp    %rax,%rdx
    f5d4:	0f 95 c0             	setne  %al
    f5d7:	5d                   	pop    %rbp
    f5d8:	c3                   	ret
    f5d9:	90                   	nop

000000000000f5da <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
    f5da:	55                   	push   %rbp
    f5db:	48 89 e5             	mov    %rsp,%rbp
    f5de:	48 83 ec 20          	sub    $0x20,%rsp
    f5e2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f5e6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
	_Self __tmp = *this;
    f5e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5ed:	48 8b 00             	mov    (%rax),%rax
    f5f0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    f5f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5f8:	48 8b 00             	mov    (%rax),%rax
    f5fb:	48 89 c7             	mov    %rax,%rdi
    f5fe:	e8 4d 3e ff ff       	call   3450 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    f603:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f607:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
    f60a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    f60e:	c9                   	leave
    f60f:	c3                   	ret

000000000000f610 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f610:	55                   	push   %rbp
    f611:	48 89 e5             	mov    %rsp,%rbp
    f614:	48 83 ec 20          	sub    $0x20,%rsp
    f618:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f61c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
				 this->_M_impl._M_header));
    f620:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f624:	48 8d 50 08          	lea    0x8(%rax),%rdx
				(const_cast<_Base_ptr>(__position._M_node),
    f628:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f62c:	48 89 d6             	mov    %rdx,%rsi
    f62f:	48 89 c7             	mov    %rax,%rdi
    f632:	e8 79 3b ff ff       	call   31b0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
    f637:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_drop_node(__y);
    f63b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f63f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f643:	48 89 d6             	mov    %rdx,%rsi
    f646:	48 89 c7             	mov    %rax,%rdi
    f649:	e8 50 df ff ff       	call   d59e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
      --_M_impl._M_node_count;
    f64e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f652:	48 8b 40 28          	mov    0x28(%rax),%rax
    f656:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    f65a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f65e:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
    f662:	90                   	nop
    f663:	c9                   	leave
    f664:	c3                   	ret
    f665:	90                   	nop

000000000000f666 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    f666:	55                   	push   %rbp
    f667:	48 89 e5             	mov    %rsp,%rbp
    f66a:	48 83 ec 20          	sub    $0x20,%rsp
    f66e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f676:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    f67a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f67e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f685:	00 
    f686:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f68a:	48 89 d6             	mov    %rdx,%rsi
    f68d:	48 89 c7             	mov    %rax,%rdi
    f690:	e8 cb 3c ff ff       	call   3360 <_ZdlPvm@plt>
      }
    f695:	c9                   	leave
    f696:	c3                   	ret

000000000000f697 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
    f697:	55                   	push   %rbp
    f698:	48 89 e5             	mov    %rsp,%rbp
    f69b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f69f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f6a3:	90                   	nop
    f6a4:	5d                   	pop    %rbp
    f6a5:	c3                   	ret

000000000000f6a6 <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    f6a6:	55                   	push   %rbp
    f6a7:	48 89 e5             	mov    %rsp,%rbp
    f6aa:	48 83 ec 20          	sub    $0x20,%rsp
    f6ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f6b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    f6ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6be:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    f6c5:	00 
    f6c6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f6ca:	48 89 d6             	mov    %rdx,%rsi
    f6cd:	48 89 c7             	mov    %rax,%rdi
    f6d0:	e8 8b 3c ff ff       	call   3360 <_ZdlPvm@plt>
      }
    f6d5:	c9                   	leave
    f6d6:	c3                   	ret

000000000000f6d7 <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    f6d7:	55                   	push   %rbp
    f6d8:	48 89 e5             	mov    %rsp,%rbp
    f6db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f6df:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f6e3:	90                   	nop
    f6e4:	5d                   	pop    %rbp
    f6e5:	c3                   	ret

000000000000f6e6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    f6e6:	55                   	push   %rbp
    f6e7:	48 89 e5             	mov    %rsp,%rbp
    f6ea:	48 83 ec 20          	sub    $0x20,%rsp
    f6ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    f6f2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    f6f9:	ff ff 0f 
    f6fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    f700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f704:	48 89 c7             	mov    %rax,%rdi
    f707:	e8 d0 15 00 00       	call   10cdc <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    f70c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    f710:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    f714:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f718:	48 89 d6             	mov    %rdx,%rsi
    f71b:	48 89 c7             	mov    %rax,%rdi
    f71e:	e8 80 52 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    f723:	48 8b 00             	mov    (%rax),%rax
      }
    f726:	c9                   	leave
    f727:	c3                   	ret

000000000000f728 <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    f728:	55                   	push   %rbp
    f729:	48 89 e5             	mov    %rsp,%rbp
    f72c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f730:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f734:	5d                   	pop    %rbp
    f735:	c3                   	ret

000000000000f736 <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    f736:	55                   	push   %rbp
    f737:	48 89 e5             	mov    %rsp,%rbp
    f73a:	48 83 ec 20          	sub    $0x20,%rsp
    f73e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f742:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    f746:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    f74a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f74e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f752:	48 89 d6             	mov    %rdx,%rsi
    f755:	48 89 c7             	mov    %rax,%rdi
    f758:	e8 99 15 00 00       	call   10cf6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    f75d:	c9                   	leave
    f75e:	c3                   	ret

000000000000f75f <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
    f75f:	55                   	push   %rbp
    f760:	48 89 e5             	mov    %rsp,%rbp
    f763:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f767:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
    f76b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f76f:	48 8b 10             	mov    (%rax),%rdx
    f772:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f776:	48 8b 00             	mov    (%rax),%rax
    f779:	48 39 c2             	cmp    %rax,%rdx
    f77c:	73 06                	jae    f784 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
    f77e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f782:	eb 04                	jmp    f788 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
    f784:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    f788:	5d                   	pop    %rbp
    f789:	c3                   	ret

000000000000f78a <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    f78a:	55                   	push   %rbp
    f78b:	48 89 e5             	mov    %rsp,%rbp
    f78e:	48 83 ec 10          	sub    $0x10,%rsp
    f792:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f796:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    f79a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f79e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f7a2:	ba 00 00 00 00       	mov    $0x0,%edx
    f7a7:	48 89 ce             	mov    %rcx,%rsi
    f7aa:	48 89 c7             	mov    %rax,%rdi
    f7ad:	e8 a2 15 00 00       	call   10d54 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    f7b2:	c9                   	leave
    f7b3:	c3                   	ret

000000000000f7b4 <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
    f7b4:	55                   	push   %rbp
    f7b5:	48 89 e5             	mov    %rsp,%rbp
    f7b8:	41 54                	push   %r12
    f7ba:	53                   	push   %rbx
    f7bb:	48 83 ec 20          	sub    $0x20,%rsp
    f7bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f7c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f7c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f7cb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
    f7cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f7d3:	48 89 c7             	mov    %rax,%rdi
    f7d6:	e8 da 15 00 00       	call   10db5 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    f7db:	49 89 c4             	mov    %rax,%r12
    f7de:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f7e2:	48 89 c7             	mov    %rax,%rdi
    f7e5:	e8 cb 15 00 00       	call   10db5 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    f7ea:	48 89 c3             	mov    %rax,%rbx
    f7ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7f1:	48 89 c7             	mov    %rax,%rdi
    f7f4:	e8 bc 15 00 00       	call   10db5 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
    f7f9:	48 89 c7             	mov    %rax,%rdi
    f7fc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f800:	48 89 c1             	mov    %rax,%rcx
    f803:	4c 89 e2             	mov    %r12,%rdx
    f806:	48 89 de             	mov    %rbx,%rsi
    f809:	e8 b5 15 00 00       	call   10dc3 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
    f80e:	48 83 c4 20          	add    $0x20,%rsp
    f812:	5b                   	pop    %rbx
    f813:	41 5c                	pop    %r12
    f815:	5d                   	pop    %rbp
    f816:	c3                   	ret

000000000000f817 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    f817:	55                   	push   %rbp
    f818:	48 89 e5             	mov    %rsp,%rbp
    f81b:	48 83 ec 20          	sub    $0x20,%rsp
    f81f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    f823:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    f82a:	ff ff 1f 
    f82d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    f831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f835:	48 89 c7             	mov    %rax,%rdi
    f838:	e8 e9 15 00 00       	call   10e26 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    f83d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    f841:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    f845:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    f849:	48 89 d6             	mov    %rdx,%rsi
    f84c:	48 89 c7             	mov    %rax,%rdi
    f84f:	e8 4f 51 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
    f854:	48 8b 00             	mov    (%rax),%rax
      }
    f857:	c9                   	leave
    f858:	c3                   	ret
    f859:	90                   	nop

000000000000f85a <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
    f85a:	55                   	push   %rbp
    f85b:	48 89 e5             	mov    %rsp,%rbp
    f85e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f862:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f866:	5d                   	pop    %rbp
    f867:	c3                   	ret

000000000000f868 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    f868:	55                   	push   %rbp
    f869:	48 89 e5             	mov    %rsp,%rbp
    f86c:	48 83 ec 20          	sub    $0x20,%rsp
    f870:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f874:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    f878:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    f87c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f880:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f884:	48 89 d6             	mov    %rdx,%rsi
    f887:	48 89 c7             	mov    %rax,%rdi
    f88a:	e8 b1 15 00 00       	call   10e40 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    f88f:	c9                   	leave
    f890:	c3                   	ret

000000000000f891 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    f891:	55                   	push   %rbp
    f892:	48 89 e5             	mov    %rsp,%rbp
    f895:	48 83 ec 10          	sub    $0x10,%rsp
    f899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f89d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    f8a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f8a9:	ba 00 00 00 00       	mov    $0x0,%edx
    f8ae:	48 89 ce             	mov    %rcx,%rsi
    f8b1:	48 89 c7             	mov    %rax,%rdi
    f8b4:	e8 e5 15 00 00       	call   10e9e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    f8b9:	c9                   	leave
    f8ba:	c3                   	ret

000000000000f8bb <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
    f8bb:	55                   	push   %rbp
    f8bc:	48 89 e5             	mov    %rsp,%rbp
    f8bf:	41 54                	push   %r12
    f8c1:	53                   	push   %rbx
    f8c2:	48 83 ec 20          	sub    $0x20,%rsp
    f8c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f8ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f8ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    f8d2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
    f8d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f8da:	48 89 c7             	mov    %rax,%rdi
    f8dd:	e8 1d 16 00 00       	call   10eff <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    f8e2:	49 89 c4             	mov    %rax,%r12
    f8e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f8e9:	48 89 c7             	mov    %rax,%rdi
    f8ec:	e8 0e 16 00 00       	call   10eff <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    f8f1:	48 89 c3             	mov    %rax,%rbx
    f8f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8f8:	48 89 c7             	mov    %rax,%rdi
    f8fb:	e8 ff 15 00 00       	call   10eff <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
    f900:	48 89 c7             	mov    %rax,%rdi
    f903:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f907:	48 89 c1             	mov    %rax,%rcx
    f90a:	4c 89 e2             	mov    %r12,%rdx
    f90d:	48 89 de             	mov    %rbx,%rsi
    f910:	e8 f8 15 00 00       	call   10f0d <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
    f915:	48 83 c4 20          	add    $0x20,%rsp
    f919:	5b                   	pop    %rbx
    f91a:	41 5c                	pop    %r12
    f91c:	5d                   	pop    %rbp
    f91d:	c3                   	ret

000000000000f91e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    f91e:	55                   	push   %rbp
    f91f:	48 89 e5             	mov    %rsp,%rbp
    f922:	48 83 ec 10          	sub    $0x10,%rsp
    f926:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    f92a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f92e:	48 89 c7             	mov    %rax,%rdi
    f931:	e8 3a 16 00 00       	call   10f70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    f936:	c9                   	leave
    f937:	c3                   	ret

000000000000f938 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    f938:	55                   	push   %rbp
    f939:	48 89 e5             	mov    %rsp,%rbp
    f93c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f940:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f944:	90                   	nop
    f945:	5d                   	pop    %rbp
    f946:	c3                   	ret
    f947:	90                   	nop

000000000000f948 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    f948:	55                   	push   %rbp
    f949:	48 89 e5             	mov    %rsp,%rbp
    f94c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    f950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f954:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f95b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f95f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f966:	00 
    f967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f96b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f972:	00 
	{ }
    f973:	90                   	nop
    f974:	5d                   	pop    %rbp
    f975:	c3                   	ret

000000000000f976 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    f976:	55                   	push   %rbp
    f977:	48 89 e5             	mov    %rsp,%rbp
    f97a:	48 83 ec 10          	sub    $0x10,%rsp
    f97e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f982:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    f986:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f98b:	74 15                	je     f9a2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    f98d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f991:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f995:	48 89 d6             	mov    %rdx,%rsi
    f998:	48 89 c7             	mov    %rax,%rdi
    f99b:	e8 ea 15 00 00       	call   10f8a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    f9a0:	eb 05                	jmp    f9a7 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    f9a2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    f9a7:	c9                   	leave
    f9a8:	c3                   	ret

000000000000f9a9 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    f9a9:	55                   	push   %rbp
    f9aa:	48 89 e5             	mov    %rsp,%rbp
    f9ad:	48 83 ec 20          	sub    $0x20,%rsp
    f9b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f9b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f9b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    f9bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f9c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f9c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9c9:	48 89 ce             	mov    %rcx,%rsi
    f9cc:	48 89 c7             	mov    %rax,%rdi
    f9cf:	e8 e0 15 00 00       	call   10fb4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    f9d4:	90                   	nop
    f9d5:	c9                   	leave
    f9d6:	c3                   	ret

000000000000f9d7 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    f9d7:	55                   	push   %rbp
    f9d8:	48 89 e5             	mov    %rsp,%rbp
    f9db:	48 83 ec 20          	sub    $0x20,%rsp
    f9df:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f9e3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    f9e7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    f9eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f9ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f9f3:	48 89 d6             	mov    %rdx,%rsi
    f9f6:	48 89 c7             	mov    %rax,%rdi
    f9f9:	e8 e7 15 00 00       	call   10fe5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    f9fe:	c9                   	leave
    f9ff:	c3                   	ret

000000000000fa00 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    fa00:	55                   	push   %rbp
    fa01:	48 89 e5             	mov    %rsp,%rbp
    fa04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa0c:	90                   	nop
    fa0d:	5d                   	pop    %rbp
    fa0e:	c3                   	ret

000000000000fa0f <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    fa0f:	55                   	push   %rbp
    fa10:	48 89 e5             	mov    %rsp,%rbp
    fa13:	48 83 ec 10          	sub    $0x10,%rsp
    fa17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    fa1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa1f:	48 89 c7             	mov    %rax,%rdi
    fa22:	e8 1b 16 00 00       	call   11042 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    fa27:	c9                   	leave
    fa28:	c3                   	ret
    fa29:	90                   	nop

000000000000fa2a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    fa2a:	55                   	push   %rbp
    fa2b:	48 89 e5             	mov    %rsp,%rbp
    fa2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa36:	90                   	nop
    fa37:	5d                   	pop    %rbp
    fa38:	c3                   	ret
    fa39:	90                   	nop

000000000000fa3a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    fa3a:	55                   	push   %rbp
    fa3b:	48 89 e5             	mov    %rsp,%rbp
    fa3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    fa42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa46:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    fa4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa51:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fa58:	00 
    fa59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa5d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fa64:	00 
	{ }
    fa65:	90                   	nop
    fa66:	5d                   	pop    %rbp
    fa67:	c3                   	ret

000000000000fa68 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    fa68:	55                   	push   %rbp
    fa69:	48 89 e5             	mov    %rsp,%rbp
    fa6c:	48 83 ec 10          	sub    $0x10,%rsp
    fa70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    fa78:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fa7d:	74 15                	je     fa94 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    fa7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa83:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa87:	48 89 d6             	mov    %rdx,%rsi
    fa8a:	48 89 c7             	mov    %rax,%rdi
    fa8d:	e8 ca 15 00 00       	call   1105c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    fa92:	eb 05                	jmp    fa99 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    fa94:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    fa99:	c9                   	leave
    fa9a:	c3                   	ret

000000000000fa9b <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    fa9b:	55                   	push   %rbp
    fa9c:	48 89 e5             	mov    %rsp,%rbp
    fa9f:	48 83 ec 20          	sub    $0x20,%rsp
    faa3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    faa7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    faab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    faaf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fab3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fabb:	48 89 ce             	mov    %rcx,%rsi
    fabe:	48 89 c7             	mov    %rax,%rdi
    fac1:	e8 c0 15 00 00       	call   11086 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    fac6:	90                   	nop
    fac7:	c9                   	leave
    fac8:	c3                   	ret

000000000000fac9 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    fac9:	55                   	push   %rbp
    faca:	48 89 e5             	mov    %rsp,%rbp
    facd:	48 83 ec 20          	sub    $0x20,%rsp
    fad1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fad5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    fad9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    fadd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fae1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fae5:	48 89 d6             	mov    %rdx,%rsi
    fae8:	48 89 c7             	mov    %rax,%rdi
    faeb:	e8 cf 15 00 00       	call   110bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    faf0:	c9                   	leave
    faf1:	c3                   	ret

000000000000faf2 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    faf2:	55                   	push   %rbp
    faf3:	48 89 e5             	mov    %rsp,%rbp
    faf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fafa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fafe:	90                   	nop
    faff:	5d                   	pop    %rbp
    fb00:	c3                   	ret

000000000000fb01 <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    fb01:	55                   	push   %rbp
    fb02:	48 89 e5             	mov    %rsp,%rbp
    fb05:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    fb09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb0d:	5d                   	pop    %rbp
    fb0e:	c3                   	ret

000000000000fb0f <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    fb0f:	55                   	push   %rbp
    fb10:	48 89 e5             	mov    %rsp,%rbp
    fb13:	53                   	push   %rbx
    fb14:	48 83 ec 18          	sub    $0x18,%rsp
    fb18:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fb1c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    fb20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fb24:	48 89 c6             	mov    %rax,%rsi
    fb27:	bf 04 00 00 00       	mov    $0x4,%edi
    fb2c:	e8 06 8c ff ff       	call   8737 <_ZnwmPv>
    fb31:	48 89 c3             	mov    %rax,%rbx
    fb34:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fb38:	48 89 c7             	mov    %rax,%rdi
    fb3b:	e8 62 c1 ff ff       	call   bca2 <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    fb40:	8b 00                	mov    (%rax),%eax
    fb42:	89 03                	mov    %eax,(%rbx)
    }
    fb44:	90                   	nop
    fb45:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fb49:	c9                   	leave
    fb4a:	c3                   	ret
    fb4b:	90                   	nop

000000000000fb4c <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    fb4c:	55                   	push   %rbp
    fb4d:	48 89 e5             	mov    %rsp,%rbp
    fb50:	48 83 ec 20          	sub    $0x20,%rsp
    fb54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb58:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb5c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    fb60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb64:	48 89 d0             	mov    %rdx,%rax
    fb67:	48 c1 e0 02          	shl    $0x2,%rax
    fb6b:	48 01 d0             	add    %rdx,%rax
    fb6e:	48 c1 e0 03          	shl    $0x3,%rax
    fb72:	48 89 c2             	mov    %rax,%rdx
    fb75:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fb79:	48 89 d6             	mov    %rdx,%rsi
    fb7c:	48 89 c7             	mov    %rax,%rdi
    fb7f:	e8 dc 37 ff ff       	call   3360 <_ZdlPvm@plt>
      }
    fb84:	c9                   	leave
    fb85:	c3                   	ret

000000000000fb86 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    fb86:	55                   	push   %rbp
    fb87:	48 89 e5             	mov    %rsp,%rbp
    fb8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb92:	90                   	nop
    fb93:	5d                   	pop    %rbp
    fb94:	c3                   	ret
    fb95:	90                   	nop

000000000000fb96 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    fb96:	55                   	push   %rbp
    fb97:	48 89 e5             	mov    %rsp,%rbp
    fb9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb9e:	90                   	nop
    fb9f:	5d                   	pop    %rbp
    fba0:	c3                   	ret

000000000000fba1 <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
    fba1:	55                   	push   %rbp
    fba2:	48 89 e5             	mov    %rsp,%rbp
    fba5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    fba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbad:	5d                   	pop    %rbp
    fbae:	c3                   	ret
    fbaf:	90                   	nop

000000000000fbb0 <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    fbb0:	55                   	push   %rbp
    fbb1:	48 89 e5             	mov    %rsp,%rbp
    fbb4:	48 83 ec 10          	sub    $0x10,%rsp
    fbb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    fbc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fbc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbc8:	48 89 d6             	mov    %rdx,%rsi
    fbcb:	48 89 c7             	mov    %rax,%rdi
    fbce:	e8 49 15 00 00       	call   1111c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>
    fbd3:	90                   	nop
    fbd4:	c9                   	leave
    fbd5:	c3                   	ret

000000000000fbd6 <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
    fbd6:	55                   	push   %rbp
    fbd7:	48 89 e5             	mov    %rsp,%rbp
    fbda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { }
    fbe2:	90                   	nop
    fbe3:	5d                   	pop    %rbp
    fbe4:	c3                   	ret
    fbe5:	90                   	nop

000000000000fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    fbe6:	55                   	push   %rbp
    fbe7:	48 89 e5             	mov    %rsp,%rbp
    fbea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
    fbf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbf6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fbfa:	48 89 10             	mov    %rdx,(%rax)
    fbfd:	90                   	nop
    fbfe:	5d                   	pop    %rbp
    fbff:	c3                   	ret

000000000000fc00 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    fc00:	55                   	push   %rbp
    fc01:	48 89 e5             	mov    %rsp,%rbp
    fc04:	53                   	push   %rbx
    fc05:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
    fc0c:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
    fc13:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
    fc1a:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
    fc21:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    fc28:	48 89 c7             	mov    %rax,%rdi
    fc2b:	e8 fc 14 00 00       	call   1112c <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>
    fc30:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
    fc37:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    fc3e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc45:	48 89 c7             	mov    %rax,%rdi
    fc48:	e8 07 15 00 00       	call   11154 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
    fc4d:	48 39 c3             	cmp    %rax,%rbx
    fc50:	0f 94 c0             	sete   %al
    fc53:	84 c0                	test   %al,%al
    fc55:	0f 84 c8 00 00 00    	je     fd23 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x123>
	  if (size() > 0
    fc5b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc62:	48 89 c7             	mov    %rax,%rdi
    fc65:	e8 fc 14 00 00       	call   11166 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
    fc6a:	48 85 c0             	test   %rax,%rax
    fc6d:	74 44                	je     fcb3 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
    fc6f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fc76:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fc7d:	48 89 c7             	mov    %rax,%rdi
    fc80:	e8 f3 14 00 00       	call   11178 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    fc85:	48 8b 00             	mov    (%rax),%rax
    fc88:	48 89 c7             	mov    %rax,%rdi
    fc8b:	e8 fa 14 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    fc90:	48 89 c1             	mov    %rax,%rcx
    fc93:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fc9a:	48 89 c2             	mov    %rax,%rdx
    fc9d:	48 89 ce             	mov    %rcx,%rsi
    fca0:	48 89 df             	mov    %rbx,%rdi
    fca3:	e8 fc 14 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
    fca8:	84 c0                	test   %al,%al
    fcaa:	74 07                	je     fcb3 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
    fcac:	b8 01 00 00 00       	mov    $0x1,%eax
    fcb1:	eb 05                	jmp    fcb8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb8>
    fcb3:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
    fcb8:	84 c0                	test   %al,%al
    fcba:	74 49                	je     fd05 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x105>
	    return _Res(0, _M_rightmost());
    fcbc:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fcc3:	48 89 c7             	mov    %rax,%rdi
    fcc6:	e8 ad 14 00 00       	call   11178 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    fccb:	48 89 c2             	mov    %rax,%rdx
    fcce:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
    fcd5:	00 00 00 00 
    fcd9:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
    fce0:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fce7:	48 89 ce             	mov    %rcx,%rsi
    fcea:	48 89 c7             	mov    %rax,%rdi
    fced:	e8 02 0e 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    fcf2:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    fcf9:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    fd00:	e9 43 03 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
    fd05:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    fd0c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd13:	48 89 d6             	mov    %rdx,%rsi
    fd16:	48 89 c7             	mov    %rax,%rdi
    fd19:	e8 aa 14 00 00       	call   111c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
    fd1e:	e9 25 03 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
    fd23:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fd2a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fd31:	48 89 c7             	mov    %rax,%rdi
    fd34:	e8 51 14 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    fd39:	48 89 c2             	mov    %rax,%rdx
    fd3c:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fd43:	48 89 c6             	mov    %rax,%rsi
    fd46:	48 89 df             	mov    %rbx,%rdi
    fd49:	e8 56 14 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
    fd4e:	84 c0                	test   %al,%al
    fd50:	0f 84 66 01 00 00    	je     febc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x2bc>
	  iterator __before = __pos;
    fd56:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fd5d:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
    fd64:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    fd6b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd72:	48 89 c7             	mov    %rax,%rdi
    fd75:	e8 c4 15 00 00       	call   1133e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    fd7a:	48 8b 00             	mov    (%rax),%rax
    fd7d:	48 39 c3             	cmp    %rax,%rbx
    fd80:	0f 94 c0             	sete   %al
    fd83:	84 c0                	test   %al,%al
    fd85:	74 4c                	je     fdd3 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
    fd87:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fd8e:	48 89 c7             	mov    %rax,%rdi
    fd91:	e8 a8 15 00 00       	call   1133e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    fd96:	48 89 c3             	mov    %rax,%rbx
    fd99:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    fda0:	48 89 c7             	mov    %rax,%rdi
    fda3:	e8 96 15 00 00       	call   1133e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
    fda8:	48 89 c1             	mov    %rax,%rcx
    fdab:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fdb2:	48 89 da             	mov    %rbx,%rdx
    fdb5:	48 89 ce             	mov    %rcx,%rsi
    fdb8:	48 89 c7             	mov    %rax,%rdi
    fdbb:	e8 90 15 00 00       	call   11350 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    fdc0:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    fdc7:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    fdce:	e9 75 02 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
    fdd3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fdda:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    fde1:	48 89 c7             	mov    %rax,%rdi
    fde4:	e8 ab 15 00 00       	call   11394 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
    fde9:	48 8b 00             	mov    (%rax),%rax
    fdec:	48 89 c7             	mov    %rax,%rdi
    fdef:	e8 96 13 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    fdf4:	48 89 c1             	mov    %rax,%rcx
    fdf7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fdfe:	48 89 c2             	mov    %rax,%rdx
    fe01:	48 89 ce             	mov    %rcx,%rsi
    fe04:	48 89 df             	mov    %rbx,%rdi
    fe07:	e8 98 13 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
    fe0c:	84 c0                	test   %al,%al
    fe0e:	0f 84 8a 00 00 00    	je     fe9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x29e>
	      if (_S_right(__before._M_node) == 0)
    fe14:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    fe1b:	48 89 c7             	mov    %rax,%rdi
    fe1e:	e8 64 e3 ff ff       	call   e187 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    fe23:	48 85 c0             	test   %rax,%rax
    fe26:	0f 94 c0             	sete   %al
    fe29:	84 c0                	test   %al,%al
    fe2b:	74 3e                	je     fe6b <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x26b>
		return _Res(0, __before._M_node);
    fe2d:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    fe34:	00 00 00 00 
    fe38:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    fe3f:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
    fe46:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    fe4d:	48 89 ce             	mov    %rcx,%rsi
    fe50:	48 89 c7             	mov    %rax,%rdi
    fe53:	e8 9c 0c 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    fe58:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    fe5f:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
    fe66:	e9 dd 01 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__pos._M_node, __pos._M_node);
    fe6b:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    fe72:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
    fe79:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    fe80:	48 89 ce             	mov    %rcx,%rsi
    fe83:	48 89 c7             	mov    %rax,%rdi
    fe86:	e8 c5 14 00 00       	call   11350 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    fe8b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    fe92:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    fe99:	e9 aa 01 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
    fe9e:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    fea5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    feac:	48 89 d6             	mov    %rdx,%rsi
    feaf:	48 89 c7             	mov    %rax,%rdi
    feb2:	e8 11 13 00 00       	call   111c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
    feb7:	e9 8c 01 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
    febc:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    fec3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    feca:	48 89 c7             	mov    %rax,%rdi
    fecd:	e8 b8 12 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    fed2:	48 89 c1             	mov    %rax,%rcx
    fed5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    fedc:	48 89 c2             	mov    %rax,%rdx
    fedf:	48 89 ce             	mov    %rcx,%rsi
    fee2:	48 89 df             	mov    %rbx,%rdi
    fee5:	e8 ba 12 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
    feea:	84 c0                	test   %al,%al
    feec:	0f 84 2c 01 00 00    	je     1001e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x41e>
	  iterator __after = __pos;
    fef2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    fef9:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
    ff00:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
    ff07:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ff0e:	48 89 c7             	mov    %rax,%rdi
    ff11:	e8 62 12 00 00       	call   11178 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    ff16:	48 8b 00             	mov    (%rax),%rax
    ff19:	48 39 c3             	cmp    %rax,%rbx
    ff1c:	0f 94 c0             	sete   %al
    ff1f:	84 c0                	test   %al,%al
    ff21:	74 3a                	je     ff5d <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x35d>
	    return _Res(0, _M_rightmost());
    ff23:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
    ff2a:	48 89 c7             	mov    %rax,%rdi
    ff2d:	e8 46 12 00 00       	call   11178 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
    ff32:	48 89 c2             	mov    %rax,%rdx
    ff35:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    ff3c:	00 
    ff3d:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
    ff41:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ff45:	48 89 ce             	mov    %rcx,%rsi
    ff48:	48 89 c7             	mov    %rax,%rdi
    ff4b:	e8 a4 0b 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ff50:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    ff54:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ff58:	e9 eb 00 00 00       	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
    ff5d:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
    ff64:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
    ff6b:	48 89 c7             	mov    %rax,%rdi
    ff6e:	e8 49 14 00 00       	call   113bc <_ZNSt17_Rb_tree_iteratorIjEppEv>
    ff73:	48 8b 00             	mov    (%rax),%rax
    ff76:	48 89 c7             	mov    %rax,%rdi
    ff79:	e8 0c 12 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
    ff7e:	48 89 c2             	mov    %rax,%rdx
    ff81:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
    ff88:	48 89 c6             	mov    %rax,%rsi
    ff8b:	48 89 df             	mov    %rbx,%rdi
    ff8e:	e8 11 12 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
    ff93:	84 c0                	test   %al,%al
    ff95:	74 6c                	je     10003 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x403>
	      if (_S_right(__pos._M_node) == 0)
    ff97:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    ff9e:	48 89 c7             	mov    %rax,%rdi
    ffa1:	e8 e1 e1 ff ff       	call   e187 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    ffa6:	48 85 c0             	test   %rax,%rax
    ffa9:	0f 94 c0             	sete   %al
    ffac:	84 c0                	test   %al,%al
    ffae:	74 2c                	je     ffdc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x3dc>
		return _Res(0, __pos._M_node);
    ffb0:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    ffb7:	00 
    ffb8:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
    ffbf:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    ffc3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ffc7:	48 89 ce             	mov    %rcx,%rsi
    ffca:	48 89 c7             	mov    %rax,%rdi
    ffcd:	e8 22 0b 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
    ffd2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    ffd6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ffda:	eb 6c                	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__after._M_node, __after._M_node);
    ffdc:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
    ffe3:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
    ffea:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ffee:	48 89 ce             	mov    %rcx,%rsi
    fff1:	48 89 c7             	mov    %rax,%rdi
    fff4:	e8 57 13 00 00       	call   11350 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
    fff9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    fffd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10001:	eb 45                	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   10003:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1000a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   10011:	48 89 d6             	mov    %rdx,%rsi
   10014:	48 89 c7             	mov    %rax,%rdi
   10017:	e8 ac 11 00 00       	call   111c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   1001c:	eb 2a                	jmp    10048 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	return _Res(__pos._M_node, 0);
   1001e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   10025:	00 
   10026:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1002a:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   10031:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   10035:	48 89 ce             	mov    %rcx,%rsi
   10038:	48 89 c7             	mov    %rax,%rdi
   1003b:	e8 b4 0a 00 00       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   10040:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10044:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   10048:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1004c:	c9                   	leave
   1004d:	c3                   	ret

000000000001004e <_ZNKSt9_IdentityIjEclERKj>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
   1004e:	55                   	push   %rbp
   1004f:	48 89 e5             	mov    %rsp,%rbp
   10052:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10056:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   1005a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1005e:	5d                   	pop    %rbp
   1005f:	c3                   	ret

0000000000010060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10060:	55                   	push   %rbp
   10061:	48 89 e5             	mov    %rsp,%rbp
   10064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10068:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1006c:	5d                   	pop    %rbp
   1006d:	c3                   	ret

000000000001006e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1006e:	55                   	push   %rbp
   1006f:	48 89 e5             	mov    %rsp,%rbp
   10072:	41 54                	push   %r12
   10074:	53                   	push   %rbx
   10075:	48 83 ec 50          	sub    $0x50,%rsp
   10079:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1007d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   10081:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   10085:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   10089:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   1008d:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10092:	75 4a                	jne    100de <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
	bool __insert_left = (__x != 0 || __p == _M_end()
   10094:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10098:	48 89 c7             	mov    %rax,%rdi
   1009b:	e8 b4 10 00 00       	call   11154 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   100a0:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   100a4:	74 38                	je     100de <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   100a6:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   100aa:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   100ae:	48 89 c7             	mov    %rax,%rdi
   100b1:	e8 d4 10 00 00       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   100b6:	49 89 c4             	mov    %rax,%r12
   100b9:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   100bd:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   100c1:	48 89 d6             	mov    %rdx,%rsi
   100c4:	48 89 c7             	mov    %rax,%rdi
   100c7:	e8 82 ff ff ff       	call   1004e <_ZNKSt9_IdentityIjEclERKj>
   100cc:	4c 89 e2             	mov    %r12,%rdx
   100cf:	48 89 c6             	mov    %rax,%rsi
   100d2:	48 89 df             	mov    %rbx,%rdi
   100d5:	e8 ca 10 00 00       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
   100da:	84 c0                	test   %al,%al
   100dc:	74 07                	je     100e5 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x77>
   100de:	b8 01 00 00 00       	mov    $0x1,%eax
   100e3:	eb 05                	jmp    100ea <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x7c>
   100e5:	b8 00 00 00 00       	mov    $0x0,%eax
	bool __insert_left = (__x != 0 || __p == _M_end()
   100ea:	88 45 ef             	mov    %al,-0x11(%rbp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
   100ed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   100f1:	48 89 c7             	mov    %rax,%rdi
   100f4:	e8 67 ff ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   100f9:	48 89 c2             	mov    %rax,%rdx
   100fc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10100:	48 89 d6             	mov    %rdx,%rsi
   10103:	48 89 c7             	mov    %rax,%rdi
   10106:	e8 d9 12 00 00       	call   113e4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>
   1010b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
				      this->_M_impl._M_header);
   1010f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10113:	48 8d 48 08          	lea    0x8(%rax),%rcx
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   10117:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   1011b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   1011f:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   10123:	89 c7                	mov    %eax,%edi
   10125:	e8 26 2f ff ff       	call   3050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
	++_M_impl._M_node_count;
   1012a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1012e:	48 8b 40 28          	mov    0x28(%rax),%rax
   10132:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10136:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1013a:	48 89 50 28          	mov    %rdx,0x28(%rax)
	return iterator(__z);
   1013e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10142:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10146:	48 89 d6             	mov    %rdx,%rsi
   10149:	48 89 c7             	mov    %rax,%rdi
   1014c:	e8 95 fa ff ff       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   10151:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   10155:	48 83 c4 50          	add    $0x50,%rsp
   10159:	5b                   	pop    %rbx
   1015a:	41 5c                	pop    %r12
   1015c:	5d                   	pop    %rbp
   1015d:	c3                   	ret

000000000001015e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1015e:	55                   	push   %rbp
   1015f:	48 89 e5             	mov    %rsp,%rbp
   10162:	53                   	push   %rbx
   10163:	48 83 ec 18          	sub    $0x18,%rsp
   10167:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1016b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   1016f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10173:	48 89 c7             	mov    %rax,%rdi
   10176:	e8 ad 12 00 00       	call   11428 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   1017b:	48 89 c3             	mov    %rax,%rbx
   1017e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10182:	48 89 c7             	mov    %rax,%rdi
   10185:	e8 90 12 00 00       	call   1141a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   1018a:	48 89 de             	mov    %rbx,%rsi
   1018d:	48 89 c7             	mov    %rax,%rdi
   10190:	e8 b1 12 00 00       	call   11446 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>
      }
   10195:	90                   	nop
   10196:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1019a:	c9                   	leave
   1019b:	c3                   	ret

000000000001019c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   1019c:	55                   	push   %rbp
   1019d:	48 89 e5             	mov    %rsp,%rbp
   101a0:	48 83 ec 10          	sub    $0x10,%rsp
   101a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   101ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101b0:	48 89 c7             	mov    %rax,%rdi
   101b3:	e8 62 12 00 00       	call   1141a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   101b8:	48 89 c1             	mov    %rax,%rcx
   101bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   101bf:	ba 01 00 00 00       	mov    $0x1,%edx
   101c4:	48 89 c6             	mov    %rax,%rsi
   101c7:	48 89 cf             	mov    %rcx,%rdi
   101ca:	e8 9d 12 00 00       	call   1146c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>
   101cf:	90                   	nop
   101d0:	c9                   	leave
   101d1:	c3                   	ret

00000000000101d2 <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() const noexcept
   101d2:	55                   	push   %rbp
   101d3:	48 89 e5             	mov    %rsp,%rbp
   101d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   101da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101de:	5d                   	pop    %rbp
   101df:	c3                   	ret

00000000000101e0 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   101e0:	55                   	push   %rbp
   101e1:	48 89 e5             	mov    %rsp,%rbp
   101e4:	48 83 ec 10          	sub    $0x10,%rsp
   101e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   101ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101f0:	48 89 c7             	mov    %rax,%rdi
   101f3:	e8 e4 12 00 00       	call   114dc <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   101f8:	48 89 c7             	mov    %rax,%rdi
   101fb:	e8 9a 12 00 00       	call   1149a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   10200:	c9                   	leave
   10201:	c3                   	ret

0000000000010202 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   10202:	55                   	push   %rbp
   10203:	48 89 e5             	mov    %rsp,%rbp
   10206:	48 83 ec 10          	sub    $0x10,%rsp
   1020a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1020e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10212:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1021a:	ba 00 00 00 00       	mov    $0x0,%edx
   1021f:	48 89 ce             	mov    %rcx,%rsi
   10222:	48 89 c7             	mov    %rax,%rdi
   10225:	e8 c0 12 00 00       	call   114ea <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>
   1022a:	c9                   	leave
   1022b:	c3                   	ret

000000000001022c <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1022c:	55                   	push   %rbp
   1022d:	48 89 e5             	mov    %rsp,%rbp
   10230:	41 54                	push   %r12
   10232:	53                   	push   %rbx
   10233:	48 83 ec 20          	sub    $0x20,%rsp
   10237:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1023b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1023f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10243:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10247:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1024b:	48 89 c7             	mov    %rax,%rdi
   1024e:	e8 02 13 00 00       	call   11555 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   10253:	49 89 c4             	mov    %rax,%r12
   10256:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1025a:	48 89 c7             	mov    %rax,%rdi
   1025d:	e8 f3 12 00 00       	call   11555 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   10262:	48 89 c3             	mov    %rax,%rbx
   10265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10269:	48 89 c7             	mov    %rax,%rdi
   1026c:	e8 e4 12 00 00       	call   11555 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   10271:	48 89 c7             	mov    %rax,%rdi
   10274:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10278:	48 89 c1             	mov    %rax,%rcx
   1027b:	4c 89 e2             	mov    %r12,%rdx
   1027e:	48 89 de             	mov    %rbx,%rsi
   10281:	e8 dd 12 00 00       	call   11563 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
   10286:	48 83 c4 20          	add    $0x20,%rsp
   1028a:	5b                   	pop    %rbx
   1028b:	41 5c                	pop    %r12
   1028d:	5d                   	pop    %rbp
   1028e:	c3                   	ret
   1028f:	90                   	nop

0000000000010290 <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() const noexcept
   10290:	55                   	push   %rbp
   10291:	48 89 e5             	mov    %rsp,%rbp
   10294:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   10298:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1029c:	5d                   	pop    %rbp
   1029d:	c3                   	ret

000000000001029e <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1029e:	55                   	push   %rbp
   1029f:	48 89 e5             	mov    %rsp,%rbp
   102a2:	48 83 ec 20          	sub    $0x20,%rsp
   102a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   102aa:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   102b1:	ff ff 0f 
   102b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   102b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102bc:	48 89 c7             	mov    %rax,%rdi
   102bf:	e8 25 13 00 00       	call   115e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
   102c4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   102c8:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   102cc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   102d0:	48 89 d6             	mov    %rdx,%rsi
   102d3:	48 89 c7             	mov    %rax,%rdi
   102d6:	e8 c8 46 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
   102db:	48 8b 00             	mov    (%rax),%rax
      }
   102de:	c9                   	leave
   102df:	c3                   	ret

00000000000102e0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   102e0:	55                   	push   %rbp
   102e1:	48 89 e5             	mov    %rsp,%rbp
   102e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   102e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ec:	5d                   	pop    %rbp
   102ed:	c3                   	ret

00000000000102ee <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   102ee:	55                   	push   %rbp
   102ef:	48 89 e5             	mov    %rsp,%rbp
   102f2:	48 83 ec 20          	sub    $0x20,%rsp
   102f6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   102fa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   102fe:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10302:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1030a:	48 89 d6             	mov    %rdx,%rsi
   1030d:	48 89 c7             	mov    %rax,%rdi
   10310:	e8 ee 12 00 00       	call   11603 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
   10315:	c9                   	leave
   10316:	c3                   	ret

0000000000010317 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   10317:	55                   	push   %rbp
   10318:	48 89 e5             	mov    %rsp,%rbp
   1031b:	48 83 ec 10          	sub    $0x10,%rsp
   1031f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10323:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10327:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1032b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1032f:	ba 00 00 00 00       	mov    $0x0,%edx
   10334:	48 89 ce             	mov    %rcx,%rsi
   10337:	48 89 c7             	mov    %rax,%rdi
   1033a:	e8 21 13 00 00       	call   11660 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
   1033f:	c9                   	leave
   10340:	c3                   	ret

0000000000010341 <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10341:	55                   	push   %rbp
   10342:	48 89 e5             	mov    %rsp,%rbp
   10345:	41 54                	push   %r12
   10347:	53                   	push   %rbx
   10348:	48 83 ec 20          	sub    $0x20,%rsp
   1034c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10350:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10354:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10358:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1035c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10360:	48 89 c7             	mov    %rax,%rdi
   10363:	e8 59 13 00 00       	call   116c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   10368:	49 89 c4             	mov    %rax,%r12
   1036b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1036f:	48 89 c7             	mov    %rax,%rdi
   10372:	e8 4a 13 00 00       	call   116c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   10377:	48 89 c3             	mov    %rax,%rbx
   1037a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1037e:	48 89 c7             	mov    %rax,%rdi
   10381:	e8 3b 13 00 00       	call   116c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   10386:	48 89 c7             	mov    %rax,%rdi
   10389:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1038d:	48 89 c1             	mov    %rax,%rcx
   10390:	4c 89 e2             	mov    %r12,%rdx
   10393:	48 89 de             	mov    %rbx,%rsi
   10396:	e8 34 13 00 00       	call   116cf <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1039b:	48 83 c4 20          	add    $0x20,%rsp
   1039f:	5b                   	pop    %rbx
   103a0:	41 5c                	pop    %r12
   103a2:	5d                   	pop    %rbp
   103a3:	c3                   	ret

00000000000103a4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   103a4:	55                   	push   %rbp
   103a5:	48 89 e5             	mov    %rsp,%rbp
   103a8:	48 83 ec 20          	sub    $0x20,%rsp
   103ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   103b0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   103b7:	ff ff 0f 
   103ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   103be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103c2:	48 89 c7             	mov    %rax,%rdi
   103c5:	e8 68 13 00 00       	call   11732 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   103ca:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   103ce:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   103d2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   103d6:	48 89 d6             	mov    %rdx,%rsi
   103d9:	48 89 c7             	mov    %rax,%rdi
   103dc:	e8 c2 45 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
   103e1:	48 8b 00             	mov    (%rax),%rax
      }
   103e4:	c9                   	leave
   103e5:	c3                   	ret

00000000000103e6 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   103e6:	55                   	push   %rbp
   103e7:	48 89 e5             	mov    %rsp,%rbp
   103ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   103ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103f2:	5d                   	pop    %rbp
   103f3:	c3                   	ret

00000000000103f4 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   103f4:	55                   	push   %rbp
   103f5:	48 89 e5             	mov    %rsp,%rbp
   103f8:	48 83 ec 20          	sub    $0x20,%rsp
   103fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10400:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10404:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10408:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1040c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10410:	48 89 d6             	mov    %rdx,%rsi
   10413:	48 89 c7             	mov    %rax,%rdi
   10416:	e8 31 13 00 00       	call   1174c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   1041b:	c9                   	leave
   1041c:	c3                   	ret

000000000001041d <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1041d:	55                   	push   %rbp
   1041e:	48 89 e5             	mov    %rsp,%rbp
   10421:	48 83 ec 10          	sub    $0x10,%rsp
   10425:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10429:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1042d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10431:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10435:	ba 00 00 00 00       	mov    $0x0,%edx
   1043a:	48 89 ce             	mov    %rcx,%rsi
   1043d:	48 89 c7             	mov    %rax,%rdi
   10440:	e8 65 13 00 00       	call   117aa <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   10445:	c9                   	leave
   10446:	c3                   	ret

0000000000010447 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   10447:	55                   	push   %rbp
   10448:	48 89 e5             	mov    %rsp,%rbp
   1044b:	41 54                	push   %r12
   1044d:	53                   	push   %rbx
   1044e:	48 83 ec 20          	sub    $0x20,%rsp
   10452:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10456:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1045a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1045e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10462:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10466:	48 89 c7             	mov    %rax,%rdi
   10469:	e8 9d 13 00 00       	call   1180b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1046e:	49 89 c4             	mov    %rax,%r12
   10471:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10475:	48 89 c7             	mov    %rax,%rdi
   10478:	e8 8e 13 00 00       	call   1180b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1047d:	48 89 c3             	mov    %rax,%rbx
   10480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10484:	48 89 c7             	mov    %rax,%rdi
   10487:	e8 7f 13 00 00       	call   1180b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1048c:	48 89 c7             	mov    %rax,%rdi
   1048f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10493:	48 89 c1             	mov    %rax,%rcx
   10496:	4c 89 e2             	mov    %r12,%rdx
   10499:	48 89 de             	mov    %rbx,%rsi
   1049c:	e8 78 13 00 00       	call   11819 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   104a1:	48 83 c4 20          	add    $0x20,%rsp
   104a5:	5b                   	pop    %rbx
   104a6:	41 5c                	pop    %r12
   104a8:	5d                   	pop    %rbp
   104a9:	c3                   	ret

00000000000104aa <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   104aa:	55                   	push   %rbp
   104ab:	48 89 e5             	mov    %rsp,%rbp
   104ae:	48 83 ec 10          	sub    $0x10,%rsp
   104b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   104b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104ba:	48 89 c7             	mov    %rax,%rdi
   104bd:	e8 ba 13 00 00       	call   1187c <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
   104c2:	c9                   	leave
   104c3:	c3                   	ret

00000000000104c4 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   104c4:	55                   	push   %rbp
   104c5:	48 89 e5             	mov    %rsp,%rbp
   104c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   104cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104d0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   104d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104db:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   104e2:	00 
   104e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104e7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   104ee:	00 
	{ }
   104ef:	90                   	nop
   104f0:	5d                   	pop    %rbp
   104f1:	c3                   	ret

00000000000104f2 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   104f2:	55                   	push   %rbp
   104f3:	48 89 e5             	mov    %rsp,%rbp
   104f6:	48 83 ec 10          	sub    $0x10,%rsp
   104fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   10502:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   10507:	74 15                	je     1051e <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
   10509:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1050d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10511:	48 89 d6             	mov    %rdx,%rsi
   10514:	48 89 c7             	mov    %rax,%rdi
   10517:	e8 7a 13 00 00       	call   11896 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
   1051c:	eb 05                	jmp    10523 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
   1051e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   10523:	c9                   	leave
   10524:	c3                   	ret

0000000000010525 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   10525:	55                   	push   %rbp
   10526:	48 89 e5             	mov    %rsp,%rbp
   10529:	48 83 ec 20          	sub    $0x20,%rsp
   1052d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10531:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   10535:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   10539:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1053d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10541:	48 89 d6             	mov    %rdx,%rsi
   10544:	48 89 c7             	mov    %rax,%rdi
   10547:	e8 74 13 00 00       	call   118c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
   1054c:	c9                   	leave
   1054d:	c3                   	ret

000000000001054e <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
   1054e:	55                   	push   %rbp
   1054f:	48 89 e5             	mov    %rsp,%rbp
   10552:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10556:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1055a:	90                   	nop
   1055b:	5d                   	pop    %rbp
   1055c:	c3                   	ret
   1055d:	90                   	nop

000000000001055e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1055e:	55                   	push   %rbp
   1055f:	48 89 e5             	mov    %rsp,%rbp
   10562:	48 83 ec 20          	sub    $0x20,%rsp
   10566:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1056a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1056e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   10572:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10576:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1057a:	48 89 d6             	mov    %rdx,%rsi
   1057d:	48 89 c7             	mov    %rax,%rdi
   10580:	e8 db 2d ff ff       	call   3360 <_ZdlPvm@plt>
      }
   10585:	c9                   	leave
   10586:	c3                   	ret
   10587:	90                   	nop

0000000000010588 <_ZNSaI14VkDynamicStateEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   10588:	55                   	push   %rbp
   10589:	48 89 e5             	mov    %rsp,%rbp
   1058c:	48 83 ec 10          	sub    $0x10,%rsp
   10590:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10594:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   10598:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1059c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105a0:	48 89 d6             	mov    %rdx,%rsi
   105a3:	48 89 c7             	mov    %rax,%rdi
   105a6:	e8 73 13 00 00       	call   1191e <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>
   105ab:	90                   	nop
   105ac:	c9                   	leave
   105ad:	c3                   	ret

00000000000105ae <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   105ae:	55                   	push   %rbp
   105af:	48 89 e5             	mov    %rsp,%rbp
   105b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   105b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105ba:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   105c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105c5:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   105cc:	00 
   105cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105d1:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   105d8:	00 
	{ }
   105d9:	90                   	nop
   105da:	5d                   	pop    %rbp
   105db:	c3                   	ret

00000000000105dc <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   105dc:	55                   	push   %rbp
   105dd:	48 89 e5             	mov    %rsp,%rbp
   105e0:	48 83 ec 20          	sub    $0x20,%rsp
   105e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   105e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   105ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   105f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   105f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   105f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105fc:	48 89 ce             	mov    %rcx,%rsi
   105ff:	48 89 c7             	mov    %rax,%rdi
   10602:	e8 27 13 00 00       	call   1192e <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>
   10607:	90                   	nop
   10608:	c9                   	leave
   10609:	c3                   	ret

000000000001060a <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1060a:	55                   	push   %rbp
   1060b:	48 89 e5             	mov    %rsp,%rbp
   1060e:	48 83 ec 20          	sub    $0x20,%rsp
   10612:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   10616:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1061d:	ff ff 1f 
   10620:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   10624:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10628:	48 89 c7             	mov    %rax,%rdi
   1062b:	e8 2f 13 00 00       	call   1195f <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>
   10630:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   10634:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10638:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1063c:	48 89 d6             	mov    %rdx,%rsi
   1063f:	48 89 c7             	mov    %rax,%rdi
   10642:	e8 5c 43 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
   10647:	48 8b 00             	mov    (%rax),%rax
      }
   1064a:	c9                   	leave
   1064b:	c3                   	ret

000000000001064c <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1064c:	55                   	push   %rbp
   1064d:	48 89 e5             	mov    %rsp,%rbp
   10650:	48 83 ec 10          	sub    $0x10,%rsp
   10654:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10658:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1065c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10664:	ba 00 00 00 00       	mov    $0x0,%edx
   10669:	48 89 ce             	mov    %rcx,%rsi
   1066c:	48 89 c7             	mov    %rax,%rdi
   1066f:	e8 06 13 00 00       	call   1197a <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>
   10674:	c9                   	leave
   10675:	c3                   	ret

0000000000010676 <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   10676:	55                   	push   %rbp
   10677:	48 89 e5             	mov    %rsp,%rbp
   1067a:	48 83 ec 30          	sub    $0x30,%rsp
   1067e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10682:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10686:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   1068a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1068e:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   10692:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10696:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1069a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1069e:	48 89 ce             	mov    %rcx,%rsi
   106a1:	48 89 c7             	mov    %rax,%rdi
   106a4:	e8 32 13 00 00       	call   119db <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>
    }
   106a9:	c9                   	leave
   106aa:	c3                   	ret

00000000000106ab <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>:
   106ab:	55                   	push   %rbp
   106ac:	48 89 e5             	mov    %rsp,%rbp
   106af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106b7:	90                   	nop
   106b8:	5d                   	pop    %rbp
   106b9:	c3                   	ret

00000000000106ba <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   106ba:	55                   	push   %rbp
   106bb:	48 89 e5             	mov    %rsp,%rbp
   106be:	48 83 ec 20          	sub    $0x20,%rsp
   106c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   106c6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   106cd:	ff ff 0f 
   106d0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   106d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106d8:	48 89 c7             	mov    %rax,%rdi
   106db:	e8 28 13 00 00       	call   11a08 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   106e0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   106e4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   106e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   106ec:	48 89 d6             	mov    %rdx,%rsi
   106ef:	48 89 c7             	mov    %rax,%rdi
   106f2:	e8 ac 42 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
   106f7:	48 8b 00             	mov    (%rax),%rax
      }
   106fa:	c9                   	leave
   106fb:	c3                   	ret

00000000000106fc <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   106fc:	55                   	push   %rbp
   106fd:	48 89 e5             	mov    %rsp,%rbp
   10700:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10708:	5d                   	pop    %rbp
   10709:	c3                   	ret

000000000001070a <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1070a:	55                   	push   %rbp
   1070b:	48 89 e5             	mov    %rsp,%rbp
   1070e:	48 83 ec 20          	sub    $0x20,%rsp
   10712:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10716:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1071a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1071e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10722:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10726:	48 89 d6             	mov    %rdx,%rsi
   10729:	48 89 c7             	mov    %rax,%rdi
   1072c:	e8 f1 12 00 00       	call   11a22 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   10731:	c9                   	leave
   10732:	c3                   	ret

0000000000010733 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   10733:	55                   	push   %rbp
   10734:	48 89 e5             	mov    %rsp,%rbp
   10737:	48 83 ec 10          	sub    $0x10,%rsp
   1073b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1073f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10743:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10747:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1074b:	ba 00 00 00 00       	mov    $0x0,%edx
   10750:	48 89 ce             	mov    %rcx,%rsi
   10753:	48 89 c7             	mov    %rax,%rdi
   10756:	e8 25 13 00 00       	call   11a80 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   1075b:	c9                   	leave
   1075c:	c3                   	ret

000000000001075d <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1075d:	55                   	push   %rbp
   1075e:	48 89 e5             	mov    %rsp,%rbp
   10761:	41 54                	push   %r12
   10763:	53                   	push   %rbx
   10764:	48 83 ec 20          	sub    $0x20,%rsp
   10768:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1076c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10770:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10774:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   10778:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1077c:	48 89 c7             	mov    %rax,%rdi
   1077f:	e8 5d 13 00 00       	call   11ae1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   10784:	49 89 c4             	mov    %rax,%r12
   10787:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1078b:	48 89 c7             	mov    %rax,%rdi
   1078e:	e8 4e 13 00 00       	call   11ae1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   10793:	48 89 c3             	mov    %rax,%rbx
   10796:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1079a:	48 89 c7             	mov    %rax,%rdi
   1079d:	e8 3f 13 00 00       	call   11ae1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   107a2:	48 89 c7             	mov    %rax,%rdi
   107a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   107a9:	48 89 c1             	mov    %rax,%rcx
   107ac:	4c 89 e2             	mov    %r12,%rdx
   107af:	48 89 de             	mov    %rbx,%rsi
   107b2:	e8 38 13 00 00       	call   11aef <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   107b7:	48 83 c4 20          	add    $0x20,%rsp
   107bb:	5b                   	pop    %rbx
   107bc:	41 5c                	pop    %r12
   107be:	5d                   	pop    %rbp
   107bf:	c3                   	ret

00000000000107c0 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   107c0:	55                   	push   %rbp
   107c1:	48 89 e5             	mov    %rsp,%rbp
   107c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   107c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107cc:	5d                   	pop    %rbp
   107cd:	c3                   	ret

00000000000107ce <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   107ce:	55                   	push   %rbp
   107cf:	48 89 e5             	mov    %rsp,%rbp
   107d2:	48 83 ec 10          	sub    $0x10,%rsp
   107d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   107da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107de:	48 89 c7             	mov    %rax,%rdi
   107e1:	e8 6c 13 00 00       	call   11b52 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   107e6:	c9                   	leave
   107e7:	c3                   	ret

00000000000107e8 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   107e8:	55                   	push   %rbp
   107e9:	48 89 e5             	mov    %rsp,%rbp
   107ec:	48 83 ec 10          	sub    $0x10,%rsp
   107f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   107f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   107fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10800:	ba 00 00 00 00       	mov    $0x0,%edx
   10805:	48 89 ce             	mov    %rcx,%rsi
   10808:	48 89 c7             	mov    %rax,%rdi
   1080b:	e8 56 13 00 00       	call   11b66 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
   10810:	c9                   	leave
   10811:	c3                   	ret

0000000000010812 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10812:	55                   	push   %rbp
   10813:	48 89 e5             	mov    %rsp,%rbp
   10816:	48 83 ec 20          	sub    $0x20,%rsp
   1081a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1081e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10822:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10827:	74 43                	je     1086c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   10829:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1082d:	48 89 c7             	mov    %rax,%rdi
   10830:	e8 9c 13 00 00       	call   11bd1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
   10835:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1083d:	48 89 c7             	mov    %rax,%rdi
   10840:	e8 9a 13 00 00       	call   11bdf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
   10845:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
   1084c:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   1084d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10851:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10855:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1085d:	48 89 ce             	mov    %rcx,%rsi
   10860:	48 89 c7             	mov    %rax,%rdi
   10863:	e8 d1 13 00 00       	call   11c39 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
   10868:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1086c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10870:	c9                   	leave
   10871:	c3                   	ret

0000000000010872 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   10872:	55                   	push   %rbp
   10873:	48 89 e5             	mov    %rsp,%rbp
   10876:	48 83 ec 20          	sub    $0x20,%rsp
   1087a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1087e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10882:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   10886:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1088a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1088e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10892:	48 89 ce             	mov    %rcx,%rsi
   10895:	48 89 c7             	mov    %rax,%rdi
   10898:	e8 e0 13 00 00       	call   11c7d <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>
   1089d:	c9                   	leave
   1089e:	c3                   	ret
   1089f:	90                   	nop

00000000000108a0 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   108a0:	55                   	push   %rbp
   108a1:	48 89 e5             	mov    %rsp,%rbp
   108a4:	48 83 ec 10          	sub    $0x10,%rsp
   108a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   108ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b0:	48 89 c7             	mov    %rax,%rdi
   108b3:	e8 10 14 00 00       	call   11cc8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   108b8:	48 89 c7             	mov    %rax,%rdi
   108bb:	e8 18 3f ff ff       	call   47d8 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   108c0:	c9                   	leave
   108c1:	c3                   	ret

00000000000108c2 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   108c2:	55                   	push   %rbp
   108c3:	48 89 e5             	mov    %rsp,%rbp
   108c6:	41 54                	push   %r12
   108c8:	53                   	push   %rbx
   108c9:	48 83 ec 20          	sub    $0x20,%rsp
   108cd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   108d1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   108d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   108d9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   108dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   108e1:	48 89 c7             	mov    %rax,%rdi
   108e4:	e8 72 42 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   108e9:	49 89 c4             	mov    %rax,%r12
   108ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   108f0:	48 89 c7             	mov    %rax,%rdi
   108f3:	e8 63 42 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   108f8:	48 89 c3             	mov    %rax,%rbx
   108fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108ff:	48 89 c7             	mov    %rax,%rdi
   10902:	e8 54 42 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   10907:	48 89 c7             	mov    %rax,%rdi
   1090a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1090e:	48 89 c1             	mov    %rax,%rcx
   10911:	4c 89 e2             	mov    %r12,%rdx
   10914:	48 89 de             	mov    %rbx,%rsi
   10917:	e8 ba 13 00 00       	call   11cd6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1091c:	48 83 c4 20          	add    $0x20,%rsp
   10920:	5b                   	pop    %rbx
   10921:	41 5c                	pop    %r12
   10923:	5d                   	pop    %rbp
   10924:	c3                   	ret
   10925:	90                   	nop

0000000000010926 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   10926:	55                   	push   %rbp
   10927:	48 89 e5             	mov    %rsp,%rbp
   1092a:	48 83 ec 10          	sub    $0x10,%rsp
   1092e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   10932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10936:	48 89 c7             	mov    %rax,%rdi
   10939:	e8 fc 13 00 00       	call   11d3a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   1093e:	c9                   	leave
   1093f:	c3                   	ret

0000000000010940 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   10940:	55                   	push   %rbp
   10941:	48 89 e5             	mov    %rsp,%rbp
   10944:	48 83 ec 10          	sub    $0x10,%rsp
   10948:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1094c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10950:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10958:	ba 00 00 00 00       	mov    $0x0,%edx
   1095d:	48 89 ce             	mov    %rcx,%rsi
   10960:	48 89 c7             	mov    %rax,%rdi
   10963:	e8 e6 13 00 00       	call   11d4e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
   10968:	c9                   	leave
   10969:	c3                   	ret

000000000001096a <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1096a:	55                   	push   %rbp
   1096b:	48 89 e5             	mov    %rsp,%rbp
   1096e:	48 83 ec 20          	sub    $0x20,%rsp
   10972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10976:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1097a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1097e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10982:	48 89 d0             	mov    %rdx,%rax
   10985:	48 c1 e0 06          	shl    $0x6,%rax
   10989:	48 01 d0             	add    %rdx,%rax
   1098c:	48 c1 e0 03          	shl    $0x3,%rax
   10990:	48 89 c2             	mov    %rax,%rdx
   10993:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10997:	48 89 d6             	mov    %rdx,%rsi
   1099a:	48 89 c7             	mov    %rax,%rdi
   1099d:	e8 be 29 ff ff       	call   3360 <_ZdlPvm@plt>
      }
   109a2:	c9                   	leave
   109a3:	c3                   	ret

00000000000109a4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   109a4:	55                   	push   %rbp
   109a5:	48 89 e5             	mov    %rsp,%rbp
   109a8:	48 83 ec 20          	sub    $0x20,%rsp
   109ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   109b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   109b4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   109b9:	74 43                	je     109fe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   109bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109bf:	48 89 c7             	mov    %rax,%rdi
   109c2:	e8 f2 13 00 00       	call   11db9 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
   109c7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   109cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109cf:	48 89 c7             	mov    %rax,%rdi
   109d2:	e8 f0 13 00 00       	call   11dc7 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
   109d7:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
   109de:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   109df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   109e3:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   109e7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   109eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   109ef:	48 89 ce             	mov    %rcx,%rsi
   109f2:	48 89 c7             	mov    %rax,%rdi
   109f5:	e8 27 14 00 00       	call   11e21 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
   109fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   109fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10a02:	c9                   	leave
   10a03:	c3                   	ret

0000000000010a04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_create_node(_Args&&... __args)
   10a04:	55                   	push   %rbp
   10a05:	48 89 e5             	mov    %rsp,%rbp
   10a08:	48 83 ec 20          	sub    $0x20,%rsp
   10a0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   10a14:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a18:	48 89 c7             	mov    %rax,%rdi
   10a1b:	e8 46 14 00 00       	call   11e66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>
   10a20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   10a24:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a28:	48 89 c7             	mov    %rax,%rdi
   10a2b:	e8 b9 e5 ff ff       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   10a30:	48 89 c2             	mov    %rax,%rdx
   10a33:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   10a37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a3b:	48 89 ce             	mov    %rcx,%rsi
   10a3e:	48 89 c7             	mov    %rax,%rdi
   10a41:	e8 48 14 00 00       	call   11e8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>
	  return __tmp;
   10a46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   10a4a:	c9                   	leave
   10a4b:	c3                   	ret

0000000000010a4c <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   10a4c:	55                   	push   %rbp
   10a4d:	48 89 e5             	mov    %rsp,%rbp
   10a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   10a58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a5c:	48 8b 10             	mov    (%rax),%rdx
   10a5f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a63:	48 8b 00             	mov    (%rax),%rax
   10a66:	48 39 c2             	cmp    %rax,%rdx
   10a69:	0f 94 c0             	sete   %al
   10a6c:	5d                   	pop    %rbp
   10a6d:	c3                   	ret

0000000000010a6e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   10a6e:	55                   	push   %rbp
   10a6f:	48 89 e5             	mov    %rsp,%rbp
   10a72:	48 83 ec 20          	sub    $0x20,%rsp
   10a76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10a7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10a7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   10a82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10a86:	48 89 c7             	mov    %rax,%rdi
   10a89:	e8 9e 14 00 00       	call   11f2c <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>
   10a8e:	48 8b 10             	mov    (%rax),%rdx
   10a91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a95:	48 89 10             	mov    %rdx,(%rax)
   10a98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a9c:	48 89 c7             	mov    %rax,%rdi
   10a9f:	e8 96 14 00 00       	call   11f3a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   10aa4:	48 8b 10             	mov    (%rax),%rdx
   10aa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aab:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10aaf:	90                   	nop
   10ab0:	c9                   	leave
   10ab1:	c3                   	ret

0000000000010ab2 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   10ab2:	55                   	push   %rbp
   10ab3:	48 89 e5             	mov    %rsp,%rbp
   10ab6:	48 83 ec 10          	sub    $0x10,%rsp
   10aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   10abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ac2:	48 8b 00             	mov    (%rax),%rax
   10ac5:	48 89 c7             	mov    %rax,%rdi
   10ac8:	e8 d3 28 ff ff       	call   33a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   10acd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10ad1:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   10ad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10ad8:	c9                   	leave
   10ad9:	c3                   	ret

0000000000010ada <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   10ada:	55                   	push   %rbp
   10adb:	48 89 e5             	mov    %rsp,%rbp
   10ade:	48 83 ec 10          	sub    $0x10,%rsp
   10ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   10ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aea:	48 89 c7             	mov    %rax,%rdi
   10aed:	e8 52 e8 ff ff       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   10af2:	c9                   	leave
   10af3:	c3                   	ret

0000000000010af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   10af4:	55                   	push   %rbp
   10af5:	48 89 e5             	mov    %rsp,%rbp
   10af8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10afc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10b00:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   10b04:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10b08:	48 8b 10             	mov    (%rax),%rdx
   10b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b0f:	48 89 10             	mov    %rdx,(%rax)
   10b12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b16:	48 8b 10             	mov    (%rax),%rdx
   10b19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b1d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   10b21:	90                   	nop
   10b22:	5d                   	pop    %rbp
   10b23:	c3                   	ret

0000000000010b24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   10b24:	55                   	push   %rbp
   10b25:	48 89 e5             	mov    %rsp,%rbp
   10b28:	41 54                	push   %r12
   10b2a:	53                   	push   %rbx
   10b2b:	48 83 ec 30          	sub    $0x30,%rsp
   10b2f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10b33:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10b37:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10b3b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   10b3f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   10b44:	75 43                	jne    10b89 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   10b46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b4a:	48 89 c7             	mov    %rax,%rdi
   10b4d:	e8 e0 e7 ff ff       	call   f332 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   10b52:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   10b56:	74 31                	je     10b89 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   10b58:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   10b5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b60:	48 89 c7             	mov    %rax,%rdi
   10b63:	e8 72 ff ff ff       	call   10ada <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
   10b68:	49 89 c4             	mov    %rax,%r12
   10b6b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10b6f:	48 89 c7             	mov    %rax,%rdi
   10b72:	e8 cd e7 ff ff       	call   f344 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   10b77:	4c 89 e2             	mov    %r12,%rdx
   10b7a:	48 89 c6             	mov    %rax,%rsi
   10b7d:	48 89 df             	mov    %rbx,%rdi
   10b80:	e8 eb e7 ff ff       	call   f370 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10b85:	84 c0                	test   %al,%al
   10b87:	74 07                	je     10b90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x6c>
   10b89:	b8 01 00 00 00       	mov    $0x1,%eax
   10b8e:	eb 05                	jmp    10b95 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x71>
   10b90:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   10b95:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   10b98:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b9c:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   10ba0:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   10ba4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10ba8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   10bac:	89 c7                	mov    %eax,%edi
   10bae:	e8 9d 24 ff ff       	call   3050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   10bb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bb7:	48 8b 40 28          	mov    0x28(%rax),%rax
   10bbb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   10bbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10bc3:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   10bc7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   10bcb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10bcf:	48 89 d6             	mov    %rdx,%rsi
   10bd2:	48 89 c7             	mov    %rax,%rdi
   10bd5:	e8 ca e6 ff ff       	call   f2a4 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   10bda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   10bde:	48 83 c4 30          	add    $0x30,%rsp
   10be2:	5b                   	pop    %rbx
   10be3:	41 5c                	pop    %r12
   10be5:	5d                   	pop    %rbp
   10be6:	c3                   	ret

0000000000010be7 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10be7:	55                   	push   %rbp
   10be8:	48 89 e5             	mov    %rsp,%rbp
   10beb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10bef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bf3:	5d                   	pop    %rbp
   10bf4:	c3                   	ret

0000000000010bf5 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   10bf5:	55                   	push   %rbp
   10bf6:	48 89 e5             	mov    %rsp,%rbp
   10bf9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   10bfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c01:	5d                   	pop    %rbp
   10c02:	c3                   	ret
   10c03:	90                   	nop

0000000000010c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   10c04:	55                   	push   %rbp
   10c05:	48 89 e5             	mov    %rsp,%rbp
   10c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c10:	5d                   	pop    %rbp
   10c11:	c3                   	ret

0000000000010c12 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr()
   10c12:	55                   	push   %rbp
   10c13:	48 89 e5             	mov    %rsp,%rbp
   10c16:	48 83 ec 10          	sub    $0x10,%rsp
   10c1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   10c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c22:	48 83 c0 20          	add    $0x20,%rax
   10c26:	48 89 c7             	mov    %rax,%rdi
   10c29:	e8 1a 13 00 00       	call   11f48 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   10c2e:	c9                   	leave
   10c2f:	c3                   	ret

0000000000010c30 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   10c30:	55                   	push   %rbp
   10c31:	48 89 e5             	mov    %rsp,%rbp
   10c34:	48 83 ec 10          	sub    $0x10,%rsp
   10c38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   10c40:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10c44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c48:	48 89 d6             	mov    %rdx,%rsi
   10c4b:	48 89 c7             	mov    %rax,%rdi
   10c4e:	e8 0f 13 00 00       	call   11f62 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>
	}
   10c53:	90                   	nop
   10c54:	c9                   	leave
   10c55:	c3                   	ret

0000000000010c56 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   10c56:	55                   	push   %rbp
   10c57:	48 89 e5             	mov    %rsp,%rbp
   10c5a:	48 83 ec 20          	sub    $0x20,%rsp
   10c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10c66:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   10c6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c6e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10c72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c76:	48 89 ce             	mov    %rcx,%rsi
   10c79:	48 89 c7             	mov    %rax,%rdi
   10c7c:	e8 01 13 00 00       	call   11f82 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>
   10c81:	90                   	nop
   10c82:	c9                   	leave
   10c83:	c3                   	ret

0000000000010c84 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr() const
   10c84:	55                   	push   %rbp
   10c85:	48 89 e5             	mov    %rsp,%rbp
   10c88:	48 83 ec 10          	sub    $0x10,%rsp
   10c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   10c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c94:	48 83 c0 20          	add    $0x20,%rax
   10c98:	48 89 c7             	mov    %rax,%rdi
   10c9b:	e8 12 13 00 00       	call   11fb2 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   10ca0:	c9                   	leave
   10ca1:	c3                   	ret

0000000000010ca2 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>:
      operator()(const _Tp& __x) const
   10ca2:	55                   	push   %rbp
   10ca3:	48 89 e5             	mov    %rsp,%rbp
   10ca6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10caa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   10cae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10cb2:	5d                   	pop    %rbp
   10cb3:	c3                   	ret

0000000000010cb4 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   10cb4:	55                   	push   %rbp
   10cb5:	48 89 e5             	mov    %rsp,%rbp
   10cb8:	48 83 ec 10          	sub    $0x10,%rsp
   10cbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10cc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   10cc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10cc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ccc:	48 89 d6             	mov    %rdx,%rsi
   10ccf:	48 89 c7             	mov    %rax,%rdi
   10cd2:	e8 59 23 ff ff       	call   3030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   10cd7:	c1 e8 1f             	shr    $0x1f,%eax
   10cda:	c9                   	leave
   10cdb:	c3                   	ret

0000000000010cdc <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   10cdc:	55                   	push   %rbp
   10cdd:	48 89 e5             	mov    %rsp,%rbp
   10ce0:	48 83 ec 10          	sub    $0x10,%rsp
   10ce4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   10ce8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cec:	48 89 c7             	mov    %rax,%rdi
   10cef:	e8 d8 12 00 00       	call   11fcc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
   10cf4:	c9                   	leave
   10cf5:	c3                   	ret

0000000000010cf6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10cf6:	55                   	push   %rbp
   10cf7:	48 89 e5             	mov    %rsp,%rbp
   10cfa:	48 83 ec 20          	sub    $0x20,%rsp
   10cfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10d02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10d06:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10d0b:	74 40                	je     10d4d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   10d0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d11:	48 89 c7             	mov    %rax,%rdi
   10d14:	e8 cd 12 00 00       	call   11fe6 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
   10d19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d21:	48 89 c7             	mov    %rax,%rdi
   10d24:	e8 cb 12 00 00       	call   11ff4 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
   10d29:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10d2e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10d32:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10d36:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10d3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d3e:	48 89 ce             	mov    %rcx,%rsi
   10d41:	48 89 c7             	mov    %rax,%rdi
   10d44:	e8 d8 12 00 00       	call   12021 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
   10d49:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10d4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10d51:	c9                   	leave
   10d52:	c3                   	ret
   10d53:	90                   	nop

0000000000010d54 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10d54:	55                   	push   %rbp
   10d55:	48 89 e5             	mov    %rsp,%rbp
   10d58:	48 83 ec 20          	sub    $0x20,%rsp
   10d5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10d64:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d6c:	48 89 c7             	mov    %rax,%rdi
   10d6f:	e8 f2 12 00 00       	call   12066 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   10d74:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10d78:	0f 92 c0             	setb   %al
   10d7b:	0f b6 c0             	movzbl %al,%eax
   10d7e:	48 85 c0             	test   %rax,%rax
   10d81:	0f 95 c0             	setne  %al
   10d84:	84 c0                	test   %al,%al
   10d86:	74 1a                	je     10da2 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10d88:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   10d8f:	ff ff 1f 
   10d92:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10d96:	73 05                	jae    10d9d <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10d98:	e8 a3 24 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10d9d:	e8 2e 23 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10da2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10da6:	48 c1 e0 03          	shl    $0x3,%rax
   10daa:	48 89 c7             	mov    %rax,%rdi
   10dad:	e8 8e 25 ff ff       	call   3340 <_Znwm@plt>
   10db2:	90                   	nop
      }
   10db3:	c9                   	leave
   10db4:	c3                   	ret

0000000000010db5 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>:
    __niter_base(_Iterator __it)
   10db5:	55                   	push   %rbp
   10db6:	48 89 e5             	mov    %rsp,%rbp
   10db9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   10dbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dc1:	5d                   	pop    %rbp
   10dc2:	c3                   	ret

0000000000010dc3 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10dc3:	55                   	push   %rbp
   10dc4:	48 89 e5             	mov    %rsp,%rbp
   10dc7:	48 83 ec 30          	sub    $0x30,%rsp
   10dcb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10dcf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10dd3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10dd7:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10ddb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ddf:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10de3:	48 c1 f8 03          	sar    $0x3,%rax
   10de7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10deb:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10df0:	7e 1f                	jle    10e11 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10df2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10dfd:	00 
   10dfe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10e02:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e06:	48 89 ce             	mov    %rcx,%rsi
   10e09:	48 89 c7             	mov    %rax,%rdi
   10e0c:	e8 3f 28 ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   10e11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e15:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10e1c:	00 
   10e1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e21:	48 01 d0             	add    %rdx,%rax
    }
   10e24:	c9                   	leave
   10e25:	c3                   	ret

0000000000010e26 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   10e26:	55                   	push   %rbp
   10e27:	48 89 e5             	mov    %rsp,%rbp
   10e2a:	48 83 ec 10          	sub    $0x10,%rsp
   10e2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   10e32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e36:	48 89 c7             	mov    %rax,%rdi
   10e39:	e8 3c 12 00 00       	call   1207a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
   10e3e:	c9                   	leave
   10e3f:	c3                   	ret

0000000000010e40 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10e40:	55                   	push   %rbp
   10e41:	48 89 e5             	mov    %rsp,%rbp
   10e44:	48 83 ec 20          	sub    $0x20,%rsp
   10e48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10e4c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10e50:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10e55:	74 40                	je     10e97 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   10e57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e5b:	48 89 c7             	mov    %rax,%rdi
   10e5e:	e8 31 12 00 00       	call   12094 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
   10e63:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   10e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e6b:	48 89 c7             	mov    %rax,%rdi
   10e6e:	e8 2f 12 00 00       	call   120a2 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
   10e73:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   10e78:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10e7c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   10e80:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e88:	48 89 ce             	mov    %rcx,%rsi
   10e8b:	48 89 c7             	mov    %rax,%rdi
   10e8e:	e8 35 12 00 00       	call   120c8 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
   10e93:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   10e97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   10e9b:	c9                   	leave
   10e9c:	c3                   	ret
   10e9d:	90                   	nop

0000000000010e9e <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   10e9e:	55                   	push   %rbp
   10e9f:	48 89 e5             	mov    %rsp,%rbp
   10ea2:	48 83 ec 20          	sub    $0x20,%rsp
   10ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10eae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   10eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eb6:	48 89 c7             	mov    %rax,%rdi
   10eb9:	e8 4e 12 00 00       	call   1210c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   10ebe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10ec2:	0f 92 c0             	setb   %al
   10ec5:	0f b6 c0             	movzbl %al,%eax
   10ec8:	48 85 c0             	test   %rax,%rax
   10ecb:	0f 95 c0             	setne  %al
   10ece:	84 c0                	test   %al,%al
   10ed0:	74 1a                	je     10eec <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   10ed2:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   10ed9:	ff ff 3f 
   10edc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10ee0:	73 05                	jae    10ee7 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   10ee2:	e8 59 23 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   10ee7:	e8 e4 21 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   10eec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ef0:	48 c1 e0 02          	shl    $0x2,%rax
   10ef4:	48 89 c7             	mov    %rax,%rdi
   10ef7:	e8 44 24 ff ff       	call   3340 <_Znwm@plt>
   10efc:	90                   	nop
      }
   10efd:	c9                   	leave
   10efe:	c3                   	ret

0000000000010eff <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>:
    __niter_base(_Iterator __it)
   10eff:	55                   	push   %rbp
   10f00:	48 89 e5             	mov    %rsp,%rbp
   10f03:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   10f07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f0b:	5d                   	pop    %rbp
   10f0c:	c3                   	ret

0000000000010f0d <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   10f0d:	55                   	push   %rbp
   10f0e:	48 89 e5             	mov    %rsp,%rbp
   10f11:	48 83 ec 30          	sub    $0x30,%rsp
   10f15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10f19:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10f1d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   10f21:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   10f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f29:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10f2d:	48 c1 f8 02          	sar    $0x2,%rax
   10f31:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   10f35:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10f3a:	7e 1f                	jle    10f5b <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   10f3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f40:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   10f47:	00 
   10f48:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   10f4c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f50:	48 89 ce             	mov    %rcx,%rsi
   10f53:	48 89 c7             	mov    %rax,%rdi
   10f56:	e8 f5 26 ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   10f5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f5f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   10f66:	00 
   10f67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f6b:	48 01 d0             	add    %rdx,%rax
    }
   10f6e:	c9                   	leave
   10f6f:	c3                   	ret

0000000000010f70 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   10f70:	55                   	push   %rbp
   10f71:	48 89 e5             	mov    %rsp,%rbp
   10f74:	48 83 ec 10          	sub    $0x10,%rsp
   10f78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   10f7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f80:	48 89 c7             	mov    %rax,%rdi
   10f83:	e8 98 11 00 00       	call   12120 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   10f88:	c9                   	leave
   10f89:	c3                   	ret

0000000000010f8a <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   10f8a:	55                   	push   %rbp
   10f8b:	48 89 e5             	mov    %rsp,%rbp
   10f8e:	48 83 ec 10          	sub    $0x10,%rsp
   10f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   10f9a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa2:	ba 00 00 00 00       	mov    $0x0,%edx
   10fa7:	48 89 ce             	mov    %rcx,%rsi
   10faa:	48 89 c7             	mov    %rax,%rdi
   10fad:	e8 82 11 00 00       	call   12134 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
   10fb2:	c9                   	leave
   10fb3:	c3                   	ret

0000000000010fb4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   10fb4:	55                   	push   %rbp
   10fb5:	48 89 e5             	mov    %rsp,%rbp
   10fb8:	48 83 ec 20          	sub    $0x20,%rsp
   10fbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10fc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10fc4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   10fc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fcc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10fd3:	00 
   10fd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10fd8:	48 89 d6             	mov    %rdx,%rsi
   10fdb:	48 89 c7             	mov    %rax,%rdi
   10fde:	e8 7d 23 ff ff       	call   3360 <_ZdlPvm@plt>
      }
   10fe3:	c9                   	leave
   10fe4:	c3                   	ret

0000000000010fe5 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   10fe5:	55                   	push   %rbp
   10fe6:	48 89 e5             	mov    %rsp,%rbp
   10fe9:	48 83 ec 20          	sub    $0x20,%rsp
   10fed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ff1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   10ff5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   10ffa:	74 40                	je     1103c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   10ffc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11000:	48 89 c7             	mov    %rax,%rdi
   11003:	e8 8d 11 00 00       	call   12195 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
   11008:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1100c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11010:	48 89 c7             	mov    %rax,%rdi
   11013:	e8 8b 11 00 00       	call   121a3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
   11018:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1101d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11021:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11025:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1102d:	48 89 ce             	mov    %rcx,%rsi
   11030:	48 89 c7             	mov    %rax,%rdi
   11033:	e8 92 11 00 00       	call   121ca <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
   11038:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1103c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   11040:	c9                   	leave
   11041:	c3                   	ret

0000000000011042 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   11042:	55                   	push   %rbp
   11043:	48 89 e5             	mov    %rsp,%rbp
   11046:	48 83 ec 10          	sub    $0x10,%rsp
   1104a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1104e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11052:	48 89 c7             	mov    %rax,%rdi
   11055:	e8 b4 11 00 00       	call   1220e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   1105a:	c9                   	leave
   1105b:	c3                   	ret

000000000001105c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1105c:	55                   	push   %rbp
   1105d:	48 89 e5             	mov    %rsp,%rbp
   11060:	48 83 ec 10          	sub    $0x10,%rsp
   11064:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11068:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1106c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11074:	ba 00 00 00 00       	mov    $0x0,%edx
   11079:	48 89 ce             	mov    %rcx,%rsi
   1107c:	48 89 c7             	mov    %rax,%rdi
   1107f:	e8 9e 11 00 00       	call   12222 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
   11084:	c9                   	leave
   11085:	c3                   	ret

0000000000011086 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   11086:	55                   	push   %rbp
   11087:	48 89 e5             	mov    %rsp,%rbp
   1108a:	48 83 ec 20          	sub    $0x20,%rsp
   1108e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11092:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11096:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1109a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1109e:	48 89 d0             	mov    %rdx,%rax
   110a1:	48 01 c0             	add    %rax,%rax
   110a4:	48 01 d0             	add    %rdx,%rax
   110a7:	48 c1 e0 03          	shl    $0x3,%rax
   110ab:	48 89 c2             	mov    %rax,%rdx
   110ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   110b2:	48 89 d6             	mov    %rdx,%rsi
   110b5:	48 89 c7             	mov    %rax,%rdi
   110b8:	e8 a3 22 ff ff       	call   3360 <_ZdlPvm@plt>
      }
   110bd:	c9                   	leave
   110be:	c3                   	ret

00000000000110bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   110bf:	55                   	push   %rbp
   110c0:	48 89 e5             	mov    %rsp,%rbp
   110c3:	48 83 ec 20          	sub    $0x20,%rsp
   110c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   110cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   110cf:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   110d4:	74 40                	je     11116 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   110d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   110da:	48 89 c7             	mov    %rax,%rdi
   110dd:	e8 aa 11 00 00       	call   1228c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
   110e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   110e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ea:	48 89 c7             	mov    %rax,%rdi
   110ed:	e8 a8 11 00 00       	call   1229a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
   110f2:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   110f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   110fb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   110ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11107:	48 89 ce             	mov    %rcx,%rsi
   1110a:	48 89 c7             	mov    %rax,%rdi
   1110d:	e8 d1 11 00 00       	call   122e3 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
   11112:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   11116:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1111a:	c9                   	leave
   1111b:	c3                   	ret

000000000001111c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1111c:	55                   	push   %rbp
   1111d:	48 89 e5             	mov    %rsp,%rbp
   11120:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11124:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11128:	90                   	nop
   11129:	5d                   	pop    %rbp
   1112a:	c3                   	ret
   1112b:	90                   	nop

000000000001112c <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1112c:	55                   	push   %rbp
   1112d:	48 89 e5             	mov    %rsp,%rbp
   11130:	48 83 ec 20          	sub    $0x20,%rsp
   11134:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   11138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1113c:	48 8b 10             	mov    (%rax),%rdx
   1113f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11143:	48 89 d6             	mov    %rdx,%rsi
   11146:	48 89 c7             	mov    %rax,%rdi
   11149:	e8 98 ea ff ff       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   1114e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11152:	c9                   	leave
   11153:	c3                   	ret

0000000000011154 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   11154:	55                   	push   %rbp
   11155:	48 89 e5             	mov    %rsp,%rbp
   11158:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1115c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11160:	48 83 c0 08          	add    $0x8,%rax
   11164:	5d                   	pop    %rbp
   11165:	c3                   	ret

0000000000011166 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11166:	55                   	push   %rbp
   11167:	48 89 e5             	mov    %rsp,%rbp
   1116a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1116e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11172:	48 8b 40 28          	mov    0x28(%rax),%rax
   11176:	5d                   	pop    %rbp
   11177:	c3                   	ret

0000000000011178 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   11178:	55                   	push   %rbp
   11179:	48 89 e5             	mov    %rsp,%rbp
   1117c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   11180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11184:	48 83 c0 20          	add    $0x20,%rax
   11188:	5d                   	pop    %rbp
   11189:	c3                   	ret

000000000001118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   1118a:	55                   	push   %rbp
   1118b:	48 89 e5             	mov    %rsp,%rbp
   1118e:	48 83 ec 10          	sub    $0x10,%rsp
   11192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   11196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1119a:	48 89 c7             	mov    %rax,%rdi
   1119d:	e8 85 11 00 00       	call   12327 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   111a2:	c9                   	leave
   111a3:	c3                   	ret

00000000000111a4 <_ZNKSt4lessIjEclERKjS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
   111a4:	55                   	push   %rbp
   111a5:	48 89 e5             	mov    %rsp,%rbp
   111a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   111ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   111b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   111b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   111b8:	8b 10                	mov    (%rax),%edx
   111ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111be:	8b 00                	mov    (%rax),%eax
   111c0:	39 c2                	cmp    %eax,%edx
   111c2:	0f 92 c0             	setb   %al
   111c5:	5d                   	pop    %rbp
   111c6:	c3                   	ret
   111c7:	90                   	nop

00000000000111c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   111c8:	55                   	push   %rbp
   111c9:	48 89 e5             	mov    %rsp,%rbp
   111cc:	53                   	push   %rbx
   111cd:	48 83 ec 78          	sub    $0x78,%rsp
   111d1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   111d5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   111d9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   111dd:	48 89 c7             	mov    %rax,%rdi
   111e0:	e8 bf ad ff ff       	call   bfa4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
   111e5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   111e9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   111ed:	48 89 c7             	mov    %rax,%rdi
   111f0:	e8 5f ff ff ff       	call   11154 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   111f5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   111f9:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   111fd:	eb 51                	jmp    11250 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x88>
	  __y = __x;
   111ff:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11203:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   11207:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1120b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1120f:	48 89 c7             	mov    %rax,%rdi
   11212:	e8 10 11 00 00       	call   12327 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   11217:	48 89 c2             	mov    %rax,%rdx
   1121a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1121e:	48 89 c6             	mov    %rax,%rsi
   11221:	48 89 df             	mov    %rbx,%rdi
   11224:	e8 7b ff ff ff       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
   11229:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1122c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   11230:	74 0e                	je     11240 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x78>
   11232:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11236:	48 89 c7             	mov    %rax,%rdi
   11239:	e8 5b cf ff ff       	call   e199 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
   1123e:	eb 0c                	jmp    1124c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x84>
   11240:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11244:	48 89 c7             	mov    %rax,%rdi
   11247:	e8 3b cf ff ff       	call   e187 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   1124c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   11250:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11254:	48 85 c0             	test   %rax,%rax
   11257:	75 a6                	jne    111ff <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x37>
      iterator __j = iterator(__y);
   11259:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1125d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11261:	48 89 d6             	mov    %rdx,%rsi
   11264:	48 89 c7             	mov    %rax,%rdi
   11267:	e8 7a e9 ff ff       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   1126c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   11270:	74 54                	je     112c6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xfe>
	  if (__j == begin())
   11272:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11276:	48 89 c7             	mov    %rax,%rdi
   11279:	e8 d6 10 00 00       	call   12354 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
   1127e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   11282:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   11286:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1128a:	48 89 d6             	mov    %rdx,%rsi
   1128d:	48 89 c7             	mov    %rax,%rdi
   11290:	e8 e8 10 00 00       	call   1237d <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>
   11295:	84 c0                	test   %al,%al
   11297:	74 21                	je     112ba <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xf2>
	    return _Res(__x, __y);
   11299:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1129d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   112a1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   112a5:	48 89 ce             	mov    %rcx,%rsi
   112a8:	48 89 c7             	mov    %rax,%rdi
   112ab:	e8 f0 10 00 00       	call   123a0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   112b0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   112b4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   112b8:	eb 7d                	jmp    11337 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
	    --__j;
   112ba:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   112be:	48 89 c7             	mov    %rax,%rdi
   112c1:	e8 ce 00 00 00       	call   11394 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   112c6:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   112ca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   112ce:	48 89 c7             	mov    %rax,%rdi
   112d1:	e8 b4 fe ff ff       	call   1118a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   112d6:	48 89 c1             	mov    %rax,%rcx
   112d9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   112dd:	48 89 c2             	mov    %rax,%rdx
   112e0:	48 89 ce             	mov    %rcx,%rsi
   112e3:	48 89 df             	mov    %rbx,%rdi
   112e6:	e8 b9 fe ff ff       	call   111a4 <_ZNKSt4lessIjEclERKjS2_>
   112eb:	84 c0                	test   %al,%al
   112ed:	74 21                	je     11310 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x148>
	return _Res(__x, __y);
   112ef:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   112f3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   112f7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   112fb:	48 89 ce             	mov    %rcx,%rsi
   112fe:	48 89 c7             	mov    %rax,%rdi
   11301:	e8 9a 10 00 00       	call   123a0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   11306:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1130a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1130e:	eb 27                	jmp    11337 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
      return _Res(__j._M_node, 0);
   11310:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   11317:	00 
   11318:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1131c:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   11320:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11324:	48 89 ce             	mov    %rcx,%rsi
   11327:	48 89 c7             	mov    %rax,%rdi
   1132a:	e8 c5 f7 ff ff       	call   10af4 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1132f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11333:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   11337:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1133b:	c9                   	leave
   1133c:	c3                   	ret
   1133d:	90                   	nop

000000000001133e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   1133e:	55                   	push   %rbp
   1133f:	48 89 e5             	mov    %rsp,%rbp
   11342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   11346:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1134a:	48 83 c0 18          	add    $0x18,%rax
   1134e:	5d                   	pop    %rbp
   1134f:	c3                   	ret

0000000000011350 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   11350:	55                   	push   %rbp
   11351:	48 89 e5             	mov    %rsp,%rbp
   11354:	48 83 ec 20          	sub    $0x20,%rsp
   11358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1135c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11360:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   11364:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11368:	48 89 c7             	mov    %rax,%rdi
   1136b:	e8 ca 0b 00 00       	call   11f3a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   11370:	48 8b 10             	mov    (%rax),%rdx
   11373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11377:	48 89 10             	mov    %rdx,(%rax)
   1137a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1137e:	48 89 c7             	mov    %rax,%rdi
   11381:	e8 b4 0b 00 00       	call   11f3a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   11386:	48 8b 10             	mov    (%rax),%rdx
   11389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1138d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   11391:	90                   	nop
   11392:	c9                   	leave
   11393:	c3                   	ret

0000000000011394 <_ZNSt17_Rb_tree_iteratorIjEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   11394:	55                   	push   %rbp
   11395:	48 89 e5             	mov    %rsp,%rbp
   11398:	48 83 ec 10          	sub    $0x10,%rsp
   1139c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   113a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113a4:	48 8b 00             	mov    (%rax),%rax
   113a7:	48 89 c7             	mov    %rax,%rdi
   113aa:	e8 f1 1f ff ff       	call   33a0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   113af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   113b3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   113b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   113ba:	c9                   	leave
   113bb:	c3                   	ret

00000000000113bc <_ZNSt17_Rb_tree_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   113bc:	55                   	push   %rbp
   113bd:	48 89 e5             	mov    %rsp,%rbp
   113c0:	48 83 ec 10          	sub    $0x10,%rsp
   113c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   113c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113cc:	48 8b 00             	mov    (%rax),%rax
   113cf:	48 89 c7             	mov    %rax,%rdi
   113d2:	e8 19 1e ff ff       	call   31f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   113d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   113db:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   113de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   113e2:	c9                   	leave
   113e3:	c3                   	ret

00000000000113e4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>:
	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const
   113e4:	55                   	push   %rbp
   113e5:	48 89 e5             	mov    %rsp,%rbp
   113e8:	53                   	push   %rbx
   113e9:	48 83 ec 18          	sub    $0x18,%rsp
   113ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
   113f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113f9:	48 8b 18             	mov    (%rax),%rbx
   113fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11400:	48 89 c7             	mov    %rax,%rdi
   11403:	e8 58 ec ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   11408:	48 89 c6             	mov    %rax,%rsi
   1140b:	48 89 df             	mov    %rbx,%rdi
   1140e:	e8 d1 0f 00 00       	call   123e4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>
   11413:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11417:	c9                   	leave
   11418:	c3                   	ret
   11419:	90                   	nop

000000000001141a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1141a:	55                   	push   %rbp
   1141b:	48 89 e5             	mov    %rsp,%rbp
   1141e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   11422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11426:	5d                   	pop    %rbp
   11427:	c3                   	ret

0000000000011428 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr()
   11428:	55                   	push   %rbp
   11429:	48 89 e5             	mov    %rsp,%rbp
   1142c:	48 83 ec 10          	sub    $0x10,%rsp
   11430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   11434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11438:	48 83 c0 20          	add    $0x20,%rax
   1143c:	48 89 c7             	mov    %rax,%rdi
   1143f:	e8 e8 0f 00 00       	call   1242c <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
   11444:	c9                   	leave
   11445:	c3                   	ret

0000000000011446 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   11446:	55                   	push   %rbp
   11447:	48 89 e5             	mov    %rsp,%rbp
   1144a:	48 83 ec 10          	sub    $0x10,%rsp
   1144e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11452:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   11456:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1145a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1145e:	48 89 d6             	mov    %rdx,%rsi
   11461:	48 89 c7             	mov    %rax,%rdi
   11464:	e8 dd 0f 00 00       	call   12446 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>
	}
   11469:	90                   	nop
   1146a:	c9                   	leave
   1146b:	c3                   	ret

000000000001146c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1146c:	55                   	push   %rbp
   1146d:	48 89 e5             	mov    %rsp,%rbp
   11470:	48 83 ec 20          	sub    $0x20,%rsp
   11474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11478:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1147c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11480:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11484:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11488:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148c:	48 89 ce             	mov    %rcx,%rsi
   1148f:	48 89 c7             	mov    %rax,%rdi
   11492:	e8 bf 0f 00 00       	call   12456 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>
   11497:	90                   	nop
   11498:	c9                   	leave
   11499:	c3                   	ret

000000000001149a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1149a:	55                   	push   %rbp
   1149b:	48 89 e5             	mov    %rsp,%rbp
   1149e:	48 83 ec 20          	sub    $0x20,%rsp
   114a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   114a6:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   114ad:	33 33 03 
   114b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   114b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114b8:	48 89 c7             	mov    %rax,%rdi
   114bb:	e8 d0 0f 00 00       	call   12490 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>
   114c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   114c4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   114c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   114cc:	48 89 d6             	mov    %rdx,%rsi
   114cf:	48 89 c7             	mov    %rax,%rdi
   114d2:	e8 cc 34 ff ff       	call   49a3 <_ZSt3minImERKT_S2_S2_>
   114d7:	48 8b 00             	mov    (%rax),%rax
      }
   114da:	c9                   	leave
   114db:	c3                   	ret

00000000000114dc <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   114dc:	55                   	push   %rbp
   114dd:	48 89 e5             	mov    %rsp,%rbp
   114e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   114e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114e8:	5d                   	pop    %rbp
   114e9:	c3                   	ret

00000000000114ea <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   114ea:	55                   	push   %rbp
   114eb:	48 89 e5             	mov    %rsp,%rbp
   114ee:	48 83 ec 20          	sub    $0x20,%rsp
   114f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   114fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   114fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11502:	48 89 c7             	mov    %rax,%rdi
   11505:	e8 a0 0f 00 00       	call   124aa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   1150a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1150e:	0f 92 c0             	setb   %al
   11511:	0f b6 c0             	movzbl %al,%eax
   11514:	48 85 c0             	test   %rax,%rax
   11517:	0f 95 c0             	setne  %al
   1151a:	84 c0                	test   %al,%al
   1151c:	74 1a                	je     11538 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1151e:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   11525:	66 66 06 
   11528:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1152c:	73 05                	jae    11533 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1152e:	e8 0d 1d ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11533:	e8 98 1b ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   11538:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1153c:	48 89 d0             	mov    %rdx,%rax
   1153f:	48 c1 e0 02          	shl    $0x2,%rax
   11543:	48 01 d0             	add    %rdx,%rax
   11546:	48 c1 e0 03          	shl    $0x3,%rax
   1154a:	48 89 c7             	mov    %rax,%rdi
   1154d:	e8 ee 1d ff ff       	call   3340 <_Znwm@plt>
   11552:	90                   	nop
      }
   11553:	c9                   	leave
   11554:	c3                   	ret

0000000000011555 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   11555:	55                   	push   %rbp
   11556:	48 89 e5             	mov    %rsp,%rbp
   11559:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1155d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11561:	5d                   	pop    %rbp
   11562:	c3                   	ret

0000000000011563 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   11563:	55                   	push   %rbp
   11564:	48 89 e5             	mov    %rsp,%rbp
   11567:	48 83 ec 30          	sub    $0x30,%rsp
   1156b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1156f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11573:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11577:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1157b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1157f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11583:	48 c1 f8 03          	sar    $0x3,%rax
   11587:	48 89 c2             	mov    %rax,%rdx
   1158a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   11591:	cc cc cc 
   11594:	48 0f af c2          	imul   %rdx,%rax
   11598:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1159c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   115a1:	7e 28                	jle    115cb <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x68>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   115a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   115a7:	48 89 d0             	mov    %rdx,%rax
   115aa:	48 c1 e0 02          	shl    $0x2,%rax
   115ae:	48 01 d0             	add    %rdx,%rax
   115b1:	48 c1 e0 03          	shl    $0x3,%rax
   115b5:	48 89 c2             	mov    %rax,%rdx
   115b8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   115bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115c0:	48 89 ce             	mov    %rcx,%rsi
   115c3:	48 89 c7             	mov    %rax,%rdi
   115c6:	e8 85 20 ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   115cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   115cf:	48 89 d0             	mov    %rdx,%rax
   115d2:	48 c1 e0 02          	shl    $0x2,%rax
   115d6:	48 01 d0             	add    %rdx,%rax
   115d9:	48 c1 e0 03          	shl    $0x3,%rax
   115dd:	48 89 c2             	mov    %rax,%rdx
   115e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115e4:	48 01 d0             	add    %rdx,%rax
    }
   115e7:	c9                   	leave
   115e8:	c3                   	ret

00000000000115e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   115e9:	55                   	push   %rbp
   115ea:	48 89 e5             	mov    %rsp,%rbp
   115ed:	48 83 ec 10          	sub    $0x10,%rsp
   115f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   115f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115f9:	48 89 c7             	mov    %rax,%rdi
   115fc:	e8 bd 0e 00 00       	call   124be <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
   11601:	c9                   	leave
   11602:	c3                   	ret

0000000000011603 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   11603:	55                   	push   %rbp
   11604:	48 89 e5             	mov    %rsp,%rbp
   11607:	48 83 ec 20          	sub    $0x20,%rsp
   1160b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1160f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   11613:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11618:	74 40                	je     1165a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1161a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1161e:	48 89 c7             	mov    %rax,%rdi
   11621:	e8 b2 0e 00 00       	call   124d8 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
   11626:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1162a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1162e:	48 89 c7             	mov    %rax,%rdi
   11631:	e8 b0 0e 00 00       	call   124e6 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
   11636:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1163b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1163f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11643:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1164b:	48 89 ce             	mov    %rcx,%rsi
   1164e:	48 89 c7             	mov    %rax,%rdi
   11651:	e8 b7 0e 00 00       	call   1250d <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
   11656:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1165a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1165e:	c9                   	leave
   1165f:	c3                   	ret

0000000000011660 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   11660:	55                   	push   %rbp
   11661:	48 89 e5             	mov    %rsp,%rbp
   11664:	48 83 ec 20          	sub    $0x20,%rsp
   11668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1166c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11670:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   11674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11678:	48 89 c7             	mov    %rax,%rdi
   1167b:	e8 d2 0e 00 00       	call   12552 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   11680:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11684:	0f 92 c0             	setb   %al
   11687:	0f b6 c0             	movzbl %al,%eax
   1168a:	48 85 c0             	test   %rax,%rax
   1168d:	0f 95 c0             	setne  %al
   11690:	84 c0                	test   %al,%al
   11692:	74 1a                	je     116ae <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   11694:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1169b:	ff ff 1f 
   1169e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   116a2:	73 05                	jae    116a9 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   116a4:	e8 97 1b ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   116a9:	e8 22 1a ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   116ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   116b2:	48 c1 e0 03          	shl    $0x3,%rax
   116b6:	48 89 c7             	mov    %rax,%rdi
   116b9:	e8 82 1c ff ff       	call   3340 <_Znwm@plt>
   116be:	90                   	nop
      }
   116bf:	c9                   	leave
   116c0:	c3                   	ret

00000000000116c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>:
    __niter_base(_Iterator __it)
   116c1:	55                   	push   %rbp
   116c2:	48 89 e5             	mov    %rsp,%rbp
   116c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   116c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116cd:	5d                   	pop    %rbp
   116ce:	c3                   	ret

00000000000116cf <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   116cf:	55                   	push   %rbp
   116d0:	48 89 e5             	mov    %rsp,%rbp
   116d3:	48 83 ec 30          	sub    $0x30,%rsp
   116d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   116db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   116df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   116e3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   116e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   116eb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   116ef:	48 c1 f8 03          	sar    $0x3,%rax
   116f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   116f7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   116fc:	7e 1f                	jle    1171d <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   116fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11702:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11709:	00 
   1170a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1170e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11712:	48 89 ce             	mov    %rcx,%rsi
   11715:	48 89 c7             	mov    %rax,%rdi
   11718:	e8 33 1f ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   1171d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11721:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11728:	00 
   11729:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1172d:	48 01 d0             	add    %rdx,%rax
    }
   11730:	c9                   	leave
   11731:	c3                   	ret

0000000000011732 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   11732:	55                   	push   %rbp
   11733:	48 89 e5             	mov    %rsp,%rbp
   11736:	48 83 ec 10          	sub    $0x10,%rsp
   1173a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1173e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11742:	48 89 c7             	mov    %rax,%rdi
   11745:	e8 1c 0e 00 00       	call   12566 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   1174a:	c9                   	leave
   1174b:	c3                   	ret

000000000001174c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1174c:	55                   	push   %rbp
   1174d:	48 89 e5             	mov    %rsp,%rbp
   11750:	48 83 ec 20          	sub    $0x20,%rsp
   11754:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11758:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1175c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11761:	74 40                	je     117a3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   11763:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11767:	48 89 c7             	mov    %rax,%rdi
   1176a:	e8 11 0e 00 00       	call   12580 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1176f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   11773:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11777:	48 89 c7             	mov    %rax,%rdi
   1177a:	e8 0f 0e 00 00       	call   1258e <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1177f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   11784:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11788:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1178c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11794:	48 89 ce             	mov    %rcx,%rsi
   11797:	48 89 c7             	mov    %rax,%rdi
   1179a:	e8 16 0e 00 00       	call   125b5 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1179f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   117a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   117a7:	c9                   	leave
   117a8:	c3                   	ret
   117a9:	90                   	nop

00000000000117aa <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   117aa:	55                   	push   %rbp
   117ab:	48 89 e5             	mov    %rsp,%rbp
   117ae:	48 83 ec 20          	sub    $0x20,%rsp
   117b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   117ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   117be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117c2:	48 89 c7             	mov    %rax,%rdi
   117c5:	e8 30 0e 00 00       	call   125fa <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   117ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   117ce:	0f 92 c0             	setb   %al
   117d1:	0f b6 c0             	movzbl %al,%eax
   117d4:	48 85 c0             	test   %rax,%rax
   117d7:	0f 95 c0             	setne  %al
   117da:	84 c0                	test   %al,%al
   117dc:	74 1a                	je     117f8 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   117de:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   117e5:	ff ff 1f 
   117e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   117ec:	73 05                	jae    117f3 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   117ee:	e8 4d 1a ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   117f3:	e8 d8 18 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   117f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117fc:	48 c1 e0 03          	shl    $0x3,%rax
   11800:	48 89 c7             	mov    %rax,%rdi
   11803:	e8 38 1b ff ff       	call   3340 <_Znwm@plt>
   11808:	90                   	nop
      }
   11809:	c9                   	leave
   1180a:	c3                   	ret

000000000001180b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   1180b:	55                   	push   %rbp
   1180c:	48 89 e5             	mov    %rsp,%rbp
   1180f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   11813:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11817:	5d                   	pop    %rbp
   11818:	c3                   	ret

0000000000011819 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   11819:	55                   	push   %rbp
   1181a:	48 89 e5             	mov    %rsp,%rbp
   1181d:	48 83 ec 30          	sub    $0x30,%rsp
   11821:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11825:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11829:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1182d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   11831:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11835:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11839:	48 c1 f8 03          	sar    $0x3,%rax
   1183d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   11841:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11846:	7e 1f                	jle    11867 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   11848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1184c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11853:	00 
   11854:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   11858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1185c:	48 89 ce             	mov    %rcx,%rsi
   1185f:	48 89 c7             	mov    %rax,%rdi
   11862:	e8 e9 1d ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   11867:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1186b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11872:	00 
   11873:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11877:	48 01 d0             	add    %rdx,%rax
    }
   1187a:	c9                   	leave
   1187b:	c3                   	ret

000000000001187c <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1187c:	55                   	push   %rbp
   1187d:	48 89 e5             	mov    %rsp,%rbp
   11880:	48 83 ec 10          	sub    $0x10,%rsp
   11884:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   11888:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1188c:	48 89 c7             	mov    %rax,%rdi
   1188f:	e8 7a 0d 00 00       	call   1260e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   11894:	c9                   	leave
   11895:	c3                   	ret

0000000000011896 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   11896:	55                   	push   %rbp
   11897:	48 89 e5             	mov    %rsp,%rbp
   1189a:	48 83 ec 10          	sub    $0x10,%rsp
   1189e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   118a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   118aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118ae:	ba 00 00 00 00       	mov    $0x0,%edx
   118b3:	48 89 ce             	mov    %rcx,%rsi
   118b6:	48 89 c7             	mov    %rax,%rdi
   118b9:	e8 64 0d 00 00       	call   12622 <_ZNSt15__new_allocatorIcE8allocateEmPKv>
   118be:	c9                   	leave
   118bf:	c3                   	ret

00000000000118c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   118c0:	55                   	push   %rbp
   118c1:	48 89 e5             	mov    %rsp,%rbp
   118c4:	48 83 ec 20          	sub    $0x20,%rsp
   118c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   118cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   118d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   118d5:	74 40                	je     11917 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
   118d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118db:	48 89 c7             	mov    %rax,%rdi
   118de:	e8 dd ee ff ff       	call   107c0 <_ZSt11__addressofIcEPT_RS0_>
   118e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   118e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118eb:	48 89 c7             	mov    %rax,%rdi
   118ee:	e8 77 0d 00 00       	call   1266a <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
   118f3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   118f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11900:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11908:	48 89 ce             	mov    %rcx,%rsi
   1190b:	48 89 c7             	mov    %rax,%rdi
   1190e:	e8 7a 0d 00 00       	call   1268d <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
   11913:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   11917:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1191b:	c9                   	leave
   1191c:	c3                   	ret
   1191d:	90                   	nop

000000000001191e <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1191e:	55                   	push   %rbp
   1191f:	48 89 e5             	mov    %rsp,%rbp
   11922:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11926:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1192a:	90                   	nop
   1192b:	5d                   	pop    %rbp
   1192c:	c3                   	ret
   1192d:	90                   	nop

000000000001192e <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1192e:	55                   	push   %rbp
   1192f:	48 89 e5             	mov    %rsp,%rbp
   11932:	48 83 ec 20          	sub    $0x20,%rsp
   11936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1193a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1193e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   11942:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11946:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   1194d:	00 
   1194e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11952:	48 89 d6             	mov    %rdx,%rsi
   11955:	48 89 c7             	mov    %rax,%rdi
   11958:	e8 03 1a ff ff       	call   3360 <_ZdlPvm@plt>
      }
   1195d:	c9                   	leave
   1195e:	c3                   	ret

000000000001195f <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1195f:	55                   	push   %rbp
   11960:	48 89 e5             	mov    %rsp,%rbp
   11963:	48 83 ec 10          	sub    $0x10,%rsp
   11967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1196b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1196f:	48 89 c7             	mov    %rax,%rdi
   11972:	e8 5b 0d 00 00       	call   126d2 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>
      }
   11977:	c9                   	leave
   11978:	c3                   	ret
   11979:	90                   	nop

000000000001197a <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1197a:	55                   	push   %rbp
   1197b:	48 89 e5             	mov    %rsp,%rbp
   1197e:	48 83 ec 20          	sub    $0x20,%rsp
   11982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11986:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1198a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1198e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11992:	48 89 c7             	mov    %rax,%rdi
   11995:	e8 52 0d 00 00       	call   126ec <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   1199a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1199e:	0f 92 c0             	setb   %al
   119a1:	0f b6 c0             	movzbl %al,%eax
   119a4:	48 85 c0             	test   %rax,%rax
   119a7:	0f 95 c0             	setne  %al
   119aa:	84 c0                	test   %al,%al
   119ac:	74 1a                	je     119c8 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   119ae:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   119b5:	ff ff 3f 
   119b8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   119bc:	73 05                	jae    119c3 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   119be:	e8 7d 18 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   119c3:	e8 08 17 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   119c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119cc:	48 c1 e0 02          	shl    $0x2,%rax
   119d0:	48 89 c7             	mov    %rax,%rdi
   119d3:	e8 68 19 ff ff       	call   3340 <_Znwm@plt>
   119d8:	90                   	nop
      }
   119d9:	c9                   	leave
   119da:	c3                   	ret

00000000000119db <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   119db:	55                   	push   %rbp
   119dc:	48 89 e5             	mov    %rsp,%rbp
   119df:	48 83 ec 20          	sub    $0x20,%rsp
   119e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   119eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   119ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   119f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   119f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119fb:	48 89 ce             	mov    %rcx,%rsi
   119fe:	48 89 c7             	mov    %rax,%rdi
   11a01:	e8 fa 0c 00 00       	call   12700 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
   11a06:	c9                   	leave
   11a07:	c3                   	ret

0000000000011a08 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   11a08:	55                   	push   %rbp
   11a09:	48 89 e5             	mov    %rsp,%rbp
   11a0c:	48 83 ec 10          	sub    $0x10,%rsp
   11a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   11a14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a18:	48 89 c7             	mov    %rax,%rdi
   11a1b:	e8 2c 0d 00 00       	call   1274c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   11a20:	c9                   	leave
   11a21:	c3                   	ret

0000000000011a22 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   11a22:	55                   	push   %rbp
   11a23:	48 89 e5             	mov    %rsp,%rbp
   11a26:	48 83 ec 20          	sub    $0x20,%rsp
   11a2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11a2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   11a32:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11a37:	74 40                	je     11a79 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   11a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a3d:	48 89 c7             	mov    %rax,%rdi
   11a40:	e8 21 0d 00 00       	call   12766 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   11a45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   11a49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a4d:	48 89 c7             	mov    %rax,%rdi
   11a50:	e8 1f 0d 00 00       	call   12774 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   11a55:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   11a5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a5e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   11a62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11a66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a6a:	48 89 ce             	mov    %rcx,%rsi
   11a6d:	48 89 c7             	mov    %rax,%rdi
   11a70:	e8 26 0d 00 00       	call   1279b <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   11a75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   11a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   11a7d:	c9                   	leave
   11a7e:	c3                   	ret
   11a7f:	90                   	nop

0000000000011a80 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   11a80:	55                   	push   %rbp
   11a81:	48 89 e5             	mov    %rsp,%rbp
   11a84:	48 83 ec 20          	sub    $0x20,%rsp
   11a88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11a90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   11a94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a98:	48 89 c7             	mov    %rax,%rdi
   11a9b:	e8 40 0d 00 00       	call   127e0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   11aa0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11aa4:	0f 92 c0             	setb   %al
   11aa7:	0f b6 c0             	movzbl %al,%eax
   11aaa:	48 85 c0             	test   %rax,%rax
   11aad:	0f 95 c0             	setne  %al
   11ab0:	84 c0                	test   %al,%al
   11ab2:	74 1a                	je     11ace <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   11ab4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   11abb:	ff ff 1f 
   11abe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11ac2:	73 05                	jae    11ac9 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   11ac4:	e8 77 17 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11ac9:	e8 02 16 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   11ace:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11ad2:	48 c1 e0 03          	shl    $0x3,%rax
   11ad6:	48 89 c7             	mov    %rax,%rdi
   11ad9:	e8 62 18 ff ff       	call   3340 <_Znwm@plt>
   11ade:	90                   	nop
      }
   11adf:	c9                   	leave
   11ae0:	c3                   	ret

0000000000011ae1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   11ae1:	55                   	push   %rbp
   11ae2:	48 89 e5             	mov    %rsp,%rbp
   11ae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   11ae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aed:	5d                   	pop    %rbp
   11aee:	c3                   	ret

0000000000011aef <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   11aef:	55                   	push   %rbp
   11af0:	48 89 e5             	mov    %rsp,%rbp
   11af3:	48 83 ec 30          	sub    $0x30,%rsp
   11af7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11afb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11aff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11b03:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   11b07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11b0b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11b0f:	48 c1 f8 03          	sar    $0x3,%rax
   11b13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   11b17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11b1c:	7e 1f                	jle    11b3d <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   11b1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11b29:	00 
   11b2a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   11b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b32:	48 89 ce             	mov    %rcx,%rsi
   11b35:	48 89 c7             	mov    %rax,%rdi
   11b38:	e8 13 1b ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   11b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b41:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11b48:	00 
   11b49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11b4d:	48 01 d0             	add    %rdx,%rax
    }
   11b50:	c9                   	leave
   11b51:	c3                   	ret

0000000000011b52 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   11b52:	55                   	push   %rbp
   11b53:	48 89 e5             	mov    %rsp,%rbp
   11b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   11b5a:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   11b61:	07 7e 00 
      }
   11b64:	5d                   	pop    %rbp
   11b65:	c3                   	ret

0000000000011b66 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   11b66:	55                   	push   %rbp
   11b67:	48 89 e5             	mov    %rsp,%rbp
   11b6a:	48 83 ec 20          	sub    $0x20,%rsp
   11b6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b72:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b76:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   11b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b7e:	48 89 c7             	mov    %rax,%rdi
   11b81:	e8 cc ff ff ff       	call   11b52 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   11b86:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11b8a:	0f 92 c0             	setb   %al
   11b8d:	0f b6 c0             	movzbl %al,%eax
   11b90:	48 85 c0             	test   %rax,%rax
   11b93:	0f 95 c0             	setne  %al
   11b96:	84 c0                	test   %al,%al
   11b98:	74 1a                	je     11bb4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   11b9a:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   11ba1:	0f fc 00 
   11ba4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11ba8:	73 05                	jae    11baf <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   11baa:	e8 91 16 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11baf:	e8 1c 15 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   11bb4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11bb8:	48 89 d0             	mov    %rdx,%rax
   11bbb:	48 c1 e0 06          	shl    $0x6,%rax
   11bbf:	48 01 d0             	add    %rdx,%rax
   11bc2:	48 c1 e0 02          	shl    $0x2,%rax
   11bc6:	48 89 c7             	mov    %rax,%rdi
   11bc9:	e8 72 17 ff ff       	call   3340 <_Znwm@plt>
   11bce:	90                   	nop
      }
   11bcf:	c9                   	leave
   11bd0:	c3                   	ret

0000000000011bd1 <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   11bd1:	55                   	push   %rbp
   11bd2:	48 89 e5             	mov    %rsp,%rbp
   11bd5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   11bd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bdd:	5d                   	pop    %rbp
   11bde:	c3                   	ret

0000000000011bdf <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   11bdf:	55                   	push   %rbp
   11be0:	48 89 e5             	mov    %rsp,%rbp
   11be3:	48 83 ec 10          	sub    $0x10,%rsp
   11be7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   11beb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bef:	48 89 c6             	mov    %rax,%rsi
   11bf2:	bf 04 01 00 00       	mov    $0x104,%edi
   11bf7:	e8 3b 6b ff ff       	call   8737 <_ZnwmPv>
   11bfc:	b9 04 01 00 00       	mov    $0x104,%ecx
   11c01:	be 00 00 00 00       	mov    $0x0,%esi
   11c06:	48 89 30             	mov    %rsi,(%rax)
   11c09:	89 ca                	mov    %ecx,%edx
   11c0b:	48 01 c2             	add    %rax,%rdx
   11c0e:	48 83 c2 08          	add    $0x8,%rdx
   11c12:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   11c16:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11c1a:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   11c1e:	48 29 d0             	sub    %rdx,%rax
   11c21:	01 c1                	add    %eax,%ecx
   11c23:	83 e1 f8             	and    $0xfffffff8,%ecx
   11c26:	89 c8                	mov    %ecx,%eax
   11c28:	c1 e8 03             	shr    $0x3,%eax
   11c2b:	89 c1                	mov    %eax,%ecx
   11c2d:	48 89 d7             	mov    %rdx,%rdi
   11c30:	48 89 f0             	mov    %rsi,%rax
   11c33:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   11c36:	90                   	nop
   11c37:	c9                   	leave
   11c38:	c3                   	ret

0000000000011c39 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   11c39:	55                   	push   %rbp
   11c3a:	48 89 e5             	mov    %rsp,%rbp
   11c3d:	48 83 ec 20          	sub    $0x20,%rsp
   11c41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11c49:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
   11c4d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c51:	48 89 c7             	mov    %rax,%rdi
   11c54:	e8 9b 0b 00 00       	call   127f4 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   11c59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11c5d:	48 89 c7             	mov    %rax,%rdi
   11c60:	e8 25 6b ff ff       	call   878a <_ZSt17__size_to_integerm>
   11c65:	48 89 c1             	mov    %rax,%rcx
   11c68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c6c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c70:	48 89 ce             	mov    %rcx,%rsi
   11c73:	48 89 c7             	mov    %rax,%rdi
   11c76:	e8 84 0b 00 00       	call   127ff <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   11c7b:	c9                   	leave
   11c7c:	c3                   	ret

0000000000011c7d <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   11c7d:	55                   	push   %rbp
   11c7e:	48 89 e5             	mov    %rsp,%rbp
   11c81:	53                   	push   %rbx
   11c82:	48 83 ec 28          	sub    $0x28,%rsp
   11c86:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c8a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11c8e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   11c92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11c96:	48 89 c7             	mov    %rax,%rdi
   11c99:	e8 d0 0b 00 00       	call   1286e <_ZSt12__miter_baseIPPKcET_S3_>
   11c9e:	48 89 c3             	mov    %rax,%rbx
   11ca1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ca5:	48 89 c7             	mov    %rax,%rdi
   11ca8:	e8 c1 0b 00 00       	call   1286e <_ZSt12__miter_baseIPPKcET_S3_>
   11cad:	48 89 c1             	mov    %rax,%rcx
   11cb0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11cb4:	48 89 c2             	mov    %rax,%rdx
   11cb7:	48 89 de             	mov    %rbx,%rsi
   11cba:	48 89 cf             	mov    %rcx,%rdi
   11cbd:	e8 ba 0b 00 00       	call   1287c <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>
    }
   11cc2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11cc6:	c9                   	leave
   11cc7:	c3                   	ret

0000000000011cc8 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   11cc8:	55                   	push   %rbp
   11cc9:	48 89 e5             	mov    %rsp,%rbp
   11ccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   11cd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cd4:	5d                   	pop    %rbp
   11cd5:	c3                   	ret

0000000000011cd6 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   11cd6:	55                   	push   %rbp
   11cd7:	48 89 e5             	mov    %rsp,%rbp
   11cda:	48 83 ec 30          	sub    $0x30,%rsp
   11cde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11ce2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11ce6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   11cea:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   11cee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11cf2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11cf6:	48 c1 f8 03          	sar    $0x3,%rax
   11cfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   11cfe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11d03:	7e 1f                	jle    11d24 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   11d05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d09:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11d10:	00 
   11d11:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   11d15:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d19:	48 89 ce             	mov    %rcx,%rsi
   11d1c:	48 89 c7             	mov    %rax,%rdi
   11d1f:	e8 2c 19 ff ff       	call   3650 <memmove@plt>
      return __result + __count;
   11d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d28:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11d2f:	00 
   11d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11d34:	48 01 d0             	add    %rdx,%rax
    }
   11d37:	c9                   	leave
   11d38:	c3                   	ret
   11d39:	90                   	nop

0000000000011d3a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   11d3a:	55                   	push   %rbp
   11d3b:	48 89 e5             	mov    %rsp,%rbp
   11d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   11d42:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   11d49:	03 3f 00 
      }
   11d4c:	5d                   	pop    %rbp
   11d4d:	c3                   	ret

0000000000011d4e <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   11d4e:	55                   	push   %rbp
   11d4f:	48 89 e5             	mov    %rsp,%rbp
   11d52:	48 83 ec 20          	sub    $0x20,%rsp
   11d56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11d5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   11d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d66:	48 89 c7             	mov    %rax,%rdi
   11d69:	e8 cc ff ff ff       	call   11d3a <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   11d6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11d72:	0f 92 c0             	setb   %al
   11d75:	0f b6 c0             	movzbl %al,%eax
   11d78:	48 85 c0             	test   %rax,%rax
   11d7b:	0f 95 c0             	setne  %al
   11d7e:	84 c0                	test   %al,%al
   11d80:	74 1a                	je     11d9c <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   11d82:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   11d89:	07 7e 00 
   11d8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   11d90:	73 05                	jae    11d97 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   11d92:	e8 a9 14 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   11d97:	e8 34 13 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   11d9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11da0:	48 89 d0             	mov    %rdx,%rax
   11da3:	48 c1 e0 06          	shl    $0x6,%rax
   11da7:	48 01 d0             	add    %rdx,%rax
   11daa:	48 c1 e0 03          	shl    $0x3,%rax
   11dae:	48 89 c7             	mov    %rax,%rdi
   11db1:	e8 8a 15 ff ff       	call   3340 <_Znwm@plt>
   11db6:	90                   	nop
      }
   11db7:	c9                   	leave
   11db8:	c3                   	ret

0000000000011db9 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   11db9:	55                   	push   %rbp
   11dba:	48 89 e5             	mov    %rsp,%rbp
   11dbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   11dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dc5:	5d                   	pop    %rbp
   11dc6:	c3                   	ret

0000000000011dc7 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   11dc7:	55                   	push   %rbp
   11dc8:	48 89 e5             	mov    %rsp,%rbp
   11dcb:	48 83 ec 10          	sub    $0x10,%rsp
   11dcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   11dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dd7:	48 89 c6             	mov    %rax,%rsi
   11dda:	bf 08 02 00 00       	mov    $0x208,%edi
   11ddf:	e8 53 69 ff ff       	call   8737 <_ZnwmPv>
   11de4:	b9 08 02 00 00       	mov    $0x208,%ecx
   11de9:	be 00 00 00 00       	mov    $0x0,%esi
   11dee:	48 89 30             	mov    %rsi,(%rax)
   11df1:	89 ca                	mov    %ecx,%edx
   11df3:	48 01 c2             	add    %rax,%rdx
   11df6:	48 83 c2 08          	add    $0x8,%rdx
   11dfa:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   11dfe:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11e02:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   11e06:	48 29 d0             	sub    %rdx,%rax
   11e09:	01 c1                	add    %eax,%ecx
   11e0b:	83 e1 f8             	and    $0xfffffff8,%ecx
   11e0e:	89 c8                	mov    %ecx,%eax
   11e10:	c1 e8 03             	shr    $0x3,%eax
   11e13:	89 c1                	mov    %eax,%ecx
   11e15:	48 89 d7             	mov    %rdx,%rdi
   11e18:	48 89 f0             	mov    %rsi,%rax
   11e1b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   11e1e:	90                   	nop
   11e1f:	c9                   	leave
   11e20:	c3                   	ret

0000000000011e21 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   11e21:	55                   	push   %rbp
   11e22:	48 89 e5             	mov    %rsp,%rbp
   11e25:	48 83 ec 20          	sub    $0x20,%rsp
   11e29:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e2d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11e31:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   11e35:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11e39:	48 89 c7             	mov    %rax,%rdi
   11e3c:	e8 a5 0a 00 00       	call   128e6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   11e41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11e45:	48 89 c7             	mov    %rax,%rdi
   11e48:	e8 3d 69 ff ff       	call   878a <_ZSt17__size_to_integerm>
   11e4d:	48 89 c1             	mov    %rax,%rcx
   11e50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11e58:	48 89 ce             	mov    %rcx,%rsi
   11e5b:	48 89 c7             	mov    %rax,%rdi
   11e5e:	e8 8e 0a 00 00       	call   128f1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   11e63:	c9                   	leave
   11e64:	c3                   	ret
   11e65:	90                   	nop

0000000000011e66 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>:
      _M_get_node()
   11e66:	55                   	push   %rbp
   11e67:	48 89 e5             	mov    %rsp,%rbp
   11e6a:	48 83 ec 10          	sub    $0x10,%rsp
   11e6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   11e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e76:	48 89 c7             	mov    %rax,%rdi
   11e79:	e8 86 ed ff ff       	call   10c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   11e7e:	be 01 00 00 00       	mov    $0x1,%esi
   11e83:	48 89 c7             	mov    %rax,%rdi
   11e86:	e8 d5 0a 00 00       	call   12960 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>
   11e8b:	c9                   	leave
   11e8c:	c3                   	ret
   11e8d:	90                   	nop

0000000000011e8e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   11e8e:	55                   	push   %rbp
   11e8f:	48 89 e5             	mov    %rsp,%rbp
   11e92:	41 54                	push   %r12
   11e94:	53                   	push   %rbx
   11e95:	48 83 ec 20          	sub    $0x20,%rsp
   11e99:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11e9d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   11ea1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   11ea5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ea9:	48 89 c6             	mov    %rax,%rsi
   11eac:	bf 40 00 00 00       	mov    $0x40,%edi
   11eb1:	e8 81 68 ff ff       	call   8737 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   11eb6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11eba:	48 89 c7             	mov    %rax,%rdi
   11ebd:	e8 27 d1 ff ff       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   11ec2:	49 89 c4             	mov    %rax,%r12
   11ec5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ec9:	48 89 c7             	mov    %rax,%rdi
   11ecc:	e8 41 ed ff ff       	call   10c12 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   11ed1:	48 89 c3             	mov    %rax,%rbx
   11ed4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ed8:	48 89 c7             	mov    %rax,%rdi
   11edb:	e8 24 ed ff ff       	call   10c04 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   11ee0:	4c 89 e2             	mov    %r12,%rdx
   11ee3:	48 89 de             	mov    %rbx,%rsi
   11ee6:	48 89 c7             	mov    %rax,%rdi
   11ee9:	e8 9c 0a 00 00       	call   1298a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>
	}
   11eee:	eb 33                	jmp    11f23 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_+0x95>
	  __catch(...)
   11ef0:	48 89 c7             	mov    %rax,%rdi
   11ef3:	e8 f8 11 ff ff       	call   30f0 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   11ef8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f00:	48 89 d6             	mov    %rdx,%rsi
   11f03:	48 89 c7             	mov    %rax,%rdi
   11f06:	e8 f1 d3 ff ff       	call   f2fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
	      __throw_exception_again;
   11f0b:	e8 a0 16 ff ff       	call   35b0 <__cxa_rethrow@plt>
	  __catch(...)
   11f10:	48 89 c3             	mov    %rax,%rbx
   11f13:	e8 48 17 ff ff       	call   3660 <__cxa_end_catch@plt>
   11f18:	48 89 d8             	mov    %rbx,%rax
   11f1b:	48 89 c7             	mov    %rax,%rdi
   11f1e:	e8 8d 17 ff ff       	call   36b0 <_Unwind_Resume@plt>
	}
   11f23:	48 83 c4 20          	add    $0x20,%rsp
   11f27:	5b                   	pop    %rbx
   11f28:	41 5c                	pop    %r12
   11f2a:	5d                   	pop    %rbp
   11f2b:	c3                   	ret

0000000000011f2c <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11f2c:	55                   	push   %rbp
   11f2d:	48 89 e5             	mov    %rsp,%rbp
   11f30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11f34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f38:	5d                   	pop    %rbp
   11f39:	c3                   	ret

0000000000011f3a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11f3a:	55                   	push   %rbp
   11f3b:	48 89 e5             	mov    %rsp,%rbp
   11f3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11f42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f46:	5d                   	pop    %rbp
   11f47:	c3                   	ret

0000000000011f48 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
   11f48:	55                   	push   %rbp
   11f49:	48 89 e5             	mov    %rsp,%rbp
   11f4c:	48 83 ec 10          	sub    $0x10,%rsp
   11f50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   11f54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11f58:	48 89 c7             	mov    %rax,%rdi
   11f5b:	e8 64 0a 00 00       	call   129c4 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   11f60:	c9                   	leave
   11f61:	c3                   	ret

0000000000011f62 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>:
	destroy(_Up* __p)
   11f62:	55                   	push   %rbp
   11f63:	48 89 e5             	mov    %rsp,%rbp
   11f66:	48 83 ec 10          	sub    $0x10,%rsp
   11f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   11f72:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11f76:	48 89 c7             	mov    %rax,%rdi
   11f79:	e8 42 12 ff ff       	call   31c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11f7e:	90                   	nop
   11f7f:	c9                   	leave
   11f80:	c3                   	ret
   11f81:	90                   	nop

0000000000011f82 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   11f82:	55                   	push   %rbp
   11f83:	48 89 e5             	mov    %rsp,%rbp
   11f86:	48 83 ec 20          	sub    $0x20,%rsp
   11f8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11f8e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11f92:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   11f96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f9a:	48 c1 e0 06          	shl    $0x6,%rax
   11f9e:	48 89 c2             	mov    %rax,%rdx
   11fa1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11fa5:	48 89 d6             	mov    %rdx,%rsi
   11fa8:	48 89 c7             	mov    %rax,%rdi
   11fab:	e8 b0 13 ff ff       	call   3360 <_ZdlPvm@plt>
      }
   11fb0:	c9                   	leave
   11fb1:	c3                   	ret

0000000000011fb2 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
   11fb2:	55                   	push   %rbp
   11fb3:	48 89 e5             	mov    %rsp,%rbp
   11fb6:	48 83 ec 10          	sub    $0x10,%rsp
   11fba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   11fbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fc2:	48 89 c7             	mov    %rax,%rdi
   11fc5:	e8 08 0a 00 00       	call   129d2 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   11fca:	c9                   	leave
   11fcb:	c3                   	ret

0000000000011fcc <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   11fcc:	55                   	push   %rbp
   11fcd:	48 89 e5             	mov    %rsp,%rbp
   11fd0:	48 83 ec 10          	sub    $0x10,%rsp
   11fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   11fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11fdc:	48 89 c7             	mov    %rax,%rdi
   11fdf:	e8 82 00 00 00       	call   12066 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   11fe4:	c9                   	leave
   11fe5:	c3                   	ret

0000000000011fe6 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   11fe6:	55                   	push   %rbp
   11fe7:	48 89 e5             	mov    %rsp,%rbp
   11fea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   11fee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ff2:	5d                   	pop    %rbp
   11ff3:	c3                   	ret

0000000000011ff4 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   11ff4:	55                   	push   %rbp
   11ff5:	48 89 e5             	mov    %rsp,%rbp
   11ff8:	48 83 ec 10          	sub    $0x10,%rsp
   11ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   12000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12004:	48 89 c6             	mov    %rax,%rsi
   12007:	bf 08 00 00 00       	mov    $0x8,%edi
   1200c:	e8 26 67 ff ff       	call   8737 <_ZnwmPv>
   12011:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   12017:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
   1201e:	90                   	nop
   1201f:	c9                   	leave
   12020:	c3                   	ret

0000000000012021 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   12021:	55                   	push   %rbp
   12022:	48 89 e5             	mov    %rsp,%rbp
   12025:	48 83 ec 20          	sub    $0x20,%rsp
   12029:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1202d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12031:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   12035:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12039:	48 89 c7             	mov    %rax,%rdi
   1203c:	e8 9f 09 00 00       	call   129e0 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   12041:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12045:	48 89 c7             	mov    %rax,%rdi
   12048:	e8 3d 67 ff ff       	call   878a <_ZSt17__size_to_integerm>
   1204d:	48 89 c1             	mov    %rax,%rcx
   12050:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12054:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12058:	48 89 ce             	mov    %rcx,%rsi
   1205b:	48 89 c7             	mov    %rax,%rdi
   1205e:	e8 88 09 00 00       	call   129eb <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   12063:	c9                   	leave
   12064:	c3                   	ret
   12065:	90                   	nop

0000000000012066 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   12066:	55                   	push   %rbp
   12067:	48 89 e5             	mov    %rsp,%rbp
   1206a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1206e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   12075:	ff ff 0f 
      }
   12078:	5d                   	pop    %rbp
   12079:	c3                   	ret

000000000001207a <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1207a:	55                   	push   %rbp
   1207b:	48 89 e5             	mov    %rsp,%rbp
   1207e:	48 83 ec 10          	sub    $0x10,%rsp
   12082:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   12086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1208a:	48 89 c7             	mov    %rax,%rdi
   1208d:	e8 7a 00 00 00       	call   1210c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   12092:	c9                   	leave
   12093:	c3                   	ret

0000000000012094 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12094:	55                   	push   %rbp
   12095:	48 89 e5             	mov    %rsp,%rbp
   12098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1209c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120a0:	5d                   	pop    %rbp
   120a1:	c3                   	ret

00000000000120a2 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   120a2:	55                   	push   %rbp
   120a3:	48 89 e5             	mov    %rsp,%rbp
   120a6:	48 83 ec 10          	sub    $0x10,%rsp
   120aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   120ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120b2:	48 89 c6             	mov    %rax,%rsi
   120b5:	bf 04 00 00 00       	mov    $0x4,%edi
   120ba:	e8 78 66 ff ff       	call   8737 <_ZnwmPv>
   120bf:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
   120c5:	90                   	nop
   120c6:	c9                   	leave
   120c7:	c3                   	ret

00000000000120c8 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   120c8:	55                   	push   %rbp
   120c9:	48 89 e5             	mov    %rsp,%rbp
   120cc:	48 83 ec 20          	sub    $0x20,%rsp
   120d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   120d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   120dc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   120e0:	48 89 c7             	mov    %rax,%rdi
   120e3:	e8 60 09 00 00       	call   12a48 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   120e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   120ec:	48 89 c7             	mov    %rax,%rdi
   120ef:	e8 96 66 ff ff       	call   878a <_ZSt17__size_to_integerm>
   120f4:	48 89 c1             	mov    %rax,%rcx
   120f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   120ff:	48 89 ce             	mov    %rcx,%rsi
   12102:	48 89 c7             	mov    %rax,%rdi
   12105:	e8 49 09 00 00       	call   12a53 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   1210a:	c9                   	leave
   1210b:	c3                   	ret

000000000001210c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1210c:	55                   	push   %rbp
   1210d:	48 89 e5             	mov    %rsp,%rbp
   12110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12114:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1211b:	ff ff 1f 
      }
   1211e:	5d                   	pop    %rbp
   1211f:	c3                   	ret

0000000000012120 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   12120:	55                   	push   %rbp
   12121:	48 89 e5             	mov    %rsp,%rbp
   12124:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12128:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1212f:	ff ff 0f 
      }
   12132:	5d                   	pop    %rbp
   12133:	c3                   	ret

0000000000012134 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12134:	55                   	push   %rbp
   12135:	48 89 e5             	mov    %rsp,%rbp
   12138:	48 83 ec 20          	sub    $0x20,%rsp
   1213c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12144:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12148:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1214c:	48 89 c7             	mov    %rax,%rdi
   1214f:	e8 cc ff ff ff       	call   12120 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
   12154:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12158:	0f 92 c0             	setb   %al
   1215b:	0f b6 c0             	movzbl %al,%eax
   1215e:	48 85 c0             	test   %rax,%rax
   12161:	0f 95 c0             	setne  %al
   12164:	84 c0                	test   %al,%al
   12166:	74 1a                	je     12182 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   12168:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1216f:	ff ff 1f 
   12172:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12176:	73 05                	jae    1217d <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   12178:	e8 c3 10 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1217d:	e8 4e 0f ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   12182:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12186:	48 c1 e0 03          	shl    $0x3,%rax
   1218a:	48 89 c7             	mov    %rax,%rdi
   1218d:	e8 ae 11 ff ff       	call   3340 <_Znwm@plt>
   12192:	90                   	nop
      }
   12193:	c9                   	leave
   12194:	c3                   	ret

0000000000012195 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12195:	55                   	push   %rbp
   12196:	48 89 e5             	mov    %rsp,%rbp
   12199:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1219d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121a1:	5d                   	pop    %rbp
   121a2:	c3                   	ret

00000000000121a3 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   121a3:	55                   	push   %rbp
   121a4:	48 89 e5             	mov    %rsp,%rbp
   121a7:	48 83 ec 10          	sub    $0x10,%rsp
   121ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   121af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b3:	48 89 c6             	mov    %rax,%rsi
   121b6:	bf 08 00 00 00       	mov    $0x8,%edi
   121bb:	e8 77 65 ff ff       	call   8737 <_ZnwmPv>
   121c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   121c7:	90                   	nop
   121c8:	c9                   	leave
   121c9:	c3                   	ret

00000000000121ca <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   121ca:	55                   	push   %rbp
   121cb:	48 89 e5             	mov    %rsp,%rbp
   121ce:	48 83 ec 20          	sub    $0x20,%rsp
   121d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   121da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   121de:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   121e2:	48 89 c7             	mov    %rax,%rdi
   121e5:	e8 c6 08 00 00       	call   12ab0 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   121ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   121ee:	48 89 c7             	mov    %rax,%rdi
   121f1:	e8 94 65 ff ff       	call   878a <_ZSt17__size_to_integerm>
   121f6:	48 89 c1             	mov    %rax,%rcx
   121f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12201:	48 89 ce             	mov    %rcx,%rsi
   12204:	48 89 c7             	mov    %rax,%rdi
   12207:	e8 af 08 00 00       	call   12abb <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1220c:	c9                   	leave
   1220d:	c3                   	ret

000000000001220e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1220e:	55                   	push   %rbp
   1220f:	48 89 e5             	mov    %rsp,%rbp
   12212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12216:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   1221d:	55 55 05 
      }
   12220:	5d                   	pop    %rbp
   12221:	c3                   	ret

0000000000012222 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12222:	55                   	push   %rbp
   12223:	48 89 e5             	mov    %rsp,%rbp
   12226:	48 83 ec 20          	sub    $0x20,%rsp
   1222a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1222e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12232:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1223a:	48 89 c7             	mov    %rax,%rdi
   1223d:	e8 cc ff ff ff       	call   1220e <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   12242:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12246:	0f 92 c0             	setb   %al
   12249:	0f b6 c0             	movzbl %al,%eax
   1224c:	48 85 c0             	test   %rax,%rax
   1224f:	0f 95 c0             	setne  %al
   12252:	84 c0                	test   %al,%al
   12254:	74 1a                	je     12270 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   12256:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   1225d:	aa aa 0a 
   12260:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12264:	73 05                	jae    1226b <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   12266:	e8 d5 0f ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1226b:	e8 60 0e ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   12270:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12274:	48 89 d0             	mov    %rdx,%rax
   12277:	48 01 c0             	add    %rax,%rax
   1227a:	48 01 d0             	add    %rdx,%rax
   1227d:	48 c1 e0 03          	shl    $0x3,%rax
   12281:	48 89 c7             	mov    %rax,%rdi
   12284:	e8 b7 10 ff ff       	call   3340 <_Znwm@plt>
   12289:	90                   	nop
      }
   1228a:	c9                   	leave
   1228b:	c3                   	ret

000000000001228c <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   1228c:	55                   	push   %rbp
   1228d:	48 89 e5             	mov    %rsp,%rbp
   12290:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   12294:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12298:	5d                   	pop    %rbp
   12299:	c3                   	ret

000000000001229a <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1229a:	55                   	push   %rbp
   1229b:	48 89 e5             	mov    %rsp,%rbp
   1229e:	48 83 ec 10          	sub    $0x10,%rsp
   122a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   122a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122aa:	48 89 c6             	mov    %rax,%rsi
   122ad:	bf 18 00 00 00       	mov    $0x18,%edi
   122b2:	e8 80 64 ff ff       	call   8737 <_ZnwmPv>
   122b7:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   122bd:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   122c4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   122cb:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   122d2:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   122d9:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
   122e0:	90                   	nop
   122e1:	c9                   	leave
   122e2:	c3                   	ret

00000000000122e3 <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   122e3:	55                   	push   %rbp
   122e4:	48 89 e5             	mov    %rsp,%rbp
   122e7:	48 83 ec 20          	sub    $0x20,%rsp
   122eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   122f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   122f7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   122fb:	48 89 c7             	mov    %rax,%rdi
   122fe:	e8 15 08 00 00       	call   12b18 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   12303:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12307:	48 89 c7             	mov    %rax,%rdi
   1230a:	e8 7b 64 ff ff       	call   878a <_ZSt17__size_to_integerm>
   1230f:	48 89 c1             	mov    %rax,%rcx
   12312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12316:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1231a:	48 89 ce             	mov    %rcx,%rsi
   1231d:	48 89 c7             	mov    %rax,%rdi
   12320:	e8 fe 07 00 00       	call   12b23 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   12325:	c9                   	leave
   12326:	c3                   	ret

0000000000012327 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>:
      _S_key(_Const_Link_type __x)
   12327:	55                   	push   %rbp
   12328:	48 89 e5             	mov    %rsp,%rbp
   1232b:	48 83 ec 20          	sub    $0x20,%rsp
   1232f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   12333:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12337:	48 89 c7             	mov    %rax,%rdi
   1233a:	e8 d3 9c ff ff       	call   c012 <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
   1233f:	48 89 c2             	mov    %rax,%rdx
   12342:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   12346:	48 89 d6             	mov    %rdx,%rsi
   12349:	48 89 c7             	mov    %rax,%rdi
   1234c:	e8 fd dc ff ff       	call   1004e <_ZNKSt9_IdentityIjEclERKj>
      }
   12351:	c9                   	leave
   12352:	c3                   	ret
   12353:	90                   	nop

0000000000012354 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12354:	55                   	push   %rbp
   12355:	48 89 e5             	mov    %rsp,%rbp
   12358:	48 83 ec 20          	sub    $0x20,%rsp
   1235c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   12360:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12364:	48 8b 50 18          	mov    0x18(%rax),%rdx
   12368:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1236c:	48 89 d6             	mov    %rdx,%rsi
   1236f:	48 89 c7             	mov    %rax,%rdi
   12372:	e8 6f d8 ff ff       	call   fbe6 <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   12377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1237b:	c9                   	leave
   1237c:	c3                   	ret

000000000001237d <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   1237d:	55                   	push   %rbp
   1237e:	48 89 e5             	mov    %rsp,%rbp
   12381:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12385:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   12389:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1238d:	48 8b 10             	mov    (%rax),%rdx
   12390:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12394:	48 8b 00             	mov    (%rax),%rax
   12397:	48 39 c2             	cmp    %rax,%rdx
   1239a:	0f 94 c0             	sete   %al
   1239d:	5d                   	pop    %rbp
   1239e:	c3                   	ret
   1239f:	90                   	nop

00000000000123a0 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   123a0:	55                   	push   %rbp
   123a1:	48 89 e5             	mov    %rsp,%rbp
   123a4:	48 83 ec 20          	sub    $0x20,%rsp
   123a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   123b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   123b8:	48 89 c7             	mov    %rax,%rdi
   123bb:	e8 d0 07 00 00       	call   12b90 <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>
   123c0:	48 8b 10             	mov    (%rax),%rdx
   123c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123c7:	48 89 10             	mov    %rdx,(%rax)
   123ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123ce:	48 89 c7             	mov    %rax,%rdi
   123d1:	e8 64 fb ff ff       	call   11f3a <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   123d6:	48 8b 10             	mov    (%rax),%rdx
   123d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123dd:	48 89 50 08          	mov    %rdx,0x8(%rax)
   123e1:	90                   	nop
   123e2:	c9                   	leave
   123e3:	c3                   	ret

00000000000123e4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_create_node(_Args&&... __args)
   123e4:	55                   	push   %rbp
   123e5:	48 89 e5             	mov    %rsp,%rbp
   123e8:	48 83 ec 20          	sub    $0x20,%rsp
   123ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   123f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   123f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123f8:	48 89 c7             	mov    %rax,%rdi
   123fb:	e8 9e 07 00 00       	call   12b9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>
   12400:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   12404:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12408:	48 89 c7             	mov    %rax,%rdi
   1240b:	e8 50 dc ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   12410:	48 89 c2             	mov    %rax,%rdx
   12413:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12417:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1241b:	48 89 ce             	mov    %rcx,%rsi
   1241e:	48 89 c7             	mov    %rax,%rdi
   12421:	e8 a0 07 00 00       	call   12bc6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>
	  return __tmp;
   12426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1242a:	c9                   	leave
   1242b:	c3                   	ret

000000000001242c <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _M_ptr() noexcept
   1242c:	55                   	push   %rbp
   1242d:	48 89 e5             	mov    %rsp,%rbp
   12430:	48 83 ec 10          	sub    $0x10,%rsp
   12434:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   12438:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1243c:	48 89 c7             	mov    %rax,%rdi
   1243f:	e8 ec 07 00 00       	call   12c30 <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
   12444:	c9                   	leave
   12445:	c3                   	ret

0000000000012446 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>:
	destroy(_Up* __p)
   12446:	55                   	push   %rbp
   12447:	48 89 e5             	mov    %rsp,%rbp
   1244a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1244e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   12452:	90                   	nop
   12453:	5d                   	pop    %rbp
   12454:	c3                   	ret
   12455:	90                   	nop

0000000000012456 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   12456:	55                   	push   %rbp
   12457:	48 89 e5             	mov    %rsp,%rbp
   1245a:	48 83 ec 20          	sub    $0x20,%rsp
   1245e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12462:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12466:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1246a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1246e:	48 89 d0             	mov    %rdx,%rax
   12471:	48 c1 e0 02          	shl    $0x2,%rax
   12475:	48 01 d0             	add    %rdx,%rax
   12478:	48 c1 e0 03          	shl    $0x3,%rax
   1247c:	48 89 c2             	mov    %rax,%rdx
   1247f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12483:	48 89 d6             	mov    %rdx,%rsi
   12486:	48 89 c7             	mov    %rax,%rdi
   12489:	e8 d2 0e ff ff       	call   3360 <_ZdlPvm@plt>
      }
   1248e:	c9                   	leave
   1248f:	c3                   	ret

0000000000012490 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   12490:	55                   	push   %rbp
   12491:	48 89 e5             	mov    %rsp,%rbp
   12494:	48 83 ec 10          	sub    $0x10,%rsp
   12498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1249c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124a0:	48 89 c7             	mov    %rax,%rdi
   124a3:	e8 96 07 00 00       	call   12c3e <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>
      }
   124a8:	c9                   	leave
   124a9:	c3                   	ret

00000000000124aa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   124aa:	55                   	push   %rbp
   124ab:	48 89 e5             	mov    %rsp,%rbp
   124ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   124b2:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   124b9:	33 33 03 
      }
   124bc:	5d                   	pop    %rbp
   124bd:	c3                   	ret

00000000000124be <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   124be:	55                   	push   %rbp
   124bf:	48 89 e5             	mov    %rsp,%rbp
   124c2:	48 83 ec 10          	sub    $0x10,%rsp
   124c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   124ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124ce:	48 89 c7             	mov    %rax,%rdi
   124d1:	e8 7c 00 00 00       	call   12552 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   124d6:	c9                   	leave
   124d7:	c3                   	ret

00000000000124d8 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   124d8:	55                   	push   %rbp
   124d9:	48 89 e5             	mov    %rsp,%rbp
   124dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   124e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e4:	5d                   	pop    %rbp
   124e5:	c3                   	ret

00000000000124e6 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   124e6:	55                   	push   %rbp
   124e7:	48 89 e5             	mov    %rsp,%rbp
   124ea:	48 83 ec 10          	sub    $0x10,%rsp
   124ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   124f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f6:	48 89 c6             	mov    %rax,%rsi
   124f9:	bf 08 00 00 00       	mov    $0x8,%edi
   124fe:	e8 34 62 ff ff       	call   8737 <_ZnwmPv>
   12503:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   1250a:	90                   	nop
   1250b:	c9                   	leave
   1250c:	c3                   	ret

000000000001250d <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1250d:	55                   	push   %rbp
   1250e:	48 89 e5             	mov    %rsp,%rbp
   12511:	48 83 ec 20          	sub    $0x20,%rsp
   12515:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12519:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1251d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   12521:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12525:	48 89 c7             	mov    %rax,%rdi
   12528:	e8 2b 07 00 00       	call   12c58 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1252d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12531:	48 89 c7             	mov    %rax,%rdi
   12534:	e8 51 62 ff ff       	call   878a <_ZSt17__size_to_integerm>
   12539:	48 89 c1             	mov    %rax,%rcx
   1253c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12540:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12544:	48 89 ce             	mov    %rcx,%rsi
   12547:	48 89 c7             	mov    %rax,%rdi
   1254a:	e8 14 07 00 00       	call   12c63 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1254f:	c9                   	leave
   12550:	c3                   	ret
   12551:	90                   	nop

0000000000012552 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   12552:	55                   	push   %rbp
   12553:	48 89 e5             	mov    %rsp,%rbp
   12556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1255a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   12561:	ff ff 0f 
      }
   12564:	5d                   	pop    %rbp
   12565:	c3                   	ret

0000000000012566 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   12566:	55                   	push   %rbp
   12567:	48 89 e5             	mov    %rsp,%rbp
   1256a:	48 83 ec 10          	sub    $0x10,%rsp
   1256e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   12572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12576:	48 89 c7             	mov    %rax,%rdi
   12579:	e8 7c 00 00 00       	call   125fa <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1257e:	c9                   	leave
   1257f:	c3                   	ret

0000000000012580 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12580:	55                   	push   %rbp
   12581:	48 89 e5             	mov    %rsp,%rbp
   12584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   12588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1258c:	5d                   	pop    %rbp
   1258d:	c3                   	ret

000000000001258e <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1258e:	55                   	push   %rbp
   1258f:	48 89 e5             	mov    %rsp,%rbp
   12592:	48 83 ec 10          	sub    $0x10,%rsp
   12596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1259a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1259e:	48 89 c6             	mov    %rax,%rsi
   125a1:	bf 08 00 00 00       	mov    $0x8,%edi
   125a6:	e8 8c 61 ff ff       	call   8737 <_ZnwmPv>
   125ab:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   125b2:	90                   	nop
   125b3:	c9                   	leave
   125b4:	c3                   	ret

00000000000125b5 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   125b5:	55                   	push   %rbp
   125b6:	48 89 e5             	mov    %rsp,%rbp
   125b9:	48 83 ec 20          	sub    $0x20,%rsp
   125bd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125c1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   125c5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   125c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   125cd:	48 89 c7             	mov    %rax,%rdi
   125d0:	e8 eb 06 00 00       	call   12cc0 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   125d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   125d9:	48 89 c7             	mov    %rax,%rdi
   125dc:	e8 a9 61 ff ff       	call   878a <_ZSt17__size_to_integerm>
   125e1:	48 89 c1             	mov    %rax,%rcx
   125e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125e8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   125ec:	48 89 ce             	mov    %rcx,%rsi
   125ef:	48 89 c7             	mov    %rax,%rdi
   125f2:	e8 d4 06 00 00       	call   12ccb <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   125f7:	c9                   	leave
   125f8:	c3                   	ret
   125f9:	90                   	nop

00000000000125fa <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   125fa:	55                   	push   %rbp
   125fb:	48 89 e5             	mov    %rsp,%rbp
   125fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12602:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   12609:	ff ff 0f 
      }
   1260c:	5d                   	pop    %rbp
   1260d:	c3                   	ret

000000000001260e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1260e:	55                   	push   %rbp
   1260f:	48 89 e5             	mov    %rsp,%rbp
   12612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   12616:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   1261d:	ff ff 7f 
      }
   12620:	5d                   	pop    %rbp
   12621:	c3                   	ret

0000000000012622 <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12622:	55                   	push   %rbp
   12623:	48 89 e5             	mov    %rsp,%rbp
   12626:	48 83 ec 20          	sub    $0x20,%rsp
   1262a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1262e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12632:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1263a:	48 89 c7             	mov    %rax,%rdi
   1263d:	e8 cc ff ff ff       	call   1260e <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   12642:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12646:	0f 92 c0             	setb   %al
   12649:	0f b6 c0             	movzbl %al,%eax
   1264c:	48 85 c0             	test   %rax,%rax
   1264f:	0f 95 c0             	setne  %al
   12652:	84 c0                	test   %al,%al
   12654:	74 05                	je     1265b <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
   12656:	e8 75 0a ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1265b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1265f:	48 89 c7             	mov    %rax,%rdi
   12662:	e8 d9 0c ff ff       	call   3340 <_Znwm@plt>
   12667:	90                   	nop
      }
   12668:	c9                   	leave
   12669:	c3                   	ret

000000000001266a <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1266a:	55                   	push   %rbp
   1266b:	48 89 e5             	mov    %rsp,%rbp
   1266e:	48 83 ec 10          	sub    $0x10,%rsp
   12672:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   12676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1267a:	48 89 c6             	mov    %rax,%rsi
   1267d:	bf 01 00 00 00       	mov    $0x1,%edi
   12682:	e8 b0 60 ff ff       	call   8737 <_ZnwmPv>
   12687:	c6 00 00             	movb   $0x0,(%rax)
    }
   1268a:	90                   	nop
   1268b:	c9                   	leave
   1268c:	c3                   	ret

000000000001268d <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1268d:	55                   	push   %rbp
   1268e:	48 89 e5             	mov    %rsp,%rbp
   12691:	48 83 ec 20          	sub    $0x20,%rsp
   12695:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12699:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1269d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   126a1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   126a5:	48 89 c7             	mov    %rax,%rdi
   126a8:	e8 f3 a7 ff ff       	call   cea0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   126ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126b1:	48 89 c7             	mov    %rax,%rdi
   126b4:	e8 d1 60 ff ff       	call   878a <_ZSt17__size_to_integerm>
   126b9:	48 89 c1             	mov    %rax,%rcx
   126bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126c0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   126c4:	48 89 ce             	mov    %rcx,%rsi
   126c7:	48 89 c7             	mov    %rax,%rdi
   126ca:	e8 59 06 00 00       	call   12d28 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
   126cf:	c9                   	leave
   126d0:	c3                   	ret
   126d1:	90                   	nop

00000000000126d2 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   126d2:	55                   	push   %rbp
   126d3:	48 89 e5             	mov    %rsp,%rbp
   126d6:	48 83 ec 10          	sub    $0x10,%rsp
   126da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   126de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126e2:	48 89 c7             	mov    %rax,%rdi
   126e5:	e8 02 00 00 00       	call   126ec <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   126ea:	c9                   	leave
   126eb:	c3                   	ret

00000000000126ec <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   126ec:	55                   	push   %rbp
   126ed:	48 89 e5             	mov    %rsp,%rbp
   126f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   126f4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   126fb:	ff ff 1f 
      }
   126fe:	5d                   	pop    %rbp
   126ff:	c3                   	ret

0000000000012700 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   12700:	55                   	push   %rbp
   12701:	48 89 e5             	mov    %rsp,%rbp
   12704:	53                   	push   %rbx
   12705:	48 83 ec 28          	sub    $0x28,%rsp
   12709:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1270d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12711:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   12715:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12719:	48 89 c7             	mov    %rax,%rdi
   1271c:	e8 54 06 00 00       	call   12d75 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   12721:	48 89 c3             	mov    %rax,%rbx
   12724:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12728:	48 89 c7             	mov    %rax,%rdi
   1272b:	e8 45 06 00 00       	call   12d75 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   12730:	48 89 c1             	mov    %rax,%rcx
   12733:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12737:	48 89 c2             	mov    %rax,%rdx
   1273a:	48 89 de             	mov    %rbx,%rsi
   1273d:	48 89 cf             	mov    %rcx,%rdi
   12740:	e8 3e 06 00 00       	call   12d83 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
    }
   12745:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12749:	c9                   	leave
   1274a:	c3                   	ret
   1274b:	90                   	nop

000000000001274c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1274c:	55                   	push   %rbp
   1274d:	48 89 e5             	mov    %rsp,%rbp
   12750:	48 83 ec 10          	sub    $0x10,%rsp
   12754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   12758:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1275c:	48 89 c7             	mov    %rax,%rdi
   1275f:	e8 7c 00 00 00       	call   127e0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   12764:	c9                   	leave
   12765:	c3                   	ret

0000000000012766 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   12766:	55                   	push   %rbp
   12767:	48 89 e5             	mov    %rsp,%rbp
   1276a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1276e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12772:	5d                   	pop    %rbp
   12773:	c3                   	ret

0000000000012774 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   12774:	55                   	push   %rbp
   12775:	48 89 e5             	mov    %rsp,%rbp
   12778:	48 83 ec 10          	sub    $0x10,%rsp
   1277c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   12780:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12784:	48 89 c6             	mov    %rax,%rsi
   12787:	bf 08 00 00 00       	mov    $0x8,%edi
   1278c:	e8 a6 5f ff ff       	call   8737 <_ZnwmPv>
   12791:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   12798:	90                   	nop
   12799:	c9                   	leave
   1279a:	c3                   	ret

000000000001279b <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1279b:	55                   	push   %rbp
   1279c:	48 89 e5             	mov    %rsp,%rbp
   1279f:	48 83 ec 20          	sub    $0x20,%rsp
   127a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   127ab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   127af:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   127b3:	48 89 c7             	mov    %rax,%rdi
   127b6:	e8 32 06 00 00       	call   12ded <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   127bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127bf:	48 89 c7             	mov    %rax,%rdi
   127c2:	e8 c3 5f ff ff       	call   878a <_ZSt17__size_to_integerm>
   127c7:	48 89 c1             	mov    %rax,%rcx
   127ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   127d2:	48 89 ce             	mov    %rcx,%rsi
   127d5:	48 89 c7             	mov    %rax,%rdi
   127d8:	e8 1b 06 00 00       	call   12df8 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   127dd:	c9                   	leave
   127de:	c3                   	ret
   127df:	90                   	nop

00000000000127e0 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   127e0:	55                   	push   %rbp
   127e1:	48 89 e5             	mov    %rsp,%rbp
   127e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   127e8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   127ef:	ff ff 0f 
      }
   127f2:	5d                   	pop    %rbp
   127f3:	c3                   	ret

00000000000127f4 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   127f4:	55                   	push   %rbp
   127f5:	48 89 e5             	mov    %rsp,%rbp
   127f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   127fc:	90                   	nop
   127fd:	5d                   	pop    %rbp
   127fe:	c3                   	ret

00000000000127ff <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   127ff:	55                   	push   %rbp
   12800:	48 89 e5             	mov    %rsp,%rbp
   12803:	48 83 ec 20          	sub    $0x20,%rsp
   12807:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1280b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1280f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12813:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12818:	75 06                	jne    12820 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1281a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1281e:	eb 4c                	jmp    1286c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   12820:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12824:	48 89 d0             	mov    %rdx,%rax
   12827:	48 c1 e0 06          	shl    $0x6,%rax
   1282b:	48 01 d0             	add    %rdx,%rax
   1282e:	48 c1 e0 02          	shl    $0x2,%rax
   12832:	48 89 c2             	mov    %rax,%rdx
   12835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12839:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1283d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12845:	48 89 ce             	mov    %rcx,%rsi
   12848:	48 89 c7             	mov    %rax,%rdi
   1284b:	e8 05 06 00 00       	call   12e55 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   12850:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12854:	48 89 d0             	mov    %rdx,%rax
   12857:	48 c1 e0 06          	shl    $0x6,%rax
   1285b:	48 01 d0             	add    %rdx,%rax
   1285e:	48 c1 e0 02          	shl    $0x2,%rax
   12862:	48 89 c2             	mov    %rax,%rdx
   12865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12869:	48 01 d0             	add    %rdx,%rax
    }
   1286c:	c9                   	leave
   1286d:	c3                   	ret

000000000001286e <_ZSt12__miter_baseIPPKcET_S3_>:
    __miter_base(_Iterator __it)
   1286e:	55                   	push   %rbp
   1286f:	48 89 e5             	mov    %rsp,%rbp
   12872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   12876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1287a:	5d                   	pop    %rbp
   1287b:	c3                   	ret

000000000001287c <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1287c:	55                   	push   %rbp
   1287d:	48 89 e5             	mov    %rsp,%rbp
   12880:	41 54                	push   %r12
   12882:	53                   	push   %rbx
   12883:	48 83 ec 20          	sub    $0x20,%rsp
   12887:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1288b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1288f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   12893:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12897:	48 89 c7             	mov    %rax,%rdi
   1289a:	e8 bc 22 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   1289f:	49 89 c4             	mov    %rax,%r12
   128a2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   128a6:	48 89 c7             	mov    %rax,%rdi
   128a9:	e8 ad 22 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   128ae:	48 89 c3             	mov    %rax,%rbx
   128b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128b5:	48 89 c7             	mov    %rax,%rdi
   128b8:	e8 9e 22 ff ff       	call   4b5b <_ZSt12__niter_baseIPPKcET_S3_>
   128bd:	4c 89 e2             	mov    %r12,%rdx
   128c0:	48 89 de             	mov    %rbx,%rsi
   128c3:	48 89 c7             	mov    %rax,%rdi
   128c6:	e8 b8 05 00 00       	call   12e83 <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>
   128cb:	48 89 c2             	mov    %rax,%rdx
   128ce:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   128d2:	48 89 d6             	mov    %rdx,%rsi
   128d5:	48 89 c7             	mov    %rax,%rdi
   128d8:	e8 b9 22 ff ff       	call   4b96 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   128dd:	48 83 c4 20          	add    $0x20,%rsp
   128e1:	5b                   	pop    %rbx
   128e2:	41 5c                	pop    %r12
   128e4:	5d                   	pop    %rbp
   128e5:	c3                   	ret

00000000000128e6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   128e6:	55                   	push   %rbp
   128e7:	48 89 e5             	mov    %rsp,%rbp
   128ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   128ee:	90                   	nop
   128ef:	5d                   	pop    %rbp
   128f0:	c3                   	ret

00000000000128f1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   128f1:	55                   	push   %rbp
   128f2:	48 89 e5             	mov    %rsp,%rbp
   128f5:	48 83 ec 20          	sub    $0x20,%rsp
   128f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12901:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12905:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1290a:	75 06                	jne    12912 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1290c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12910:	eb 4c                	jmp    1295e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   12912:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12916:	48 89 d0             	mov    %rdx,%rax
   12919:	48 c1 e0 06          	shl    $0x6,%rax
   1291d:	48 01 d0             	add    %rdx,%rax
   12920:	48 c1 e0 03          	shl    $0x3,%rax
   12924:	48 89 c2             	mov    %rax,%rdx
   12927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1292b:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1292f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12937:	48 89 ce             	mov    %rcx,%rsi
   1293a:	48 89 c7             	mov    %rax,%rdi
   1293d:	e8 6e 05 00 00       	call   12eb0 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   12942:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12946:	48 89 d0             	mov    %rdx,%rax
   12949:	48 c1 e0 06          	shl    $0x6,%rax
   1294d:	48 01 d0             	add    %rdx,%rax
   12950:	48 c1 e0 03          	shl    $0x3,%rax
   12954:	48 89 c2             	mov    %rax,%rdx
   12957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1295b:	48 01 d0             	add    %rdx,%rax
    }
   1295e:	c9                   	leave
   1295f:	c3                   	ret

0000000000012960 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>:
      allocate(allocator_type& __a, size_type __n)
   12960:	55                   	push   %rbp
   12961:	48 89 e5             	mov    %rsp,%rbp
   12964:	48 83 ec 10          	sub    $0x10,%rsp
   12968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1296c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   12970:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12978:	ba 00 00 00 00       	mov    $0x0,%edx
   1297d:	48 89 ce             	mov    %rcx,%rsi
   12980:	48 89 c7             	mov    %rax,%rdi
   12983:	e8 56 05 00 00       	call   12ede <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>
   12988:	c9                   	leave
   12989:	c3                   	ret

000000000001298a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1298a:	55                   	push   %rbp
   1298b:	48 89 e5             	mov    %rsp,%rbp
   1298e:	48 83 ec 20          	sub    $0x20,%rsp
   12992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1299a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1299e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129a2:	48 89 c7             	mov    %rax,%rdi
   129a5:	e8 3f c6 ff ff       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   129aa:	48 89 c2             	mov    %rax,%rdx
   129ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   129b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129b5:	48 89 ce             	mov    %rcx,%rsi
   129b8:	48 89 c7             	mov    %rax,%rdi
   129bb:	e8 80 05 00 00       	call   12f40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>
	}
   129c0:	90                   	nop
   129c1:	c9                   	leave
   129c2:	c3                   	ret
   129c3:	90                   	nop

00000000000129c4 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
   129c4:	55                   	push   %rbp
   129c5:	48 89 e5             	mov    %rsp,%rbp
   129c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   129cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129d0:	5d                   	pop    %rbp
   129d1:	c3                   	ret

00000000000129d2 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
   129d2:	55                   	push   %rbp
   129d3:	48 89 e5             	mov    %rsp,%rbp
   129d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   129da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129de:	5d                   	pop    %rbp
   129df:	c3                   	ret

00000000000129e0 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   129e0:	55                   	push   %rbp
   129e1:	48 89 e5             	mov    %rsp,%rbp
   129e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   129e8:	90                   	nop
   129e9:	5d                   	pop    %rbp
   129ea:	c3                   	ret

00000000000129eb <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   129eb:	55                   	push   %rbp
   129ec:	48 89 e5             	mov    %rsp,%rbp
   129ef:	48 83 ec 20          	sub    $0x20,%rsp
   129f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   129fb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   129ff:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12a04:	75 06                	jne    12a0c <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12a06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a0a:	eb 3a                	jmp    12a46 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12a0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a10:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12a17:	00 
   12a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a1c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12a20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a28:	48 89 ce             	mov    %rcx,%rsi
   12a2b:	48 89 c7             	mov    %rax,%rdi
   12a2e:	e8 b1 05 00 00       	call   12fe4 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   12a33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a37:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12a3e:	00 
   12a3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a43:	48 01 d0             	add    %rdx,%rax
    }
   12a46:	c9                   	leave
   12a47:	c3                   	ret

0000000000012a48 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   12a48:	55                   	push   %rbp
   12a49:	48 89 e5             	mov    %rsp,%rbp
   12a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12a50:	90                   	nop
   12a51:	5d                   	pop    %rbp
   12a52:	c3                   	ret

0000000000012a53 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12a53:	55                   	push   %rbp
   12a54:	48 89 e5             	mov    %rsp,%rbp
   12a57:	48 83 ec 20          	sub    $0x20,%rsp
   12a5b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a5f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12a63:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12a67:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12a6c:	75 06                	jne    12a74 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a72:	eb 3a                	jmp    12aae <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12a74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a78:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12a7f:	00 
   12a80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a84:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12a88:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a90:	48 89 ce             	mov    %rcx,%rsi
   12a93:	48 89 c7             	mov    %rax,%rdi
   12a96:	e8 77 05 00 00       	call   13012 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   12a9b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a9f:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   12aa6:	00 
   12aa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aab:	48 01 d0             	add    %rdx,%rax
    }
   12aae:	c9                   	leave
   12aaf:	c3                   	ret

0000000000012ab0 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   12ab0:	55                   	push   %rbp
   12ab1:	48 89 e5             	mov    %rsp,%rbp
   12ab4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12ab8:	90                   	nop
   12ab9:	5d                   	pop    %rbp
   12aba:	c3                   	ret

0000000000012abb <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12abb:	55                   	push   %rbp
   12abc:	48 89 e5             	mov    %rsp,%rbp
   12abf:	48 83 ec 20          	sub    $0x20,%rsp
   12ac3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ac7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12acb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12acf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12ad4:	75 06                	jne    12adc <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12ad6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ada:	eb 3a                	jmp    12b16 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12adc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12ae0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12ae7:	00 
   12ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aec:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12af0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12af4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12af8:	48 89 ce             	mov    %rcx,%rsi
   12afb:	48 89 c7             	mov    %rax,%rdi
   12afe:	e8 3d 05 00 00       	call   13040 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
   12b03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12b07:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12b0e:	00 
   12b0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b13:	48 01 d0             	add    %rdx,%rax
    }
   12b16:	c9                   	leave
   12b17:	c3                   	ret

0000000000012b18 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   12b18:	55                   	push   %rbp
   12b19:	48 89 e5             	mov    %rsp,%rbp
   12b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12b20:	90                   	nop
   12b21:	5d                   	pop    %rbp
   12b22:	c3                   	ret

0000000000012b23 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12b23:	55                   	push   %rbp
   12b24:	48 89 e5             	mov    %rsp,%rbp
   12b27:	48 83 ec 20          	sub    $0x20,%rsp
   12b2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12b33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12b37:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12b3c:	75 06                	jne    12b44 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12b3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b42:	eb 4a                	jmp    12b8e <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
   12b44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b48:	48 89 d0             	mov    %rdx,%rax
   12b4b:	48 01 c0             	add    %rax,%rax
   12b4e:	48 01 d0             	add    %rdx,%rax
   12b51:	48 c1 e0 03          	shl    $0x3,%rax
   12b55:	48 89 c2             	mov    %rax,%rdx
   12b58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b5c:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12b60:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b68:	48 89 ce             	mov    %rcx,%rsi
   12b6b:	48 89 c7             	mov    %rax,%rdi
   12b6e:	e8 fb 04 00 00       	call   1306e <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   12b73:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b77:	48 89 d0             	mov    %rdx,%rax
   12b7a:	48 01 c0             	add    %rax,%rax
   12b7d:	48 01 d0             	add    %rdx,%rax
   12b80:	48 c1 e0 03          	shl    $0x3,%rax
   12b84:	48 89 c2             	mov    %rax,%rdx
   12b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b8b:	48 01 d0             	add    %rdx,%rax
    }
   12b8e:	c9                   	leave
   12b8f:	c3                   	ret

0000000000012b90 <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b90:	55                   	push   %rbp
   12b91:	48 89 e5             	mov    %rsp,%rbp
   12b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b9c:	5d                   	pop    %rbp
   12b9d:	c3                   	ret

0000000000012b9e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>:
      _M_get_node()
   12b9e:	55                   	push   %rbp
   12b9f:	48 89 e5             	mov    %rsp,%rbp
   12ba2:	48 83 ec 10          	sub    $0x10,%rsp
   12ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   12baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bae:	48 89 c7             	mov    %rax,%rdi
   12bb1:	e8 64 e8 ff ff       	call   1141a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   12bb6:	be 01 00 00 00       	mov    $0x1,%esi
   12bbb:	48 89 c7             	mov    %rax,%rdi
   12bbe:	e8 d9 04 00 00       	call   1309c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>
   12bc3:	c9                   	leave
   12bc4:	c3                   	ret
   12bc5:	90                   	nop

0000000000012bc6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   12bc6:	55                   	push   %rbp
   12bc7:	48 89 e5             	mov    %rsp,%rbp
   12bca:	41 54                	push   %r12
   12bcc:	53                   	push   %rbx
   12bcd:	48 83 ec 20          	sub    $0x20,%rsp
   12bd1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12bd5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12bd9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   12bdd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12be1:	48 89 c6             	mov    %rax,%rsi
   12be4:	bf 28 00 00 00       	mov    $0x28,%edi
   12be9:	e8 49 5b ff ff       	call   8737 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   12bee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12bf2:	48 89 c7             	mov    %rax,%rdi
   12bf5:	e8 66 d4 ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   12bfa:	49 89 c4             	mov    %rax,%r12
   12bfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c01:	48 89 c7             	mov    %rax,%rdi
   12c04:	e8 1f e8 ff ff       	call   11428 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   12c09:	48 89 c3             	mov    %rax,%rbx
   12c0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12c10:	48 89 c7             	mov    %rax,%rdi
   12c13:	e8 02 e8 ff ff       	call   1141a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   12c18:	4c 89 e2             	mov    %r12,%rdx
   12c1b:	48 89 de             	mov    %rbx,%rsi
   12c1e:	48 89 c7             	mov    %rax,%rdi
   12c21:	e8 a0 04 00 00       	call   130c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>
	}
   12c26:	90                   	nop
   12c27:	48 83 c4 20          	add    $0x20,%rsp
   12c2b:	5b                   	pop    %rbx
   12c2c:	41 5c                	pop    %r12
   12c2e:	5d                   	pop    %rbp
   12c2f:	c3                   	ret

0000000000012c30 <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() noexcept
   12c30:	55                   	push   %rbp
   12c31:	48 89 e5             	mov    %rsp,%rbp
   12c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   12c38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c3c:	5d                   	pop    %rbp
   12c3d:	c3                   	ret

0000000000012c3e <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   12c3e:	55                   	push   %rbp
   12c3f:	48 89 e5             	mov    %rsp,%rbp
   12c42:	48 83 ec 10          	sub    $0x10,%rsp
   12c46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   12c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c4e:	48 89 c7             	mov    %rax,%rdi
   12c51:	e8 54 f8 ff ff       	call   124aa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   12c56:	c9                   	leave
   12c57:	c3                   	ret

0000000000012c58 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   12c58:	55                   	push   %rbp
   12c59:	48 89 e5             	mov    %rsp,%rbp
   12c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12c60:	90                   	nop
   12c61:	5d                   	pop    %rbp
   12c62:	c3                   	ret

0000000000012c63 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12c63:	55                   	push   %rbp
   12c64:	48 89 e5             	mov    %rsp,%rbp
   12c67:	48 83 ec 20          	sub    $0x20,%rsp
   12c6b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c6f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12c73:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12c77:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12c7c:	75 06                	jne    12c84 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12c7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c82:	eb 3a                	jmp    12cbe <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12c84:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12c88:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12c8f:	00 
   12c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c94:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12c98:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ca0:	48 89 ce             	mov    %rcx,%rsi
   12ca3:	48 89 c7             	mov    %rax,%rdi
   12ca6:	e8 54 04 00 00       	call   130ff <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
   12cab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12caf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12cb6:	00 
   12cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cbb:	48 01 d0             	add    %rdx,%rax
    }
   12cbe:	c9                   	leave
   12cbf:	c3                   	ret

0000000000012cc0 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   12cc0:	55                   	push   %rbp
   12cc1:	48 89 e5             	mov    %rsp,%rbp
   12cc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12cc8:	90                   	nop
   12cc9:	5d                   	pop    %rbp
   12cca:	c3                   	ret

0000000000012ccb <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12ccb:	55                   	push   %rbp
   12ccc:	48 89 e5             	mov    %rsp,%rbp
   12ccf:	48 83 ec 20          	sub    $0x20,%rsp
   12cd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12cd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12cdb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12cdf:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12ce4:	75 06                	jne    12cec <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12ce6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cea:	eb 3a                	jmp    12d26 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12cec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12cf0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12cf7:	00 
   12cf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12cfc:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12d00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d08:	48 89 ce             	mov    %rcx,%rsi
   12d0b:	48 89 c7             	mov    %rax,%rdi
   12d0e:	e8 1a 04 00 00       	call   1312d <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   12d13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d17:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12d1e:	00 
   12d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d23:	48 01 d0             	add    %rdx,%rax
    }
   12d26:	c9                   	leave
   12d27:	c3                   	ret

0000000000012d28 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12d28:	55                   	push   %rbp
   12d29:	48 89 e5             	mov    %rsp,%rbp
   12d2c:	48 83 ec 20          	sub    $0x20,%rsp
   12d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12d38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12d3c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12d41:	75 06                	jne    12d49 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d47:	eb 2a                	jmp    12d73 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
   12d49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d4d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d51:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12d55:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d5d:	48 89 ce             	mov    %rcx,%rsi
   12d60:	48 89 c7             	mov    %rax,%rdi
   12d63:	e8 f3 03 00 00       	call   1315b <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
   12d68:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d6c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12d70:	48 01 d0             	add    %rdx,%rax
    }
   12d73:	c9                   	leave
   12d74:	c3                   	ret

0000000000012d75 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>:
    __miter_base(_Iterator __it)
   12d75:	55                   	push   %rbp
   12d76:	48 89 e5             	mov    %rsp,%rbp
   12d79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   12d7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d81:	5d                   	pop    %rbp
   12d82:	c3                   	ret

0000000000012d83 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   12d83:	55                   	push   %rbp
   12d84:	48 89 e5             	mov    %rsp,%rbp
   12d87:	41 54                	push   %r12
   12d89:	53                   	push   %rbx
   12d8a:	48 83 ec 20          	sub    $0x20,%rsp
   12d8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12d92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12d96:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   12d9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d9e:	48 89 c7             	mov    %rax,%rdi
   12da1:	e8 f1 03 00 00       	call   13197 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>
   12da6:	49 89 c4             	mov    %rax,%r12
   12da9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12dad:	48 89 c7             	mov    %rax,%rdi
   12db0:	e8 d4 03 00 00       	call   13189 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   12db5:	48 89 c3             	mov    %rax,%rbx
   12db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12dbc:	48 89 c7             	mov    %rax,%rdi
   12dbf:	e8 c5 03 00 00       	call   13189 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   12dc4:	4c 89 e2             	mov    %r12,%rdx
   12dc7:	48 89 de             	mov    %rbx,%rsi
   12dca:	48 89 c7             	mov    %rax,%rdi
   12dcd:	e8 d3 03 00 00       	call   131a5 <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   12dd2:	48 89 c2             	mov    %rax,%rdx
   12dd5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   12dd9:	48 89 d6             	mov    %rdx,%rsi
   12ddc:	48 89 c7             	mov    %rax,%rdi
   12ddf:	e8 ee 03 00 00       	call   131d2 <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>
    }
   12de4:	48 83 c4 20          	add    $0x20,%rsp
   12de8:	5b                   	pop    %rbx
   12de9:	41 5c                	pop    %r12
   12deb:	5d                   	pop    %rbp
   12dec:	c3                   	ret

0000000000012ded <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   12ded:	55                   	push   %rbp
   12dee:	48 89 e5             	mov    %rsp,%rbp
   12df1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   12df5:	90                   	nop
   12df6:	5d                   	pop    %rbp
   12df7:	c3                   	ret

0000000000012df8 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   12df8:	55                   	push   %rbp
   12df9:	48 89 e5             	mov    %rsp,%rbp
   12dfc:	48 83 ec 20          	sub    $0x20,%rsp
   12e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e08:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   12e0c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12e11:	75 06                	jne    12e19 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   12e13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e17:	eb 3a                	jmp    12e53 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   12e19:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e1d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12e24:	00 
   12e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e29:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   12e2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e35:	48 89 ce             	mov    %rcx,%rsi
   12e38:	48 89 c7             	mov    %rax,%rdi
   12e3b:	e8 a4 03 00 00       	call   131e4 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   12e40:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12e44:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12e4b:	00 
   12e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e50:	48 01 d0             	add    %rdx,%rax
    }
   12e53:	c9                   	leave
   12e54:	c3                   	ret

0000000000012e55 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   12e55:	55                   	push   %rbp
   12e56:	48 89 e5             	mov    %rsp,%rbp
   12e59:	48 83 ec 20          	sub    $0x20,%rsp
   12e5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e65:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   12e69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e6d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12e71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12e75:	48 89 ce             	mov    %rcx,%rsi
   12e78:	48 89 c7             	mov    %rax,%rdi
   12e7b:	e8 92 03 00 00       	call   13212 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   12e80:	90                   	nop
   12e81:	c9                   	leave
   12e82:	c3                   	ret

0000000000012e83 <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   12e83:	55                   	push   %rbp
   12e84:	48 89 e5             	mov    %rsp,%rbp
   12e87:	48 83 ec 20          	sub    $0x20,%rsp
   12e8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12e8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12e93:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   12e97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12e9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ea3:	48 89 ce             	mov    %rcx,%rsi
   12ea6:	48 89 c7             	mov    %rax,%rdi
   12ea9:	e8 dc 03 00 00       	call   1328a <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>
   12eae:	c9                   	leave
   12eaf:	c3                   	ret

0000000000012eb0 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   12eb0:	55                   	push   %rbp
   12eb1:	48 89 e5             	mov    %rsp,%rbp
   12eb4:	48 83 ec 20          	sub    $0x20,%rsp
   12eb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ebc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12ec0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   12ec4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ec8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12ecc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ed0:	48 89 ce             	mov    %rcx,%rsi
   12ed3:	48 89 c7             	mov    %rax,%rdi
   12ed6:	e8 dc 03 00 00       	call   132b7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   12edb:	90                   	nop
   12edc:	c9                   	leave
   12edd:	c3                   	ret

0000000000012ede <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   12ede:	55                   	push   %rbp
   12edf:	48 89 e5             	mov    %rsp,%rbp
   12ee2:	48 83 ec 20          	sub    $0x20,%rsp
   12ee6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12eea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12eee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   12ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ef6:	48 89 c7             	mov    %rax,%rdi
   12ef9:	e8 32 04 00 00       	call   13330 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>
   12efe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12f02:	0f 92 c0             	setb   %al
   12f05:	0f b6 c0             	movzbl %al,%eax
   12f08:	48 85 c0             	test   %rax,%rax
   12f0b:	0f 95 c0             	setne  %al
   12f0e:	84 c0                	test   %al,%al
   12f10:	74 1a                	je     12f2c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   12f12:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   12f19:	ff ff 03 
   12f1c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   12f20:	73 05                	jae    12f27 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   12f22:	e8 19 03 ff ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   12f27:	e8 a4 01 ff ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   12f2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12f30:	48 c1 e0 06          	shl    $0x6,%rax
   12f34:	48 89 c7             	mov    %rax,%rdi
   12f37:	e8 04 04 ff ff       	call   3340 <_Znwm@plt>
   12f3c:	90                   	nop
      }
   12f3d:	c9                   	leave
   12f3e:	c3                   	ret
   12f3f:	90                   	nop

0000000000012f40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12f40:	55                   	push   %rbp
   12f41:	48 89 e5             	mov    %rsp,%rbp
   12f44:	41 56                	push   %r14
   12f46:	41 55                	push   %r13
   12f48:	41 54                	push   %r12
   12f4a:	53                   	push   %rbx
   12f4b:	48 83 ec 30          	sub    $0x30,%rsp
   12f4f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   12f53:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   12f57:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   12f5b:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   12f5f:	48 89 de             	mov    %rbx,%rsi
   12f62:	bf 20 00 00 00       	mov    $0x20,%edi
   12f67:	e8 cb 57 ff ff       	call   8737 <_ZnwmPv>
   12f6c:	49 89 c4             	mov    %rax,%r12
   12f6f:	41 be 01 00 00 00    	mov    $0x1,%r14d
   12f75:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12f79:	48 89 c7             	mov    %rax,%rdi
   12f7c:	e8 3f 07 ff ff       	call   36c0 <_ZNSaIcEC1Ev@plt>
   12f81:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   12f85:	48 89 c7             	mov    %rax,%rdi
   12f88:	e8 5c c0 ff ff       	call   efe9 <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   12f8d:	48 8b 00             	mov    (%rax),%rax
   12f90:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   12f94:	48 89 c6             	mov    %rax,%rsi
   12f97:	4c 89 e7             	mov    %r12,%rdi
   12f9a:	e8 2b 63 ff ff       	call   92ca <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   12f9f:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12fa3:	48 89 c7             	mov    %rax,%rdi
   12fa6:	e8 35 04 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
   12fab:	eb 2a                	jmp    12fd7 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x97>
   12fad:	49 89 c5             	mov    %rax,%r13
   12fb0:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   12fb4:	48 89 c7             	mov    %rax,%rdi
   12fb7:	e8 24 04 ff ff       	call   33e0 <_ZNSaIcED1Ev@plt>
   12fbc:	45 84 f6             	test   %r14b,%r14b
   12fbf:	74 0b                	je     12fcc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x8c>
   12fc1:	48 89 de             	mov    %rbx,%rsi
   12fc4:	4c 89 e7             	mov    %r12,%rdi
   12fc7:	e8 7d 57 ff ff       	call   8749 <_ZdlPvS_>
   12fcc:	4c 89 e8             	mov    %r13,%rax
   12fcf:	48 89 c7             	mov    %rax,%rdi
   12fd2:	e8 d9 06 ff ff       	call   36b0 <_Unwind_Resume@plt>
   12fd7:	48 83 c4 30          	add    $0x30,%rsp
   12fdb:	5b                   	pop    %rbx
   12fdc:	41 5c                	pop    %r12
   12fde:	41 5d                	pop    %r13
   12fe0:	41 5e                	pop    %r14
   12fe2:	5d                   	pop    %rbp
   12fe3:	c3                   	ret

0000000000012fe4 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   12fe4:	55                   	push   %rbp
   12fe5:	48 89 e5             	mov    %rsp,%rbp
   12fe8:	48 83 ec 20          	sub    $0x20,%rsp
   12fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12ff4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   12ff8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12ffc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13004:	48 89 ce             	mov    %rcx,%rsi
   13007:	48 89 c7             	mov    %rax,%rdi
   1300a:	e8 35 03 00 00       	call   13344 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   1300f:	90                   	nop
   13010:	c9                   	leave
   13011:	c3                   	ret

0000000000013012 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   13012:	55                   	push   %rbp
   13013:	48 89 e5             	mov    %rsp,%rbp
   13016:	48 83 ec 20          	sub    $0x20,%rsp
   1301a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1301e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13022:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   13026:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1302a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1302e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13032:	48 89 ce             	mov    %rcx,%rsi
   13035:	48 89 c7             	mov    %rax,%rdi
   13038:	e8 3a 03 00 00       	call   13377 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   1303d:	90                   	nop
   1303e:	c9                   	leave
   1303f:	c3                   	ret

0000000000013040 <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   13040:	55                   	push   %rbp
   13041:	48 89 e5             	mov    %rsp,%rbp
   13044:	48 83 ec 20          	sub    $0x20,%rsp
   13048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1304c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13050:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   13054:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13058:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1305c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13060:	48 89 ce             	mov    %rcx,%rsi
   13063:	48 89 c7             	mov    %rax,%rdi
   13066:	e8 3d 03 00 00       	call   133a8 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1306b:	90                   	nop
   1306c:	c9                   	leave
   1306d:	c3                   	ret

000000000001306e <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1306e:	55                   	push   %rbp
   1306f:	48 89 e5             	mov    %rsp,%rbp
   13072:	48 83 ec 20          	sub    $0x20,%rsp
   13076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1307a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1307e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   13082:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13086:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1308a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1308e:	48 89 ce             	mov    %rcx,%rsi
   13091:	48 89 c7             	mov    %rax,%rdi
   13094:	e8 4a 03 00 00       	call   133e3 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   13099:	90                   	nop
   1309a:	c9                   	leave
   1309b:	c3                   	ret

000000000001309c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1309c:	55                   	push   %rbp
   1309d:	48 89 e5             	mov    %rsp,%rbp
   130a0:	48 83 ec 10          	sub    $0x10,%rsp
   130a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   130ac:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   130b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130b4:	ba 00 00 00 00       	mov    $0x0,%edx
   130b9:	48 89 ce             	mov    %rcx,%rsi
   130bc:	48 89 c7             	mov    %rax,%rdi
   130bf:	e8 62 03 00 00       	call   13426 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>
   130c4:	c9                   	leave
   130c5:	c3                   	ret

00000000000130c6 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   130c6:	55                   	push   %rbp
   130c7:	48 89 e5             	mov    %rsp,%rbp
   130ca:	48 83 ec 20          	sub    $0x20,%rsp
   130ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   130d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   130da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130de:	48 89 c7             	mov    %rax,%rdi
   130e1:	e8 7a cf ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   130e6:	48 89 c2             	mov    %rax,%rdx
   130e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   130ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130f1:	48 89 ce             	mov    %rcx,%rsi
   130f4:	48 89 c7             	mov    %rax,%rdi
   130f7:	e8 96 03 00 00       	call   13492 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>
	}
   130fc:	90                   	nop
   130fd:	c9                   	leave
   130fe:	c3                   	ret

00000000000130ff <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   130ff:	55                   	push   %rbp
   13100:	48 89 e5             	mov    %rsp,%rbp
   13103:	48 83 ec 20          	sub    $0x20,%rsp
   13107:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1310b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1310f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   13113:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13117:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1311b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1311f:	48 89 ce             	mov    %rcx,%rsi
   13122:	48 89 c7             	mov    %rax,%rdi
   13125:	e8 a8 03 00 00       	call   134d2 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1312a:	90                   	nop
   1312b:	c9                   	leave
   1312c:	c3                   	ret

000000000001312d <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1312d:	55                   	push   %rbp
   1312e:	48 89 e5             	mov    %rsp,%rbp
   13131:	48 83 ec 20          	sub    $0x20,%rsp
   13135:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13139:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1313d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   13141:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13145:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13149:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1314d:	48 89 ce             	mov    %rcx,%rsi
   13150:	48 89 c7             	mov    %rax,%rdi
   13153:	e8 b5 03 00 00       	call   1350d <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   13158:	90                   	nop
   13159:	c9                   	leave
   1315a:	c3                   	ret

000000000001315b <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1315b:	55                   	push   %rbp
   1315c:	48 89 e5             	mov    %rsp,%rbp
   1315f:	48 83 ec 20          	sub    $0x20,%rsp
   13163:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13167:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1316b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1316f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13173:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13177:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1317b:	48 89 ce             	mov    %rcx,%rsi
   1317e:	48 89 c7             	mov    %rax,%rdi
   13181:	e8 c2 03 00 00       	call   13548 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
   13186:	90                   	nop
   13187:	c9                   	leave
   13188:	c3                   	ret

0000000000013189 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>:
    __niter_base(_Iterator __it)
   13189:	55                   	push   %rbp
   1318a:	48 89 e5             	mov    %rsp,%rbp
   1318d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   13191:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13195:	5d                   	pop    %rbp
   13196:	c3                   	ret

0000000000013197 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>:
    __niter_base(_Iterator __it)
   13197:	55                   	push   %rbp
   13198:	48 89 e5             	mov    %rsp,%rbp
   1319b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1319f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131a3:	5d                   	pop    %rbp
   131a4:	c3                   	ret

00000000000131a5 <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   131a5:	55                   	push   %rbp
   131a6:	48 89 e5             	mov    %rsp,%rbp
   131a9:	48 83 ec 20          	sub    $0x20,%rsp
   131ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   131b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   131c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131c5:	48 89 ce             	mov    %rcx,%rsi
   131c8:	48 89 c7             	mov    %rax,%rdi
   131cb:	e8 c5 03 00 00       	call   13595 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   131d0:	c9                   	leave
   131d1:	c3                   	ret

00000000000131d2 <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   131d2:	55                   	push   %rbp
   131d3:	48 89 e5             	mov    %rsp,%rbp
   131d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   131de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   131e2:	5d                   	pop    %rbp
   131e3:	c3                   	ret

00000000000131e4 <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   131e4:	55                   	push   %rbp
   131e5:	48 89 e5             	mov    %rsp,%rbp
   131e8:	48 83 ec 20          	sub    $0x20,%rsp
   131ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   131f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131fc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13204:	48 89 ce             	mov    %rcx,%rsi
   13207:	48 89 c7             	mov    %rax,%rdi
   1320a:	e8 b3 03 00 00       	call   135c2 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1320f:	90                   	nop
   13210:	c9                   	leave
   13211:	c3                   	ret

0000000000013212 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   13212:	55                   	push   %rbp
   13213:	48 89 e5             	mov    %rsp,%rbp
   13216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1321a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1321e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   13222:	eb 58                	jmp    1327c <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   13224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13228:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1322c:	b9 04 01 00 00       	mov    $0x104,%ecx
   13231:	48 8b 32             	mov    (%rdx),%rsi
   13234:	48 89 30             	mov    %rsi,(%rax)
   13237:	89 ce                	mov    %ecx,%esi
   13239:	48 01 c6             	add    %rax,%rsi
   1323c:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   13240:	89 ce                	mov    %ecx,%esi
   13242:	48 01 d6             	add    %rdx,%rsi
   13245:	48 83 c6 08          	add    $0x8,%rsi
   13249:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   1324d:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   13251:	48 8d 78 08          	lea    0x8(%rax),%rdi
   13255:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   13259:	48 29 f8             	sub    %rdi,%rax
   1325c:	48 29 c2             	sub    %rax,%rdx
   1325f:	01 c1                	add    %eax,%ecx
   13261:	83 e1 f8             	and    $0xfffffff8,%ecx
   13264:	89 c8                	mov    %ecx,%eax
   13266:	c1 e8 03             	shr    $0x3,%eax
   13269:	89 c0                	mov    %eax,%eax
   1326b:	48 89 d6             	mov    %rdx,%rsi
   1326e:	48 89 c1             	mov    %rax,%rcx
   13271:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   13274:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   1327b:	00 
   1327c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13280:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13284:	75 9e                	jne    13224 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   13286:	90                   	nop
   13287:	90                   	nop
   13288:	5d                   	pop    %rbp
   13289:	c3                   	ret

000000000001328a <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1328a:	55                   	push   %rbp
   1328b:	48 89 e5             	mov    %rsp,%rbp
   1328e:	48 83 ec 20          	sub    $0x20,%rsp
   13292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1329a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1329e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   132a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   132a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132aa:	48 89 ce             	mov    %rcx,%rsi
   132ad:	48 89 c7             	mov    %rax,%rdi
   132b0:	e8 20 19 ff ff       	call   4bd5 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   132b5:	c9                   	leave
   132b6:	c3                   	ret

00000000000132b7 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   132b7:	55                   	push   %rbp
   132b8:	48 89 e5             	mov    %rsp,%rbp
   132bb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132bf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   132c3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   132c7:	eb 58                	jmp    13321 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   132c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132cd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   132d1:	b9 08 02 00 00       	mov    $0x208,%ecx
   132d6:	48 8b 32             	mov    (%rdx),%rsi
   132d9:	48 89 30             	mov    %rsi,(%rax)
   132dc:	89 ce                	mov    %ecx,%esi
   132de:	48 01 c6             	add    %rax,%rsi
   132e1:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   132e5:	89 ce                	mov    %ecx,%esi
   132e7:	48 01 d6             	add    %rdx,%rsi
   132ea:	48 83 c6 08          	add    $0x8,%rsi
   132ee:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   132f2:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   132f6:	48 8d 78 08          	lea    0x8(%rax),%rdi
   132fa:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   132fe:	48 29 f8             	sub    %rdi,%rax
   13301:	48 29 c2             	sub    %rax,%rdx
   13304:	01 c1                	add    %eax,%ecx
   13306:	83 e1 f8             	and    $0xfffffff8,%ecx
   13309:	89 c8                	mov    %ecx,%eax
   1330b:	c1 e8 03             	shr    $0x3,%eax
   1330e:	89 c0                	mov    %eax,%eax
   13310:	48 89 d6             	mov    %rdx,%rsi
   13313:	48 89 c1             	mov    %rax,%rcx
   13316:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   13319:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   13320:	00 
   13321:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13325:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13329:	75 9e                	jne    132c9 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   1332b:	90                   	nop
   1332c:	90                   	nop
   1332d:	5d                   	pop    %rbp
   1332e:	c3                   	ret
   1332f:	90                   	nop

0000000000013330 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   13330:	55                   	push   %rbp
   13331:	48 89 e5             	mov    %rsp,%rbp
   13334:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   13338:	48 b8 ff ff ff ff ff 	movabs $0x1ffffffffffffff,%rax
   1333f:	ff ff 01 
      }
   13342:	5d                   	pop    %rbp
   13343:	c3                   	ret

0000000000013344 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   13344:	55                   	push   %rbp
   13345:	48 89 e5             	mov    %rsp,%rbp
   13348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1334c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13350:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   13354:	eb 13                	jmp    13369 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
   13356:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1335a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1335e:	48 8b 12             	mov    (%rdx),%rdx
   13361:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   13364:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   13369:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1336d:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13371:	75 e3                	jne    13356 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   13373:	90                   	nop
   13374:	90                   	nop
   13375:	5d                   	pop    %rbp
   13376:	c3                   	ret

0000000000013377 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   13377:	55                   	push   %rbp
   13378:	48 89 e5             	mov    %rsp,%rbp
   1337b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1337f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13383:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   13387:	eb 11                	jmp    1339a <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
   13389:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1338d:	8b 10                	mov    (%rax),%edx
   1338f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13393:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
   13395:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   1339a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1339e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   133a2:	75 e5                	jne    13389 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   133a4:	90                   	nop
   133a5:	90                   	nop
   133a6:	5d                   	pop    %rbp
   133a7:	c3                   	ret

00000000000133a8 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   133a8:	55                   	push   %rbp
   133a9:	48 89 e5             	mov    %rsp,%rbp
   133ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   133b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   133b4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   133b8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133bc:	48 8b 00             	mov    (%rax),%rax
   133bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   133c3:	eb 10                	jmp    133d5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   133c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133c9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   133cd:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   133d0:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   133d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   133d9:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   133dd:	75 e6                	jne    133c5 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   133df:	90                   	nop
   133e0:	90                   	nop
   133e1:	5d                   	pop    %rbp
   133e2:	c3                   	ret

00000000000133e3 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   133e3:	55                   	push   %rbp
   133e4:	48 89 e5             	mov    %rsp,%rbp
   133e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   133ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   133f3:	eb 23                	jmp    13418 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
   133f5:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   133f9:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   133fd:	48 8b 06             	mov    (%rsi),%rax
   13400:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   13404:	48 89 01             	mov    %rax,(%rcx)
   13407:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   1340b:	48 8b 46 10          	mov    0x10(%rsi),%rax
   1340f:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
   13413:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   13418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1341c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13420:	75 d3                	jne    133f5 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   13422:	90                   	nop
   13423:	90                   	nop
   13424:	5d                   	pop    %rbp
   13425:	c3                   	ret

0000000000013426 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   13426:	55                   	push   %rbp
   13427:	48 89 e5             	mov    %rsp,%rbp
   1342a:	48 83 ec 20          	sub    $0x20,%rsp
   1342e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13432:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13436:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1343a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1343e:	48 89 c7             	mov    %rax,%rdi
   13441:	e8 b8 01 00 00       	call   135fe <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>
   13446:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1344a:	0f 92 c0             	setb   %al
   1344d:	0f b6 c0             	movzbl %al,%eax
   13450:	48 85 c0             	test   %rax,%rax
   13453:	0f 95 c0             	setne  %al
   13456:	84 c0                	test   %al,%al
   13458:	74 1a                	je     13474 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1345a:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   13461:	66 66 06 
   13464:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   13468:	73 05                	jae    1346f <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1346a:	e8 d1 fd fe ff       	call   3240 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1346f:	e8 5c fc fe ff       	call   30d0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   13474:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13478:	48 89 d0             	mov    %rdx,%rax
   1347b:	48 c1 e0 02          	shl    $0x2,%rax
   1347f:	48 01 d0             	add    %rdx,%rax
   13482:	48 c1 e0 03          	shl    $0x3,%rax
   13486:	48 89 c7             	mov    %rax,%rdi
   13489:	e8 b2 fe fe ff       	call   3340 <_Znwm@plt>
   1348e:	90                   	nop
      }
   1348f:	c9                   	leave
   13490:	c3                   	ret
   13491:	90                   	nop

0000000000013492 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   13492:	55                   	push   %rbp
   13493:	48 89 e5             	mov    %rsp,%rbp
   13496:	53                   	push   %rbx
   13497:	48 83 ec 28          	sub    $0x28,%rsp
   1349b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1349f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   134a3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   134a7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   134ab:	48 89 c6             	mov    %rax,%rsi
   134ae:	bf 04 00 00 00       	mov    $0x4,%edi
   134b3:	e8 7f 52 ff ff       	call   8737 <_ZnwmPv>
   134b8:	48 89 c3             	mov    %rax,%rbx
   134bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   134bf:	48 89 c7             	mov    %rax,%rdi
   134c2:	e8 99 cb ff ff       	call   10060 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   134c7:	8b 00                	mov    (%rax),%eax
   134c9:	89 03                	mov    %eax,(%rbx)
   134cb:	90                   	nop
   134cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   134d0:	c9                   	leave
   134d1:	c3                   	ret

00000000000134d2 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   134d2:	55                   	push   %rbp
   134d3:	48 89 e5             	mov    %rsp,%rbp
   134d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   134da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   134de:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   134e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   134e6:	48 8b 00             	mov    (%rax),%rax
   134e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   134ed:	eb 10                	jmp    134ff <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   134ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134f3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   134f7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   134fa:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   134ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13503:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13507:	75 e6                	jne    134ef <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   13509:	90                   	nop
   1350a:	90                   	nop
   1350b:	5d                   	pop    %rbp
   1350c:	c3                   	ret

000000000001350d <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   1350d:	55                   	push   %rbp
   1350e:	48 89 e5             	mov    %rsp,%rbp
   13511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13515:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13519:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   1351d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13521:	48 8b 00             	mov    (%rax),%rax
   13524:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   13528:	eb 10                	jmp    1353a <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   1352a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1352e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13532:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   13535:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   1353a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1353e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   13542:	75 e6                	jne    1352a <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   13544:	90                   	nop
   13545:	90                   	nop
   13546:	5d                   	pop    %rbp
   13547:	c3                   	ret

0000000000013548 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
   13548:	55                   	push   %rbp
   13549:	48 89 e5             	mov    %rsp,%rbp
   1354c:	48 83 ec 30          	sub    $0x30,%rsp
   13550:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13554:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13558:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
   1355c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13560:	0f b6 00             	movzbl (%rax),%eax
   13563:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
   13566:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1356a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1356e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   13572:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13577:	74 19                	je     13592 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
   13579:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
   1357d:	0f b6 c8             	movzbl %al,%ecx
   13580:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13584:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13588:	89 ce                	mov    %ecx,%esi
   1358a:	48 89 c7             	mov    %rax,%rdi
   1358d:	e8 de fb fe ff       	call   3170 <memset@plt>
    }
   13592:	90                   	nop
   13593:	c9                   	leave
   13594:	c3                   	ret

0000000000013595 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   13595:	55                   	push   %rbp
   13596:	48 89 e5             	mov    %rsp,%rbp
   13599:	48 83 ec 20          	sub    $0x20,%rsp
   1359d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   135a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   135ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   135b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135b5:	48 89 ce             	mov    %rcx,%rsi
   135b8:	48 89 c7             	mov    %rax,%rdi
   135bb:	e8 52 00 00 00       	call   13612 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>
    }
   135c0:	c9                   	leave
   135c1:	c3                   	ret

00000000000135c2 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   135c2:	55                   	push   %rbp
   135c3:	48 89 e5             	mov    %rsp,%rbp
   135c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   135ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   135ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   135d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   135d6:	48 8b 00             	mov    (%rax),%rax
   135d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   135dd:	eb 10                	jmp    135ef <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   135df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   135e7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   135ea:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   135ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135f3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   135f7:	75 e6                	jne    135df <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   135f9:	90                   	nop
   135fa:	90                   	nop
   135fb:	5d                   	pop    %rbp
   135fc:	c3                   	ret
   135fd:	90                   	nop

00000000000135fe <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   135fe:	55                   	push   %rbp
   135ff:	48 89 e5             	mov    %rsp,%rbp
   13602:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   13606:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   1360d:	33 33 03 
      }
   13610:	5d                   	pop    %rbp
   13611:	c3                   	ret

0000000000013612 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   13612:	55                   	push   %rbp
   13613:	48 89 e5             	mov    %rsp,%rbp
   13616:	48 83 ec 30          	sub    $0x30,%rsp
   1361a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1361e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13622:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   13626:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1362a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1362e:	48 c1 f8 02          	sar    $0x2,%rax
   13632:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   13636:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1363b:	74 1f                	je     1365c <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   1363d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13641:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   13648:	00 
   13649:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1364d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13651:	48 89 ce             	mov    %rcx,%rsi
   13654:	48 89 c7             	mov    %rax,%rdi
   13657:	e8 f4 ff fe ff       	call   3650 <memmove@plt>
	  return __result + _Num;
   1365c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13660:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   13667:	00 
   13668:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1366c:	48 01 d0             	add    %rdx,%rax
	}
   1366f:	c9                   	leave
   13670:	c3                   	ret
   13671:	90                   	nop

0000000000013672 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   13672:	55                   	push   %rbp
   13673:	48 89 e5             	mov    %rsp,%rbp
   13676:	48 83 ec 10          	sub    $0x10,%rsp
   1367a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1367e:	48 8d 15 4b d6 00 00 	lea    0xd64b(%rip),%rdx        # 20cd0 <_ZTVSt19bad_optional_access+0x10>
   13685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13689:	48 89 10             	mov    %rdx,(%rax)
   1368c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13690:	48 89 c7             	mov    %rax,%rdi
   13693:	e8 58 00 ff ff       	call   36f0 <_ZNSt9exceptionD2Ev@plt>
   13698:	90                   	nop
   13699:	c9                   	leave
   1369a:	c3                   	ret
   1369b:	90                   	nop

000000000001369c <_ZNSt19bad_optional_accessD0Ev>:
   1369c:	55                   	push   %rbp
   1369d:	48 89 e5             	mov    %rsp,%rbp
   136a0:	48 83 ec 10          	sub    $0x10,%rsp
   136a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136ac:	48 89 c7             	mov    %rax,%rdi
   136af:	e8 be ff ff ff       	call   13672 <_ZNSt19bad_optional_accessD1Ev>
   136b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136b8:	be 08 00 00 00       	mov    $0x8,%esi
   136bd:	48 89 c7             	mov    %rax,%rdi
   136c0:	e8 9b fc fe ff       	call   3360 <_ZdlPvm@plt>
   136c5:	c9                   	leave
   136c6:	c3                   	ret

Disassembly of section .fini:

00000000000136c8 <_fini>:
   136c8:	48 83 ec 08          	sub    $0x8,%rsp
   136cc:	48 83 c4 08          	add    $0x8,%rsp
   136d0:	c3                   	ret
