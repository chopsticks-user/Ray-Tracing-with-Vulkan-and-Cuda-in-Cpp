
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 5f 02 00 	mov    0x25fad(%rip),%rax        # 29fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 5f 02 00    	push   0x25fca(%rip)        # 29ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 5f 02 00    	jmp    *0x25fcc(%rip)        # 29ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 5f 02 00    	jmp    *0x25fca(%rip)        # 2a000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <vkCmdEndRenderPass@plt>:
    4040:	ff 25 c2 5f 02 00    	jmp    *0x25fc2(%rip)        # 2a008 <vkCmdEndRenderPass@Base>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 5f 02 00    	jmp    *0x25fba(%rip)        # 2a010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 5f 02 00    	jmp    *0x25fb2(%rip)        # 2a018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 5f 02 00    	jmp    *0x25faa(%rip)        # 2a020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <vkGetBufferMemoryRequirements@plt>:
    4080:	ff 25 a2 5f 02 00    	jmp    *0x25fa2(%rip)        # 2a028 <vkGetBufferMemoryRequirements@Base>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 5f 02 00    	jmp    *0x25f9a(%rip)        # 2a030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 5f 02 00    	jmp    *0x25f92(%rip)        # 2a038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 5f 02 00    	jmp    *0x25f8a(%rip)        # 2a040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 5f 02 00    	jmp    *0x25f82(%rip)        # 2a048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <vkDestroySemaphore@plt>:
    40d0:	ff 25 7a 5f 02 00    	jmp    *0x25f7a(%rip)        # 2a050 <vkDestroySemaphore@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <glfwDestroyWindow@plt>:
    40e0:	ff 25 72 5f 02 00    	jmp    *0x25f72(%rip)        # 2a058 <glfwDestroyWindow@Base>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZSt17__throw_bad_allocv@plt>:
    40f0:	ff 25 6a 5f 02 00    	jmp    *0x25f6a(%rip)        # 2a060 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 5f 02 00    	jmp    *0x25f62(%rip)        # 2a068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 5f 02 00    	jmp    *0x25f5a(%rip)        # 2a070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <vkCmdDrawIndexed@plt>:
    4120:	ff 25 52 5f 02 00    	jmp    *0x25f52(%rip)        # 2a078 <vkCmdDrawIndexed@Base>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <__cxa_begin_catch@plt>:
    4130:	ff 25 4a 5f 02 00    	jmp    *0x25f4a(%rip)        # 2a080 <__cxa_begin_catch@CXXABI_1.3>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <vkAcquireNextImageKHR@plt>:
    4140:	ff 25 42 5f 02 00    	jmp    *0x25f42(%rip)        # 2a088 <vkAcquireNextImageKHR@Base>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <vkCreateCommandPool@plt>:
    4150:	ff 25 3a 5f 02 00    	jmp    *0x25f3a(%rip)        # 2a090 <vkCreateCommandPool@Base>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <strlen@plt>:
    4160:	ff 25 32 5f 02 00    	jmp    *0x25f32(%rip)        # 2a098 <strlen@GLIBC_2.2.5>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <vkCreateGraphicsPipelines@plt>:
    4170:	ff 25 2a 5f 02 00    	jmp    *0x25f2a(%rip)        # 2a0a0 <vkCreateGraphicsPipelines@Base>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <__cxa_allocate_exception@plt>:
    4180:	ff 25 22 5f 02 00    	jmp    *0x25f22(%rip)        # 2a0a8 <__cxa_allocate_exception@CXXABI_1.3>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkDestroyBuffer@plt>:
    4190:	ff 25 1a 5f 02 00    	jmp    *0x25f1a(%rip)        # 2a0b0 <vkDestroyBuffer@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <glfwSetWindowUserPointer@plt>:
    41a0:	ff 25 12 5f 02 00    	jmp    *0x25f12(%rip)        # 2a0b8 <glfwSetWindowUserPointer@Base>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZSt20__throw_length_errorPKc@plt>:
    41b0:	ff 25 0a 5f 02 00    	jmp    *0x25f0a(%rip)        # 2a0c0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkEnumeratePhysicalDevices@plt>:
    41c0:	ff 25 02 5f 02 00    	jmp    *0x25f02(%rip)        # 2a0c8 <vkEnumeratePhysicalDevices@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <memset@plt>:
    41d0:	ff 25 fa 5e 02 00    	jmp    *0x25efa(%rip)        # 2a0d0 <memset@GLIBC_2.2.5>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSaIcEC1ERKS_@plt>:
    41e0:	ff 25 f2 5e 02 00    	jmp    *0x25ef2(%rip)        # 2a0d8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkWaitForFences@plt>:
    41f0:	ff 25 ea 5e 02 00    	jmp    *0x25eea(%rip)        # 2a0e0 <vkWaitForFences@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <glfwWaitEvents@plt>:
    4200:	ff 25 e2 5e 02 00    	jmp    *0x25ee2(%rip)        # 2a0e8 <glfwWaitEvents@Base>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <vkGetSwapchainImagesKHR@plt>:
    4210:	ff 25 da 5e 02 00    	jmp    *0x25eda(%rip)        # 2a0f0 <vkGetSwapchainImagesKHR@Base>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>:
    4220:	ff 25 d2 5e 02 00    	jmp    *0x25ed2(%rip)        # 2a0f8 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    4230:	ff 25 ca 5e 02 00    	jmp    *0x25eca(%rip)        # 2a100 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <vkCreateRenderPass@plt>:
    4240:	ff 25 c2 5e 02 00    	jmp    *0x25ec2(%rip)        # 2a108 <vkCreateRenderPass@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4250:	ff 25 ba 5e 02 00    	jmp    *0x25eba(%rip)        # 2a110 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4260:	ff 25 b2 5e 02 00    	jmp    *0x25eb2(%rip)        # 2a118 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt19__throw_logic_errorPKc@plt>:
    4270:	ff 25 aa 5e 02 00    	jmp    *0x25eaa(%rip)        # 2a120 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <__cxa_free_exception@plt>:
    4280:	ff 25 a2 5e 02 00    	jmp    *0x25ea2(%rip)        # 2a128 <__cxa_free_exception@CXXABI_1.3>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkFreeCommandBuffers@plt>:
    4290:	ff 25 9a 5e 02 00    	jmp    *0x25e9a(%rip)        # 2a130 <vkFreeCommandBuffers@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    42a0:	ff 25 92 5e 02 00    	jmp    *0x25e92(%rip)        # 2a138 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <glfwGetRequiredInstanceExtensions@plt>:
    42b0:	ff 25 8a 5e 02 00    	jmp    *0x25e8a(%rip)        # 2a140 <glfwGetRequiredInstanceExtensions@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    42c0:	ff 25 82 5e 02 00    	jmp    *0x25e82(%rip)        # 2a148 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <vkCreateShaderModule@plt>:
    42d0:	ff 25 7a 5e 02 00    	jmp    *0x25e7a(%rip)        # 2a150 <vkCreateShaderModule@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    42e0:	ff 25 72 5e 02 00    	jmp    *0x25e72(%rip)        # 2a158 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkUnmapMemory@plt>:
    42f0:	ff 25 6a 5e 02 00    	jmp    *0x25e6a(%rip)        # 2a160 <vkUnmapMemory@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <memcpy@plt>:
    4300:	ff 25 62 5e 02 00    	jmp    *0x25e62(%rip)        # 2a168 <memcpy@GLIBC_2.14>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkDestroyDevice@plt>:
    4310:	ff 25 5a 5e 02 00    	jmp    *0x25e5a(%rip)        # 2a170 <vkDestroyDevice@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkCreatePipelineLayout@plt>:
    4320:	ff 25 52 5e 02 00    	jmp    *0x25e52(%rip)        # 2a178 <vkCreatePipelineLayout@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkEnumerateInstanceExtensionProperties@plt>:
    4330:	ff 25 4a 5e 02 00    	jmp    *0x25e4a(%rip)        # 2a180 <vkEnumerateInstanceExtensionProperties@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    4340:	ff 25 42 5e 02 00    	jmp    *0x25e42(%rip)        # 2a188 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwWindowHint@plt>:
    4350:	ff 25 3a 5e 02 00    	jmp    *0x25e3a(%rip)        # 2a190 <glfwWindowHint@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    4360:	ff 25 32 5e 02 00    	jmp    *0x25e32(%rip)        # 2a198 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <vkCmdBindPipeline@plt>:
    4370:	ff 25 2a 5e 02 00    	jmp    *0x25e2a(%rip)        # 2a1a0 <vkCmdBindPipeline@Base>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <__cxa_atexit@plt>:
    4380:	ff 25 22 5e 02 00    	jmp    *0x25e22(%rip)        # 2a1a8 <__cxa_atexit@GLIBC_2.2.5>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <vkMapMemory@plt>:
    4390:	ff 25 1a 5e 02 00    	jmp    *0x25e1a(%rip)        # 2a1b0 <vkMapMemory@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkFreeMemory@plt>:
    43a0:	ff 25 12 5e 02 00    	jmp    *0x25e12(%rip)        # 2a1b8 <vkFreeMemory@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <vkAllocateCommandBuffers@plt>:
    43b0:	ff 25 0a 5e 02 00    	jmp    *0x25e0a(%rip)        # 2a1c0 <vkAllocateCommandBuffers@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkGetPhysicalDeviceProperties2@plt>:
    43c0:	ff 25 02 5e 02 00    	jmp    *0x25e02(%rip)        # 2a1c8 <vkGetPhysicalDeviceProperties2@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <vkGetInstanceProcAddr@plt>:
    43d0:	ff 25 fa 5d 02 00    	jmp    *0x25dfa(%rip)        # 2a1d0 <vkGetInstanceProcAddr@Base>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <glfwPollEvents@plt>:
    43e0:	ff 25 f2 5d 02 00    	jmp    *0x25df2(%rip)        # 2a1d8 <glfwPollEvents@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <vkDestroyRenderPass@plt>:
    43f0:	ff 25 ea 5d 02 00    	jmp    *0x25dea(%rip)        # 2a1e0 <vkDestroyRenderPass@Base>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkCreateBuffer@plt>:
    4400:	ff 25 e2 5d 02 00    	jmp    *0x25de2(%rip)        # 2a1e8 <vkCreateBuffer@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4410:	ff 25 da 5d 02 00    	jmp    *0x25dda(%rip)        # 2a1f0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_Znwm@plt>:
    4420:	ff 25 d2 5d 02 00    	jmp    *0x25dd2(%rip)        # 2a1f8 <_Znwm@GLIBCXX_3.4>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkBeginCommandBuffer@plt>:
    4430:	ff 25 ca 5d 02 00    	jmp    *0x25dca(%rip)        # 2a200 <vkBeginCommandBuffer@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZdlPvm@plt>:
    4440:	ff 25 c2 5d 02 00    	jmp    *0x25dc2(%rip)        # 2a208 <_ZdlPvm@CXXABI_1.3.9>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <vkDestroyInstance@plt>:
    4450:	ff 25 ba 5d 02 00    	jmp    *0x25dba(%rip)        # 2a210 <vkDestroyInstance@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <glfwTerminate@plt>:
    4460:	ff 25 b2 5d 02 00    	jmp    *0x25db2(%rip)        # 2a218 <glfwTerminate@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <vkCreateImageView@plt>:
    4470:	ff 25 aa 5d 02 00    	jmp    *0x25daa(%rip)        # 2a220 <vkCreateImageView@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    4480:	ff 25 a2 5d 02 00    	jmp    *0x25da2(%rip)        # 2a228 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <_ZNSolsEPFRSoS_E@plt>:
    4490:	ff 25 9a 5d 02 00    	jmp    *0x25d9a(%rip)        # 2a230 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    44a0:	ff 25 92 5d 02 00    	jmp    *0x25d92(%rip)        # 2a238 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    44b0:	ff 25 8a 5d 02 00    	jmp    *0x25d8a(%rip)        # 2a240 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <_ZNSaIcED1Ev@plt>:
    44c0:	ff 25 82 5d 02 00    	jmp    *0x25d82(%rip)        # 2a248 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <vkDestroyFence@plt>:
    44d0:	ff 25 7a 5d 02 00    	jmp    *0x25d7a(%rip)        # 2a250 <vkDestroyFence@Base>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyPipeline@plt>:
    44e0:	ff 25 72 5d 02 00    	jmp    *0x25d72(%rip)        # 2a258 <vkDestroyPipeline@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    44f0:	ff 25 6a 5d 02 00    	jmp    *0x25d6a(%rip)        # 2a260 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4500:	ff 25 62 5d 02 00    	jmp    *0x25d62(%rip)        # 2a268 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkEnumerateInstanceLayerProperties@plt>:
    4510:	ff 25 5a 5d 02 00    	jmp    *0x25d5a(%rip)        # 2a270 <vkEnumerateInstanceLayerProperties@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <glfwInit@plt>:
    4520:	ff 25 52 5d 02 00    	jmp    *0x25d52(%rip)        # 2a278 <glfwInit@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>:
    4530:	ff 25 4a 5d 02 00    	jmp    *0x25d4a(%rip)        # 2a280 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4540:	ff 25 42 5d 02 00    	jmp    *0x25d42(%rip)        # 2a288 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <vkBindBufferMemory@plt>:
    4550:	ff 25 3a 5d 02 00    	jmp    *0x25d3a(%rip)        # 2a290 <vkBindBufferMemory@Base>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkCreateSwapchainKHR@plt>:
    4560:	ff 25 32 5d 02 00    	jmp    *0x25d32(%rip)        # 2a298 <vkCreateSwapchainKHR@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <vkDestroyShaderModule@plt>:
    4570:	ff 25 2a 5d 02 00    	jmp    *0x25d2a(%rip)        # 2a2a0 <vkDestroyShaderModule@Base>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkCreateInstance@plt>:
    4580:	ff 25 22 5d 02 00    	jmp    *0x25d22(%rip)        # 2a2a8 <vkCreateInstance@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    4590:	ff 25 1a 5d 02 00    	jmp    *0x25d1a(%rip)        # 2a2b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkCreateFence@plt>:
    45a0:	ff 25 12 5d 02 00    	jmp    *0x25d12(%rip)        # 2a2b8 <vkCreateFence@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkResetCommandBuffer@plt>:
    45b0:	ff 25 0a 5d 02 00    	jmp    *0x25d0a(%rip)        # 2a2c0 <vkResetCommandBuffer@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <vkDestroyPipelineLayout@plt>:
    45c0:	ff 25 02 5d 02 00    	jmp    *0x25d02(%rip)        # 2a2c8 <vkDestroyPipelineLayout@Base>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <_ZNSi4readEPcl@plt>:
    45d0:	ff 25 fa 5c 02 00    	jmp    *0x25cfa(%rip)        # 2a2d0 <_ZNSi4readEPcl@GLIBCXX_3.4>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    45e0:	ff 25 f2 5c 02 00    	jmp    *0x25cf2(%rip)        # 2a2d8 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    45f0:	ff 25 ea 5c 02 00    	jmp    *0x25cea(%rip)        # 2a2e0 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4600:	ff 25 e2 5c 02 00    	jmp    *0x25ce2(%rip)        # 2a2e8 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <vkQueueSubmit@plt>:
    4610:	ff 25 da 5c 02 00    	jmp    *0x25cda(%rip)        # 2a2f0 <vkQueueSubmit@Base>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4620:	ff 25 d2 5c 02 00    	jmp    *0x25cd2(%rip)        # 2a2f8 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <vkGetDeviceQueue@plt>:
    4630:	ff 25 ca 5c 02 00    	jmp    *0x25cca(%rip)        # 2a300 <vkGetDeviceQueue@Base>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSolsEj@plt>:
    4640:	ff 25 c2 5c 02 00    	jmp    *0x25cc2(%rip)        # 2a308 <_ZNSolsEj@GLIBCXX_3.4>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <vkCreateFramebuffer@plt>:
    4650:	ff 25 ba 5c 02 00    	jmp    *0x25cba(%rip)        # 2a310 <vkCreateFramebuffer@Base>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <glfwGetWindowUserPointer@plt>:
    4660:	ff 25 b2 5c 02 00    	jmp    *0x25cb2(%rip)        # 2a318 <glfwGetWindowUserPointer@Base>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4670:	ff 25 aa 5c 02 00    	jmp    *0x25caa(%rip)        # 2a320 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <vkEnumerateDeviceExtensionProperties@plt>:
    4680:	ff 25 a2 5c 02 00    	jmp    *0x25ca2(%rip)        # 2a328 <vkEnumerateDeviceExtensionProperties@Base>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4690:	ff 25 9a 5c 02 00    	jmp    *0x25c9a(%rip)        # 2a330 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <vkCreateSemaphore@plt>:
    46a0:	ff 25 92 5c 02 00    	jmp    *0x25c92(%rip)        # 2a338 <vkCreateSemaphore@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <vkCmdBeginRenderPass@plt>:
    46b0:	ff 25 8a 5c 02 00    	jmp    *0x25c8a(%rip)        # 2a340 <vkCmdBeginRenderPass@Base>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <vkDestroyCommandPool@plt>:
    46c0:	ff 25 82 5c 02 00    	jmp    *0x25c82(%rip)        # 2a348 <vkDestroyCommandPool@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <strcmp@plt>:
    46d0:	ff 25 7a 5c 02 00    	jmp    *0x25c7a(%rip)        # 2a350 <strcmp@GLIBC_2.2.5>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <vkCmdBindIndexBuffer@plt>:
    46e0:	ff 25 72 5c 02 00    	jmp    *0x25c72(%rip)        # 2a358 <vkCmdBindIndexBuffer@Base>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkCmdBindVertexBuffers@plt>:
    46f0:	ff 25 6a 5c 02 00    	jmp    *0x25c6a(%rip)        # 2a360 <vkCmdBindVertexBuffers@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSaIcEC2ERKS_@plt>:
    4700:	ff 25 62 5c 02 00    	jmp    *0x25c62(%rip)        # 2a368 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <vkCmdCopyBuffer@plt>:
    4710:	ff 25 5a 5c 02 00    	jmp    *0x25c5a(%rip)        # 2a370 <vkCmdCopyBuffer@Base>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <__cxa_rethrow@plt>:
    4720:	ff 25 52 5c 02 00    	jmp    *0x25c52(%rip)        # 2a378 <__cxa_rethrow@CXXABI_1.3>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <vkCreateDevice@plt>:
    4730:	ff 25 4a 5c 02 00    	jmp    *0x25c4a(%rip)        # 2a380 <vkCreateDevice@Base>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <glfwSetFramebufferSizeCallback@plt>:
    4740:	ff 25 42 5c 02 00    	jmp    *0x25c42(%rip)        # 2a388 <glfwSetFramebufferSizeCallback@Base>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSt8ios_base4InitC1Ev@plt>:
    4750:	ff 25 3a 5c 02 00    	jmp    *0x25c3a(%rip)        # 2a390 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004760 <glfwCreateWindowSurface@plt>:
    4760:	ff 25 32 5c 02 00    	jmp    *0x25c32(%rip)        # 2a398 <glfwCreateWindowSurface@Base>
    4766:	68 73 00 00 00       	push   $0x73
    476b:	e9 b0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004770 <vkResetFences@plt>:
    4770:	ff 25 2a 5c 02 00    	jmp    *0x25c2a(%rip)        # 2a3a0 <vkResetFences@Base>
    4776:	68 74 00 00 00       	push   $0x74
    477b:	e9 a0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004780 <glfwCreateWindow@plt>:
    4780:	ff 25 22 5c 02 00    	jmp    *0x25c22(%rip)        # 2a3a8 <glfwCreateWindow@Base>
    4786:	68 75 00 00 00       	push   $0x75
    478b:	e9 90 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004790 <vkQueuePresentKHR@plt>:
    4790:	ff 25 1a 5c 02 00    	jmp    *0x25c1a(%rip)        # 2a3b0 <vkQueuePresentKHR@Base>
    4796:	68 76 00 00 00       	push   $0x76
    479b:	e9 80 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047a0 <vkGetPhysicalDeviceMemoryProperties@plt>:
    47a0:	ff 25 12 5c 02 00    	jmp    *0x25c12(%rip)        # 2a3b8 <vkGetPhysicalDeviceMemoryProperties@Base>
    47a6:	68 77 00 00 00       	push   $0x77
    47ab:	e9 70 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047b0 <glfwGetFramebufferSize@plt>:
    47b0:	ff 25 0a 5c 02 00    	jmp    *0x25c0a(%rip)        # 2a3c0 <glfwGetFramebufferSize@Base>
    47b6:	68 78 00 00 00       	push   $0x78
    47bb:	e9 60 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    47c0:	ff 25 02 5c 02 00    	jmp    *0x25c02(%rip)        # 2a3c8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    47c6:	68 79 00 00 00       	push   $0x79
    47cb:	e9 50 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    47d0:	ff 25 fa 5b 02 00    	jmp    *0x25bfa(%rip)        # 2a3d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    47d6:	68 7a 00 00 00       	push   $0x7a
    47db:	e9 40 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047e0 <memmove@plt>:
    47e0:	ff 25 f2 5b 02 00    	jmp    *0x25bf2(%rip)        # 2a3d8 <memmove@GLIBC_2.2.5>
    47e6:	68 7b 00 00 00       	push   $0x7b
    47eb:	e9 30 f8 ff ff       	jmp    4020 <_init+0x20>

00000000000047f0 <__cxa_end_catch@plt>:
    47f0:	ff 25 ea 5b 02 00    	jmp    *0x25bea(%rip)        # 2a3e0 <__cxa_end_catch@CXXABI_1.3>
    47f6:	68 7c 00 00 00       	push   $0x7c
    47fb:	e9 20 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004800 <vkAllocateMemory@plt>:
    4800:	ff 25 e2 5b 02 00    	jmp    *0x25be2(%rip)        # 2a3e8 <vkAllocateMemory@Base>
    4806:	68 7d 00 00 00       	push   $0x7d
    480b:	e9 10 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004810 <vkDestroyFramebuffer@plt>:
    4810:	ff 25 da 5b 02 00    	jmp    *0x25bda(%rip)        # 2a3f0 <vkDestroyFramebuffer@Base>
    4816:	68 7e 00 00 00       	push   $0x7e
    481b:	e9 00 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004820 <__cxa_throw@plt>:
    4820:	ff 25 d2 5b 02 00    	jmp    *0x25bd2(%rip)        # 2a3f8 <__cxa_throw@CXXABI_1.3>
    4826:	68 7f 00 00 00       	push   $0x7f
    482b:	e9 f0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004830 <_ZNSolsEi@plt>:
    4830:	ff 25 ca 5b 02 00    	jmp    *0x25bca(%rip)        # 2a400 <_ZNSolsEi@GLIBCXX_3.4>
    4836:	68 80 00 00 00       	push   $0x80
    483b:	e9 e0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004840 <_ZNSi5tellgEv@plt>:
    4840:	ff 25 c2 5b 02 00    	jmp    *0x25bc2(%rip)        # 2a408 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4846:	68 81 00 00 00       	push   $0x81
    484b:	e9 d0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004850 <vkQueueWaitIdle@plt>:
    4850:	ff 25 ba 5b 02 00    	jmp    *0x25bba(%rip)        # 2a410 <vkQueueWaitIdle@Base>
    4856:	68 82 00 00 00       	push   $0x82
    485b:	e9 c0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004860 <vkDestroySurfaceKHR@plt>:
    4860:	ff 25 b2 5b 02 00    	jmp    *0x25bb2(%rip)        # 2a418 <vkDestroySurfaceKHR@Base>
    4866:	68 83 00 00 00       	push   $0x83
    486b:	e9 b0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004870 <_Unwind_Resume@plt>:
    4870:	ff 25 aa 5b 02 00    	jmp    *0x25baa(%rip)        # 2a420 <_Unwind_Resume@GCC_3.0>
    4876:	68 84 00 00 00       	push   $0x84
    487b:	e9 a0 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004880 <_ZNSaIcEC1Ev@plt>:
    4880:	ff 25 a2 5b 02 00    	jmp    *0x25ba2(%rip)        # 2a428 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    4886:	68 85 00 00 00       	push   $0x85
    488b:	e9 90 f7 ff ff       	jmp    4020 <_init+0x20>

0000000000004890 <vkDestroyImageView@plt>:
    4890:	ff 25 9a 5b 02 00    	jmp    *0x25b9a(%rip)        # 2a430 <vkDestroyImageView@Base>
    4896:	68 86 00 00 00       	push   $0x86
    489b:	e9 80 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    48a0:	ff 25 92 5b 02 00    	jmp    *0x25b92(%rip)        # 2a438 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    48a6:	68 87 00 00 00       	push   $0x87
    48ab:	e9 70 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048b0 <_ZNSt9exceptionD2Ev@plt>:
    48b0:	ff 25 8a 5b 02 00    	jmp    *0x25b8a(%rip)        # 2a440 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    48b6:	68 88 00 00 00       	push   $0x88
    48bb:	e9 60 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048c0 <glfwWindowShouldClose@plt>:
    48c0:	ff 25 82 5b 02 00    	jmp    *0x25b82(%rip)        # 2a448 <glfwWindowShouldClose@Base>
    48c6:	68 89 00 00 00       	push   $0x89
    48cb:	e9 50 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048d0 <_ZNSolsEd@plt>:
    48d0:	ff 25 7a 5b 02 00    	jmp    *0x25b7a(%rip)        # 2a450 <_ZNSolsEd@GLIBCXX_3.4>
    48d6:	68 8a 00 00 00       	push   $0x8a
    48db:	e9 40 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048e0 <vkEndCommandBuffer@plt>:
    48e0:	ff 25 72 5b 02 00    	jmp    *0x25b72(%rip)        # 2a458 <vkEndCommandBuffer@Base>
    48e6:	68 8b 00 00 00       	push   $0x8b
    48eb:	e9 30 f7 ff ff       	jmp    4020 <_init+0x20>

00000000000048f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    48f0:	ff 25 6a 5b 02 00    	jmp    *0x25b6a(%rip)        # 2a460 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    48f6:	68 8c 00 00 00       	push   $0x8c
    48fb:	e9 20 f7 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004900 <__cxa_finalize@plt>:
    4900:	ff 25 8a 56 02 00    	jmp    *0x2568a(%rip)        # 29f90 <__cxa_finalize@GLIBC_2.2.5>
    4906:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004910 <_start>:
    4910:	31 ed                	xor    %ebp,%ebp
    4912:	49 89 d1             	mov    %rdx,%r9
    4915:	5e                   	pop    %rsi
    4916:	48 89 e2             	mov    %rsp,%rdx
    4919:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    491d:	50                   	push   %rax
    491e:	54                   	push   %rsp
    491f:	45 31 c0             	xor    %r8d,%r8d
    4922:	31 c9                	xor    %ecx,%ecx
    4924:	48 8d 3d 74 06 00 00 	lea    0x674(%rip),%rdi        # 4f9f <main>
    492b:	ff 15 6f 56 02 00    	call   *0x2566f(%rip)        # 29fa0 <__libc_start_main@GLIBC_2.34>
    4931:	f4                   	hlt
    4932:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4939:	00 00 00 
    493c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004940 <deregister_tm_clones>:
    4940:	48 8d 3d 41 5b 02 00 	lea    0x25b41(%rip),%rdi        # 2a488 <__TMC_END__>
    4947:	48 8d 05 3a 5b 02 00 	lea    0x25b3a(%rip),%rax        # 2a488 <__TMC_END__>
    494e:	48 39 f8             	cmp    %rdi,%rax
    4951:	74 15                	je     4968 <deregister_tm_clones+0x28>
    4953:	48 8b 05 56 56 02 00 	mov    0x25656(%rip),%rax        # 29fb0 <_ITM_deregisterTMCloneTable@Base>
    495a:	48 85 c0             	test   %rax,%rax
    495d:	74 09                	je     4968 <deregister_tm_clones+0x28>
    495f:	ff e0                	jmp    *%rax
    4961:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4968:	c3                   	ret
    4969:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004970 <register_tm_clones>:
    4970:	48 8d 3d 11 5b 02 00 	lea    0x25b11(%rip),%rdi        # 2a488 <__TMC_END__>
    4977:	48 8d 35 0a 5b 02 00 	lea    0x25b0a(%rip),%rsi        # 2a488 <__TMC_END__>
    497e:	48 29 fe             	sub    %rdi,%rsi
    4981:	48 89 f0             	mov    %rsi,%rax
    4984:	48 c1 ee 3f          	shr    $0x3f,%rsi
    4988:	48 c1 f8 03          	sar    $0x3,%rax
    498c:	48 01 c6             	add    %rax,%rsi
    498f:	48 d1 fe             	sar    %rsi
    4992:	74 14                	je     49a8 <register_tm_clones+0x38>
    4994:	48 8b 05 25 56 02 00 	mov    0x25625(%rip),%rax        # 29fc0 <_ITM_registerTMCloneTable@Base>
    499b:	48 85 c0             	test   %rax,%rax
    499e:	74 08                	je     49a8 <register_tm_clones+0x38>
    49a0:	ff e0                	jmp    *%rax
    49a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    49a8:	c3                   	ret
    49a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000049b0 <__do_global_dtors_aux>:
    49b0:	f3 0f 1e fa          	endbr64
    49b4:	80 3d 35 5d 02 00 00 	cmpb   $0x0,0x25d35(%rip)        # 2a6f0 <completed.0>
    49bb:	75 2b                	jne    49e8 <__do_global_dtors_aux+0x38>
    49bd:	55                   	push   %rbp
    49be:	48 83 3d ca 55 02 00 	cmpq   $0x0,0x255ca(%rip)        # 29f90 <__cxa_finalize@GLIBC_2.2.5>
    49c5:	00 
    49c6:	48 89 e5             	mov    %rsp,%rbp
    49c9:	74 0c                	je     49d7 <__do_global_dtors_aux+0x27>
    49cb:	48 8b 3d 9e 5a 02 00 	mov    0x25a9e(%rip),%rdi        # 2a470 <__dso_handle>
    49d2:	e8 29 ff ff ff       	call   4900 <__cxa_finalize@plt>
    49d7:	e8 64 ff ff ff       	call   4940 <deregister_tm_clones>
    49dc:	c6 05 0d 5d 02 00 01 	movb   $0x1,0x25d0d(%rip)        # 2a6f0 <completed.0>
    49e3:	5d                   	pop    %rbp
    49e4:	c3                   	ret
    49e5:	0f 1f 00             	nopl   (%rax)
    49e8:	c3                   	ret
    49e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000049f0 <frame_dummy>:
    49f0:	f3 0f 1e fa          	endbr64
    49f4:	e9 77 ff ff ff       	jmp    4970 <register_tm_clones>

00000000000049f9 <_ZN3vkh19makeApplicationInfoEPKc>:
 *
 * @param pApplicationName
 * @return VkApplicationInfo
 */
VkApplicationInfo
makeApplicationInfo(const char *pApplicationName = "Vulkan Application") {
    49f9:	55                   	push   %rbp
    49fa:	48 89 e5             	mov    %rsp,%rbp
    49fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4a01:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkApplicationInfo appInfo{};
    4a05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a09:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4a0d:	0f 11 00             	movups %xmm0,(%rax)
    4a10:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4a14:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    4a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a1c:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  appInfo.pApplicationName = pApplicationName;
    4a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4a2a:	48 89 50 10          	mov    %rdx,0x10(%rax)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    4a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a32:	c7 40 18 00 00 40 00 	movl   $0x400000,0x18(%rax)
  appInfo.pEngineName = "No Engine";
    4a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a3d:	48 8d 15 a4 5b 01 00 	lea    0x15ba4(%rip),%rdx        # 1a5e8 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    4a44:	48 89 50 20          	mov    %rdx,0x20(%rax)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    4a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a4c:	c7 40 28 00 00 40 00 	movl   $0x400000,0x28(%rax)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    4a53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a57:	c7 40 2c 00 30 40 00 	movl   $0x403000,0x2c(%rax)
  return appInfo;
    4a5e:	90                   	nop
}
    4a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a63:	5d                   	pop    %rbp
    4a64:	c3                   	ret

0000000000004a65 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>:
 */
VkInstanceCreateInfo
makeInstanceCreateInfo(const VkApplicationInfo *appInfo,
                       uint32_t enabledLayerCount = 0,
                       const char *const *ppEnabledLayerNames = nullptr,
                       const void *pNext = nullptr) {
    4a65:	55                   	push   %rbp
    4a66:	48 89 e5             	mov    %rsp,%rbp
    4a69:	48 83 ec 40          	sub    $0x40,%rsp
    4a6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4a71:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4a75:	89 55 dc             	mov    %edx,-0x24(%rbp)
    4a78:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    4a7c:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
  VkInstanceCreateInfo createInfo{};
    4a80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a84:	66 0f ef c0          	pxor   %xmm0,%xmm0
    4a88:	0f 11 00             	movups %xmm0,(%rax)
    4a8b:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    4a8f:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4a93:	0f 11 40 30          	movups %xmm0,0x30(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    4a97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4a9b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  createInfo.pNext = pNext;
    4aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4aa5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4aa9:	48 89 50 08          	mov    %rdx,0x8(%rax)
  createInfo.pApplicationInfo = appInfo;
    4aad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ab1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ab5:	48 89 50 18          	mov    %rdx,0x18(%rax)
  createInfo.enabledLayerCount = enabledLayerCount;
    4ab9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4abd:	8b 55 dc             	mov    -0x24(%rbp),%edx
    4ac0:	89 50 20             	mov    %edx,0x20(%rax)
  createInfo.ppEnabledLayerNames = ppEnabledLayerNames;
    4ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ac7:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4acb:	48 89 50 28          	mov    %rdx,0x28(%rax)

  createInfo.enabledLayerCount = 0;
    4acf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ad3:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
  createInfo.ppEnabledLayerNames = nullptr;
    4ada:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ade:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    4ae5:	00 

  uint32_t glfwExtensionCount;
  const char **glfwExtensions;
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    4ae6:	48 8d 45 f4          	lea    -0xc(%rbp),%rax
    4aea:	48 89 c7             	mov    %rax,%rdi
    4aed:	e8 be f7 ff ff       	call   42b0 <glfwGetRequiredInstanceExtensions@plt>
    4af2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  createInfo.enabledExtensionCount = glfwExtensionCount;
    4af6:	8b 55 f4             	mov    -0xc(%rbp),%edx
    4af9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4afd:	89 50 30             	mov    %edx,0x30(%rax)
  createInfo.ppEnabledExtensionNames = glfwExtensions;
    4b00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b04:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    4b08:	48 89 50 38          	mov    %rdx,0x38(%rax)
  return createInfo;
    4b0c:	90                   	nop
}
    4b0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b11:	c9                   	leave
    4b12:	c3                   	ret

0000000000004b13 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:
 * @param pCreateInfo
 * @param pAllocator
 * @return VkInstance
 */
VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator = nullptr) {
    4b13:	55                   	push   %rbp
    4b14:	48 89 e5             	mov    %rsp,%rbp
    4b17:	41 54                	push   %r12
    4b19:	53                   	push   %rbx
    4b1a:	48 83 ec 20          	sub    $0x20,%rsp
    4b1e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b22:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    4b26:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    4b2a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4b2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b32:	48 89 ce             	mov    %rcx,%rsi
    4b35:	48 89 c7             	mov    %rax,%rdi
    4b38:	e8 43 fa ff ff       	call   4580 <vkCreateInstance@plt>
    4b3d:	85 c0                	test   %eax,%eax
    4b3f:	0f 95 c0             	setne  %al
    4b42:	84 c0                	test   %al,%al
    4b44:	74 3b                	je     4b81 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    4b46:	bf 10 00 00 00       	mov    $0x10,%edi
    4b4b:	e8 30 f6 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4b50:	48 89 c3             	mov    %rax,%rbx
    4b53:	48 8d 05 98 5a 01 00 	lea    0x15a98(%rip),%rax        # 1a5f2 <_ZN6__pstl9execution2v1L5unseqE+0xb>
    4b5a:	48 89 c6             	mov    %rax,%rsi
    4b5d:	48 89 df             	mov    %rbx,%rdi
    4b60:	e8 9b f5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4b65:	48 8b 05 3c 54 02 00 	mov    0x2543c(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4b6c:	48 89 c2             	mov    %rax,%rdx
    4b6f:	48 8d 05 ca 51 02 00 	lea    0x251ca(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4b76:	48 89 c6             	mov    %rax,%rsi
    4b79:	48 89 df             	mov    %rbx,%rdi
    4b7c:	e8 9f fc ff ff       	call   4820 <__cxa_throw@plt>
  }
  return instance;
    4b81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4b85:	eb 16                	jmp    4b9d <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    4b87:	49 89 c4             	mov    %rax,%r12
    4b8a:	48 89 df             	mov    %rbx,%rdi
    4b8d:	e8 ee f6 ff ff       	call   4280 <__cxa_free_exception@plt>
    4b92:	4c 89 e0             	mov    %r12,%rax
    4b95:	48 89 c7             	mov    %rax,%rdi
    4b98:	e8 d3 fc ff ff       	call   4870 <_Unwind_Resume@plt>
}
    4b9d:	48 83 c4 20          	add    $0x20,%rsp
    4ba1:	5b                   	pop    %rbx
    4ba2:	41 5c                	pop    %r12
    4ba4:	5d                   	pop    %rbp
    4ba5:	c3                   	ret

0000000000004ba6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:
 * @brief Get physical devices with Vulkan support
 *
 * @param instance
 * @return std::vector<VkPhysicalDevice>
 */
std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    4ba6:	55                   	push   %rbp
    4ba7:	48 89 e5             	mov    %rsp,%rbp
    4baa:	41 54                	push   %r12
    4bac:	53                   	push   %rbx
    4bad:	48 83 ec 20          	sub    $0x20,%rsp
    4bb1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4bb5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    4bb9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4bbd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4bc1:	ba 00 00 00 00       	mov    $0x0,%edx
    4bc6:	48 89 ce             	mov    %rcx,%rsi
    4bc9:	48 89 c7             	mov    %rax,%rdi
    4bcc:	e8 ef f5 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    4bd1:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4bd4:	85 c0                	test   %eax,%eax
    4bd6:	75 3b                	jne    4c13 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    4bd8:	bf 10 00 00 00       	mov    $0x10,%edi
    4bdd:	e8 9e f5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4be2:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    4be5:	48 8d 05 24 5a 01 00 	lea    0x15a24(%rip),%rax        # 1a610 <_ZN6__pstl9execution2v1L5unseqE+0x29>
    4bec:	48 89 c6             	mov    %rax,%rsi
    4bef:	48 89 df             	mov    %rbx,%rdi
    4bf2:	e8 09 f5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    4bf7:	48 8b 05 aa 53 02 00 	mov    0x253aa(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4bfe:	48 89 c2             	mov    %rax,%rdx
    4c01:	48 8d 05 38 51 02 00 	lea    0x25138(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4c08:	48 89 c6             	mov    %rax,%rsi
    4c0b:	48 89 df             	mov    %rbx,%rdi
    4c0e:	e8 0d fc ff ff       	call   4820 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4c13:	8b 45 e8             	mov    -0x18(%rbp),%eax
    4c16:	89 c3                	mov    %eax,%ebx
    4c18:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c1c:	48 89 c7             	mov    %rax,%rdi
    4c1f:	e8 86 07 00 00       	call   53aa <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    4c24:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4c28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c2c:	48 89 de             	mov    %rbx,%rsi
    4c2f:	48 89 c7             	mov    %rax,%rdi
    4c32:	e8 ab 07 00 00       	call   53e2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    4c37:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4c3b:	48 89 c7             	mov    %rax,%rdi
    4c3e:	e8 83 07 00 00       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4c43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c47:	48 89 c7             	mov    %rax,%rdi
    4c4a:	e8 4d 08 00 00       	call   549c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    4c4f:	48 89 c2             	mov    %rax,%rdx
    4c52:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    4c56:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c5a:	48 89 ce             	mov    %rcx,%rsi
    4c5d:	48 89 c7             	mov    %rax,%rdi
    4c60:	e8 5b f5 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    4c65:	85 c0                	test   %eax,%eax
    4c67:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    4c6a:	84 c0                	test   %al,%al
    4c6c:	0f 84 95 00 00 00    	je     4d07 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    4c72:	bf 10 00 00 00       	mov    $0x10,%edi
    4c77:	e8 04 f5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    4c7c:	48 89 c3             	mov    %rax,%rbx
    4c7f:	48 8d 05 c2 59 01 00 	lea    0x159c2(%rip),%rax        # 1a648 <_ZN6__pstl9execution2v1L5unseqE+0x61>
    4c86:	48 89 c6             	mov    %rax,%rsi
    4c89:	48 89 df             	mov    %rbx,%rdi
    4c8c:	e8 6f f4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4c91:	48 8b 05 10 53 02 00 	mov    0x25310(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4c98:	48 89 c2             	mov    %rax,%rdx
    4c9b:	48 8d 05 9e 50 02 00 	lea    0x2509e(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4ca2:	48 89 c6             	mov    %rax,%rsi
    4ca5:	48 89 df             	mov    %rbx,%rdi
    4ca8:	e8 73 fb ff ff       	call   4820 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    4cad:	49 89 c4             	mov    %rax,%r12
    4cb0:	48 89 df             	mov    %rbx,%rdi
    4cb3:	e8 c8 f5 ff ff       	call   4280 <__cxa_free_exception@plt>
    4cb8:	4c 89 e0             	mov    %r12,%rax
    4cbb:	48 89 c7             	mov    %rax,%rdi
    4cbe:	e8 ad fb ff ff       	call   4870 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    4cc3:	48 89 c3             	mov    %rax,%rbx
    4cc6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4cca:	48 89 c7             	mov    %rax,%rdi
    4ccd:	e8 f4 06 00 00       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    4cd2:	48 89 d8             	mov    %rbx,%rax
    4cd5:	48 89 c7             	mov    %rax,%rdi
    4cd8:	e8 93 fb ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    4cdd:	49 89 c4             	mov    %rax,%r12
    4ce0:	48 89 df             	mov    %rbx,%rdi
    4ce3:	e8 98 f5 ff ff       	call   4280 <__cxa_free_exception@plt>
    4ce8:	4c 89 e3             	mov    %r12,%rbx
    4ceb:	eb 03                	jmp    4cf0 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    4ced:	48 89 c3             	mov    %rax,%rbx
    4cf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cf4:	48 89 c7             	mov    %rax,%rdi
    4cf7:	e8 5c 07 00 00       	call   5458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4cfc:	48 89 d8             	mov    %rbx,%rax
    4cff:	48 89 c7             	mov    %rax,%rdi
    4d02:	e8 69 fb ff ff       	call   4870 <_Unwind_Resume@plt>
  return physicalDevices;
    4d07:	90                   	nop
}
    4d08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d0c:	48 83 c4 20          	add    $0x20,%rsp
    4d10:	5b                   	pop    %rbx
    4d11:	41 5c                	pop    %r12
    4d13:	5d                   	pop    %rbp
    4d14:	c3                   	ret

0000000000004d15 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
 * @return GLFWwindow*
 */
GLFWwindow *createWindow(int width, int height,
                         const char *title = "Vulkan Application",
                         GLFWmonitor *monitor = nullptr,
                         GLFWwindow *share = nullptr) {
    4d15:	55                   	push   %rbp
    4d16:	48 89 e5             	mov    %rsp,%rbp
    4d19:	48 83 ec 20          	sub    $0x20,%rsp
    4d1d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4d20:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4d23:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    4d27:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    4d2b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    4d2f:	be 00 00 00 00       	mov    $0x0,%esi
    4d34:	bf 01 20 02 00       	mov    $0x22001,%edi
    4d39:	e8 12 f6 ff ff       	call   4350 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    4d3e:	be 00 00 00 00       	mov    $0x0,%esi
    4d43:	bf 03 00 02 00       	mov    $0x20003,%edi
    4d48:	e8 03 f6 ff ff       	call   4350 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    4d4d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    4d51:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    4d55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d59:	8b 75 f8             	mov    -0x8(%rbp),%esi
    4d5c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    4d5f:	49 89 f8             	mov    %rdi,%r8
    4d62:	89 c7                	mov    %eax,%edi
    4d64:	e8 17 fa ff ff       	call   4780 <glfwCreateWindow@plt>
}
    4d69:	c9                   	leave
    4d6a:	c3                   	ret

0000000000004d6b <_Z14protected_mainiPPc>:
#include "src/VulkanApp.hpp"
#include <Renderer.hpp>

int protected_main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    4d6b:	55                   	push   %rbp
    4d6c:	48 89 e5             	mov    %rsp,%rbp
    4d6f:	53                   	push   %rbx
    4d70:	48 81 ec 08 07 00 00 	sub    $0x708,%rsp
    4d77:	89 bd fc f8 ff ff    	mov    %edi,-0x704(%rbp)
    4d7d:	48 89 b5 f0 f8 ff ff 	mov    %rsi,-0x710(%rbp)
  // rtvc::RenderApplication app;
  // app.run();
  glfwInit();
    4d84:	e8 97 f7 ff ff       	call   4520 <glfwInit@plt>

  auto appInfo = vkh::makeApplicationInfo();
    4d89:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    4d8d:	48 8d 15 d9 58 01 00 	lea    0x158d9(%rip),%rdx        # 1a66d <_ZN6__pstl9execution2v1L5unseqE+0x86>
    4d94:	48 89 d6             	mov    %rdx,%rsi
    4d97:	48 89 c7             	mov    %rax,%rdi
    4d9a:	e8 5a fc ff ff       	call   49f9 <_ZN3vkh19makeApplicationInfoEPKc>
  auto createInfo = vkh::makeInstanceCreateInfo(&appInfo);
    4d9f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4da6:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    4daa:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    4db0:	b9 00 00 00 00       	mov    $0x0,%ecx
    4db5:	ba 00 00 00 00       	mov    $0x0,%edx
    4dba:	48 89 c7             	mov    %rax,%rdi
    4dbd:	e8 a3 fc ff ff       	call   4a65 <_ZN3vkh22makeInstanceCreateInfoEPK17VkApplicationInfojPKPKcPKv>
  auto instance = vkh::createInstance(&createInfo);
    4dc2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    4dc9:	be 00 00 00 00       	mov    $0x0,%esi
    4dce:	48 89 c7             	mov    %rax,%rdi
    4dd1:	e8 3d fd ff ff       	call   4b13 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    4dd6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    4dda:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4de1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4de5:	48 89 d6             	mov    %rdx,%rsi
    4de8:	48 89 c7             	mov    %rax,%rdi
    4deb:	e8 b6 fd ff ff       	call   4ba6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  std::cout << physicalDeviceList.size() << '\n';
    4df0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4df7:	48 89 c7             	mov    %rax,%rdi
    4dfa:	e8 8f 08 00 00       	call   568e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    4dff:	48 89 c6             	mov    %rax,%rsi
    4e02:	48 8d 05 b7 56 02 00 	lea    0x256b7(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    4e09:	48 89 c7             	mov    %rax,%rdi
    4e0c:	e8 7f f2 ff ff       	call   4090 <_ZNSolsEm@plt>
    4e11:	be 0a 00 00 00       	mov    $0xa,%esi
    4e16:	48 89 c7             	mov    %rax,%rdi
    4e19:	e8 22 f7 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  for (const auto &device : physicalDeviceList) {
    4e1e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4e25:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    4e29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e2d:	48 89 c7             	mov    %rax,%rdi
    4e30:	e8 7d 08 00 00       	call   56b2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    4e35:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    4e3c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4e40:	48 89 c7             	mov    %rax,%rdi
    4e43:	e8 90 08 00 00       	call   56d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    4e48:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    4e4f:	e9 d9 00 00 00       	jmp    4f2d <_Z14protected_mainiPPc+0x1c2>
    4e54:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    4e5b:	48 89 c7             	mov    %rax,%rdi
    4e5e:	e8 f9 08 00 00       	call   575c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    4e63:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkPhysicalDeviceVulkan12Properties vk12Props{};
    4e67:	48 8d 95 00 f9 ff ff 	lea    -0x700(%rbp),%rdx
    4e6e:	b8 00 00 00 00       	mov    $0x0,%eax
    4e73:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    4e78:	48 89 d7             	mov    %rdx,%rdi
    4e7b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    4e7e:	c7 85 00 f9 ff ff 34 	movl   $0x34,-0x700(%rbp)
    4e85:	00 00 00 
    VkPhysicalDeviceProperties2 properties{};
    4e88:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
    4e8f:	b8 00 00 00 00       	mov    $0x0,%eax
    4e94:	b9 69 00 00 00       	mov    $0x69,%ecx
    4e99:	48 89 d7             	mov    %rdx,%rdi
    4e9c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    4e9f:	c7 85 e0 fb ff ff 79 	movl   $0x3b9bb079,-0x420(%rbp)
    4ea6:	b0 9b 3b 
    properties.pNext = &vk12Props;
    4ea9:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    4eb0:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
    vkGetPhysicalDeviceProperties2(device, &properties);
    4eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ebb:	48 8b 00             	mov    (%rax),%rax
    4ebe:	48 8d 95 e0 fb ff ff 	lea    -0x420(%rbp),%rdx
    4ec5:	48 89 d6             	mov    %rdx,%rsi
    4ec8:	48 89 c7             	mov    %rax,%rdi
    4ecb:	e8 f0 f4 ff ff       	call   43c0 <vkGetPhysicalDeviceProperties2@plt>
    std::cout << vk12Props.driverName << '\n';
    4ed0:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    4ed7:	48 83 c0 14          	add    $0x14,%rax
    4edb:	48 89 c6             	mov    %rax,%rsi
    4ede:	48 8d 05 db 55 02 00 	lea    0x255db(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    4ee5:	48 89 c7             	mov    %rax,%rdi
    4ee8:	e8 23 f5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    4eed:	be 0a 00 00 00       	mov    $0xa,%esi
    4ef2:	48 89 c7             	mov    %rax,%rdi
    4ef5:	e8 46 f6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << properties.properties.vendorID << '\n';
    4efa:	8b 85 f8 fb ff ff    	mov    -0x408(%rbp),%eax
    4f00:	89 c6                	mov    %eax,%esi
    4f02:	48 8d 05 b7 55 02 00 	lea    0x255b7(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    4f09:	48 89 c7             	mov    %rax,%rdi
    4f0c:	e8 2f f7 ff ff       	call   4640 <_ZNSolsEj@plt>
    4f11:	be 0a 00 00 00       	mov    $0xa,%esi
    4f16:	48 89 c7             	mov    %rax,%rdi
    4f19:	e8 22 f6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &device : physicalDeviceList) {
    4f1e:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    4f25:	48 89 c7             	mov    %rax,%rdi
    4f28:	e8 0f 08 00 00       	call   573c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    4f2d:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    4f34:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    4f3b:	48 89 d6             	mov    %rdx,%rsi
    4f3e:	48 89 c7             	mov    %rax,%rdi
    4f41:	e8 bb 07 00 00       	call   5701 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    4f46:	84 c0                	test   %al,%al
    4f48:	0f 85 06 ff ff ff    	jne    4e54 <_Z14protected_mainiPPc+0xe9>
  }

  vkDestroyInstance(instance, nullptr);
    4f4e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f52:	be 00 00 00 00       	mov    $0x0,%esi
    4f57:	48 89 c7             	mov    %rax,%rdi
    4f5a:	e8 f1 f4 ff ff       	call   4450 <vkDestroyInstance@plt>
  // auto window = vkh::createWindow(800, 600);
  // while (!glfwWindowShouldClose(window)) {
  //   glfwPollEvents();
  // }

  glfwTerminate();
    4f5f:	e8 fc f4 ff ff       	call   4460 <glfwTerminate@plt>
  return EXIT_SUCCESS;
    4f64:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    4f69:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4f70:	48 89 c7             	mov    %rax,%rdi
    4f73:	e8 e0 04 00 00       	call   5458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
  return EXIT_SUCCESS;
    4f78:	89 d8                	mov    %ebx,%eax
    4f7a:	eb 1d                	jmp    4f99 <_Z14protected_mainiPPc+0x22e>
}
    4f7c:	48 89 c3             	mov    %rax,%rbx
    4f7f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    4f86:	48 89 c7             	mov    %rax,%rdi
    4f89:	e8 ca 04 00 00       	call   5458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    4f8e:	48 89 d8             	mov    %rbx,%rax
    4f91:	48 89 c7             	mov    %rax,%rdi
    4f94:	e8 d7 f8 ff ff       	call   4870 <_Unwind_Resume@plt>
    4f99:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f9d:	c9                   	leave
    4f9e:	c3                   	ret

0000000000004f9f <main>:

int main([[maybe_unused]] int argc, [[maybe_unused]] char **argv) {
    4f9f:	55                   	push   %rbp
    4fa0:	48 89 e5             	mov    %rsp,%rbp
    4fa3:	53                   	push   %rbx
    4fa4:	48 83 ec 28          	sub    $0x28,%rsp
    4fa8:	89 7d dc             	mov    %edi,-0x24(%rbp)
    4fab:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  try {
    return protected_main(argc, argv);
    4faf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4fb3:	8b 45 dc             	mov    -0x24(%rbp),%eax
    4fb6:	48 89 d6             	mov    %rdx,%rsi
    4fb9:	89 c7                	mov    %eax,%edi
    4fbb:	e8 ab fd ff ff       	call   4d6b <_Z14protected_mainiPPc>
    4fc0:	e9 aa 00 00 00       	jmp    506f <main+0xd0>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4fc5:	b8 01 00 00 00       	mov    $0x1,%eax
    4fca:	e9 a0 00 00 00       	jmp    506f <main+0xd0>
  } catch (const std::exception &e) {
    4fcf:	48 83 fa 01          	cmp    $0x1,%rdx
    4fd3:	75 49                	jne    501e <main+0x7f>
    4fd5:	48 89 c7             	mov    %rax,%rdi
    4fd8:	e8 53 f1 ff ff       	call   4130 <__cxa_begin_catch@plt>
    4fdd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4fe1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4fe5:	48 8b 00             	mov    (%rax),%rax
    4fe8:	48 83 c0 10          	add    $0x10,%rax
    4fec:	48 8b 10             	mov    (%rax),%rdx
    4fef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ff3:	48 89 c7             	mov    %rax,%rdi
    4ff6:	ff d2                	call   *%rdx
    4ff8:	48 89 c6             	mov    %rax,%rsi
    4ffb:	48 8d 05 de 55 02 00 	lea    0x255de(%rip),%rax        # 2a5e0 <_ZSt4cerr@GLIBCXX_3.4>
    5002:	48 89 c7             	mov    %rax,%rdi
    5005:	e8 06 f4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    500a:	be 0a 00 00 00       	mov    $0xa,%esi
    500f:	48 89 c7             	mov    %rax,%rdi
    5012:	e8 29 f5 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    5017:	e8 d4 f7 ff ff       	call   47f0 <__cxa_end_catch@plt>
    501c:	eb a7                	jmp    4fc5 <main+0x26>
    501e:	48 89 c7             	mov    %rax,%rdi
    5021:	e8 0a f1 ff ff       	call   4130 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    5026:	48 8d 05 53 56 01 00 	lea    0x15653(%rip),%rax        # 1a680 <_ZN6__pstl9execution2v1L5unseqE+0x99>
    502d:	48 89 c6             	mov    %rax,%rsi
    5030:	48 8d 05 a9 55 02 00 	lea    0x255a9(%rip),%rax        # 2a5e0 <_ZSt4cerr@GLIBCXX_3.4>
    5037:	48 89 c7             	mov    %rax,%rdi
    503a:	e8 d1 f3 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    503f:	e8 ac f7 ff ff       	call   47f0 <__cxa_end_catch@plt>
    5044:	e9 7c ff ff ff       	jmp    4fc5 <main+0x26>
  } catch (...) {
    5049:	48 89 c3             	mov    %rax,%rbx
    504c:	e8 9f f7 ff ff       	call   47f0 <__cxa_end_catch@plt>
    5051:	48 89 d8             	mov    %rbx,%rax
    5054:	48 89 c7             	mov    %rax,%rdi
    5057:	e8 14 f8 ff ff       	call   4870 <_Unwind_Resume@plt>
  }
    505c:	48 89 c3             	mov    %rax,%rbx
    505f:	e8 8c f7 ff ff       	call   47f0 <__cxa_end_catch@plt>
    5064:	48 89 d8             	mov    %rbx,%rax
    5067:	48 89 c7             	mov    %rax,%rdi
    506a:	e8 01 f8 ff ff       	call   4870 <_Unwind_Resume@plt>
    506f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5073:	c9                   	leave
    5074:	c3                   	ret

0000000000005075 <_Z41__static_initialization_and_destruction_0ii>:
    5075:	55                   	push   %rbp
    5076:	48 89 e5             	mov    %rsp,%rbp
    5079:	41 57                	push   %r15
    507b:	41 56                	push   %r14
    507d:	41 55                	push   %r13
    507f:	41 54                	push   %r12
    5081:	53                   	push   %rbx
    5082:	48 83 ec 78          	sub    $0x78,%rsp
    5086:	89 bd 6c ff ff ff    	mov    %edi,-0x94(%rbp)
    508c:	89 b5 68 ff ff ff    	mov    %esi,-0x98(%rbp)
    5092:	83 bd 6c ff ff ff 01 	cmpl   $0x1,-0x94(%rbp)
    5099:	0f 85 a9 02 00 00    	jne    5348 <_Z41__static_initialization_and_destruction_0ii+0x2d3>
    509f:	81 bd 68 ff ff ff ff 	cmpl   $0xffff,-0x98(%rbp)
    50a6:	ff 00 00 
    50a9:	0f 85 99 02 00 00    	jne    5348 <_Z41__static_initialization_and_destruction_0ii+0x2d3>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    50af:	48 8d 05 3b 56 02 00 	lea    0x2563b(%rip),%rax        # 2a6f1 <_ZStL8__ioinit>
    50b6:	48 89 c7             	mov    %rax,%rdi
    50b9:	e8 92 f6 ff ff       	call   4750 <_ZNSt8ios_base4InitC1Ev@plt>
    50be:	48 8d 05 ab 53 02 00 	lea    0x253ab(%rip),%rax        # 2a470 <__dso_handle>
    50c5:	48 89 c2             	mov    %rax,%rdx
    50c8:	48 8d 05 22 56 02 00 	lea    0x25622(%rip),%rax        # 2a6f1 <_ZStL8__ioinit>
    50cf:	48 89 c6             	mov    %rax,%rsi
    50d2:	48 8b 05 ef 4e 02 00 	mov    0x24eef(%rip),%rax        # 29fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    50d9:	48 89 c7             	mov    %rax,%rdi
    50dc:	e8 9f f2 ff ff       	call   4380 <__cxa_atexit@plt>

#include "Vertex.hpp"
#include <vector>

namespace rtvc::resources::shaders {
inline const std::vector<rtvc::Vertex> triangle = {
    50e1:	48 8d 05 50 56 02 00 	lea    0x25650(%rip),%rax        # 2a738 <_ZGVN4rtvc9resources7shaders8triangleE>
    50e8:	0f b6 00             	movzbl (%rax),%eax
    50eb:	84 c0                	test   %al,%al
    50ed:	0f 85 72 01 00 00    	jne    5265 <_Z41__static_initialization_and_destruction_0ii+0x1f0>
    50f3:	48 8d 05 3e 56 02 00 	lea    0x2563e(%rip),%rax        # 2a738 <_ZGVN4rtvc9resources7shaders8triangleE>
    50fa:	c6 00 01             	movb   $0x1,(%rax)
    50fd:	f3 0f 10 05 c7 55 01 	movss  0x155c7(%rip),%xmm0        # 1a6cc <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    5104:	00 
    5105:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
    510c:	ff 
    510d:	f3 0f 10 05 b7 55 01 	movss  0x155b7(%rip),%xmm0        # 1a6cc <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    5114:	00 
    5115:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
    511c:	ff 
    511d:	f3 0f 10 05 ab 55 01 	movss  0x155ab(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    5124:	00 
    5125:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
    512c:	ff 
    512d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5131:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
    5138:	ff 
    5139:	66 0f ef c0          	pxor   %xmm0,%xmm0
    513d:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    5142:	f3 0f 10 05 8a 55 01 	movss  0x1558a(%rip),%xmm0        # 1a6d4 <_ZN6__pstl9execution2v1L5unseqE+0xed>
    5149:	00 
    514a:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    514f:	f3 0f 10 05 75 55 01 	movss  0x15575(%rip),%xmm0        # 1a6cc <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    5156:	00 
    5157:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    515c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5160:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    5165:	f3 0f 10 05 63 55 01 	movss  0x15563(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    516c:	00 
    516d:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
    5172:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5176:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
    517b:	f3 0f 10 05 51 55 01 	movss  0x15551(%rip),%xmm0        # 1a6d4 <_ZN6__pstl9execution2v1L5unseqE+0xed>
    5182:	00 
    5183:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
    5188:	f3 0f 10 05 44 55 01 	movss  0x15544(%rip),%xmm0        # 1a6d4 <_ZN6__pstl9execution2v1L5unseqE+0xed>
    518f:	00 
    5190:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
    5195:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5199:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    519e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    51a2:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    51a7:	f3 0f 10 05 21 55 01 	movss  0x15521(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    51ae:	00 
    51af:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    51b4:	f3 0f 10 05 10 55 01 	movss  0x15510(%rip),%xmm0        # 1a6cc <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    51bb:	00 
    51bc:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    51c1:	f3 0f 10 05 0b 55 01 	movss  0x1550b(%rip),%xmm0        # 1a6d4 <_ZN6__pstl9execution2v1L5unseqE+0xed>
    51c8:	00 
    51c9:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    51ce:	f3 0f 10 05 fa 54 01 	movss  0x154fa(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    51d5:	00 
    51d6:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    51db:	f3 0f 10 05 ed 54 01 	movss  0x154ed(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    51e2:	00 
    51e3:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    51e8:	f3 0f 10 05 e0 54 01 	movss  0x154e0(%rip),%xmm0        # 1a6d0 <_ZN6__pstl9execution2v1L5unseqE+0xe9>
    51ef:	00 
    51f0:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    51f5:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    51fc:	49 89 c6             	mov    %rax,%r14
    51ff:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    5205:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    5209:	48 89 c7             	mov    %rax,%rdi
    520c:	e8 fd 02 00 00       	call   550e <_ZNSaIN4rtvc6VertexEEC1Ev>
    5211:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    5215:	4c 89 f6             	mov    %r14,%rsi
    5218:	4c 89 ff             	mov    %r15,%rdi
    521b:	4c 89 f1             	mov    %r14,%rcx
    521e:	4c 89 fb             	mov    %r15,%rbx
    5221:	48 89 da             	mov    %rbx,%rdx
    5224:	48 89 c1             	mov    %rax,%rcx
    5227:	48 8d 05 d2 54 02 00 	lea    0x254d2(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    522e:	48 89 c7             	mov    %rax,%rdi
    5231:	e8 10 03 00 00       	call   5546 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    5236:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    523a:	48 89 c7             	mov    %rax,%rdi
    523d:	e8 e8 02 00 00       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    5242:	48 8d 05 27 52 02 00 	lea    0x25227(%rip),%rax        # 2a470 <__dso_handle>
    5249:	48 89 c2             	mov    %rax,%rdx
    524c:	48 8d 05 ad 54 02 00 	lea    0x254ad(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    5253:	48 89 c6             	mov    %rax,%rsi
    5256:	48 8d 05 61 1a 00 00 	lea    0x1a61(%rip),%rax        # 6cbe <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
    525d:	48 89 c7             	mov    %rax,%rdi
    5260:	e8 1b f1 ff ff       	call   4380 <__cxa_atexit@plt>
    {{-0.5f, -0.5f}, {1.0f, 0.0f, 0.0f}},
    {{0.5f, -0.5f}, {0.0f, 1.0f, 0.0f}},
    {{0.5f, 0.5f}, {0.0f, 0.0f, 1.0f}},
    {{-0.5f, 0.5f}, {1.0f, 1.0f, 1.0f}}};

inline const std::vector<uint16_t> indices = {0, 1, 2, 2, 3, 0};
    5265:	48 8d 05 d4 54 02 00 	lea    0x254d4(%rip),%rax        # 2a740 <_ZGVN4rtvc9resources7shaders7indicesE>
    526c:	0f b6 00             	movzbl (%rax),%eax
    526f:	84 c0                	test   %al,%al
    5271:	0f 85 d1 00 00 00    	jne    5348 <_Z41__static_initialization_and_destruction_0ii+0x2d3>
    5277:	48 8d 05 c2 54 02 00 	lea    0x254c2(%rip),%rax        # 2a740 <_ZGVN4rtvc9resources7shaders7indicesE>
    527e:	c6 00 01             	movb   $0x1,(%rax)
    5281:	66 c7 45 c2 00 00    	movw   $0x0,-0x3e(%rbp)
    5287:	66 c7 45 c4 01 00    	movw   $0x1,-0x3c(%rbp)
    528d:	66 c7 45 c6 02 00    	movw   $0x2,-0x3a(%rbp)
    5293:	66 c7 45 c8 02 00    	movw   $0x2,-0x38(%rbp)
    5299:	66 c7 45 ca 03 00    	movw   $0x3,-0x36(%rbp)
    529f:	66 c7 45 cc 00 00    	movw   $0x0,-0x34(%rbp)
    52a5:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    52a9:	49 89 c4             	mov    %rax,%r12
    52ac:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    52b2:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    52b6:	48 89 c7             	mov    %rax,%rdi
    52b9:	e8 10 03 00 00       	call   55ce <_ZNSaItEC1Ev>
    52be:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    52c2:	4c 89 e6             	mov    %r12,%rsi
    52c5:	4c 89 ef             	mov    %r13,%rdi
    52c8:	4c 89 e1             	mov    %r12,%rcx
    52cb:	4c 89 eb             	mov    %r13,%rbx
    52ce:	48 89 da             	mov    %rbx,%rdx
    52d1:	48 89 c1             	mov    %rax,%rcx
    52d4:	48 8d 05 45 54 02 00 	lea    0x25445(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    52db:	48 89 c7             	mov    %rax,%rdi
    52de:	e8 23 03 00 00       	call   5606 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
    52e3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    52e7:	48 89 c7             	mov    %rax,%rdi
    52ea:	e8 fb 02 00 00       	call   55ea <_ZNSaItED1Ev>
    52ef:	48 8d 05 7a 51 02 00 	lea    0x2517a(%rip),%rax        # 2a470 <__dso_handle>
    52f6:	48 89 c2             	mov    %rax,%rdx
    52f9:	48 8d 05 20 54 02 00 	lea    0x25420(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    5300:	48 89 c6             	mov    %rax,%rsi
    5303:	48 8d 05 f8 19 00 00 	lea    0x19f8(%rip),%rax        # 6d02 <_ZNSt6vectorItSaItEED1Ev>
    530a:	48 89 c7             	mov    %rax,%rdi
    530d:	e8 6e f0 ff ff       	call   4380 <__cxa_atexit@plt>
    5312:	eb 34                	jmp    5348 <_Z41__static_initialization_and_destruction_0ii+0x2d3>
inline const std::vector<rtvc::Vertex> triangle = {
    5314:	48 89 c3             	mov    %rax,%rbx
    5317:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    531b:	48 89 c7             	mov    %rax,%rdi
    531e:	e8 07 02 00 00       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    5323:	48 89 d8             	mov    %rbx,%rax
    5326:	48 89 c7             	mov    %rax,%rdi
    5329:	e8 42 f5 ff ff       	call   4870 <_Unwind_Resume@plt>
inline const std::vector<uint16_t> indices = {0, 1, 2, 2, 3, 0};
    532e:	48 89 c3             	mov    %rax,%rbx
    5331:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5335:	48 89 c7             	mov    %rax,%rdi
    5338:	e8 ad 02 00 00       	call   55ea <_ZNSaItED1Ev>
    533d:	48 89 d8             	mov    %rbx,%rax
    5340:	48 89 c7             	mov    %rax,%rdi
    5343:	e8 28 f5 ff ff       	call   4870 <_Unwind_Resume@plt>
    5348:	90                   	nop
    5349:	48 83 c4 78          	add    $0x78,%rsp
    534d:	5b                   	pop    %rbx
    534e:	41 5c                	pop    %r12
    5350:	41 5d                	pop    %r13
    5352:	41 5e                	pop    %r14
    5354:	41 5f                	pop    %r15
    5356:	5d                   	pop    %rbp
    5357:	c3                   	ret

0000000000005358 <_GLOBAL__sub_I__ZN3vkh19makeApplicationInfoEPKc>:
    5358:	55                   	push   %rbp
    5359:	48 89 e5             	mov    %rsp,%rbp
    535c:	be ff ff 00 00       	mov    $0xffff,%esi
    5361:	bf 01 00 00 00       	mov    $0x1,%edi
    5366:	e8 0a fd ff ff       	call   5075 <_Z41__static_initialization_and_destruction_0ii>
    536b:	5d                   	pop    %rbp
    536c:	c3                   	ret

000000000000536d <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    536d:	55                   	push   %rbp
    536e:	48 89 e5             	mov    %rsp,%rbp
    5371:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5375:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5379:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    537d:	5d                   	pop    %rbp
    537e:	c3                   	ret

000000000000537f <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    537f:	55                   	push   %rbp
    5380:	48 89 e5             	mov    %rsp,%rbp
    5383:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    538b:	5d                   	pop    %rbp
    538c:	c3                   	ret
    538d:	90                   	nop

000000000000538e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    538e:	55                   	push   %rbp
    538f:	48 89 e5             	mov    %rsp,%rbp
    5392:	48 83 ec 10          	sub    $0x10,%rsp
    5396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    539a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    539e:	48 89 c7             	mov    %rax,%rdi
    53a1:	e8 20 00 00 00       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    53a6:	90                   	nop
    53a7:	c9                   	leave
    53a8:	c3                   	ret
    53a9:	90                   	nop

00000000000053aa <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    53aa:	55                   	push   %rbp
    53ab:	48 89 e5             	mov    %rsp,%rbp
    53ae:	48 83 ec 10          	sub    $0x10,%rsp
    53b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53ba:	48 89 c7             	mov    %rax,%rdi
    53bd:	e8 ac 03 00 00       	call   576e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    53c2:	90                   	nop
    53c3:	c9                   	leave
    53c4:	c3                   	ret
    53c5:	90                   	nop

00000000000053c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    53c6:	55                   	push   %rbp
    53c7:	48 89 e5             	mov    %rsp,%rbp
    53ca:	48 83 ec 10          	sub    $0x10,%rsp
    53ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53d6:	48 89 c7             	mov    %rax,%rdi
    53d9:	e8 9c 03 00 00       	call   577a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    53de:	90                   	nop
    53df:	c9                   	leave
    53e0:	c3                   	ret
    53e1:	90                   	nop

00000000000053e2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    53e2:	55                   	push   %rbp
    53e3:	48 89 e5             	mov    %rsp,%rbp
    53e6:	53                   	push   %rbx
    53e7:	48 83 ec 28          	sub    $0x28,%rsp
    53eb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53ef:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    53f3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    53f7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    53fb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    53ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5403:	48 89 d6             	mov    %rdx,%rsi
    5406:	48 89 c7             	mov    %rax,%rdi
    5409:	e8 77 03 00 00       	call   5785 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    540e:	48 89 c1             	mov    %rax,%rcx
    5411:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5415:	48 89 c2             	mov    %rax,%rdx
    5418:	48 89 ce             	mov    %rcx,%rsi
    541b:	48 89 df             	mov    %rbx,%rdi
    541e:	e8 c3 03 00 00       	call   57e6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    5423:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    542b:	48 89 d6             	mov    %rdx,%rsi
    542e:	48 89 c7             	mov    %rax,%rdi
    5431:	e8 0e 04 00 00       	call   5844 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    5436:	eb 1a                	jmp    5452 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    5438:	48 89 c3             	mov    %rax,%rbx
    543b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    543f:	48 89 c7             	mov    %rax,%rdi
    5442:	e8 79 00 00 00       	call   54c0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5447:	48 89 d8             	mov    %rbx,%rax
    544a:	48 89 c7             	mov    %rax,%rdi
    544d:	e8 1e f4 ff ff       	call   4870 <_Unwind_Resume@plt>
    5452:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5456:	c9                   	leave
    5457:	c3                   	ret

0000000000005458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    5458:	55                   	push   %rbp
    5459:	48 89 e5             	mov    %rsp,%rbp
    545c:	48 83 ec 10          	sub    $0x10,%rsp
    5460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    5464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5468:	48 89 c7             	mov    %rax,%rdi
    546b:	e8 14 04 00 00       	call   5884 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5470:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    5473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5477:	48 8b 48 08          	mov    0x8(%rax),%rcx
    547b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    547f:	48 8b 00             	mov    (%rax),%rax
    5482:	48 89 ce             	mov    %rcx,%rsi
    5485:	48 89 c7             	mov    %rax,%rdi
    5488:	e8 05 04 00 00       	call   5892 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    548d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5491:	48 89 c7             	mov    %rax,%rdi
    5494:	e8 27 00 00 00       	call   54c0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    5499:	90                   	nop
    549a:	c9                   	leave
    549b:	c3                   	ret

000000000000549c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    549c:	55                   	push   %rbp
    549d:	48 89 e5             	mov    %rsp,%rbp
    54a0:	48 83 ec 10          	sub    $0x10,%rsp
    54a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    54a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ac:	48 8b 10             	mov    (%rax),%rdx
    54af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54b3:	48 89 d6             	mov    %rdx,%rsi
    54b6:	48 89 c7             	mov    %rax,%rdi
    54b9:	e8 fe 03 00 00       	call   58bc <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    54be:	c9                   	leave
    54bf:	c3                   	ret

00000000000054c0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    54c0:	55                   	push   %rbp
    54c1:	48 89 e5             	mov    %rsp,%rbp
    54c4:	48 83 ec 10          	sub    $0x10,%rsp
    54c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    54cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    54d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d8:	48 8b 00             	mov    (%rax),%rax
    54db:	48 29 c2             	sub    %rax,%rdx
    54de:	48 89 d0             	mov    %rdx,%rax
    54e1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    54e5:	48 89 c2             	mov    %rax,%rdx
    54e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54ec:	48 8b 08             	mov    (%rax),%rcx
    54ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54f3:	48 89 ce             	mov    %rcx,%rsi
    54f6:	48 89 c7             	mov    %rax,%rdi
    54f9:	e8 f6 03 00 00       	call   58f4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    54fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5502:	48 89 c7             	mov    %rax,%rdi
    5505:	e8 84 fe ff ff       	call   538e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    550a:	90                   	nop
    550b:	c9                   	leave
    550c:	c3                   	ret
    550d:	90                   	nop

000000000000550e <_ZNSaIN4rtvc6VertexEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    550e:	55                   	push   %rbp
    550f:	48 89 e5             	mov    %rsp,%rbp
    5512:	48 83 ec 10          	sub    $0x10,%rsp
    5516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    551a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    551e:	48 89 c7             	mov    %rax,%rdi
    5521:	e8 04 04 00 00       	call   592a <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1Ev>
    5526:	90                   	nop
    5527:	c9                   	leave
    5528:	c3                   	ret
    5529:	90                   	nop

000000000000552a <_ZNSaIN4rtvc6VertexEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    552a:	55                   	push   %rbp
    552b:	48 89 e5             	mov    %rsp,%rbp
    552e:	48 83 ec 10          	sub    $0x10,%rsp
    5532:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5536:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    553a:	48 89 c7             	mov    %rax,%rdi
    553d:	e8 f4 03 00 00       	call   5936 <_ZNSt15__new_allocatorIN4rtvc6VertexEED1Ev>
    5542:	90                   	nop
    5543:	c9                   	leave
    5544:	c3                   	ret
    5545:	90                   	nop

0000000000005546 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
    5546:	55                   	push   %rbp
    5547:	48 89 e5             	mov    %rsp,%rbp
    554a:	53                   	push   %rbx
    554b:	48 83 ec 38          	sub    $0x38,%rsp
    554f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5553:	48 89 f0             	mov    %rsi,%rax
    5556:	48 89 d6             	mov    %rdx,%rsi
    5559:	48 89 f2             	mov    %rsi,%rdx
    555c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5560:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5564:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    5568:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    556c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5570:	48 89 d6             	mov    %rdx,%rsi
    5573:	48 89 c7             	mov    %rax,%rdi
    5576:	e8 e3 03 00 00       	call   595e <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
    557b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    557f:	48 89 c7             	mov    %rax,%rdi
    5582:	e8 67 04 00 00       	call   59ee <_ZNKSt16initializer_listIN4rtvc6VertexEE3endEv>
    5587:	48 89 c3             	mov    %rax,%rbx
    558a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    558e:	48 89 c7             	mov    %rax,%rdi
    5591:	e8 46 04 00 00       	call   59dc <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>
    5596:	48 89 c1             	mov    %rax,%rcx
    5599:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    559d:	48 89 da             	mov    %rbx,%rdx
    55a0:	48 89 ce             	mov    %rcx,%rsi
    55a3:	48 89 c7             	mov    %rax,%rdi
    55a6:	e8 b7 04 00 00       	call   5a62 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
    55ab:	eb 1a                	jmp    55c7 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
    55ad:	48 89 c3             	mov    %rax,%rbx
    55b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    55b4:	48 89 c7             	mov    %rax,%rdi
    55b7:	e8 c8 03 00 00       	call   5984 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>
    55bc:	48 89 d8             	mov    %rbx,%rax
    55bf:	48 89 c7             	mov    %rax,%rdi
    55c2:	e8 a9 f2 ff ff       	call   4870 <_Unwind_Resume@plt>
    55c7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    55cb:	c9                   	leave
    55cc:	c3                   	ret
    55cd:	90                   	nop

00000000000055ce <_ZNSaItEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    55ce:	55                   	push   %rbp
    55cf:	48 89 e5             	mov    %rsp,%rbp
    55d2:	48 83 ec 10          	sub    $0x10,%rsp
    55d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55de:	48 89 c7             	mov    %rax,%rdi
    55e1:	e8 36 05 00 00       	call   5b1c <_ZNSt15__new_allocatorItEC1Ev>
    55e6:	90                   	nop
    55e7:	c9                   	leave
    55e8:	c3                   	ret
    55e9:	90                   	nop

00000000000055ea <_ZNSaItED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    55ea:	55                   	push   %rbp
    55eb:	48 89 e5             	mov    %rsp,%rbp
    55ee:	48 83 ec 10          	sub    $0x10,%rsp
    55f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fa:	48 89 c7             	mov    %rax,%rdi
    55fd:	e8 26 05 00 00       	call   5b28 <_ZNSt15__new_allocatorItED1Ev>
    5602:	90                   	nop
    5603:	c9                   	leave
    5604:	c3                   	ret
    5605:	90                   	nop

0000000000005606 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>:
      vector(initializer_list<value_type> __l,
    5606:	55                   	push   %rbp
    5607:	48 89 e5             	mov    %rsp,%rbp
    560a:	53                   	push   %rbx
    560b:	48 83 ec 38          	sub    $0x38,%rsp
    560f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5613:	48 89 f0             	mov    %rsi,%rax
    5616:	48 89 d6             	mov    %rdx,%rsi
    5619:	48 89 f2             	mov    %rsi,%rdx
    561c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    5620:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    5624:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    5628:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    562c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5630:	48 89 d6             	mov    %rdx,%rsi
    5633:	48 89 c7             	mov    %rax,%rdi
    5636:	e8 15 05 00 00       	call   5b50 <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>
	_M_range_initialize(__l.begin(), __l.end(),
    563b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    563f:	48 89 c7             	mov    %rax,%rdi
    5642:	e8 8d 05 00 00       	call   5bd4 <_ZNKSt16initializer_listItE3endEv>
    5647:	48 89 c3             	mov    %rax,%rbx
    564a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    564e:	48 89 c7             	mov    %rax,%rdi
    5651:	e8 6c 05 00 00       	call   5bc2 <_ZNKSt16initializer_listItE5beginEv>
    5656:	48 89 c1             	mov    %rax,%rcx
    5659:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    565d:	48 89 da             	mov    %rbx,%rdx
    5660:	48 89 ce             	mov    %rcx,%rsi
    5663:	48 89 c7             	mov    %rax,%rdi
    5666:	e8 cf 05 00 00       	call   5c3a <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>
      }
    566b:	eb 1a                	jmp    5687 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_+0x81>
    566d:	48 89 c3             	mov    %rax,%rbx
    5670:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5674:	48 89 c7             	mov    %rax,%rdi
    5677:	e8 fa 04 00 00       	call   5b76 <_ZNSt12_Vector_baseItSaItEED1Ev>
    567c:	48 89 d8             	mov    %rbx,%rax
    567f:	48 89 c7             	mov    %rax,%rdi
    5682:	e8 e9 f1 ff ff       	call   4870 <_Unwind_Resume@plt>
    5687:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    568b:	c9                   	leave
    568c:	c3                   	ret
    568d:	90                   	nop

000000000000568e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    568e:	55                   	push   %rbp
    568f:	48 89 e5             	mov    %rsp,%rbp
    5692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5696:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    569a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    569e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56a2:	48 8b 00             	mov    (%rax),%rax
    56a5:	48 29 c2             	sub    %rax,%rdx
    56a8:	48 89 d0             	mov    %rdx,%rax
    56ab:	48 c1 f8 03          	sar    $0x3,%rax
    56af:	5d                   	pop    %rbp
    56b0:	c3                   	ret
    56b1:	90                   	nop

00000000000056b2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    56b2:	55                   	push   %rbp
    56b3:	48 89 e5             	mov    %rsp,%rbp
    56b6:	48 83 ec 20          	sub    $0x20,%rsp
    56ba:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    56be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    56c2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    56c6:	48 89 d6             	mov    %rdx,%rsi
    56c9:	48 89 c7             	mov    %rax,%rdi
    56cc:	e8 17 06 00 00       	call   5ce8 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    56d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56d5:	c9                   	leave
    56d6:	c3                   	ret
    56d7:	90                   	nop

00000000000056d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    56d8:	55                   	push   %rbp
    56d9:	48 89 e5             	mov    %rsp,%rbp
    56dc:	48 83 ec 20          	sub    $0x20,%rsp
    56e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    56e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    56e8:	48 8d 50 08          	lea    0x8(%rax),%rdx
    56ec:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    56f0:	48 89 d6             	mov    %rdx,%rsi
    56f3:	48 89 c7             	mov    %rax,%rdi
    56f6:	e8 ed 05 00 00       	call   5ce8 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    56fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    56ff:	c9                   	leave
    5700:	c3                   	ret

0000000000005701 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    5701:	55                   	push   %rbp
    5702:	48 89 e5             	mov    %rsp,%rbp
    5705:	53                   	push   %rbx
    5706:	48 83 ec 18          	sub    $0x18,%rsp
    570a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    570e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    5712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5716:	48 89 c7             	mov    %rax,%rdi
    5719:	e8 e8 05 00 00       	call   5d06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    571e:	48 8b 18             	mov    (%rax),%rbx
    5721:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5725:	48 89 c7             	mov    %rax,%rdi
    5728:	e8 d9 05 00 00       	call   5d06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
    572d:	48 8b 00             	mov    (%rax),%rax
    5730:	48 39 c3             	cmp    %rax,%rbx
    5733:	0f 95 c0             	setne  %al
    5736:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    573a:	c9                   	leave
    573b:	c3                   	ret

000000000000573c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    573c:	55                   	push   %rbp
    573d:	48 89 e5             	mov    %rsp,%rbp
    5740:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    5744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5748:	48 8b 00             	mov    (%rax),%rax
    574b:	48 8d 50 08          	lea    0x8(%rax),%rdx
    574f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5753:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    5756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    575a:	5d                   	pop    %rbp
    575b:	c3                   	ret

000000000000575c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    575c:	55                   	push   %rbp
    575d:	48 89 e5             	mov    %rsp,%rbp
    5760:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    5764:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5768:	48 8b 00             	mov    (%rax),%rax
    576b:	5d                   	pop    %rbp
    576c:	c3                   	ret
    576d:	90                   	nop

000000000000576e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    576e:	55                   	push   %rbp
    576f:	48 89 e5             	mov    %rsp,%rbp
    5772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5776:	90                   	nop
    5777:	5d                   	pop    %rbp
    5778:	c3                   	ret
    5779:	90                   	nop

000000000000577a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    577a:	55                   	push   %rbp
    577b:	48 89 e5             	mov    %rsp,%rbp
    577e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5782:	90                   	nop
    5783:	5d                   	pop    %rbp
    5784:	c3                   	ret

0000000000005785 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5785:	55                   	push   %rbp
    5786:	48 89 e5             	mov    %rsp,%rbp
    5789:	53                   	push   %rbx
    578a:	48 83 ec 28          	sub    $0x28,%rsp
    578e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5792:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5796:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    579a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    579e:	48 89 d6             	mov    %rdx,%rsi
    57a1:	48 89 c7             	mov    %rax,%rdi
    57a4:	e8 25 01 00 00       	call   58ce <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    57a9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57ad:	48 89 c7             	mov    %rax,%rdi
    57b0:	e8 5f 05 00 00       	call   5d14 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    57b5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    57b9:	0f 92 c3             	setb   %bl
    57bc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    57c0:	48 89 c7             	mov    %rax,%rdi
    57c3:	e8 fe fb ff ff       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    57c8:	84 db                	test   %bl,%bl
    57ca:	74 0f                	je     57db <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    57cc:	48 8d 05 c5 4e 01 00 	lea    0x14ec5(%rip),%rax        # 1a698 <_ZN6__pstl9execution2v1L5unseqE+0xb1>
    57d3:	48 89 c7             	mov    %rax,%rdi
    57d6:	e8 d5 e9 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    57db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    57df:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    57e3:	c9                   	leave
    57e4:	c3                   	ret
    57e5:	90                   	nop

00000000000057e6 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    57e6:	55                   	push   %rbp
    57e7:	48 89 e5             	mov    %rsp,%rbp
    57ea:	53                   	push   %rbx
    57eb:	48 83 ec 28          	sub    $0x28,%rsp
    57ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    57f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    57f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    57fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5803:	48 89 d6             	mov    %rdx,%rsi
    5806:	48 89 c7             	mov    %rax,%rdi
    5809:	e8 48 05 00 00       	call   5d56 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    580e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5812:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5816:	48 89 d6             	mov    %rdx,%rsi
    5819:	48 89 c7             	mov    %rax,%rdi
    581c:	e8 67 05 00 00       	call   5d88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    5821:	eb 1a                	jmp    583d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    5823:	48 89 c3             	mov    %rax,%rbx
    5826:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    582a:	48 89 c7             	mov    %rax,%rdi
    582d:	e8 5c fb ff ff       	call   538e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    5832:	48 89 d8             	mov    %rbx,%rax
    5835:	48 89 c7             	mov    %rax,%rdi
    5838:	e8 33 f0 ff ff       	call   4870 <_Unwind_Resume@plt>
    583d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5841:	c9                   	leave
    5842:	c3                   	ret
    5843:	90                   	nop

0000000000005844 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5844:	55                   	push   %rbp
    5845:	48 89 e5             	mov    %rsp,%rbp
    5848:	48 83 ec 10          	sub    $0x10,%rsp
    584c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5850:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    5854:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5858:	48 89 c7             	mov    %rax,%rdi
    585b:	e8 24 00 00 00       	call   5884 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    5860:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    5863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5867:	48 8b 00             	mov    (%rax),%rax
    586a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    586e:	48 89 ce             	mov    %rcx,%rsi
    5871:	48 89 c7             	mov    %rax,%rdi
    5874:	e8 65 05 00 00       	call   5dde <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    5879:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    587d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    5881:	90                   	nop
    5882:	c9                   	leave
    5883:	c3                   	ret

0000000000005884 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5884:	55                   	push   %rbp
    5885:	48 89 e5             	mov    %rsp,%rbp
    5888:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    588c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5890:	5d                   	pop    %rbp
    5891:	c3                   	ret

0000000000005892 <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5892:	55                   	push   %rbp
    5893:	48 89 e5             	mov    %rsp,%rbp
    5896:	48 83 ec 20          	sub    $0x20,%rsp
    589a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    589e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    58a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    58a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58ae:	48 89 d6             	mov    %rdx,%rsi
    58b1:	48 89 c7             	mov    %rax,%rdi
    58b4:	e8 4e 05 00 00       	call   5e07 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    58b9:	90                   	nop
    58ba:	c9                   	leave
    58bb:	c3                   	ret

00000000000058bc <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    58bc:	55                   	push   %rbp
    58bd:	48 89 e5             	mov    %rsp,%rbp
    58c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    58c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    58cc:	5d                   	pop    %rbp
    58cd:	c3                   	ret

00000000000058ce <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    58ce:	55                   	push   %rbp
    58cf:	48 89 e5             	mov    %rsp,%rbp
    58d2:	48 83 ec 10          	sub    $0x10,%rsp
    58d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    58da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    58de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    58e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    58e6:	48 89 d6             	mov    %rdx,%rsi
    58e9:	48 89 c7             	mov    %rax,%rdi
    58ec:	e8 3d 05 00 00       	call   5e2e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    58f1:	90                   	nop
    58f2:	c9                   	leave
    58f3:	c3                   	ret

00000000000058f4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    58f4:	55                   	push   %rbp
    58f5:	48 89 e5             	mov    %rsp,%rbp
    58f8:	48 83 ec 20          	sub    $0x20,%rsp
    58fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5900:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5904:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5908:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    590d:	74 17                	je     5926 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    590f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5913:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5917:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    591b:	48 89 ce             	mov    %rcx,%rsi
    591e:	48 89 c7             	mov    %rax,%rdi
    5921:	e8 17 05 00 00       	call   5e3d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    5926:	90                   	nop
    5927:	c9                   	leave
    5928:	c3                   	ret
    5929:	90                   	nop

000000000000592a <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    592a:	55                   	push   %rbp
    592b:	48 89 e5             	mov    %rsp,%rbp
    592e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5932:	90                   	nop
    5933:	5d                   	pop    %rbp
    5934:	c3                   	ret
    5935:	90                   	nop

0000000000005936 <_ZNSt15__new_allocatorIN4rtvc6VertexEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5936:	55                   	push   %rbp
    5937:	48 89 e5             	mov    %rsp,%rbp
    593a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    593e:	90                   	nop
    593f:	5d                   	pop    %rbp
    5940:	c3                   	ret
    5941:	90                   	nop

0000000000005942 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    5942:	55                   	push   %rbp
    5943:	48 89 e5             	mov    %rsp,%rbp
    5946:	48 83 ec 10          	sub    $0x10,%rsp
    594a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    594e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5952:	48 89 c7             	mov    %rax,%rdi
    5955:	e8 d0 fb ff ff       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    595a:	90                   	nop
    595b:	c9                   	leave
    595c:	c3                   	ret
    595d:	90                   	nop

000000000000595e <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    595e:	55                   	push   %rbp
    595f:	48 89 e5             	mov    %rsp,%rbp
    5962:	48 83 ec 10          	sub    $0x10,%rsp
    5966:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    596a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    596e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5972:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5976:	48 89 d6             	mov    %rdx,%rsi
    5979:	48 89 c7             	mov    %rax,%rdi
    597c:	e8 eb 04 00 00       	call   5e6c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implC1ERKS2_>
    5981:	90                   	nop
    5982:	c9                   	leave
    5983:	c3                   	ret

0000000000005984 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5984:	55                   	push   %rbp
    5985:	48 89 e5             	mov    %rsp,%rbp
    5988:	48 83 ec 10          	sub    $0x10,%rsp
    598c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5994:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    599c:	48 8b 00             	mov    (%rax),%rax
    599f:	48 29 c2             	sub    %rax,%rdx
    59a2:	48 c1 fa 02          	sar    $0x2,%rdx
    59a6:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    59ad:	cc cc cc 
    59b0:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    59b4:	48 89 c2             	mov    %rax,%rdx
    59b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59bb:	48 8b 08             	mov    (%rax),%rcx
    59be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59c2:	48 89 ce             	mov    %rcx,%rsi
    59c5:	48 89 c7             	mov    %rax,%rdi
    59c8:	e8 d1 04 00 00       	call   5e9e <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m>
      }
    59cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59d1:	48 89 c7             	mov    %rax,%rdi
    59d4:	e8 69 ff ff ff       	call   5942 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implD1Ev>
    59d9:	90                   	nop
    59da:	c9                   	leave
    59db:	c3                   	ret

00000000000059dc <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
    59dc:	55                   	push   %rbp
    59dd:	48 89 e5             	mov    %rsp,%rbp
    59e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    59e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    59e8:	48 8b 00             	mov    (%rax),%rax
    59eb:	5d                   	pop    %rbp
    59ec:	c3                   	ret
    59ed:	90                   	nop

00000000000059ee <_ZNKSt16initializer_listIN4rtvc6VertexEE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
    59ee:	55                   	push   %rbp
    59ef:	48 89 e5             	mov    %rsp,%rbp
    59f2:	53                   	push   %rbx
    59f3:	48 83 ec 18          	sub    $0x18,%rsp
    59f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    59fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    59ff:	48 89 c7             	mov    %rax,%rdi
    5a02:	e8 d5 ff ff ff       	call   59dc <_ZNKSt16initializer_listIN4rtvc6VertexEE5beginEv>
    5a07:	48 89 c3             	mov    %rax,%rbx
    5a0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5a0e:	48 89 c7             	mov    %rax,%rdi
    5a11:	e8 be 04 00 00       	call   5ed4 <_ZNKSt16initializer_listIN4rtvc6VertexEE4sizeEv>
    5a16:	48 89 c2             	mov    %rax,%rdx
    5a19:	48 89 d0             	mov    %rdx,%rax
    5a1c:	48 c1 e0 02          	shl    $0x2,%rax
    5a20:	48 01 d0             	add    %rdx,%rax
    5a23:	48 c1 e0 02          	shl    $0x2,%rax
    5a27:	48 01 d8             	add    %rbx,%rax
    5a2a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5a2e:	c9                   	leave
    5a2f:	c3                   	ret

0000000000005a30 <_ZSt8distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    5a30:	55                   	push   %rbp
    5a31:	48 89 e5             	mov    %rsp,%rbp
    5a34:	48 83 ec 10          	sub    $0x10,%rsp
    5a38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5a3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    5a40:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5a44:	48 89 c7             	mov    %rax,%rdi
    5a47:	e8 9a 04 00 00       	call   5ee6 <_ZSt19__iterator_categoryIPKN4rtvc6VertexEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
    5a4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5a50:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5a54:	48 89 d6             	mov    %rdx,%rsi
    5a57:	48 89 c7             	mov    %rax,%rdi
    5a5a:	e8 92 04 00 00       	call   5ef1 <_ZSt10__distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
    5a5f:	c9                   	leave
    5a60:	c3                   	ret
    5a61:	90                   	nop

0000000000005a62 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5a62:	55                   	push   %rbp
    5a63:	48 89 e5             	mov    %rsp,%rbp
    5a66:	53                   	push   %rbx
    5a67:	48 83 ec 38          	sub    $0x38,%rsp
    5a6b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5a6f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5a73:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5a77:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5a7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5a7f:	48 89 d6             	mov    %rdx,%rsi
    5a82:	48 89 c7             	mov    %rax,%rdi
    5a85:	e8 a6 ff ff ff       	call   5a30 <_ZSt8distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_>
    5a8a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5a8e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5a92:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5a96:	48 89 c7             	mov    %rax,%rdi
    5a99:	e8 de 04 00 00       	call   5f7c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    5a9e:	48 89 c2             	mov    %rax,%rdx
    5aa1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5aa5:	48 89 d6             	mov    %rdx,%rsi
    5aa8:	48 89 c7             	mov    %rax,%rdi
    5aab:	e8 6c 04 00 00       	call   5f1c <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_>
    5ab0:	48 89 c6             	mov    %rax,%rsi
    5ab3:	48 89 df             	mov    %rbx,%rdi
    5ab6:	e8 cf 04 00 00       	call   5f8a <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm>
    5abb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5abf:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ac6:	48 8b 08             	mov    (%rax),%rcx
    5ac9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5acd:	48 89 d0             	mov    %rdx,%rax
    5ad0:	48 c1 e0 02          	shl    $0x2,%rax
    5ad4:	48 01 d0             	add    %rdx,%rax
    5ad7:	48 c1 e0 02          	shl    $0x2,%rax
    5adb:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    5adf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ae3:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    5ae7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5aeb:	48 89 c7             	mov    %rax,%rdi
    5aee:	e8 89 04 00 00       	call   5f7c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    5af3:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5af6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5afa:	48 8b 10             	mov    (%rax),%rdx
    5afd:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5b01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5b05:	48 89 c7             	mov    %rax,%rdi
    5b08:	e8 b0 04 00 00       	call   5fbd <_ZSt22__uninitialized_copy_aIPKN4rtvc6VertexEPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
    5b0d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5b11:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5b15:	90                   	nop
    5b16:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5b1a:	c9                   	leave
    5b1b:	c3                   	ret

0000000000005b1c <_ZNSt15__new_allocatorItEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5b1c:	55                   	push   %rbp
    5b1d:	48 89 e5             	mov    %rsp,%rbp
    5b20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b24:	90                   	nop
    5b25:	5d                   	pop    %rbp
    5b26:	c3                   	ret
    5b27:	90                   	nop

0000000000005b28 <_ZNSt15__new_allocatorItED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    5b28:	55                   	push   %rbp
    5b29:	48 89 e5             	mov    %rsp,%rbp
    5b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b30:	90                   	nop
    5b31:	5d                   	pop    %rbp
    5b32:	c3                   	ret
    5b33:	90                   	nop

0000000000005b34 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>:
      struct _Vector_impl
    5b34:	55                   	push   %rbp
    5b35:	48 89 e5             	mov    %rsp,%rbp
    5b38:	48 83 ec 10          	sub    $0x10,%rsp
    5b3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b44:	48 89 c7             	mov    %rax,%rdi
    5b47:	e8 9e fa ff ff       	call   55ea <_ZNSaItED1Ev>
    5b4c:	90                   	nop
    5b4d:	c9                   	leave
    5b4e:	c3                   	ret
    5b4f:	90                   	nop

0000000000005b50 <_ZNSt12_Vector_baseItSaItEEC1ERKS0_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    5b50:	55                   	push   %rbp
    5b51:	48 89 e5             	mov    %rsp,%rbp
    5b54:	48 83 ec 10          	sub    $0x10,%rsp
    5b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5b5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    5b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b64:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5b68:	48 89 d6             	mov    %rdx,%rsi
    5b6b:	48 89 c7             	mov    %rax,%rdi
    5b6e:	e8 7b 04 00 00       	call   5fee <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>
    5b73:	90                   	nop
    5b74:	c9                   	leave
    5b75:	c3                   	ret

0000000000005b76 <_ZNSt12_Vector_baseItSaItEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    5b76:	55                   	push   %rbp
    5b77:	48 89 e5             	mov    %rsp,%rbp
    5b7a:	48 83 ec 10          	sub    $0x10,%rsp
    5b7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    5b82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b86:	48 8b 50 10          	mov    0x10(%rax),%rdx
    5b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5b8e:	48 8b 00             	mov    (%rax),%rax
    5b91:	48 29 c2             	sub    %rax,%rdx
    5b94:	48 89 d0             	mov    %rdx,%rax
    5b97:	48 d1 f8             	sar    %rax
	_M_deallocate(_M_impl._M_start,
    5b9a:	48 89 c2             	mov    %rax,%rdx
    5b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba1:	48 8b 08             	mov    (%rax),%rcx
    5ba4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ba8:	48 89 ce             	mov    %rcx,%rsi
    5bab:	48 89 c7             	mov    %rax,%rdi
    5bae:	e8 6d 04 00 00       	call   6020 <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>
      }
    5bb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bb7:	48 89 c7             	mov    %rax,%rdi
    5bba:	e8 75 ff ff ff       	call   5b34 <_ZNSt12_Vector_baseItSaItEE12_Vector_implD1Ev>
    5bbf:	90                   	nop
    5bc0:	c9                   	leave
    5bc1:	c3                   	ret

0000000000005bc2 <_ZNKSt16initializer_listItE5beginEv>:
      begin() const noexcept { return _M_array; }
    5bc2:	55                   	push   %rbp
    5bc3:	48 89 e5             	mov    %rsp,%rbp
    5bc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5bca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5bce:	48 8b 00             	mov    (%rax),%rax
    5bd1:	5d                   	pop    %rbp
    5bd2:	c3                   	ret
    5bd3:	90                   	nop

0000000000005bd4 <_ZNKSt16initializer_listItE3endEv>:
      end() const noexcept { return begin() + size(); }
    5bd4:	55                   	push   %rbp
    5bd5:	48 89 e5             	mov    %rsp,%rbp
    5bd8:	53                   	push   %rbx
    5bd9:	48 83 ec 18          	sub    $0x18,%rsp
    5bdd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5be5:	48 89 c7             	mov    %rax,%rdi
    5be8:	e8 d5 ff ff ff       	call   5bc2 <_ZNKSt16initializer_listItE5beginEv>
    5bed:	48 89 c3             	mov    %rax,%rbx
    5bf0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5bf4:	48 89 c7             	mov    %rax,%rdi
    5bf7:	e8 5a 04 00 00       	call   6056 <_ZNKSt16initializer_listItE4sizeEv>
    5bfc:	48 01 c0             	add    %rax,%rax
    5bff:	48 01 d8             	add    %rbx,%rax
    5c02:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5c06:	c9                   	leave
    5c07:	c3                   	ret

0000000000005c08 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
    5c08:	55                   	push   %rbp
    5c09:	48 89 e5             	mov    %rsp,%rbp
    5c0c:	48 83 ec 10          	sub    $0x10,%rsp
    5c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5c14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    5c18:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5c1c:	48 89 c7             	mov    %rax,%rdi
    5c1f:	e8 44 04 00 00       	call   6068 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    5c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5c28:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5c2c:	48 89 d6             	mov    %rdx,%rsi
    5c2f:	48 89 c7             	mov    %rax,%rdi
    5c32:	e8 3c 04 00 00       	call   6073 <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    5c37:	c9                   	leave
    5c38:	c3                   	ret
    5c39:	90                   	nop

0000000000005c3a <_ZNSt6vectorItSaItEE19_M_range_initializeIPKtEEvT_S5_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    5c3a:	55                   	push   %rbp
    5c3b:	48 89 e5             	mov    %rsp,%rbp
    5c3e:	53                   	push   %rbx
    5c3f:	48 83 ec 38          	sub    $0x38,%rsp
    5c43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5c47:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5c4b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    5c4f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5c53:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5c57:	48 89 d6             	mov    %rdx,%rsi
    5c5a:	48 89 c7             	mov    %rax,%rdi
    5c5d:	e8 a6 ff ff ff       	call   5c08 <_ZSt8distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    5c62:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    5c66:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    5c6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c6e:	48 89 c7             	mov    %rax,%rdi
    5c71:	e8 76 04 00 00       	call   60ec <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    5c76:	48 89 c2             	mov    %rax,%rdx
    5c79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5c7d:	48 89 d6             	mov    %rdx,%rsi
    5c80:	48 89 c7             	mov    %rax,%rdi
    5c83:	e8 04 04 00 00       	call   608c <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>
    5c88:	48 89 c6             	mov    %rax,%rsi
    5c8b:	48 89 df             	mov    %rbx,%rdi
    5c8e:	e8 67 04 00 00       	call   60fa <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>
    5c93:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5c97:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5c9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5c9e:	48 8b 00             	mov    (%rax),%rax
    5ca1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ca5:	48 01 d2             	add    %rdx,%rdx
    5ca8:	48 01 c2             	add    %rax,%rdx
    5cab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5caf:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    5cb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5cb7:	48 89 c7             	mov    %rax,%rdi
    5cba:	e8 2d 04 00 00       	call   60ec <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    5cbf:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    5cc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5cc6:	48 8b 10             	mov    (%rax),%rdx
    5cc9:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    5ccd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5cd1:	48 89 c7             	mov    %rax,%rdi
    5cd4:	e8 54 04 00 00       	call   612d <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    5cd9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5cdd:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    5ce1:	90                   	nop
    5ce2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5ce6:	c9                   	leave
    5ce7:	c3                   	ret

0000000000005ce8 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    5ce8:	55                   	push   %rbp
    5ce9:	48 89 e5             	mov    %rsp,%rbp
    5cec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5cf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    5cf4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5cf8:	48 8b 10             	mov    (%rax),%rdx
    5cfb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5cff:	48 89 10             	mov    %rdx,(%rax)
    5d02:	90                   	nop
    5d03:	5d                   	pop    %rbp
    5d04:	c3                   	ret
    5d05:	90                   	nop

0000000000005d06 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    5d06:	55                   	push   %rbp
    5d07:	48 89 e5             	mov    %rsp,%rbp
    5d0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    5d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d12:	5d                   	pop    %rbp
    5d13:	c3                   	ret

0000000000005d14 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    5d14:	55                   	push   %rbp
    5d15:	48 89 e5             	mov    %rsp,%rbp
    5d18:	48 83 ec 20          	sub    $0x20,%rsp
    5d1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5d20:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5d27:	ff ff 0f 
    5d2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5d2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d32:	48 89 c7             	mov    %rax,%rdi
    5d35:	e8 24 04 00 00       	call   615e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    5d3a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    5d3e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    5d42:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5d46:	48 89 d6             	mov    %rdx,%rsi
    5d49:	48 89 c7             	mov    %rax,%rdi
    5d4c:	e8 27 04 00 00       	call   6178 <_ZSt3minImERKT_S2_S2_>
    5d51:	48 8b 00             	mov    (%rax),%rax
      }
    5d54:	c9                   	leave
    5d55:	c3                   	ret

0000000000005d56 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5d56:	55                   	push   %rbp
    5d57:	48 89 e5             	mov    %rsp,%rbp
    5d5a:	48 83 ec 10          	sub    $0x10,%rsp
    5d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5d66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d6e:	48 89 d6             	mov    %rdx,%rsi
    5d71:	48 89 c7             	mov    %rax,%rdi
    5d74:	e8 55 fb ff ff       	call   58ce <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    5d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5d7d:	48 89 c7             	mov    %rax,%rdi
    5d80:	e8 1f 04 00 00       	call   61a4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5d85:	90                   	nop
    5d86:	c9                   	leave
    5d87:	c3                   	ret

0000000000005d88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5d88:	55                   	push   %rbp
    5d89:	48 89 e5             	mov    %rsp,%rbp
    5d8c:	48 83 ec 10          	sub    $0x10,%rsp
    5d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5d98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5d9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5da0:	48 89 d6             	mov    %rdx,%rsi
    5da3:	48 89 c7             	mov    %rax,%rdi
    5da6:	e8 27 04 00 00       	call   61d2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    5dab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5daf:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    5db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5db6:	48 8b 10             	mov    (%rax),%rdx
    5db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dbd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dc5:	48 8b 00             	mov    (%rax),%rax
    5dc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5dcc:	48 c1 e2 03          	shl    $0x3,%rdx
    5dd0:	48 01 c2             	add    %rax,%rdx
    5dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dd7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5ddb:	90                   	nop
    5ddc:	c9                   	leave
    5ddd:	c3                   	ret

0000000000005dde <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5dde:	55                   	push   %rbp
    5ddf:	48 89 e5             	mov    %rsp,%rbp
    5de2:	48 83 ec 20          	sub    $0x20,%rsp
    5de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5dea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5dee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    5df2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5dfa:	48 89 d6             	mov    %rdx,%rsi
    5dfd:	48 89 c7             	mov    %rax,%rdi
    5e00:	e8 00 04 00 00       	call   6205 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    5e05:	c9                   	leave
    5e06:	c3                   	ret

0000000000005e07 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    5e07:	55                   	push   %rbp
    5e08:	48 89 e5             	mov    %rsp,%rbp
    5e0b:	48 83 ec 10          	sub    $0x10,%rsp
    5e0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    5e17:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e1f:	48 89 d6             	mov    %rdx,%rsi
    5e22:	48 89 c7             	mov    %rax,%rdi
    5e25:	e8 04 04 00 00       	call   622e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    5e2a:	90                   	nop
    5e2b:	c9                   	leave
    5e2c:	c3                   	ret
    5e2d:	90                   	nop

0000000000005e2e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5e2e:	55                   	push   %rbp
    5e2f:	48 89 e5             	mov    %rsp,%rbp
    5e32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e3a:	90                   	nop
    5e3b:	5d                   	pop    %rbp
    5e3c:	c3                   	ret

0000000000005e3d <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    5e3d:	55                   	push   %rbp
    5e3e:	48 89 e5             	mov    %rsp,%rbp
    5e41:	48 83 ec 20          	sub    $0x20,%rsp
    5e45:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e49:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5e4d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    5e51:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5e55:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e5d:	48 89 ce             	mov    %rcx,%rsi
    5e60:	48 89 c7             	mov    %rax,%rdi
    5e63:	e8 d6 03 00 00       	call   623e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    5e68:	90                   	nop
    5e69:	c9                   	leave
    5e6a:	c3                   	ret
    5e6b:	90                   	nop

0000000000005e6c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5e6c:	55                   	push   %rbp
    5e6d:	48 89 e5             	mov    %rsp,%rbp
    5e70:	48 83 ec 10          	sub    $0x10,%rsp
    5e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5e78:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5e7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5e80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e84:	48 89 d6             	mov    %rdx,%rsi
    5e87:	48 89 c7             	mov    %rax,%rdi
    5e8a:	e8 e1 03 00 00       	call   6270 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>
    5e8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e93:	48 89 c7             	mov    %rax,%rdi
    5e96:	e8 fb 03 00 00       	call   6296 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    5e9b:	90                   	nop
    5e9c:	c9                   	leave
    5e9d:	c3                   	ret

0000000000005e9e <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5e9e:	55                   	push   %rbp
    5e9f:	48 89 e5             	mov    %rsp,%rbp
    5ea2:	48 83 ec 20          	sub    $0x20,%rsp
    5ea6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5eaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5eae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    5eb2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5eb7:	74 17                	je     5ed0 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5eb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5ec1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5ec5:	48 89 ce             	mov    %rcx,%rsi
    5ec8:	48 89 c7             	mov    %rax,%rdi
    5ecb:	e8 f4 03 00 00       	call   62c4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE10deallocateERS2_PS1_m>
      }
    5ed0:	90                   	nop
    5ed1:	c9                   	leave
    5ed2:	c3                   	ret
    5ed3:	90                   	nop

0000000000005ed4 <_ZNKSt16initializer_listIN4rtvc6VertexEE4sizeEv>:
      size() const noexcept { return _M_len; }
    5ed4:	55                   	push   %rbp
    5ed5:	48 89 e5             	mov    %rsp,%rbp
    5ed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5edc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ee0:	48 8b 40 08          	mov    0x8(%rax),%rax
    5ee4:	5d                   	pop    %rbp
    5ee5:	c3                   	ret

0000000000005ee6 <_ZSt19__iterator_categoryIPKN4rtvc6VertexEENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    5ee6:	55                   	push   %rbp
    5ee7:	48 89 e5             	mov    %rsp,%rbp
    5eea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    5eee:	90                   	nop
    5eef:	5d                   	pop    %rbp
    5ef0:	c3                   	ret

0000000000005ef1 <_ZSt10__distanceIPKN4rtvc6VertexEENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    5ef1:	55                   	push   %rbp
    5ef2:	48 89 e5             	mov    %rsp,%rbp
    5ef5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ef9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    5efd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5f01:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    5f05:	48 c1 f8 02          	sar    $0x2,%rax
    5f09:	48 89 c2             	mov    %rax,%rdx
    5f0c:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    5f13:	cc cc cc 
    5f16:	48 0f af c2          	imul   %rdx,%rax
    }
    5f1a:	5d                   	pop    %rbp
    5f1b:	c3                   	ret

0000000000005f1c <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    5f1c:	55                   	push   %rbp
    5f1d:	48 89 e5             	mov    %rsp,%rbp
    5f20:	53                   	push   %rbx
    5f21:	48 83 ec 28          	sub    $0x28,%rsp
    5f25:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5f29:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5f2d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    5f31:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f35:	48 89 d6             	mov    %rdx,%rsi
    5f38:	48 89 c7             	mov    %rax,%rdi
    5f3b:	e8 30 03 00 00       	call   6270 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>
    5f40:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f44:	48 89 c7             	mov    %rax,%rdi
    5f47:	e8 a6 03 00 00       	call   62f2 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE11_S_max_sizeERKS2_>
    5f4c:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    5f50:	0f 92 c3             	setb   %bl
    5f53:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5f57:	48 89 c7             	mov    %rax,%rdi
    5f5a:	e8 cb f5 ff ff       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    5f5f:	84 db                	test   %bl,%bl
    5f61:	74 0f                	je     5f72 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    5f63:	48 8d 05 2e 47 01 00 	lea    0x1472e(%rip),%rax        # 1a698 <_ZN6__pstl9execution2v1L5unseqE+0xb1>
    5f6a:	48 89 c7             	mov    %rax,%rdi
    5f6d:	e8 3e e2 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    5f72:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5f76:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5f7a:	c9                   	leave
    5f7b:	c3                   	ret

0000000000005f7c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    5f7c:	55                   	push   %rbp
    5f7d:	48 89 e5             	mov    %rsp,%rbp
    5f80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    5f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5f88:	5d                   	pop    %rbp
    5f89:	c3                   	ret

0000000000005f8a <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5f8a:	55                   	push   %rbp
    5f8b:	48 89 e5             	mov    %rsp,%rbp
    5f8e:	48 83 ec 10          	sub    $0x10,%rsp
    5f92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5f96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5f9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5f9f:	74 15                	je     5fb6 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm+0x2c>
    5fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fa5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5fa9:	48 89 d6             	mov    %rdx,%rsi
    5fac:	48 89 c7             	mov    %rax,%rdi
    5faf:	e8 80 03 00 00       	call   6334 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8allocateERS2_m>
    5fb4:	eb 05                	jmp    5fbb <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE11_M_allocateEm+0x31>
    5fb6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5fbb:	c9                   	leave
    5fbc:	c3                   	ret

0000000000005fbd <_ZSt22__uninitialized_copy_aIPKN4rtvc6VertexEPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    5fbd:	55                   	push   %rbp
    5fbe:	48 89 e5             	mov    %rsp,%rbp
    5fc1:	48 83 ec 20          	sub    $0x20,%rsp
    5fc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fc9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5fcd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    5fd1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    5fd5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5fd9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5fdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fe1:	48 89 ce             	mov    %rcx,%rsi
    5fe4:	48 89 c7             	mov    %rax,%rdi
    5fe7:	e8 72 03 00 00       	call   635e <_ZSt18uninitialized_copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>
    }
    5fec:	c9                   	leave
    5fed:	c3                   	ret

0000000000005fee <_ZNSt12_Vector_baseItSaItEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    5fee:	55                   	push   %rbp
    5fef:	48 89 e5             	mov    %rsp,%rbp
    5ff2:	48 83 ec 10          	sub    $0x10,%rsp
    5ff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ffa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    5ffe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6002:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6006:	48 89 d6             	mov    %rdx,%rsi
    6009:	48 89 c7             	mov    %rax,%rdi
    600c:	e8 83 03 00 00       	call   6394 <_ZNSaItEC1ERKS_>
    6011:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6015:	48 89 c7             	mov    %rax,%rdi
    6018:	e8 9d 03 00 00       	call   63ba <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>
	{ }
    601d:	90                   	nop
    601e:	c9                   	leave
    601f:	c3                   	ret

0000000000006020 <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm>:
      _M_deallocate(pointer __p, size_t __n)
    6020:	55                   	push   %rbp
    6021:	48 89 e5             	mov    %rsp,%rbp
    6024:	48 83 ec 20          	sub    $0x20,%rsp
    6028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    602c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6030:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    6034:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6039:	74 17                	je     6052 <_ZNSt12_Vector_baseItSaItEE13_M_deallocateEPtm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    603b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    603f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6043:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6047:	48 89 ce             	mov    %rcx,%rsi
    604a:	48 89 c7             	mov    %rax,%rdi
    604d:	e8 96 03 00 00       	call   63e8 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>
      }
    6052:	90                   	nop
    6053:	c9                   	leave
    6054:	c3                   	ret
    6055:	90                   	nop

0000000000006056 <_ZNKSt16initializer_listItE4sizeEv>:
    6056:	55                   	push   %rbp
    6057:	48 89 e5             	mov    %rsp,%rbp
    605a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    605e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6062:	48 8b 40 08          	mov    0x8(%rax),%rax
    6066:	5d                   	pop    %rbp
    6067:	c3                   	ret

0000000000006068 <_ZSt19__iterator_categoryIPKtENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    6068:	55                   	push   %rbp
    6069:	48 89 e5             	mov    %rsp,%rbp
    606c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    6070:	90                   	nop
    6071:	5d                   	pop    %rbp
    6072:	c3                   	ret

0000000000006073 <_ZSt10__distanceIPKtENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    6073:	55                   	push   %rbp
    6074:	48 89 e5             	mov    %rsp,%rbp
    6077:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    607b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    607f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6083:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    6087:	48 d1 f8             	sar    %rax
    }
    608a:	5d                   	pop    %rbp
    608b:	c3                   	ret

000000000000608c <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    608c:	55                   	push   %rbp
    608d:	48 89 e5             	mov    %rsp,%rbp
    6090:	53                   	push   %rbx
    6091:	48 83 ec 28          	sub    $0x28,%rsp
    6095:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6099:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    609d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    60a1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60a5:	48 89 d6             	mov    %rdx,%rsi
    60a8:	48 89 c7             	mov    %rax,%rdi
    60ab:	e8 e4 02 00 00       	call   6394 <_ZNSaItEC1ERKS_>
    60b0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60b4:	48 89 c7             	mov    %rax,%rdi
    60b7:	e8 5a 03 00 00       	call   6416 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>
    60bc:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    60c0:	0f 92 c3             	setb   %bl
    60c3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    60c7:	48 89 c7             	mov    %rax,%rdi
    60ca:	e8 1b f5 ff ff       	call   55ea <_ZNSaItED1Ev>
    60cf:	84 db                	test   %bl,%bl
    60d1:	74 0f                	je     60e2 <_ZNSt6vectorItSaItEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    60d3:	48 8d 05 be 45 01 00 	lea    0x145be(%rip),%rax        # 1a698 <_ZN6__pstl9execution2v1L5unseqE+0xb1>
    60da:	48 89 c7             	mov    %rax,%rdi
    60dd:	e8 ce e0 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    60e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    60e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    60ea:	c9                   	leave
    60eb:	c3                   	ret

00000000000060ec <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    60ec:	55                   	push   %rbp
    60ed:	48 89 e5             	mov    %rsp,%rbp
    60f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    60f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60f8:	5d                   	pop    %rbp
    60f9:	c3                   	ret

00000000000060fa <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    60fa:	55                   	push   %rbp
    60fb:	48 89 e5             	mov    %rsp,%rbp
    60fe:	48 83 ec 10          	sub    $0x10,%rsp
    6102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6106:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    610a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    610f:	74 15                	je     6126 <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x2c>
    6111:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6115:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6119:	48 89 d6             	mov    %rdx,%rsi
    611c:	48 89 c7             	mov    %rax,%rdi
    611f:	e8 34 03 00 00       	call   6458 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>
    6124:	eb 05                	jmp    612b <_ZNSt12_Vector_baseItSaItEE11_M_allocateEm+0x31>
    6126:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    612b:	c9                   	leave
    612c:	c3                   	ret

000000000000612d <_ZSt22__uninitialized_copy_aIPKtPttET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
    612d:	55                   	push   %rbp
    612e:	48 89 e5             	mov    %rsp,%rbp
    6131:	48 83 ec 20          	sub    $0x20,%rsp
    6135:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6139:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    613d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    6141:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
    6145:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6149:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    614d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6151:	48 89 ce             	mov    %rcx,%rsi
    6154:	48 89 c7             	mov    %rax,%rdi
    6157:	e8 26 03 00 00       	call   6482 <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>
    }
    615c:	c9                   	leave
    615d:	c3                   	ret

000000000000615e <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    615e:	55                   	push   %rbp
    615f:	48 89 e5             	mov    %rsp,%rbp
    6162:	48 83 ec 10          	sub    $0x10,%rsp
    6166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    616a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    616e:	48 89 c7             	mov    %rax,%rdi
    6171:	e8 42 03 00 00       	call   64b8 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    6176:	c9                   	leave
    6177:	c3                   	ret

0000000000006178 <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    6178:	55                   	push   %rbp
    6179:	48 89 e5             	mov    %rsp,%rbp
    617c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6180:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    6184:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6188:	48 8b 10             	mov    (%rax),%rdx
    618b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    618f:	48 8b 00             	mov    (%rax),%rax
    6192:	48 39 c2             	cmp    %rax,%rdx
    6195:	73 06                	jae    619d <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    6197:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    619b:	eb 04                	jmp    61a1 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    619d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    61a1:	5d                   	pop    %rbp
    61a2:	c3                   	ret
    61a3:	90                   	nop

00000000000061a4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    61a4:	55                   	push   %rbp
    61a5:	48 89 e5             	mov    %rsp,%rbp
    61a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    61ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61b0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    61b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61bb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    61c2:	00 
    61c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61c7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    61ce:	00 
	{ }
    61cf:	90                   	nop
    61d0:	5d                   	pop    %rbp
    61d1:	c3                   	ret

00000000000061d2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    61d2:	55                   	push   %rbp
    61d3:	48 89 e5             	mov    %rsp,%rbp
    61d6:	48 83 ec 10          	sub    $0x10,%rsp
    61da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    61e2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    61e7:	74 15                	je     61fe <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    61e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    61f1:	48 89 d6             	mov    %rdx,%rsi
    61f4:	48 89 c7             	mov    %rax,%rdi
    61f7:	e8 d6 02 00 00       	call   64d2 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    61fc:	eb 05                	jmp    6203 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    61fe:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6203:	c9                   	leave
    6204:	c3                   	ret

0000000000006205 <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6205:	55                   	push   %rbp
    6206:	48 89 e5             	mov    %rsp,%rbp
    6209:	48 83 ec 20          	sub    $0x20,%rsp
    620d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6211:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6215:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    6219:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    621d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6221:	48 89 d6             	mov    %rdx,%rsi
    6224:	48 89 c7             	mov    %rax,%rdi
    6227:	e8 d0 02 00 00       	call   64fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    622c:	c9                   	leave
    622d:	c3                   	ret

000000000000622e <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    622e:	55                   	push   %rbp
    622f:	48 89 e5             	mov    %rsp,%rbp
    6232:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6236:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    623a:	90                   	nop
    623b:	5d                   	pop    %rbp
    623c:	c3                   	ret
    623d:	90                   	nop

000000000000623e <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    623e:	55                   	push   %rbp
    623f:	48 89 e5             	mov    %rsp,%rbp
    6242:	48 83 ec 20          	sub    $0x20,%rsp
    6246:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    624a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    624e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6256:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    625d:	00 
    625e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6262:	48 89 d6             	mov    %rdx,%rsi
    6265:	48 89 c7             	mov    %rax,%rdi
    6268:	e8 d3 e1 ff ff       	call   4440 <_ZdlPvm@plt>
      }
    626d:	c9                   	leave
    626e:	c3                   	ret
    626f:	90                   	nop

0000000000006270 <_ZNSaIN4rtvc6VertexEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6270:	55                   	push   %rbp
    6271:	48 89 e5             	mov    %rsp,%rbp
    6274:	48 83 ec 10          	sub    $0x10,%rsp
    6278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    627c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    6280:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6288:	48 89 d6             	mov    %rdx,%rsi
    628b:	48 89 c7             	mov    %rax,%rdi
    628e:	e8 c7 02 00 00       	call   655a <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1ERKS2_>
    6293:	90                   	nop
    6294:	c9                   	leave
    6295:	c3                   	ret

0000000000006296 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6296:	55                   	push   %rbp
    6297:	48 89 e5             	mov    %rsp,%rbp
    629a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    629e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    62a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62ad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    62b4:	00 
    62b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    62c0:	00 
	{ }
    62c1:	90                   	nop
    62c2:	5d                   	pop    %rbp
    62c3:	c3                   	ret

00000000000062c4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    62c4:	55                   	push   %rbp
    62c5:	48 89 e5             	mov    %rsp,%rbp
    62c8:	48 83 ec 20          	sub    $0x20,%rsp
    62cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    62d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    62dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    62e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e4:	48 89 ce             	mov    %rcx,%rsi
    62e7:	48 89 c7             	mov    %rax,%rdi
    62ea:	e8 7b 02 00 00       	call   656a <_ZNSt15__new_allocatorIN4rtvc6VertexEE10deallocateEPS1_m>
    62ef:	90                   	nop
    62f0:	c9                   	leave
    62f1:	c3                   	ret

00000000000062f2 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    62f2:	55                   	push   %rbp
    62f3:	48 89 e5             	mov    %rsp,%rbp
    62f6:	48 83 ec 20          	sub    $0x20,%rsp
    62fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    62fe:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    6305:	66 66 06 
    6308:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    630c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6310:	48 89 c7             	mov    %rax,%rdi
    6313:	e8 8c 02 00 00       	call   65a4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8max_sizeERKS2_>
    6318:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    631c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6320:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6324:	48 89 d6             	mov    %rdx,%rsi
    6327:	48 89 c7             	mov    %rax,%rdi
    632a:	e8 49 fe ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
    632f:	48 8b 00             	mov    (%rax),%rax
      }
    6332:	c9                   	leave
    6333:	c3                   	ret

0000000000006334 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    6334:	55                   	push   %rbp
    6335:	48 89 e5             	mov    %rsp,%rbp
    6338:	48 83 ec 10          	sub    $0x10,%rsp
    633c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6340:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6344:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    634c:	ba 00 00 00 00       	mov    $0x0,%edx
    6351:	48 89 ce             	mov    %rcx,%rsi
    6354:	48 89 c7             	mov    %rax,%rdi
    6357:	e8 62 02 00 00       	call   65be <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv>
    635c:	c9                   	leave
    635d:	c3                   	ret

000000000000635e <_ZSt18uninitialized_copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    635e:	55                   	push   %rbp
    635f:	48 89 e5             	mov    %rsp,%rbp
    6362:	48 83 ec 30          	sub    $0x30,%rsp
    6366:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    636a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    636e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6372:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    6376:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    637a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    637e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6386:	48 89 ce             	mov    %rcx,%rsi
    6389:	48 89 c7             	mov    %rax,%rdi
    638c:	e8 98 02 00 00       	call   6629 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN4rtvc6VertexEPS3_EET0_T_S8_S7_>
    }
    6391:	c9                   	leave
    6392:	c3                   	ret
    6393:	90                   	nop

0000000000006394 <_ZNSaItEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    6394:	55                   	push   %rbp
    6395:	48 89 e5             	mov    %rsp,%rbp
    6398:	48 83 ec 10          	sub    $0x10,%rsp
    639c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    63a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    63a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63ac:	48 89 d6             	mov    %rdx,%rsi
    63af:	48 89 c7             	mov    %rax,%rdi
    63b2:	e8 9f 02 00 00       	call   6656 <_ZNSt15__new_allocatorItEC1ERKS0_>
    63b7:	90                   	nop
    63b8:	c9                   	leave
    63b9:	c3                   	ret

00000000000063ba <_ZNSt12_Vector_baseItSaItEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    63ba:	55                   	push   %rbp
    63bb:	48 89 e5             	mov    %rsp,%rbp
    63be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    63c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63c6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    63cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    63d8:	00 
    63d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63dd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    63e4:	00 
	{ }
    63e5:	90                   	nop
    63e6:	5d                   	pop    %rbp
    63e7:	c3                   	ret

00000000000063e8 <_ZNSt16allocator_traitsISaItEE10deallocateERS0_Ptm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    63e8:	55                   	push   %rbp
    63e9:	48 89 e5             	mov    %rsp,%rbp
    63ec:	48 83 ec 20          	sub    $0x20,%rsp
    63f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63f8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    63fc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6400:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6404:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6408:	48 89 ce             	mov    %rcx,%rsi
    640b:	48 89 c7             	mov    %rax,%rdi
    640e:	e8 53 02 00 00       	call   6666 <_ZNSt15__new_allocatorItE10deallocateEPtm>
    6413:	90                   	nop
    6414:	c9                   	leave
    6415:	c3                   	ret

0000000000006416 <_ZNSt6vectorItSaItEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6416:	55                   	push   %rbp
    6417:	48 89 e5             	mov    %rsp,%rbp
    641a:	48 83 ec 20          	sub    $0x20,%rsp
    641e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6422:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    6429:	ff ff 3f 
    642c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    6430:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6434:	48 89 c7             	mov    %rax,%rdi
    6437:	e8 57 02 00 00       	call   6693 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>
    643c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    6440:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6444:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6448:	48 89 d6             	mov    %rdx,%rsi
    644b:	48 89 c7             	mov    %rax,%rdi
    644e:	e8 25 fd ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
    6453:	48 8b 00             	mov    (%rax),%rax
      }
    6456:	c9                   	leave
    6457:	c3                   	ret

0000000000006458 <_ZNSt16allocator_traitsISaItEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6458:	55                   	push   %rbp
    6459:	48 89 e5             	mov    %rsp,%rbp
    645c:	48 83 ec 10          	sub    $0x10,%rsp
    6460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6468:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    646c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6470:	ba 00 00 00 00       	mov    $0x0,%edx
    6475:	48 89 ce             	mov    %rcx,%rsi
    6478:	48 89 c7             	mov    %rax,%rdi
    647b:	e8 2e 02 00 00       	call   66ae <_ZNSt15__new_allocatorItE8allocateEmPKv>
    6480:	c9                   	leave
    6481:	c3                   	ret

0000000000006482 <_ZSt18uninitialized_copyIPKtPtET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
    6482:	55                   	push   %rbp
    6483:	48 89 e5             	mov    %rsp,%rbp
    6486:	48 83 ec 30          	sub    $0x30,%rsp
    648a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    648e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6492:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
    6496:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
    649a:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
    649e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    64a2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    64a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    64aa:	48 89 ce             	mov    %rcx,%rsi
    64ad:	48 89 c7             	mov    %rax,%rdi
    64b0:	e8 52 02 00 00       	call   6707 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>
    }
    64b5:	c9                   	leave
    64b6:	c3                   	ret
    64b7:	90                   	nop

00000000000064b8 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    64b8:	55                   	push   %rbp
    64b9:	48 89 e5             	mov    %rsp,%rbp
    64bc:	48 83 ec 10          	sub    $0x10,%rsp
    64c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    64c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c8:	48 89 c7             	mov    %rax,%rdi
    64cb:	e8 64 02 00 00       	call   6734 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    64d0:	c9                   	leave
    64d1:	c3                   	ret

00000000000064d2 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    64d2:	55                   	push   %rbp
    64d3:	48 89 e5             	mov    %rsp,%rbp
    64d6:	48 83 ec 10          	sub    $0x10,%rsp
    64da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    64e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    64e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ea:	ba 00 00 00 00       	mov    $0x0,%edx
    64ef:	48 89 ce             	mov    %rcx,%rsi
    64f2:	48 89 c7             	mov    %rax,%rdi
    64f5:	e8 4e 02 00 00       	call   6748 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    64fa:	c9                   	leave
    64fb:	c3                   	ret

00000000000064fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    64fc:	55                   	push   %rbp
    64fd:	48 89 e5             	mov    %rsp,%rbp
    6500:	48 83 ec 20          	sub    $0x20,%rsp
    6504:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6508:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    650c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    6511:	74 40                	je     6553 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    6513:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6517:	48 89 c7             	mov    %rax,%rdi
    651a:	e8 8a 02 00 00       	call   67a9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    651f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    6523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6527:	48 89 c7             	mov    %rax,%rdi
    652a:	e8 88 02 00 00       	call   67b7 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    652f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    6534:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6538:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    653c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6540:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6544:	48 89 ce             	mov    %rcx,%rsi
    6547:	48 89 c7             	mov    %rax,%rdi
    654a:	e8 8f 02 00 00       	call   67de <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    654f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6557:	c9                   	leave
    6558:	c3                   	ret
    6559:	90                   	nop

000000000000655a <_ZNSt15__new_allocatorIN4rtvc6VertexEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    655a:	55                   	push   %rbp
    655b:	48 89 e5             	mov    %rsp,%rbp
    655e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6562:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6566:	90                   	nop
    6567:	5d                   	pop    %rbp
    6568:	c3                   	ret
    6569:	90                   	nop

000000000000656a <_ZNSt15__new_allocatorIN4rtvc6VertexEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    656a:	55                   	push   %rbp
    656b:	48 89 e5             	mov    %rsp,%rbp
    656e:	48 83 ec 20          	sub    $0x20,%rsp
    6572:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6576:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    657a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    657e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6582:	48 89 d0             	mov    %rdx,%rax
    6585:	48 c1 e0 02          	shl    $0x2,%rax
    6589:	48 01 d0             	add    %rdx,%rax
    658c:	48 c1 e0 02          	shl    $0x2,%rax
    6590:	48 89 c2             	mov    %rax,%rdx
    6593:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6597:	48 89 d6             	mov    %rdx,%rsi
    659a:	48 89 c7             	mov    %rax,%rdi
    659d:	e8 9e de ff ff       	call   4440 <_ZdlPvm@plt>
      }
    65a2:	c9                   	leave
    65a3:	c3                   	ret

00000000000065a4 <_ZNSt16allocator_traitsISaIN4rtvc6VertexEEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    65a4:	55                   	push   %rbp
    65a5:	48 89 e5             	mov    %rsp,%rbp
    65a8:	48 83 ec 10          	sub    $0x10,%rsp
    65ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    65b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65b4:	48 89 c7             	mov    %rax,%rdi
    65b7:	e8 66 02 00 00       	call   6822 <_ZNKSt15__new_allocatorIN4rtvc6VertexEE8max_sizeEv>
      }
    65bc:	c9                   	leave
    65bd:	c3                   	ret

00000000000065be <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    65be:	55                   	push   %rbp
    65bf:	48 89 e5             	mov    %rsp,%rbp
    65c2:	48 83 ec 20          	sub    $0x20,%rsp
    65c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    65ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    65ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    65d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65d6:	48 89 c7             	mov    %rax,%rdi
    65d9:	e8 5e 02 00 00       	call   683c <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>
    65de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    65e2:	0f 92 c0             	setb   %al
    65e5:	0f b6 c0             	movzbl %al,%eax
    65e8:	48 85 c0             	test   %rax,%rax
    65eb:	0f 95 c0             	setne  %al
    65ee:	84 c0                	test   %al,%al
    65f0:	74 1a                	je     660c <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    65f2:	48 b8 cc cc cc cc cc 	movabs $0xccccccccccccccc,%rax
    65f9:	cc cc 0c 
    65fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6600:	73 05                	jae    6607 <_ZNSt15__new_allocatorIN4rtvc6VertexEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    6602:	e8 b9 dc ff ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6607:	e8 e4 da ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    660c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6610:	48 89 d0             	mov    %rdx,%rax
    6613:	48 c1 e0 02          	shl    $0x2,%rax
    6617:	48 01 d0             	add    %rdx,%rax
    661a:	48 c1 e0 02          	shl    $0x2,%rax
    661e:	48 89 c7             	mov    %rax,%rdi
    6621:	e8 fa dd ff ff       	call   4420 <_Znwm@plt>
    6626:	90                   	nop
      }
    6627:	c9                   	leave
    6628:	c3                   	ret

0000000000006629 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKN4rtvc6VertexEPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6629:	55                   	push   %rbp
    662a:	48 89 e5             	mov    %rsp,%rbp
    662d:	48 83 ec 20          	sub    $0x20,%rsp
    6631:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6635:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6639:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    663d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6641:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6649:	48 89 ce             	mov    %rcx,%rsi
    664c:	48 89 c7             	mov    %rax,%rdi
    664f:	e8 fc 01 00 00       	call   6850 <_ZSt4copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>
    6654:	c9                   	leave
    6655:	c3                   	ret

0000000000006656 <_ZNSt15__new_allocatorItEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    6656:	55                   	push   %rbp
    6657:	48 89 e5             	mov    %rsp,%rbp
    665a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    665e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6662:	90                   	nop
    6663:	5d                   	pop    %rbp
    6664:	c3                   	ret
    6665:	90                   	nop

0000000000006666 <_ZNSt15__new_allocatorItE10deallocateEPtm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    6666:	55                   	push   %rbp
    6667:	48 89 e5             	mov    %rsp,%rbp
    666a:	48 83 ec 20          	sub    $0x20,%rsp
    666e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6676:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    667a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    667e:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6682:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6686:	48 89 d6             	mov    %rdx,%rsi
    6689:	48 89 c7             	mov    %rax,%rdi
    668c:	e8 af dd ff ff       	call   4440 <_ZdlPvm@plt>
      }
    6691:	c9                   	leave
    6692:	c3                   	ret

0000000000006693 <_ZNSt16allocator_traitsISaItEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    6693:	55                   	push   %rbp
    6694:	48 89 e5             	mov    %rsp,%rbp
    6697:	48 83 ec 10          	sub    $0x10,%rsp
    669b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    669f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66a3:	48 89 c7             	mov    %rax,%rdi
    66a6:	e8 f1 01 00 00       	call   689c <_ZNKSt15__new_allocatorItE8max_sizeEv>
      }
    66ab:	c9                   	leave
    66ac:	c3                   	ret
    66ad:	90                   	nop

00000000000066ae <_ZNSt15__new_allocatorItE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    66ae:	55                   	push   %rbp
    66af:	48 89 e5             	mov    %rsp,%rbp
    66b2:	48 83 ec 20          	sub    $0x20,%rsp
    66b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66be:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    66c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66c6:	48 89 c7             	mov    %rax,%rdi
    66c9:	e8 e8 01 00 00       	call   68b6 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    66ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    66d2:	0f 92 c0             	setb   %al
    66d5:	0f b6 c0             	movzbl %al,%eax
    66d8:	48 85 c0             	test   %rax,%rax
    66db:	0f 95 c0             	setne  %al
    66de:	84 c0                	test   %al,%al
    66e0:	74 13                	je     66f5 <_ZNSt15__new_allocatorItE8allocateEmPKv+0x47>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    66e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66e6:	48 85 c0             	test   %rax,%rax
    66e9:	79 05                	jns    66f0 <_ZNSt15__new_allocatorItE8allocateEmPKv+0x42>
	      std::__throw_bad_array_new_length();
    66eb:	e8 d0 db ff ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    66f0:	e8 fb d9 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    66f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66f9:	48 01 c0             	add    %rax,%rax
    66fc:	48 89 c7             	mov    %rax,%rdi
    66ff:	e8 1c dd ff ff       	call   4420 <_Znwm@plt>
    6704:	90                   	nop
      }
    6705:	c9                   	leave
    6706:	c3                   	ret

0000000000006707 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKtPtEET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
    6707:	55                   	push   %rbp
    6708:	48 89 e5             	mov    %rsp,%rbp
    670b:	48 83 ec 20          	sub    $0x20,%rsp
    670f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6713:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6717:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
    671b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    671f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6723:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6727:	48 89 ce             	mov    %rcx,%rsi
    672a:	48 89 c7             	mov    %rax,%rdi
    672d:	e8 98 01 00 00       	call   68ca <_ZSt4copyIPKtPtET0_T_S4_S3_>
    6732:	c9                   	leave
    6733:	c3                   	ret

0000000000006734 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    6734:	55                   	push   %rbp
    6735:	48 89 e5             	mov    %rsp,%rbp
    6738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    673c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    6743:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    6746:	5d                   	pop    %rbp
    6747:	c3                   	ret

0000000000006748 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    6748:	55                   	push   %rbp
    6749:	48 89 e5             	mov    %rsp,%rbp
    674c:	48 83 ec 20          	sub    $0x20,%rsp
    6750:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6754:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6758:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    675c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6760:	48 89 c7             	mov    %rax,%rdi
    6763:	e8 cc ff ff ff       	call   6734 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    6768:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    676c:	0f 92 c0             	setb   %al
    676f:	0f b6 c0             	movzbl %al,%eax
    6772:	48 85 c0             	test   %rax,%rax
    6775:	0f 95 c0             	setne  %al
    6778:	84 c0                	test   %al,%al
    677a:	74 1a                	je     6796 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    677c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    6783:	ff ff 1f 
    6786:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    678a:	73 05                	jae    6791 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    678c:	e8 2f db ff ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    6791:	e8 5a d9 ff ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6796:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    679a:	48 c1 e0 03          	shl    $0x3,%rax
    679e:	48 89 c7             	mov    %rax,%rdi
    67a1:	e8 7a dc ff ff       	call   4420 <_Znwm@plt>
    67a6:	90                   	nop
      }
    67a7:	c9                   	leave
    67a8:	c3                   	ret

00000000000067a9 <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    67a9:	55                   	push   %rbp
    67aa:	48 89 e5             	mov    %rsp,%rbp
    67ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    67b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b5:	5d                   	pop    %rbp
    67b6:	c3                   	ret

00000000000067b7 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    67b7:	55                   	push   %rbp
    67b8:	48 89 e5             	mov    %rsp,%rbp
    67bb:	48 83 ec 10          	sub    $0x10,%rsp
    67bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    67c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67c7:	48 89 c6             	mov    %rax,%rsi
    67ca:	bf 08 00 00 00       	mov    $0x8,%edi
    67cf:	e8 99 eb ff ff       	call   536d <_ZnwmPv>
    67d4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    67db:	90                   	nop
    67dc:	c9                   	leave
    67dd:	c3                   	ret

00000000000067de <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    67de:	55                   	push   %rbp
    67df:	48 89 e5             	mov    %rsp,%rbp
    67e2:	48 83 ec 20          	sub    $0x20,%rsp
    67e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67ee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    67f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    67f6:	48 89 c7             	mov    %rax,%rdi
    67f9:	e8 17 01 00 00       	call   6915 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    67fe:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6802:	48 89 c7             	mov    %rax,%rdi
    6805:	e8 75 eb ff ff       	call   537f <_ZSt17__size_to_integerm>
    680a:	48 89 c1             	mov    %rax,%rcx
    680d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6811:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6815:	48 89 ce             	mov    %rcx,%rsi
    6818:	48 89 c7             	mov    %rax,%rdi
    681b:	e8 00 01 00 00       	call   6920 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    6820:	c9                   	leave
    6821:	c3                   	ret

0000000000006822 <_ZNKSt15__new_allocatorIN4rtvc6VertexEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6822:	55                   	push   %rbp
    6823:	48 89 e5             	mov    %rsp,%rbp
    6826:	48 83 ec 10          	sub    $0x10,%rsp
    682a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    682e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6832:	48 89 c7             	mov    %rax,%rdi
    6835:	e8 02 00 00 00       	call   683c <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>
    683a:	c9                   	leave
    683b:	c3                   	ret

000000000000683c <_ZNKSt15__new_allocatorIN4rtvc6VertexEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    683c:	55                   	push   %rbp
    683d:	48 89 e5             	mov    %rsp,%rbp
    6840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6844:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
    684b:	66 66 06 
      }
    684e:	5d                   	pop    %rbp
    684f:	c3                   	ret

0000000000006850 <_ZSt4copyIPKN4rtvc6VertexEPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
    6850:	55                   	push   %rbp
    6851:	48 89 e5             	mov    %rsp,%rbp
    6854:	53                   	push   %rbx
    6855:	48 83 ec 28          	sub    $0x28,%rsp
    6859:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    685d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6861:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    6865:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6869:	48 89 c7             	mov    %rax,%rdi
    686c:	e8 0c 01 00 00       	call   697d <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>
    6871:	48 89 c3             	mov    %rax,%rbx
    6874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6878:	48 89 c7             	mov    %rax,%rdi
    687b:	e8 fd 00 00 00       	call   697d <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>
    6880:	48 89 c1             	mov    %rax,%rcx
    6883:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6887:	48 89 c2             	mov    %rax,%rdx
    688a:	48 89 de             	mov    %rbx,%rsi
    688d:	48 89 cf             	mov    %rcx,%rdi
    6890:	e8 f6 00 00 00       	call   698b <_ZSt13__copy_move_aILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    }
    6895:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6899:	c9                   	leave
    689a:	c3                   	ret
    689b:	90                   	nop

000000000000689c <_ZNKSt15__new_allocatorItE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    689c:	55                   	push   %rbp
    689d:	48 89 e5             	mov    %rsp,%rbp
    68a0:	48 83 ec 10          	sub    $0x10,%rsp
    68a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    68a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68ac:	48 89 c7             	mov    %rax,%rdi
    68af:	e8 02 00 00 00       	call   68b6 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>
    68b4:	c9                   	leave
    68b5:	c3                   	ret

00000000000068b6 <_ZNKSt15__new_allocatorItE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    68b6:	55                   	push   %rbp
    68b7:	48 89 e5             	mov    %rsp,%rbp
    68ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    68be:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    68c5:	ff ff 3f 
      }
    68c8:	5d                   	pop    %rbp
    68c9:	c3                   	ret

00000000000068ca <_ZSt4copyIPKtPtET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
    68ca:	55                   	push   %rbp
    68cb:	48 89 e5             	mov    %rsp,%rbp
    68ce:	53                   	push   %rbx
    68cf:	48 83 ec 28          	sub    $0x28,%rsp
    68d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    68d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    68db:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
    68df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    68e3:	48 89 c7             	mov    %rax,%rdi
    68e6:	e8 0a 01 00 00       	call   69f5 <_ZSt12__miter_baseIPKtET_S2_>
    68eb:	48 89 c3             	mov    %rax,%rbx
    68ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    68f2:	48 89 c7             	mov    %rax,%rdi
    68f5:	e8 fb 00 00 00       	call   69f5 <_ZSt12__miter_baseIPKtET_S2_>
    68fa:	48 89 c1             	mov    %rax,%rcx
    68fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6901:	48 89 c2             	mov    %rax,%rdx
    6904:	48 89 de             	mov    %rbx,%rsi
    6907:	48 89 cf             	mov    %rcx,%rdi
    690a:	e8 f4 00 00 00       	call   6a03 <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>
    }
    690f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6913:	c9                   	leave
    6914:	c3                   	ret

0000000000006915 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    6915:	55                   	push   %rbp
    6916:	48 89 e5             	mov    %rsp,%rbp
    6919:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    691d:	90                   	nop
    691e:	5d                   	pop    %rbp
    691f:	c3                   	ret

0000000000006920 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    6920:	55                   	push   %rbp
    6921:	48 89 e5             	mov    %rsp,%rbp
    6924:	48 83 ec 20          	sub    $0x20,%rsp
    6928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    692c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    6934:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6939:	75 06                	jne    6941 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    693b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    693f:	eb 3a                	jmp    697b <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    6941:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6945:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    694c:	00 
    694d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6951:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    6955:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6959:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    695d:	48 89 ce             	mov    %rcx,%rsi
    6960:	48 89 c7             	mov    %rax,%rdi
    6963:	e8 05 01 00 00       	call   6a6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    6968:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    696c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6973:	00 
    6974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6978:	48 01 d0             	add    %rdx,%rax
    }
    697b:	c9                   	leave
    697c:	c3                   	ret

000000000000697d <_ZSt12__miter_baseIPKN4rtvc6VertexEET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
    697d:	55                   	push   %rbp
    697e:	48 89 e5             	mov    %rsp,%rbp
    6981:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6989:	5d                   	pop    %rbp
    698a:	c3                   	ret

000000000000698b <_ZSt13__copy_move_aILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    698b:	55                   	push   %rbp
    698c:	48 89 e5             	mov    %rsp,%rbp
    698f:	41 54                	push   %r12
    6991:	53                   	push   %rbx
    6992:	48 83 ec 20          	sub    $0x20,%rsp
    6996:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    699a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    699e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    69a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69a6:	48 89 c7             	mov    %rax,%rdi
    69a9:	e8 fb 00 00 00       	call   6aa9 <_ZSt12__niter_baseIPN4rtvc6VertexEET_S3_>
    69ae:	49 89 c4             	mov    %rax,%r12
    69b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    69b5:	48 89 c7             	mov    %rax,%rdi
    69b8:	e8 de 00 00 00       	call   6a9b <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>
    69bd:	48 89 c3             	mov    %rax,%rbx
    69c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69c4:	48 89 c7             	mov    %rax,%rdi
    69c7:	e8 cf 00 00 00       	call   6a9b <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>
    69cc:	4c 89 e2             	mov    %r12,%rdx
    69cf:	48 89 de             	mov    %rbx,%rsi
    69d2:	48 89 c7             	mov    %rax,%rdi
    69d5:	e8 dd 00 00 00       	call   6ab7 <_ZSt14__copy_move_a1ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    69da:	48 89 c2             	mov    %rax,%rdx
    69dd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    69e1:	48 89 d6             	mov    %rdx,%rsi
    69e4:	48 89 c7             	mov    %rax,%rdi
    69e7:	e8 f8 00 00 00       	call   6ae4 <_ZSt12__niter_wrapIPN4rtvc6VertexEET_RKS3_S3_>
    }
    69ec:	48 83 c4 20          	add    $0x20,%rsp
    69f0:	5b                   	pop    %rbx
    69f1:	41 5c                	pop    %r12
    69f3:	5d                   	pop    %rbp
    69f4:	c3                   	ret

00000000000069f5 <_ZSt12__miter_baseIPKtET_S2_>:
    __miter_base(_Iterator __it)
    69f5:	55                   	push   %rbp
    69f6:	48 89 e5             	mov    %rsp,%rbp
    69f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    69fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a01:	5d                   	pop    %rbp
    6a02:	c3                   	ret

0000000000006a03 <_ZSt13__copy_move_aILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
    6a03:	55                   	push   %rbp
    6a04:	48 89 e5             	mov    %rsp,%rbp
    6a07:	41 54                	push   %r12
    6a09:	53                   	push   %rbx
    6a0a:	48 83 ec 20          	sub    $0x20,%rsp
    6a0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6a12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6a16:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
    6a1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6a1e:	48 89 c7             	mov    %rax,%rdi
    6a21:	e8 de 00 00 00       	call   6b04 <_ZSt12__niter_baseIPtET_S1_>
    6a26:	49 89 c4             	mov    %rax,%r12
    6a29:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a2d:	48 89 c7             	mov    %rax,%rdi
    6a30:	e8 c1 00 00 00       	call   6af6 <_ZSt12__niter_baseIPKtET_S2_>
    6a35:	48 89 c3             	mov    %rax,%rbx
    6a38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a3c:	48 89 c7             	mov    %rax,%rdi
    6a3f:	e8 b2 00 00 00       	call   6af6 <_ZSt12__niter_baseIPKtET_S2_>
    6a44:	4c 89 e2             	mov    %r12,%rdx
    6a47:	48 89 de             	mov    %rbx,%rsi
    6a4a:	48 89 c7             	mov    %rax,%rdi
    6a4d:	e8 c0 00 00 00       	call   6b12 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>
    6a52:	48 89 c2             	mov    %rax,%rdx
    6a55:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6a59:	48 89 d6             	mov    %rdx,%rsi
    6a5c:	48 89 c7             	mov    %rax,%rdi
    6a5f:	e8 db 00 00 00       	call   6b3f <_ZSt12__niter_wrapIPtET_RKS1_S1_>
    }
    6a64:	48 83 c4 20          	add    $0x20,%rsp
    6a68:	5b                   	pop    %rbx
    6a69:	41 5c                	pop    %r12
    6a6b:	5d                   	pop    %rbp
    6a6c:	c3                   	ret

0000000000006a6d <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    6a6d:	55                   	push   %rbp
    6a6e:	48 89 e5             	mov    %rsp,%rbp
    6a71:	48 83 ec 20          	sub    $0x20,%rsp
    6a75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6a7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    6a81:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a85:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6a89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a8d:	48 89 ce             	mov    %rcx,%rsi
    6a90:	48 89 c7             	mov    %rax,%rdi
    6a93:	e8 b9 00 00 00       	call   6b51 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    6a98:	90                   	nop
    6a99:	c9                   	leave
    6a9a:	c3                   	ret

0000000000006a9b <_ZSt12__niter_baseIPKN4rtvc6VertexEET_S4_>:
    __niter_base(_Iterator __it)
    6a9b:	55                   	push   %rbp
    6a9c:	48 89 e5             	mov    %rsp,%rbp
    6a9f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aa7:	5d                   	pop    %rbp
    6aa8:	c3                   	ret

0000000000006aa9 <_ZSt12__niter_baseIPN4rtvc6VertexEET_S3_>:
    __niter_base(_Iterator __it)
    6aa9:	55                   	push   %rbp
    6aaa:	48 89 e5             	mov    %rsp,%rbp
    6aad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6ab1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ab5:	5d                   	pop    %rbp
    6ab6:	c3                   	ret

0000000000006ab7 <_ZSt14__copy_move_a1ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6ab7:	55                   	push   %rbp
    6ab8:	48 89 e5             	mov    %rsp,%rbp
    6abb:	48 83 ec 20          	sub    $0x20,%rsp
    6abf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ac3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6ac7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    6acb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6acf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ad7:	48 89 ce             	mov    %rcx,%rsi
    6ada:	48 89 c7             	mov    %rax,%rdi
    6add:	e8 aa 00 00 00       	call   6b8c <_ZSt14__copy_move_a2ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>
    6ae2:	c9                   	leave
    6ae3:	c3                   	ret

0000000000006ae4 <_ZSt12__niter_wrapIPN4rtvc6VertexEET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6ae4:	55                   	push   %rbp
    6ae5:	48 89 e5             	mov    %rsp,%rbp
    6ae8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6aec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    6af0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6af4:	5d                   	pop    %rbp
    6af5:	c3                   	ret

0000000000006af6 <_ZSt12__niter_baseIPKtET_S2_>:
    __niter_base(_Iterator __it)
    6af6:	55                   	push   %rbp
    6af7:	48 89 e5             	mov    %rsp,%rbp
    6afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b02:	5d                   	pop    %rbp
    6b03:	c3                   	ret

0000000000006b04 <_ZSt12__niter_baseIPtET_S1_>:
    __niter_base(_Iterator __it)
    6b04:	55                   	push   %rbp
    6b05:	48 89 e5             	mov    %rsp,%rbp
    6b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
    6b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b10:	5d                   	pop    %rbp
    6b11:	c3                   	ret

0000000000006b12 <_ZSt14__copy_move_a1ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
    6b12:	55                   	push   %rbp
    6b13:	48 89 e5             	mov    %rsp,%rbp
    6b16:	48 83 ec 20          	sub    $0x20,%rsp
    6b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b22:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
    6b26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6b2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6b2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6b32:	48 89 ce             	mov    %rcx,%rsi
    6b35:	48 89 c7             	mov    %rax,%rdi
    6b38:	e8 7c 00 00 00       	call   6bb9 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>
    6b3d:	c9                   	leave
    6b3e:	c3                   	ret

0000000000006b3f <_ZSt12__niter_wrapIPtET_RKS1_S1_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
    6b3f:	55                   	push   %rbp
    6b40:	48 89 e5             	mov    %rsp,%rbp
    6b43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
    6b4b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6b4f:	5d                   	pop    %rbp
    6b50:	c3                   	ret

0000000000006b51 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    6b51:	55                   	push   %rbp
    6b52:	48 89 e5             	mov    %rsp,%rbp
    6b55:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6b59:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6b5d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    6b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b65:	48 8b 00             	mov    (%rax),%rax
    6b68:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    6b6c:	eb 10                	jmp    6b7e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    6b6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b72:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6b76:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    6b79:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    6b7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6b82:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    6b86:	75 e6                	jne    6b6e <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    6b88:	90                   	nop
    6b89:	90                   	nop
    6b8a:	5d                   	pop    %rbp
    6b8b:	c3                   	ret

0000000000006b8c <_ZSt14__copy_move_a2ILb0EPKN4rtvc6VertexEPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6b8c:	55                   	push   %rbp
    6b8d:	48 89 e5             	mov    %rsp,%rbp
    6b90:	48 83 ec 20          	sub    $0x20,%rsp
    6b94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6b98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6b9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6ba0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6ba4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6ba8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bac:	48 89 ce             	mov    %rcx,%rsi
    6baf:	48 89 c7             	mov    %rax,%rdi
    6bb2:	e8 2f 00 00 00       	call   6be6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_>
    }
    6bb7:	c9                   	leave
    6bb8:	c3                   	ret

0000000000006bb9 <_ZSt14__copy_move_a2ILb0EPKtPtET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
    6bb9:	55                   	push   %rbp
    6bba:	48 89 e5             	mov    %rsp,%rbp
    6bbd:	48 83 ec 20          	sub    $0x20,%rsp
    6bc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6bc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6bc9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
    6bcd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6bd1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6bd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6bd9:	48 89 ce             	mov    %rcx,%rsi
    6bdc:	48 89 c7             	mov    %rax,%rdi
    6bdf:	e8 84 00 00 00       	call   6c68 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>
    }
    6be4:	c9                   	leave
    6be5:	c3                   	ret

0000000000006be6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    6be6:	55                   	push   %rbp
    6be7:	48 89 e5             	mov    %rsp,%rbp
    6bea:	48 83 ec 30          	sub    $0x30,%rsp
    6bee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6bf2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6bf6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6bfa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6bfe:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6c02:	48 c1 f8 02          	sar    $0x2,%rax
    6c06:	48 89 c2             	mov    %rax,%rdx
    6c09:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    6c10:	cc cc cc 
    6c13:	48 0f af c2          	imul   %rdx,%rax
    6c17:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6c1b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6c20:	74 28                	je     6c4a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN4rtvc6VertexEEEPT_PKS5_S8_S6_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6c22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c26:	48 89 d0             	mov    %rdx,%rax
    6c29:	48 c1 e0 02          	shl    $0x2,%rax
    6c2d:	48 01 d0             	add    %rdx,%rax
    6c30:	48 c1 e0 02          	shl    $0x2,%rax
    6c34:	48 89 c2             	mov    %rax,%rdx
    6c37:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6c3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c3f:	48 89 ce             	mov    %rcx,%rsi
    6c42:	48 89 c7             	mov    %rax,%rdi
    6c45:	e8 96 db ff ff       	call   47e0 <memmove@plt>
	  return __result + _Num;
    6c4a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6c4e:	48 89 d0             	mov    %rdx,%rax
    6c51:	48 c1 e0 02          	shl    $0x2,%rax
    6c55:	48 01 d0             	add    %rdx,%rax
    6c58:	48 c1 e0 02          	shl    $0x2,%rax
    6c5c:	48 89 c2             	mov    %rax,%rdx
    6c5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c63:	48 01 d0             	add    %rdx,%rax
	}
    6c66:	c9                   	leave
    6c67:	c3                   	ret

0000000000006c68 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
    6c68:	55                   	push   %rbp
    6c69:	48 89 e5             	mov    %rsp,%rbp
    6c6c:	48 83 ec 30          	sub    $0x30,%rsp
    6c70:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6c74:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6c78:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
    6c7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6c80:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    6c84:	48 d1 f8             	sar    %rax
    6c87:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
    6c8b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6c90:	74 1b                	je     6cad <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mItEEPT_PKS3_S6_S4_+0x45>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
    6c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6c96:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6c9a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    6c9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ca2:	48 89 ce             	mov    %rcx,%rsi
    6ca5:	48 89 c7             	mov    %rax,%rdi
    6ca8:	e8 33 db ff ff       	call   47e0 <memmove@plt>
	  return __result + _Num;
    6cad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cb1:	48 8d 14 00          	lea    (%rax,%rax,1),%rdx
    6cb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6cb9:	48 01 d0             	add    %rdx,%rax
	}
    6cbc:	c9                   	leave
    6cbd:	c3                   	ret

0000000000006cbe <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6cbe:	55                   	push   %rbp
    6cbf:	48 89 e5             	mov    %rsp,%rbp
    6cc2:	48 83 ec 10          	sub    $0x10,%rsp
    6cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cce:	48 89 c7             	mov    %rax,%rdi
    6cd1:	e8 a6 f2 ff ff       	call   5f7c <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EE19_M_get_Tp_allocatorEv>
    6cd6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cdd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6ce1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ce5:	48 8b 00             	mov    (%rax),%rax
    6ce8:	48 89 ce             	mov    %rcx,%rsi
    6ceb:	48 89 c7             	mov    %rax,%rdi
    6cee:	e8 53 00 00 00       	call   6d46 <_ZSt8_DestroyIPN4rtvc6VertexES1_EvT_S3_RSaIT0_E>
      }
    6cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6cf7:	48 89 c7             	mov    %rax,%rdi
    6cfa:	e8 85 ec ff ff       	call   5984 <_ZNSt12_Vector_baseIN4rtvc6VertexESaIS1_EED1Ev>
    6cff:	90                   	nop
    6d00:	c9                   	leave
    6d01:	c3                   	ret

0000000000006d02 <_ZNSt6vectorItSaItEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6d02:	55                   	push   %rbp
    6d03:	48 89 e5             	mov    %rsp,%rbp
    6d06:	48 83 ec 10          	sub    $0x10,%rsp
    6d0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6d0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d12:	48 89 c7             	mov    %rax,%rdi
    6d15:	e8 d2 f3 ff ff       	call   60ec <_ZNSt12_Vector_baseItSaItEE19_M_get_Tp_allocatorEv>
    6d1a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6d1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d21:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6d25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d29:	48 8b 00             	mov    (%rax),%rax
    6d2c:	48 89 ce             	mov    %rcx,%rsi
    6d2f:	48 89 c7             	mov    %rax,%rdi
    6d32:	e8 39 00 00 00       	call   6d70 <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>
      }
    6d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d3b:	48 89 c7             	mov    %rax,%rdi
    6d3e:	e8 33 ee ff ff       	call   5b76 <_ZNSt12_Vector_baseItSaItEED1Ev>
    6d43:	90                   	nop
    6d44:	c9                   	leave
    6d45:	c3                   	ret

0000000000006d46 <_ZSt8_DestroyIPN4rtvc6VertexES1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6d46:	55                   	push   %rbp
    6d47:	48 89 e5             	mov    %rsp,%rbp
    6d4a:	48 83 ec 20          	sub    $0x20,%rsp
    6d4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d56:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6d5a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d62:	48 89 d6             	mov    %rdx,%rsi
    6d65:	48 89 c7             	mov    %rax,%rdi
    6d68:	e8 2d 00 00 00       	call   6d9a <_ZSt8_DestroyIPN4rtvc6VertexEEvT_S3_>
    }
    6d6d:	90                   	nop
    6d6e:	c9                   	leave
    6d6f:	c3                   	ret

0000000000006d70 <_ZSt8_DestroyIPttEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6d70:	55                   	push   %rbp
    6d71:	48 89 e5             	mov    %rsp,%rbp
    6d74:	48 83 ec 20          	sub    $0x20,%rsp
    6d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6d7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6d80:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    6d84:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6d88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6d8c:	48 89 d6             	mov    %rdx,%rsi
    6d8f:	48 89 c7             	mov    %rax,%rdi
    6d92:	e8 29 00 00 00       	call   6dc0 <_ZSt8_DestroyIPtEvT_S1_>
    }
    6d97:	90                   	nop
    6d98:	c9                   	leave
    6d99:	c3                   	ret

0000000000006d9a <_ZSt8_DestroyIPN4rtvc6VertexEEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6d9a:	55                   	push   %rbp
    6d9b:	48 89 e5             	mov    %rsp,%rbp
    6d9e:	48 83 ec 10          	sub    $0x10,%rsp
    6da2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6da6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6daa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6db2:	48 89 d6             	mov    %rdx,%rsi
    6db5:	48 89 c7             	mov    %rax,%rdi
    6db8:	e8 29 00 00 00       	call   6de6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN4rtvc6VertexEEEvT_S5_>
    }
    6dbd:	90                   	nop
    6dbe:	c9                   	leave
    6dbf:	c3                   	ret

0000000000006dc0 <_ZSt8_DestroyIPtEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6dc0:	55                   	push   %rbp
    6dc1:	48 89 e5             	mov    %rsp,%rbp
    6dc4:	48 83 ec 10          	sub    $0x10,%rsp
    6dc8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dcc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6dd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6dd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6dd8:	48 89 d6             	mov    %rdx,%rsi
    6ddb:	48 89 c7             	mov    %rax,%rdi
    6dde:	e8 12 00 00 00       	call   6df5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>
    }
    6de3:	90                   	nop
    6de4:	c9                   	leave
    6de5:	c3                   	ret

0000000000006de6 <_ZNSt12_Destroy_auxILb1EE9__destroyIPN4rtvc6VertexEEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6de6:	55                   	push   %rbp
    6de7:	48 89 e5             	mov    %rsp,%rbp
    6dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6df2:	90                   	nop
    6df3:	5d                   	pop    %rbp
    6df4:	c3                   	ret

0000000000006df5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPtEEvT_S3_>:
    6df5:	55                   	push   %rbp
    6df6:	48 89 e5             	mov    %rsp,%rbp
    6df9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6dfd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6e01:	90                   	nop
    6e02:	5d                   	pop    %rbp
    6e03:	c3                   	ret

0000000000006e04 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:
#include "ProxyFuncs.hpp"

VkResult rtvc::createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    6e04:	55                   	push   %rbp
    6e05:	48 89 e5             	mov    %rsp,%rbp
    6e08:	48 83 ec 30          	sub    $0x30,%rsp
    6e0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e10:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6e14:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    6e18:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    6e1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e20:	48 8d 15 89 3e 01 00 	lea    0x13e89(%rip),%rdx        # 1acb0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6e27:	48 89 d6             	mov    %rdx,%rsi
    6e2a:	48 89 c7             	mov    %rax,%rdi
    6e2d:	e8 9e d5 ff ff       	call   43d0 <vkGetInstanceProcAddr@plt>
    6e32:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func != nullptr)
    6e36:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6e3b:	74 1c                	je     6e59 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x55>
    return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    6e3d:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    6e41:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    6e45:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e49:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    6e4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e51:	48 89 c7             	mov    %rax,%rdi
    6e54:	41 ff d0             	call   *%r8
    6e57:	eb 05                	jmp    6e5e <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5a>
  else
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    6e59:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
}
    6e5e:	c9                   	leave
    6e5f:	c3                   	ret

0000000000006e60 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void rtvc::destroyDebugUtilsMessengerEXT(
    VkInstance instance, VkDebugUtilsMessengerEXT debugMessenger,
    const VkAllocationCallbacks *pAllocator) {
    6e60:	55                   	push   %rbp
    6e61:	48 89 e5             	mov    %rsp,%rbp
    6e64:	48 83 ec 30          	sub    $0x30,%rsp
    6e68:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6e6c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6e70:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    6e74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6e78:	48 8d 15 51 3e 01 00 	lea    0x13e51(%rip),%rdx        # 1acd0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    6e7f:	48 89 d6             	mov    %rdx,%rsi
    6e82:	48 89 c7             	mov    %rax,%rdi
    6e85:	e8 46 d5 ff ff       	call   43d0 <vkGetInstanceProcAddr@plt>
    6e8a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr)
    6e8e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    6e93:	74 1a                	je     6eaf <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4f>
    return func(instance, debugMessenger, pAllocator);
    6e95:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    6e99:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    6e9d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    6ea1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6ea5:	48 89 ce             	mov    %rcx,%rsi
    6ea8:	48 89 c7             	mov    %rax,%rdi
    6eab:	41 ff d0             	call   *%r8
    6eae:	90                   	nop
    6eaf:	c9                   	leave
    6eb0:	c3                   	ret
    6eb1:	90                   	nop

0000000000006eb2 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL rtvc::RenderApplication::debugCallback(
    VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
    [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
    const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
    [[maybe_unused]] void *pUserData) {
    6eb2:	55                   	push   %rbp
    6eb3:	48 89 e5             	mov    %rsp,%rbp
    6eb6:	48 83 ec 20          	sub    $0x20,%rsp
    6eba:	89 7d fc             	mov    %edi,-0x4(%rbp)
    6ebd:	89 75 f8             	mov    %esi,-0x8(%rbp)
    6ec0:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    6ec4:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity >= VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT)
    6ec8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    6ecb:	3d ff 00 00 00       	cmp    $0xff,%eax
    6ed0:	7e 39                	jle    6f0b <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x59>
    std::cerr << pCallbackData->pMessage << '\n' << std::endl;
    6ed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ed6:	48 8b 40 28          	mov    0x28(%rax),%rax
    6eda:	48 89 c6             	mov    %rax,%rsi
    6edd:	48 8d 05 fc 36 02 00 	lea    0x236fc(%rip),%rax        # 2a5e0 <_ZSt4cerr@GLIBCXX_3.4>
    6ee4:	48 89 c7             	mov    %rax,%rdi
    6ee7:	e8 24 d5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    6eec:	be 0a 00 00 00       	mov    $0xa,%esi
    6ef1:	48 89 c7             	mov    %rax,%rdi
    6ef4:	e8 47 d6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    6ef9:	48 8b 15 98 30 02 00 	mov    0x23098(%rip),%rdx        # 29f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    6f00:	48 89 d6             	mov    %rdx,%rsi
    6f03:	48 89 c7             	mov    %rax,%rdi
    6f06:	e8 85 d5 ff ff       	call   4490 <_ZNSolsEPFRSoS_E@plt>

  return VK_FALSE;
    6f0b:	b8 00 00 00 00       	mov    $0x0,%eax
}
    6f10:	c9                   	leave
    6f11:	c3                   	ret

0000000000006f12 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>:

std::vector<VkExtensionProperties>
rtvc::RenderApplication::getSupportedExtensions() {
    6f12:	55                   	push   %rbp
    6f13:	48 89 e5             	mov    %rsp,%rbp
    6f16:	53                   	push   %rbx
    6f17:	48 83 ec 28          	sub    $0x28,%rsp
    6f1b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f1f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t extensionsCount = 0;
    6f23:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount, nullptr);
    6f2a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f2e:	ba 00 00 00 00       	mov    $0x0,%edx
    6f33:	48 89 c6             	mov    %rax,%rsi
    6f36:	bf 00 00 00 00       	mov    $0x0,%edi
    6f3b:	e8 f0 d3 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>

  std::vector<VkExtensionProperties> extensions{extensionsCount};
    6f40:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6f43:	89 c3                	mov    %eax,%ebx
    6f45:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f49:	48 89 c7             	mov    %rax,%rdi
    6f4c:	e8 f5 57 00 00       	call   c746 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6f51:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6f55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f59:	48 89 de             	mov    %rbx,%rsi
    6f5c:	48 89 c7             	mov    %rax,%rdi
    6f5f:	e8 1a 58 00 00       	call   c77e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6f64:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f68:	48 89 c7             	mov    %rax,%rdi
    6f6b:	e8 f2 57 00 00       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
  vkEnumerateInstanceExtensionProperties(nullptr, &extensionsCount,
    6f70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 bc 58 00 00       	call   c838 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6f7c:	48 89 c2             	mov    %rax,%rdx
    6f7f:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f83:	48 89 c6             	mov    %rax,%rsi
    6f86:	bf 00 00 00 00       	mov    $0x0,%edi
    6f8b:	e8 a0 d3 ff ff       	call   4330 <vkEnumerateInstanceExtensionProperties@plt>
                                         extensions.data());

  return extensions;
    6f90:	eb 34                	jmp    6fc6 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv+0xb4>
  std::vector<VkExtensionProperties> extensions{extensionsCount};
    6f92:	48 89 c3             	mov    %rax,%rbx
    6f95:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f99:	48 89 c7             	mov    %rax,%rdi
    6f9c:	e8 c1 57 00 00       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6fa1:	48 89 d8             	mov    %rbx,%rax
    6fa4:	48 89 c7             	mov    %rax,%rdi
    6fa7:	e8 c4 d8 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    6fac:	48 89 c3             	mov    %rax,%rbx
    6faf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fb3:	48 89 c7             	mov    %rax,%rdi
    6fb6:	e8 39 58 00 00       	call   c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6fbb:	48 89 d8             	mov    %rbx,%rax
    6fbe:	48 89 c7             	mov    %rax,%rdi
    6fc1:	e8 aa d8 ff ff       	call   4870 <_Unwind_Resume@plt>
    6fc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fce:	c9                   	leave
    6fcf:	c3                   	ret

0000000000006fd0 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>:

std::vector<const char *> rtvc::RenderApplication::getRequiredExtensions() {
    6fd0:	55                   	push   %rbp
    6fd1:	48 89 e5             	mov    %rsp,%rbp
    6fd4:	41 54                	push   %r12
    6fd6:	53                   	push   %rbx
    6fd7:	48 83 ec 30          	sub    $0x30,%rsp
    6fdb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    6fdf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  uint32_t glfwExtensionCount = 0;
    6fe3:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)
  const char **glfwExtensions;
  glfwExtensions = glfwGetRequiredInstanceExtensions(&glfwExtensionCount);
    6fea:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6fee:	48 89 c7             	mov    %rax,%rdi
    6ff1:	e8 ba d2 ff ff       	call   42b0 <glfwGetRequiredInstanceExtensions@plt>
    6ff6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)

  std::vector<const char *> extensions{glfwExtensions,
                                       glfwExtensions + glfwExtensionCount};
    6ffa:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6ffe:	8b 45 d8             	mov    -0x28(%rbp),%eax
    7001:	89 c0                	mov    %eax,%eax
    7003:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    700a:	00 
    700b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    700f:	4c 8d 24 02          	lea    (%rdx,%rax,1),%r12
    7013:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7017:	48 89 c7             	mov    %rax,%rdi
    701a:	e8 7d 52 00 00       	call   c29c <_ZNSaIPKcEC1Ev>
    701f:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    7023:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7027:	48 89 d1             	mov    %rdx,%rcx
    702a:	4c 89 e2             	mov    %r12,%rdx
    702d:	48 89 de             	mov    %rbx,%rsi
    7030:	48 89 c7             	mov    %rax,%rdi
    7033:	e8 7c 58 00 00       	call   c8b4 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>
    7038:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    703c:	48 89 c7             	mov    %rax,%rdi
    703f:	e8 74 52 00 00       	call   c2b8 <_ZNSaIPKcED1Ev>

  if (enableValidationLayers)
    extensions.push_back(VK_EXT_DEBUG_UTILS_EXTENSION_NAME);
    7044:	48 8d 05 95 42 01 00 	lea    0x14295(%rip),%rax        # 1b2e0 <_ZN6__pstl9execution2v1L5unseqE+0x15>
    704b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    704f:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    7053:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7057:	48 89 d6             	mov    %rdx,%rsi
    705a:	48 89 c7             	mov    %rax,%rdi
    705d:	e8 c4 58 00 00       	call   c926 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>

  return extensions;
    7062:	eb 34                	jmp    7098 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv+0xc8>
                                       glfwExtensions + glfwExtensionCount};
    7064:	48 89 c3             	mov    %rax,%rbx
    7067:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    706b:	48 89 c7             	mov    %rax,%rdi
    706e:	e8 45 52 00 00       	call   c2b8 <_ZNSaIPKcED1Ev>
    7073:	48 89 d8             	mov    %rbx,%rax
    7076:	48 89 c7             	mov    %rax,%rdi
    7079:	e8 f2 d7 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    707e:	48 89 c3             	mov    %rax,%rbx
    7081:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7085:	48 89 c7             	mov    %rax,%rdi
    7088:	e8 47 52 00 00       	call   c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    708d:	48 89 d8             	mov    %rbx,%rax
    7090:	48 89 c7             	mov    %rax,%rdi
    7093:	e8 d8 d7 ff ff       	call   4870 <_Unwind_Resume@plt>
    7098:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    709c:	48 83 c4 30          	add    $0x30,%rsp
    70a0:	5b                   	pop    %rbx
    70a1:	41 5c                	pop    %r12
    70a3:	5d                   	pop    %rbp
    70a4:	c3                   	ret
    70a5:	90                   	nop

00000000000070a6 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>:

bool rtvc::RenderApplication::checkValidationLayerSupport() {
    70a6:	55                   	push   %rbp
    70a7:	48 89 e5             	mov    %rsp,%rbp
    70aa:	53                   	push   %rbx
    70ab:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    70b2:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    70b9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    70bd:	be 00 00 00 00       	mov    $0x0,%esi
    70c2:	48 89 c7             	mov    %rax,%rdi
    70c5:	e8 46 d4 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>

  std::vector<VkLayerProperties> availableLayers{layerCount};
    70ca:	8b 45 c0             	mov    -0x40(%rbp),%eax
    70cd:	89 c3                	mov    %eax,%ebx
    70cf:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70d3:	48 89 c7             	mov    %rax,%rdi
    70d6:	e8 cb 58 00 00       	call   c9a6 <_ZNSaI17VkLayerPropertiesEC1Ev>
    70db:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
    70df:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    70e3:	48 89 de             	mov    %rbx,%rsi
    70e6:	48 89 c7             	mov    %rax,%rdi
    70e9:	e8 f0 58 00 00       	call   c9de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    70ee:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    70f2:	48 89 c7             	mov    %rax,%rdi
    70f5:	e8 c8 58 00 00       	call   c9c2 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    70fa:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    70fe:	48 89 c7             	mov    %rax,%rdi
    7101:	e8 92 59 00 00       	call   ca98 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    7106:	48 89 c2             	mov    %rax,%rdx
    7109:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    710d:	48 89 d6             	mov    %rdx,%rsi
    7110:	48 89 c7             	mov    %rax,%rdi
    7113:	e8 f8 d3 ff ff       	call   4510 <vkEnumerateInstanceLayerProperties@plt>

  for (const char *layerName : validationLayers) {
    7118:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    711f:	48 83 c0 18          	add    $0x18,%rax
    7123:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7127:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    712b:	48 89 c7             	mov    %rax,%rdi
    712e:	e8 89 59 00 00       	call   cabc <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    7133:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    7137:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    713b:	48 89 c7             	mov    %rax,%rdi
    713e:	e8 9f 59 00 00       	call   cae2 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    7143:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    7147:	e9 af 00 00 00       	jmp    71fb <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x155>
    714c:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    7150:	48 89 c7             	mov    %rax,%rdi
    7153:	e8 0e 5a 00 00       	call   cb66 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    7158:	48 8b 00             	mov    (%rax),%rax
    715b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    bool layerFound = false;
    715f:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)

    for (const auto &layerProperties : availableLayers) {
    7163:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    7167:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    716b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    716f:	48 89 c7             	mov    %rax,%rdi
    7172:	e8 01 5a 00 00       	call   cb78 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    7177:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    717b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    717f:	48 89 c7             	mov    %rax,%rdi
    7182:	e8 17 5a 00 00       	call   cb9e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    7187:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    718b:	eb 39                	jmp    71c6 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x120>
    718d:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    7191:	48 89 c7             	mov    %rax,%rdi
    7194:	e8 8d 5a 00 00       	call   cc26 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7199:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      if (strcmp(layerName, layerProperties.layerName) == 0) {
    719d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    71a1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71a5:	48 89 d6             	mov    %rdx,%rsi
    71a8:	48 89 c7             	mov    %rax,%rdi
    71ab:	e8 20 d5 ff ff       	call   46d0 <strcmp@plt>
    71b0:	85 c0                	test   %eax,%eax
    71b2:	75 06                	jne    71ba <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x114>
        layerFound = true;
    71b4:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
        break;
    71b8:	eb 23                	jmp    71dd <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x137>
    for (const auto &layerProperties : availableLayers) {
    71ba:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    71be:	48 89 c7             	mov    %rax,%rdi
    71c1:	e8 3c 5a 00 00       	call   cc02 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    71c6:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    71ca:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    71ce:	48 89 d6             	mov    %rdx,%rsi
    71d1:	48 89 c7             	mov    %rax,%rdi
    71d4:	e8 ee 59 00 00       	call   cbc7 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    71d9:	84 c0                	test   %al,%al
    71db:	75 b0                	jne    718d <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xe7>
      }
    }

    if (!layerFound)
    71dd:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
    71e1:	83 f0 01             	xor    $0x1,%eax
    71e4:	84 c0                	test   %al,%al
    71e6:	74 07                	je     71ef <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x149>
      return false;
    71e8:	bb 00 00 00 00       	mov    $0x0,%ebx
    71ed:	eb 2c                	jmp    721b <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x175>
  for (const char *layerName : validationLayers) {
    71ef:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    71f3:	48 89 c7             	mov    %rax,%rdi
    71f6:	e8 4b 59 00 00       	call   cb46 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    71fb:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    71ff:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    7203:	48 89 d6             	mov    %rdx,%rsi
    7206:	48 89 c7             	mov    %rax,%rdi
    7209:	e8 fd 58 00 00       	call   cb0b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    720e:	84 c0                	test   %al,%al
    7210:	0f 85 36 ff ff ff    	jne    714c <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0xa6>
  }

  return true;
    7216:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    721b:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    721f:	48 89 c7             	mov    %rax,%rdi
    7222:	e8 2d 58 00 00       	call   ca54 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7227:	89 d8                	mov    %ebx,%eax
    7229:	eb 34                	jmp    725f <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv+0x1b9>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    722b:	48 89 c3             	mov    %rax,%rbx
    722e:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
    7232:	48 89 c7             	mov    %rax,%rdi
    7235:	e8 88 57 00 00       	call   c9c2 <_ZNSaI17VkLayerPropertiesED1Ev>
    723a:	48 89 d8             	mov    %rbx,%rax
    723d:	48 89 c7             	mov    %rax,%rdi
    7240:	e8 2b d6 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    7245:	48 89 c3             	mov    %rax,%rbx
    7248:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    724c:	48 89 c7             	mov    %rax,%rdi
    724f:	e8 00 58 00 00       	call   ca54 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    7254:	48 89 d8             	mov    %rbx,%rax
    7257:	48 89 c7             	mov    %rax,%rdi
    725a:	e8 11 d6 ff ff       	call   4870 <_Unwind_Resume@plt>
    725f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7263:	c9                   	leave
    7264:	c3                   	ret
    7265:	90                   	nop

0000000000007266 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void rtvc::RenderApplication::populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    7266:	55                   	push   %rbp
    7267:	48 89 e5             	mov    %rsp,%rbp
    726a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    726e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  createInfo = {};
    7272:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7276:	66 0f ef c0          	pxor   %xmm0,%xmm0
    727a:	0f 11 00             	movups %xmm0,(%rax)
    727d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7281:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    7285:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7289:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity = VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
    728f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7293:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
                               VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
                               VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    729a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    729e:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    72a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72a9:	48 8d 15 02 fc ff ff 	lea    -0x3fe(%rip),%rdx        # 6eb2 <_ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    72b0:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    72b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    72b8:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    72bf:	00 
}
    72c0:	90                   	nop
    72c1:	5d                   	pop    %rbp
    72c2:	c3                   	ret
    72c3:	90                   	nop

00000000000072c4 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>:

void rtvc::RenderApplication::setupDebugMessenger() {
    72c4:	55                   	push   %rbp
    72c5:	48 89 e5             	mov    %rsp,%rbp
    72c8:	41 54                	push   %r12
    72ca:	53                   	push   %rbx
    72cb:	48 83 ec 40          	sub    $0x40,%rsp
    72cf:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  if (!enableValidationLayers) {
    return;
  }

  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    72d3:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    72d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72db:	48 89 d6             	mov    %rdx,%rsi
    72de:	48 89 c7             	mov    %rax,%rdi
    72e1:	e8 80 ff ff ff       	call   7266 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    72e6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72ea:	48 8d 50 30          	lea    0x30(%rax),%rdx
    72ee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    72f2:	48 8b 40 10          	mov    0x10(%rax),%rax
    72f6:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    72fa:	48 89 d1             	mov    %rdx,%rcx
    72fd:	ba 00 00 00 00       	mov    $0x0,%edx
    7302:	48 89 c7             	mov    %rax,%rdi
    7305:	e8 fa fa ff ff       	call   6e04 <_ZN4rtvc28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS)
    730a:	85 c0                	test   %eax,%eax
    730c:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    730f:	84 c0                	test   %al,%al
    7311:	74 51                	je     7364 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv+0xa0>
    throw std::runtime_error("Failed to set up debug messenger.");
    7313:	bf 10 00 00 00       	mov    $0x10,%edi
    7318:	e8 63 ce ff ff       	call   4180 <__cxa_allocate_exception@plt>
    731d:	48 89 c3             	mov    %rax,%rbx
    7320:	48 8d 05 d1 3f 01 00 	lea    0x13fd1(%rip),%rax        # 1b2f8 <_ZN6__pstl9execution2v1L5unseqE+0x2d>
    7327:	48 89 c6             	mov    %rax,%rsi
    732a:	48 89 df             	mov    %rbx,%rdi
    732d:	e8 ce cd ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7332:	48 8b 05 6f 2c 02 00 	mov    0x22c6f(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7339:	48 89 c2             	mov    %rax,%rdx
    733c:	48 8d 05 fd 29 02 00 	lea    0x229fd(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7343:	48 89 c6             	mov    %rax,%rsi
    7346:	48 89 df             	mov    %rbx,%rdi
    7349:	e8 d2 d4 ff ff       	call   4820 <__cxa_throw@plt>
    734e:	49 89 c4             	mov    %rax,%r12
    7351:	48 89 df             	mov    %rbx,%rdi
    7354:	e8 27 cf ff ff       	call   4280 <__cxa_free_exception@plt>
    7359:	4c 89 e0             	mov    %r12,%rax
    735c:	48 89 c7             	mov    %rax,%rdi
    735f:	e8 0c d5 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    7364:	90                   	nop
    7365:	48 83 c4 40          	add    $0x40,%rsp
    7369:	5b                   	pop    %rbx
    736a:	41 5c                	pop    %r12
    736c:	5d                   	pop    %rbp
    736d:	c3                   	ret

000000000000736e <_ZN4rtvc17RenderApplication13creatInstanceEv>:

void rtvc::RenderApplication::creatInstance() {
    736e:	55                   	push   %rbp
    736f:	48 89 e5             	mov    %rsp,%rbp
    7372:	41 54                	push   %r12
    7374:	53                   	push   %rbx
    7375:	48 81 ec 30 01 00 00 	sub    $0x130,%rsp
    737c:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
  if (enableValidationLayers) {
    if (!checkValidationLayerSupport()) {
    7383:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    738a:	48 89 c7             	mov    %rax,%rdi
    738d:	e8 14 fd ff ff       	call   70a6 <_ZN4rtvc17RenderApplication27checkValidationLayerSupportEv>
    7392:	83 f0 01             	xor    $0x1,%eax
    7395:	84 c0                	test   %al,%al
    7397:	74 3b                	je     73d4 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x66>
      throw std::runtime_error(
          "Validation layers requested but not available.");
    7399:	bf 10 00 00 00       	mov    $0x10,%edi
    739e:	e8 dd cd ff ff       	call   4180 <__cxa_allocate_exception@plt>
    73a3:	48 89 c3             	mov    %rax,%rbx
      throw std::runtime_error(
    73a6:	48 8d 05 73 3f 01 00 	lea    0x13f73(%rip),%rax        # 1b320 <_ZN6__pstl9execution2v1L5unseqE+0x55>
    73ad:	48 89 c6             	mov    %rax,%rsi
    73b0:	48 89 df             	mov    %rbx,%rdi
    73b3:	e8 48 cd ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
          "Validation layers requested but not available.");
    73b8:	48 8b 05 e9 2b 02 00 	mov    0x22be9(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    73bf:	48 89 c2             	mov    %rax,%rdx
    73c2:	48 8d 05 77 29 02 00 	lea    0x22977(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    73c9:	48 89 c6             	mov    %rax,%rsi
    73cc:	48 89 df             	mov    %rbx,%rdi
    73cf:	e8 4c d4 ff ff       	call   4820 <__cxa_throw@plt>
    }
  }

  // std::cout << enableValidationLayers << '\n';
  VkApplicationInfo appInfo{};
    73d4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    73d8:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    73dc:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    73e0:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    73e4:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
  appInfo.pApplicationName = "Test Triangle";
    73eb:	48 8d 05 5d 3f 01 00 	lea    0x13f5d(%rip),%rax        # 1b34f <_ZN6__pstl9execution2v1L5unseqE+0x84>
    73f2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    73f6:	c7 45 b8 00 00 40 00 	movl   $0x400000,-0x48(%rbp)
  appInfo.pEngineName = "No Engine";
    73fd:	48 8d 05 59 3f 01 00 	lea    0x13f59(%rip),%rax        # 1b35d <_ZN6__pstl9execution2v1L5unseqE+0x92>
    7404:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    7408:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_0;
    740f:	c7 45 cc 00 00 40 00 	movl   $0x400000,-0x34(%rbp)

  VkInstanceCreateInfo createInfo{};
    7416:	66 0f ef c0          	pxor   %xmm0,%xmm0
    741a:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    7421:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    7428:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    742c:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
  createInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    7430:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    7437:	00 00 00 
  createInfo.pApplicationInfo = &appInfo;
    743a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    743e:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)

  auto requiredExtensions = getRequiredExtensions();
    7445:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    744c:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    7453:	48 89 d6             	mov    %rdx,%rsi
    7456:	48 89 c7             	mov    %rax,%rdi
    7459:	e8 72 fb ff ff       	call   6fd0 <_ZN4rtvc17RenderApplication21getRequiredExtensionsEv>
  createInfo.enabledExtensionCount =
      static_cast<uint32_t>(requiredExtensions.size());
    745e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7465:	48 89 c7             	mov    %rax,%rdi
    7468:	e8 cb 57 00 00       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  createInfo.enabledExtensionCount =
    746d:	89 45 90             	mov    %eax,-0x70(%rbp)
  createInfo.ppEnabledExtensionNames = requiredExtensions.data();
    7470:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7477:	48 89 c7             	mov    %rax,%rdi
    747a:	e8 dd 57 00 00       	call   cc5c <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    747f:	48 89 45 98          	mov    %rax,-0x68(%rbp)

  VkDebugUtilsMessengerCreateInfoEXT debugCreateInfo{};
    7483:	66 0f ef c0          	pxor   %xmm0,%xmm0
    7487:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    748e:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    7495:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
  if (enableValidationLayers) {
    createInfo.enabledLayerCount =
        static_cast<uint32_t>(validationLayers.size());
    749c:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    74a3:	48 83 c0 18          	add    $0x18,%rax
    74a7:	48 89 c7             	mov    %rax,%rdi
    74aa:	e8 89 57 00 00       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    createInfo.enabledLayerCount =
    74af:	89 45 80             	mov    %eax,-0x80(%rbp)
    createInfo.ppEnabledLayerNames = validationLayers.data();
    74b2:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    74b9:	48 83 c0 18          	add    $0x18,%rax
    74bd:	48 89 c7             	mov    %rax,%rdi
    74c0:	e8 bb 57 00 00       	call   cc80 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    74c5:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    populateDebugMessengerCreateInfo(debugCreateInfo);
    74c9:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    74d0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    74d7:	48 89 d6             	mov    %rdx,%rsi
    74da:	48 89 c7             	mov    %rax,%rdi
    74dd:	e8 84 fd ff ff       	call   7266 <_ZN4rtvc17RenderApplication32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
    createInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    74e2:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    74e9:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  } else {
    createInfo.enabledLayerCount = 0;
    createInfo.pNext = nullptr;
  }

  if (vkCreateInstance(&createInfo, nullptr, &instance) != VK_SUCCESS)
    74f0:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    74f7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    74fb:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7502:	be 00 00 00 00       	mov    $0x0,%esi
    7507:	48 89 c7             	mov    %rax,%rdi
    750a:	e8 71 d0 ff ff       	call   4580 <vkCreateInstance@plt>
    750f:	85 c0                	test   %eax,%eax
    7511:	0f 95 c0             	setne  %al
    7514:	84 c0                	test   %al,%al
    7516:	74 3b                	je     7553 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x1e5>
    throw std::runtime_error("Failed to create instance.");
    7518:	bf 10 00 00 00       	mov    $0x10,%edi
    751d:	e8 5e cc ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7522:	48 89 c3             	mov    %rax,%rbx
    7525:	48 8d 05 3b 3e 01 00 	lea    0x13e3b(%rip),%rax        # 1b367 <_ZN6__pstl9execution2v1L5unseqE+0x9c>
    752c:	48 89 c6             	mov    %rax,%rsi
    752f:	48 89 df             	mov    %rbx,%rdi
    7532:	e8 c9 cb ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7537:	48 8b 05 6a 2a 02 00 	mov    0x22a6a(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    753e:	48 89 c2             	mov    %rax,%rdx
    7541:	48 8d 05 f8 27 02 00 	lea    0x227f8(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7548:	48 89 c6             	mov    %rax,%rsi
    754b:	48 89 df             	mov    %rbx,%rdi
    754e:	e8 cd d2 ff ff       	call   4820 <__cxa_throw@plt>

  auto supportedExtensions = getSupportedExtensions();
    7553:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    755a:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
    7561:	48 89 d6             	mov    %rdx,%rsi
    7564:	48 89 c7             	mov    %rax,%rdi
    7567:	e8 a6 f9 ff ff       	call   6f12 <_ZN4rtvc17RenderApplication22getSupportedExtensionsEv>
  std::cout << "Available extensions:\n";
    756c:	48 8d 05 0f 3e 01 00 	lea    0x13e0f(%rip),%rax        # 1b382 <_ZN6__pstl9execution2v1L5unseqE+0xb7>
    7573:	48 89 c6             	mov    %rax,%rsi
    7576:	48 8d 05 43 2f 02 00 	lea    0x22f43(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    757d:	48 89 c7             	mov    %rax,%rdi
    7580:	e8 8b ce ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extension : supportedExtensions)
    7585:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    758c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    7590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7594:	48 89 c7             	mov    %rax,%rdi
    7597:	e8 08 57 00 00       	call   cca4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    759c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    75a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75a7:	48 89 c7             	mov    %rax,%rdi
    75aa:	e8 1b 57 00 00       	call   ccca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    75af:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    75b6:	eb 55                	jmp    760d <_ZN4rtvc17RenderApplication13creatInstanceEv+0x29f>
    75b8:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    75bf:	48 89 c7             	mov    %rax,%rdi
    75c2:	e8 8b 57 00 00       	call   cd52 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    75c7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    std::cout << '\t' << extension.extensionName << '\n';
    75cb:	be 09 00 00 00       	mov    $0x9,%esi
    75d0:	48 8d 05 e9 2e 02 00 	lea    0x22ee9(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    75d7:	48 89 c7             	mov    %rax,%rdi
    75da:	e8 61 cf ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    75df:	48 89 c2             	mov    %rax,%rdx
    75e2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    75e6:	48 89 c6             	mov    %rax,%rsi
    75e9:	48 89 d7             	mov    %rdx,%rdi
    75ec:	e8 1f ce ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    75f1:	be 0a 00 00 00       	mov    $0xa,%esi
    75f6:	48 89 c7             	mov    %rax,%rdi
    75f9:	e8 42 cf ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : supportedExtensions)
    75fe:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    7605:	48 89 c7             	mov    %rax,%rdi
    7608:	e8 21 57 00 00       	call   cd2e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    760d:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    7614:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    761b:	48 89 d6             	mov    %rdx,%rsi
    761e:	48 89 c7             	mov    %rax,%rdi
    7621:	e8 cd 56 00 00       	call   ccf3 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7626:	84 c0                	test   %al,%al
    7628:	75 8e                	jne    75b8 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x24a>
  std::cout << '\n';
    762a:	be 0a 00 00 00       	mov    $0xa,%esi
    762f:	48 8d 05 8a 2e 02 00 	lea    0x22e8a(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7636:	48 89 c7             	mov    %rax,%rdi
    7639:	e8 02 cf ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  std::cout << "Required extensions:\n";
    763e:	48 8d 05 54 3d 01 00 	lea    0x13d54(%rip),%rax        # 1b399 <_ZN6__pstl9execution2v1L5unseqE+0xce>
    7645:	48 89 c6             	mov    %rax,%rsi
    7648:	48 8d 05 71 2e 02 00 	lea    0x22e71(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    764f:	48 89 c7             	mov    %rax,%rdi
    7652:	e8 b9 cd ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extension : requiredExtensions)
    7657:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    765e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7662:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7666:	48 89 c7             	mov    %rax,%rdi
    7669:	e8 f6 56 00 00       	call   cd64 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    766e:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    7675:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7679:	48 89 c7             	mov    %rax,%rdi
    767c:	e8 09 57 00 00       	call   cd8a <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    7681:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    7688:	eb 58                	jmp    76e2 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x374>
    768a:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    7691:	48 89 c7             	mov    %rax,%rdi
    7694:	e8 75 57 00 00       	call   ce0e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    7699:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    std::cout << '\t' << extension << '\n';
    769d:	be 09 00 00 00       	mov    $0x9,%esi
    76a2:	48 8d 05 17 2e 02 00 	lea    0x22e17(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    76a9:	48 89 c7             	mov    %rax,%rdi
    76ac:	e8 8f ce ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    76b1:	48 89 c2             	mov    %rax,%rdx
    76b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    76b8:	48 8b 00             	mov    (%rax),%rax
    76bb:	48 89 c6             	mov    %rax,%rsi
    76be:	48 89 d7             	mov    %rdx,%rdi
    76c1:	e8 4a cd ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    76c6:	be 0a 00 00 00       	mov    $0xa,%esi
    76cb:	48 89 c7             	mov    %rax,%rdi
    76ce:	e8 6d ce ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : requiredExtensions)
    76d3:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    76da:	48 89 c7             	mov    %rax,%rdi
    76dd:	e8 0c 57 00 00       	call   cdee <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    76e2:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    76e9:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    76f0:	48 89 d6             	mov    %rdx,%rsi
    76f3:	48 89 c7             	mov    %rax,%rdi
    76f6:	e8 b8 56 00 00       	call   cdb3 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    76fb:	84 c0                	test   %al,%al
    76fd:	75 8b                	jne    768a <_ZN4rtvc17RenderApplication13creatInstanceEv+0x31c>
  std::cout << '\n';
    76ff:	be 0a 00 00 00       	mov    $0xa,%esi
    7704:	48 8d 05 b5 2d 02 00 	lea    0x22db5(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    770b:	48 89 c7             	mov    %rax,%rdi
    770e:	e8 2d ce ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
}
    7713:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    771a:	48 89 c7             	mov    %rax,%rdi
    771d:	e8 d2 50 00 00       	call   c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    7722:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7729:	48 89 c7             	mov    %rax,%rdi
    772c:	e8 a3 4b 00 00       	call   c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    7731:	eb 57                	jmp    778a <_ZN4rtvc17RenderApplication13creatInstanceEv+0x41c>
          "Validation layers requested but not available.");
    7733:	49 89 c4             	mov    %rax,%r12
    7736:	48 89 df             	mov    %rbx,%rdi
    7739:	e8 42 cb ff ff       	call   4280 <__cxa_free_exception@plt>
    773e:	4c 89 e0             	mov    %r12,%rax
    7741:	48 89 c7             	mov    %rax,%rdi
    7744:	e8 27 d1 ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create instance.");
    7749:	49 89 c4             	mov    %rax,%r12
    774c:	48 89 df             	mov    %rbx,%rdi
    774f:	e8 2c cb ff ff       	call   4280 <__cxa_free_exception@plt>
    7754:	4c 89 e3             	mov    %r12,%rbx
    7757:	eb 17                	jmp    7770 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x402>
}
    7759:	48 89 c3             	mov    %rax,%rbx
    775c:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    7763:	48 89 c7             	mov    %rax,%rdi
    7766:	e8 89 50 00 00       	call   c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    776b:	eb 03                	jmp    7770 <_ZN4rtvc17RenderApplication13creatInstanceEv+0x402>
    776d:	48 89 c3             	mov    %rax,%rbx
    7770:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    7777:	48 89 c7             	mov    %rax,%rdi
    777a:	e8 55 4b 00 00       	call   c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    777f:	48 89 d8             	mov    %rbx,%rax
    7782:	48 89 c7             	mov    %rax,%rdi
    7785:	e8 e6 d0 ff ff       	call   4870 <_Unwind_Resume@plt>
    778a:	48 81 c4 30 01 00 00 	add    $0x130,%rsp
    7791:	5b                   	pop    %rbx
    7792:	41 5c                	pop    %r12
    7794:	5d                   	pop    %rbp
    7795:	c3                   	ret

0000000000007796 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::checkDeviceExtensionSupport(
    VkPhysicalDevice device) {
    7796:	55                   	push   %rbp
    7797:	48 89 e5             	mov    %rsp,%rbp
    779a:	53                   	push   %rbx
    779b:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    77a2:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
    77a9:	48 89 b5 40 ff ff ff 	mov    %rsi,-0xc0(%rbp)
  uint32_t extensionCount;
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    77b0:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    77b4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    77bb:	b9 00 00 00 00       	mov    $0x0,%ecx
    77c0:	be 00 00 00 00       	mov    $0x0,%esi
    77c5:	48 89 c7             	mov    %rax,%rdi
    77c8:	e8 b3 ce ff ff       	call   4680 <vkEnumerateDeviceExtensionProperties@plt>
                                       nullptr);

  std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    77cd:	8b 45 a8             	mov    -0x58(%rbp),%eax
    77d0:	89 c3                	mov    %eax,%ebx
    77d2:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    77d6:	48 89 c7             	mov    %rax,%rdi
    77d9:	e8 68 4f 00 00       	call   c746 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    77de:	48 8d 55 af          	lea    -0x51(%rbp),%rdx
    77e2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    77e6:	48 89 de             	mov    %rbx,%rsi
    77e9:	48 89 c7             	mov    %rax,%rdi
    77ec:	e8 8d 4f 00 00       	call   c77e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    77f1:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    77f5:	48 89 c7             	mov    %rax,%rdi
    77f8:	e8 65 4f 00 00       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
  vkEnumerateDeviceExtensionProperties(device, nullptr, &extensionCount,
    77fd:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7801:	48 89 c7             	mov    %rax,%rdi
    7804:	e8 2f 50 00 00       	call   c838 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    7809:	48 89 c1             	mov    %rax,%rcx
    780c:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
    7810:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
    7817:	be 00 00 00 00       	mov    $0x0,%esi
    781c:	48 89 c7             	mov    %rax,%rdi
    781f:	e8 5c ce ff ff       	call   4680 <vkEnumerateDeviceExtensionProperties@plt>
                                       availableExtensions.data());

  std::set<std::string> requiredExtensions{deviceExtensions.begin(),
    7824:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    782b:	48 83 c0 60          	add    $0x60,%rax
    782f:	48 89 c7             	mov    %rax,%rdi
    7832:	e8 85 52 00 00       	call   cabc <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    7837:	48 89 c3             	mov    %rax,%rbx
                                           deviceExtensions.end()};
    783a:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    7841:	48 83 c0 60          	add    $0x60,%rax
    7845:	48 89 c7             	mov    %rax,%rdi
    7848:	e8 95 52 00 00       	call   cae2 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    784d:	48 89 c2             	mov    %rax,%rdx
    7850:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7857:	48 89 de             	mov    %rbx,%rsi
    785a:	48 89 c7             	mov    %rax,%rdi
    785d:	e8 f6 55 00 00       	call   ce58 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>

  for (const auto &extension : availableExtensions)
    7862:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    7866:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    786a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    786e:	48 89 c7             	mov    %rax,%rdi
    7871:	e8 2e 54 00 00       	call   cca4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    7876:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
    787d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7881:	48 89 c7             	mov    %rax,%rdi
    7884:	e8 41 54 00 00       	call   ccca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    7889:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    7890:	eb 73                	jmp    7905 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x16f>
    7892:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    7899:	48 89 c7             	mov    %rax,%rdi
    789c:	e8 b1 54 00 00       	call   cd52 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    78a1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    requiredExtensions.erase(extension.extensionName);
    78a5:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    78a9:	48 89 c7             	mov    %rax,%rdi
    78ac:	e8 cf cf ff ff       	call   4880 <_ZNSaIcEC1Ev@plt>
    78b1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    78b5:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    78b9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    78bd:	48 89 ce             	mov    %rcx,%rsi
    78c0:	48 89 c7             	mov    %rax,%rdi
    78c3:	e8 18 49 00 00       	call   c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    78c8:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    78cc:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    78d3:	48 89 d6             	mov    %rdx,%rsi
    78d6:	48 89 c7             	mov    %rax,%rdi
    78d9:	e8 22 56 00 00       	call   cf00 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    78de:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    78e2:	48 89 c7             	mov    %rax,%rdi
    78e5:	e8 46 c9 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    78ea:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    78ee:	48 89 c7             	mov    %rax,%rdi
    78f1:	e8 ca cb ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
  for (const auto &extension : availableExtensions)
    78f6:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    78fd:	48 89 c7             	mov    %rax,%rdi
    7900:	e8 29 54 00 00       	call   cd2e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7905:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    790c:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    7913:	48 89 d6             	mov    %rdx,%rsi
    7916:	48 89 c7             	mov    %rax,%rdi
    7919:	e8 d5 53 00 00       	call   ccf3 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    791e:	84 c0                	test   %al,%al
    7920:	0f 85 6c ff ff ff    	jne    7892 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0xfc>

  return requiredExtensions.empty();
    7926:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    792d:	48 89 c7             	mov    %rax,%rdi
    7930:	e8 f1 55 00 00       	call   cf26 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>
    7935:	89 c3                	mov    %eax,%ebx
    7937:	90                   	nop
}
    7938:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    793f:	48 89 c7             	mov    %rax,%rdi
    7942:	e8 1b 46 00 00       	call   bf62 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    7947:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    794b:	48 89 c7             	mov    %rax,%rdi
    794e:	e8 a1 4e 00 00       	call   c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
  return requiredExtensions.empty();
    7953:	89 d8                	mov    %ebx,%eax
    7955:	eb 65                	jmp    79bc <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x226>
  std::vector<VkExtensionProperties> availableExtensions{extensionCount};
    7957:	48 89 c3             	mov    %rax,%rbx
    795a:	48 8d 45 af          	lea    -0x51(%rbp),%rax
    795e:	48 89 c7             	mov    %rax,%rdi
    7961:	e8 fc 4d 00 00       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7966:	48 89 d8             	mov    %rbx,%rax
    7969:	48 89 c7             	mov    %rax,%rdi
    796c:	e8 ff ce ff ff       	call   4870 <_Unwind_Resume@plt>
    requiredExtensions.erase(extension.extensionName);
    7971:	48 89 c3             	mov    %rax,%rbx
    7974:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7978:	48 89 c7             	mov    %rax,%rdi
    797b:	e8 b0 c8 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    7980:	eb 03                	jmp    7985 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x1ef>
    7982:	48 89 c3             	mov    %rax,%rbx
    7985:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    7989:	48 89 c7             	mov    %rax,%rdi
    798c:	e8 2f cb ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
}
    7991:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    7998:	48 89 c7             	mov    %rax,%rdi
    799b:	e8 c2 45 00 00       	call   bf62 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>
    79a0:	eb 03                	jmp    79a5 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x20f>
    79a2:	48 89 c3             	mov    %rax,%rbx
    79a5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    79a9:	48 89 c7             	mov    %rax,%rdi
    79ac:	e8 43 4e 00 00       	call   c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    79b1:	48 89 d8             	mov    %rbx,%rax
    79b4:	48 89 c7             	mov    %rax,%rdi
    79b7:	e8 b4 ce ff ff       	call   4870 <_Unwind_Resume@plt>
    79bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    79c0:	c9                   	leave
    79c1:	c3                   	ret

00000000000079c2 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::SwapChainSupportDetails
rtvc::RenderApplication::querySwapChainSupport(VkPhysicalDevice device) {
    79c2:	55                   	push   %rbp
    79c3:	48 89 e5             	mov    %rsp,%rbp
    79c6:	53                   	push   %rbx
    79c7:	48 83 ec 38          	sub    $0x38,%rsp
    79cb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    79cf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    79d3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  SwapChainSupportDetails details;
    79d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79db:	48 89 c7             	mov    %rax,%rdi
    79de:	e8 43 46 00 00       	call   c026 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>

  vkGetPhysicalDeviceSurfaceCapabilitiesKHR(device, surface,
    79e3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    79e7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    79eb:	48 8b 48 50          	mov    0x50(%rax),%rcx
    79ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    79f3:	48 89 ce             	mov    %rcx,%rsi
    79f6:	48 89 c7             	mov    %rax,%rdi
    79f9:	e8 62 c9 ff ff       	call   4360 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
                                            &details.capabilities);

  uint32_t formatCount;
  vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount, nullptr);
    79fe:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a02:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7a06:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    7a0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a0e:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a13:	48 89 c7             	mov    %rax,%rdi
    7a16:	e8 d5 cb ff ff       	call   45f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
  if (formatCount != 0) {
    7a1b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    7a1e:	85 c0                	test   %eax,%eax
    7a20:	74 43                	je     7a65 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0xa3>
    details.formats.resize(formatCount);
    7a22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a26:	48 83 c0 38          	add    $0x38,%rax
    7a2a:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7a2d:	89 d2                	mov    %edx,%edx
    7a2f:	48 89 d6             	mov    %rdx,%rsi
    7a32:	48 89 c7             	mov    %rax,%rdi
    7a35:	e8 b2 56 00 00       	call   d0ec <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>
    vkGetPhysicalDeviceSurfaceFormatsKHR(device, surface, &formatCount,
    7a3a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a3e:	48 83 c0 38          	add    $0x38,%rax
    7a42:	48 89 c7             	mov    %rax,%rdi
    7a45:	e8 28 57 00 00       	call   d172 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    7a4a:	48 89 c1             	mov    %rax,%rcx
    7a4d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a51:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7a55:	48 8d 55 ec          	lea    -0x14(%rbp),%rdx
    7a59:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a5d:	48 89 c7             	mov    %rax,%rdi
    7a60:	e8 8b cb ff ff       	call   45f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                         details.formats.data());
  }

  uint32_t presentModeCount;
  vkGetPhysicalDeviceSurfacePresentModesKHR(device, surface, &presentModeCount,
    7a65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a69:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7a6d:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a71:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7a75:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a7a:	48 89 c7             	mov    %rax,%rdi
    7a7d:	e8 7e cb ff ff       	call   4600 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
                                            nullptr);
  if (presentModeCount != 0) {
    7a82:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7a85:	85 c0                	test   %eax,%eax
    7a87:	74 5f                	je     7ae8 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
    details.presentModes.resize(presentModeCount);
    7a89:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a8d:	48 83 c0 50          	add    $0x50,%rax
    7a91:	8b 55 e8             	mov    -0x18(%rbp),%edx
    7a94:	89 d2                	mov    %edx,%edx
    7a96:	48 89 d6             	mov    %rdx,%rsi
    7a99:	48 89 c7             	mov    %rax,%rdi
    7a9c:	e8 f5 56 00 00       	call   d196 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>
    vkGetPhysicalDeviceSurfacePresentModesKHR(
    7aa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7aa5:	48 83 c0 50          	add    $0x50,%rax
    7aa9:	48 89 c7             	mov    %rax,%rdi
    7aac:	e8 6b 57 00 00       	call   d21c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7ab1:	48 89 c1             	mov    %rax,%rcx
    7ab4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ab8:	48 8b 70 50          	mov    0x50(%rax),%rsi
    7abc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7ac0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    7ac4:	48 89 c7             	mov    %rax,%rdi
    7ac7:	e8 34 cb ff ff       	call   4600 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
        device, surface, &presentModeCount, details.presentModes.data());
  }

  return details;
    7acc:	eb 1a                	jmp    7ae8 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T+0x126>
}
    7ace:	48 89 c3             	mov    %rax,%rbx
    7ad1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ad5:	48 89 c7             	mov    %rax,%rdi
    7ad8:	e8 79 45 00 00       	call   c056 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    7add:	48 89 d8             	mov    %rbx,%rax
    7ae0:	48 89 c7             	mov    %rax,%rdi
    7ae3:	e8 88 cd ff ff       	call   4870 <_Unwind_Resume@plt>
  return details;
    7ae8:	90                   	nop
}
    7ae9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7aed:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7af1:	c9                   	leave
    7af2:	c3                   	ret
    7af3:	90                   	nop

0000000000007af4 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>:

bool rtvc::RenderApplication::isSuitableDevice(VkPhysicalDevice device) {
    7af4:	55                   	push   %rbp
    7af5:	48 89 e5             	mov    %rsp,%rbp
    7af8:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    7aff:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    7b06:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  QueueFamilyIndices indices = findQueueFamilies(device);
    7b0d:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7b14:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7b1b:	48 89 d6             	mov    %rdx,%rsi
    7b1e:	48 89 c7             	mov    %rax,%rdi
    7b21:	e8 28 06 00 00       	call   814e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    7b26:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7b2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

  bool extensionsSupported = checkDeviceExtensionSupport(device);
    7b2e:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7b35:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    7b3c:	48 89 d6             	mov    %rdx,%rsi
    7b3f:	48 89 c7             	mov    %rax,%rdi
    7b42:	e8 4f fc ff ff       	call   7796 <_ZN4rtvc17RenderApplication27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    7b47:	88 45 fe             	mov    %al,-0x2(%rbp)

  bool swapChainAdequate = false;
    7b4a:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
  if (extensionsSupported) {
    7b4e:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    7b52:	74 72                	je     7bc6 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xd2>
    SwapChainSupportDetails swapChainSupport = querySwapChainSupport(device);
    7b54:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7b5b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
    7b62:	48 8b 8d 68 ff ff ff 	mov    -0x98(%rbp),%rcx
    7b69:	48 89 ce             	mov    %rcx,%rsi
    7b6c:	48 89 c7             	mov    %rax,%rdi
    7b6f:	e8 4e fe ff ff       	call   79c2 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    7b74:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7b7b:	48 83 c0 38          	add    $0x38,%rax
    7b7f:	48 89 c7             	mov    %rax,%rdi
    7b82:	e8 b9 56 00 00       	call   d240 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    7b87:	83 f0 01             	xor    $0x1,%eax
    7b8a:	84 c0                	test   %al,%al
    7b8c:	74 21                	je     7baf <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
                        !swapChainSupport.presentModes.empty();
    7b8e:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7b95:	48 83 c0 50          	add    $0x50,%rax
    7b99:	48 89 c7             	mov    %rax,%rdi
    7b9c:	e8 e1 56 00 00       	call   d282 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>
    7ba1:	83 f0 01             	xor    $0x1,%eax
    swapChainAdequate = !swapChainSupport.formats.empty() &&
    7ba4:	84 c0                	test   %al,%al
    7ba6:	74 07                	je     7baf <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xbb>
    7ba8:	b8 01 00 00 00       	mov    $0x1,%eax
    7bad:	eb 05                	jmp    7bb4 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xc0>
    7baf:	b8 00 00 00 00       	mov    $0x0,%eax
    7bb4:	88 45 ff             	mov    %al,-0x1(%rbp)
  }
    7bb7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    7bbe:	48 89 c7             	mov    %rax,%rdi
    7bc1:	e8 90 44 00 00       	call   c056 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>

  return indices.isComplete() && extensionsSupported && swapChainAdequate;
    7bc6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    7bca:	48 89 c7             	mov    %rax,%rdi
    7bcd:	e8 1a 43 00 00       	call   beec <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
    7bd2:	84 c0                	test   %al,%al
    7bd4:	74 13                	je     7be9 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7bd6:	80 7d fe 00          	cmpb   $0x0,-0x2(%rbp)
    7bda:	74 0d                	je     7be9 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7bdc:	80 7d ff 00          	cmpb   $0x0,-0x1(%rbp)
    7be0:	74 07                	je     7be9 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xf5>
    7be2:	b8 01 00 00 00       	mov    $0x1,%eax
    7be7:	eb 05                	jmp    7bee <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T+0xfa>
    7be9:	b8 00 00 00 00       	mov    $0x0,%eax
}
    7bee:	c9                   	leave
    7bef:	c3                   	ret

0000000000007bf0 <_ZN4rtvc17RenderApplication21rateDeviceSuitabilityEP18VkPhysicalDevice_T>:

int rtvc::RenderApplication::rateDeviceSuitability(
    [[maybe_unused]] VkPhysicalDevice device) {
    7bf0:	55                   	push   %rbp
    7bf1:	48 89 e5             	mov    %rsp,%rbp
    7bf4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bf8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return 0;
    7bfc:	b8 00 00 00 00       	mov    $0x0,%eax
}
    7c01:	5d                   	pop    %rbp
    7c02:	c3                   	ret
    7c03:	90                   	nop

0000000000007c04 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>:

void rtvc::RenderApplication::selectPhysicalDevice() {
    7c04:	55                   	push   %rbp
    7c05:	48 89 e5             	mov    %rsp,%rbp
    7c08:	41 54                	push   %r12
    7c0a:	53                   	push   %rbx
    7c0b:	48 81 ec a0 03 00 00 	sub    $0x3a0,%rsp
    7c12:	48 89 bd 58 fc ff ff 	mov    %rdi,-0x3a8(%rbp)
  uint32_t deviceCount = 0;
    7c19:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%rbp)
  vkEnumeratePhysicalDevices(instance, &deviceCount, nullptr);
    7c20:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7c27:	48 8b 40 10          	mov    0x10(%rax),%rax
    7c2b:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    7c2f:	ba 00 00 00 00       	mov    $0x0,%edx
    7c34:	48 89 ce             	mov    %rcx,%rsi
    7c37:	48 89 c7             	mov    %rax,%rdi
    7c3a:	e8 81 c5 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>

  if (deviceCount == 0)
    7c3f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7c42:	85 c0                	test   %eax,%eax
    7c44:	75 3b                	jne    7c81 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x7d>
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    7c46:	bf 10 00 00 00       	mov    $0x10,%edi
    7c4b:	e8 30 c5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    7c50:	48 89 c3             	mov    %rax,%rbx
    7c53:	48 8d 05 56 37 01 00 	lea    0x13756(%rip),%rax        # 1b3b0 <_ZN6__pstl9execution2v1L5unseqE+0xe5>
    7c5a:	48 89 c6             	mov    %rax,%rsi
    7c5d:	48 89 df             	mov    %rbx,%rdi
    7c60:	e8 9b c4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7c65:	48 8b 05 3c 23 02 00 	mov    0x2233c(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7c6c:	48 89 c2             	mov    %rax,%rdx
    7c6f:	48 8d 05 ca 20 02 00 	lea    0x220ca(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7c76:	48 89 c6             	mov    %rax,%rsi
    7c79:	48 89 df             	mov    %rbx,%rdi
    7c7c:	e8 9f cb ff ff       	call   4820 <__cxa_throw@plt>

  std::vector<VkPhysicalDevice> devices{deviceCount};
    7c81:	8b 45 c8             	mov    -0x38(%rbp),%eax
    7c84:	89 c3                	mov    %eax,%ebx
    7c86:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7c8a:	48 89 c7             	mov    %rax,%rdi
    7c8d:	e8 18 d7 ff ff       	call   53aa <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7c92:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    7c96:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7c9a:	48 89 de             	mov    %rbx,%rsi
    7c9d:	48 89 c7             	mov    %rax,%rdi
    7ca0:	e8 3d d7 ff ff       	call   53e2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7ca5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    7ca9:	48 89 c7             	mov    %rax,%rdi
    7cac:	e8 15 d7 ff ff       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  vkEnumeratePhysicalDevices(instance, &deviceCount, devices.data());
    7cb1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7cb5:	48 89 c7             	mov    %rax,%rdi
    7cb8:	e8 df d7 ff ff       	call   549c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7cbd:	48 89 c2             	mov    %rax,%rdx
    7cc0:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7cc7:	48 8b 40 10          	mov    0x10(%rax),%rax
    7ccb:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
    7ccf:	48 89 ce             	mov    %rcx,%rsi
    7cd2:	48 89 c7             	mov    %rax,%rdi
    7cd5:	e8 e6 c4 ff ff       	call   41c0 <vkEnumeratePhysicalDevices@plt>

  int noDeviceSelected = true;
    7cda:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)

  std::cout << "Found " << devices.size() << " GPUs with Vulkan support:\n";
    7ce1:	48 8d 05 f1 36 01 00 	lea    0x136f1(%rip),%rax        # 1b3d9 <_ZN6__pstl9execution2v1L5unseqE+0x10e>
    7ce8:	48 89 c6             	mov    %rax,%rsi
    7ceb:	48 8d 05 ce 27 02 00 	lea    0x227ce(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7cf2:	48 89 c7             	mov    %rax,%rdi
    7cf5:	e8 16 c7 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7cfa:	48 89 c3             	mov    %rax,%rbx
    7cfd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7d01:	48 89 c7             	mov    %rax,%rdi
    7d04:	e8 85 d9 ff ff       	call   568e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    7d09:	48 89 c6             	mov    %rax,%rsi
    7d0c:	48 89 df             	mov    %rbx,%rdi
    7d0f:	e8 7c c3 ff ff       	call   4090 <_ZNSolsEm@plt>
    7d14:	48 89 c2             	mov    %rax,%rdx
    7d17:	48 8d 05 c2 36 01 00 	lea    0x136c2(%rip),%rax        # 1b3e0 <_ZN6__pstl9execution2v1L5unseqE+0x115>
    7d1e:	48 89 c6             	mov    %rax,%rsi
    7d21:	48 89 d7             	mov    %rdx,%rdi
    7d24:	e8 e7 c6 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (size_t i = 0; i < devices.size(); ++i) {
    7d29:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    7d30:	00 
    7d31:	e9 af 02 00 00       	jmp    7fe5 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x3e1>
    VkPhysicalDeviceProperties properties{};
    7d36:	48 8d 95 60 fc ff ff 	lea    -0x3a0(%rbp),%rdx
    7d3d:	b8 00 00 00 00       	mov    $0x0,%eax
    7d42:	b9 67 00 00 00       	mov    $0x67,%ecx
    7d47:	48 89 d7             	mov    %rdx,%rdi
    7d4a:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vkGetPhysicalDeviceProperties(devices[i], &properties);
    7d4d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7d51:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7d55:	48 89 d6             	mov    %rdx,%rsi
    7d58:	48 89 c7             	mov    %rax,%rdi
    7d5b:	e8 64 55 00 00       	call   d2c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    7d60:	48 8b 00             	mov    (%rax),%rax
    7d63:	48 8d 95 60 fc ff ff 	lea    -0x3a0(%rbp),%rdx
    7d6a:	48 89 d6             	mov    %rdx,%rsi
    7d6d:	48 89 c7             	mov    %rax,%rdi
    7d70:	e8 9b c3 ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>

    std::cout << "GPU " << i;
    7d75:	48 8d 05 80 36 01 00 	lea    0x13680(%rip),%rax        # 1b3fc <_ZN6__pstl9execution2v1L5unseqE+0x131>
    7d7c:	48 89 c6             	mov    %rax,%rsi
    7d7f:	48 8d 05 3a 27 02 00 	lea    0x2273a(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7d86:	48 89 c7             	mov    %rax,%rdi
    7d89:	e8 82 c6 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7d8e:	48 89 c2             	mov    %rax,%rdx
    7d91:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7d95:	48 89 c6             	mov    %rax,%rsi
    7d98:	48 89 d7             	mov    %rdx,%rdi
    7d9b:	e8 f0 c2 ff ff       	call   4090 <_ZNSolsEm@plt>
    if (noDeviceSelected) {
    7da0:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    7da4:	74 6d                	je     7e13 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x20f>
      if (isSuitableDevice(devices[i])) {
    7da6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7daa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7dae:	48 89 d6             	mov    %rdx,%rsi
    7db1:	48 89 c7             	mov    %rax,%rdi
    7db4:	e8 0b 55 00 00       	call   d2c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    7db9:	48 8b 10             	mov    (%rax),%rdx
    7dbc:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7dc3:	48 89 d6             	mov    %rdx,%rsi
    7dc6:	48 89 c7             	mov    %rax,%rdi
    7dc9:	e8 26 fd ff ff       	call   7af4 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    7dce:	84 c0                	test   %al,%al
    7dd0:	74 41                	je     7e13 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x20f>
        physicalDevice = devices[i];
    7dd2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7dd6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7dda:	48 89 d6             	mov    %rdx,%rsi
    7ddd:	48 89 c7             	mov    %rax,%rdi
    7de0:	e8 df 54 00 00       	call   d2c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>
    7de5:	48 8b 10             	mov    (%rax),%rdx
    7de8:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    7def:	48 89 50 38          	mov    %rdx,0x38(%rax)
        std::cout << " (Selected)";
    7df3:	48 8d 05 07 36 01 00 	lea    0x13607(%rip),%rax        # 1b401 <_ZN6__pstl9execution2v1L5unseqE+0x136>
    7dfa:	48 89 c6             	mov    %rax,%rsi
    7dfd:	48 8d 05 bc 26 02 00 	lea    0x226bc(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7e04:	48 89 c7             	mov    %rax,%rdi
    7e07:	e8 04 c6 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
        noDeviceSelected = false;
    7e0c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
      }
    }

    std::cout << ":\n";
    7e13:	48 8d 05 f3 35 01 00 	lea    0x135f3(%rip),%rax        # 1b40d <_ZN6__pstl9execution2v1L5unseqE+0x142>
    7e1a:	48 89 c6             	mov    %rax,%rsi
    7e1d:	48 8d 05 9c 26 02 00 	lea    0x2269c(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7e24:	48 89 c7             	mov    %rax,%rdi
    7e27:	e8 e4 c5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    std::cout << "\tAPI version: "
    7e2c:	48 8d 05 dd 35 01 00 	lea    0x135dd(%rip),%rax        # 1b410 <_ZN6__pstl9execution2v1L5unseqE+0x145>
    7e33:	48 89 c6             	mov    %rax,%rsi
    7e36:	48 8d 05 83 26 02 00 	lea    0x22683(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7e3d:	48 89 c7             	mov    %rax,%rdi
    7e40:	e8 cb c5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7e45:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_MAJOR(properties.apiVersion) << '.'
    7e48:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    7e4e:	c1 e8 16             	shr    $0x16,%eax
    7e51:	83 e0 7f             	and    $0x7f,%eax
    7e54:	89 c6                	mov    %eax,%esi
    7e56:	48 89 d7             	mov    %rdx,%rdi
    7e59:	e8 e2 c7 ff ff       	call   4640 <_ZNSolsEj@plt>
    7e5e:	be 2e 00 00 00       	mov    $0x2e,%esi
    7e63:	48 89 c7             	mov    %rax,%rdi
    7e66:	e8 d5 c6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    7e6b:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_MINOR(properties.apiVersion) << '.'
    7e6e:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    7e74:	c1 e8 0c             	shr    $0xc,%eax
    7e77:	25 ff 03 00 00       	and    $0x3ff,%eax
    7e7c:	89 c6                	mov    %eax,%esi
    7e7e:	48 89 d7             	mov    %rdx,%rdi
    7e81:	e8 ba c7 ff ff       	call   4640 <_ZNSolsEj@plt>
    7e86:	be 2e 00 00 00       	mov    $0x2e,%esi
    7e8b:	48 89 c7             	mov    %rax,%rdi
    7e8e:	e8 ad c6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    7e93:	48 89 c2             	mov    %rax,%rdx
              << VK_API_VERSION_PATCH(properties.apiVersion) << '\n';
    7e96:	8b 85 60 fc ff ff    	mov    -0x3a0(%rbp),%eax
    7e9c:	25 ff 0f 00 00       	and    $0xfff,%eax
    7ea1:	89 c6                	mov    %eax,%esi
    7ea3:	48 89 d7             	mov    %rdx,%rdi
    7ea6:	e8 95 c7 ff ff       	call   4640 <_ZNSolsEj@plt>
    7eab:	be 0a 00 00 00       	mov    $0xa,%esi
    7eb0:	48 89 c7             	mov    %rax,%rdi
    7eb3:	e8 88 c6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDriver version: " << properties.driverVersion << '\n';
    7eb8:	48 8d 05 60 35 01 00 	lea    0x13560(%rip),%rax        # 1b41f <_ZN6__pstl9execution2v1L5unseqE+0x154>
    7ebf:	48 89 c6             	mov    %rax,%rsi
    7ec2:	48 8d 05 f7 25 02 00 	lea    0x225f7(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7ec9:	48 89 c7             	mov    %rax,%rdi
    7ecc:	e8 3f c5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7ed1:	48 89 c2             	mov    %rax,%rdx
    7ed4:	8b 85 64 fc ff ff    	mov    -0x39c(%rbp),%eax
    7eda:	89 c6                	mov    %eax,%esi
    7edc:	48 89 d7             	mov    %rdx,%rdi
    7edf:	e8 5c c7 ff ff       	call   4640 <_ZNSolsEj@plt>
    7ee4:	be 0a 00 00 00       	mov    $0xa,%esi
    7ee9:	48 89 c7             	mov    %rax,%rdi
    7eec:	e8 4f c6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tVendor ID: " << properties.vendorID << '\n';
    7ef1:	48 8d 05 39 35 01 00 	lea    0x13539(%rip),%rax        # 1b431 <_ZN6__pstl9execution2v1L5unseqE+0x166>
    7ef8:	48 89 c6             	mov    %rax,%rsi
    7efb:	48 8d 05 be 25 02 00 	lea    0x225be(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7f02:	48 89 c7             	mov    %rax,%rdi
    7f05:	e8 06 c5 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7f0a:	48 89 c2             	mov    %rax,%rdx
    7f0d:	8b 85 68 fc ff ff    	mov    -0x398(%rbp),%eax
    7f13:	89 c6                	mov    %eax,%esi
    7f15:	48 89 d7             	mov    %rdx,%rdi
    7f18:	e8 23 c7 ff ff       	call   4640 <_ZNSolsEj@plt>
    7f1d:	be 0a 00 00 00       	mov    $0xa,%esi
    7f22:	48 89 c7             	mov    %rax,%rdi
    7f25:	e8 16 c6 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice ID: " << properties.deviceID << '\n';
    7f2a:	48 8d 05 0d 35 01 00 	lea    0x1350d(%rip),%rax        # 1b43e <_ZN6__pstl9execution2v1L5unseqE+0x173>
    7f31:	48 89 c6             	mov    %rax,%rsi
    7f34:	48 8d 05 85 25 02 00 	lea    0x22585(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7f3b:	48 89 c7             	mov    %rax,%rdi
    7f3e:	e8 cd c4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7f43:	48 89 c2             	mov    %rax,%rdx
    7f46:	8b 85 6c fc ff ff    	mov    -0x394(%rbp),%eax
    7f4c:	89 c6                	mov    %eax,%esi
    7f4e:	48 89 d7             	mov    %rdx,%rdi
    7f51:	e8 ea c6 ff ff       	call   4640 <_ZNSolsEj@plt>
    7f56:	be 0a 00 00 00       	mov    $0xa,%esi
    7f5b:	48 89 c7             	mov    %rax,%rdi
    7f5e:	e8 dd c5 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice type: " << properties.deviceType << '\n';
    7f63:	48 8d 05 e1 34 01 00 	lea    0x134e1(%rip),%rax        # 1b44b <_ZN6__pstl9execution2v1L5unseqE+0x180>
    7f6a:	48 89 c6             	mov    %rax,%rsi
    7f6d:	48 8d 05 4c 25 02 00 	lea    0x2254c(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7f74:	48 89 c7             	mov    %rax,%rdi
    7f77:	e8 94 c4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7f7c:	8b 95 70 fc ff ff    	mov    -0x390(%rbp),%edx
    7f82:	89 d6                	mov    %edx,%esi
    7f84:	48 89 c7             	mov    %rax,%rdi
    7f87:	e8 a4 c8 ff ff       	call   4830 <_ZNSolsEi@plt>
    7f8c:	be 0a 00 00 00       	mov    $0xa,%esi
    7f91:	48 89 c7             	mov    %rax,%rdi
    7f94:	e8 a7 c5 ff ff       	call   4540 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    std::cout << "\tDevice name: " << properties.deviceName << "\n\n";
    7f99:	48 8d 05 ba 34 01 00 	lea    0x134ba(%rip),%rax        # 1b45a <_ZN6__pstl9execution2v1L5unseqE+0x18f>
    7fa0:	48 89 c6             	mov    %rax,%rsi
    7fa3:	48 8d 05 16 25 02 00 	lea    0x22516(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    7faa:	48 89 c7             	mov    %rax,%rdi
    7fad:	e8 5e c4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7fb2:	48 89 c2             	mov    %rax,%rdx
    7fb5:	48 8d 85 60 fc ff ff 	lea    -0x3a0(%rbp),%rax
    7fbc:	48 83 c0 14          	add    $0x14,%rax
    7fc0:	48 89 c6             	mov    %rax,%rsi
    7fc3:	48 89 d7             	mov    %rdx,%rdi
    7fc6:	e8 45 c4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    7fcb:	48 89 c2             	mov    %rax,%rdx
    7fce:	48 8d 05 94 34 01 00 	lea    0x13494(%rip),%rax        # 1b469 <_ZN6__pstl9execution2v1L5unseqE+0x19e>
    7fd5:	48 89 c6             	mov    %rax,%rsi
    7fd8:	48 89 d7             	mov    %rdx,%rdi
    7fdb:	e8 30 c4 ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (size_t i = 0; i < devices.size(); ++i) {
    7fe0:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
    7fe5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7fe9:	48 89 c7             	mov    %rax,%rdi
    7fec:	e8 9d d6 ff ff       	call   568e <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4sizeEv>
    7ff1:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)
    7ff5:	0f 92 c0             	setb   %al
    7ff8:	84 c0                	test   %al,%al
    7ffa:	0f 85 36 fd ff ff    	jne    7d36 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x132>
  }

  for (const auto &device : devices) {
    8000:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8004:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8008:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    800c:	48 89 c7             	mov    %rax,%rdi
    800f:	e8 9e d6 ff ff       	call   56b2 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    8014:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    8018:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    801c:	48 89 c7             	mov    %rax,%rdi
    801f:	e8 b4 d6 ff ff       	call   56d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    8024:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    8028:	eb 4d                	jmp    8077 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x473>
    802a:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    802e:	48 89 c7             	mov    %rax,%rdi
    8031:	e8 26 d7 ff ff       	call   575c <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    8036:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (isSuitableDevice(device)) {
    803a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    803e:	48 8b 10             	mov    (%rax),%rdx
    8041:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    8048:	48 89 d6             	mov    %rdx,%rsi
    804b:	48 89 c7             	mov    %rax,%rdi
    804e:	e8 a1 fa ff ff       	call   7af4 <_ZN4rtvc17RenderApplication16isSuitableDeviceEP18VkPhysicalDevice_T>
    8053:	84 c0                	test   %al,%al
    8055:	74 14                	je     806b <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x467>
      physicalDevice = device;
    8057:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    805b:	48 8b 10             	mov    (%rax),%rdx
    805e:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    8065:	48 89 50 38          	mov    %rdx,0x38(%rax)
      break;
    8069:	eb 23                	jmp    808e <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x48a>
  for (const auto &device : devices) {
    806b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    806f:	48 89 c7             	mov    %rax,%rdi
    8072:	e8 c5 d6 ff ff       	call   573c <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    8077:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    807b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    807f:	48 89 d6             	mov    %rdx,%rsi
    8082:	48 89 c7             	mov    %rax,%rdi
    8085:	e8 77 d6 ff ff       	call   5701 <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    808a:	84 c0                	test   %al,%al
    808c:	75 9c                	jne    802a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x426>
    }
  }

  if (physicalDevice == VK_NULL_HANDLE) {
    808e:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
    8095:	48 8b 40 38          	mov    0x38(%rax),%rax
    8099:	48 85 c0             	test   %rax,%rax
    809c:	75 3b                	jne    80d9 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x4d5>
    throw std::runtime_error("Failed to find a suitable GPU.");
    809e:	bf 10 00 00 00       	mov    $0x10,%edi
    80a3:	e8 d8 c0 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    80a8:	48 89 c3             	mov    %rax,%rbx
    80ab:	48 8d 05 be 33 01 00 	lea    0x133be(%rip),%rax        # 1b470 <_ZN6__pstl9execution2v1L5unseqE+0x1a5>
    80b2:	48 89 c6             	mov    %rax,%rsi
    80b5:	48 89 df             	mov    %rbx,%rdi
    80b8:	e8 43 c0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    80bd:	48 8b 05 e4 1e 02 00 	mov    0x21ee4(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    80c4:	48 89 c2             	mov    %rax,%rdx
    80c7:	48 8d 05 72 1c 02 00 	lea    0x21c72(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    80ce:	48 89 c6             	mov    %rax,%rsi
    80d1:	48 89 df             	mov    %rbx,%rdi
    80d4:	e8 47 c7 ff ff       	call   4820 <__cxa_throw@plt>
  }
}
    80d9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    80dd:	48 89 c7             	mov    %rax,%rdi
    80e0:	e8 73 d3 ff ff       	call   5458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    80e5:	eb 5a                	jmp    8141 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x53d>
    throw std::runtime_error("Failed to find GPUs with Vulkan support.");
    80e7:	49 89 c4             	mov    %rax,%r12
    80ea:	48 89 df             	mov    %rbx,%rdi
    80ed:	e8 8e c1 ff ff       	call   4280 <__cxa_free_exception@plt>
    80f2:	4c 89 e0             	mov    %r12,%rax
    80f5:	48 89 c7             	mov    %rax,%rdi
    80f8:	e8 73 c7 ff ff       	call   4870 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> devices{deviceCount};
    80fd:	48 89 c3             	mov    %rax,%rbx
    8100:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8104:	48 89 c7             	mov    %rax,%rdi
    8107:	e8 ba d2 ff ff       	call   53c6 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    810c:	48 89 d8             	mov    %rbx,%rax
    810f:	48 89 c7             	mov    %rax,%rdi
    8112:	e8 59 c7 ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to find a suitable GPU.");
    8117:	49 89 c4             	mov    %rax,%r12
    811a:	48 89 df             	mov    %rbx,%rdi
    811d:	e8 5e c1 ff ff       	call   4280 <__cxa_free_exception@plt>
    8122:	4c 89 e3             	mov    %r12,%rbx
    8125:	eb 03                	jmp    812a <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv+0x526>
}
    8127:	48 89 c3             	mov    %rax,%rbx
    812a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    812e:	48 89 c7             	mov    %rax,%rdi
    8131:	e8 22 d3 ff ff       	call   5458 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8136:	48 89 d8             	mov    %rbx,%rax
    8139:	48 89 c7             	mov    %rax,%rdi
    813c:	e8 2f c7 ff ff       	call   4870 <_Unwind_Resume@plt>
    8141:	48 81 c4 a0 03 00 00 	add    $0x3a0,%rsp
    8148:	5b                   	pop    %rbx
    8149:	41 5c                	pop    %r12
    814b:	5d                   	pop    %rbp
    814c:	c3                   	ret
    814d:	90                   	nop

000000000000814e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>:

rtvc::RenderApplication::QueueFamilyIndices
rtvc::RenderApplication::findQueueFamilies(VkPhysicalDevice device) {
    814e:	55                   	push   %rbp
    814f:	48 89 e5             	mov    %rsp,%rbp
    8152:	53                   	push   %rbx
    8153:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    815a:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    8161:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
  QueueFamilyIndices indices{};
    8168:	66 0f ef c0          	pxor   %xmm0,%xmm0
    816c:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
  uint32_t queueFamilyCount = 0;
    8170:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount, nullptr);
    8177:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    817b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    8182:	ba 00 00 00 00       	mov    $0x0,%edx
    8187:	48 89 ce             	mov    %rcx,%rsi
    818a:	48 89 c7             	mov    %rax,%rdi
    818d:	e8 0e c1 ff ff       	call   42a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>

  std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    8192:	8b 45 ac             	mov    -0x54(%rbp),%eax
    8195:	89 c3                	mov    %eax,%ebx
    8197:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    819b:	48 89 c7             	mov    %rax,%rdi
    819e:	e8 41 51 00 00       	call   d2e4 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    81a3:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    81a7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    81ab:	48 89 de             	mov    %rbx,%rsi
    81ae:	48 89 c7             	mov    %rax,%rdi
    81b1:	e8 66 51 00 00       	call   d31c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    81b6:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    81ba:	48 89 c7             	mov    %rax,%rdi
    81bd:	e8 3e 51 00 00       	call   d300 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(device, &queueFamilyCount,
    81c2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    81c6:	48 89 c7             	mov    %rax,%rdi
    81c9:	e8 08 52 00 00       	call   d3d6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    81ce:	48 89 c2             	mov    %rax,%rdx
    81d1:	48 8d 4d ac          	lea    -0x54(%rbp),%rcx
    81d5:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    81dc:	48 89 ce             	mov    %rcx,%rsi
    81df:	48 89 c7             	mov    %rax,%rdi
    81e2:	e8 b9 c0 ff ff       	call   42a0 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           queueFamilies.data());

  int i = 0;
    81e7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  for (const auto &queueFamily : queueFamilies) {
    81ee:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    81f2:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    81f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81fa:	48 89 c7             	mov    %rax,%rdi
    81fd:	e8 f8 51 00 00       	call   d3fa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    8202:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    8206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    820a:	48 89 c7             	mov    %rax,%rdi
    820d:	e8 0e 52 00 00       	call   d420 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    8212:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    8219:	e9 a6 00 00 00       	jmp    82c4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x176>
    821e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8222:	48 89 c7             	mov    %rax,%rdi
    8225:	e8 7a 52 00 00       	call   d4a4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    822a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (queueFamily.queueFlags & VK_QUEUE_GRAPHICS_BIT)
    822e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8232:	8b 00                	mov    (%rax),%eax
    8234:	83 e0 01             	and    $0x1,%eax
    8237:	85 c0                	test   %eax,%eax
    8239:	74 13                	je     824e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x100>
      indices.graphicsFamily = i;
    823b:	48 8d 55 8c          	lea    -0x74(%rbp),%rdx
    823f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8243:	48 89 d6             	mov    %rdx,%rsi
    8246:	48 89 c7             	mov    %rax,%rdi
    8249:	e8 68 52 00 00       	call   d4b6 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

    VkBool32 presentSupport = false;
    824e:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    8255:	00 00 00 
    vkGetPhysicalDeviceSurfaceSupportKHR(device, i, surface, &presentSupport);
    8258:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    825f:	48 8b 50 50          	mov    0x50(%rax),%rdx
    8263:	8b 45 8c             	mov    -0x74(%rbp),%eax
    8266:	89 c6                	mov    %eax,%esi
    8268:	48 8d 8d 74 ff ff ff 	lea    -0x8c(%rbp),%rcx
    826f:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    8276:	48 89 c7             	mov    %rax,%rdi
    8279:	e8 32 c2 ff ff       	call   44b0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>

    if (presentSupport)
    827e:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
    8284:	85 c0                	test   %eax,%eax
    8286:	74 17                	je     829f <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x151>
      indices.presentFamily = i;
    8288:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    828c:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    8290:	48 83 c2 08          	add    $0x8,%rdx
    8294:	48 89 c6             	mov    %rax,%rsi
    8297:	48 89 d7             	mov    %rdx,%rdi
    829a:	e8 17 52 00 00       	call   d4b6 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>

    if (indices.isComplete())
    829f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    82a3:	48 89 c7             	mov    %rax,%rdi
    82a6:	e8 41 3c 00 00       	call   beec <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>
    82ab:	84 c0                	test   %al,%al
    82ad:	75 35                	jne    82e4 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x196>
      break;

    ++i;
    82af:	8b 45 8c             	mov    -0x74(%rbp),%eax
    82b2:	83 c0 01             	add    $0x1,%eax
    82b5:	89 45 8c             	mov    %eax,-0x74(%rbp)
  for (const auto &queueFamily : queueFamilies) {
    82b8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    82bc:	48 89 c7             	mov    %rax,%rdi
    82bf:	e8 c0 51 00 00       	call   d484 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    82c4:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    82cb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    82cf:	48 89 d6             	mov    %rdx,%rsi
    82d2:	48 89 c7             	mov    %rax,%rdi
    82d5:	e8 6f 51 00 00       	call   d449 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    82da:	84 c0                	test   %al,%al
    82dc:	0f 85 3c ff ff ff    	jne    821e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0xd0>
    82e2:	eb 01                	jmp    82e5 <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x197>
      break;
    82e4:	90                   	nop
  }

  return indices;
    82e5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    82e9:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    82ed:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    82f1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
}
    82f5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    82f9:	48 89 c7             	mov    %rax,%rdi
    82fc:	e8 91 50 00 00       	call   d392 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return indices;
    8301:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8305:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8309:	eb 34                	jmp    833f <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T+0x1f1>
  std::vector<VkQueueFamilyProperties> queueFamilies{queueFamilyCount};
    830b:	48 89 c3             	mov    %rax,%rbx
    830e:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8312:	48 89 c7             	mov    %rax,%rdi
    8315:	e8 e6 4f 00 00       	call   d300 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    831a:	48 89 d8             	mov    %rbx,%rax
    831d:	48 89 c7             	mov    %rax,%rdi
    8320:	e8 4b c5 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    8325:	48 89 c3             	mov    %rax,%rbx
    8328:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    832c:	48 89 c7             	mov    %rax,%rdi
    832f:	e8 5e 50 00 00       	call   d392 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8334:	48 89 d8             	mov    %rbx,%rax
    8337:	48 89 c7             	mov    %rax,%rdi
    833a:	e8 31 c5 ff ff       	call   4870 <_Unwind_Resume@plt>
    833f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8343:	c9                   	leave
    8344:	c3                   	ret
    8345:	90                   	nop

0000000000008346 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>:

void rtvc::RenderApplication::createLogicalDevice() {
    8346:	55                   	push   %rbp
    8347:	48 89 e5             	mov    %rsp,%rbp
    834a:	41 55                	push   %r13
    834c:	41 54                	push   %r12
    834e:	53                   	push   %rbx
    834f:	48 81 ec 08 02 00 00 	sub    $0x208,%rsp
    8356:	48 89 bd e8 fd ff ff 	mov    %rdi,-0x218(%rbp)
  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    835d:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8364:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8368:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    836f:	48 89 d6             	mov    %rdx,%rsi
    8372:	48 89 c7             	mov    %rax,%rdi
    8375:	e8 d4 fd ff ff       	call   814e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    837a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    837e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)

  std::vector<VkDeviceQueueCreateInfo> queueCreateInfos;
    8382:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8386:	48 89 c7             	mov    %rax,%rdi
    8389:	e8 30 3d 00 00       	call   c0be <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
  std::set<uint32_t> uniqueQueueFamilies = {indices.graphicsFamily.value(),
    838e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8392:	48 89 c7             	mov    %rax,%rdi
    8395:	e8 40 3d 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    839a:	8b 00                	mov    (%rax),%eax
                                            indices.presentFamily.value()};
    839c:	89 45 c8             	mov    %eax,-0x38(%rbp)
    839f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    83a3:	48 83 c0 08          	add    $0x8,%rax
    83a7:	48 89 c7             	mov    %rax,%rdi
    83aa:	e8 2b 3d 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    83af:	8b 00                	mov    (%rax),%eax
    83b1:	89 45 cc             	mov    %eax,-0x34(%rbp)
    83b4:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    83b8:	49 89 c4             	mov    %rax,%r12
    83bb:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    83c1:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    83c5:	48 89 c7             	mov    %rax,%rdi
    83c8:	e8 77 52 00 00       	call   d644 <_ZNSaIjEC1Ev>
    83cd:	4c 8d 45 d3          	lea    -0x2d(%rbp),%r8
    83d1:	48 8d 55 d2          	lea    -0x2e(%rbp),%rdx
    83d5:	4c 89 e6             	mov    %r12,%rsi
    83d8:	4c 89 ef             	mov    %r13,%rdi
    83db:	4c 89 e1             	mov    %r12,%rcx
    83de:	4c 89 eb             	mov    %r13,%rbx
    83e1:	48 89 df             	mov    %rbx,%rdi
    83e4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    83eb:	48 89 d1             	mov    %rdx,%rcx
    83ee:	48 89 fa             	mov    %rdi,%rdx
    83f1:	48 89 c7             	mov    %rax,%rdi
    83f4:	e8 67 52 00 00       	call   d660 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>
    83f9:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    83fd:	48 89 c7             	mov    %rax,%rdi
    8400:	e8 7b 3e 00 00       	call   c280 <_ZNSaIjED1Ev>

  float queuePriority = 1.0f;
    8405:	f3 0f 10 05 63 34 01 	movss  0x13463(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    840c:	00 
    840d:	f3 0f 11 85 5c ff ff 	movss  %xmm0,-0xa4(%rbp)
    8414:	ff 
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    8415:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    841c:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    8420:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8424:	48 89 c7             	mov    %rax,%rdi
    8427:	e8 54 53 00 00       	call   d780 <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>
    842c:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    8433:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8437:	48 89 c7             	mov    %rax,%rdi
    843a:	e8 5b 53 00 00       	call   d79a <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>
    843f:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    8446:	eb 7e                	jmp    84c6 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x180>
    8448:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    844f:	48 89 c7             	mov    %rax,%rdi
    8452:	e8 a7 53 00 00       	call   d7fe <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>
    8457:	8b 00                	mov    (%rax),%eax
    8459:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    VkDeviceQueueCreateInfo queueCreateInfo{};
    845c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8460:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    8467:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
    846e:	66 0f d6 85 10 fe ff 	movq   %xmm0,-0x1f0(%rbp)
    8475:	ff 
    queueCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    8476:	c7 85 f0 fd ff ff 02 	movl   $0x2,-0x210(%rbp)
    847d:	00 00 00 
    queueCreateInfo.queueFamilyIndex = queueFamily;
    8480:	8b 45 d4             	mov    -0x2c(%rbp),%eax
    8483:	89 85 04 fe ff ff    	mov    %eax,-0x1fc(%rbp)
    queueCreateInfo.queueCount = 1;
    8489:	c7 85 08 fe ff ff 01 	movl   $0x1,-0x1f8(%rbp)
    8490:	00 00 00 
    queueCreateInfo.pQueuePriorities = &queuePriority;
    8493:	48 8d 85 5c ff ff ff 	lea    -0xa4(%rbp),%rax
    849a:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    queueCreateInfos.push_back(queueCreateInfo);
    84a1:	48 8d 95 f0 fd ff ff 	lea    -0x210(%rbp),%rdx
    84a8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    84ac:	48 89 d6             	mov    %rdx,%rsi
    84af:	48 89 c7             	mov    %rax,%rdi
    84b2:	e8 65 53 00 00       	call   d81c <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>
  for (uint32_t queueFamily : uniqueQueueFamilies) {
    84b7:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    84be:	48 89 c7             	mov    %rax,%rdi
    84c1:	e8 10 53 00 00       	call   d7d6 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>
    84c6:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    84cd:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    84d4:	48 89 d6             	mov    %rdx,%rsi
    84d7:	48 89 c7             	mov    %rax,%rdi
    84da:	e8 d5 52 00 00       	call   d7b4 <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>
    84df:	84 c0                	test   %al,%al
    84e1:	0f 85 61 ff ff ff    	jne    8448 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x102>
  }

  VkPhysicalDeviceFeatures deviceFeatures{};
    84e7:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    84ee:	b8 00 00 00 00       	mov    $0x0,%eax
    84f3:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    84f8:	48 89 d7             	mov    %rdx,%rdi
    84fb:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    84fe:	48 89 fa             	mov    %rdi,%rdx
    8501:	89 02                	mov    %eax,(%rdx)
    8503:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo createInfo{};
    8507:	66 0f ef c0          	pxor   %xmm0,%xmm0
    850b:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    8512:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    8519:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    8520:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    8527:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    852e:	ff 
  createInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    852f:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    8536:	00 00 00 
  createInfo.queueCreateInfoCount = queueCreateInfos.size();
    8539:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    853d:	48 89 c7             	mov    %rax,%rdi
    8540:	e8 53 53 00 00       	call   d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
    8545:	89 85 44 fe ff ff    	mov    %eax,-0x1bc(%rbp)
  createInfo.pQueueCreateInfos = queueCreateInfos.data();
    854b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    854f:	48 89 c7             	mov    %rax,%rdi
    8552:	e8 6f 53 00 00       	call   d8c6 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>
    8557:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  createInfo.pEnabledFeatures = &deviceFeatures;
    855e:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    8565:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  createInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    856c:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8573:	48 83 c0 60          	add    $0x60,%rax
    8577:	48 89 c7             	mov    %rax,%rdi
    857a:	e8 b9 46 00 00       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  createInfo.enabledExtensionCount =
    857f:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  createInfo.ppEnabledExtensionNames = deviceExtensions.data();
    8585:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    858c:	48 83 c0 60          	add    $0x60,%rax
    8590:	48 89 c7             	mov    %rax,%rdi
    8593:	e8 e8 46 00 00       	call   cc80 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    8598:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

  if (enableValidationLayers) {
    createInfo.enabledLayerCount =
        static_cast<uint32_t>(validationLayers.size());
    859f:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85a6:	48 83 c0 18          	add    $0x18,%rax
    85aa:	48 89 c7             	mov    %rax,%rdi
    85ad:	e8 86 46 00 00       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    createInfo.enabledLayerCount =
    85b2:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
    createInfo.ppEnabledLayerNames = validationLayers.data();
    85b8:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85bf:	48 83 c0 18          	add    $0x18,%rax
    85c3:	48 89 c7             	mov    %rax,%rdi
    85c6:	e8 b5 46 00 00       	call   cc80 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    85cb:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  } else {
    createInfo.enabledLayerCount = 0;
  }

  if (vkCreateDevice(physicalDevice, &createInfo, nullptr, &device) !=
    85d2:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85d9:	48 8d 50 40          	lea    0x40(%rax),%rdx
    85dd:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    85e4:	48 8b 40 38          	mov    0x38(%rax),%rax
    85e8:	48 8d b5 30 fe ff ff 	lea    -0x1d0(%rbp),%rsi
    85ef:	48 89 d1             	mov    %rdx,%rcx
    85f2:	ba 00 00 00 00       	mov    $0x0,%edx
    85f7:	48 89 c7             	mov    %rax,%rdi
    85fa:	e8 31 c1 ff ff       	call   4730 <vkCreateDevice@plt>
    85ff:	85 c0                	test   %eax,%eax
    8601:	0f 95 c0             	setne  %al
    8604:	84 c0                	test   %al,%al
    8606:	74 3b                	je     8643 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x2fd>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create logical device.");
    8608:	bf 10 00 00 00       	mov    $0x10,%edi
    860d:	e8 6e bb ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8612:	48 89 c3             	mov    %rax,%rbx
    8615:	48 8d 05 74 2e 01 00 	lea    0x12e74(%rip),%rax        # 1b490 <_ZN6__pstl9execution2v1L5unseqE+0x1c5>
    861c:	48 89 c6             	mov    %rax,%rsi
    861f:	48 89 df             	mov    %rbx,%rdi
    8622:	e8 d9 ba ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    8627:	48 8b 05 7a 19 02 00 	mov    0x2197a(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    862e:	48 89 c2             	mov    %rax,%rdx
    8631:	48 8d 05 08 17 02 00 	lea    0x21708(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8638:	48 89 c6             	mov    %rax,%rsi
    863b:	48 89 df             	mov    %rbx,%rdi
    863e:	e8 dd c1 ff ff       	call   4820 <__cxa_throw@plt>

  vkGetDeviceQueue(device, indices.graphicsFamily.value(), 0, &graphicsQueue);
    8643:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    864a:	48 8d 58 48          	lea    0x48(%rax),%rbx
    864e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8652:	48 89 c7             	mov    %rax,%rdi
    8655:	e8 80 3a 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    865a:	8b 30                	mov    (%rax),%esi
    865c:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    8663:	48 8b 40 40          	mov    0x40(%rax),%rax
    8667:	48 89 d9             	mov    %rbx,%rcx
    866a:	ba 00 00 00 00       	mov    $0x0,%edx
    866f:	48 89 c7             	mov    %rax,%rdi
    8672:	e8 b9 bf ff ff       	call   4630 <vkGetDeviceQueue@plt>
  vkGetDeviceQueue(device, indices.presentFamily.value(), 0, &presentQueue);
    8677:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    867e:	48 8d 58 58          	lea    0x58(%rax),%rbx
    8682:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8686:	48 83 c0 08          	add    $0x8,%rax
    868a:	48 89 c7             	mov    %rax,%rdi
    868d:	e8 48 3a 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    8692:	8b 30                	mov    (%rax),%esi
    8694:	48 8b 85 e8 fd ff ff 	mov    -0x218(%rbp),%rax
    869b:	48 8b 40 40          	mov    0x40(%rax),%rax
    869f:	48 89 d9             	mov    %rbx,%rcx
    86a2:	ba 00 00 00 00       	mov    $0x0,%edx
    86a7:	48 89 c7             	mov    %rax,%rdi
    86aa:	e8 81 bf ff ff       	call   4630 <vkGetDeviceQueue@plt>
}
    86af:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    86b6:	48 89 c7             	mov    %rax,%rdi
    86b9:	e8 60 3a 00 00       	call   c11e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    86be:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    86c2:	48 89 c7             	mov    %rax,%rdi
    86c5:	e8 f2 4e 00 00       	call   d5bc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    86ca:	eb 4f                	jmp    871b <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3d5>
                                            indices.presentFamily.value()};
    86cc:	48 89 c3             	mov    %rax,%rbx
    86cf:	48 8d 45 d3          	lea    -0x2d(%rbp),%rax
    86d3:	48 89 c7             	mov    %rax,%rdi
    86d6:	e8 a5 3b 00 00       	call   c280 <_ZNSaIjED1Ev>
    86db:	eb 27                	jmp    8704 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3be>
    throw std::runtime_error("Failed to create logical device.");
    86dd:	49 89 c4             	mov    %rax,%r12
    86e0:	48 89 df             	mov    %rbx,%rdi
    86e3:	e8 98 bb ff ff       	call   4280 <__cxa_free_exception@plt>
    86e8:	4c 89 e3             	mov    %r12,%rbx
    86eb:	eb 03                	jmp    86f0 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3aa>
}
    86ed:	48 89 c3             	mov    %rax,%rbx
    86f0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    86f7:	48 89 c7             	mov    %rax,%rdi
    86fa:	e8 1f 3a 00 00       	call   c11e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>
    86ff:	eb 03                	jmp    8704 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv+0x3be>
    8701:	48 89 c3             	mov    %rax,%rbx
    8704:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    8708:	48 89 c7             	mov    %rax,%rdi
    870b:	e8 ac 4e 00 00       	call   d5bc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    8710:	48 89 d8             	mov    %rbx,%rax
    8713:	48 89 c7             	mov    %rax,%rdi
    8716:	e8 55 c1 ff ff       	call   4870 <_Unwind_Resume@plt>
    871b:	48 81 c4 08 02 00 00 	add    $0x208,%rsp
    8722:	5b                   	pop    %rbx
    8723:	41 5c                	pop    %r12
    8725:	41 5d                	pop    %r13
    8727:	5d                   	pop    %rbp
    8728:	c3                   	ret
    8729:	90                   	nop

000000000000872a <_ZN4rtvc17RenderApplication13createSurfaceEv>:

void rtvc::RenderApplication::createSurface() {
    872a:	55                   	push   %rbp
    872b:	48 89 e5             	mov    %rsp,%rbp
    872e:	41 54                	push   %r12
    8730:	53                   	push   %rbx
    8731:	48 83 ec 10          	sub    $0x10,%rsp
    8735:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (glfwCreateWindowSurface(instance, window, nullptr, &surface) !=
    8739:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    873d:	48 8d 50 50          	lea    0x50(%rax),%rdx
    8741:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8745:	48 8b 30             	mov    (%rax),%rsi
    8748:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    874c:	48 8b 40 10          	mov    0x10(%rax),%rax
    8750:	48 89 d1             	mov    %rdx,%rcx
    8753:	ba 00 00 00 00       	mov    $0x0,%edx
    8758:	48 89 c7             	mov    %rax,%rdi
    875b:	e8 00 c0 ff ff       	call   4760 <glfwCreateWindowSurface@plt>
    8760:	85 c0                	test   %eax,%eax
    8762:	0f 95 c0             	setne  %al
    8765:	84 c0                	test   %al,%al
    8767:	74 51                	je     87ba <_ZN4rtvc17RenderApplication13createSurfaceEv+0x90>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create window surface.");
    8769:	bf 10 00 00 00       	mov    $0x10,%edi
    876e:	e8 0d ba ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8773:	48 89 c3             	mov    %rax,%rbx
    8776:	48 8d 05 3b 2d 01 00 	lea    0x12d3b(%rip),%rax        # 1b4b8 <_ZN6__pstl9execution2v1L5unseqE+0x1ed>
    877d:	48 89 c6             	mov    %rax,%rsi
    8780:	48 89 df             	mov    %rbx,%rdi
    8783:	e8 78 b9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    8788:	48 8b 05 19 18 02 00 	mov    0x21819(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    878f:	48 89 c2             	mov    %rax,%rdx
    8792:	48 8d 05 a7 15 02 00 	lea    0x215a7(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8799:	48 89 c6             	mov    %rax,%rsi
    879c:	48 89 df             	mov    %rbx,%rdi
    879f:	e8 7c c0 ff ff       	call   4820 <__cxa_throw@plt>
    87a4:	49 89 c4             	mov    %rax,%r12
    87a7:	48 89 df             	mov    %rbx,%rdi
    87aa:	e8 d1 ba ff ff       	call   4280 <__cxa_free_exception@plt>
    87af:	4c 89 e0             	mov    %r12,%rax
    87b2:	48 89 c7             	mov    %rax,%rdi
    87b5:	e8 b6 c0 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    87ba:	90                   	nop
    87bb:	48 83 c4 10          	add    $0x10,%rsp
    87bf:	5b                   	pop    %rbx
    87c0:	41 5c                	pop    %r12
    87c2:	5d                   	pop    %rbp
    87c3:	c3                   	ret

00000000000087c4 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>:

VkSurfaceFormatKHR rtvc::RenderApplication::selectSwapSurfaceFormat(
    const std::vector<VkSurfaceFormatKHR> &availableFormats) {
    87c4:	55                   	push   %rbp
    87c5:	48 89 e5             	mov    %rsp,%rbp
    87c8:	48 83 ec 30          	sub    $0x30,%rsp
    87cc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    87d0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  for (const auto &availableFormat : availableFormats)
    87d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    87d8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    87dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87e0:	48 89 c7             	mov    %rax,%rdi
    87e3:	e8 02 51 00 00       	call   d8ea <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    87e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    87ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87f0:	48 89 c7             	mov    %rax,%rdi
    87f3:	e8 18 51 00 00       	call   d910 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    87f8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    87fc:	eb 3b                	jmp    8839 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x75>
    87fe:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8802:	48 89 c7             	mov    %rax,%rdi
    8805:	e8 8a 51 00 00       	call   d994 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    880a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    880e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8812:	8b 00                	mov    (%rax),%eax
    8814:	83 f8 32             	cmp    $0x32,%eax
    8817:	75 14                	jne    882d <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
        availableFormat.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR)
    8819:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    881d:	8b 40 04             	mov    0x4(%rax),%eax
    if (availableFormat.format == VK_FORMAT_B8G8R8A8_SRGB &&
    8820:	85 c0                	test   %eax,%eax
    8822:	75 09                	jne    882d <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x69>
      return availableFormat;
    8824:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8828:	48 8b 00             	mov    (%rax),%rax
    882b:	eb 37                	jmp    8864 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0xa0>
  for (const auto &availableFormat : availableFormats)
    882d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8831:	48 89 c7             	mov    %rax,%rdi
    8834:	e8 3b 51 00 00       	call   d974 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    8839:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    883d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    8841:	48 89 d6             	mov    %rdx,%rsi
    8844:	48 89 c7             	mov    %rax,%rdi
    8847:	e8 ed 50 00 00       	call   d939 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    884c:	84 c0                	test   %al,%al
    884e:	75 ae                	jne    87fe <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE+0x3a>

  return availableFormats[0];
    8850:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8854:	be 00 00 00 00       	mov    $0x0,%esi
    8859:	48 89 c7             	mov    %rax,%rdi
    885c:	e8 45 51 00 00       	call   d9a6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    8861:	48 8b 00             	mov    (%rax),%rax
}
    8864:	c9                   	leave
    8865:	c3                   	ret

0000000000008866 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>:

VkPresentModeKHR rtvc::RenderApplication::selectSwapPresentMode(
    const std::vector<VkPresentModeKHR> &availablePresentModes) {
    8866:	55                   	push   %rbp
    8867:	48 89 e5             	mov    %rsp,%rbp
    886a:	48 83 ec 30          	sub    $0x30,%rsp
    886e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8872:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  for (const auto &availablePresentMode : availablePresentModes) {
    8876:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    887a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    887e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8882:	48 89 c7             	mov    %rax,%rdi
    8885:	e8 3c 51 00 00       	call   d9c6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    888a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    888e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8892:	48 89 c7             	mov    %rax,%rdi
    8895:	e8 52 51 00 00       	call   d9ec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    889a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    889e:	eb 2e                	jmp    88ce <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x68>
    88a0:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    88a4:	48 89 c7             	mov    %rax,%rdi
    88a7:	e8 c4 51 00 00       	call   da70 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    88ac:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    // if (availablePresentMode == VK_PRESENT_MODE_MAILBOX_KHR)
    if (availablePresentMode == VK_PRESENT_MODE_IMMEDIATE_KHR) {
    88b0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88b4:	8b 00                	mov    (%rax),%eax
    88b6:	85 c0                	test   %eax,%eax
    88b8:	75 08                	jne    88c2 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x5c>
      return availablePresentMode;
    88ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    88be:	8b 00                	mov    (%rax),%eax
    88c0:	eb 28                	jmp    88ea <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x84>
  for (const auto &availablePresentMode : availablePresentModes) {
    88c2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    88c6:	48 89 c7             	mov    %rax,%rdi
    88c9:	e8 82 51 00 00       	call   da50 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    88ce:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    88d2:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    88d6:	48 89 d6             	mov    %rdx,%rsi
    88d9:	48 89 c7             	mov    %rax,%rdi
    88dc:	e8 34 51 00 00       	call   da15 <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    88e1:	84 c0                	test   %al,%al
    88e3:	75 bb                	jne    88a0 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE+0x3a>
    }
  }
  return VK_PRESENT_MODE_FIFO_KHR;
    88e5:	b8 02 00 00 00       	mov    $0x2,%eax
}
    88ea:	c9                   	leave
    88eb:	c3                   	ret

00000000000088ec <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>:

VkExtent2D rtvc::RenderApplication::selectSwapExtent(
    const VkSurfaceCapabilitiesKHR &capabilities) {
    88ec:	55                   	push   %rbp
    88ed:	48 89 e5             	mov    %rsp,%rbp
    88f0:	53                   	push   %rbx
    88f1:	48 83 ec 28          	sub    $0x28,%rsp
    88f5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    88f9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  if (capabilities.currentExtent.width != std::numeric_limits<uint32_t>::max())
    88fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8901:	8b 58 08             	mov    0x8(%rax),%ebx
    8904:	e8 81 33 00 00       	call   bc8a <_ZNSt14numeric_limitsIjE3maxEv>
    8909:	39 c3                	cmp    %eax,%ebx
    890b:	0f 95 c0             	setne  %al
    890e:	84 c0                	test   %al,%al
    8910:	74 0a                	je     891c <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0x30>
    return capabilities.currentExtent;
    8912:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8916:	48 8b 40 08          	mov    0x8(%rax),%rax
    891a:	eb 76                	jmp    8992 <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR+0xa6>
  else {
    int w, h;
    glfwGetFramebufferSize(window, &w, &h);
    891c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8920:	48 8b 00             	mov    (%rax),%rax
    8923:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    8927:	48 8d 4d ec          	lea    -0x14(%rbp),%rcx
    892b:	48 89 ce             	mov    %rcx,%rsi
    892e:	48 89 c7             	mov    %rax,%rdi
    8931:	e8 7a be ff ff       	call   47b0 <glfwGetFramebufferSize@plt>

    VkExtent2D actualExtent = {static_cast<uint32_t>(w),
    8936:	8b 45 ec             	mov    -0x14(%rbp),%eax
                               static_cast<uint32_t>(h)};
    8939:	89 45 e0             	mov    %eax,-0x20(%rbp)
    893c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    893f:	89 45 e4             	mov    %eax,-0x1c(%rbp)

    actualExtent.width =
        std::clamp(actualExtent.width, capabilities.minImageExtent.width,
                   capabilities.maxImageExtent.width);
    8942:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8946:	48 8d 50 18          	lea    0x18(%rax),%rdx
        std::clamp(actualExtent.width, capabilities.minImageExtent.width,
    894a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    894e:	48 8d 48 10          	lea    0x10(%rax),%rcx
    8952:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    8956:	48 89 ce             	mov    %rcx,%rsi
    8959:	48 89 c7             	mov    %rax,%rdi
    895c:	e8 20 51 00 00       	call   da81 <_ZSt5clampIjERKT_S2_S2_S2_>
    8961:	8b 00                	mov    (%rax),%eax
    actualExtent.width =
    8963:	89 45 e0             	mov    %eax,-0x20(%rbp)

    actualExtent.height =
        std::clamp(actualExtent.height, capabilities.minImageExtent.height,
                   capabilities.maxImageExtent.height);
    8966:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    896a:	48 8d 50 1c          	lea    0x1c(%rax),%rdx
        std::clamp(actualExtent.height, capabilities.minImageExtent.height,
    896e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    8972:	48 8d 48 14          	lea    0x14(%rax),%rcx
    8976:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    897a:	48 83 c0 04          	add    $0x4,%rax
    897e:	48 89 ce             	mov    %rcx,%rsi
    8981:	48 89 c7             	mov    %rax,%rdi
    8984:	e8 f8 50 00 00       	call   da81 <_ZSt5clampIjERKT_S2_S2_S2_>
    8989:	8b 00                	mov    (%rax),%eax
    actualExtent.height =
    898b:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    return actualExtent;
    898e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  }
}
    8992:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8996:	c9                   	leave
    8997:	c3                   	ret

0000000000008998 <_ZN4rtvc17RenderApplication15createSwapChainEv>:

void rtvc::RenderApplication::createSwapChain() {
    8998:	55                   	push   %rbp
    8999:	48 89 e5             	mov    %rsp,%rbp
    899c:	41 54                	push   %r12
    899e:	53                   	push   %rbx
    899f:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    89a6:	48 89 bd d8 fe ff ff 	mov    %rdi,-0x128(%rbp)
  SwapChainSupportDetails swapChainSupport =
      querySwapChainSupport(physicalDevice);
    89ad:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    89b4:	48 8b 50 38          	mov    0x38(%rax),%rdx
    89b8:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    89bc:	48 8b 8d d8 fe ff ff 	mov    -0x128(%rbp),%rcx
    89c3:	48 89 ce             	mov    %rcx,%rsi
    89c6:	48 89 c7             	mov    %rax,%rdi
    89c9:	e8 f4 ef ff ff       	call   79c2 <_ZN4rtvc17RenderApplication21querySwapChainSupportEP18VkPhysicalDevice_T>

  VkSurfaceFormatKHR surfaceFormat =
      selectSwapSurfaceFormat(swapChainSupport.formats);
    89ce:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    89d2:	48 8d 50 38          	lea    0x38(%rax),%rdx
    89d6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    89dd:	48 89 d6             	mov    %rdx,%rsi
    89e0:	48 89 c7             	mov    %rax,%rdi
    89e3:	e8 dc fd ff ff       	call   87c4 <_ZN4rtvc17RenderApplication23selectSwapSurfaceFormatERKSt6vectorI18VkSurfaceFormatKHRSaIS2_EE>
    89e8:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  VkPresentModeKHR presentMode =
      selectSwapPresentMode(swapChainSupport.presentModes);
    89ef:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    89f3:	48 8d 50 50          	lea    0x50(%rax),%rdx
    89f7:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    89fe:	48 89 d6             	mov    %rdx,%rsi
    8a01:	48 89 c7             	mov    %rax,%rdi
    8a04:	e8 5d fe ff ff       	call   8866 <_ZN4rtvc17RenderApplication21selectSwapPresentModeERKSt6vectorI16VkPresentModeKHRSaIS2_EE>
    8a09:	89 45 ec             	mov    %eax,-0x14(%rbp)
  VkExtent2D extent = selectSwapExtent(swapChainSupport.capabilities);
    8a0c:	48 8d 55 80          	lea    -0x80(%rbp),%rdx
    8a10:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a17:	48 89 d6             	mov    %rdx,%rsi
    8a1a:	48 89 c7             	mov    %rax,%rdi
    8a1d:	e8 ca fe ff ff       	call   88ec <_ZN4rtvc17RenderApplication16selectSwapExtentERK24VkSurfaceCapabilitiesKHR>
    8a22:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  uint32_t imageCount = swapChainSupport.capabilities.minImageCount + 1;
    8a29:	8b 45 80             	mov    -0x80(%rbp),%eax
    8a2c:	83 c0 01             	add    $0x1,%eax
    8a2f:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    8a35:	8b 45 84             	mov    -0x7c(%rbp),%eax
    8a38:	85 c0                	test   %eax,%eax
    8a3a:	74 16                	je     8a52 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
      imageCount > swapChainSupport.capabilities.maxImageCount)
    8a3c:	8b 55 84             	mov    -0x7c(%rbp),%edx
    8a3f:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
  if (swapChainSupport.capabilities.maxImageCount > 0 &&
    8a45:	39 c2                	cmp    %eax,%edx
    8a47:	73 09                	jae    8a52 <_ZN4rtvc17RenderApplication15createSwapChainEv+0xba>
    imageCount = swapChainSupport.capabilities.maxImageCount;
    8a49:	8b 45 84             	mov    -0x7c(%rbp),%eax
    8a4c:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)

  VkSwapchainCreateInfoKHR createInfo{};
    8a52:	48 8d 95 00 ff ff ff 	lea    -0x100(%rbp),%rdx
    8a59:	b8 00 00 00 00       	mov    $0x0,%eax
    8a5e:	b9 0d 00 00 00       	mov    $0xd,%ecx
    8a63:	48 89 d7             	mov    %rdx,%rdi
    8a66:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  createInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    8a69:	c7 85 00 ff ff ff e8 	movl   $0x3b9acde8,-0x100(%rbp)
    8a70:	cd 9a 3b 
  createInfo.surface = surface;
    8a73:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8a7a:	48 8b 40 50          	mov    0x50(%rax),%rax
    8a7e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  createInfo.minImageCount = imageCount;
    8a85:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax
    8a8b:	89 85 20 ff ff ff    	mov    %eax,-0xe0(%rbp)
  createInfo.imageFormat = surfaceFormat.format;
    8a91:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
    8a97:	89 85 24 ff ff ff    	mov    %eax,-0xdc(%rbp)
  createInfo.imageColorSpace = surfaceFormat.colorSpace;
    8a9d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
    8aa3:	89 85 28 ff ff ff    	mov    %eax,-0xd8(%rbp)
  createInfo.imageExtent = extent;
    8aa9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    8ab0:	48 89 85 2c ff ff ff 	mov    %rax,-0xd4(%rbp)
  createInfo.imageArrayLayers = 1;
    8ab7:	c7 85 34 ff ff ff 01 	movl   $0x1,-0xcc(%rbp)
    8abe:	00 00 00 
  createInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    8ac1:	c7 85 38 ff ff ff 10 	movl   $0x10,-0xc8(%rbp)
    8ac8:	00 00 00 

  QueueFamilyIndices indices = findQueueFamilies(physicalDevice);
    8acb:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8ad2:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8ad6:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8add:	48 89 d6             	mov    %rdx,%rsi
    8ae0:	48 89 c7             	mov    %rax,%rdi
    8ae3:	e8 66 f6 ff ff       	call   814e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    8ae8:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
    8aef:	48 89 95 f8 fe ff ff 	mov    %rdx,-0x108(%rbp)
  uint32_t QueueFamilyIndices[] = {indices.graphicsFamily.value(),
    8af6:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8afd:	48 89 c7             	mov    %rax,%rdi
    8b00:	e8 d5 35 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    8b05:	8b 00                	mov    (%rax),%eax
                                   indices.presentFamily.value()};
    8b07:	89 85 e8 fe ff ff    	mov    %eax,-0x118(%rbp)
    8b0d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8b14:	48 83 c0 08          	add    $0x8,%rax
    8b18:	48 89 c7             	mov    %rax,%rdi
    8b1b:	e8 ba 35 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    8b20:	8b 00                	mov    (%rax),%eax
    8b22:	89 85 ec fe ff ff    	mov    %eax,-0x114(%rbp)

  if (indices.graphicsFamily != indices.presentFamily) {
    8b28:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8b2f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8b33:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    8b3a:	48 89 d6             	mov    %rdx,%rsi
    8b3d:	48 89 c7             	mov    %rax,%rdi
    8b40:	e8 9e 4f 00 00       	call   dae3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>
    8b45:	84 c0                	test   %al,%al
    8b47:	74 24                	je     8b6d <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1d5>
    createInfo.imageSharingMode = VK_SHARING_MODE_CONCURRENT;
    8b49:	c7 85 3c ff ff ff 01 	movl   $0x1,-0xc4(%rbp)
    8b50:	00 00 00 
    createInfo.queueFamilyIndexCount = 2;
    8b53:	c7 85 40 ff ff ff 02 	movl   $0x2,-0xc0(%rbp)
    8b5a:	00 00 00 
    createInfo.pQueueFamilyIndices = QueueFamilyIndices;
    8b5d:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    8b64:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
    8b6b:	eb 1f                	jmp    8b8c <_ZN4rtvc17RenderApplication15createSwapChainEv+0x1f4>
  } else {
    createInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    8b6d:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%rbp)
    8b74:	00 00 00 
    createInfo.queueFamilyIndexCount = 0;
    8b77:	c7 85 40 ff ff ff 00 	movl   $0x0,-0xc0(%rbp)
    8b7e:	00 00 00 
    createInfo.pQueueFamilyIndices = nullptr;
    8b81:	48 c7 85 48 ff ff ff 	movq   $0x0,-0xb8(%rbp)
    8b88:	00 00 00 00 
  }

  createInfo.preTransform = swapChainSupport.capabilities.currentTransform;
    8b8c:	8b 45 a8             	mov    -0x58(%rbp),%eax
    8b8f:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  createInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    8b95:	c7 85 54 ff ff ff 01 	movl   $0x1,-0xac(%rbp)
    8b9c:	00 00 00 
  createInfo.presentMode = presentMode;
    8b9f:	8b 45 ec             	mov    -0x14(%rbp),%eax
    8ba2:	89 85 58 ff ff ff    	mov    %eax,-0xa8(%rbp)
  createInfo.clipped = VK_TRUE;
    8ba8:	c7 85 5c ff ff ff 01 	movl   $0x1,-0xa4(%rbp)
    8baf:	00 00 00 
  // createInfo.oldSwapchain = VK_NULL_HANDLE;

  if (vkCreateSwapchainKHR(device, &createInfo, nullptr, &swapChain) !=
    8bb2:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8bb9:	48 8d 50 78          	lea    0x78(%rax),%rdx
    8bbd:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8bc4:	48 8b 40 40          	mov    0x40(%rax),%rax
    8bc8:	48 8d b5 00 ff ff ff 	lea    -0x100(%rbp),%rsi
    8bcf:	48 89 d1             	mov    %rdx,%rcx
    8bd2:	ba 00 00 00 00       	mov    $0x0,%edx
    8bd7:	48 89 c7             	mov    %rax,%rdi
    8bda:	e8 81 b9 ff ff       	call   4560 <vkCreateSwapchainKHR@plt>
    8bdf:	85 c0                	test   %eax,%eax
    8be1:	0f 95 c0             	setne  %al
    8be4:	84 c0                	test   %al,%al
    8be6:	74 3b                	je     8c23 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x28b>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create swap chain.");
    8be8:	bf 10 00 00 00       	mov    $0x10,%edi
    8bed:	e8 8e b5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8bf2:	48 89 c3             	mov    %rax,%rbx
    8bf5:	48 8d 05 dd 28 01 00 	lea    0x128dd(%rip),%rax        # 1b4d9 <_ZN6__pstl9execution2v1L5unseqE+0x20e>
    8bfc:	48 89 c6             	mov    %rax,%rsi
    8bff:	48 89 df             	mov    %rbx,%rdi
    8c02:	e8 f9 b4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    8c07:	48 8b 05 9a 13 02 00 	mov    0x2139a(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8c0e:	48 89 c2             	mov    %rax,%rdx
    8c11:	48 8d 05 28 11 02 00 	lea    0x21128(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8c18:	48 89 c6             	mov    %rax,%rsi
    8c1b:	48 89 df             	mov    %rbx,%rdi
    8c1e:	e8 fd bb ff ff       	call   4820 <__cxa_throw@plt>

  vkGetSwapchainImagesKHR(device, swapChain, &imageCount, nullptr);
    8c23:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c2a:	48 8b 70 78          	mov    0x78(%rax),%rsi
    8c2e:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c35:	48 8b 40 40          	mov    0x40(%rax),%rax
    8c39:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    8c40:	b9 00 00 00 00       	mov    $0x0,%ecx
    8c45:	48 89 c7             	mov    %rax,%rdi
    8c48:	e8 c3 b5 ff ff       	call   4210 <vkGetSwapchainImagesKHR@plt>
  swapChainImages.resize(imageCount);
    8c4d:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c54:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8c58:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx
    8c5e:	89 d2                	mov    %edx,%edx
    8c60:	48 89 d6             	mov    %rdx,%rsi
    8c63:	48 89 c7             	mov    %rax,%rdi
    8c66:	e8 e9 4e 00 00       	call   db54 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>
  vkGetSwapchainImagesKHR(device, swapChain, &imageCount,
    8c6b:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c72:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8c76:	48 89 c7             	mov    %rax,%rdi
    8c79:	e8 5c 4f 00 00       	call   dbda <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    8c7e:	48 89 c1             	mov    %rax,%rcx
    8c81:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c88:	48 8b 70 78          	mov    0x78(%rax),%rsi
    8c8c:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8c93:	48 8b 40 40          	mov    0x40(%rax),%rax
    8c97:	48 8d 95 6c ff ff ff 	lea    -0x94(%rbp),%rdx
    8c9e:	48 89 c7             	mov    %rax,%rdi
    8ca1:	e8 6a b5 ff ff       	call   4210 <vkGetSwapchainImagesKHR@plt>
                          swapChainImages.data());

  swapChainImageFormat = surfaceFormat.format;
    8ca6:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx
    8cac:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cb3:	89 90 98 00 00 00    	mov    %edx,0x98(%rax)
  swapChainExtent = extent;
    8cb9:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
    8cc0:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
    8cc7:	48 89 90 9c 00 00 00 	mov    %rdx,0x9c(%rax)
}
    8cce:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8cd2:	48 89 c7             	mov    %rax,%rdi
    8cd5:	e8 7c 33 00 00       	call   c056 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    8cda:	eb 2a                	jmp    8d06 <_ZN4rtvc17RenderApplication15createSwapChainEv+0x36e>
    throw std::runtime_error("Failed to create swap chain.");
    8cdc:	49 89 c4             	mov    %rax,%r12
    8cdf:	48 89 df             	mov    %rbx,%rdi
    8ce2:	e8 99 b5 ff ff       	call   4280 <__cxa_free_exception@plt>
    8ce7:	4c 89 e3             	mov    %r12,%rbx
    8cea:	eb 03                	jmp    8cef <_ZN4rtvc17RenderApplication15createSwapChainEv+0x357>
}
    8cec:	48 89 c3             	mov    %rax,%rbx
    8cef:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    8cf3:	48 89 c7             	mov    %rax,%rdi
    8cf6:	e8 5b 33 00 00       	call   c056 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>
    8cfb:	48 89 d8             	mov    %rbx,%rax
    8cfe:	48 89 c7             	mov    %rax,%rdi
    8d01:	e8 6a bb ff ff       	call   4870 <_Unwind_Resume@plt>
    8d06:	48 81 c4 20 01 00 00 	add    $0x120,%rsp
    8d0d:	5b                   	pop    %rbx
    8d0e:	41 5c                	pop    %r12
    8d10:	5d                   	pop    %rbp
    8d11:	c3                   	ret

0000000000008d12 <_ZN4rtvc17RenderApplication16createImageViewsEv>:

void rtvc::RenderApplication::createImageViews() {
    8d12:	55                   	push   %rbp
    8d13:	48 89 e5             	mov    %rsp,%rbp
    8d16:	41 54                	push   %r12
    8d18:	53                   	push   %rbx
    8d19:	48 83 ec 70          	sub    $0x70,%rsp
    8d1d:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  swapChainImageViews.resize(swapChainImages.size());
    8d21:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d25:	48 8d 98 a8 00 00 00 	lea    0xa8(%rax),%rbx
    8d2c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d30:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8d34:	48 89 c7             	mov    %rax,%rdi
    8d37:	e8 c2 4e 00 00       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    8d3c:	48 89 c6             	mov    %rax,%rsi
    8d3f:	48 89 df             	mov    %rbx,%rdi
    8d42:	e8 db 4e 00 00       	call   dc22 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    8d47:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    8d4e:	00 
    8d4f:	e9 15 01 00 00       	jmp    8e69 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x157>
    VkImageViewCreateInfo createInfo{};
    8d54:	66 0f ef c0          	pxor   %xmm0,%xmm0
    8d58:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    8d5c:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    8d60:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    8d64:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    8d68:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    createInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    8d6c:	c7 45 90 0f 00 00 00 	movl   $0xf,-0x70(%rbp)
    createInfo.image = swapChainImages[i];
    8d73:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d77:	48 8d 90 80 00 00 00 	lea    0x80(%rax),%rdx
    8d7e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8d82:	48 89 c6             	mov    %rax,%rsi
    8d85:	48 89 d7             	mov    %rdx,%rdi
    8d88:	e8 1b 4f 00 00       	call   dca8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    8d8d:	48 8b 00             	mov    (%rax),%rax
    8d90:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    createInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    8d94:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    createInfo.format = swapChainImageFormat;
    8d9b:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8d9f:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
    8da5:	89 45 b4             	mov    %eax,-0x4c(%rbp)

    createInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    8da8:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
    createInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    8daf:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)
    createInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    8db6:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)
    createInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    8dbd:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)

    createInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    8dc4:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
    createInfo.subresourceRange.baseArrayLayer = 0;
    8dcb:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    createInfo.subresourceRange.levelCount = 1;
    8dd2:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
    createInfo.subresourceRange.baseArrayLayer = 0;
    8dd9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    createInfo.subresourceRange.layerCount = 1;
    8de0:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

    if (vkCreateImageView(device, &createInfo, nullptr,
                          &swapChainImageViews[i]) != VK_SUCCESS)
    8de7:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8deb:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    8df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8df6:	48 89 c6             	mov    %rax,%rsi
    8df9:	48 89 d7             	mov    %rdx,%rdi
    8dfc:	e8 c7 4e 00 00       	call   dcc8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    8e01:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateImageView(device, &createInfo, nullptr,
    8e04:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8e08:	48 8b 40 40          	mov    0x40(%rax),%rax
    8e0c:	48 8d 75 90          	lea    -0x70(%rbp),%rsi
    8e10:	48 89 d1             	mov    %rdx,%rcx
    8e13:	ba 00 00 00 00       	mov    $0x0,%edx
    8e18:	48 89 c7             	mov    %rax,%rdi
    8e1b:	e8 50 b6 ff ff       	call   4470 <vkCreateImageView@plt>
                          &swapChainImageViews[i]) != VK_SUCCESS)
    8e20:	85 c0                	test   %eax,%eax
    8e22:	0f 95 c0             	setne  %al
    if (vkCreateImageView(device, &createInfo, nullptr,
    8e25:	84 c0                	test   %al,%al
    8e27:	74 3b                	je     8e64 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x152>
      throw std::runtime_error("Failed to create image view.");
    8e29:	bf 10 00 00 00       	mov    $0x10,%edi
    8e2e:	e8 4d b3 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8e33:	48 89 c3             	mov    %rax,%rbx
    8e36:	48 8d 05 b9 26 01 00 	lea    0x126b9(%rip),%rax        # 1b4f6 <_ZN6__pstl9execution2v1L5unseqE+0x22b>
    8e3d:	48 89 c6             	mov    %rax,%rsi
    8e40:	48 89 df             	mov    %rbx,%rdi
    8e43:	e8 b8 b2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    8e48:	48 8b 05 59 11 02 00 	mov    0x21159(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8e4f:	48 89 c2             	mov    %rax,%rdx
    8e52:	48 8d 05 e7 0e 02 00 	lea    0x20ee7(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8e59:	48 89 c6             	mov    %rax,%rsi
    8e5c:	48 89 df             	mov    %rbx,%rdi
    8e5f:	e8 bc b9 ff ff       	call   4820 <__cxa_throw@plt>
  for (size_t i = 0; i < swapChainImages.size(); ++i) {
    8e64:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    8e69:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    8e6d:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    8e71:	48 89 c7             	mov    %rax,%rdi
    8e74:	e8 85 4d 00 00       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    8e79:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    8e7d:	0f 92 c0             	setb   %al
    8e80:	84 c0                	test   %al,%al
    8e82:	0f 85 cc fe ff ff    	jne    8d54 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x42>
  }
}
    8e88:	eb 16                	jmp    8ea0 <_ZN4rtvc17RenderApplication16createImageViewsEv+0x18e>
      throw std::runtime_error("Failed to create image view.");
    8e8a:	49 89 c4             	mov    %rax,%r12
    8e8d:	48 89 df             	mov    %rbx,%rdi
    8e90:	e8 eb b3 ff ff       	call   4280 <__cxa_free_exception@plt>
    8e95:	4c 89 e0             	mov    %r12,%rax
    8e98:	48 89 c7             	mov    %rax,%rdi
    8e9b:	e8 d0 b9 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    8ea0:	48 83 c4 70          	add    $0x70,%rsp
    8ea4:	5b                   	pop    %rbx
    8ea5:	41 5c                	pop    %r12
    8ea7:	5d                   	pop    %rbp
    8ea8:	c3                   	ret
    8ea9:	90                   	nop

0000000000008eaa <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

std::vector<char>
rtvc::RenderApplication::readShader(const std::string &filePath) {
    8eaa:	55                   	push   %rbp
    8eab:	48 89 e5             	mov    %rsp,%rbp
    8eae:	41 54                	push   %r12
    8eb0:	53                   	push   %rbx
    8eb1:	48 81 ec 70 02 00 00 	sub    $0x270,%rsp
    8eb8:	48 89 bd 98 fd ff ff 	mov    %rdi,-0x268(%rbp)
    8ebf:	48 89 b5 90 fd ff ff 	mov    %rsi,-0x270(%rbp)
    8ec6:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
  std::ifstream file(filePath, std::ios::ate | std::ios::binary);
    8ecd:	be 04 00 00 00       	mov    $0x4,%esi
    8ed2:	bf 02 00 00 00       	mov    $0x2,%edi
    8ed7:	e8 78 2e 00 00       	call   bd54 <_ZStorSt13_Ios_OpenmodeS_>
    8edc:	89 c2                	mov    %eax,%edx
    8ede:	48 8b 8d 88 fd ff ff 	mov    -0x278(%rbp),%rcx
    8ee5:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8eec:	48 89 ce             	mov    %rcx,%rsi
    8eef:	48 89 c7             	mov    %rax,%rdi
    8ef2:	e8 d9 b8 ff ff       	call   47d0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>

  if (!file.is_open())
    8ef7:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8efe:	48 89 c7             	mov    %rax,%rdi
    8f01:	e8 ba b8 ff ff       	call   47c0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    8f06:	83 f0 01             	xor    $0x1,%eax
    8f09:	84 c0                	test   %al,%al
    8f0b:	74 3b                	je     8f48 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x9e>
    throw std::runtime_error("Failed to open shader file");
    8f0d:	bf 10 00 00 00       	mov    $0x10,%edi
    8f12:	e8 69 b2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    8f17:	48 89 c3             	mov    %rax,%rbx
    8f1a:	48 8d 05 f2 25 01 00 	lea    0x125f2(%rip),%rax        # 1b513 <_ZN6__pstl9execution2v1L5unseqE+0x248>
    8f21:	48 89 c6             	mov    %rax,%rsi
    8f24:	48 89 df             	mov    %rbx,%rdi
    8f27:	e8 d4 b1 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    8f2c:	48 8b 05 75 10 02 00 	mov    0x21075(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    8f33:	48 89 c2             	mov    %rax,%rdx
    8f36:	48 8d 05 03 0e 02 00 	lea    0x20e03(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    8f3d:	48 89 c6             	mov    %rax,%rsi
    8f40:	48 89 df             	mov    %rbx,%rdi
    8f43:	e8 d8 b8 ff ff       	call   4820 <__cxa_throw@plt>

  size_t fileSize = static_cast<size_t>(file.tellg());
    8f48:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8f4f:	48 89 c7             	mov    %rax,%rdi
    8f52:	e8 e9 b8 ff ff       	call   4840 <_ZNSi5tellgEv@plt>
    8f57:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    8f5b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    8f5f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    8f63:	48 89 c7             	mov    %rax,%rdi
    8f66:	e8 7d 4d 00 00       	call   dce8 <_ZNKSt4fposI11__mbstate_tEcvlEv>
    8f6b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(fileSize);
    8f6f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8f73:	48 89 c7             	mov    %rax,%rdi
    8f76:	e8 05 b9 ff ff       	call   4880 <_ZNSaIcEC1Ev@plt>
    8f7b:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    8f7f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8f83:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    8f8a:	48 89 ce             	mov    %rcx,%rsi
    8f8d:	48 89 c7             	mov    %rax,%rdi
    8f90:	e8 65 4d 00 00       	call   dcfa <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    8f95:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    8f99:	48 89 c7             	mov    %rax,%rdi
    8f9c:	e8 1f b5 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>

  file.seekg(0);
    8fa1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    8fa5:	be 00 00 00 00       	mov    $0x0,%esi
    8faa:	48 89 c7             	mov    %rax,%rdi
    8fad:	e8 02 4e 00 00       	call   ddb4 <_ZNSt4fposI11__mbstate_tEC1El>
    8fb2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    8fb6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fba:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8fc1:	48 89 ce             	mov    %rcx,%rsi
    8fc4:	48 89 c7             	mov    %rax,%rdi
    8fc7:	e8 14 b6 ff ff       	call   45e0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), fileSize);
    8fcc:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8fd0:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    8fd7:	48 89 c7             	mov    %rax,%rdi
    8fda:	e8 05 4e 00 00       	call   dde4 <_ZNSt6vectorIcSaIcEE4dataEv>
    8fdf:	48 89 c1             	mov    %rax,%rcx
    8fe2:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8fe9:	48 89 da             	mov    %rbx,%rdx
    8fec:	48 89 ce             	mov    %rcx,%rsi
    8fef:	48 89 c7             	mov    %rax,%rdi
    8ff2:	e8 d9 b5 ff ff       	call   45d0 <_ZNSi4readEPcl@plt>

  file.close();
    8ff7:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    8ffe:	48 89 c7             	mov    %rax,%rdi
    9001:	e8 6a b0 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>
  return buffer;
    9006:	90                   	nop
}
    9007:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    900e:	48 89 c7             	mov    %rax,%rdi
    9011:	e8 9a b0 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return buffer;
    9016:	eb 52                	jmp    906a <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1c0>
    throw std::runtime_error("Failed to open shader file");
    9018:	49 89 c4             	mov    %rax,%r12
    901b:	48 89 df             	mov    %rbx,%rdi
    901e:	e8 5d b2 ff ff       	call   4280 <__cxa_free_exception@plt>
    9023:	4c 89 e3             	mov    %r12,%rbx
    9026:	eb 28                	jmp    9050 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
  std::vector<char> buffer(fileSize);
    9028:	48 89 c3             	mov    %rax,%rbx
    902b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    902f:	48 89 c7             	mov    %rax,%rdi
    9032:	e8 89 b4 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    9037:	eb 17                	jmp    9050 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
}
    9039:	48 89 c3             	mov    %rax,%rbx
    903c:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    9043:	48 89 c7             	mov    %rax,%rdi
    9046:	e8 25 4d 00 00       	call   dd70 <_ZNSt6vectorIcSaIcEED1Ev>
    904b:	eb 03                	jmp    9050 <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1a6>
    904d:	48 89 c3             	mov    %rax,%rbx
    9050:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    9057:	48 89 c7             	mov    %rax,%rdi
    905a:	e8 51 b0 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    905f:	48 89 d8             	mov    %rbx,%rax
    9062:	48 89 c7             	mov    %rax,%rdi
    9065:	e8 06 b8 ff ff       	call   4870 <_Unwind_Resume@plt>
    906a:	48 8b 85 98 fd ff ff 	mov    -0x268(%rbp),%rax
    9071:	48 81 c4 70 02 00 00 	add    $0x270,%rsp
    9078:	5b                   	pop    %rbx
    9079:	41 5c                	pop    %r12
    907b:	5d                   	pop    %rbp
    907c:	c3                   	ret
    907d:	90                   	nop

000000000000907e <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>:

VkShaderModule
rtvc::RenderApplication::createShaderModule(const std::vector<char> &code) {
    907e:	55                   	push   %rbp
    907f:	48 89 e5             	mov    %rsp,%rbp
    9082:	41 54                	push   %r12
    9084:	53                   	push   %rbx
    9085:	48 83 ec 50          	sub    $0x50,%rsp
    9089:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    908d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
  VkShaderModuleCreateInfo createInfo{};
    9091:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9095:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    9099:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    909d:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  createInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    90a2:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  createInfo.codeSize = code.size();
    90a9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    90ad:	48 89 c7             	mov    %rax,%rdi
    90b0:	e8 97 4d 00 00       	call   de4c <_ZNKSt6vectorIcSaIcEE4sizeEv>
    90b5:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  createInfo.pCode = reinterpret_cast<const uint32_t *>(code.data());
    90b9:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    90bd:	48 89 c7             	mov    %rax,%rdi
    90c0:	e8 a7 4d 00 00       	call   de6c <_ZNKSt6vectorIcSaIcEE4dataEv>
    90c5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &createInfo, nullptr, &shaderModule) !=
    90c9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    90cd:	48 8b 40 40          	mov    0x40(%rax),%rax
    90d1:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    90d5:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    90d9:	48 89 d1             	mov    %rdx,%rcx
    90dc:	ba 00 00 00 00       	mov    $0x0,%edx
    90e1:	48 89 c7             	mov    %rax,%rdi
    90e4:	e8 e7 b1 ff ff       	call   42d0 <vkCreateShaderModule@plt>
    90e9:	85 c0                	test   %eax,%eax
    90eb:	0f 95 c0             	setne  %al
    90ee:	84 c0                	test   %al,%al
    90f0:	74 3b                	je     912d <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xaf>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create shader module.");
    90f2:	bf 10 00 00 00       	mov    $0x10,%edi
    90f7:	e8 84 b0 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    90fc:	48 89 c3             	mov    %rax,%rbx
    90ff:	48 8d 05 2a 24 01 00 	lea    0x1242a(%rip),%rax        # 1b530 <_ZN6__pstl9execution2v1L5unseqE+0x265>
    9106:	48 89 c6             	mov    %rax,%rsi
    9109:	48 89 df             	mov    %rbx,%rdi
    910c:	e8 ef af ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9111:	48 8b 05 90 0e 02 00 	mov    0x20e90(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9118:	48 89 c2             	mov    %rax,%rdx
    911b:	48 8d 05 1e 0c 02 00 	lea    0x20c1e(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9122:	48 89 c6             	mov    %rax,%rsi
    9125:	48 89 df             	mov    %rbx,%rdi
    9128:	e8 f3 b6 ff ff       	call   4820 <__cxa_throw@plt>

  return shaderModule;
    912d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9131:	eb 16                	jmp    9149 <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE+0xcb>
    throw std::runtime_error("Failed to create shader module.");
    9133:	49 89 c4             	mov    %rax,%r12
    9136:	48 89 df             	mov    %rbx,%rdi
    9139:	e8 42 b1 ff ff       	call   4280 <__cxa_free_exception@plt>
    913e:	4c 89 e0             	mov    %r12,%rax
    9141:	48 89 c7             	mov    %rax,%rdi
    9144:	e8 27 b7 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    9149:	48 83 c4 50          	add    $0x50,%rsp
    914d:	5b                   	pop    %rbx
    914e:	41 5c                	pop    %r12
    9150:	5d                   	pop    %rbp
    9151:	c3                   	ret

0000000000009152 <_ZN4rtvc17RenderApplication16createRenderPassEv>:

void rtvc::RenderApplication::createRenderPass() {
    9152:	55                   	push   %rbp
    9153:	48 89 e5             	mov    %rsp,%rbp
    9156:	41 54                	push   %r12
    9158:	53                   	push   %rbx
    9159:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    9160:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkAttachmentDescription colorAttachment{};
    9167:	66 0f ef c0          	pxor   %xmm0,%xmm0
    916b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    916f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    9173:	66 0f 7e 45 e0       	movd   %xmm0,-0x20(%rbp)
  colorAttachment.format = swapChainImageFormat;
    9178:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    917f:	8b 80 98 00 00 00    	mov    0x98(%rax),%eax
    9185:	89 45 c4             	mov    %eax,-0x3c(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    9188:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    918f:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%rbp)
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    9196:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    919d:	c7 45 d4 02 00 00 00 	movl   $0x2,-0x2c(%rbp)
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    91a4:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    91ab:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    91b2:	c7 45 e0 ea cd 9a 3b 	movl   $0x3b9acdea,-0x20(%rbp)

  VkAttachmentReference colorAttachmentRef{};
    91b9:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    91c0:	00 
  colorAttachmentRef.attachment = 0;
    91c1:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    91c8:	c7 45 bc 02 00 00 00 	movl   $0x2,-0x44(%rbp)

  VkSubpassDescription subpass{};
    91cf:	66 0f ef c0          	pxor   %xmm0,%xmm0
    91d3:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    91da:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    91de:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    91e2:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    91e6:	66 0f d6 45 b0       	movq   %xmm0,-0x50(%rbp)
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    91eb:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
    91f2:	00 00 00 
  subpass.colorAttachmentCount = 1;
    91f5:	c7 45 88 01 00 00 00 	movl   $0x1,-0x78(%rbp)
  subpass.pColorAttachments = &colorAttachmentRef;
    91fc:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    9200:	48 89 45 90          	mov    %rax,-0x70(%rbp)

  VkSubpassDependency dependency{};
    9204:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9208:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    920f:	0f 11 85 5c ff ff ff 	movups %xmm0,-0xa4(%rbp)
  dependency.srcSubpass = VK_SUBPASS_EXTERNAL;
    9216:	c7 85 50 ff ff ff ff 	movl   $0xffffffff,-0xb0(%rbp)
    921d:	ff ff ff 
  dependency.dstSubpass = 0;
    9220:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%rbp)
    9227:	00 00 00 
  dependency.srcStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    922a:	c7 85 58 ff ff ff 00 	movl   $0x400,-0xa8(%rbp)
    9231:	04 00 00 
  dependency.srcAccessMask = 0;
    9234:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    923b:	00 00 00 
  dependency.dstStageMask = VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT;
    923e:	c7 85 5c ff ff ff 00 	movl   $0x400,-0xa4(%rbp)
    9245:	04 00 00 
  dependency.dstAccessMask = VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT;
    9248:	c7 85 64 ff ff ff 00 	movl   $0x100,-0x9c(%rbp)
    924f:	01 00 00 

  VkRenderPassCreateInfo renderPassInfo{};
    9252:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9256:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    925d:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    9264:	0f 29 85 30 ff ff ff 	movaps %xmm0,-0xd0(%rbp)
    926b:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    9272:	c7 85 10 ff ff ff 26 	movl   $0x26,-0xf0(%rbp)
    9279:	00 00 00 
  renderPassInfo.attachmentCount = 1;
    927c:	c7 85 24 ff ff ff 01 	movl   $0x1,-0xdc(%rbp)
    9283:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    9286:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    928a:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  renderPassInfo.subpassCount = 1;
    9291:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    9298:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    929b:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    92a2:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  renderPassInfo.dependencyCount = 1;
    92a9:	c7 85 40 ff ff ff 01 	movl   $0x1,-0xc0(%rbp)
    92b0:	00 00 00 
  renderPassInfo.pDependencies = &dependency;
    92b3:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    92ba:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)

  if (vkCreateRenderPass(device, &renderPassInfo, nullptr, &renderPass) !=
    92c1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    92c8:	48 8d 90 c0 00 00 00 	lea    0xc0(%rax),%rdx
    92cf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    92d6:	48 8b 40 40          	mov    0x40(%rax),%rax
    92da:	48 8d b5 10 ff ff ff 	lea    -0xf0(%rbp),%rsi
    92e1:	48 89 d1             	mov    %rdx,%rcx
    92e4:	ba 00 00 00 00       	mov    $0x0,%edx
    92e9:	48 89 c7             	mov    %rax,%rdi
    92ec:	e8 4f af ff ff       	call   4240 <vkCreateRenderPass@plt>
    92f1:	85 c0                	test   %eax,%eax
    92f3:	0f 95 c0             	setne  %al
    92f6:	84 c0                	test   %al,%al
    92f8:	74 51                	je     934b <_ZN4rtvc17RenderApplication16createRenderPassEv+0x1f9>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create render pass.");
    92fa:	bf 10 00 00 00       	mov    $0x10,%edi
    92ff:	e8 7c ae ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9304:	48 89 c3             	mov    %rax,%rbx
    9307:	48 8d 05 42 22 01 00 	lea    0x12242(%rip),%rax        # 1b550 <_ZN6__pstl9execution2v1L5unseqE+0x285>
    930e:	48 89 c6             	mov    %rax,%rsi
    9311:	48 89 df             	mov    %rbx,%rdi
    9314:	e8 e7 ad ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9319:	48 8b 05 88 0c 02 00 	mov    0x20c88(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9320:	48 89 c2             	mov    %rax,%rdx
    9323:	48 8d 05 16 0a 02 00 	lea    0x20a16(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    932a:	48 89 c6             	mov    %rax,%rsi
    932d:	48 89 df             	mov    %rbx,%rdi
    9330:	e8 eb b4 ff ff       	call   4820 <__cxa_throw@plt>
    9335:	49 89 c4             	mov    %rax,%r12
    9338:	48 89 df             	mov    %rbx,%rdi
    933b:	e8 40 af ff ff       	call   4280 <__cxa_free_exception@plt>
    9340:	4c 89 e0             	mov    %r12,%rax
    9343:	48 89 c7             	mov    %rax,%rdi
    9346:	e8 25 b5 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    934b:	90                   	nop
    934c:	48 81 c4 f0 00 00 00 	add    $0xf0,%rsp
    9353:	5b                   	pop    %rbx
    9354:	41 5c                	pop    %r12
    9356:	5d                   	pop    %rbp
    9357:	c3                   	ret

0000000000009358 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>:

void rtvc::RenderApplication::createGraphicsPipeline() {
    9358:	55                   	push   %rbp
    9359:	48 89 e5             	mov    %rsp,%rbp
    935c:	41 55                	push   %r13
    935e:	41 54                	push   %r12
    9360:	53                   	push   %rbx
    9361:	48 81 ec 38 04 00 00 	sub    $0x438,%rsp
    9368:	48 89 bd b8 fb ff ff 	mov    %rdi,-0x448(%rbp)
  auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    936f:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    9373:	48 89 c7             	mov    %rax,%rdi
    9376:	e8 05 b5 ff ff       	call   4880 <_ZNSaIcEC1Ev@plt>
    937b:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    937f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    9386:	48 8d 0d e3 21 01 00 	lea    0x121e3(%rip),%rcx        # 1b570 <_ZN6__pstl9execution2v1L5unseqE+0x2a5>
    938d:	48 89 ce             	mov    %rcx,%rsi
    9390:	48 89 c7             	mov    %rax,%rdi
    9393:	e8 48 2e 00 00       	call   c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    9398:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    939f:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    93a6:	48 8b 8d b8 fb ff ff 	mov    -0x448(%rbp),%rcx
    93ad:	48 89 ce             	mov    %rcx,%rsi
    93b0:	48 89 c7             	mov    %rax,%rdi
    93b3:	e8 f2 fa ff ff       	call   8eaa <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    93b8:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    93bf:	48 89 c7             	mov    %rax,%rdi
    93c2:	e8 69 ae ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    93c7:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    93cb:	48 89 c7             	mov    %rax,%rdi
    93ce:	e8 ed b0 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
  auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    93d3:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    93d7:	48 89 c7             	mov    %rax,%rdi
    93da:	e8 a1 b4 ff ff       	call   4880 <_ZNSaIcEC1Ev@plt>
    93df:	48 8d 55 c3          	lea    -0x3d(%rbp),%rdx
    93e3:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    93e7:	48 8d 0d a2 21 01 00 	lea    0x121a2(%rip),%rcx        # 1b590 <_ZN6__pstl9execution2v1L5unseqE+0x2c5>
    93ee:	48 89 ce             	mov    %rcx,%rsi
    93f1:	48 89 c7             	mov    %rax,%rdi
    93f4:	e8 e7 2d 00 00       	call   c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    93f9:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    9400:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    9404:	48 8b 8d b8 fb ff ff 	mov    -0x448(%rbp),%rcx
    940b:	48 89 ce             	mov    %rcx,%rsi
    940e:	48 89 c7             	mov    %rax,%rdi
    9411:	e8 94 fa ff ff       	call   8eaa <_ZN4rtvc17RenderApplication10readShaderERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    9416:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    941a:	48 89 c7             	mov    %rax,%rdi
    941d:	e8 0e ae ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9422:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    9426:	48 89 c7             	mov    %rax,%rdi
    9429:	e8 92 b0 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>

  VkShaderModule vertShaderModule = createShaderModule(vertShaderCode);
    942e:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx
    9435:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    943c:	48 89 d6             	mov    %rdx,%rsi
    943f:	48 89 c7             	mov    %rax,%rdi
    9442:	e8 37 fc ff ff       	call   907e <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    9447:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  VkShaderModule fragShaderModule = createShaderModule(fragShaderCode);
    944b:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    9452:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9459:	48 89 d6             	mov    %rdx,%rsi
    945c:	48 89 c7             	mov    %rax,%rdi
    945f:	e8 1a fc ff ff       	call   907e <_ZN4rtvc17RenderApplication18createShaderModuleERKSt6vectorIcSaIcEE>
    9464:	48 89 45 d0          	mov    %rax,-0x30(%rbp)

  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    9468:	66 0f ef c0          	pxor   %xmm0,%xmm0
    946c:	0f 29 85 00 ff ff ff 	movaps %xmm0,-0x100(%rbp)
    9473:	0f 29 85 10 ff ff ff 	movaps %xmm0,-0xf0(%rbp)
    947a:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
  vertShaderStageInfo.sType =
    9481:	c7 85 00 ff ff ff 12 	movl   $0x12,-0x100(%rbp)
    9488:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    948b:	c7 85 14 ff ff ff 01 	movl   $0x1,-0xec(%rbp)
    9492:	00 00 00 
  vertShaderStageInfo.module = vertShaderModule;
    9495:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    9499:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
  vertShaderStageInfo.pName = "main";
    94a0:	48 8d 05 09 21 01 00 	lea    0x12109(%rip),%rax        # 1b5b0 <_ZN6__pstl9execution2v1L5unseqE+0x2e5>
    94a7:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    94ae:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
    94b5:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    94b9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    94bd:	0f 29 85 d0 fe ff ff 	movaps %xmm0,-0x130(%rbp)
    94c4:	0f 29 85 e0 fe ff ff 	movaps %xmm0,-0x120(%rbp)
    94cb:	0f 29 85 f0 fe ff ff 	movaps %xmm0,-0x110(%rbp)
  fragShaderStageInfo.sType =
    94d2:	c7 85 d0 fe ff ff 12 	movl   $0x12,-0x130(%rbp)
    94d9:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    94dc:	c7 85 e4 fe ff ff 10 	movl   $0x10,-0x11c(%rbp)
    94e3:	00 00 00 
  fragShaderStageInfo.module = fragShaderModule;
    94e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    94ea:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
  fragShaderStageInfo.pName = "main";
    94f1:	48 8d 05 b8 20 01 00 	lea    0x120b8(%rip),%rax        # 1b5b0 <_ZN6__pstl9execution2v1L5unseqE+0x2e5>
    94f8:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    94ff:	48 c7 85 f8 fe ff ff 	movq   $0x0,-0x108(%rbp)
    9506:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    950a:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
    9511:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    9518:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    951f:	48 89 95 78 fe ff ff 	mov    %rdx,-0x188(%rbp)
    9526:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    952d:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    9534:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    953b:	48 89 95 88 fe ff ff 	mov    %rdx,-0x178(%rbp)
    9542:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    9549:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    9550:	48 89 85 90 fe ff ff 	mov    %rax,-0x170(%rbp)
    9557:	48 89 95 98 fe ff ff 	mov    %rdx,-0x168(%rbp)
    955e:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
    9565:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
    956c:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
    9573:	48 89 95 a8 fe ff ff 	mov    %rdx,-0x158(%rbp)
    957a:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
    9581:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    9588:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
    958f:	48 89 95 b8 fe ff ff 	mov    %rdx,-0x148(%rbp)
    9596:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
    959d:	48 8b 95 f8 fe ff ff 	mov    -0x108(%rbp),%rdx
    95a4:	48 89 85 c0 fe ff ff 	mov    %rax,-0x140(%rbp)
    95ab:	48 89 95 c8 fe ff ff 	mov    %rdx,-0x138(%rbp)

  VkPipelineVertexInputStateCreateInfo vertexInputInfo{};
    95b2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    95b6:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    95bd:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    95c4:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
  vertexInputInfo.sType =
    95cb:	c7 85 40 fe ff ff 13 	movl   $0x13,-0x1c0(%rbp)
    95d2:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;

  auto bindingDescription = rtvc::Vertex::getBindingDescription();
    95d5:	e8 8c f9 00 00       	call   18f66 <_ZN4rtvc6Vertex21getBindingDescriptionEv>
    95da:	48 89 85 34 fe ff ff 	mov    %rax,-0x1cc(%rbp)
    95e1:	8b 85 3c fe ff ff    	mov    -0x1c4(%rbp),%eax
    95e7:	83 e0 00             	and    $0x0,%eax
    95ea:	09 d0                	or     %edx,%eax
    95ec:	89 85 3c fe ff ff    	mov    %eax,-0x1c4(%rbp)
  auto attributeDescriptions = rtvc::Vertex::getAttributeDescriptions();
    95f2:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    95f9:	48 89 c7             	mov    %rax,%rdi
    95fc:	e8 a7 f9 00 00       	call   18fa8 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>

  vertexInputInfo.vertexBindingDescriptionCount = 1;
    9601:	c7 85 54 fe ff ff 01 	movl   $0x1,-0x1ac(%rbp)
    9608:	00 00 00 
  vertexInputInfo.vertexAttributeDescriptionCount =
      static_cast<uint32_t>(attributeDescriptions.size());
    960b:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    9612:	48 89 c7             	mov    %rax,%rdi
    9615:	e8 76 48 00 00       	call   de90 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>
  vertexInputInfo.vertexAttributeDescriptionCount =
    961a:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  vertexInputInfo.pVertexBindingDescriptions = &bindingDescription;
    9620:	48 8d 85 34 fe ff ff 	lea    -0x1cc(%rbp),%rax
    9627:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)
  vertexInputInfo.pVertexAttributeDescriptions = attributeDescriptions.data();
    962e:	48 8d 85 10 fe ff ff 	lea    -0x1f0(%rbp),%rax
    9635:	48 89 c7             	mov    %rax,%rdi
    9638:	e8 19 2b 00 00       	call   c156 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>
    963d:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)

  VkPipelineInputAssemblyStateCreateInfo inputAssembly{};
    9644:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9648:	0f 29 85 f0 fd ff ff 	movaps %xmm0,-0x210(%rbp)
    964f:	0f 29 85 00 fe ff ff 	movaps %xmm0,-0x200(%rbp)
  inputAssembly.sType =
    9656:	c7 85 f0 fd ff ff 14 	movl   $0x14,-0x210(%rbp)
    965d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssembly.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    9660:	c7 85 04 fe ff ff 03 	movl   $0x3,-0x1fc(%rbp)
    9667:	00 00 00 
  inputAssembly.primitiveRestartEnable = VK_FALSE;
    966a:	c7 85 08 fe ff ff 00 	movl   $0x0,-0x1f8(%rbp)
    9671:	00 00 00 

  VkViewport viewport{};
    9674:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9678:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    967f:	66 0f d6 85 e0 fd ff 	movq   %xmm0,-0x220(%rbp)
    9686:	ff 
  viewport.x = 0.0f;
    9687:	66 0f ef c0          	pxor   %xmm0,%xmm0
    968b:	f3 0f 11 85 d0 fd ff 	movss  %xmm0,-0x230(%rbp)
    9692:	ff 
  viewport.y = 0.0f;
    9693:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9697:	f3 0f 11 85 d4 fd ff 	movss  %xmm0,-0x22c(%rbp)
    969e:	ff 
  viewport.width = static_cast<float>(swapChainExtent.width);
    969f:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    96a6:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    96ac:	89 c0                	mov    %eax,%eax
    96ae:	48 85 c0             	test   %rax,%rax
    96b1:	78 0b                	js     96be <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x366>
    96b3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96b7:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    96bc:	eb 19                	jmp    96d7 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x37f>
    96be:	48 89 c2             	mov    %rax,%rdx
    96c1:	48 d1 ea             	shr    %rdx
    96c4:	83 e0 01             	and    $0x1,%eax
    96c7:	48 09 c2             	or     %rax,%rdx
    96ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96ce:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    96d3:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    96d7:	f3 0f 11 85 d8 fd ff 	movss  %xmm0,-0x228(%rbp)
    96de:	ff 
  viewport.height = static_cast<float>(swapChainExtent.height);
    96df:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    96e6:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    96ec:	89 c0                	mov    %eax,%eax
    96ee:	48 85 c0             	test   %rax,%rax
    96f1:	78 0b                	js     96fe <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x3a6>
    96f3:	66 0f ef c0          	pxor   %xmm0,%xmm0
    96f7:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    96fc:	eb 19                	jmp    9717 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x3bf>
    96fe:	48 89 c2             	mov    %rax,%rdx
    9701:	48 d1 ea             	shr    %rdx
    9704:	83 e0 01             	and    $0x1,%eax
    9707:	48 09 c2             	or     %rax,%rdx
    970a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    970e:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    9713:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    9717:	f3 0f 11 85 dc fd ff 	movss  %xmm0,-0x224(%rbp)
    971e:	ff 
  viewport.minDepth = 0.0f;
    971f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9723:	f3 0f 11 85 e0 fd ff 	movss  %xmm0,-0x220(%rbp)
    972a:	ff 
  viewport.maxDepth = 1.0f;
    972b:	f3 0f 10 05 3d 21 01 	movss  0x1213d(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    9732:	00 
    9733:	f3 0f 11 85 e4 fd ff 	movss  %xmm0,-0x21c(%rbp)
    973a:	ff 

  VkRect2D scissor{};
    973b:	48 c7 85 c0 fd ff ff 	movq   $0x0,-0x240(%rbp)
    9742:	00 00 00 00 
    9746:	48 c7 85 c8 fd ff ff 	movq   $0x0,-0x238(%rbp)
    974d:	00 00 00 00 
  scissor.offset = {0, 0};
    9751:	c7 85 c0 fd ff ff 00 	movl   $0x0,-0x240(%rbp)
    9758:	00 00 00 
    975b:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%rbp)
    9762:	00 00 00 
  scissor.extent = swapChainExtent;
    9765:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    976c:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
    9773:	48 89 85 c8 fd ff ff 	mov    %rax,-0x238(%rbp)

  VkPipelineViewportStateCreateInfo viewportState{};
    977a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    977e:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    9785:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    978c:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  viewportState.sType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    9793:	c7 85 90 fd ff ff 16 	movl   $0x16,-0x270(%rbp)
    979a:	00 00 00 
  viewportState.viewportCount = 1;
    979d:	c7 85 a4 fd ff ff 01 	movl   $0x1,-0x25c(%rbp)
    97a4:	00 00 00 
  viewportState.pViewports = &viewport;
    97a7:	48 8d 85 d0 fd ff ff 	lea    -0x230(%rbp),%rax
    97ae:	48 89 85 a8 fd ff ff 	mov    %rax,-0x258(%rbp)
  viewportState.scissorCount = 1;
    97b5:	c7 85 b0 fd ff ff 01 	movl   $0x1,-0x250(%rbp)
    97bc:	00 00 00 
  viewportState.pScissors = &scissor;
    97bf:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    97c6:	48 89 85 b8 fd ff ff 	mov    %rax,-0x248(%rbp)

  VkPipelineRasterizationStateCreateInfo rasterizer{};
    97cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    97d1:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    97d8:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
    97df:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    97e6:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
  rasterizer.sType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    97ed:	c7 85 50 fd ff ff 17 	movl   $0x17,-0x2b0(%rbp)
    97f4:	00 00 00 
  rasterizer.depthClampEnable = VK_FALSE;
    97f7:	c7 85 64 fd ff ff 00 	movl   $0x0,-0x29c(%rbp)
    97fe:	00 00 00 
  rasterizer.rasterizerDiscardEnable = VK_FALSE;
    9801:	c7 85 68 fd ff ff 00 	movl   $0x0,-0x298(%rbp)
    9808:	00 00 00 
  rasterizer.polygonMode = VK_POLYGON_MODE_FILL;
    980b:	c7 85 6c fd ff ff 00 	movl   $0x0,-0x294(%rbp)
    9812:	00 00 00 
  rasterizer.lineWidth = 1.0f;
    9815:	f3 0f 10 05 53 20 01 	movss  0x12053(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    981c:	00 
    981d:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    9824:	ff 
  rasterizer.cullMode = VK_CULL_MODE_BACK_BIT;
    9825:	c7 85 70 fd ff ff 02 	movl   $0x2,-0x290(%rbp)
    982c:	00 00 00 
  rasterizer.frontFace = VK_FRONT_FACE_CLOCKWISE;
    982f:	c7 85 74 fd ff ff 01 	movl   $0x1,-0x28c(%rbp)
    9836:	00 00 00 
  rasterizer.depthBiasEnable = VK_FALSE;
    9839:	c7 85 78 fd ff ff 00 	movl   $0x0,-0x288(%rbp)
    9840:	00 00 00 
  rasterizer.depthBiasConstantFactor = 0.0f;
    9843:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9847:	f3 0f 11 85 7c fd ff 	movss  %xmm0,-0x284(%rbp)
    984e:	ff 
  rasterizer.depthBiasClamp = 0.0f;
    984f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9853:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    985a:	ff 
  rasterizer.depthBiasSlopeFactor = 0.0f;
    985b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    985f:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    9866:	ff 

  VkPipelineMultisampleStateCreateInfo multisampling{};
    9867:	66 0f ef c0          	pxor   %xmm0,%xmm0
    986b:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    9872:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
    9879:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
  multisampling.sType =
    9880:	c7 85 20 fd ff ff 18 	movl   $0x18,-0x2e0(%rbp)
    9887:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampling.sampleShadingEnable = VK_FALSE;
    988a:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
    9891:	00 00 00 
  multisampling.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    9894:	c7 85 34 fd ff ff 01 	movl   $0x1,-0x2cc(%rbp)
    989b:	00 00 00 
  multisampling.minSampleShading = 1.0F;
    989e:	f3 0f 10 05 ca 1f 01 	movss  0x11fca(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    98a5:	00 
    98a6:	f3 0f 11 85 3c fd ff 	movss  %xmm0,-0x2c4(%rbp)
    98ad:	ff 
  multisampling.pSampleMask = nullptr;
    98ae:	48 c7 85 40 fd ff ff 	movq   $0x0,-0x2c0(%rbp)
    98b5:	00 00 00 00 
  multisampling.alphaToCoverageEnable = VK_FALSE;
    98b9:	c7 85 48 fd ff ff 00 	movl   $0x0,-0x2b8(%rbp)
    98c0:	00 00 00 
  multisampling.alphaToOneEnable = VK_FALSE;
    98c3:	c7 85 4c fd ff ff 00 	movl   $0x0,-0x2b4(%rbp)
    98ca:	00 00 00 

  // VkPipelineDepthStencilStateCreateInfo

  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    98cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    98d1:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    98d8:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
  colorBlendAttachment.colorWriteMask =
    98df:	c7 85 1c fd ff ff 0f 	movl   $0xf,-0x2e4(%rbp)
    98e6:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_FALSE;
    98e9:	c7 85 00 fd ff ff 00 	movl   $0x0,-0x300(%rbp)
    98f0:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_ONE;
    98f3:	c7 85 04 fd ff ff 01 	movl   $0x1,-0x2fc(%rbp)
    98fa:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor = VK_BLEND_FACTOR_ZERO;
    98fd:	c7 85 08 fd ff ff 00 	movl   $0x0,-0x2f8(%rbp)
    9904:	00 00 00 
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    9907:	c7 85 0c fd ff ff 00 	movl   $0x0,-0x2f4(%rbp)
    990e:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    9911:	c7 85 10 fd ff ff 01 	movl   $0x1,-0x2f0(%rbp)
    9918:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    991b:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    9922:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    9925:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    992c:	00 00 00 
  // VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA; colorBlendAttachment.colorBlendOp =
  // VK_BLEND_OP_ADD; colorBlendAttachment.srcAlphaBlendFactor =
  // VK_BLEND_FACTOR_ONE; colorBlendAttachment.dstAlphaBlendFactor =
  // VK_BLEND_FACTOR_ZERO; colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;

  VkPipelineColorBlendStateCreateInfo colorBlending{};
    992f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9933:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
    993a:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    9941:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    9948:	66 0f d6 85 f0 fc ff 	movq   %xmm0,-0x310(%rbp)
    994f:	ff 
  colorBlending.sType =
    9950:	c7 85 c0 fc ff ff 1a 	movl   $0x1a,-0x340(%rbp)
    9957:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlending.logicOpEnable = VK_FALSE;
    995a:	c7 85 d4 fc ff ff 00 	movl   $0x0,-0x32c(%rbp)
    9961:	00 00 00 
  colorBlending.logicOp = VK_LOGIC_OP_COPY;
    9964:	c7 85 d8 fc ff ff 03 	movl   $0x3,-0x328(%rbp)
    996b:	00 00 00 
  colorBlending.attachmentCount = 1;
    996e:	c7 85 dc fc ff ff 01 	movl   $0x1,-0x324(%rbp)
    9975:	00 00 00 
  colorBlending.pAttachments = &colorBlendAttachment;
    9978:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    997f:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
  colorBlending.blendConstants[0] = 0.0f;
    9986:	66 0f ef c0          	pxor   %xmm0,%xmm0
    998a:	f3 0f 11 85 e8 fc ff 	movss  %xmm0,-0x318(%rbp)
    9991:	ff 
  colorBlending.blendConstants[1] = 0.0f;
    9992:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9996:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    999d:	ff 
  colorBlending.blendConstants[2] = 0.0f;
    999e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    99a2:	f3 0f 11 85 f0 fc ff 	movss  %xmm0,-0x310(%rbp)
    99a9:	ff 
  colorBlending.blendConstants[3] = 0.0f;
    99aa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    99ae:	f3 0f 11 85 f4 fc ff 	movss  %xmm0,-0x30c(%rbp)
    99b5:	ff 

  std::vector<VkDynamicState> dynamicStates = {VK_DYNAMIC_STATE_VIEWPORT,
                                               VK_DYNAMIC_STATE_LINE_WIDTH};
    99b6:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)
    99bd:	c7 45 c8 02 00 00 00 	movl   $0x2,-0x38(%rbp)
    99c4:	48 8d 45 c4          	lea    -0x3c(%rbp),%rax
    99c8:	49 89 c4             	mov    %rax,%r12
    99cb:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    99d1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    99d5:	48 89 c7             	mov    %rax,%rdi
    99d8:	e8 c3 44 00 00       	call   dea0 <_ZNSaI14VkDynamicStateEC1Ev>
    99dd:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    99e1:	4c 89 e6             	mov    %r12,%rsi
    99e4:	4c 89 ef             	mov    %r13,%rdi
    99e7:	4c 89 e1             	mov    %r12,%rcx
    99ea:	4c 89 eb             	mov    %r13,%rbx
    99ed:	48 89 df             	mov    %rbx,%rdi
    99f0:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    99f7:	48 89 d1             	mov    %rdx,%rcx
    99fa:	48 89 fa             	mov    %rdi,%rdx
    99fd:	48 89 c7             	mov    %rax,%rdi
    9a00:	e8 d3 44 00 00       	call   ded8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    9a05:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9a09:	48 89 c7             	mov    %rax,%rdi
    9a0c:	e8 ab 44 00 00       	call   debc <_ZNSaI14VkDynamicStateED1Ev>

  [[maybe_unused]] VkPipelineDynamicStateCreateInfo dynamicState{};
    9a11:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9a15:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    9a1c:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
  dynamicState.sType = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    9a23:	c7 85 80 fc ff ff 1b 	movl   $0x1b,-0x380(%rbp)
    9a2a:	00 00 00 
  dynamicState.dynamicStateCount = static_cast<uint32_t>(dynamicStates.size());
    9a2d:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9a34:	48 89 c7             	mov    %rax,%rdi
    9a37:	e8 68 45 00 00       	call   dfa4 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>
    9a3c:	89 85 94 fc ff ff    	mov    %eax,-0x36c(%rbp)
  dynamicState.pDynamicStates = dynamicStates.data();
    9a42:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9a49:	48 89 c7             	mov    %rax,%rdi
    9a4c:	e8 77 45 00 00       	call   dfc8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>
    9a51:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)

  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    9a58:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9a5c:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    9a63:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    9a6a:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    9a71:	c7 85 50 fc ff ff 1e 	movl   $0x1e,-0x3b0(%rbp)
    9a78:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    9a7b:	c7 85 64 fc ff ff 00 	movl   $0x0,-0x39c(%rbp)
    9a82:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    9a85:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    9a8c:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    9a90:	c7 85 70 fc ff ff 00 	movl   $0x0,-0x390(%rbp)
    9a97:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    9a9a:	48 c7 85 78 fc ff ff 	movq   $0x0,-0x388(%rbp)
    9aa1:	00 00 00 00 

  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    9aa5:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9aac:	48 8d 90 c8 00 00 00 	lea    0xc8(%rax),%rdx
    9ab3:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9aba:	48 8b 40 40          	mov    0x40(%rax),%rax
    9abe:	48 8d b5 50 fc ff ff 	lea    -0x3b0(%rbp),%rsi
    9ac5:	48 89 d1             	mov    %rdx,%rcx
    9ac8:	ba 00 00 00 00       	mov    $0x0,%edx
    9acd:	48 89 c7             	mov    %rax,%rdi
    9ad0:	e8 4b a8 ff ff       	call   4320 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS)
    9ad5:	85 c0                	test   %eax,%eax
    9ad7:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    9ada:	84 c0                	test   %al,%al
    9adc:	74 3b                	je     9b19 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x7c1>
    throw std::runtime_error("Failed to create pipeline layout.");
    9ade:	bf 10 00 00 00       	mov    $0x10,%edi
    9ae3:	e8 98 a6 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9ae8:	48 89 c3             	mov    %rax,%rbx
    9aeb:	48 8d 05 c6 1a 01 00 	lea    0x11ac6(%rip),%rax        # 1b5b8 <_ZN6__pstl9execution2v1L5unseqE+0x2ed>
    9af2:	48 89 c6             	mov    %rax,%rsi
    9af5:	48 89 df             	mov    %rbx,%rdi
    9af8:	e8 03 a6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9afd:	48 8b 05 a4 04 02 00 	mov    0x204a4(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9b04:	48 89 c2             	mov    %rax,%rdx
    9b07:	48 8d 05 32 02 02 00 	lea    0x20232(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9b0e:	48 89 c6             	mov    %rax,%rsi
    9b11:	48 89 df             	mov    %rbx,%rdi
    9b14:	e8 07 ad ff ff       	call   4820 <__cxa_throw@plt>

  VkGraphicsPipelineCreateInfo pipelineInfo{};
    9b19:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
    9b20:	b8 00 00 00 00       	mov    $0x0,%eax
    9b25:	b9 12 00 00 00       	mov    $0x12,%ecx
    9b2a:	48 89 d7             	mov    %rdx,%rdi
    9b2d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    9b30:	c7 85 c0 fb ff ff 1c 	movl   $0x1c,-0x440(%rbp)
    9b37:	00 00 00 
  pipelineInfo.stageCount = 2;
    9b3a:	c7 85 d4 fb ff ff 02 	movl   $0x2,-0x42c(%rbp)
    9b41:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    9b44:	48 8d 85 70 fe ff ff 	lea    -0x190(%rbp),%rax
    9b4b:	48 89 85 d8 fb ff ff 	mov    %rax,-0x428(%rbp)
  pipelineInfo.pVertexInputState = &vertexInputInfo;
    9b52:	48 8d 85 40 fe ff ff 	lea    -0x1c0(%rbp),%rax
    9b59:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssembly;
    9b60:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    9b67:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
  pipelineInfo.pViewportState = &viewportState;
    9b6e:	48 8d 85 90 fd ff ff 	lea    -0x270(%rbp),%rax
    9b75:	48 89 85 f8 fb ff ff 	mov    %rax,-0x408(%rbp)
  pipelineInfo.pRasterizationState = &rasterizer;
    9b7c:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    9b83:	48 89 85 00 fc ff ff 	mov    %rax,-0x400(%rbp)
  pipelineInfo.pMultisampleState = &multisampling;
    9b8a:	48 8d 85 20 fd ff ff 	lea    -0x2e0(%rbp),%rax
    9b91:	48 89 85 08 fc ff ff 	mov    %rax,-0x3f8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    9b98:	48 c7 85 10 fc ff ff 	movq   $0x0,-0x3f0(%rbp)
    9b9f:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlending;
    9ba3:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    9baa:	48 89 85 18 fc ff ff 	mov    %rax,-0x3e8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    9bb1:	48 c7 85 20 fc ff ff 	movq   $0x0,-0x3e0(%rbp)
    9bb8:	00 00 00 00 
  pipelineInfo.layout = pipelineLayout;
    9bbc:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9bc3:	48 8b 80 c8 00 00 00 	mov    0xc8(%rax),%rax
    9bca:	48 89 85 28 fc ff ff 	mov    %rax,-0x3d8(%rbp)
  pipelineInfo.renderPass = renderPass;
    9bd1:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9bd8:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    9bdf:	48 89 85 30 fc ff ff 	mov    %rax,-0x3d0(%rbp)
  pipelineInfo.subpass = 0;
    9be6:	c7 85 38 fc ff ff 00 	movl   $0x0,-0x3c8(%rbp)
    9bed:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    9bf0:	48 c7 85 40 fc ff ff 	movq   $0x0,-0x3c0(%rbp)
    9bf7:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    9bfb:	c7 85 48 fc ff ff ff 	movl   $0xffffffff,-0x3b8(%rbp)
    9c02:	ff ff ff 

  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    9c05:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9c0c:	48 8d 88 d0 00 00 00 	lea    0xd0(%rax),%rcx
    9c13:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9c1a:	48 8b 40 40          	mov    0x40(%rax),%rax
    9c1e:	48 8d 95 c0 fb ff ff 	lea    -0x440(%rbp),%rdx
    9c25:	49 89 c9             	mov    %rcx,%r9
    9c28:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    9c2e:	48 89 d1             	mov    %rdx,%rcx
    9c31:	ba 01 00 00 00       	mov    $0x1,%edx
    9c36:	be 00 00 00 00       	mov    $0x0,%esi
    9c3b:	48 89 c7             	mov    %rax,%rdi
    9c3e:	e8 2d a5 ff ff       	call   4170 <vkCreateGraphicsPipelines@plt>
                                nullptr, &graphicsPipeline) != VK_SUCCESS)
    9c43:	85 c0                	test   %eax,%eax
    9c45:	0f 95 c0             	setne  %al
  if (vkCreateGraphicsPipelines(device, VK_NULL_HANDLE, 1, &pipelineInfo,
    9c48:	84 c0                	test   %al,%al
    9c4a:	74 3b                	je     9c87 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x92f>
    throw std::runtime_error("Failed to create graphics pipeline.");
    9c4c:	bf 10 00 00 00       	mov    $0x10,%edi
    9c51:	e8 2a a5 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9c56:	48 89 c3             	mov    %rax,%rbx
    9c59:	48 8d 05 80 19 01 00 	lea    0x11980(%rip),%rax        # 1b5e0 <_ZN6__pstl9execution2v1L5unseqE+0x315>
    9c60:	48 89 c6             	mov    %rax,%rsi
    9c63:	48 89 df             	mov    %rbx,%rdi
    9c66:	e8 95 a4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9c6b:	48 8b 05 36 03 02 00 	mov    0x20336(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9c72:	48 89 c2             	mov    %rax,%rdx
    9c75:	48 8d 05 c4 00 02 00 	lea    0x200c4(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9c7c:	48 89 c6             	mov    %rax,%rsi
    9c7f:	48 89 df             	mov    %rbx,%rdi
    9c82:	e8 99 ab ff ff       	call   4820 <__cxa_throw@plt>

  vkDestroyShaderModule(device, fragShaderModule, nullptr);
    9c87:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9c8e:	48 8b 40 40          	mov    0x40(%rax),%rax
    9c92:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    9c96:	ba 00 00 00 00       	mov    $0x0,%edx
    9c9b:	48 89 ce             	mov    %rcx,%rsi
    9c9e:	48 89 c7             	mov    %rax,%rdi
    9ca1:	e8 ca a8 ff ff       	call   4570 <vkDestroyShaderModule@plt>
  vkDestroyShaderModule(device, vertShaderModule, nullptr);
    9ca6:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
    9cad:	48 8b 40 40          	mov    0x40(%rax),%rax
    9cb1:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    9cb5:	ba 00 00 00 00       	mov    $0x0,%edx
    9cba:	48 89 ce             	mov    %rcx,%rsi
    9cbd:	48 89 c7             	mov    %rax,%rdi
    9cc0:	e8 ab a8 ff ff       	call   4570 <vkDestroyShaderModule@plt>
}
    9cc5:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9ccc:	48 89 c7             	mov    %rax,%rdi
    9ccf:	e8 8c 42 00 00       	call   df60 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    9cd4:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    9cdb:	48 89 c7             	mov    %rax,%rdi
    9cde:	e8 8d 40 00 00       	call   dd70 <_ZNSt6vectorIcSaIcEED1Ev>
    9ce3:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    9cea:	48 89 c7             	mov    %rax,%rdi
    9ced:	e8 7e 40 00 00       	call   dd70 <_ZNSt6vectorIcSaIcEED1Ev>
    9cf2:	e9 c1 00 00 00       	jmp    9db8 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa60>
  auto vertShaderCode = readShader("build/shaders/triangle_vert.spv");
    9cf7:	48 89 c3             	mov    %rax,%rbx
    9cfa:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    9d01:	48 89 c7             	mov    %rax,%rdi
    9d04:	e8 27 a5 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9d09:	eb 03                	jmp    9d0e <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9b6>
    9d0b:	48 89 c3             	mov    %rax,%rbx
    9d0e:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    9d12:	48 89 c7             	mov    %rax,%rdi
    9d15:	e8 a6 a7 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    9d1a:	48 89 d8             	mov    %rbx,%rax
    9d1d:	48 89 c7             	mov    %rax,%rdi
    9d20:	e8 4b ab ff ff       	call   4870 <_Unwind_Resume@plt>
  auto fragShaderCode = readShader("build/shaders/triangle_frag.spv");
    9d25:	48 89 c3             	mov    %rax,%rbx
    9d28:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    9d2c:	48 89 c7             	mov    %rax,%rdi
    9d2f:	e8 fc a4 ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    9d34:	eb 03                	jmp    9d39 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0x9e1>
    9d36:	48 89 c3             	mov    %rax,%rbx
    9d39:	48 8d 45 c3          	lea    -0x3d(%rbp),%rax
    9d3d:	48 89 c7             	mov    %rax,%rdi
    9d40:	e8 7b a7 ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
    9d45:	eb 57                	jmp    9d9e <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa46>
                                               VK_DYNAMIC_STATE_LINE_WIDTH};
    9d47:	48 89 c3             	mov    %rax,%rbx
    9d4a:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    9d4e:	48 89 c7             	mov    %rax,%rdi
    9d51:	e8 66 41 00 00       	call   debc <_ZNSaI14VkDynamicStateED1Ev>
    9d56:	eb 37                	jmp    9d8f <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa37>
    throw std::runtime_error("Failed to create pipeline layout.");
    9d58:	49 89 c4             	mov    %rax,%r12
    9d5b:	48 89 df             	mov    %rbx,%rdi
    9d5e:	e8 1d a5 ff ff       	call   4280 <__cxa_free_exception@plt>
    9d63:	4c 89 e3             	mov    %r12,%rbx
    9d66:	eb 13                	jmp    9d7b <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa23>
    throw std::runtime_error("Failed to create graphics pipeline.");
    9d68:	49 89 c4             	mov    %rax,%r12
    9d6b:	48 89 df             	mov    %rbx,%rdi
    9d6e:	e8 0d a5 ff ff       	call   4280 <__cxa_free_exception@plt>
    9d73:	4c 89 e3             	mov    %r12,%rbx
    9d76:	eb 03                	jmp    9d7b <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa23>
}
    9d78:	48 89 c3             	mov    %rax,%rbx
    9d7b:	48 8d 85 a0 fc ff ff 	lea    -0x360(%rbp),%rax
    9d82:	48 89 c7             	mov    %rax,%rdi
    9d85:	e8 d6 41 00 00       	call   df60 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    9d8a:	eb 03                	jmp    9d8f <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv+0xa37>
    9d8c:	48 89 c3             	mov    %rax,%rbx
    9d8f:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax
    9d96:	48 89 c7             	mov    %rax,%rdi
    9d99:	e8 d2 3f 00 00       	call   dd70 <_ZNSt6vectorIcSaIcEED1Ev>
    9d9e:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
    9da5:	48 89 c7             	mov    %rax,%rdi
    9da8:	e8 c3 3f 00 00       	call   dd70 <_ZNSt6vectorIcSaIcEED1Ev>
    9dad:	48 89 d8             	mov    %rbx,%rax
    9db0:	48 89 c7             	mov    %rax,%rdi
    9db3:	e8 b8 aa ff ff       	call   4870 <_Unwind_Resume@plt>
    9db8:	48 81 c4 38 04 00 00 	add    $0x438,%rsp
    9dbf:	5b                   	pop    %rbx
    9dc0:	41 5c                	pop    %r12
    9dc2:	41 5d                	pop    %r13
    9dc4:	5d                   	pop    %rbp
    9dc5:	c3                   	ret

0000000000009dc6 <_ZN4rtvc17RenderApplication18createFramebuffersEv>:

void rtvc::RenderApplication::createFramebuffers() {
    9dc6:	55                   	push   %rbp
    9dc7:	48 89 e5             	mov    %rsp,%rbp
    9dca:	41 54                	push   %r12
    9dcc:	53                   	push   %rbx
    9dcd:	48 83 ec 60          	sub    $0x60,%rsp
    9dd1:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
  swapChainFrameBuffers.resize(swapChainImageViews.size());
    9dd5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9dd9:	48 8d 98 d8 00 00 00 	lea    0xd8(%rax),%rbx
    9de0:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9de4:	48 05 a8 00 00 00    	add    $0xa8,%rax
    9dea:	48 89 c7             	mov    %rax,%rdi
    9ded:	e8 fa 41 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    9df2:	48 89 c6             	mov    %rax,%rsi
    9df5:	48 89 df             	mov    %rbx,%rdi
    9df8:	e8 13 42 00 00       	call   e010 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>

  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    9dfd:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    9e04:	00 
    9e05:	e9 fd 00 00 00       	jmp    9f07 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x141>
    VkImageView attachments[] = {swapChainImageViews[i]};
    9e0a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9e0e:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    9e15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e19:	48 89 c6             	mov    %rax,%rsi
    9e1c:	48 89 d7             	mov    %rdx,%rdi
    9e1f:	e8 a4 3e 00 00       	call   dcc8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    9e24:	48 8b 00             	mov    (%rax),%rax
    9e27:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

    VkFramebufferCreateInfo framebufferInfo{};
    9e2b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9e2f:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    9e33:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    9e37:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    9e3b:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    framebufferInfo.sType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO;
    9e3f:	c7 45 a0 25 00 00 00 	movl   $0x25,-0x60(%rbp)
    framebufferInfo.renderPass = renderPass;
    9e46:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9e4a:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    9e51:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    framebufferInfo.attachmentCount = 1;
    9e55:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
    framebufferInfo.pAttachments = attachments;
    9e5c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9e60:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    framebufferInfo.width = swapChainExtent.width;
    9e64:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9e68:	8b 80 9c 00 00 00    	mov    0x9c(%rax),%eax
    9e6e:	89 45 d0             	mov    %eax,-0x30(%rbp)
    framebufferInfo.height = swapChainExtent.height;
    9e71:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9e75:	8b 80 a0 00 00 00    	mov    0xa0(%rax),%eax
    9e7b:	89 45 d4             	mov    %eax,-0x2c(%rbp)
    framebufferInfo.layers = 1;
    9e7e:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)

    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
                            &swapChainFrameBuffers[i]) != VK_SUCCESS)
    9e85:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9e89:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    9e90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e94:	48 89 c6             	mov    %rax,%rsi
    9e97:	48 89 d7             	mov    %rdx,%rdi
    9e9a:	e8 f7 41 00 00       	call   e096 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    9e9f:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    9ea2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9ea6:	48 8b 40 40          	mov    0x40(%rax),%rax
    9eaa:	48 8d 75 a0          	lea    -0x60(%rbp),%rsi
    9eae:	48 89 d1             	mov    %rdx,%rcx
    9eb1:	ba 00 00 00 00       	mov    $0x0,%edx
    9eb6:	48 89 c7             	mov    %rax,%rdi
    9eb9:	e8 92 a7 ff ff       	call   4650 <vkCreateFramebuffer@plt>
                            &swapChainFrameBuffers[i]) != VK_SUCCESS)
    9ebe:	85 c0                	test   %eax,%eax
    9ec0:	0f 95 c0             	setne  %al
    if (vkCreateFramebuffer(device, &framebufferInfo, nullptr,
    9ec3:	84 c0                	test   %al,%al
    9ec5:	74 3b                	je     9f02 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x13c>
      throw std::runtime_error("Failed to create framebuffer.");
    9ec7:	bf 10 00 00 00       	mov    $0x10,%edi
    9ecc:	e8 af a2 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9ed1:	48 89 c3             	mov    %rax,%rbx
    9ed4:	48 8d 05 29 17 01 00 	lea    0x11729(%rip),%rax        # 1b604 <_ZN6__pstl9execution2v1L5unseqE+0x339>
    9edb:	48 89 c6             	mov    %rax,%rsi
    9ede:	48 89 df             	mov    %rbx,%rdi
    9ee1:	e8 1a a2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9ee6:	48 8b 05 bb 00 02 00 	mov    0x200bb(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9eed:	48 89 c2             	mov    %rax,%rdx
    9ef0:	48 8d 05 49 fe 01 00 	lea    0x1fe49(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    9ef7:	48 89 c6             	mov    %rax,%rsi
    9efa:	48 89 df             	mov    %rbx,%rdi
    9efd:	e8 1e a9 ff ff       	call   4820 <__cxa_throw@plt>
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    9f02:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    9f07:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    9f0b:	48 05 a8 00 00 00    	add    $0xa8,%rax
    9f11:	48 89 c7             	mov    %rax,%rdi
    9f14:	e8 d3 40 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    9f19:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    9f1d:	0f 92 c0             	setb   %al
    9f20:	84 c0                	test   %al,%al
    9f22:	0f 85 e2 fe ff ff    	jne    9e0a <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x44>
  }
}
    9f28:	eb 16                	jmp    9f40 <_ZN4rtvc17RenderApplication18createFramebuffersEv+0x17a>
      throw std::runtime_error("Failed to create framebuffer.");
    9f2a:	49 89 c4             	mov    %rax,%r12
    9f2d:	48 89 df             	mov    %rbx,%rdi
    9f30:	e8 4b a3 ff ff       	call   4280 <__cxa_free_exception@plt>
    9f35:	4c 89 e0             	mov    %r12,%rax
    9f38:	48 89 c7             	mov    %rax,%rdi
    9f3b:	e8 30 a9 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    9f40:	48 83 c4 60          	add    $0x60,%rsp
    9f44:	5b                   	pop    %rbx
    9f45:	41 5c                	pop    %r12
    9f47:	5d                   	pop    %rbp
    9f48:	c3                   	ret
    9f49:	90                   	nop

0000000000009f4a <_ZN4rtvc17RenderApplication17createCommandPoolEv>:

void rtvc::RenderApplication::createCommandPool() {
    9f4a:	55                   	push   %rbp
    9f4b:	48 89 e5             	mov    %rsp,%rbp
    9f4e:	41 54                	push   %r12
    9f50:	53                   	push   %rbx
    9f51:	48 83 ec 40          	sub    $0x40,%rsp
    9f55:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
  QueueFamilyIndices queueFamilyIndices = findQueueFamilies(physicalDevice);
    9f59:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9f5d:	48 8b 50 38          	mov    0x38(%rax),%rdx
    9f61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9f65:	48 89 d6             	mov    %rdx,%rsi
    9f68:	48 89 c7             	mov    %rax,%rdi
    9f6b:	e8 de e1 ff ff       	call   814e <_ZN4rtvc17RenderApplication17findQueueFamiliesEP18VkPhysicalDevice_T>
    9f70:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    9f74:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)

  VkCommandPoolCreateInfo poolInfo{};
    9f78:	66 0f ef c0          	pxor   %xmm0,%xmm0
    9f7c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    9f80:	66 0f d6 45 d0       	movq   %xmm0,-0x30(%rbp)
  poolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    9f85:	c7 45 c0 27 00 00 00 	movl   $0x27,-0x40(%rbp)
  poolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    9f8c:	c7 45 d0 02 00 00 00 	movl   $0x2,-0x30(%rbp)
  poolInfo.queueFamilyIndex = queueFamilyIndices.graphicsFamily.value();
    9f93:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    9f97:	48 89 c7             	mov    %rax,%rdi
    9f9a:	e8 3b 21 00 00       	call   c0da <_ZNRSt8optionalIjE5valueEv>
    9f9f:	8b 00                	mov    (%rax),%eax
    9fa1:	89 45 d4             	mov    %eax,-0x2c(%rbp)

  if (vkCreateCommandPool(device, &poolInfo, nullptr, &commandPool) !=
    9fa4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9fa8:	48 8d 90 f0 00 00 00 	lea    0xf0(%rax),%rdx
    9faf:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    9fb3:	48 8b 40 40          	mov    0x40(%rax),%rax
    9fb7:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    9fbb:	48 89 d1             	mov    %rdx,%rcx
    9fbe:	ba 00 00 00 00       	mov    $0x0,%edx
    9fc3:	48 89 c7             	mov    %rax,%rdi
    9fc6:	e8 85 a1 ff ff       	call   4150 <vkCreateCommandPool@plt>
    9fcb:	85 c0                	test   %eax,%eax
    9fcd:	0f 95 c0             	setne  %al
    9fd0:	84 c0                	test   %al,%al
    9fd2:	74 51                	je     a025 <_ZN4rtvc17RenderApplication17createCommandPoolEv+0xdb>
      VK_SUCCESS)
    throw std::runtime_error("Failed to create command pool.");
    9fd4:	bf 10 00 00 00       	mov    $0x10,%edi
    9fd9:	e8 a2 a1 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    9fde:	48 89 c3             	mov    %rax,%rbx
    9fe1:	48 8d 05 40 16 01 00 	lea    0x11640(%rip),%rax        # 1b628 <_ZN6__pstl9execution2v1L5unseqE+0x35d>
    9fe8:	48 89 c6             	mov    %rax,%rsi
    9feb:	48 89 df             	mov    %rbx,%rdi
    9fee:	e8 0d a1 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    9ff3:	48 8b 05 ae ff 01 00 	mov    0x1ffae(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    9ffa:	48 89 c2             	mov    %rax,%rdx
    9ffd:	48 8d 05 3c fd 01 00 	lea    0x1fd3c(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a004:	48 89 c6             	mov    %rax,%rsi
    a007:	48 89 df             	mov    %rbx,%rdi
    a00a:	e8 11 a8 ff ff       	call   4820 <__cxa_throw@plt>
    a00f:	49 89 c4             	mov    %rax,%r12
    a012:	48 89 df             	mov    %rbx,%rdi
    a015:	e8 66 a2 ff ff       	call   4280 <__cxa_free_exception@plt>
    a01a:	4c 89 e0             	mov    %r12,%rax
    a01d:	48 89 c7             	mov    %rax,%rdi
    a020:	e8 4b a8 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    a025:	90                   	nop
    a026:	48 83 c4 40          	add    $0x40,%rsp
    a02a:	5b                   	pop    %rbx
    a02b:	41 5c                	pop    %r12
    a02d:	5d                   	pop    %rbp
    a02e:	c3                   	ret
    a02f:	90                   	nop

000000000000a030 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>:

void rtvc::RenderApplication::createBuffer(VkDeviceSize size,
                                           VkBufferUsageFlags usage,
                                           VkMemoryPropertyFlags properties,
                                           VkBuffer &buffer,
                                           VkDeviceMemory &bufferMemory) {
    a030:	55                   	push   %rbp
    a031:	48 89 e5             	mov    %rsp,%rbp
    a034:	41 54                	push   %r12
    a036:	53                   	push   %rbx
    a037:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    a03e:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    a045:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    a04c:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
    a052:	89 8d 58 ff ff ff    	mov    %ecx,-0xa8(%rbp)
    a058:	4c 89 85 50 ff ff ff 	mov    %r8,-0xb0(%rbp)
    a05f:	4c 89 8d 48 ff ff ff 	mov    %r9,-0xb8(%rbp)
  using rtvc::resources::shaders::triangle;
  VkBufferCreateInfo bufferInfo{};
    a066:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a06a:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a06e:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    a072:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a076:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  bufferInfo.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;
    a07b:	c7 45 b0 0c 00 00 00 	movl   $0xc,-0x50(%rbp)
  bufferInfo.size = size;
    a082:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a089:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
  bufferInfo.usage = usage;
    a08d:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    a093:	89 45 d0             	mov    %eax,-0x30(%rbp)
  bufferInfo.sharingMode = VK_SHARING_MODE_EXCLUSIVE;
    a096:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)

  if (vkCreateBuffer(device, &bufferInfo, nullptr, &buffer) != VK_SUCCESS) {
    a09d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a0a4:	48 8b 40 40          	mov    0x40(%rax),%rax
    a0a8:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
    a0af:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    a0b3:	48 89 d1             	mov    %rdx,%rcx
    a0b6:	ba 00 00 00 00       	mov    $0x0,%edx
    a0bb:	48 89 c7             	mov    %rax,%rdi
    a0be:	e8 3d a3 ff ff       	call   4400 <vkCreateBuffer@plt>
    a0c3:	85 c0                	test   %eax,%eax
    a0c5:	0f 95 c0             	setne  %al
    a0c8:	84 c0                	test   %al,%al
    a0ca:	74 3b                	je     a107 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0xd7>
    throw std::runtime_error("Failed to create vertex buffer.");
    a0cc:	bf 10 00 00 00       	mov    $0x10,%edi
    a0d1:	e8 aa a0 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a0d6:	48 89 c3             	mov    %rax,%rbx
    a0d9:	48 8d 05 68 15 01 00 	lea    0x11568(%rip),%rax        # 1b648 <_ZN6__pstl9execution2v1L5unseqE+0x37d>
    a0e0:	48 89 c6             	mov    %rax,%rsi
    a0e3:	48 89 df             	mov    %rbx,%rdi
    a0e6:	e8 15 a0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    a0eb:	48 8b 05 b6 fe 01 00 	mov    0x1feb6(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a0f2:	48 89 c2             	mov    %rax,%rdx
    a0f5:	48 8d 05 44 fc 01 00 	lea    0x1fc44(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a0fc:	48 89 c6             	mov    %rax,%rsi
    a0ff:	48 89 df             	mov    %rbx,%rdi
    a102:	e8 19 a7 ff ff       	call   4820 <__cxa_throw@plt>
  }

  VkMemoryRequirements memRequirements{};
    a107:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a10b:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a10f:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  vkGetBufferMemoryRequirements(device, buffer, &memRequirements);
    a114:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a11b:	48 8b 08             	mov    (%rax),%rcx
    a11e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a125:	48 8b 40 40          	mov    0x40(%rax),%rax
    a129:	48 8d 55 90          	lea    -0x70(%rbp),%rdx
    a12d:	48 89 ce             	mov    %rcx,%rsi
    a130:	48 89 c7             	mov    %rax,%rdi
    a133:	e8 48 9f ff ff       	call   4080 <vkGetBufferMemoryRequirements@plt>

  VkMemoryAllocateInfo allocInfo{};
    a138:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a13c:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    a143:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;
    a147:	c7 85 70 ff ff ff 05 	movl   $0x5,-0x90(%rbp)
    a14e:	00 00 00 
  allocInfo.allocationSize = memRequirements.size;
    a151:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    a155:	48 89 45 80          	mov    %rax,-0x80(%rbp)
  allocInfo.memoryTypeIndex =
      findMemoryType(memRequirements.memoryTypeBits, properties);
    a159:	8b 4d a0             	mov    -0x60(%rbp),%ecx
    a15c:	8b 95 58 ff ff ff    	mov    -0xa8(%rbp),%edx
    a162:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a169:	89 ce                	mov    %ecx,%esi
    a16b:	48 89 c7             	mov    %rax,%rdi
    a16e:	e8 c9 0a 00 00       	call   ac3c <_ZN4rtvc17RenderApplication14findMemoryTypeEjj>
  allocInfo.memoryTypeIndex =
    a173:	89 45 88             	mov    %eax,-0x78(%rbp)

  if (vkAllocateMemory(device, &allocInfo, nullptr, &bufferMemory) !=
    a176:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a17d:	48 8b 40 40          	mov    0x40(%rax),%rax
    a181:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    a188:	48 8d b5 70 ff ff ff 	lea    -0x90(%rbp),%rsi
    a18f:	48 89 d1             	mov    %rdx,%rcx
    a192:	ba 00 00 00 00       	mov    $0x0,%edx
    a197:	48 89 c7             	mov    %rax,%rdi
    a19a:	e8 61 a6 ff ff       	call   4800 <vkAllocateMemory@plt>
    a19f:	85 c0                	test   %eax,%eax
    a1a1:	0f 95 c0             	setne  %al
    a1a4:	84 c0                	test   %al,%al
    a1a6:	74 3b                	je     a1e3 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x1b3>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
    a1a8:	bf 10 00 00 00       	mov    $0x10,%edi
    a1ad:	e8 ce 9f ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a1b2:	48 89 c3             	mov    %rax,%rbx
    a1b5:	48 8d 05 ac 14 01 00 	lea    0x114ac(%rip),%rax        # 1b668 <_ZN6__pstl9execution2v1L5unseqE+0x39d>
    a1bc:	48 89 c6             	mov    %rax,%rsi
    a1bf:	48 89 df             	mov    %rbx,%rdi
    a1c2:	e8 39 9f ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    a1c7:	48 8b 05 da fd 01 00 	mov    0x1fdda(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a1ce:	48 89 c2             	mov    %rax,%rdx
    a1d1:	48 8d 05 68 fb 01 00 	lea    0x1fb68(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a1d8:	48 89 c6             	mov    %rax,%rsi
    a1db:	48 89 df             	mov    %rbx,%rdi
    a1de:	e8 3d a6 ff ff       	call   4820 <__cxa_throw@plt>
  }

  vkBindBufferMemory(device, buffer, bufferMemory, 0);
    a1e3:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
    a1ea:	48 8b 10             	mov    (%rax),%rdx
    a1ed:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    a1f4:	48 8b 30             	mov    (%rax),%rsi
    a1f7:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a1fe:	48 8b 40 40          	mov    0x40(%rax),%rax
    a202:	b9 00 00 00 00       	mov    $0x0,%ecx
    a207:	48 89 c7             	mov    %rax,%rdi
    a20a:	e8 41 a3 ff ff       	call   4550 <vkBindBufferMemory@plt>
}
    a20f:	eb 2c                	jmp    a23d <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T+0x20d>
    throw std::runtime_error("Failed to create vertex buffer.");
    a211:	49 89 c4             	mov    %rax,%r12
    a214:	48 89 df             	mov    %rbx,%rdi
    a217:	e8 64 a0 ff ff       	call   4280 <__cxa_free_exception@plt>
    a21c:	4c 89 e0             	mov    %r12,%rax
    a21f:	48 89 c7             	mov    %rax,%rdi
    a222:	e8 49 a6 ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate vertex buffer memory.");
    a227:	49 89 c4             	mov    %rax,%r12
    a22a:	48 89 df             	mov    %rbx,%rdi
    a22d:	e8 4e a0 ff ff       	call   4280 <__cxa_free_exception@plt>
    a232:	4c 89 e0             	mov    %r12,%rax
    a235:	48 89 c7             	mov    %rax,%rdi
    a238:	e8 33 a6 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    a23d:	48 81 c4 b0 00 00 00 	add    $0xb0,%rsp
    a244:	5b                   	pop    %rbx
    a245:	41 5c                	pop    %r12
    a247:	5d                   	pop    %rbp
    a248:	c3                   	ret
    a249:	90                   	nop

000000000000a24a <_ZN4rtvc17RenderApplication10copyBufferEP10VkBuffer_TS2_m>:

void rtvc::RenderApplication::copyBuffer(VkBuffer srcBuffer, VkBuffer dstBuffer,
                                         VkDeviceSize size) {
    a24a:	55                   	push   %rbp
    a24b:	48 89 e5             	mov    %rsp,%rbp
    a24e:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    a255:	48 89 bd 38 ff ff ff 	mov    %rdi,-0xc8(%rbp)
    a25c:	48 89 b5 30 ff ff ff 	mov    %rsi,-0xd0(%rbp)
    a263:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    a26a:	48 89 8d 20 ff ff ff 	mov    %rcx,-0xe0(%rbp)
  VkCommandBufferAllocateInfo allocInfo{};
    a271:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a275:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    a279:	0f 29 45 f0          	movaps %xmm0,-0x10(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    a27d:	c7 45 e0 28 00 00 00 	movl   $0x28,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    a284:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  allocInfo.commandPool = commandPool;
    a28b:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a292:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    a299:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  allocInfo.commandBufferCount = 1;
    a29d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)

  VkCommandBuffer commandBuffer;
  vkAllocateCommandBuffers(device, &allocInfo, &commandBuffer);
    a2a4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a2ab:	48 8b 40 40          	mov    0x40(%rax),%rax
    a2af:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    a2b3:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    a2b7:	48 89 ce             	mov    %rcx,%rsi
    a2ba:	48 89 c7             	mov    %rax,%rdi
    a2bd:	e8 ee a0 ff ff       	call   43b0 <vkAllocateCommandBuffers@plt>

  VkCommandBufferBeginInfo beginInfo{};
    a2c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a2c6:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a2ca:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    a2ce:	c7 45 b0 2a 00 00 00 	movl   $0x2a,-0x50(%rbp)
  beginInfo.flags = VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT;
    a2d5:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  vkBeginCommandBuffer(commandBuffer, &beginInfo);
    a2dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a2e0:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx
    a2e4:	48 89 d6             	mov    %rdx,%rsi
    a2e7:	48 89 c7             	mov    %rax,%rdi
    a2ea:	e8 41 a1 ff ff       	call   4430 <vkBeginCommandBuffer@plt>

  VkBufferCopy copyRegion{};
    a2ef:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a2f3:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a2f7:	66 0f d6 45 a0       	movq   %xmm0,-0x60(%rbp)
  copyRegion.srcOffset = 0;
    a2fc:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    a303:	00 
  copyRegion.dstOffset = 0;
    a304:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    a30b:	00 
  copyRegion.size = size;
    a30c:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
    a313:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, 1, &copyRegion);
    a317:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a31b:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    a31f:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    a326:	48 8b b5 30 ff ff ff 	mov    -0xd0(%rbp),%rsi
    a32d:	49 89 c8             	mov    %rcx,%r8
    a330:	b9 01 00 00 00       	mov    $0x1,%ecx
    a335:	48 89 c7             	mov    %rax,%rdi
    a338:	e8 d3 a3 ff ff       	call   4710 <vkCmdCopyBuffer@plt>

  vkEndCommandBuffer(commandBuffer);
    a33d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a341:	48 89 c7             	mov    %rax,%rdi
    a344:	e8 97 a5 ff ff       	call   48e0 <vkEndCommandBuffer@plt>

  VkSubmitInfo submitInfo{};
    a349:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a34d:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    a354:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    a35b:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    a362:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    a369:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    a36e:	c7 85 40 ff ff ff 04 	movl   $0x4,-0xc0(%rbp)
    a375:	00 00 00 
  submitInfo.commandBufferCount = 1;
    a378:	c7 85 68 ff ff ff 01 	movl   $0x1,-0x98(%rbp)
    a37f:	00 00 00 
  submitInfo.pCommandBuffers = &commandBuffer;
    a382:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    a386:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)

  vkQueueSubmit(graphicsQueue, 1, &submitInfo, VK_NULL_HANDLE);
    a38d:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a394:	48 8b 40 48          	mov    0x48(%rax),%rax
    a398:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    a39f:	b9 00 00 00 00       	mov    $0x0,%ecx
    a3a4:	be 01 00 00 00       	mov    $0x1,%esi
    a3a9:	48 89 c7             	mov    %rax,%rdi
    a3ac:	e8 5f a2 ff ff       	call   4610 <vkQueueSubmit@plt>
  vkQueueWaitIdle(graphicsQueue);
    a3b1:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a3b8:	48 8b 40 48          	mov    0x48(%rax),%rax
    a3bc:	48 89 c7             	mov    %rax,%rdi
    a3bf:	e8 8c a4 ff ff       	call   4850 <vkQueueWaitIdle@plt>

  vkFreeCommandBuffers(device, commandPool, 1, &commandBuffer);
    a3c4:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a3cb:	48 8b b0 f0 00 00 00 	mov    0xf0(%rax),%rsi
    a3d2:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
    a3d9:	48 8b 40 40          	mov    0x40(%rax),%rax
    a3dd:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    a3e1:	48 89 d1             	mov    %rdx,%rcx
    a3e4:	ba 01 00 00 00       	mov    $0x1,%edx
    a3e9:	48 89 c7             	mov    %rax,%rdi
    a3ec:	e8 9f 9e ff ff       	call   4290 <vkFreeCommandBuffers@plt>
}
    a3f1:	90                   	nop
    a3f2:	c9                   	leave
    a3f3:	c3                   	ret

000000000000a3f4 <_ZN4rtvc17RenderApplication18createVertexBufferEv>:

void rtvc::RenderApplication::createVertexBuffer() {
    a3f4:	55                   	push   %rbp
    a3f5:	48 89 e5             	mov    %rsp,%rbp
    a3f8:	48 83 ec 30          	sub    $0x30,%rsp
    a3fc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  using rtvc::resources::shaders::triangle;

  VkDeviceSize bufferSize = sizeof(triangle[0]) * triangle.size();
    a400:	48 8d 05 f9 02 02 00 	lea    0x202f9(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    a407:	48 89 c7             	mov    %rax,%rdi
    a40a:	e8 a7 3c 00 00       	call   e0b6 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4sizeEv>
    a40f:	48 89 c2             	mov    %rax,%rdx
    a412:	48 89 d0             	mov    %rdx,%rax
    a415:	48 c1 e0 02          	shl    $0x2,%rax
    a419:	48 01 d0             	add    %rdx,%rax
    a41c:	48 c1 e0 02          	shl    $0x2,%rax
    a420:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
    a424:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a428:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a42c:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a430:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a434:	49 89 c9             	mov    %rcx,%r9
    a437:	49 89 d0             	mov    %rdx,%r8
    a43a:	b9 06 00 00 00       	mov    $0x6,%ecx
    a43f:	ba 01 00 00 00       	mov    $0x1,%edx
    a444:	48 89 c7             	mov    %rax,%rdi
    a447:	e8 e4 fb ff ff       	call   a030 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
               VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT |
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
    a44c:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    a450:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a454:	48 8b 40 40          	mov    0x40(%rax),%rax
    a458:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    a45c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a460:	49 89 c9             	mov    %rcx,%r9
    a463:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    a469:	48 89 d1             	mov    %rdx,%rcx
    a46c:	ba 00 00 00 00       	mov    $0x0,%edx
    a471:	48 89 c7             	mov    %rax,%rdi
    a474:	e8 17 9f ff ff       	call   4390 <vkMapMemory@plt>
  memcpy(data, triangle.data(), static_cast<size_t>(bufferSize));
    a479:	48 8d 05 80 02 02 00 	lea    0x20280(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    a480:	48 89 c7             	mov    %rax,%rdi
    a483:	e8 5c 3c 00 00       	call   e0e4 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4dataEv>
    a488:	48 89 c1             	mov    %rax,%rcx
    a48b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a48f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a493:	48 89 ce             	mov    %rcx,%rsi
    a496:	48 89 c7             	mov    %rax,%rdi
    a499:	e8 62 9e ff ff       	call   4300 <memcpy@plt>
  vkUnmapMemory(device, stagingBufferMemory);
    a49e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4a6:	48 8b 40 40          	mov    0x40(%rax),%rax
    a4aa:	48 89 d6             	mov    %rdx,%rsi
    a4ad:	48 89 c7             	mov    %rax,%rdi
    a4b0:	e8 3b 9e ff ff       	call   42f0 <vkUnmapMemory@plt>

  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, vertexBuffer, vertexBufferMemory);
    a4b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4b9:	48 8d 88 68 01 00 00 	lea    0x168(%rax),%rcx
    a4c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4c4:	48 8d 90 60 01 00 00 	lea    0x160(%rax),%rdx
  createBuffer(
    a4cb:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a4cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4d3:	49 89 c9             	mov    %rcx,%r9
    a4d6:	49 89 d0             	mov    %rdx,%r8
    a4d9:	b9 01 00 00 00       	mov    $0x1,%ecx
    a4de:	ba 82 00 00 00       	mov    $0x82,%edx
    a4e3:	48 89 c7             	mov    %rax,%rdi
    a4e6:	e8 45 fb ff ff       	call   a030 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  copyBuffer(stagingBuffer, vertexBuffer, bufferSize);
    a4eb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a4ef:	48 8b 90 60 01 00 00 	mov    0x160(%rax),%rdx
    a4f6:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    a4fa:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a4fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a502:	48 89 c7             	mov    %rax,%rdi
    a505:	e8 40 fd ff ff       	call   a24a <_ZN4rtvc17RenderApplication10copyBufferEP10VkBuffer_TS2_m>

  vkDestroyBuffer(device, stagingBuffer, nullptr);
    a50a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a50e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a512:	48 8b 40 40          	mov    0x40(%rax),%rax
    a516:	ba 00 00 00 00       	mov    $0x0,%edx
    a51b:	48 89 ce             	mov    %rcx,%rsi
    a51e:	48 89 c7             	mov    %rax,%rdi
    a521:	e8 6a 9c ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
    a526:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a52a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a52e:	48 8b 40 40          	mov    0x40(%rax),%rax
    a532:	ba 00 00 00 00       	mov    $0x0,%edx
    a537:	48 89 ce             	mov    %rcx,%rsi
    a53a:	48 89 c7             	mov    %rax,%rdi
    a53d:	e8 5e 9e ff ff       	call   43a0 <vkFreeMemory@plt>
}
    a542:	90                   	nop
    a543:	c9                   	leave
    a544:	c3                   	ret
    a545:	90                   	nop

000000000000a546 <_ZN4rtvc17RenderApplication17createIndexBufferEv>:

void rtvc::RenderApplication::createIndexBuffer() {
    a546:	55                   	push   %rbp
    a547:	48 89 e5             	mov    %rsp,%rbp
    a54a:	48 83 ec 30          	sub    $0x30,%rsp
    a54e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  using rtvc::resources::shaders::indices;
  using rtvc::resources::shaders::triangle;

  VkDeviceSize bufferSize = sizeof(indices[0]) * indices.size();
    a552:	48 8d 05 c7 01 02 00 	lea    0x201c7(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    a559:	48 89 c7             	mov    %rax,%rdi
    a55c:	e8 a7 3b 00 00       	call   e108 <_ZNKSt6vectorItSaItEE4sizeEv>
    a561:	48 01 c0             	add    %rax,%rax
    a564:	48 89 45 f8          	mov    %rax,-0x8(%rbp)

  VkBuffer stagingBuffer;
  VkDeviceMemory stagingBufferMemory;
  createBuffer(bufferSize, VK_BUFFER_USAGE_TRANSFER_SRC_BIT,
    a568:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    a56c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a570:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a574:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a578:	49 89 c9             	mov    %rcx,%r9
    a57b:	49 89 d0             	mov    %rdx,%r8
    a57e:	b9 06 00 00 00       	mov    $0x6,%ecx
    a583:	ba 01 00 00 00       	mov    $0x1,%edx
    a588:	48 89 c7             	mov    %rax,%rdi
    a58b:	e8 a0 fa ff ff       	call   a030 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>
               VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT |
                   VK_MEMORY_PROPERTY_HOST_COHERENT_BIT,
               stagingBuffer, stagingBufferMemory);

  void *data;
  vkMapMemory(device, stagingBufferMemory, 0, bufferSize, 0, &data);
    a590:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    a594:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a598:	48 8b 40 40          	mov    0x40(%rax),%rax
    a59c:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    a5a0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5a4:	49 89 c9             	mov    %rcx,%r9
    a5a7:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    a5ad:	48 89 d1             	mov    %rdx,%rcx
    a5b0:	ba 00 00 00 00       	mov    $0x0,%edx
    a5b5:	48 89 c7             	mov    %rax,%rdi
    a5b8:	e8 d3 9d ff ff       	call   4390 <vkMapMemory@plt>
  memcpy(data, triangle.data(), static_cast<size_t>(bufferSize));
    a5bd:	48 8d 05 3c 01 02 00 	lea    0x2013c(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    a5c4:	48 89 c7             	mov    %rax,%rdi
    a5c7:	e8 18 3b 00 00       	call   e0e4 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4dataEv>
    a5cc:	48 89 c1             	mov    %rax,%rcx
    a5cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a5d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a5d7:	48 89 ce             	mov    %rcx,%rsi
    a5da:	48 89 c7             	mov    %rax,%rdi
    a5dd:	e8 1e 9d ff ff       	call   4300 <memcpy@plt>
  vkUnmapMemory(device, stagingBufferMemory);
    a5e2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a5e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5ea:	48 8b 40 40          	mov    0x40(%rax),%rax
    a5ee:	48 89 d6             	mov    %rdx,%rsi
    a5f1:	48 89 c7             	mov    %rax,%rdi
    a5f4:	e8 f7 9c ff ff       	call   42f0 <vkUnmapMemory@plt>

  createBuffer(
      bufferSize,
      VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT,
      VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT, indexBuffer, indexBufferMemory);
    a5f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a5fd:	48 8d 88 78 01 00 00 	lea    0x178(%rax),%rcx
    a604:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a608:	48 8d 90 70 01 00 00 	lea    0x170(%rax),%rdx
  createBuffer(
    a60f:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
    a613:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a617:	49 89 c9             	mov    %rcx,%r9
    a61a:	49 89 d0             	mov    %rdx,%r8
    a61d:	b9 01 00 00 00       	mov    $0x1,%ecx
    a622:	ba 42 00 00 00       	mov    $0x42,%edx
    a627:	48 89 c7             	mov    %rax,%rdi
    a62a:	e8 01 fa ff ff       	call   a030 <_ZN4rtvc17RenderApplication12createBufferEmjjRP10VkBuffer_TRP16VkDeviceMemory_T>

  copyBuffer(stagingBuffer, indexBuffer, bufferSize);
    a62f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a633:	48 8b 90 70 01 00 00 	mov    0x170(%rax),%rdx
    a63a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    a63e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    a642:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a646:	48 89 c7             	mov    %rax,%rdi
    a649:	e8 fc fb ff ff       	call   a24a <_ZN4rtvc17RenderApplication10copyBufferEP10VkBuffer_TS2_m>

  vkDestroyBuffer(device, stagingBuffer, nullptr);
    a64e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a652:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a656:	48 8b 40 40          	mov    0x40(%rax),%rax
    a65a:	ba 00 00 00 00       	mov    $0x0,%edx
    a65f:	48 89 ce             	mov    %rcx,%rsi
    a662:	48 89 c7             	mov    %rax,%rdi
    a665:	e8 26 9b ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, stagingBufferMemory, nullptr);
    a66a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    a66e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    a672:	48 8b 40 40          	mov    0x40(%rax),%rax
    a676:	ba 00 00 00 00       	mov    $0x0,%edx
    a67b:	48 89 ce             	mov    %rcx,%rsi
    a67e:	48 89 c7             	mov    %rax,%rdi
    a681:	e8 1a 9d ff ff       	call   43a0 <vkFreeMemory@plt>
}
    a686:	90                   	nop
    a687:	c9                   	leave
    a688:	c3                   	ret
    a689:	90                   	nop

000000000000a68a <_ZN4rtvc17RenderApplication20createCommandBuffersEv>:

void rtvc::RenderApplication::createCommandBuffers() {
    a68a:	55                   	push   %rbp
    a68b:	48 89 e5             	mov    %rsp,%rbp
    a68e:	41 54                	push   %r12
    a690:	53                   	push   %rbx
    a691:	48 83 ec 30          	sub    $0x30,%rsp
    a695:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  commandBuffers.resize(max_frames_in_flight);
    a699:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a69d:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a6a3:	be 02 00 00 00       	mov    $0x2,%esi
    a6a8:	48 89 c7             	mov    %rax,%rdi
    a6ab:	e8 7a 3a 00 00       	call   e12a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm>

  VkCommandBufferAllocateInfo allocInfo{};
    a6b0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a6b4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a6b8:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
  allocInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO;
    a6bc:	c7 45 d0 28 00 00 00 	movl   $0x28,-0x30(%rbp)
  allocInfo.commandPool = commandPool;
    a6c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a6c7:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax
    a6ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  allocInfo.level = VK_COMMAND_BUFFER_LEVEL_PRIMARY;
    a6d2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  allocInfo.commandBufferCount = static_cast<uint32_t>(commandBuffers.size());
    a6d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a6dd:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a6e3:	48 89 c7             	mov    %rax,%rdi
    a6e6:	e8 c5 3a 00 00       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    a6eb:	89 45 ec             	mov    %eax,-0x14(%rbp)

  if (vkAllocateCommandBuffers(device, &allocInfo, commandBuffers.data()) !=
    a6ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a6f2:	48 05 f8 00 00 00    	add    $0xf8,%rax
    a6f8:	48 89 c7             	mov    %rax,%rdi
    a6fb:	e8 d4 3a 00 00       	call   e1d4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    a700:	48 89 c2             	mov    %rax,%rdx
    a703:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    a707:	48 8b 40 40          	mov    0x40(%rax),%rax
    a70b:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
    a70f:	48 89 ce             	mov    %rcx,%rsi
    a712:	48 89 c7             	mov    %rax,%rdi
    a715:	e8 96 9c ff ff       	call   43b0 <vkAllocateCommandBuffers@plt>
    a71a:	85 c0                	test   %eax,%eax
    a71c:	0f 95 c0             	setne  %al
    a71f:	84 c0                	test   %al,%al
    a721:	74 51                	je     a774 <_ZN4rtvc17RenderApplication20createCommandBuffersEv+0xea>
      VK_SUCCESS)
    throw std::runtime_error("Failed to allocate command buffer.");
    a723:	bf 10 00 00 00       	mov    $0x10,%edi
    a728:	e8 53 9a ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a72d:	48 89 c3             	mov    %rax,%rbx
    a730:	48 8d 05 61 0f 01 00 	lea    0x10f61(%rip),%rax        # 1b698 <_ZN6__pstl9execution2v1L5unseqE+0x3cd>
    a737:	48 89 c6             	mov    %rax,%rsi
    a73a:	48 89 df             	mov    %rbx,%rdi
    a73d:	e8 be 99 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    a742:	48 8b 05 5f f8 01 00 	mov    0x1f85f(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a749:	48 89 c2             	mov    %rax,%rdx
    a74c:	48 8d 05 ed f5 01 00 	lea    0x1f5ed(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a753:	48 89 c6             	mov    %rax,%rsi
    a756:	48 89 df             	mov    %rbx,%rdi
    a759:	e8 c2 a0 ff ff       	call   4820 <__cxa_throw@plt>
    a75e:	49 89 c4             	mov    %rax,%r12
    a761:	48 89 df             	mov    %rbx,%rdi
    a764:	e8 17 9b ff ff       	call   4280 <__cxa_free_exception@plt>
    a769:	4c 89 e0             	mov    %r12,%rax
    a76c:	48 89 c7             	mov    %rax,%rdi
    a76f:	e8 fc a0 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    a774:	90                   	nop
    a775:	48 83 c4 30          	add    $0x30,%rsp
    a779:	5b                   	pop    %rbx
    a77a:	41 5c                	pop    %r12
    a77c:	5d                   	pop    %rbp
    a77d:	c3                   	ret

000000000000a77e <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>:

void rtvc::RenderApplication::recordCommandBuffer(VkCommandBuffer commandBuffer,
                                                  uint32_t imageIndex) {
    a77e:	55                   	push   %rbp
    a77f:	48 89 e5             	mov    %rsp,%rbp
    a782:	41 54                	push   %r12
    a784:	53                   	push   %rbx
    a785:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    a78c:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
    a793:	48 89 b5 60 ff ff ff 	mov    %rsi,-0xa0(%rbp)
    a79a:	89 95 5c ff ff ff    	mov    %edx,-0xa4(%rbp)
  using rtvc::resources::shaders::indices;

  VkCommandBufferBeginInfo beginInfo{};
    a7a0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a7a4:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    a7a8:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
  beginInfo.sType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO;
    a7ac:	c7 45 d0 2a 00 00 00 	movl   $0x2a,-0x30(%rbp)
  beginInfo.flags = 0;
    a7b3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)
  beginInfo.pInheritanceInfo = nullptr;
    a7ba:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    a7c1:	00 

  if (vkBeginCommandBuffer(commandBuffer, &beginInfo) != VK_SUCCESS)
    a7c2:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    a7c6:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a7cd:	48 89 d6             	mov    %rdx,%rsi
    a7d0:	48 89 c7             	mov    %rax,%rdi
    a7d3:	e8 58 9c ff ff       	call   4430 <vkBeginCommandBuffer@plt>
    a7d8:	85 c0                	test   %eax,%eax
    a7da:	0f 95 c0             	setne  %al
    a7dd:	84 c0                	test   %al,%al
    a7df:	74 3b                	je     a81c <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x9e>
    throw std::runtime_error("Failed to begin recording command buffer.");
    a7e1:	bf 10 00 00 00       	mov    $0x10,%edi
    a7e6:	e8 95 99 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a7eb:	48 89 c3             	mov    %rax,%rbx
    a7ee:	48 8d 05 cb 0e 01 00 	lea    0x10ecb(%rip),%rax        # 1b6c0 <_ZN6__pstl9execution2v1L5unseqE+0x3f5>
    a7f5:	48 89 c6             	mov    %rax,%rsi
    a7f8:	48 89 df             	mov    %rbx,%rdi
    a7fb:	e8 00 99 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    a800:	48 8b 05 a1 f7 01 00 	mov    0x1f7a1(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a807:	48 89 c2             	mov    %rax,%rdx
    a80a:	48 8d 05 2f f5 01 00 	lea    0x1f52f(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    a811:	48 89 c6             	mov    %rax,%rsi
    a814:	48 89 df             	mov    %rbx,%rdi
    a817:	e8 04 a0 ff ff       	call   4820 <__cxa_throw@plt>

  VkRenderPassBeginInfo renderPassInfo{};
    a81c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a820:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    a824:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    a828:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    a82c:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO;
    a830:	c7 45 90 2b 00 00 00 	movl   $0x2b,-0x70(%rbp)
  renderPassInfo.renderPass = renderPass;
    a837:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a83e:	48 8b 80 c0 00 00 00 	mov    0xc0(%rax),%rax
    a845:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
  renderPassInfo.framebuffer = swapChainFrameBuffers[imageIndex];
    a849:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a850:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    a857:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    a85d:	48 89 c6             	mov    %rax,%rsi
    a860:	48 89 d7             	mov    %rdx,%rdi
    a863:	e8 2e 38 00 00       	call   e096 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    a868:	48 8b 00             	mov    (%rax),%rax
    a86b:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
  renderPassInfo.renderArea.offset = {0, 0};
    a86f:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
    a876:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
  renderPassInfo.renderArea.extent = swapChainExtent;
    a87d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a884:	48 8b 80 9c 00 00 00 	mov    0x9c(%rax),%rax
    a88b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)

  VkClearValue clearColor{{{0.0f, 0.0f, 0.0f, 1.0f}}};
    a88f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a893:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    a898:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a89c:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    a8a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    a8a5:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    a8aa:	f3 0f 10 05 be 0f 01 	movss  0x10fbe(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    a8b1:	00 
    a8b2:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
  renderPassInfo.clearValueCount = 1;
    a8b7:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)
  renderPassInfo.pClearValues = &clearColor;
    a8be:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    a8c2:	48 89 45 c8          	mov    %rax,-0x38(%rbp)

  vkCmdBeginRenderPass(commandBuffer, &renderPassInfo,
    a8c6:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    a8ca:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a8d1:	ba 00 00 00 00       	mov    $0x0,%edx
    a8d6:	48 89 ce             	mov    %rcx,%rsi
    a8d9:	48 89 c7             	mov    %rax,%rdi
    a8dc:	e8 cf 9d ff ff       	call   46b0 <vkCmdBeginRenderPass@plt>
                       VK_SUBPASS_CONTENTS_INLINE);

  vkCmdBindPipeline(commandBuffer, VK_PIPELINE_BIND_POINT_GRAPHICS,
    a8e1:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a8e8:	48 8b 90 d0 00 00 00 	mov    0xd0(%rax),%rdx
    a8ef:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a8f6:	be 00 00 00 00       	mov    $0x0,%esi
    a8fb:	48 89 c7             	mov    %rax,%rdi
    a8fe:	e8 6d 9a ff ff       	call   4370 <vkCmdBindPipeline@plt>
  // VkRect2D scissor{};
  // scissor.offset = {0, 0};
  // scissor.extent = swapChainExtent;
  // vkCmdSetScissor(commandBuffer, 0, 1, &scissor);

  VkBuffer vertexBuffers[] = {vertexBuffer};
    a903:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a90a:	48 8b 80 60 01 00 00 	mov    0x160(%rax),%rax
    a911:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
  VkDeviceSize offsets[] = {0};
    a918:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    a91f:	00 00 00 00 
  vkCmdBindVertexBuffers(commandBuffer, 0, 1, vertexBuffers, offsets);
    a923:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    a92a:	48 8d 95 78 ff ff ff 	lea    -0x88(%rbp),%rdx
    a931:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a938:	49 89 c8             	mov    %rcx,%r8
    a93b:	48 89 d1             	mov    %rdx,%rcx
    a93e:	ba 01 00 00 00       	mov    $0x1,%edx
    a943:	be 00 00 00 00       	mov    $0x0,%esi
    a948:	48 89 c7             	mov    %rax,%rdi
    a94b:	e8 a0 9d ff ff       	call   46f0 <vkCmdBindVertexBuffers@plt>

  vkCmdBindIndexBuffer(commandBuffer, indexBuffer, 0, VK_INDEX_TYPE_UINT16);
    a950:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    a957:	48 8b b0 70 01 00 00 	mov    0x170(%rax),%rsi
    a95e:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a965:	b9 00 00 00 00       	mov    $0x0,%ecx
    a96a:	ba 00 00 00 00       	mov    $0x0,%edx
    a96f:	48 89 c7             	mov    %rax,%rdi
    a972:	e8 69 9d ff ff       	call   46e0 <vkCmdBindIndexBuffer@plt>

  // vkCmdDraw(commandBuffer, 3, 1, 0, 0);

  vkCmdDrawIndexed(commandBuffer, static_cast<uint32_t>(indices.size()), 1, 0,
    a977:	48 8d 05 a2 fd 01 00 	lea    0x1fda2(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    a97e:	48 89 c7             	mov    %rax,%rdi
    a981:	e8 82 37 00 00       	call   e108 <_ZNKSt6vectorItSaItEE4sizeEv>
    a986:	89 c6                	mov    %eax,%esi
    a988:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a98f:	41 b9 00 00 00 00    	mov    $0x0,%r9d
    a995:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    a99b:	b9 00 00 00 00       	mov    $0x0,%ecx
    a9a0:	ba 01 00 00 00       	mov    $0x1,%edx
    a9a5:	48 89 c7             	mov    %rax,%rdi
    a9a8:	e8 73 97 ff ff       	call   4120 <vkCmdDrawIndexed@plt>
                   0, 0);

  vkCmdEndRenderPass(commandBuffer);
    a9ad:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a9b4:	48 89 c7             	mov    %rax,%rdi
    a9b7:	e8 84 96 ff ff       	call   4040 <vkCmdEndRenderPass@plt>

  if (vkEndCommandBuffer(commandBuffer) != VK_SUCCESS)
    a9bc:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
    a9c3:	48 89 c7             	mov    %rax,%rdi
    a9c6:	e8 15 9f ff ff       	call   48e0 <vkEndCommandBuffer@plt>
    a9cb:	85 c0                	test   %eax,%eax
    a9cd:	0f 95 c0             	setne  %al
    a9d0:	84 c0                	test   %al,%al
    a9d2:	74 67                	je     aa3b <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj+0x2bd>
    throw std::runtime_error("Failed to record command buffer");
    a9d4:	bf 10 00 00 00       	mov    $0x10,%edi
    a9d9:	e8 a2 97 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    a9de:	48 89 c3             	mov    %rax,%rbx
    a9e1:	48 8d 05 08 0d 01 00 	lea    0x10d08(%rip),%rax        # 1b6f0 <_ZN6__pstl9execution2v1L5unseqE+0x425>
    a9e8:	48 89 c6             	mov    %rax,%rsi
    a9eb:	48 89 df             	mov    %rbx,%rdi
    a9ee:	e8 0d 97 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    a9f3:	48 8b 05 ae f5 01 00 	mov    0x1f5ae(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    a9fa:	48 89 c2             	mov    %rax,%rdx
    a9fd:	48 8d 05 3c f3 01 00 	lea    0x1f33c(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    aa04:	48 89 c6             	mov    %rax,%rsi
    aa07:	48 89 df             	mov    %rbx,%rdi
    aa0a:	e8 11 9e ff ff       	call   4820 <__cxa_throw@plt>
    throw std::runtime_error("Failed to begin recording command buffer.");
    aa0f:	49 89 c4             	mov    %rax,%r12
    aa12:	48 89 df             	mov    %rbx,%rdi
    aa15:	e8 66 98 ff ff       	call   4280 <__cxa_free_exception@plt>
    aa1a:	4c 89 e0             	mov    %r12,%rax
    aa1d:	48 89 c7             	mov    %rax,%rdi
    aa20:	e8 4b 9e ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to record command buffer");
    aa25:	49 89 c4             	mov    %rax,%r12
    aa28:	48 89 df             	mov    %rbx,%rdi
    aa2b:	e8 50 98 ff ff       	call   4280 <__cxa_free_exception@plt>
    aa30:	4c 89 e0             	mov    %r12,%rax
    aa33:	48 89 c7             	mov    %rax,%rdi
    aa36:	e8 35 9e ff ff       	call   4870 <_Unwind_Resume@plt>
}
    aa3b:	90                   	nop
    aa3c:	48 81 c4 a0 00 00 00 	add    $0xa0,%rsp
    aa43:	5b                   	pop    %rbx
    aa44:	41 5c                	pop    %r12
    aa46:	5d                   	pop    %rbp
    aa47:	c3                   	ret

000000000000aa48 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>:

void rtvc::RenderApplication::createSyncObjects() {
    aa48:	55                   	push   %rbp
    aa49:	48 89 e5             	mov    %rsp,%rbp
    aa4c:	41 54                	push   %r12
    aa4e:	53                   	push   %rbx
    aa4f:	48 83 ec 50          	sub    $0x50,%rsp
    aa53:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  imageAvailableSemaphores.resize(max_frames_in_flight);
    aa57:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa5b:	48 05 10 01 00 00    	add    $0x110,%rax
    aa61:	be 02 00 00 00       	mov    $0x2,%esi
    aa66:	48 89 c7             	mov    %rax,%rdi
    aa69:	e8 8a 37 00 00       	call   e1f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  renderFinishedSemaphores.resize(max_frames_in_flight);
    aa6e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa72:	48 05 28 01 00 00    	add    $0x128,%rax
    aa78:	be 02 00 00 00       	mov    $0x2,%esi
    aa7d:	48 89 c7             	mov    %rax,%rdi
    aa80:	e8 73 37 00 00       	call   e1f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>
  inFlightFences.resize(max_frames_in_flight);
    aa85:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aa89:	48 05 40 01 00 00    	add    $0x140,%rax
    aa8f:	be 02 00 00 00       	mov    $0x2,%esi
    aa94:	48 89 c7             	mov    %rax,%rdi
    aa97:	e8 e2 37 00 00       	call   e27e <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>

  VkSemaphoreCreateInfo semaphoreInfo{};
    aa9c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aaa0:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    aaa4:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  semaphoreInfo.sType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO;
    aaa9:	c7 45 d0 09 00 00 00 	movl   $0x9,-0x30(%rbp)

  VkFenceCreateInfo fenceInfo{};
    aab0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    aab4:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    aab8:	66 0f d6 45 c0       	movq   %xmm0,-0x40(%rbp)
  fenceInfo.sType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO;
    aabd:	c7 45 b0 08 00 00 00 	movl   $0x8,-0x50(%rbp)
  fenceInfo.flags = VK_FENCE_CREATE_SIGNALED_BIT;
    aac4:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%rbp)

  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    aacb:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    aad2:	00 
    aad3:	e9 07 01 00 00       	jmp    abdf <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x197>
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
                          &imageAvailableSemaphores[i]) != VK_SUCCESS ||
    aad8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aadc:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
    aae3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aae7:	48 89 c6             	mov    %rax,%rsi
    aaea:	48 89 d7             	mov    %rdx,%rdi
    aaed:	e8 12 38 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    aaf2:	48 89 c2             	mov    %rax,%rdx
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    aaf5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    aaf9:	48 8b 40 40          	mov    0x40(%rax),%rax
    aafd:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    ab01:	48 89 d1             	mov    %rdx,%rcx
    ab04:	ba 00 00 00 00       	mov    $0x0,%edx
    ab09:	48 89 c7             	mov    %rax,%rdi
    ab0c:	e8 8f 9b ff ff       	call   46a0 <vkCreateSemaphore@plt>
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    ab11:	85 c0                	test   %eax,%eax
    ab13:	75 7a                	jne    ab8f <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x147>
    ab15:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab19:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    ab20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab24:	48 89 c6             	mov    %rax,%rsi
    ab27:	48 89 d7             	mov    %rdx,%rdi
    ab2a:	e8 d5 37 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    ab2f:	48 89 c2             	mov    %rax,%rdx
        vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    ab32:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab36:	48 8b 40 40          	mov    0x40(%rax),%rax
    ab3a:	48 8d 75 d0          	lea    -0x30(%rbp),%rsi
    ab3e:	48 89 d1             	mov    %rdx,%rcx
    ab41:	ba 00 00 00 00       	mov    $0x0,%edx
    ab46:	48 89 c7             	mov    %rax,%rdi
    ab49:	e8 52 9b ff ff       	call   46a0 <vkCreateSemaphore@plt>
                          &imageAvailableSemaphores[i]) != VK_SUCCESS ||
    ab4e:	85 c0                	test   %eax,%eax
    ab50:	75 3d                	jne    ab8f <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x147>
        vkCreateFence(device, &fenceInfo, nullptr, &inFlightFences[i]) !=
    ab52:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab56:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    ab5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab61:	48 89 c6             	mov    %rax,%rsi
    ab64:	48 89 d7             	mov    %rdx,%rdi
    ab67:	e8 b8 37 00 00       	call   e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    ab6c:	48 89 c2             	mov    %rax,%rdx
    ab6f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ab73:	48 8b 40 40          	mov    0x40(%rax),%rax
    ab77:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
    ab7b:	48 89 d1             	mov    %rdx,%rcx
    ab7e:	ba 00 00 00 00       	mov    $0x0,%edx
    ab83:	48 89 c7             	mov    %rax,%rdi
    ab86:	e8 15 9a ff ff       	call   45a0 <vkCreateFence@plt>
                          &renderFinishedSemaphores[i]) != VK_SUCCESS ||
    ab8b:	85 c0                	test   %eax,%eax
    ab8d:	74 07                	je     ab96 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x14e>
    ab8f:	b8 01 00 00 00       	mov    $0x1,%eax
    ab94:	eb 05                	jmp    ab9b <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x153>
    ab96:	b8 00 00 00 00       	mov    $0x0,%eax
    if (vkCreateSemaphore(device, &semaphoreInfo, nullptr,
    ab9b:	84 c0                	test   %al,%al
    ab9d:	74 3b                	je     abda <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x192>
            VK_SUCCESS)
      throw std::runtime_error("Failed to create semaphores.");
    ab9f:	bf 10 00 00 00       	mov    $0x10,%edi
    aba4:	e8 d7 95 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    aba9:	48 89 c3             	mov    %rax,%rbx
    abac:	48 8d 05 5d 0b 01 00 	lea    0x10b5d(%rip),%rax        # 1b710 <_ZN6__pstl9execution2v1L5unseqE+0x445>
    abb3:	48 89 c6             	mov    %rax,%rsi
    abb6:	48 89 df             	mov    %rbx,%rdi
    abb9:	e8 42 95 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    abbe:	48 8b 05 e3 f3 01 00 	mov    0x1f3e3(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    abc5:	48 89 c2             	mov    %rax,%rdx
    abc8:	48 8d 05 71 f1 01 00 	lea    0x1f171(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    abcf:	48 89 c6             	mov    %rax,%rsi
    abd2:	48 89 df             	mov    %rbx,%rdi
    abd5:	e8 46 9c ff ff       	call   4820 <__cxa_throw@plt>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    abda:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    abdf:	48 83 7d e8 01       	cmpq   $0x1,-0x18(%rbp)
    abe4:	0f 86 ee fe ff ff    	jbe    aad8 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x90>
  }
}
    abea:	eb 16                	jmp    ac02 <_ZN4rtvc17RenderApplication17createSyncObjectsEv+0x1ba>
      throw std::runtime_error("Failed to create semaphores.");
    abec:	49 89 c4             	mov    %rax,%r12
    abef:	48 89 df             	mov    %rbx,%rdi
    abf2:	e8 89 96 ff ff       	call   4280 <__cxa_free_exception@plt>
    abf7:	4c 89 e0             	mov    %r12,%rax
    abfa:	48 89 c7             	mov    %rax,%rdi
    abfd:	e8 6e 9c ff ff       	call   4870 <_Unwind_Resume@plt>
}
    ac02:	48 83 c4 50          	add    $0x50,%rsp
    ac06:	5b                   	pop    %rbx
    ac07:	41 5c                	pop    %r12
    ac09:	5d                   	pop    %rbp
    ac0a:	c3                   	ret
    ac0b:	90                   	nop

000000000000ac0c <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>:

void rtvc::RenderApplication::framebufferResizeCallback(
    GLFWwindow *window, [[maybe_unused]] int width,
    [[maybe_unused]] int height) {
    ac0c:	55                   	push   %rbp
    ac0d:	48 89 e5             	mov    %rsp,%rbp
    ac10:	48 83 ec 20          	sub    $0x20,%rsp
    ac14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac18:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    ac1b:	89 55 e0             	mov    %edx,-0x20(%rbp)
  auto app = reinterpret_cast<rtvc::RenderApplication *>(
      glfwGetWindowUserPointer(window));
    ac1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac22:	48 89 c7             	mov    %rax,%rdi
    ac25:	e8 36 9a ff ff       	call   4660 <glfwGetWindowUserPointer@plt>
    ac2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  app->frameBufferResized = true;
    ac2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac32:	c6 80 58 01 00 00 01 	movb   $0x1,0x158(%rax)
}
    ac39:	90                   	nop
    ac3a:	c9                   	leave
    ac3b:	c3                   	ret

000000000000ac3c <_ZN4rtvc17RenderApplication14findMemoryTypeEjj>:

uint32_t
rtvc::RenderApplication::findMemoryType(uint32_t typeFilter,
                                        VkMemoryPropertyFlags properties) {
    ac3c:	55                   	push   %rbp
    ac3d:	48 89 e5             	mov    %rsp,%rbp
    ac40:	41 54                	push   %r12
    ac42:	53                   	push   %rbx
    ac43:	48 81 ec 20 02 00 00 	sub    $0x220,%rsp
    ac4a:	48 89 bd d8 fd ff ff 	mov    %rdi,-0x228(%rbp)
    ac51:	89 b5 d4 fd ff ff    	mov    %esi,-0x22c(%rbp)
    ac57:	89 95 d0 fd ff ff    	mov    %edx,-0x230(%rbp)

  VkPhysicalDeviceMemoryProperties memProperties{};
    ac5d:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
    ac64:	b8 00 00 00 00       	mov    $0x0,%eax
    ac69:	b9 41 00 00 00       	mov    $0x41,%ecx
    ac6e:	48 89 d7             	mov    %rdx,%rdi
    ac71:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  vkGetPhysicalDeviceMemoryProperties(physicalDevice, &memProperties);
    ac74:	48 8b 85 d8 fd ff ff 	mov    -0x228(%rbp),%rax
    ac7b:	48 8b 40 38          	mov    0x38(%rax),%rax
    ac7f:	48 8d 95 e0 fd ff ff 	lea    -0x220(%rbp),%rdx
    ac86:	48 89 d6             	mov    %rdx,%rsi
    ac89:	48 89 c7             	mov    %rax,%rdi
    ac8c:	e8 0f 9b ff ff       	call   47a0 <vkGetPhysicalDeviceMemoryProperties@plt>

  for (uint32_t i = 0; i < memProperties.memoryTypeCount; ++i) {
    ac91:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    ac98:	eb 39                	jmp    acd3 <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x97>
    if ((typeFilter & (1 << i)) && (memProperties.memoryTypes[i].propertyFlags &
    ac9a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    ac9d:	ba 01 00 00 00       	mov    $0x1,%edx
    aca2:	89 c1                	mov    %eax,%ecx
    aca4:	d3 e2                	shl    %cl,%edx
    aca6:	89 d0                	mov    %edx,%eax
    aca8:	23 85 d4 fd ff ff    	and    -0x22c(%rbp),%eax
    acae:	85 c0                	test   %eax,%eax
    acb0:	74 1d                	je     accf <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x93>
    acb2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    acb5:	8b 84 c5 e4 fd ff ff 	mov    -0x21c(%rbp,%rax,8),%eax
    acbc:	23 85 d0 fd ff ff    	and    -0x230(%rbp),%eax
    acc2:	39 85 d0 fd ff ff    	cmp    %eax,-0x230(%rbp)
    acc8:	75 05                	jne    accf <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x93>
                                    properties) == properties) {
      return i;
    acca:	8b 45 ec             	mov    -0x14(%rbp),%eax
    accd:	eb 60                	jmp    ad2f <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0xf3>
  for (uint32_t i = 0; i < memProperties.memoryTypeCount; ++i) {
    accf:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    acd3:	8b 85 e0 fd ff ff    	mov    -0x220(%rbp),%eax
    acd9:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    acdc:	72 bc                	jb     ac9a <_ZN4rtvc17RenderApplication14findMemoryTypeEjj+0x5e>
    }
  }
  throw std::runtime_error("Failed to find suitable memory type.");
    acde:	bf 10 00 00 00       	mov    $0x10,%edi
    ace3:	e8 98 94 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    ace8:	48 89 c3             	mov    %rax,%rbx
    aceb:	48 8d 05 3e 0a 01 00 	lea    0x10a3e(%rip),%rax        # 1b730 <_ZN6__pstl9execution2v1L5unseqE+0x465>
    acf2:	48 89 c6             	mov    %rax,%rsi
    acf5:	48 89 df             	mov    %rbx,%rdi
    acf8:	e8 03 94 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    acfd:	48 8b 05 a4 f2 01 00 	mov    0x1f2a4(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    ad04:	48 89 c2             	mov    %rax,%rdx
    ad07:	48 8d 05 32 f0 01 00 	lea    0x1f032(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ad0e:	48 89 c6             	mov    %rax,%rsi
    ad11:	48 89 df             	mov    %rbx,%rdi
    ad14:	e8 07 9b ff ff       	call   4820 <__cxa_throw@plt>
    ad19:	49 89 c4             	mov    %rax,%r12
    ad1c:	48 89 df             	mov    %rbx,%rdi
    ad1f:	e8 5c 95 ff ff       	call   4280 <__cxa_free_exception@plt>
    ad24:	4c 89 e0             	mov    %r12,%rax
    ad27:	48 89 c7             	mov    %rax,%rdi
    ad2a:	e8 41 9b ff ff       	call   4870 <_Unwind_Resume@plt>
}
    ad2f:	48 81 c4 20 02 00 00 	add    $0x220,%rsp
    ad36:	5b                   	pop    %rbx
    ad37:	41 5c                	pop    %r12
    ad39:	5d                   	pop    %rbp
    ad3a:	c3                   	ret
    ad3b:	90                   	nop

000000000000ad3c <_ZN4rtvc17RenderApplication10initWindowEv>:

void rtvc::RenderApplication::initWindow() {
    ad3c:	55                   	push   %rbp
    ad3d:	48 89 e5             	mov    %rsp,%rbp
    ad40:	48 83 ec 10          	sub    $0x10,%rsp
    ad44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    ad48:	e8 d3 97 ff ff       	call   4520 <glfwInit@plt>

  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    ad4d:	be 00 00 00 00       	mov    $0x0,%esi
    ad52:	bf 01 20 02 00       	mov    $0x22001,%edi
    ad57:	e8 f4 95 ff ff       	call   4350 <glfwWindowHint@plt>
  // glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);

  window = glfwCreateWindow(width, height, "Vulkan Triangle Application",
    ad5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad60:	8b 40 0c             	mov    0xc(%rax),%eax
    ad63:	89 c6                	mov    %eax,%esi
    ad65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad69:	8b 40 08             	mov    0x8(%rax),%eax
    ad6c:	89 c7                	mov    %eax,%edi
    ad6e:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ad74:	b9 00 00 00 00       	mov    $0x0,%ecx
    ad79:	48 8d 05 d5 09 01 00 	lea    0x109d5(%rip),%rax        # 1b755 <_ZN6__pstl9execution2v1L5unseqE+0x48a>
    ad80:	48 89 c2             	mov    %rax,%rdx
    ad83:	e8 f8 99 ff ff       	call   4780 <glfwCreateWindow@plt>
    ad88:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ad8c:	48 89 02             	mov    %rax,(%rdx)
                            nullptr, nullptr);

  glfwSetWindowUserPointer(window, this);
    ad8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad93:	48 8b 00             	mov    (%rax),%rax
    ad96:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ad9a:	48 89 d6             	mov    %rdx,%rsi
    ad9d:	48 89 c7             	mov    %rax,%rdi
    ada0:	e8 fb 93 ff ff       	call   41a0 <glfwSetWindowUserPointer@plt>
  glfwSetFramebufferSizeCallback(window, framebufferResizeCallback);
    ada5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada9:	48 8b 00             	mov    (%rax),%rax
    adac:	48 8d 15 59 fe ff ff 	lea    -0x1a7(%rip),%rdx        # ac0c <_ZN4rtvc17RenderApplication25framebufferResizeCallbackEP10GLFWwindowii>
    adb3:	48 89 d6             	mov    %rdx,%rsi
    adb6:	48 89 c7             	mov    %rax,%rdi
    adb9:	e8 82 99 ff ff       	call   4740 <glfwSetFramebufferSizeCallback@plt>
}
    adbe:	90                   	nop
    adbf:	c9                   	leave
    adc0:	c3                   	ret
    adc1:	90                   	nop

000000000000adc2 <_ZN4rtvc17RenderApplication10initVulkanEv>:

void rtvc::RenderApplication::initVulkan() {
    adc2:	55                   	push   %rbp
    adc3:	48 89 e5             	mov    %rsp,%rbp
    adc6:	48 83 ec 10          	sub    $0x10,%rsp
    adca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  creatInstance();
    adce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add2:	48 89 c7             	mov    %rax,%rdi
    add5:	e8 94 c5 ff ff       	call   736e <_ZN4rtvc17RenderApplication13creatInstanceEv>
  setupDebugMessenger();
    adda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adde:	48 89 c7             	mov    %rax,%rdi
    ade1:	e8 de c4 ff ff       	call   72c4 <_ZN4rtvc17RenderApplication19setupDebugMessengerEv>
  createSurface();
    ade6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adea:	48 89 c7             	mov    %rax,%rdi
    aded:	e8 38 d9 ff ff       	call   872a <_ZN4rtvc17RenderApplication13createSurfaceEv>
  selectPhysicalDevice();
    adf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adf6:	48 89 c7             	mov    %rax,%rdi
    adf9:	e8 06 ce ff ff       	call   7c04 <_ZN4rtvc17RenderApplication20selectPhysicalDeviceEv>
  createLogicalDevice();
    adfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae02:	48 89 c7             	mov    %rax,%rdi
    ae05:	e8 3c d5 ff ff       	call   8346 <_ZN4rtvc17RenderApplication19createLogicalDeviceEv>
  createSwapChain();
    ae0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae0e:	48 89 c7             	mov    %rax,%rdi
    ae11:	e8 82 db ff ff       	call   8998 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    ae16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1a:	48 89 c7             	mov    %rax,%rdi
    ae1d:	e8 f0 de ff ff       	call   8d12 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    ae22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae26:	48 89 c7             	mov    %rax,%rdi
    ae29:	e8 24 e3 ff ff       	call   9152 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    ae2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae32:	48 89 c7             	mov    %rax,%rdi
    ae35:	e8 1e e5 ff ff       	call   9358 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    ae3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae3e:	48 89 c7             	mov    %rax,%rdi
    ae41:	e8 80 ef ff ff       	call   9dc6 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
  createCommandPool();
    ae46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae4a:	48 89 c7             	mov    %rax,%rdi
    ae4d:	e8 f8 f0 ff ff       	call   9f4a <_ZN4rtvc17RenderApplication17createCommandPoolEv>
  createVertexBuffer();
    ae52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae56:	48 89 c7             	mov    %rax,%rdi
    ae59:	e8 96 f5 ff ff       	call   a3f4 <_ZN4rtvc17RenderApplication18createVertexBufferEv>
  createIndexBuffer();
    ae5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae62:	48 89 c7             	mov    %rax,%rdi
    ae65:	e8 dc f6 ff ff       	call   a546 <_ZN4rtvc17RenderApplication17createIndexBufferEv>
  createCommandBuffers();
    ae6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6e:	48 89 c7             	mov    %rax,%rdi
    ae71:	e8 14 f8 ff ff       	call   a68a <_ZN4rtvc17RenderApplication20createCommandBuffersEv>
  createSyncObjects();
    ae76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae7a:	48 89 c7             	mov    %rax,%rdi
    ae7d:	e8 c6 fb ff ff       	call   aa48 <_ZN4rtvc17RenderApplication17createSyncObjectsEv>
}
    ae82:	90                   	nop
    ae83:	c9                   	leave
    ae84:	c3                   	ret
    ae85:	90                   	nop

000000000000ae86 <_ZN4rtvc17RenderApplication9drawFrameEv>:

void rtvc::RenderApplication::drawFrame() {
    ae86:	55                   	push   %rbp
    ae87:	48 89 e5             	mov    %rsp,%rbp
    ae8a:	41 54                	push   %r12
    ae8c:	53                   	push   %rbx
    ae8d:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    ae94:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
  vkWaitForFences(device, 1, &inFlightFences[currentFrame], VK_TRUE,
    ae9b:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    aea2:	48 05 40 01 00 00    	add    $0x140,%rax
    aea8:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    aeaf:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    aeb5:	89 d2                	mov    %edx,%edx
    aeb7:	48 89 d6             	mov    %rdx,%rsi
    aeba:	48 89 c7             	mov    %rax,%rdi
    aebd:	e8 62 34 00 00       	call   e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    aec2:	48 89 c2             	mov    %rax,%rdx
    aec5:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    aecc:	48 8b 40 40          	mov    0x40(%rax),%rax
    aed0:	49 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%r8
    aed7:	b9 01 00 00 00       	mov    $0x1,%ecx
    aedc:	be 01 00 00 00       	mov    $0x1,%esi
    aee1:	48 89 c7             	mov    %rax,%rdi
    aee4:	e8 07 93 ff ff       	call   41f0 <vkWaitForFences@plt>
                  UINT64_MAX);

  uint32_t imageIndex;
  VkResult result = vkAcquireNextImageKHR(
      device, swapChain, UINT64_MAX, imageAvailableSemaphores[currentFrame],
    aee9:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    aef0:	48 05 10 01 00 00    	add    $0x110,%rax
    aef6:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    aefd:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    af03:	89 d2                	mov    %edx,%edx
    af05:	48 89 d6             	mov    %rdx,%rsi
    af08:	48 89 c7             	mov    %rax,%rdi
    af0b:	e8 f4 33 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
  VkResult result = vkAcquireNextImageKHR(
    af10:	48 8b 10             	mov    (%rax),%rdx
    af13:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    af1a:	48 8b 70 78          	mov    0x78(%rax),%rsi
    af1e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    af25:	48 8b 40 40          	mov    0x40(%rax),%rax
    af29:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    af2d:	49 89 c9             	mov    %rcx,%r9
    af30:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    af36:	48 89 d1             	mov    %rdx,%rcx
    af39:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
    af40:	48 89 c7             	mov    %rax,%rdi
    af43:	e8 f8 91 ff ff       	call   4140 <vkAcquireNextImageKHR@plt>
    af48:	89 45 ec             	mov    %eax,-0x14(%rbp)
      VK_NULL_HANDLE, &imageIndex);

  if (result == VK_ERROR_OUT_OF_DATE_KHR) {
    af4b:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    af52:	75 14                	jne    af68 <_ZN4rtvc17RenderApplication9drawFrameEv+0xe2>
    recreateSwapChain();
    af54:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    af5b:	48 89 c7             	mov    %rax,%rdi
    af5e:	e8 5d 05 00 00       	call   b4c0 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
  } else if (result != VK_SUCCESS) {
    throw std::runtime_error("Failed to acquire swap chain image.");
  }

  currentFrame = (currentFrame + 1) % max_frames_in_flight;
}
    af63:	e9 f2 03 00 00       	jmp    b35a <_ZN4rtvc17RenderApplication9drawFrameEv+0x4d4>
  } else if (result != VK_SUCCESS && result != VK_SUBOPTIMAL_KHR) {
    af68:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    af6c:	74 44                	je     afb2 <_ZN4rtvc17RenderApplication9drawFrameEv+0x12c>
    af6e:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    af75:	74 3b                	je     afb2 <_ZN4rtvc17RenderApplication9drawFrameEv+0x12c>
    throw std::runtime_error("Failed to acquire swap chain image.");
    af77:	bf 10 00 00 00       	mov    $0x10,%edi
    af7c:	e8 ff 91 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    af81:	48 89 c3             	mov    %rax,%rbx
    af84:	48 8d 05 ed 07 01 00 	lea    0x107ed(%rip),%rax        # 1b778 <_ZN6__pstl9execution2v1L5unseqE+0x4ad>
    af8b:	48 89 c6             	mov    %rax,%rsi
    af8e:	48 89 df             	mov    %rbx,%rdi
    af91:	e8 6a 91 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    af96:	48 8b 05 0b f0 01 00 	mov    0x1f00b(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    af9d:	48 89 c2             	mov    %rax,%rdx
    afa0:	48 8d 05 99 ed 01 00 	lea    0x1ed99(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    afa7:	48 89 c6             	mov    %rax,%rsi
    afaa:	48 89 df             	mov    %rbx,%rdi
    afad:	e8 6e 98 ff ff       	call   4820 <__cxa_throw@plt>
  vkResetFences(device, 1, &inFlightFences[currentFrame]);
    afb2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    afb9:	48 05 40 01 00 00    	add    $0x140,%rax
    afbf:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    afc6:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    afcc:	89 d2                	mov    %edx,%edx
    afce:	48 89 d6             	mov    %rdx,%rsi
    afd1:	48 89 c7             	mov    %rax,%rdi
    afd4:	e8 4b 33 00 00       	call   e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    afd9:	48 89 c2             	mov    %rax,%rdx
    afdc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    afe3:	48 8b 40 40          	mov    0x40(%rax),%rax
    afe7:	be 01 00 00 00       	mov    $0x1,%esi
    afec:	48 89 c7             	mov    %rax,%rdi
    afef:	e8 7c 97 ff ff       	call   4770 <vkResetFences@plt>
  vkResetCommandBuffer(commandBuffers[currentFrame], 0);
    aff4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    affb:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b001:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b008:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b00e:	89 d2                	mov    %edx,%edx
    b010:	48 89 d6             	mov    %rdx,%rsi
    b013:	48 89 c7             	mov    %rax,%rdi
    b016:	e8 29 33 00 00       	call   e344 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b01b:	48 8b 00             	mov    (%rax),%rax
    b01e:	be 00 00 00 00       	mov    $0x0,%esi
    b023:	48 89 c7             	mov    %rax,%rdi
    b026:	e8 85 95 ff ff       	call   45b0 <vkResetCommandBuffer@plt>
  recordCommandBuffer(commandBuffers[currentFrame], imageIndex);
    b02b:	8b 5d e8             	mov    -0x18(%rbp),%ebx
    b02e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b035:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b03b:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b042:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b048:	89 d2                	mov    %edx,%edx
    b04a:	48 89 d6             	mov    %rdx,%rsi
    b04d:	48 89 c7             	mov    %rax,%rdi
    b050:	e8 ef 32 00 00       	call   e344 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b055:	48 8b 08             	mov    (%rax),%rcx
    b058:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b05f:	89 da                	mov    %ebx,%edx
    b061:	48 89 ce             	mov    %rcx,%rsi
    b064:	48 89 c7             	mov    %rax,%rdi
    b067:	e8 12 f7 ff ff       	call   a77e <_ZN4rtvc17RenderApplication19recordCommandBufferEP17VkCommandBuffer_Tj>
  VkSubmitInfo submitInfo{};
    b06c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b070:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    b074:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    b078:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    b07c:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    b080:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  submitInfo.sType = VK_STRUCTURE_TYPE_SUBMIT_INFO;
    b085:	c7 45 a0 04 00 00 00 	movl   $0x4,-0x60(%rbp)
  VkSemaphore waitSemaphores[] = {imageAvailableSemaphores[currentFrame]};
    b08c:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b093:	48 05 10 01 00 00    	add    $0x110,%rax
    b099:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b0a0:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b0a6:	89 d2                	mov    %edx,%edx
    b0a8:	48 89 d6             	mov    %rdx,%rsi
    b0ab:	48 89 c7             	mov    %rax,%rdi
    b0ae:	e8 51 32 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b0b3:	48 8b 00             	mov    (%rax),%rax
    b0b6:	48 89 45 98          	mov    %rax,-0x68(%rbp)
  VkPipelineStageFlags waitStages[] = {
    b0ba:	c7 45 94 00 04 00 00 	movl   $0x400,-0x6c(%rbp)
  submitInfo.waitSemaphoreCount = 1;
    b0c1:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
  submitInfo.pWaitSemaphores = waitSemaphores;
    b0c8:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    b0cc:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
  submitInfo.pWaitDstStageMask = waitStages;
    b0d0:	48 8d 45 94          	lea    -0x6c(%rbp),%rax
    b0d4:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  submitInfo.commandBufferCount = 1;
    b0d8:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%rbp)
  submitInfo.pCommandBuffers = &commandBuffers[currentFrame];
    b0df:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b0e6:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b0ec:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b0f3:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b0f9:	89 d2                	mov    %edx,%edx
    b0fb:	48 89 d6             	mov    %rdx,%rsi
    b0fe:	48 89 c7             	mov    %rax,%rdi
    b101:	e8 3e 32 00 00       	call   e344 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>
    b106:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  VkSemaphore signalSemaphores[] = {renderFinishedSemaphores[currentFrame]};
    b10a:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b111:	48 05 28 01 00 00    	add    $0x128,%rax
    b117:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b11e:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b124:	89 d2                	mov    %edx,%edx
    b126:	48 89 d6             	mov    %rdx,%rsi
    b129:	48 89 c7             	mov    %rax,%rdi
    b12c:	e8 d3 31 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b131:	48 8b 00             	mov    (%rax),%rax
    b134:	48 89 45 88          	mov    %rax,-0x78(%rbp)
  submitInfo.signalSemaphoreCount = 1;
    b138:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%rbp)
  submitInfo.pSignalSemaphores = signalSemaphores;
    b13f:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    b143:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
                    inFlightFences[currentFrame]) != VK_SUCCESS)
    b147:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b14e:	48 05 40 01 00 00    	add    $0x140,%rax
    b154:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
    b15b:	8b 92 5c 01 00 00    	mov    0x15c(%rdx),%edx
    b161:	89 d2                	mov    %edx,%edx
    b163:	48 89 d6             	mov    %rdx,%rsi
    b166:	48 89 c7             	mov    %rax,%rdi
    b169:	e8 b6 31 00 00       	call   e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    b16e:	48 8b 08             	mov    (%rax),%rcx
    b171:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b178:	48 8b 40 48          	mov    0x48(%rax),%rax
    b17c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    b180:	be 01 00 00 00       	mov    $0x1,%esi
    b185:	48 89 c7             	mov    %rax,%rdi
    b188:	e8 83 94 ff ff       	call   4610 <vkQueueSubmit@plt>
                    inFlightFences[currentFrame]) != VK_SUCCESS)
    b18d:	85 c0                	test   %eax,%eax
    b18f:	0f 95 c0             	setne  %al
  if (vkQueueSubmit(graphicsQueue, 1, &submitInfo,
    b192:	84 c0                	test   %al,%al
    b194:	74 3b                	je     b1d1 <_ZN4rtvc17RenderApplication9drawFrameEv+0x34b>
    throw std::runtime_error("Failed to submit draw command buffer.");
    b196:	bf 10 00 00 00       	mov    $0x10,%edi
    b19b:	e8 e0 8f ff ff       	call   4180 <__cxa_allocate_exception@plt>
    b1a0:	48 89 c3             	mov    %rax,%rbx
    b1a3:	48 8d 05 f6 05 01 00 	lea    0x105f6(%rip),%rax        # 1b7a0 <_ZN6__pstl9execution2v1L5unseqE+0x4d5>
    b1aa:	48 89 c6             	mov    %rax,%rsi
    b1ad:	48 89 df             	mov    %rbx,%rdi
    b1b0:	e8 4b 8f ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    b1b5:	48 8b 05 ec ed 01 00 	mov    0x1edec(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b1bc:	48 89 c2             	mov    %rax,%rdx
    b1bf:	48 8d 05 7a eb 01 00 	lea    0x1eb7a(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b1c6:	48 89 c6             	mov    %rax,%rsi
    b1c9:	48 89 df             	mov    %rbx,%rdi
    b1cc:	e8 4f 96 ff ff       	call   4820 <__cxa_throw@plt>
  VkPresentInfoKHR presentInfo{};
    b1d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    b1d5:	0f 29 85 40 ff ff ff 	movaps %xmm0,-0xc0(%rbp)
    b1dc:	0f 29 85 50 ff ff ff 	movaps %xmm0,-0xb0(%rbp)
    b1e3:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    b1ea:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
  presentInfo.sType = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR;
    b1f1:	c7 85 40 ff ff ff e9 	movl   $0x3b9acde9,-0xc0(%rbp)
    b1f8:	cd 9a 3b 
  presentInfo.waitSemaphoreCount = 1;
    b1fb:	c7 85 50 ff ff ff 01 	movl   $0x1,-0xb0(%rbp)
    b202:	00 00 00 
  presentInfo.pWaitSemaphores = signalSemaphores;
    b205:	48 8d 45 88          	lea    -0x78(%rbp),%rax
    b209:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)
  VkSwapchainKHR swapChains[] = {swapChain};
    b210:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b217:	48 8b 40 78          	mov    0x78(%rax),%rax
    b21b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  presentInfo.swapchainCount = 1;
    b222:	c7 85 60 ff ff ff 01 	movl   $0x1,-0xa0(%rbp)
    b229:	00 00 00 
  presentInfo.pSwapchains = swapChains;
    b22c:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    b233:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
  presentInfo.pImageIndices = &imageIndex;
    b23a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    b23e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
  presentInfo.pResults = nullptr;
    b245:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    b24c:	00 00 00 00 
  result = vkQueuePresentKHR(presentQueue, &presentInfo);
    b250:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b257:	48 8b 40 58          	mov    0x58(%rax),%rax
    b25b:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    b262:	48 89 d6             	mov    %rdx,%rsi
    b265:	48 89 c7             	mov    %rax,%rdi
    b268:	e8 23 95 ff ff       	call   4790 <vkQueuePresentKHR@plt>
    b26d:	89 45 ec             	mov    %eax,-0x14(%rbp)
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
    b270:	81 7d ec 14 32 65 c4 	cmpl   $0xc4653214,-0x14(%rbp)
    b277:	74 1b                	je     b294 <_ZN4rtvc17RenderApplication9drawFrameEv+0x40e>
    b279:	81 7d ec eb cd 9a 3b 	cmpl   $0x3b9acdeb,-0x14(%rbp)
    b280:	74 12                	je     b294 <_ZN4rtvc17RenderApplication9drawFrameEv+0x40e>
      frameBufferResized) {
    b282:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b289:	0f b6 80 58 01 00 00 	movzbl 0x158(%rax),%eax
  if (result == VK_ERROR_OUT_OF_DATE_KHR || result == VK_SUBOPTIMAL_KHR ||
    b290:	84 c0                	test   %al,%al
    b292:	74 1f                	je     b2b3 <_ZN4rtvc17RenderApplication9drawFrameEv+0x42d>
    frameBufferResized = false;
    b294:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b29b:	c6 80 58 01 00 00 00 	movb   $0x0,0x158(%rax)
    recreateSwapChain();
    b2a2:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b2a9:	48 89 c7             	mov    %rax,%rdi
    b2ac:	e8 0f 02 00 00       	call   b4c0 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>
    b2b1:	eb 41                	jmp    b2f4 <_ZN4rtvc17RenderApplication9drawFrameEv+0x46e>
  } else if (result != VK_SUCCESS) {
    b2b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
    b2b7:	74 3b                	je     b2f4 <_ZN4rtvc17RenderApplication9drawFrameEv+0x46e>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b2b9:	bf 10 00 00 00       	mov    $0x10,%edi
    b2be:	e8 bd 8e ff ff       	call   4180 <__cxa_allocate_exception@plt>
    b2c3:	48 89 c3             	mov    %rax,%rbx
    b2c6:	48 8d 05 ab 04 01 00 	lea    0x104ab(%rip),%rax        # 1b778 <_ZN6__pstl9execution2v1L5unseqE+0x4ad>
    b2cd:	48 89 c6             	mov    %rax,%rsi
    b2d0:	48 89 df             	mov    %rbx,%rdi
    b2d3:	e8 28 8e ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    b2d8:	48 8b 05 c9 ec 01 00 	mov    0x1ecc9(%rip),%rax        # 29fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    b2df:	48 89 c2             	mov    %rax,%rdx
    b2e2:	48 8d 05 57 ea 01 00 	lea    0x1ea57(%rip),%rax        # 29d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    b2e9:	48 89 c6             	mov    %rax,%rsi
    b2ec:	48 89 df             	mov    %rbx,%rdi
    b2ef:	e8 2c 95 ff ff       	call   4820 <__cxa_throw@plt>
  currentFrame = (currentFrame + 1) % max_frames_in_flight;
    b2f4:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b2fb:	8b 80 5c 01 00 00    	mov    0x15c(%rax),%eax
    b301:	83 c0 01             	add    $0x1,%eax
    b304:	83 e0 01             	and    $0x1,%eax
    b307:	89 c2                	mov    %eax,%edx
    b309:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
    b310:	89 90 5c 01 00 00    	mov    %edx,0x15c(%rax)
    b316:	eb 42                	jmp    b35a <_ZN4rtvc17RenderApplication9drawFrameEv+0x4d4>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b318:	49 89 c4             	mov    %rax,%r12
    b31b:	48 89 df             	mov    %rbx,%rdi
    b31e:	e8 5d 8f ff ff       	call   4280 <__cxa_free_exception@plt>
    b323:	4c 89 e0             	mov    %r12,%rax
    b326:	48 89 c7             	mov    %rax,%rdi
    b329:	e8 42 95 ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to submit draw command buffer.");
    b32e:	49 89 c4             	mov    %rax,%r12
    b331:	48 89 df             	mov    %rbx,%rdi
    b334:	e8 47 8f ff ff       	call   4280 <__cxa_free_exception@plt>
    b339:	4c 89 e0             	mov    %r12,%rax
    b33c:	48 89 c7             	mov    %rax,%rdi
    b33f:	e8 2c 95 ff ff       	call   4870 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to acquire swap chain image.");
    b344:	49 89 c4             	mov    %rax,%r12
    b347:	48 89 df             	mov    %rbx,%rdi
    b34a:	e8 31 8f ff ff       	call   4280 <__cxa_free_exception@plt>
    b34f:	4c 89 e0             	mov    %r12,%rax
    b352:	48 89 c7             	mov    %rax,%rdi
    b355:	e8 16 95 ff ff       	call   4870 <_Unwind_Resume@plt>
}
    b35a:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    b361:	5b                   	pop    %rbx
    b362:	41 5c                	pop    %r12
    b364:	5d                   	pop    %rbp
    b365:	c3                   	ret

000000000000b366 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>:

void rtvc::RenderApplication::cleanUpSwapChain() {
    b366:	55                   	push   %rbp
    b367:	48 89 e5             	mov    %rsp,%rbp
    b36a:	48 83 ec 20          	sub    $0x20,%rsp
    b36e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    b372:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b379:	00 
    b37a:	eb 3a                	jmp    b3b6 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x50>
    vkDestroyFramebuffer(device, swapChainFrameBuffers[i], nullptr);
    b37c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b380:	48 8d 90 d8 00 00 00 	lea    0xd8(%rax),%rdx
    b387:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b38b:	48 89 c6             	mov    %rax,%rsi
    b38e:	48 89 d7             	mov    %rdx,%rdi
    b391:	e8 00 2d 00 00       	call   e096 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>
    b396:	48 8b 08             	mov    (%rax),%rcx
    b399:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b39d:	48 8b 40 40          	mov    0x40(%rax),%rax
    b3a1:	ba 00 00 00 00       	mov    $0x0,%edx
    b3a6:	48 89 ce             	mov    %rcx,%rsi
    b3a9:	48 89 c7             	mov    %rax,%rdi
    b3ac:	e8 5f 94 ff ff       	call   4810 <vkDestroyFramebuffer@plt>
  for (size_t i = 0; i < swapChainFrameBuffers.size(); ++i) {
    b3b1:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b3b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ba:	48 05 d8 00 00 00    	add    $0xd8,%rax
    b3c0:	48 89 c7             	mov    %rax,%rdi
    b3c3:	e8 9c 2f 00 00       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    b3c8:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    b3cc:	0f 92 c0             	setb   %al
    b3cf:	84 c0                	test   %al,%al
    b3d1:	75 a9                	jne    b37c <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x16>
  }

  vkDestroyPipeline(device, graphicsPipeline, nullptr);
    b3d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3d7:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    b3de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3e2:	48 8b 40 40          	mov    0x40(%rax),%rax
    b3e6:	ba 00 00 00 00       	mov    $0x0,%edx
    b3eb:	48 89 ce             	mov    %rcx,%rsi
    b3ee:	48 89 c7             	mov    %rax,%rdi
    b3f1:	e8 ea 90 ff ff       	call   44e0 <vkDestroyPipeline@plt>
  vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    b3f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3fa:	48 8b 88 c8 00 00 00 	mov    0xc8(%rax),%rcx
    b401:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b405:	48 8b 40 40          	mov    0x40(%rax),%rax
    b409:	ba 00 00 00 00       	mov    $0x0,%edx
    b40e:	48 89 ce             	mov    %rcx,%rsi
    b411:	48 89 c7             	mov    %rax,%rdi
    b414:	e8 a7 91 ff ff       	call   45c0 <vkDestroyPipelineLayout@plt>
  vkDestroyRenderPass(device, renderPass, nullptr);
    b419:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b41d:	48 8b 88 c0 00 00 00 	mov    0xc0(%rax),%rcx
    b424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b428:	48 8b 40 40          	mov    0x40(%rax),%rax
    b42c:	ba 00 00 00 00       	mov    $0x0,%edx
    b431:	48 89 ce             	mov    %rcx,%rsi
    b434:	48 89 c7             	mov    %rax,%rdi
    b437:	e8 b4 8f ff ff       	call   43f0 <vkDestroyRenderPass@plt>

  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    b43c:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
    b443:	00 
    b444:	eb 3a                	jmp    b480 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0x11a>
    vkDestroyImageView(device, swapChainImageViews[i], nullptr);
    b446:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b44a:	48 8d 90 a8 00 00 00 	lea    0xa8(%rax),%rdx
    b451:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b455:	48 89 c6             	mov    %rax,%rsi
    b458:	48 89 d7             	mov    %rdx,%rdi
    b45b:	e8 68 28 00 00       	call   dcc8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    b460:	48 8b 08             	mov    (%rax),%rcx
    b463:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b467:	48 8b 40 40          	mov    0x40(%rax),%rax
    b46b:	ba 00 00 00 00       	mov    $0x0,%edx
    b470:	48 89 ce             	mov    %rcx,%rsi
    b473:	48 89 c7             	mov    %rax,%rdi
    b476:	e8 15 94 ff ff       	call   4890 <vkDestroyImageView@plt>
  for (size_t i = 0; i < swapChainImageViews.size(); ++i) {
    b47b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
    b480:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b484:	48 05 a8 00 00 00    	add    $0xa8,%rax
    b48a:	48 89 c7             	mov    %rax,%rdi
    b48d:	e8 5a 2b 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    b492:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    b496:	0f 92 c0             	setb   %al
    b499:	84 c0                	test   %al,%al
    b49b:	75 a9                	jne    b446 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv+0xe0>
  }

  vkDestroySwapchainKHR(device, swapChain, nullptr);
    b49d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4a1:	48 8b 48 78          	mov    0x78(%rax),%rcx
    b4a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4a9:	48 8b 40 40          	mov    0x40(%rax),%rax
    b4ad:	ba 00 00 00 00       	mov    $0x0,%edx
    b4b2:	48 89 ce             	mov    %rcx,%rsi
    b4b5:	48 89 c7             	mov    %rax,%rdi
    b4b8:	e8 03 8c ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    b4bd:	90                   	nop
    b4be:	c9                   	leave
    b4bf:	c3                   	ret

000000000000b4c0 <_ZN4rtvc17RenderApplication17recreateSwapChainEv>:

void rtvc::RenderApplication::recreateSwapChain() {
    b4c0:	55                   	push   %rbp
    b4c1:	48 89 e5             	mov    %rsp,%rbp
    b4c4:	48 83 ec 20          	sub    $0x20,%rsp
    b4c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  int w = 0, h = 0;
    b4cc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    b4d3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  glfwGetFramebufferSize(window, &w, &h);
    b4da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4de:	48 8b 00             	mov    (%rax),%rax
    b4e1:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b4e5:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    b4e9:	48 89 ce             	mov    %rcx,%rsi
    b4ec:	48 89 c7             	mov    %rax,%rdi
    b4ef:	e8 bc 92 ff ff       	call   47b0 <glfwGetFramebufferSize@plt>
  while (w == 0 || h == 0) {
    b4f4:	eb 1f                	jmp    b515 <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x55>
    glfwGetFramebufferSize(window, &w, &h);
    b4f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4fa:	48 8b 00             	mov    (%rax),%rax
    b4fd:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    b501:	48 8d 4d fc          	lea    -0x4(%rbp),%rcx
    b505:	48 89 ce             	mov    %rcx,%rsi
    b508:	48 89 c7             	mov    %rax,%rdi
    b50b:	e8 a0 92 ff ff       	call   47b0 <glfwGetFramebufferSize@plt>
    glfwWaitEvents();
    b510:	e8 eb 8c ff ff       	call   4200 <glfwWaitEvents@plt>
  while (w == 0 || h == 0) {
    b515:	8b 45 fc             	mov    -0x4(%rbp),%eax
    b518:	85 c0                	test   %eax,%eax
    b51a:	74 da                	je     b4f6 <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x36>
    b51c:	8b 45 f8             	mov    -0x8(%rbp),%eax
    b51f:	85 c0                	test   %eax,%eax
    b521:	74 d3                	je     b4f6 <_ZN4rtvc17RenderApplication17recreateSwapChainEv+0x36>
  }

  vkDeviceWaitIdle(device);
    b523:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b527:	48 8b 40 40          	mov    0x40(%rax),%rax
    b52b:	48 89 c7             	mov    %rax,%rdi
    b52e:	e8 6d 8b ff ff       	call   40a0 <vkDeviceWaitIdle@plt>

  cleanUpSwapChain();
    b533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b537:	48 89 c7             	mov    %rax,%rdi
    b53a:	e8 27 fe ff ff       	call   b366 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>

  createSwapChain();
    b53f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b543:	48 89 c7             	mov    %rax,%rdi
    b546:	e8 4d d4 ff ff       	call   8998 <_ZN4rtvc17RenderApplication15createSwapChainEv>
  createImageViews();
    b54b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b54f:	48 89 c7             	mov    %rax,%rdi
    b552:	e8 bb d7 ff ff       	call   8d12 <_ZN4rtvc17RenderApplication16createImageViewsEv>
  createRenderPass();
    b557:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b55b:	48 89 c7             	mov    %rax,%rdi
    b55e:	e8 ef db ff ff       	call   9152 <_ZN4rtvc17RenderApplication16createRenderPassEv>
  createGraphicsPipeline();
    b563:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b567:	48 89 c7             	mov    %rax,%rdi
    b56a:	e8 e9 dd ff ff       	call   9358 <_ZN4rtvc17RenderApplication22createGraphicsPipelineEv>
  createFramebuffers();
    b56f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b573:	48 89 c7             	mov    %rax,%rdi
    b576:	e8 4b e8 ff ff       	call   9dc6 <_ZN4rtvc17RenderApplication18createFramebuffersEv>
}
    b57b:	90                   	nop
    b57c:	c9                   	leave
    b57d:	c3                   	ret

000000000000b57e <_ZN4rtvc17RenderApplication8mainLoopEv>:

void rtvc::RenderApplication::mainLoop() {
    b57e:	55                   	push   %rbp
    b57f:	48 89 e5             	mov    %rsp,%rbp
    b582:	53                   	push   %rbx
    b583:	48 83 ec 78          	sub    $0x78,%rsp
    b587:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  Timer time_total;
    b58b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b58f:	48 89 c7             	mov    %rax,%rdi
    b592:	e8 f1 2d 00 00       	call   e388 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    b597:	f2 0f 10 05 d9 02 01 	movsd  0x102d9(%rip),%xmm0        # 1b878 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b59e:	00 
    b59f:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    b5a4:	e9 a0 00 00 00       	jmp    b649 <_ZN4rtvc17RenderApplication8mainLoopEv+0xcb>
    Timer time_circle;
    b5a9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b5ad:	48 89 c7             	mov    %rax,%rdi
    b5b0:	e8 d3 2d 00 00       	call   e388 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>

    glfwPollEvents();
    b5b5:	e8 26 8e ff ff       	call   43e0 <glfwPollEvents@plt>
    drawFrame();
    b5ba:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b5be:	48 89 c7             	mov    %rax,%rdi
    b5c1:	e8 c0 f8 ff ff       	call   ae86 <_ZN4rtvc17RenderApplication9drawFrameEv>

    if (time_total.current() >= sec_to_mics) {
    b5c6:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b5ca:	48 89 c7             	mov    %rax,%rdi
    b5cd:	e8 54 2e 00 00       	call   e426 <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    b5d2:	66 48 0f 7e c0       	movq   %xmm0,%rax
    b5d7:	66 48 0f 6e d0       	movq   %rax,%xmm2
    b5dc:	66 0f 2f 15 94 02 01 	comisd 0x10294(%rip),%xmm2        # 1b878 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b5e3:	00 
    b5e4:	0f 93 c0             	setae  %al
    b5e7:	84 c0                	test   %al,%al
    b5e9:	74 52                	je     b63d <_ZN4rtvc17RenderApplication8mainLoopEv+0xbf>
      std::cout << sec_to_mics / time_circle.current() << " FPS\n";
    b5eb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b5ef:	48 89 c7             	mov    %rax,%rdi
    b5f2:	e8 2f 2e 00 00       	call   e426 <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    b5f7:	f2 0f 10 0d 79 02 01 	movsd  0x10279(%rip),%xmm1        # 1b878 <_ZN6__pstl9execution2v1L5unseqE+0x5ad>
    b5fe:	00 
    b5ff:	f2 0f 5e c8          	divsd  %xmm0,%xmm1
    b603:	66 48 0f 7e c8       	movq   %xmm1,%rax
    b608:	66 48 0f 6e c0       	movq   %rax,%xmm0
    b60d:	48 8d 05 ac ee 01 00 	lea    0x1eeac(%rip),%rax        # 2a4c0 <_ZSt4cout@GLIBCXX_3.4>
    b614:	48 89 c7             	mov    %rax,%rdi
    b617:	e8 b4 92 ff ff       	call   48d0 <_ZNSolsEd@plt>
    b61c:	48 89 c2             	mov    %rax,%rdx
    b61f:	48 8d 05 a0 01 01 00 	lea    0x101a0(%rip),%rax        # 1b7c6 <_ZN6__pstl9execution2v1L5unseqE+0x4fb>
    b626:	48 89 c6             	mov    %rax,%rsi
    b629:	48 89 d7             	mov    %rdx,%rdi
    b62c:	e8 df 8d ff ff       	call   4410 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    b631:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b635:	48 89 c7             	mov    %rax,%rdi
    b638:	e8 4b 2e 00 00       	call   e488 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    b63d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b641:	48 89 c7             	mov    %rax,%rdi
    b644:	e8 b5 2d 00 00       	call   e3fe <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    b649:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b64d:	48 8b 00             	mov    (%rax),%rax
    b650:	48 89 c7             	mov    %rax,%rdi
    b653:	e8 68 92 ff ff       	call   48c0 <glfwWindowShouldClose@plt>
    b658:	85 c0                	test   %eax,%eax
    b65a:	0f 94 c0             	sete   %al
    b65d:	84 c0                	test   %al,%al
    b65f:	0f 85 44 ff ff ff    	jne    b5a9 <_ZN4rtvc17RenderApplication8mainLoopEv+0x2b>

  vkDeviceWaitIdle(device);
    b665:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    b669:	48 8b 40 40          	mov    0x40(%rax),%rax
    b66d:	48 89 c7             	mov    %rax,%rdi
    b670:	e8 2b 8a ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    b675:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b679:	48 89 c7             	mov    %rax,%rdi
    b67c:	e8 7d 2d 00 00       	call   e3fe <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b681:	eb 2b                	jmp    b6ae <_ZN4rtvc17RenderApplication8mainLoopEv+0x130>
  }
    b683:	48 89 c3             	mov    %rax,%rbx
    b686:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    b68a:	48 89 c7             	mov    %rax,%rdi
    b68d:	e8 6c 2d 00 00       	call   e3fe <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b692:	eb 03                	jmp    b697 <_ZN4rtvc17RenderApplication8mainLoopEv+0x119>
}
    b694:	48 89 c3             	mov    %rax,%rbx
    b697:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    b69b:	48 89 c7             	mov    %rax,%rdi
    b69e:	e8 5b 2d 00 00       	call   e3fe <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    b6a3:	48 89 d8             	mov    %rbx,%rax
    b6a6:	48 89 c7             	mov    %rax,%rdi
    b6a9:	e8 c2 91 ff ff       	call   4870 <_Unwind_Resume@plt>
    b6ae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    b6b2:	c9                   	leave
    b6b3:	c3                   	ret

000000000000b6b4 <_ZN4rtvc17RenderApplicationD1Ev>:

rtvc::RenderApplication::~RenderApplication() {
    b6b4:	55                   	push   %rbp
    b6b5:	48 89 e5             	mov    %rsp,%rbp
    b6b8:	48 83 ec 20          	sub    $0x20,%rsp
    b6bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  cleanUpSwapChain();
    b6c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6c4:	48 89 c7             	mov    %rax,%rdi
    b6c7:	e8 9a fc ff ff       	call   b366 <_ZN4rtvc17RenderApplication16cleanUpSwapChainEv>

  vkDestroyBuffer(device, indexBuffer, nullptr);
    b6cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6d0:	48 8b 88 70 01 00 00 	mov    0x170(%rax),%rcx
    b6d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6db:	48 8b 40 40          	mov    0x40(%rax),%rax
    b6df:	ba 00 00 00 00       	mov    $0x0,%edx
    b6e4:	48 89 ce             	mov    %rcx,%rsi
    b6e7:	48 89 c7             	mov    %rax,%rdi
    b6ea:	e8 a1 8a ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, indexBufferMemory, nullptr);
    b6ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6f3:	48 8b 88 78 01 00 00 	mov    0x178(%rax),%rcx
    b6fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b6fe:	48 8b 40 40          	mov    0x40(%rax),%rax
    b702:	ba 00 00 00 00       	mov    $0x0,%edx
    b707:	48 89 ce             	mov    %rcx,%rsi
    b70a:	48 89 c7             	mov    %rax,%rdi
    b70d:	e8 8e 8c ff ff       	call   43a0 <vkFreeMemory@plt>

  vkDestroyBuffer(device, vertexBuffer, nullptr);
    b712:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b716:	48 8b 88 60 01 00 00 	mov    0x160(%rax),%rcx
    b71d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b721:	48 8b 40 40          	mov    0x40(%rax),%rax
    b725:	ba 00 00 00 00       	mov    $0x0,%edx
    b72a:	48 89 ce             	mov    %rcx,%rsi
    b72d:	48 89 c7             	mov    %rax,%rdi
    b730:	e8 5b 8a ff ff       	call   4190 <vkDestroyBuffer@plt>
  vkFreeMemory(device, vertexBufferMemory, nullptr);
    b735:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b739:	48 8b 88 68 01 00 00 	mov    0x168(%rax),%rcx
    b740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b744:	48 8b 40 40          	mov    0x40(%rax),%rax
    b748:	ba 00 00 00 00       	mov    $0x0,%edx
    b74d:	48 89 ce             	mov    %rcx,%rsi
    b750:	48 89 c7             	mov    %rax,%rdi
    b753:	e8 48 8c ff ff       	call   43a0 <vkFreeMemory@plt>

  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    b758:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    b75f:	00 
    b760:	e9 a4 00 00 00       	jmp    b809 <_ZN4rtvc17RenderApplicationD1Ev+0x155>
    vkDestroySemaphore(device, imageAvailableSemaphores[i], nullptr);
    b765:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b769:	48 8d 90 10 01 00 00 	lea    0x110(%rax),%rdx
    b770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b774:	48 89 c6             	mov    %rax,%rsi
    b777:	48 89 d7             	mov    %rdx,%rdi
    b77a:	e8 85 2b 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b77f:	48 8b 08             	mov    (%rax),%rcx
    b782:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b786:	48 8b 40 40          	mov    0x40(%rax),%rax
    b78a:	ba 00 00 00 00       	mov    $0x0,%edx
    b78f:	48 89 ce             	mov    %rcx,%rsi
    b792:	48 89 c7             	mov    %rax,%rdi
    b795:	e8 36 89 ff ff       	call   40d0 <vkDestroySemaphore@plt>
    vkDestroySemaphore(device, renderFinishedSemaphores[i], nullptr);
    b79a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b79e:	48 8d 90 28 01 00 00 	lea    0x128(%rax),%rdx
    b7a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7a9:	48 89 c6             	mov    %rax,%rsi
    b7ac:	48 89 d7             	mov    %rdx,%rdi
    b7af:	e8 50 2b 00 00       	call   e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>
    b7b4:	48 8b 08             	mov    (%rax),%rcx
    b7b7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7bb:	48 8b 40 40          	mov    0x40(%rax),%rax
    b7bf:	ba 00 00 00 00       	mov    $0x0,%edx
    b7c4:	48 89 ce             	mov    %rcx,%rsi
    b7c7:	48 89 c7             	mov    %rax,%rdi
    b7ca:	e8 01 89 ff ff       	call   40d0 <vkDestroySemaphore@plt>
    vkDestroyFence(device, inFlightFences[i], nullptr);
    b7cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7d3:	48 8d 90 40 01 00 00 	lea    0x140(%rax),%rdx
    b7da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7de:	48 89 c6             	mov    %rax,%rsi
    b7e1:	48 89 d7             	mov    %rdx,%rdi
    b7e4:	e8 3b 2b 00 00       	call   e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>
    b7e9:	48 8b 08             	mov    (%rax),%rcx
    b7ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b7f0:	48 8b 40 40          	mov    0x40(%rax),%rax
    b7f4:	ba 00 00 00 00       	mov    $0x0,%edx
    b7f9:	48 89 ce             	mov    %rcx,%rsi
    b7fc:	48 89 c7             	mov    %rax,%rdi
    b7ff:	e8 cc 8c ff ff       	call   44d0 <vkDestroyFence@plt>
  for (size_t i = 0; i < max_frames_in_flight; ++i) {
    b804:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    b809:	48 83 7d f8 01       	cmpq   $0x1,-0x8(%rbp)
    b80e:	0f 86 51 ff ff ff    	jbe    b765 <_ZN4rtvc17RenderApplicationD1Ev+0xb1>
  }

  vkDestroyCommandPool(device, commandPool, nullptr);
    b814:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b818:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    b81f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b823:	48 8b 40 40          	mov    0x40(%rax),%rax
    b827:	ba 00 00 00 00       	mov    $0x0,%edx
    b82c:	48 89 ce             	mov    %rcx,%rsi
    b82f:	48 89 c7             	mov    %rax,%rdi
    b832:	e8 89 8e ff ff       	call   46c0 <vkDestroyCommandPool@plt>

  vkDestroyDevice(device, nullptr);
    b837:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b83b:	48 8b 40 40          	mov    0x40(%rax),%rax
    b83f:	be 00 00 00 00       	mov    $0x0,%esi
    b844:	48 89 c7             	mov    %rax,%rdi
    b847:	e8 c4 8a ff ff       	call   4310 <vkDestroyDevice@plt>

  if (enableValidationLayers)
    destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    b84c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b850:	48 8b 48 30          	mov    0x30(%rax),%rcx
    b854:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b858:	48 8b 40 10          	mov    0x10(%rax),%rax
    b85c:	ba 00 00 00 00       	mov    $0x0,%edx
    b861:	48 89 ce             	mov    %rcx,%rsi
    b864:	48 89 c7             	mov    %rax,%rdi
    b867:	e8 f4 b5 ff ff       	call   6e60 <_ZN4rtvc29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>

  vkDestroySurfaceKHR(instance, surface, nullptr);
    b86c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b870:	48 8b 48 50          	mov    0x50(%rax),%rcx
    b874:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b878:	48 8b 40 10          	mov    0x10(%rax),%rax
    b87c:	ba 00 00 00 00       	mov    $0x0,%edx
    b881:	48 89 ce             	mov    %rcx,%rsi
    b884:	48 89 c7             	mov    %rax,%rdi
    b887:	e8 d4 8f ff ff       	call   4860 <vkDestroySurfaceKHR@plt>

  vkDestroyInstance(instance, nullptr);
    b88c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b890:	48 8b 40 10          	mov    0x10(%rax),%rax
    b894:	be 00 00 00 00       	mov    $0x0,%esi
    b899:	48 89 c7             	mov    %rax,%rdi
    b89c:	e8 af 8b ff ff       	call   4450 <vkDestroyInstance@plt>

  glfwDestroyWindow(window);
    b8a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8a5:	48 8b 00             	mov    (%rax),%rax
    b8a8:	48 89 c7             	mov    %rax,%rdi
    b8ab:	e8 30 88 ff ff       	call   40e0 <glfwDestroyWindow@plt>

  glfwTerminate();
    b8b0:	e8 ab 8b ff ff       	call   4460 <glfwTerminate@plt>
}
    b8b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8b9:	48 05 40 01 00 00    	add    $0x140,%rax
    b8bf:	48 89 c7             	mov    %rax,%rdi
    b8c2:	e8 21 0e 00 00       	call   c6e8 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>
    b8c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8cb:	48 05 28 01 00 00    	add    $0x128,%rax
    b8d1:	48 89 c7             	mov    %rax,%rdi
    b8d4:	e8 61 0d 00 00       	call   c63a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    b8d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8dd:	48 05 10 01 00 00    	add    $0x110,%rax
    b8e3:	48 89 c7             	mov    %rax,%rdi
    b8e6:	e8 4f 0d 00 00       	call   c63a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>
    b8eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b8ef:	48 05 f8 00 00 00    	add    $0xf8,%rax
    b8f5:	48 89 c7             	mov    %rax,%rdi
    b8f8:	e8 8f 0c 00 00       	call   c58c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    b8fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b901:	48 05 d8 00 00 00    	add    $0xd8,%rax
    b907:	48 89 c7             	mov    %rax,%rdi
    b90a:	e8 cf 0b 00 00       	call   c4de <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>
    b90f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b913:	48 05 a8 00 00 00    	add    $0xa8,%rax
    b919:	48 89 c7             	mov    %rax,%rdi
    b91c:	e8 0f 0b 00 00       	call   c430 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    b921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b925:	48 83 e8 80          	sub    $0xffffffffffffff80,%rax
    b929:	48 89 c7             	mov    %rax,%rdi
    b92c:	e8 51 0a 00 00       	call   c382 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
rtvc::RenderApplication::~RenderApplication() {
    b931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b935:	48 83 c0 60          	add    $0x60,%rax
}
    b939:	48 89 c7             	mov    %rax,%rdi
    b93c:	e8 93 09 00 00       	call   c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
rtvc::RenderApplication::~RenderApplication() {
    b941:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b945:	48 83 c0 18          	add    $0x18,%rax
}
    b949:	48 89 c7             	mov    %rax,%rdi
    b94c:	e8 83 09 00 00       	call   c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    b951:	90                   	nop
    b952:	c9                   	leave
    b953:	c3                   	ret

000000000000b954 <_ZN4rtvc17RenderApplication3runEv>:

void rtvc::RenderApplication::run() {
    b954:	55                   	push   %rbp
    b955:	48 89 e5             	mov    %rsp,%rbp
    b958:	48 83 ec 10          	sub    $0x10,%rsp
    b95c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  initWindow();
    b960:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b964:	48 89 c7             	mov    %rax,%rdi
    b967:	e8 d0 f3 ff ff       	call   ad3c <_ZN4rtvc17RenderApplication10initWindowEv>
  initVulkan();
    b96c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b970:	48 89 c7             	mov    %rax,%rdi
    b973:	e8 4a f4 ff ff       	call   adc2 <_ZN4rtvc17RenderApplication10initVulkanEv>
  mainLoop();
    b978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b97c:	48 89 c7             	mov    %rax,%rdi
    b97f:	e8 fa fb ff ff       	call   b57e <_ZN4rtvc17RenderApplication8mainLoopEv>
    b984:	90                   	nop
    b985:	c9                   	leave
    b986:	c3                   	ret

000000000000b987 <_Z41__static_initialization_and_destruction_0ii>:
    b987:	55                   	push   %rbp
    b988:	48 89 e5             	mov    %rsp,%rbp
    b98b:	41 57                	push   %r15
    b98d:	41 56                	push   %r14
    b98f:	41 55                	push   %r13
    b991:	41 54                	push   %r12
    b993:	53                   	push   %rbx
    b994:	48 83 ec 78          	sub    $0x78,%rsp
    b998:	89 bd 6c ff ff ff    	mov    %edi,-0x94(%rbp)
    b99e:	89 b5 68 ff ff ff    	mov    %esi,-0x98(%rbp)
    b9a4:	83 bd 6c ff ff ff 01 	cmpl   $0x1,-0x94(%rbp)
    b9ab:	0f 85 a9 02 00 00    	jne    bc5a <_Z41__static_initialization_and_destruction_0ii+0x2d3>
    b9b1:	81 bd 68 ff ff ff ff 	cmpl   $0xffff,-0x98(%rbp)
    b9b8:	ff 00 00 
    b9bb:	0f 85 99 02 00 00    	jne    bc5a <_Z41__static_initialization_and_destruction_0ii+0x2d3>
    b9c1:	48 8d 05 80 ed 01 00 	lea    0x1ed80(%rip),%rax        # 2a748 <_ZStL8__ioinit>
    b9c8:	48 89 c7             	mov    %rax,%rdi
    b9cb:	e8 80 8d ff ff       	call   4750 <_ZNSt8ios_base4InitC1Ev@plt>
    b9d0:	48 8d 05 99 ea 01 00 	lea    0x1ea99(%rip),%rax        # 2a470 <__dso_handle>
    b9d7:	48 89 c2             	mov    %rax,%rdx
    b9da:	48 8d 05 67 ed 01 00 	lea    0x1ed67(%rip),%rax        # 2a748 <_ZStL8__ioinit>
    b9e1:	48 89 c6             	mov    %rax,%rsi
    b9e4:	48 8b 05 dd e5 01 00 	mov    0x1e5dd(%rip),%rax        # 29fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    b9eb:	48 89 c7             	mov    %rax,%rdi
    b9ee:	e8 8d 89 ff ff       	call   4380 <__cxa_atexit@plt>
inline const std::vector<rtvc::Vertex> triangle = {
    b9f3:	48 8d 05 3e ed 01 00 	lea    0x1ed3e(%rip),%rax        # 2a738 <_ZGVN4rtvc9resources7shaders8triangleE>
    b9fa:	0f b6 00             	movzbl (%rax),%eax
    b9fd:	84 c0                	test   %al,%al
    b9ff:	0f 85 72 01 00 00    	jne    bb77 <_Z41__static_initialization_and_destruction_0ii+0x1f0>
    ba05:	48 8d 05 2c ed 01 00 	lea    0x1ed2c(%rip),%rax        # 2a738 <_ZGVN4rtvc9resources7shaders8triangleE>
    ba0c:	c6 00 01             	movb   $0x1,(%rax)
    ba0f:	f3 0f 10 05 69 fe 00 	movss  0xfe69(%rip),%xmm0        # 1b880 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    ba16:	00 
    ba17:	f3 0f 11 85 70 ff ff 	movss  %xmm0,-0x90(%rbp)
    ba1e:	ff 
    ba1f:	f3 0f 10 05 59 fe 00 	movss  0xfe59(%rip),%xmm0        # 1b880 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    ba26:	00 
    ba27:	f3 0f 11 85 74 ff ff 	movss  %xmm0,-0x8c(%rbp)
    ba2e:	ff 
    ba2f:	f3 0f 10 05 39 fe 00 	movss  0xfe39(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    ba36:	00 
    ba37:	f3 0f 11 85 78 ff ff 	movss  %xmm0,-0x88(%rbp)
    ba3e:	ff 
    ba3f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba43:	f3 0f 11 85 7c ff ff 	movss  %xmm0,-0x84(%rbp)
    ba4a:	ff 
    ba4b:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba4f:	f3 0f 11 45 80       	movss  %xmm0,-0x80(%rbp)
    ba54:	f3 0f 10 05 28 fe 00 	movss  0xfe28(%rip),%xmm0        # 1b884 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    ba5b:	00 
    ba5c:	f3 0f 11 45 84       	movss  %xmm0,-0x7c(%rbp)
    ba61:	f3 0f 10 05 17 fe 00 	movss  0xfe17(%rip),%xmm0        # 1b880 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    ba68:	00 
    ba69:	f3 0f 11 45 88       	movss  %xmm0,-0x78(%rbp)
    ba6e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba72:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)
    ba77:	f3 0f 10 05 f1 fd 00 	movss  0xfdf1(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    ba7e:	00 
    ba7f:	f3 0f 11 45 90       	movss  %xmm0,-0x70(%rbp)
    ba84:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ba88:	f3 0f 11 45 94       	movss  %xmm0,-0x6c(%rbp)
    ba8d:	f3 0f 10 05 ef fd 00 	movss  0xfdef(%rip),%xmm0        # 1b884 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    ba94:	00 
    ba95:	f3 0f 11 45 98       	movss  %xmm0,-0x68(%rbp)
    ba9a:	f3 0f 10 05 e2 fd 00 	movss  0xfde2(%rip),%xmm0        # 1b884 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    baa1:	00 
    baa2:	f3 0f 11 45 9c       	movss  %xmm0,-0x64(%rbp)
    baa7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    baab:	f3 0f 11 45 a0       	movss  %xmm0,-0x60(%rbp)
    bab0:	66 0f ef c0          	pxor   %xmm0,%xmm0
    bab4:	f3 0f 11 45 a4       	movss  %xmm0,-0x5c(%rbp)
    bab9:	f3 0f 10 05 af fd 00 	movss  0xfdaf(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    bac0:	00 
    bac1:	f3 0f 11 45 a8       	movss  %xmm0,-0x58(%rbp)
    bac6:	f3 0f 10 05 b2 fd 00 	movss  0xfdb2(%rip),%xmm0        # 1b880 <_ZN6__pstl9execution2v1L5unseqE+0x5b5>
    bacd:	00 
    bace:	f3 0f 11 45 ac       	movss  %xmm0,-0x54(%rbp)
    bad3:	f3 0f 10 05 a9 fd 00 	movss  0xfda9(%rip),%xmm0        # 1b884 <_ZN6__pstl9execution2v1L5unseqE+0x5b9>
    bada:	00 
    badb:	f3 0f 11 45 b0       	movss  %xmm0,-0x50(%rbp)
    bae0:	f3 0f 10 05 88 fd 00 	movss  0xfd88(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    bae7:	00 
    bae8:	f3 0f 11 45 b4       	movss  %xmm0,-0x4c(%rbp)
    baed:	f3 0f 10 05 7b fd 00 	movss  0xfd7b(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    baf4:	00 
    baf5:	f3 0f 11 45 b8       	movss  %xmm0,-0x48(%rbp)
    bafa:	f3 0f 10 05 6e fd 00 	movss  0xfd6e(%rip),%xmm0        # 1b870 <_ZN6__pstl9execution2v1L5unseqE+0x5a5>
    bb01:	00 
    bb02:	f3 0f 11 45 bc       	movss  %xmm0,-0x44(%rbp)
    bb07:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    bb0e:	49 89 c6             	mov    %rax,%r14
    bb11:	41 bf 04 00 00 00    	mov    $0x4,%r15d
    bb17:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    bb1b:	48 89 c7             	mov    %rax,%rdi
    bb1e:	e8 eb 99 ff ff       	call   550e <_ZNSaIN4rtvc6VertexEEC1Ev>
    bb23:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    bb27:	4c 89 f6             	mov    %r14,%rsi
    bb2a:	4c 89 ff             	mov    %r15,%rdi
    bb2d:	4c 89 f1             	mov    %r14,%rcx
    bb30:	4c 89 fb             	mov    %r15,%rbx
    bb33:	48 89 da             	mov    %rbx,%rdx
    bb36:	48 89 c1             	mov    %rax,%rcx
    bb39:	48 8d 05 c0 eb 01 00 	lea    0x1ebc0(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    bb40:	48 89 c7             	mov    %rax,%rdi
    bb43:	e8 fe 99 ff ff       	call   5546 <_ZNSt6vectorIN4rtvc6VertexESaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    bb48:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    bb4c:	48 89 c7             	mov    %rax,%rdi
    bb4f:	e8 d6 99 ff ff       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    bb54:	48 8d 05 15 e9 01 00 	lea    0x1e915(%rip),%rax        # 2a470 <__dso_handle>
    bb5b:	48 89 c2             	mov    %rax,%rdx
    bb5e:	48 8d 05 9b eb 01 00 	lea    0x1eb9b(%rip),%rax        # 2a700 <_ZN4rtvc9resources7shaders8triangleE>
    bb65:	48 89 c6             	mov    %rax,%rsi
    bb68:	48 8d 05 4f b1 ff ff 	lea    -0x4eb1(%rip),%rax        # 6cbe <_ZNSt6vectorIN4rtvc6VertexESaIS1_EED1Ev>
    bb6f:	48 89 c7             	mov    %rax,%rdi
    bb72:	e8 09 88 ff ff       	call   4380 <__cxa_atexit@plt>
inline const std::vector<uint16_t> indices = {0, 1, 2, 2, 3, 0};
    bb77:	48 8d 05 c2 eb 01 00 	lea    0x1ebc2(%rip),%rax        # 2a740 <_ZGVN4rtvc9resources7shaders7indicesE>
    bb7e:	0f b6 00             	movzbl (%rax),%eax
    bb81:	84 c0                	test   %al,%al
    bb83:	0f 85 d1 00 00 00    	jne    bc5a <_Z41__static_initialization_and_destruction_0ii+0x2d3>
    bb89:	48 8d 05 b0 eb 01 00 	lea    0x1ebb0(%rip),%rax        # 2a740 <_ZGVN4rtvc9resources7shaders7indicesE>
    bb90:	c6 00 01             	movb   $0x1,(%rax)
    bb93:	66 c7 45 c2 00 00    	movw   $0x0,-0x3e(%rbp)
    bb99:	66 c7 45 c4 01 00    	movw   $0x1,-0x3c(%rbp)
    bb9f:	66 c7 45 c6 02 00    	movw   $0x2,-0x3a(%rbp)
    bba5:	66 c7 45 c8 02 00    	movw   $0x2,-0x38(%rbp)
    bbab:	66 c7 45 ca 03 00    	movw   $0x3,-0x36(%rbp)
    bbb1:	66 c7 45 cc 00 00    	movw   $0x0,-0x34(%rbp)
    bbb7:	48 8d 45 c2          	lea    -0x3e(%rbp),%rax
    bbbb:	49 89 c4             	mov    %rax,%r12
    bbbe:	41 bd 06 00 00 00    	mov    $0x6,%r13d
    bbc4:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    bbc8:	48 89 c7             	mov    %rax,%rdi
    bbcb:	e8 fe 99 ff ff       	call   55ce <_ZNSaItEC1Ev>
    bbd0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    bbd4:	4c 89 e6             	mov    %r12,%rsi
    bbd7:	4c 89 ef             	mov    %r13,%rdi
    bbda:	4c 89 e1             	mov    %r12,%rcx
    bbdd:	4c 89 eb             	mov    %r13,%rbx
    bbe0:	48 89 da             	mov    %rbx,%rdx
    bbe3:	48 89 c1             	mov    %rax,%rcx
    bbe6:	48 8d 05 33 eb 01 00 	lea    0x1eb33(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    bbed:	48 89 c7             	mov    %rax,%rdi
    bbf0:	e8 11 9a ff ff       	call   5606 <_ZNSt6vectorItSaItEEC1ESt16initializer_listItERKS0_>
    bbf5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    bbf9:	48 89 c7             	mov    %rax,%rdi
    bbfc:	e8 e9 99 ff ff       	call   55ea <_ZNSaItED1Ev>
    bc01:	48 8d 05 68 e8 01 00 	lea    0x1e868(%rip),%rax        # 2a470 <__dso_handle>
    bc08:	48 89 c2             	mov    %rax,%rdx
    bc0b:	48 8d 05 0e eb 01 00 	lea    0x1eb0e(%rip),%rax        # 2a720 <_ZN4rtvc9resources7shaders7indicesE>
    bc12:	48 89 c6             	mov    %rax,%rsi
    bc15:	48 8d 05 e6 b0 ff ff 	lea    -0x4f1a(%rip),%rax        # 6d02 <_ZNSt6vectorItSaItEED1Ev>
    bc1c:	48 89 c7             	mov    %rax,%rdi
    bc1f:	e8 5c 87 ff ff       	call   4380 <__cxa_atexit@plt>
    bc24:	eb 34                	jmp    bc5a <_Z41__static_initialization_and_destruction_0ii+0x2d3>
inline const std::vector<rtvc::Vertex> triangle = {
    bc26:	48 89 c3             	mov    %rax,%rbx
    bc29:	48 8d 45 c1          	lea    -0x3f(%rbp),%rax
    bc2d:	48 89 c7             	mov    %rax,%rdi
    bc30:	e8 f5 98 ff ff       	call   552a <_ZNSaIN4rtvc6VertexEED1Ev>
    bc35:	48 89 d8             	mov    %rbx,%rax
    bc38:	48 89 c7             	mov    %rax,%rdi
    bc3b:	e8 30 8c ff ff       	call   4870 <_Unwind_Resume@plt>
inline const std::vector<uint16_t> indices = {0, 1, 2, 2, 3, 0};
    bc40:	48 89 c3             	mov    %rax,%rbx
    bc43:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    bc47:	48 89 c7             	mov    %rax,%rdi
    bc4a:	e8 9b 99 ff ff       	call   55ea <_ZNSaItED1Ev>
    bc4f:	48 89 d8             	mov    %rbx,%rax
    bc52:	48 89 c7             	mov    %rax,%rdi
    bc55:	e8 16 8c ff ff       	call   4870 <_Unwind_Resume@plt>
    bc5a:	90                   	nop
    bc5b:	48 83 c4 78          	add    $0x78,%rsp
    bc5f:	5b                   	pop    %rbx
    bc60:	41 5c                	pop    %r12
    bc62:	41 5d                	pop    %r13
    bc64:	41 5e                	pop    %r14
    bc66:	41 5f                	pop    %r15
    bc68:	5d                   	pop    %rbp
    bc69:	c3                   	ret

000000000000bc6a <_GLOBAL__sub_I__ZN4rtvc17RenderApplication13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:
    bc6a:	55                   	push   %rbp
    bc6b:	48 89 e5             	mov    %rsp,%rbp
    bc6e:	be ff ff 00 00       	mov    $0xffff,%esi
    bc73:	bf 01 00 00 00       	mov    $0x1,%edi
    bc78:	e8 0a fd ff ff       	call   b987 <_Z41__static_initialization_and_destruction_0ii>
    bc7d:	5d                   	pop    %rbp
    bc7e:	c3                   	ret

000000000000bc7f <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    bc7f:	55                   	push   %rbp
    bc80:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    bc83:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    bc88:	5d                   	pop    %rbp
    bc89:	c3                   	ret

000000000000bc8a <_ZNSt14numeric_limitsIjE3maxEv>:

      static _GLIBCXX_CONSTEXPR unsigned int
      min() _GLIBCXX_USE_NOEXCEPT { return 0; }

      static _GLIBCXX_CONSTEXPR unsigned int
      max() _GLIBCXX_USE_NOEXCEPT { return __INT_MAX__ * 2U + 1; }
    bc8a:	55                   	push   %rbp
    bc8b:	48 89 e5             	mov    %rsp,%rbp
    bc8e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    bc93:	5d                   	pop    %rbp
    bc94:	c3                   	ret

000000000000bc95 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    bc95:	55                   	push   %rbp
    bc96:	48 89 e5             	mov    %rsp,%rbp
    bc99:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    bc9d:	e8 3b 00 00 00       	call   bcdd <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    bca2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    bca6:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    bcaa:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    bcae:	48 89 d6             	mov    %rdx,%rsi
    bcb1:	48 89 c7             	mov    %rax,%rdi
    bcb4:	e8 07 00 00 00       	call   bcc0 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    bcb9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bcbd:	c9                   	leave
    bcbe:	c3                   	ret
    bcbf:	90                   	nop

000000000000bcc0 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    bcc0:	55                   	push   %rbp
    bcc1:	48 89 e5             	mov    %rsp,%rbp
    bcc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    bccc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bcd0:	48 8b 10             	mov    (%rax),%rdx
    bcd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcd7:	48 89 10             	mov    %rdx,(%rax)
    bcda:	90                   	nop
    bcdb:	5d                   	pop    %rbp
    bcdc:	c3                   	ret

000000000000bcdd <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    bcdd:	55                   	push   %rbp
    bcde:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    bce1:	b8 00 00 00 00       	mov    $0x0,%eax
    bce6:	5d                   	pop    %rbp
    bce7:	c3                   	ret

000000000000bce8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    bce8:	55                   	push   %rbp
    bce9:	48 89 e5             	mov    %rsp,%rbp
    bcec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    bcf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcf4:	48 8b 00             	mov    (%rax),%rax
    bcf7:	5d                   	pop    %rbp
    bcf8:	c3                   	ret
    bcf9:	90                   	nop

000000000000bcfa <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    bcfa:	55                   	push   %rbp
    bcfb:	48 89 e5             	mov    %rsp,%rbp
    bcfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd02:	48 8d 15 07 e0 01 00 	lea    0x1e007(%rip),%rdx        # 29d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    bd09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd0d:	48 89 10             	mov    %rdx,(%rax)
    bd10:	90                   	nop
    bd11:	5d                   	pop    %rbp
    bd12:	c3                   	ret

000000000000bd13 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    bd13:	55                   	push   %rbp
    bd14:	48 89 e5             	mov    %rsp,%rbp
    bd17:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd1b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd1f:	90                   	nop
    bd20:	5d                   	pop    %rbp
    bd21:	c3                   	ret

000000000000bd22 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    bd22:	55                   	push   %rbp
    bd23:	48 89 e5             	mov    %rsp,%rbp
    bd26:	48 83 ec 10          	sub    $0x10,%rsp
    bd2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    bd2e:	e8 4c ff ff ff       	call   bc7f <_ZSt23__is_constant_evaluatedv>
    bd33:	84 c0                	test   %al,%al
    bd35:	74 0e                	je     bd45 <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    bd37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd3b:	48 89 c7             	mov    %rax,%rdi
    bd3e:	e8 3b 04 00 00       	call   c17e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    bd43:	eb 0d                	jmp    bd52 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    bd45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd49:	48 89 c7             	mov    %rax,%rdi
    bd4c:	e8 0f 84 ff ff       	call   4160 <strlen@plt>
    bd51:	90                   	nop
      }
    bd52:	c9                   	leave
    bd53:	c3                   	ret

000000000000bd54 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    bd54:	55                   	push   %rbp
    bd55:	48 89 e5             	mov    %rsp,%rbp
    bd58:	89 7d fc             	mov    %edi,-0x4(%rbp)
    bd5b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    bd5e:	8b 45 fc             	mov    -0x4(%rbp),%eax
    bd61:	0b 45 f8             	or     -0x8(%rbp),%eax
    bd64:	5d                   	pop    %rbp
    bd65:	c3                   	ret

000000000000bd66 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    bd66:	55                   	push   %rbp
    bd67:	48 89 e5             	mov    %rsp,%rbp
    bd6a:	48 83 ec 10          	sub    $0x10,%rsp
    bd6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    bd72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd76:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    bd7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd80:	48 89 c7             	mov    %rax,%rdi
    bd83:	e8 04 00 00 00       	call   bd8c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    bd88:	90                   	nop
    bd89:	c9                   	leave
    bd8a:	c3                   	ret
    bd8b:	90                   	nop

000000000000bd8c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    bd8c:	55                   	push   %rbp
    bd8d:	48 89 e5             	mov    %rsp,%rbp
    bd90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    bd94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd98:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    bd9f:	00 
      _M_header._M_left = &_M_header;
    bda0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bda4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bda8:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    bdac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    bdb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdb4:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    bdb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdbc:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    bdc3:	00 
    }
    bdc4:	90                   	nop
    bdc5:	5d                   	pop    %rbp
    bdc6:	c3                   	ret
    bdc7:	90                   	nop

000000000000bdc8 <_ZNKSt19bad_optional_access4whatEv>:
  {
  public:
    bad_optional_access() = default;
    virtual ~bad_optional_access() = default;

    const char* what() const noexcept override
    bdc8:	55                   	push   %rbp
    bdc9:	48 89 e5             	mov    %rsp,%rbp
    bdcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    bdd0:	48 8d 05 f5 f4 00 00 	lea    0xf4f5(%rip),%rax        # 1b2cc <_ZN6__pstl9execution2v1L5unseqE+0x1>
    bdd7:	5d                   	pop    %rbp
    bdd8:	c3                   	ret
    bdd9:	90                   	nop

000000000000bdda <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    bdda:	55                   	push   %rbp
    bddb:	48 89 e5             	mov    %rsp,%rbp
    bdde:	48 83 ec 10          	sub    $0x10,%rsp
    bde2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bde6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdea:	48 89 c7             	mov    %rax,%rdi
    bded:	e8 08 ff ff ff       	call   bcfa <_ZNSt9exceptionC1Ev>
    bdf2:	48 8d 15 d7 de 01 00 	lea    0x1ded7(%rip),%rdx        # 29cd0 <_ZTVSt19bad_optional_access+0x10>
    bdf9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdfd:	48 89 10             	mov    %rdx,(%rax)
    be00:	90                   	nop
    be01:	c9                   	leave
    be02:	c3                   	ret

000000000000be03 <_ZSt27__throw_bad_optional_accessv>:
  };

  // XXX Does not belong here.
  [[__noreturn__]] inline void
  __throw_bad_optional_access()
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    be03:	55                   	push   %rbp
    be04:	48 89 e5             	mov    %rsp,%rbp
    be07:	53                   	push   %rbx
    be08:	48 83 ec 08          	sub    $0x8,%rsp
    be0c:	bf 08 00 00 00       	mov    $0x8,%edi
    be11:	e8 6a 83 ff ff       	call   4180 <__cxa_allocate_exception@plt>
    be16:	48 89 c3             	mov    %rax,%rbx
    be19:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    be20:	48 89 df             	mov    %rbx,%rdi
    be23:	e8 b2 ff ff ff       	call   bdda <_ZNSt19bad_optional_accessC1Ev>
    be28:	48 8d 05 7b d0 00 00 	lea    0xd07b(%rip),%rax        # 18eaa <_ZNSt19bad_optional_accessD1Ev>
    be2f:	48 89 c2             	mov    %rax,%rdx
    be32:	48 8d 05 1f df 01 00 	lea    0x1df1f(%rip),%rax        # 29d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    be39:	48 89 c6             	mov    %rax,%rsi
    be3c:	48 89 df             	mov    %rbx,%rdi
    be3f:	e8 dc 89 ff ff       	call   4820 <__cxa_throw@plt>

000000000000be44 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    be44:	55                   	push   %rbp
    be45:	48 89 e5             	mov    %rsp,%rbp
    be48:	48 83 ec 10          	sub    $0x10,%rsp
    be4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be54:	48 89 c7             	mov    %rax,%rdi
    be57:	e8 bc 04 00 00       	call   c318 <_ZNSaIP9VkImage_TED1Ev>
    be5c:	90                   	nop
    be5d:	c9                   	leave
    be5e:	c3                   	ret
    be5f:	90                   	nop

000000000000be60 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
    be60:	55                   	push   %rbp
    be61:	48 89 e5             	mov    %rsp,%rbp
    be64:	48 83 ec 10          	sub    $0x10,%rsp
    be68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be70:	48 89 c7             	mov    %rax,%rdi
    be73:	e8 4e 05 00 00       	call   c3c6 <_ZNSaIP13VkImageView_TED1Ev>
    be78:	90                   	nop
    be79:	c9                   	leave
    be7a:	c3                   	ret
    be7b:	90                   	nop

000000000000be7c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>:
    be7c:	55                   	push   %rbp
    be7d:	48 89 e5             	mov    %rsp,%rbp
    be80:	48 83 ec 10          	sub    $0x10,%rsp
    be84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be8c:	48 89 c7             	mov    %rax,%rdi
    be8f:	e8 e0 05 00 00       	call   c474 <_ZNSaIP15VkFramebuffer_TED1Ev>
    be94:	90                   	nop
    be95:	c9                   	leave
    be96:	c3                   	ret
    be97:	90                   	nop

000000000000be98 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
    be98:	55                   	push   %rbp
    be99:	48 89 e5             	mov    %rsp,%rbp
    be9c:	48 83 ec 10          	sub    $0x10,%rsp
    bea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bea8:	48 89 c7             	mov    %rax,%rdi
    beab:	e8 72 06 00 00       	call   c522 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    beb0:	90                   	nop
    beb1:	c9                   	leave
    beb2:	c3                   	ret
    beb3:	90                   	nop

000000000000beb4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>:
    beb4:	55                   	push   %rbp
    beb5:	48 89 e5             	mov    %rsp,%rbp
    beb8:	48 83 ec 10          	sub    $0x10,%rsp
    bebc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec4:	48 89 c7             	mov    %rax,%rdi
    bec7:	e8 04 07 00 00       	call   c5d0 <_ZNSaIP13VkSemaphore_TED1Ev>
    becc:	90                   	nop
    becd:	c9                   	leave
    bece:	c3                   	ret
    becf:	90                   	nop

000000000000bed0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>:
    bed0:	55                   	push   %rbp
    bed1:	48 89 e5             	mov    %rsp,%rbp
    bed4:	48 83 ec 10          	sub    $0x10,%rsp
    bed8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bedc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee0:	48 89 c7             	mov    %rax,%rdi
    bee3:	e8 96 07 00 00       	call   c67e <_ZNSaIP9VkFence_TED1Ev>
    bee8:	90                   	nop
    bee9:	c9                   	leave
    beea:	c3                   	ret
    beeb:	90                   	nop

000000000000beec <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv>:

  struct QueueFamilyIndices {
    std::optional<uint32_t> graphicsFamily;
    std::optional<uint32_t> presentFamily;

    bool isComplete() {
    beec:	55                   	push   %rbp
    beed:	48 89 e5             	mov    %rsp,%rbp
    bef0:	48 83 ec 10          	sub    $0x10,%rsp
    bef4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      return graphicsFamily.has_value() && presentFamily.has_value();
    bef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    befc:	48 89 c7             	mov    %rax,%rdi
    beff:	e8 28 08 00 00       	call   c72c <_ZNKSt8optionalIjE9has_valueEv>
    bf04:	84 c0                	test   %al,%al
    bf06:	74 1b                	je     bf23 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    bf08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf0c:	48 83 c0 08          	add    $0x8,%rax
    bf10:	48 89 c7             	mov    %rax,%rdi
    bf13:	e8 14 08 00 00       	call   c72c <_ZNKSt8optionalIjE9has_valueEv>
    bf18:	84 c0                	test   %al,%al
    bf1a:	74 07                	je     bf23 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x37>
    bf1c:	b8 01 00 00 00       	mov    $0x1,%eax
    bf21:	eb 05                	jmp    bf28 <_ZN4rtvc17RenderApplication18QueueFamilyIndices10isCompleteEv+0x3c>
    bf23:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    bf28:	c9                   	leave
    bf29:	c3                   	ret

000000000000bf2a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    bf2a:	55                   	push   %rbp
    bf2b:	48 89 e5             	mov    %rsp,%rbp
    bf2e:	48 83 ec 10          	sub    $0x10,%rsp
    bf32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3a:	48 89 c7             	mov    %rax,%rdi
    bf3d:	e8 20 08 00 00       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
    bf42:	90                   	nop
    bf43:	c9                   	leave
    bf44:	c3                   	ret
    bf45:	90                   	nop

000000000000bf46 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    bf46:	55                   	push   %rbp
    bf47:	48 89 e5             	mov    %rsp,%rbp
    bf4a:	48 83 ec 10          	sub    $0x10,%rsp
    bf4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf56:	48 89 c7             	mov    %rax,%rdi
    bf59:	e8 5a 03 00 00       	call   c2b8 <_ZNSaIPKcED1Ev>
    bf5e:	90                   	nop
    bf5f:	c9                   	leave
    bf60:	c3                   	ret
    bf61:	90                   	nop

000000000000bf62 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way. Managing the pointer is the user's responsibility.
       */
      ~set() = default;
    bf62:	55                   	push   %rbp
    bf63:	48 89 e5             	mov    %rsp,%rbp
    bf66:	48 83 ec 10          	sub    $0x10,%rsp
    bf6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf72:	48 89 c7             	mov    %rax,%rdi
    bf75:	e8 4c 0f 00 00       	call   cec6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    bf7a:	90                   	nop
    bf7b:	c9                   	leave
    bf7c:	c3                   	ret
    bf7d:	90                   	nop

000000000000bf7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    bf7e:	55                   	push   %rbp
    bf7f:	48 89 e5             	mov    %rsp,%rbp
    bf82:	48 83 ec 10          	sub    $0x10,%rsp
    bf86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf8e:	48 89 c7             	mov    %rax,%rdi
    bf91:	e8 d2 0f 00 00       	call   cf68 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    bf96:	90                   	nop
    bf97:	c9                   	leave
    bf98:	c3                   	ret
    bf99:	90                   	nop

000000000000bf9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    bf9a:	55                   	push   %rbp
    bf9b:	48 89 e5             	mov    %rsp,%rbp
    bf9e:	48 83 ec 10          	sub    $0x10,%rsp
    bfa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfaa:	48 89 c7             	mov    %rax,%rdi
    bfad:	e8 8e 0f 00 00       	call   cf40 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>
    bfb2:	90                   	nop
    bfb3:	c9                   	leave
    bfb4:	c3                   	ret
    bfb5:	90                   	nop

000000000000bfb6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>:
      vector() = default;
    bfb6:	55                   	push   %rbp
    bfb7:	48 89 e5             	mov    %rsp,%rbp
    bfba:	48 83 ec 10          	sub    $0x10,%rsp
    bfbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfc6:	48 89 c7             	mov    %rax,%rdi
    bfc9:	e8 cc ff ff ff       	call   bf9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    bfce:	90                   	nop
    bfcf:	c9                   	leave
    bfd0:	c3                   	ret
    bfd1:	90                   	nop

000000000000bfd2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    bfd2:	55                   	push   %rbp
    bfd3:	48 89 e5             	mov    %rsp,%rbp
    bfd6:	48 83 ec 10          	sub    $0x10,%rsp
    bfda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfe2:	48 89 c7             	mov    %rax,%rdi
    bfe5:	e8 54 10 00 00       	call   d03e <_ZNSaI16VkPresentModeKHRED1Ev>
    bfea:	90                   	nop
    bfeb:	c9                   	leave
    bfec:	c3                   	ret
    bfed:	90                   	nop

000000000000bfee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>:
      _Vector_base() = default;
    bfee:	55                   	push   %rbp
    bfef:	48 89 e5             	mov    %rsp,%rbp
    bff2:	48 83 ec 10          	sub    $0x10,%rsp
    bff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bffe:	48 89 c7             	mov    %rax,%rdi
    c001:	e8 10 10 00 00       	call   d016 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>
    c006:	90                   	nop
    c007:	c9                   	leave
    c008:	c3                   	ret
    c009:	90                   	nop

000000000000c00a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>:
      vector() = default;
    c00a:	55                   	push   %rbp
    c00b:	48 89 e5             	mov    %rsp,%rbp
    c00e:	48 83 ec 10          	sub    $0x10,%rsp
    c012:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c016:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c01a:	48 89 c7             	mov    %rax,%rdi
    c01d:	e8 cc ff ff ff       	call   bfee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1Ev>
    c022:	90                   	nop
    c023:	c9                   	leave
    c024:	c3                   	ret
    c025:	90                   	nop

000000000000c026 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsC1Ev>:

  VkSurfaceKHR surface;

  VkQueue presentQueue;

  struct SwapChainSupportDetails {
    c026:	55                   	push   %rbp
    c027:	48 89 e5             	mov    %rsp,%rbp
    c02a:	48 83 ec 10          	sub    $0x10,%rsp
    c02e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c032:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c036:	48 83 c0 38          	add    $0x38,%rax
    c03a:	48 89 c7             	mov    %rax,%rdi
    c03d:	e8 74 ff ff ff       	call   bfb6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1Ev>
    c042:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c046:	48 83 c0 50          	add    $0x50,%rax
    c04a:	48 89 c7             	mov    %rax,%rdi
    c04d:	e8 b8 ff ff ff       	call   c00a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1Ev>
    c052:	90                   	nop
    c053:	c9                   	leave
    c054:	c3                   	ret
    c055:	90                   	nop

000000000000c056 <_ZN4rtvc17RenderApplication23SwapChainSupportDetailsD1Ev>:
    c056:	55                   	push   %rbp
    c057:	48 89 e5             	mov    %rsp,%rbp
    c05a:	48 83 ec 10          	sub    $0x10,%rsp
    c05e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c066:	48 83 c0 50          	add    $0x50,%rax
    c06a:	48 89 c7             	mov    %rax,%rdi
    c06d:	e8 36 10 00 00       	call   d0a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    c072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c076:	48 83 c0 38          	add    $0x38,%rax
    c07a:	48 89 c7             	mov    %rax,%rdi
    c07d:	e8 50 0f 00 00       	call   cfd2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    c082:	90                   	nop
    c083:	c9                   	leave
    c084:	c3                   	ret
    c085:	90                   	nop

000000000000c086 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    c086:	55                   	push   %rbp
    c087:	48 89 e5             	mov    %rsp,%rbp
    c08a:	48 83 ec 10          	sub    $0x10,%rsp
    c08e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c096:	48 89 c7             	mov    %rax,%rdi
    c099:	e8 aa 14 00 00       	call   d548 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>
    c09e:	90                   	nop
    c09f:	c9                   	leave
    c0a0:	c3                   	ret
    c0a1:	90                   	nop

000000000000c0a2 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      _Vector_base() = default;
    c0a2:	55                   	push   %rbp
    c0a3:	48 89 e5             	mov    %rsp,%rbp
    c0a6:	48 83 ec 10          	sub    $0x10,%rsp
    c0aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0b2:	48 89 c7             	mov    %rax,%rdi
    c0b5:	e8 66 14 00 00       	call   d520 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>
    c0ba:	90                   	nop
    c0bb:	c9                   	leave
    c0bc:	c3                   	ret
    c0bd:	90                   	nop

000000000000c0be <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>:
      vector() = default;
    c0be:	55                   	push   %rbp
    c0bf:	48 89 e5             	mov    %rsp,%rbp
    c0c2:	48 83 ec 10          	sub    $0x10,%rsp
    c0c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ce:	48 89 c7             	mov    %rax,%rdi
    c0d1:	e8 cc ff ff ff       	call   c0a2 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EEC1Ev>
    c0d6:	90                   	nop
    c0d7:	c9                   	leave
    c0d8:	c3                   	ret
    c0d9:	90                   	nop

000000000000c0da <_ZNRSt8optionalIjE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    c0da:	55                   	push   %rbp
    c0db:	48 89 e5             	mov    %rsp,%rbp
    c0de:	48 83 ec 10          	sub    $0x10,%rsp
    c0e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    c0e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0ea:	48 89 c7             	mov    %rax,%rdi
    c0ed:	e8 1a 00 00 00       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    c0f2:	84 c0                	test   %al,%al
    c0f4:	74 0e                	je     c104 <_ZNRSt8optionalIjE5valueEv+0x2a>
	  return this->_M_get();
    c0f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fa:	48 89 c7             	mov    %rax,%rdi
    c0fd:	e8 fe 14 00 00       	call   d600 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    c102:	eb 05                	jmp    c109 <_ZNRSt8optionalIjE5valueEv+0x2f>
	__throw_bad_optional_access();
    c104:	e8 fa fc ff ff       	call   be03 <_ZSt27__throw_bad_optional_accessv>
      }
    c109:	c9                   	leave
    c10a:	c3                   	ret
    c10b:	90                   	nop

000000000000c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    c10c:	55                   	push   %rbp
    c10d:	48 89 e5             	mov    %rsp,%rbp
    c110:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    c114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c118:	0f b6 40 04          	movzbl 0x4(%rax),%eax
    c11c:	5d                   	pop    %rbp
    c11d:	c3                   	ret

000000000000c11e <_ZNSt3setIjSt4lessIjESaIjEED1Ev>:
    c11e:	55                   	push   %rbp
    c11f:	48 89 e5             	mov    %rsp,%rbp
    c122:	48 83 ec 10          	sub    $0x10,%rsp
    c126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c12a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c12e:	48 89 c7             	mov    %rax,%rdi
    c131:	e8 10 16 00 00       	call   d746 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    c136:	90                   	nop
    c137:	c9                   	leave
    c138:	c3                   	ret
    c139:	90                   	nop

000000000000c13a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    c13a:	55                   	push   %rbp
    c13b:	48 89 e5             	mov    %rsp,%rbp
    c13e:	48 83 ec 10          	sub    $0x10,%rsp
    c142:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c146:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c14a:	48 89 c7             	mov    %rax,%rdi
    c14d:	e8 0e 7f ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    c152:	90                   	nop
    c153:	c9                   	leave
    c154:	c3                   	ret
    c155:	90                   	nop

000000000000c156 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4dataEv>:
 	           : _AT_Type::_S_ref(_M_elems, 0);
      }

      [[__gnu__::__const__, __nodiscard__]]
      _GLIBCXX17_CONSTEXPR pointer
      data() noexcept
    c156:	55                   	push   %rbp
    c157:	48 89 e5             	mov    %rsp,%rbp
    c15a:	48 83 ec 10          	sub    $0x10,%rsp
    c15e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _AT_Type::_S_ptr(_M_elems); }
    c162:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c166:	48 89 c7             	mov    %rax,%rdi
    c169:	e8 02 00 00 00       	call   c170 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>
    c16e:	c9                   	leave
    c16f:	c3                   	ret

000000000000c170 <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_ptrERA2_KS0_>:
      _S_ptr(const _Type& __t) noexcept
    c170:	55                   	push   %rbp
    c171:	48 89 e5             	mov    %rsp,%rbp
    c174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return const_cast<_Tp*>(__t); }
    c178:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c17c:	5d                   	pop    %rbp
    c17d:	c3                   	ret

000000000000c17e <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    c17e:	55                   	push   %rbp
    c17f:	48 89 e5             	mov    %rsp,%rbp
    c182:	48 83 ec 20          	sub    $0x20,%rsp
    c186:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    c18a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c191:	00 
      while (!eq(__p[__i], char_type()))
    c192:	eb 05                	jmp    c199 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    c194:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    c199:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    c19d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1a5:	48 01 c2             	add    %rax,%rdx
    c1a8:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    c1ac:	48 89 c6             	mov    %rax,%rsi
    c1af:	48 89 d7             	mov    %rdx,%rdi
    c1b2:	e8 f1 22 00 00       	call   e4a8 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    c1b7:	83 f0 01             	xor    $0x1,%eax
    c1ba:	84 c0                	test   %al,%al
    c1bc:	75 d6                	jne    c194 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    c1be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    c1c2:	c9                   	leave
    c1c3:	c3                   	ret

000000000000c1c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    c1c4:	55                   	push   %rbp
    c1c5:	48 89 e5             	mov    %rsp,%rbp
    c1c8:	48 83 ec 10          	sub    $0x10,%rsp
    c1cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1d4:	48 89 c7             	mov    %rax,%rdi
    c1d7:	e8 84 7e ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    c1dc:	90                   	nop
    c1dd:	c9                   	leave
    c1de:	c3                   	ret
    c1df:	90                   	nop

000000000000c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    c1e0:	55                   	push   %rbp
    c1e1:	48 89 e5             	mov    %rsp,%rbp
    c1e4:	53                   	push   %rbx
    c1e5:	48 83 ec 38          	sub    $0x38,%rsp
    c1e9:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c1ed:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c1f1:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    c1f5:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    c1f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c1fd:	48 89 c7             	mov    %rax,%rdi
    c200:	e8 db 80 ff ff       	call   42e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    c205:	48 89 c1             	mov    %rax,%rcx
    c208:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    c20c:	48 89 c2             	mov    %rax,%rdx
    c20f:	48 89 ce             	mov    %rcx,%rsi
    c212:	48 89 df             	mov    %rbx,%rdi
    c215:	e8 86 82 ff ff       	call   44a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    c21a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    c21f:	75 0f                	jne    c230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    c221:	48 8d 05 a8 f5 00 00 	lea    0xf5a8(%rip),%rax        # 1b7d0 <_ZN6__pstl9execution2v1L5unseqE+0x505>
    c228:	48 89 c7             	mov    %rax,%rdi
    c22b:	e8 40 80 ff ff       	call   4270 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    c230:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c234:	48 89 c7             	mov    %rax,%rdi
    c237:	e8 e6 fa ff ff       	call   bd22 <_ZNSt11char_traitsIcE6lengthEPKc>
    c23c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    c240:	48 01 d0             	add    %rdx,%rax
    c243:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    c247:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c24b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c24f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c253:	48 89 ce             	mov    %rcx,%rsi
    c256:	48 89 c7             	mov    %rax,%rdi
    c259:	e8 b0 22 00 00       	call   e50e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    c25e:	eb 1a                	jmp    c27a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    c260:	48 89 c3             	mov    %rax,%rbx
    c263:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c267:	48 89 c7             	mov    %rax,%rdi
    c26a:	e8 55 ff ff ff       	call   c1c4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    c26f:	48 89 d8             	mov    %rbx,%rax
    c272:	48 89 c7             	mov    %rax,%rdi
    c275:	e8 f6 85 ff ff       	call   4870 <_Unwind_Resume@plt>
    c27a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c27e:	c9                   	leave
    c27f:	c3                   	ret

000000000000c280 <_ZNSaIjED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c280:	55                   	push   %rbp
    c281:	48 89 e5             	mov    %rsp,%rbp
    c284:	48 83 ec 10          	sub    $0x10,%rsp
    c288:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c28c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c290:	48 89 c7             	mov    %rax,%rdi
    c293:	e8 5e 23 00 00       	call   e5f6 <_ZNSt15__new_allocatorIjED1Ev>
    c298:	90                   	nop
    c299:	c9                   	leave
    c29a:	c3                   	ret
    c29b:	90                   	nop

000000000000c29c <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c29c:	55                   	push   %rbp
    c29d:	48 89 e5             	mov    %rsp,%rbp
    c2a0:	48 83 ec 10          	sub    $0x10,%rsp
    c2a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ac:	48 89 c7             	mov    %rax,%rdi
    c2af:	e8 4e 23 00 00       	call   e602 <_ZNSt15__new_allocatorIPKcEC1Ev>
    c2b4:	90                   	nop
    c2b5:	c9                   	leave
    c2b6:	c3                   	ret
    c2b7:	90                   	nop

000000000000c2b8 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c2b8:	55                   	push   %rbp
    c2b9:	48 89 e5             	mov    %rsp,%rbp
    c2bc:	48 83 ec 10          	sub    $0x10,%rsp
    c2c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2c8:	48 89 c7             	mov    %rax,%rdi
    c2cb:	e8 3e 23 00 00       	call   e60e <_ZNSt15__new_allocatorIPKcED1Ev>
    c2d0:	90                   	nop
    c2d1:	c9                   	leave
    c2d2:	c3                   	ret
    c2d3:	90                   	nop

000000000000c2d4 <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c2d4:	55                   	push   %rbp
    c2d5:	48 89 e5             	mov    %rsp,%rbp
    c2d8:	48 83 ec 10          	sub    $0x10,%rsp
    c2dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c2e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2e4:	48 89 c7             	mov    %rax,%rdi
    c2e7:	e8 54 23 00 00       	call   e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    c2ec:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c2ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2f3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c2f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2fb:	48 8b 00             	mov    (%rax),%rax
    c2fe:	48 89 ce             	mov    %rcx,%rsi
    c301:	48 89 c7             	mov    %rax,%rdi
    c304:	e8 45 23 00 00       	call   e64e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
    c309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c30d:	48 89 c7             	mov    %rax,%rdi
    c310:	e8 43 06 00 00       	call   c958 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    c315:	90                   	nop
    c316:	c9                   	leave
    c317:	c3                   	ret

000000000000c318 <_ZNSaIP9VkImage_TED1Ev>:
    c318:	55                   	push   %rbp
    c319:	48 89 e5             	mov    %rsp,%rbp
    c31c:	48 83 ec 10          	sub    $0x10,%rsp
    c320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c324:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c328:	48 89 c7             	mov    %rax,%rdi
    c32b:	e8 48 23 00 00       	call   e678 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    c330:	90                   	nop
    c331:	c9                   	leave
    c332:	c3                   	ret
    c333:	90                   	nop

000000000000c334 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c334:	55                   	push   %rbp
    c335:	48 89 e5             	mov    %rsp,%rbp
    c338:	48 83 ec 10          	sub    $0x10,%rsp
    c33c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c344:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c348:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c34c:	48 8b 00             	mov    (%rax),%rax
    c34f:	48 29 c2             	sub    %rax,%rdx
    c352:	48 89 d0             	mov    %rdx,%rax
    c355:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c359:	48 89 c2             	mov    %rax,%rdx
    c35c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c360:	48 8b 08             	mov    (%rax),%rcx
    c363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c367:	48 89 ce             	mov    %rcx,%rsi
    c36a:	48 89 c7             	mov    %rax,%rdi
    c36d:	e8 12 23 00 00       	call   e684 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c372:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c376:	48 89 c7             	mov    %rax,%rdi
    c379:	e8 c6 fa ff ff       	call   be44 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    c37e:	90                   	nop
    c37f:	c9                   	leave
    c380:	c3                   	ret
    c381:	90                   	nop

000000000000c382 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c382:	55                   	push   %rbp
    c383:	48 89 e5             	mov    %rsp,%rbp
    c386:	48 83 ec 10          	sub    $0x10,%rsp
    c38a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c38e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c392:	48 89 c7             	mov    %rax,%rdi
    c395:	e8 20 23 00 00       	call   e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c39a:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c39d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3a1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c3a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3a9:	48 8b 00             	mov    (%rax),%rax
    c3ac:	48 89 ce             	mov    %rcx,%rsi
    c3af:	48 89 c7             	mov    %rax,%rdi
    c3b2:	e8 11 23 00 00       	call   e6c8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    c3b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3bb:	48 89 c7             	mov    %rax,%rdi
    c3be:	e8 71 ff ff ff       	call   c334 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    c3c3:	90                   	nop
    c3c4:	c9                   	leave
    c3c5:	c3                   	ret

000000000000c3c6 <_ZNSaIP13VkImageView_TED1Ev>:
    c3c6:	55                   	push   %rbp
    c3c7:	48 89 e5             	mov    %rsp,%rbp
    c3ca:	48 83 ec 10          	sub    $0x10,%rsp
    c3ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3d6:	48 89 c7             	mov    %rax,%rdi
    c3d9:	e8 14 23 00 00       	call   e6f2 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
    c3de:	90                   	nop
    c3df:	c9                   	leave
    c3e0:	c3                   	ret
    c3e1:	90                   	nop

000000000000c3e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c3e2:	55                   	push   %rbp
    c3e3:	48 89 e5             	mov    %rsp,%rbp
    c3e6:	48 83 ec 10          	sub    $0x10,%rsp
    c3ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c3ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c3f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3fa:	48 8b 00             	mov    (%rax),%rax
    c3fd:	48 29 c2             	sub    %rax,%rdx
    c400:	48 89 d0             	mov    %rdx,%rax
    c403:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c407:	48 89 c2             	mov    %rax,%rdx
    c40a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c40e:	48 8b 08             	mov    (%rax),%rcx
    c411:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c415:	48 89 ce             	mov    %rcx,%rsi
    c418:	48 89 c7             	mov    %rax,%rdi
    c41b:	e8 de 22 00 00       	call   e6fe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c420:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c424:	48 89 c7             	mov    %rax,%rdi
    c427:	e8 34 fa ff ff       	call   be60 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
    c42c:	90                   	nop
    c42d:	c9                   	leave
    c42e:	c3                   	ret
    c42f:	90                   	nop

000000000000c430 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c430:	55                   	push   %rbp
    c431:	48 89 e5             	mov    %rsp,%rbp
    c434:	48 83 ec 10          	sub    $0x10,%rsp
    c438:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c43c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c440:	48 89 c7             	mov    %rax,%rdi
    c443:	e8 ec 22 00 00       	call   e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c448:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c44b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c44f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c453:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c457:	48 8b 00             	mov    (%rax),%rax
    c45a:	48 89 ce             	mov    %rcx,%rsi
    c45d:	48 89 c7             	mov    %rax,%rdi
    c460:	e8 dd 22 00 00       	call   e742 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
    c465:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c469:	48 89 c7             	mov    %rax,%rdi
    c46c:	e8 71 ff ff ff       	call   c3e2 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
    c471:	90                   	nop
    c472:	c9                   	leave
    c473:	c3                   	ret

000000000000c474 <_ZNSaIP15VkFramebuffer_TED1Ev>:
    c474:	55                   	push   %rbp
    c475:	48 89 e5             	mov    %rsp,%rbp
    c478:	48 83 ec 10          	sub    $0x10,%rsp
    c47c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c484:	48 89 c7             	mov    %rax,%rdi
    c487:	e8 e0 22 00 00       	call   e76c <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>
    c48c:	90                   	nop
    c48d:	c9                   	leave
    c48e:	c3                   	ret
    c48f:	90                   	nop

000000000000c490 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c490:	55                   	push   %rbp
    c491:	48 89 e5             	mov    %rsp,%rbp
    c494:	48 83 ec 10          	sub    $0x10,%rsp
    c498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c49c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a0:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c4a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4a8:	48 8b 00             	mov    (%rax),%rax
    c4ab:	48 29 c2             	sub    %rax,%rdx
    c4ae:	48 89 d0             	mov    %rdx,%rax
    c4b1:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c4b5:	48 89 c2             	mov    %rax,%rdx
    c4b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4bc:	48 8b 08             	mov    (%rax),%rcx
    c4bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4c3:	48 89 ce             	mov    %rcx,%rsi
    c4c6:	48 89 c7             	mov    %rax,%rdi
    c4c9:	e8 aa 22 00 00       	call   e778 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c4ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4d2:	48 89 c7             	mov    %rax,%rdi
    c4d5:	e8 a2 f9 ff ff       	call   be7c <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE12_Vector_implD1Ev>
    c4da:	90                   	nop
    c4db:	c9                   	leave
    c4dc:	c3                   	ret
    c4dd:	90                   	nop

000000000000c4de <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c4de:	55                   	push   %rbp
    c4df:	48 89 e5             	mov    %rsp,%rbp
    c4e2:	48 83 ec 10          	sub    $0x10,%rsp
    c4e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c4ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ee:	48 89 c7             	mov    %rax,%rdi
    c4f1:	e8 b8 22 00 00       	call   e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c4f6:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c4f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4fd:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c501:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c505:	48 8b 00             	mov    (%rax),%rax
    c508:	48 89 ce             	mov    %rcx,%rsi
    c50b:	48 89 c7             	mov    %rax,%rdi
    c50e:	e8 a9 22 00 00       	call   e7bc <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
      }
    c513:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c517:	48 89 c7             	mov    %rax,%rdi
    c51a:	e8 71 ff ff ff       	call   c490 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EED1Ev>
    c51f:	90                   	nop
    c520:	c9                   	leave
    c521:	c3                   	ret

000000000000c522 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
    c522:	55                   	push   %rbp
    c523:	48 89 e5             	mov    %rsp,%rbp
    c526:	48 83 ec 10          	sub    $0x10,%rsp
    c52a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c52e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c532:	48 89 c7             	mov    %rax,%rdi
    c535:	e8 ac 22 00 00       	call   e7e6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    c53a:	90                   	nop
    c53b:	c9                   	leave
    c53c:	c3                   	ret
    c53d:	90                   	nop

000000000000c53e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c53e:	55                   	push   %rbp
    c53f:	48 89 e5             	mov    %rsp,%rbp
    c542:	48 83 ec 10          	sub    $0x10,%rsp
    c546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c54a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c54e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c556:	48 8b 00             	mov    (%rax),%rax
    c559:	48 29 c2             	sub    %rax,%rdx
    c55c:	48 89 d0             	mov    %rdx,%rax
    c55f:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c563:	48 89 c2             	mov    %rax,%rdx
    c566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c56a:	48 8b 08             	mov    (%rax),%rcx
    c56d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c571:	48 89 ce             	mov    %rcx,%rsi
    c574:	48 89 c7             	mov    %rax,%rdi
    c577:	e8 76 22 00 00       	call   e7f2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c57c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c580:	48 89 c7             	mov    %rax,%rdi
    c583:	e8 10 f9 ff ff       	call   be98 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    c588:	90                   	nop
    c589:	c9                   	leave
    c58a:	c3                   	ret
    c58b:	90                   	nop

000000000000c58c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c58c:	55                   	push   %rbp
    c58d:	48 89 e5             	mov    %rsp,%rbp
    c590:	48 83 ec 10          	sub    $0x10,%rsp
    c594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c598:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c59c:	48 89 c7             	mov    %rax,%rdi
    c59f:	e8 84 22 00 00       	call   e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c5a4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c5a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5ab:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c5af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5b3:	48 8b 00             	mov    (%rax),%rax
    c5b6:	48 89 ce             	mov    %rcx,%rsi
    c5b9:	48 89 c7             	mov    %rax,%rdi
    c5bc:	e8 75 22 00 00       	call   e836 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
      }
    c5c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5c5:	48 89 c7             	mov    %rax,%rdi
    c5c8:	e8 71 ff ff ff       	call   c53e <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    c5cd:	90                   	nop
    c5ce:	c9                   	leave
    c5cf:	c3                   	ret

000000000000c5d0 <_ZNSaIP13VkSemaphore_TED1Ev>:
    c5d0:	55                   	push   %rbp
    c5d1:	48 89 e5             	mov    %rsp,%rbp
    c5d4:	48 83 ec 10          	sub    $0x10,%rsp
    c5d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c5dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5e0:	48 89 c7             	mov    %rax,%rdi
    c5e3:	e8 78 22 00 00       	call   e860 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>
    c5e8:	90                   	nop
    c5e9:	c9                   	leave
    c5ea:	c3                   	ret
    c5eb:	90                   	nop

000000000000c5ec <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c5ec:	55                   	push   %rbp
    c5ed:	48 89 e5             	mov    %rsp,%rbp
    c5f0:	48 83 ec 10          	sub    $0x10,%rsp
    c5f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c5f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c5fc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c600:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c604:	48 8b 00             	mov    (%rax),%rax
    c607:	48 29 c2             	sub    %rax,%rdx
    c60a:	48 89 d0             	mov    %rdx,%rax
    c60d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c611:	48 89 c2             	mov    %rax,%rdx
    c614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c618:	48 8b 08             	mov    (%rax),%rcx
    c61b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c61f:	48 89 ce             	mov    %rcx,%rsi
    c622:	48 89 c7             	mov    %rax,%rdi
    c625:	e8 42 22 00 00       	call   e86c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c62a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c62e:	48 89 c7             	mov    %rax,%rdi
    c631:	e8 7e f8 ff ff       	call   beb4 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE12_Vector_implD1Ev>
    c636:	90                   	nop
    c637:	c9                   	leave
    c638:	c3                   	ret
    c639:	90                   	nop

000000000000c63a <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c63a:	55                   	push   %rbp
    c63b:	48 89 e5             	mov    %rsp,%rbp
    c63e:	48 83 ec 10          	sub    $0x10,%rsp
    c642:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c646:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c64a:	48 89 c7             	mov    %rax,%rdi
    c64d:	e8 50 22 00 00       	call   e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c652:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c655:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c659:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c65d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c661:	48 8b 00             	mov    (%rax),%rax
    c664:	48 89 ce             	mov    %rcx,%rsi
    c667:	48 89 c7             	mov    %rax,%rdi
    c66a:	e8 41 22 00 00       	call   e8b0 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
      }
    c66f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c673:	48 89 c7             	mov    %rax,%rdi
    c676:	e8 71 ff ff ff       	call   c5ec <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EED1Ev>
    c67b:	90                   	nop
    c67c:	c9                   	leave
    c67d:	c3                   	ret

000000000000c67e <_ZNSaIP9VkFence_TED1Ev>:
    c67e:	55                   	push   %rbp
    c67f:	48 89 e5             	mov    %rsp,%rbp
    c682:	48 83 ec 10          	sub    $0x10,%rsp
    c686:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c68a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c68e:	48 89 c7             	mov    %rax,%rdi
    c691:	e8 44 22 00 00       	call   e8da <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>
    c696:	90                   	nop
    c697:	c9                   	leave
    c698:	c3                   	ret
    c699:	90                   	nop

000000000000c69a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c69a:	55                   	push   %rbp
    c69b:	48 89 e5             	mov    %rsp,%rbp
    c69e:	48 83 ec 10          	sub    $0x10,%rsp
    c6a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6aa:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c6ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b2:	48 8b 00             	mov    (%rax),%rax
    c6b5:	48 29 c2             	sub    %rax,%rdx
    c6b8:	48 89 d0             	mov    %rdx,%rax
    c6bb:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c6bf:	48 89 c2             	mov    %rax,%rdx
    c6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c6:	48 8b 08             	mov    (%rax),%rcx
    c6c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6cd:	48 89 ce             	mov    %rcx,%rsi
    c6d0:	48 89 c7             	mov    %rax,%rdi
    c6d3:	e8 0e 22 00 00       	call   e8e6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    c6d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6dc:	48 89 c7             	mov    %rax,%rdi
    c6df:	e8 ec f7 ff ff       	call   bed0 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE12_Vector_implD1Ev>
    c6e4:	90                   	nop
    c6e5:	c9                   	leave
    c6e6:	c3                   	ret
    c6e7:	90                   	nop

000000000000c6e8 <_ZNSt6vectorIP9VkFence_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c6e8:	55                   	push   %rbp
    c6e9:	48 89 e5             	mov    %rsp,%rbp
    c6ec:	48 83 ec 10          	sub    $0x10,%rsp
    c6f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c6f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6f8:	48 89 c7             	mov    %rax,%rdi
    c6fb:	e8 1c 22 00 00       	call   e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
    c700:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c703:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c707:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c70b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c70f:	48 8b 00             	mov    (%rax),%rax
    c712:	48 89 ce             	mov    %rcx,%rsi
    c715:	48 89 c7             	mov    %rax,%rdi
    c718:	e8 0d 22 00 00       	call   e92a <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
      }
    c71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c721:	48 89 c7             	mov    %rax,%rdi
    c724:	e8 71 ff ff ff       	call   c69a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EED1Ev>
    c729:	90                   	nop
    c72a:	c9                   	leave
    c72b:	c3                   	ret

000000000000c72c <_ZNKSt8optionalIjE9has_valueEv>:
      constexpr bool has_value() const noexcept
    c72c:	55                   	push   %rbp
    c72d:	48 89 e5             	mov    %rsp,%rbp
    c730:	48 83 ec 10          	sub    $0x10,%rsp
    c734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
    c738:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c73c:	48 89 c7             	mov    %rax,%rdi
    c73f:	e8 c8 f9 ff ff       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    c744:	c9                   	leave
    c745:	c3                   	ret

000000000000c746 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c746:	55                   	push   %rbp
    c747:	48 89 e5             	mov    %rsp,%rbp
    c74a:	48 83 ec 10          	sub    $0x10,%rsp
    c74e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c756:	48 89 c7             	mov    %rax,%rdi
    c759:	e8 f6 21 00 00       	call   e954 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    c75e:	90                   	nop
    c75f:	c9                   	leave
    c760:	c3                   	ret
    c761:	90                   	nop

000000000000c762 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c762:	55                   	push   %rbp
    c763:	48 89 e5             	mov    %rsp,%rbp
    c766:	48 83 ec 10          	sub    $0x10,%rsp
    c76a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c76e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c772:	48 89 c7             	mov    %rax,%rdi
    c775:	e8 e6 21 00 00       	call   e960 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    c77a:	90                   	nop
    c77b:	c9                   	leave
    c77c:	c3                   	ret
    c77d:	90                   	nop

000000000000c77e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c77e:	55                   	push   %rbp
    c77f:	48 89 e5             	mov    %rsp,%rbp
    c782:	53                   	push   %rbx
    c783:	48 83 ec 28          	sub    $0x28,%rsp
    c787:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c78b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c78f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c793:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c797:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c79b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c79f:	48 89 d6             	mov    %rdx,%rsi
    c7a2:	48 89 c7             	mov    %rax,%rdi
    c7a5:	e8 c1 21 00 00       	call   e96b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    c7aa:	48 89 c1             	mov    %rax,%rcx
    c7ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c7b1:	48 89 c2             	mov    %rax,%rdx
    c7b4:	48 89 ce             	mov    %rcx,%rsi
    c7b7:	48 89 df             	mov    %rbx,%rdi
    c7ba:	e8 0d 22 00 00       	call   e9cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    c7bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c7c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7c7:	48 89 d6             	mov    %rdx,%rsi
    c7ca:	48 89 c7             	mov    %rax,%rdi
    c7cd:	e8 58 22 00 00       	call   ea2a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    c7d2:	eb 1a                	jmp    c7ee <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    c7d4:	48 89 c3             	mov    %rax,%rbx
    c7d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7db:	48 89 c7             	mov    %rax,%rdi
    c7de:	e8 79 00 00 00       	call   c85c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c7e3:	48 89 d8             	mov    %rbx,%rax
    c7e6:	48 89 c7             	mov    %rax,%rdi
    c7e9:	e8 82 80 ff ff       	call   4870 <_Unwind_Resume@plt>
    c7ee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c7f2:	c9                   	leave
    c7f3:	c3                   	ret

000000000000c7f4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    c7f4:	55                   	push   %rbp
    c7f5:	48 89 e5             	mov    %rsp,%rbp
    c7f8:	48 83 ec 10          	sub    $0x10,%rsp
    c7fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    c800:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c804:	48 89 c7             	mov    %rax,%rdi
    c807:	e8 5e 22 00 00       	call   ea6a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    c80c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    c80f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c813:	48 8b 48 08          	mov    0x8(%rax),%rcx
    c817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c81b:	48 8b 00             	mov    (%rax),%rax
    c81e:	48 89 ce             	mov    %rcx,%rsi
    c821:	48 89 c7             	mov    %rax,%rdi
    c824:	e8 4f 22 00 00       	call   ea78 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    c829:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c82d:	48 89 c7             	mov    %rax,%rdi
    c830:	e8 27 00 00 00       	call   c85c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    c835:	90                   	nop
    c836:	c9                   	leave
    c837:	c3                   	ret

000000000000c838 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    c838:	55                   	push   %rbp
    c839:	48 89 e5             	mov    %rsp,%rbp
    c83c:	48 83 ec 10          	sub    $0x10,%rsp
    c840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    c844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c848:	48 8b 10             	mov    (%rax),%rdx
    c84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c84f:	48 89 d6             	mov    %rdx,%rsi
    c852:	48 89 c7             	mov    %rax,%rdi
    c855:	e8 48 22 00 00       	call   eaa2 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    c85a:	c9                   	leave
    c85b:	c3                   	ret

000000000000c85c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c85c:	55                   	push   %rbp
    c85d:	48 89 e5             	mov    %rsp,%rbp
    c860:	48 83 ec 10          	sub    $0x10,%rsp
    c864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c86c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c870:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c874:	48 8b 00             	mov    (%rax),%rax
    c877:	48 29 c2             	sub    %rax,%rdx
    c87a:	48 c1 fa 02          	sar    $0x2,%rdx
    c87e:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    c885:	fc c0 0f 
    c888:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    c88c:	48 89 c2             	mov    %rax,%rdx
    c88f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c893:	48 8b 08             	mov    (%rax),%rcx
    c896:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c89a:	48 89 ce             	mov    %rcx,%rsi
    c89d:	48 89 c7             	mov    %rax,%rdi
    c8a0:	e8 35 22 00 00       	call   eada <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    c8a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8a9:	48 89 c7             	mov    %rax,%rdi
    c8ac:	e8 79 f6 ff ff       	call   bf2a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    c8b1:	90                   	nop
    c8b2:	c9                   	leave
    c8b3:	c3                   	ret

000000000000c8b4 <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_>:
	vector(_InputIterator __first, _InputIterator __last,
    c8b4:	55                   	push   %rbp
    c8b5:	48 89 e5             	mov    %rsp,%rbp
    c8b8:	53                   	push   %rbx
    c8b9:	48 83 ec 38          	sub    $0x38,%rsp
    c8bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    c8c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    c8c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    c8c9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	: _Base(__a)
    c8cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8d1:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    c8d5:	48 89 d6             	mov    %rdx,%rsi
    c8d8:	48 89 c7             	mov    %rax,%rdi
    c8db:	e8 3a 1d 00 00       	call   e61a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
			      std::__iterator_category(__first));
    c8e0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c8e4:	48 89 c7             	mov    %rax,%rdi
    c8e7:	e8 23 22 00 00       	call   eb0f <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
	  _M_range_initialize(__first, __last,
    c8ec:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c8f0:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    c8f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c8f8:	48 89 ce             	mov    %rcx,%rsi
    c8fb:	48 89 c7             	mov    %rax,%rdi
    c8fe:	e8 49 22 00 00       	call   eb4c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>
	}
    c903:	eb 1a                	jmp    c91f <_ZNSt6vectorIPKcSaIS1_EEC1IPS1_vEET_S6_RKS2_+0x6b>
    c905:	48 89 c3             	mov    %rax,%rbx
    c908:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c90c:	48 89 c7             	mov    %rax,%rdi
    c90f:	e8 44 00 00 00       	call   c958 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    c914:	48 89 d8             	mov    %rbx,%rax
    c917:	48 89 c7             	mov    %rax,%rdi
    c91a:	e8 51 7f ff ff       	call   4870 <_Unwind_Resume@plt>
    c91f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c923:	c9                   	leave
    c924:	c3                   	ret
    c925:	90                   	nop

000000000000c926 <_ZNSt6vectorIPKcSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
    c926:	55                   	push   %rbp
    c927:	48 89 e5             	mov    %rsp,%rbp
    c92a:	48 83 ec 10          	sub    $0x10,%rsp
    c92e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c932:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
    c936:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c93a:	48 89 c7             	mov    %rax,%rdi
    c93d:	e8 b9 22 00 00       	call   ebfb <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>
    c942:	48 89 c2             	mov    %rax,%rdx
    c945:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c949:	48 89 d6             	mov    %rdx,%rsi
    c94c:	48 89 c7             	mov    %rax,%rdi
    c94f:	e8 b6 22 00 00       	call   ec0a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
    c954:	90                   	nop
    c955:	c9                   	leave
    c956:	c3                   	ret
    c957:	90                   	nop

000000000000c958 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    c958:	55                   	push   %rbp
    c959:	48 89 e5             	mov    %rsp,%rbp
    c95c:	48 83 ec 10          	sub    $0x10,%rsp
    c960:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    c964:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c968:	48 8b 50 10          	mov    0x10(%rax),%rdx
    c96c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c970:	48 8b 00             	mov    (%rax),%rax
    c973:	48 29 c2             	sub    %rax,%rdx
    c976:	48 89 d0             	mov    %rdx,%rax
    c979:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    c97d:	48 89 c2             	mov    %rax,%rdx
    c980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c984:	48 8b 08             	mov    (%rax),%rcx
    c987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c98b:	48 89 ce             	mov    %rcx,%rsi
    c98e:	48 89 c7             	mov    %rax,%rdi
    c991:	e8 3e 23 00 00       	call   ecd4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    c996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c99a:	48 89 c7             	mov    %rax,%rdi
    c99d:	e8 a4 f5 ff ff       	call   bf46 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    c9a2:	90                   	nop
    c9a3:	c9                   	leave
    c9a4:	c3                   	ret
    c9a5:	90                   	nop

000000000000c9a6 <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    c9a6:	55                   	push   %rbp
    c9a7:	48 89 e5             	mov    %rsp,%rbp
    c9aa:	48 83 ec 10          	sub    $0x10,%rsp
    c9ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9b6:	48 89 c7             	mov    %rax,%rdi
    c9b9:	e8 4c 23 00 00       	call   ed0a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    c9be:	90                   	nop
    c9bf:	c9                   	leave
    c9c0:	c3                   	ret
    c9c1:	90                   	nop

000000000000c9c2 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    c9c2:	55                   	push   %rbp
    c9c3:	48 89 e5             	mov    %rsp,%rbp
    c9c6:	48 83 ec 10          	sub    $0x10,%rsp
    c9ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c9ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9d2:	48 89 c7             	mov    %rax,%rdi
    c9d5:	e8 3c 23 00 00       	call   ed16 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    c9da:	90                   	nop
    c9db:	c9                   	leave
    c9dc:	c3                   	ret
    c9dd:	90                   	nop

000000000000c9de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    c9de:	55                   	push   %rbp
    c9df:	48 89 e5             	mov    %rsp,%rbp
    c9e2:	53                   	push   %rbx
    c9e3:	48 83 ec 28          	sub    $0x28,%rsp
    c9e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c9eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c9ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    c9f3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    c9f7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9fb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    c9ff:	48 89 d6             	mov    %rdx,%rsi
    ca02:	48 89 c7             	mov    %rax,%rdi
    ca05:	e8 17 23 00 00       	call   ed21 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    ca0a:	48 89 c1             	mov    %rax,%rcx
    ca0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ca11:	48 89 c2             	mov    %rax,%rdx
    ca14:	48 89 ce             	mov    %rcx,%rsi
    ca17:	48 89 df             	mov    %rbx,%rdi
    ca1a:	e8 7f 23 00 00       	call   ed9e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    ca1f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ca23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca27:	48 89 d6             	mov    %rdx,%rsi
    ca2a:	48 89 c7             	mov    %rax,%rdi
    ca2d:	e8 22 24 00 00       	call   ee54 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    ca32:	eb 1a                	jmp    ca4e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    ca34:	48 89 c3             	mov    %rax,%rbx
    ca37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca3b:	48 89 c7             	mov    %rax,%rdi
    ca3e:	e8 b9 23 00 00       	call   edfc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    ca43:	48 89 d8             	mov    %rbx,%rax
    ca46:	48 89 c7             	mov    %rax,%rdi
    ca49:	e8 22 7e ff ff       	call   4870 <_Unwind_Resume@plt>
    ca4e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca52:	c9                   	leave
    ca53:	c3                   	ret

000000000000ca54 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    ca54:	55                   	push   %rbp
    ca55:	48 89 e5             	mov    %rsp,%rbp
    ca58:	48 83 ec 10          	sub    $0x10,%rsp
    ca5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    ca60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca64:	48 89 c7             	mov    %rax,%rdi
    ca67:	e8 28 24 00 00       	call   ee94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ca6c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    ca6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca73:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ca77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca7b:	48 8b 00             	mov    (%rax),%rax
    ca7e:	48 89 ce             	mov    %rcx,%rsi
    ca81:	48 89 c7             	mov    %rax,%rdi
    ca84:	e8 19 24 00 00       	call   eea2 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    ca89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca8d:	48 89 c7             	mov    %rax,%rdi
    ca90:	e8 67 23 00 00       	call   edfc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    ca95:	90                   	nop
    ca96:	c9                   	leave
    ca97:	c3                   	ret

000000000000ca98 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    ca98:	55                   	push   %rbp
    ca99:	48 89 e5             	mov    %rsp,%rbp
    ca9c:	48 83 ec 10          	sub    $0x10,%rsp
    caa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    caa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caa8:	48 8b 10             	mov    (%rax),%rdx
    caab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caaf:	48 89 d6             	mov    %rdx,%rsi
    cab2:	48 89 c7             	mov    %rax,%rdi
    cab5:	e8 12 24 00 00       	call   eecc <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    caba:	c9                   	leave
    cabb:	c3                   	ret

000000000000cabc <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    cabc:	55                   	push   %rbp
    cabd:	48 89 e5             	mov    %rsp,%rbp
    cac0:	48 83 ec 20          	sub    $0x20,%rsp
    cac4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    cac8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cacc:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cad0:	48 89 d6             	mov    %rdx,%rsi
    cad3:	48 89 c7             	mov    %rax,%rdi
    cad6:	e8 03 24 00 00       	call   eede <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    cadb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cadf:	c9                   	leave
    cae0:	c3                   	ret
    cae1:	90                   	nop

000000000000cae2 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    cae2:	55                   	push   %rbp
    cae3:	48 89 e5             	mov    %rsp,%rbp
    cae6:	48 83 ec 20          	sub    $0x20,%rsp
    caea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    caee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    caf2:	48 8d 50 08          	lea    0x8(%rax),%rdx
    caf6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cafa:	48 89 d6             	mov    %rdx,%rsi
    cafd:	48 89 c7             	mov    %rax,%rdi
    cb00:	e8 d9 23 00 00       	call   eede <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
    cb05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb09:	c9                   	leave
    cb0a:	c3                   	ret

000000000000cb0b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cb0b:	55                   	push   %rbp
    cb0c:	48 89 e5             	mov    %rsp,%rbp
    cb0f:	53                   	push   %rbx
    cb10:	48 83 ec 18          	sub    $0x18,%rsp
    cb14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb18:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cb1c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb20:	48 89 c7             	mov    %rax,%rdi
    cb23:	e8 d4 23 00 00       	call   eefc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cb28:	48 8b 18             	mov    (%rax),%rbx
    cb2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cb2f:	48 89 c7             	mov    %rax,%rdi
    cb32:	e8 c5 23 00 00       	call   eefc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cb37:	48 8b 00             	mov    (%rax),%rax
    cb3a:	48 39 c3             	cmp    %rax,%rbx
    cb3d:	0f 95 c0             	setne  %al
    cb40:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb44:	c9                   	leave
    cb45:	c3                   	ret

000000000000cb46 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cb46:	55                   	push   %rbp
    cb47:	48 89 e5             	mov    %rsp,%rbp
    cb4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cb4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb52:	48 8b 00             	mov    (%rax),%rax
    cb55:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cb59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb5d:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cb60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cb64:	5d                   	pop    %rbp
    cb65:	c3                   	ret

000000000000cb66 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cb66:	55                   	push   %rbp
    cb67:	48 89 e5             	mov    %rsp,%rbp
    cb6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cb6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb72:	48 8b 00             	mov    (%rax),%rax
    cb75:	5d                   	pop    %rbp
    cb76:	c3                   	ret
    cb77:	90                   	nop

000000000000cb78 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cb78:	55                   	push   %rbp
    cb79:	48 89 e5             	mov    %rsp,%rbp
    cb7c:	48 83 ec 20          	sub    $0x20,%rsp
    cb80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cb84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cb88:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cb8c:	48 89 d6             	mov    %rdx,%rsi
    cb8f:	48 89 c7             	mov    %rax,%rdi
    cb92:	e8 73 23 00 00       	call   ef0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cb97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb9b:	c9                   	leave
    cb9c:	c3                   	ret
    cb9d:	90                   	nop

000000000000cb9e <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cb9e:	55                   	push   %rbp
    cb9f:	48 89 e5             	mov    %rsp,%rbp
    cba2:	48 83 ec 20          	sub    $0x20,%rsp
    cba6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cbaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbae:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cbb2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cbb6:	48 89 d6             	mov    %rdx,%rsi
    cbb9:	48 89 c7             	mov    %rax,%rdi
    cbbc:	e8 49 23 00 00       	call   ef0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cbc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cbc5:	c9                   	leave
    cbc6:	c3                   	ret

000000000000cbc7 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cbc7:	55                   	push   %rbp
    cbc8:	48 89 e5             	mov    %rsp,%rbp
    cbcb:	53                   	push   %rbx
    cbcc:	48 83 ec 18          	sub    $0x18,%rsp
    cbd0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbd4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cbd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbdc:	48 89 c7             	mov    %rax,%rdi
    cbdf:	e8 44 23 00 00       	call   ef28 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cbe4:	48 8b 18             	mov    (%rax),%rbx
    cbe7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cbeb:	48 89 c7             	mov    %rax,%rdi
    cbee:	e8 35 23 00 00       	call   ef28 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cbf3:	48 8b 00             	mov    (%rax),%rax
    cbf6:	48 39 c3             	cmp    %rax,%rbx
    cbf9:	0f 95 c0             	setne  %al
    cbfc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cc00:	c9                   	leave
    cc01:	c3                   	ret

000000000000cc02 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cc02:	55                   	push   %rbp
    cc03:	48 89 e5             	mov    %rsp,%rbp
    cc06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cc0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc0e:	48 8b 00             	mov    (%rax),%rax
    cc11:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cc18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc1c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cc1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cc23:	5d                   	pop    %rbp
    cc24:	c3                   	ret
    cc25:	90                   	nop

000000000000cc26 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cc26:	55                   	push   %rbp
    cc27:	48 89 e5             	mov    %rsp,%rbp
    cc2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cc2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc32:	48 8b 00             	mov    (%rax),%rax
    cc35:	5d                   	pop    %rbp
    cc36:	c3                   	ret
    cc37:	90                   	nop

000000000000cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    cc38:	55                   	push   %rbp
    cc39:	48 89 e5             	mov    %rsp,%rbp
    cc3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    cc40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc44:	48 8b 50 08          	mov    0x8(%rax),%rdx
    cc48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc4c:	48 8b 00             	mov    (%rax),%rax
    cc4f:	48 29 c2             	sub    %rax,%rdx
    cc52:	48 89 d0             	mov    %rdx,%rax
    cc55:	48 c1 f8 03          	sar    $0x3,%rax
    cc59:	5d                   	pop    %rbp
    cc5a:	c3                   	ret
    cc5b:	90                   	nop

000000000000cc5c <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    cc5c:	55                   	push   %rbp
    cc5d:	48 89 e5             	mov    %rsp,%rbp
    cc60:	48 83 ec 10          	sub    $0x10,%rsp
    cc64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cc68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc6c:	48 8b 10             	mov    (%rax),%rdx
    cc6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc73:	48 89 d6             	mov    %rdx,%rsi
    cc76:	48 89 c7             	mov    %rax,%rdi
    cc79:	e8 b8 22 00 00       	call   ef36 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    cc7e:	c9                   	leave
    cc7f:	c3                   	ret

000000000000cc80 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    cc80:	55                   	push   %rbp
    cc81:	48 89 e5             	mov    %rsp,%rbp
    cc84:	48 83 ec 10          	sub    $0x10,%rsp
    cc88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    cc8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc90:	48 8b 10             	mov    (%rax),%rdx
    cc93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cc97:	48 89 d6             	mov    %rdx,%rsi
    cc9a:	48 89 c7             	mov    %rax,%rdi
    cc9d:	e8 94 22 00 00       	call   ef36 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    cca2:	c9                   	leave
    cca3:	c3                   	ret

000000000000cca4 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cca4:	55                   	push   %rbp
    cca5:	48 89 e5             	mov    %rsp,%rbp
    cca8:	48 83 ec 20          	sub    $0x20,%rsp
    ccac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ccb0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ccb4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ccb8:	48 89 d6             	mov    %rdx,%rsi
    ccbb:	48 89 c7             	mov    %rax,%rdi
    ccbe:	e8 85 22 00 00       	call   ef48 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ccc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccc7:	c9                   	leave
    ccc8:	c3                   	ret
    ccc9:	90                   	nop

000000000000ccca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ccca:	55                   	push   %rbp
    cccb:	48 89 e5             	mov    %rsp,%rbp
    ccce:	48 83 ec 20          	sub    $0x20,%rsp
    ccd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ccd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ccda:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ccde:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cce2:	48 89 d6             	mov    %rdx,%rsi
    cce5:	48 89 c7             	mov    %rax,%rdi
    cce8:	e8 5b 22 00 00       	call   ef48 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    cced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ccf1:	c9                   	leave
    ccf2:	c3                   	ret

000000000000ccf3 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ccf3:	55                   	push   %rbp
    ccf4:	48 89 e5             	mov    %rsp,%rbp
    ccf7:	53                   	push   %rbx
    ccf8:	48 83 ec 18          	sub    $0x18,%rsp
    ccfc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cd00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cd04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd08:	48 89 c7             	mov    %rax,%rdi
    cd0b:	e8 56 22 00 00       	call   ef66 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cd10:	48 8b 18             	mov    (%rax),%rbx
    cd13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd17:	48 89 c7             	mov    %rax,%rdi
    cd1a:	e8 47 22 00 00       	call   ef66 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    cd1f:	48 8b 00             	mov    (%rax),%rax
    cd22:	48 39 c3             	cmp    %rax,%rbx
    cd25:	0f 95 c0             	setne  %al
    cd28:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cd2c:	c9                   	leave
    cd2d:	c3                   	ret

000000000000cd2e <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cd2e:	55                   	push   %rbp
    cd2f:	48 89 e5             	mov    %rsp,%rbp
    cd32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cd36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd3a:	48 8b 00             	mov    (%rax),%rax
    cd3d:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
    cd44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd48:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cd4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cd4f:	5d                   	pop    %rbp
    cd50:	c3                   	ret
    cd51:	90                   	nop

000000000000cd52 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cd52:	55                   	push   %rbp
    cd53:	48 89 e5             	mov    %rsp,%rbp
    cd56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    cd5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd5e:	48 8b 00             	mov    (%rax),%rax
    cd61:	5d                   	pop    %rbp
    cd62:	c3                   	ret
    cd63:	90                   	nop

000000000000cd64 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    cd64:	55                   	push   %rbp
    cd65:	48 89 e5             	mov    %rsp,%rbp
    cd68:	48 83 ec 20          	sub    $0x20,%rsp
    cd6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    cd70:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cd74:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cd78:	48 89 d6             	mov    %rdx,%rsi
    cd7b:	48 89 c7             	mov    %rax,%rdi
    cd7e:	e8 f1 21 00 00       	call   ef74 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    cd83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cd87:	c9                   	leave
    cd88:	c3                   	ret
    cd89:	90                   	nop

000000000000cd8a <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    cd8a:	55                   	push   %rbp
    cd8b:	48 89 e5             	mov    %rsp,%rbp
    cd8e:	48 83 ec 20          	sub    $0x20,%rsp
    cd92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    cd96:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd9a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    cd9e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    cda2:	48 89 d6             	mov    %rdx,%rsi
    cda5:	48 89 c7             	mov    %rax,%rdi
    cda8:	e8 c7 21 00 00       	call   ef74 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    cdad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdb1:	c9                   	leave
    cdb2:	c3                   	ret

000000000000cdb3 <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    cdb3:	55                   	push   %rbp
    cdb4:	48 89 e5             	mov    %rsp,%rbp
    cdb7:	53                   	push   %rbx
    cdb8:	48 83 ec 18          	sub    $0x18,%rsp
    cdbc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cdc0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    cdc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cdc8:	48 89 c7             	mov    %rax,%rdi
    cdcb:	e8 c2 21 00 00       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cdd0:	48 8b 18             	mov    (%rax),%rbx
    cdd3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cdd7:	48 89 c7             	mov    %rax,%rdi
    cdda:	e8 b3 21 00 00       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
    cddf:	48 8b 00             	mov    (%rax),%rax
    cde2:	48 39 c3             	cmp    %rax,%rbx
    cde5:	0f 95 c0             	setne  %al
    cde8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cdec:	c9                   	leave
    cded:	c3                   	ret

000000000000cdee <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cdee:	55                   	push   %rbp
    cdef:	48 89 e5             	mov    %rsp,%rbp
    cdf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cdf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cdfa:	48 8b 00             	mov    (%rax),%rax
    cdfd:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ce01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce05:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    ce08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ce0c:	5d                   	pop    %rbp
    ce0d:	c3                   	ret

000000000000ce0e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ce0e:	55                   	push   %rbp
    ce0f:	48 89 e5             	mov    %rsp,%rbp
    ce12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ce16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce1a:	48 8b 00             	mov    (%rax),%rax
    ce1d:	5d                   	pop    %rbp
    ce1e:	c3                   	ret
    ce1f:	90                   	nop

000000000000ce20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    ce20:	55                   	push   %rbp
    ce21:	48 89 e5             	mov    %rsp,%rbp
    ce24:	48 83 ec 10          	sub    $0x10,%rsp
    ce28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce30:	48 89 c7             	mov    %rax,%rdi
    ce33:	e8 a0 21 00 00       	call   efd8 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    ce38:	90                   	nop
    ce39:	c9                   	leave
    ce3a:	c3                   	ret
    ce3b:	90                   	nop

000000000000ce3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
    ce3c:	55                   	push   %rbp
    ce3d:	48 89 e5             	mov    %rsp,%rbp
    ce40:	48 83 ec 10          	sub    $0x10,%rsp
    ce44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ce48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ce4c:	48 89 c7             	mov    %rax,%rdi
    ce4f:	e8 4c 21 00 00       	call   efa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>
    ce54:	90                   	nop
    ce55:	c9                   	leave
    ce56:	c3                   	ret
    ce57:	90                   	nop

000000000000ce58 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_>:
	set(_InputIterator __first, _InputIterator __last)
    ce58:	55                   	push   %rbp
    ce59:	48 89 e5             	mov    %rsp,%rbp
    ce5c:	53                   	push   %rbx
    ce5d:	48 83 ec 28          	sub    $0x28,%rsp
    ce61:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ce65:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    ce69:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	: _M_t()
    ce6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce71:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ce75:	0f 11 00             	movups %xmm0,(%rax)
    ce78:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    ce7c:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    ce80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce84:	48 89 c7             	mov    %rax,%rdi
    ce87:	e8 b0 ff ff ff       	call   ce3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EEC1Ev>
	{ _M_t._M_insert_range_unique(__first, __last); }
    ce8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ce90:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ce94:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    ce98:	48 89 ce             	mov    %rcx,%rsi
    ce9b:	48 89 c7             	mov    %rax,%rdi
    ce9e:	e8 51 21 00 00       	call   eff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>
    cea3:	eb 1a                	jmp    cebf <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EEC1IN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISE_SaISE_EEEEEET_SL_+0x67>
    cea5:	48 89 c3             	mov    %rax,%rbx
    cea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ceac:	48 89 c7             	mov    %rax,%rdi
    ceaf:	e8 12 00 00 00       	call   cec6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>
    ceb4:	48 89 d8             	mov    %rbx,%rax
    ceb7:	48 89 c7             	mov    %rax,%rdi
    ceba:	e8 b1 79 ff ff       	call   4870 <_Unwind_Resume@plt>
    cebf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cec3:	c9                   	leave
    cec4:	c3                   	ret
    cec5:	90                   	nop

000000000000cec6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    cec6:	55                   	push   %rbp
    cec7:	48 89 e5             	mov    %rsp,%rbp
    ceca:	48 83 ec 10          	sub    $0x10,%rsp
    cece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    ced2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ced6:	48 89 c7             	mov    %rax,%rdi
    ced9:	e8 d8 21 00 00       	call   f0b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
    cede:	48 89 c2             	mov    %rax,%rdx
    cee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cee5:	48 89 d6             	mov    %rdx,%rsi
    cee8:	48 89 c7             	mov    %rax,%rdi
    ceeb:	e8 60 21 00 00       	call   f050 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
    cef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cef4:	48 89 c7             	mov    %rax,%rdi
    cef7:	e8 24 ff ff ff       	call   ce20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EED1Ev>
    cefc:	90                   	nop
    cefd:	c9                   	leave
    cefe:	c3                   	ret
    ceff:	90                   	nop

000000000000cf00 <_ZNSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
       *  Note that this function only erases the element, and that if
       *  the element is itself a pointer, the pointed-to memory is not touched
       *  in any way.  Managing the pointer is the user's responsibility.
       */
      size_type
      erase(const key_type& __x)
    cf00:	55                   	push   %rbp
    cf01:	48 89 e5             	mov    %rsp,%rbp
    cf04:	48 83 ec 10          	sub    $0x10,%rsp
    cf08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.erase(__x); }
    cf10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf14:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cf18:	48 89 d6             	mov    %rdx,%rsi
    cf1b:	48 89 c7             	mov    %rax,%rdi
    cf1e:	e8 ad 21 00 00       	call   f0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>
    cf23:	c9                   	leave
    cf24:	c3                   	ret
    cf25:	90                   	nop

000000000000cf26 <_ZNKSt3setINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    cf26:	55                   	push   %rbp
    cf27:	48 89 e5             	mov    %rsp,%rbp
    cf2a:	48 83 ec 10          	sub    $0x10,%rsp
    cf2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.empty(); }
    cf32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf36:	48 89 c7             	mov    %rax,%rdi
    cf39:	e8 26 22 00 00       	call   f164 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>
    cf3e:	c9                   	leave
    cf3f:	c3                   	ret

000000000000cf40 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    cf40:	55                   	push   %rbp
    cf41:	48 89 e5             	mov    %rsp,%rbp
    cf44:	48 83 ec 10          	sub    $0x10,%rsp
    cf48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    cf4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf50:	48 89 c7             	mov    %rax,%rdi
    cf53:	e8 24 22 00 00       	call   f17c <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    cf58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf5c:	48 89 c7             	mov    %rax,%rdi
    cf5f:	e8 34 22 00 00       	call   f198 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    cf64:	90                   	nop
    cf65:	c9                   	leave
    cf66:	c3                   	ret
    cf67:	90                   	nop

000000000000cf68 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
    cf68:	55                   	push   %rbp
    cf69:	48 89 e5             	mov    %rsp,%rbp
    cf6c:	48 83 ec 10          	sub    $0x10,%rsp
    cf70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cf74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf78:	48 89 c7             	mov    %rax,%rdi
    cf7b:	e8 46 22 00 00       	call   f1c6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    cf80:	90                   	nop
    cf81:	c9                   	leave
    cf82:	c3                   	ret
    cf83:	90                   	nop

000000000000cf84 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    cf84:	55                   	push   %rbp
    cf85:	48 89 e5             	mov    %rsp,%rbp
    cf88:	48 83 ec 10          	sub    $0x10,%rsp
    cf8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    cf90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf94:	48 8b 50 10          	mov    0x10(%rax),%rdx
    cf98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf9c:	48 8b 00             	mov    (%rax),%rax
    cf9f:	48 29 c2             	sub    %rax,%rdx
    cfa2:	48 89 d0             	mov    %rdx,%rax
    cfa5:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    cfa9:	48 89 c2             	mov    %rax,%rdx
    cfac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfb0:	48 8b 08             	mov    (%rax),%rcx
    cfb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfb7:	48 89 ce             	mov    %rcx,%rsi
    cfba:	48 89 c7             	mov    %rax,%rdi
    cfbd:	e8 10 22 00 00       	call   f1d2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    cfc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfc6:	48 89 c7             	mov    %rax,%rdi
    cfc9:	e8 b0 ef ff ff       	call   bf7e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    cfce:	90                   	nop
    cfcf:	c9                   	leave
    cfd0:	c3                   	ret
    cfd1:	90                   	nop

000000000000cfd2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    cfd2:	55                   	push   %rbp
    cfd3:	48 89 e5             	mov    %rsp,%rbp
    cfd6:	48 83 ec 10          	sub    $0x10,%rsp
    cfda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    cfde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfe2:	48 89 c7             	mov    %rax,%rdi
    cfe5:	e8 1e 22 00 00       	call   f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    cfea:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    cfed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    cff5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cff9:	48 8b 00             	mov    (%rax),%rax
    cffc:	48 89 ce             	mov    %rcx,%rsi
    cfff:	48 89 c7             	mov    %rax,%rdi
    d002:	e8 0f 22 00 00       	call   f216 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    d007:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d00b:	48 89 c7             	mov    %rax,%rdi
    d00e:	e8 71 ff ff ff       	call   cf84 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    d013:	90                   	nop
    d014:	c9                   	leave
    d015:	c3                   	ret

000000000000d016 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    d016:	55                   	push   %rbp
    d017:	48 89 e5             	mov    %rsp,%rbp
    d01a:	48 83 ec 10          	sub    $0x10,%rsp
    d01e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    d022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d026:	48 89 c7             	mov    %rax,%rdi
    d029:	e8 12 22 00 00       	call   f240 <_ZNSaI16VkPresentModeKHREC1Ev>
    d02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d032:	48 89 c7             	mov    %rax,%rdi
    d035:	e8 22 22 00 00       	call   f25c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d03a:	90                   	nop
    d03b:	c9                   	leave
    d03c:	c3                   	ret
    d03d:	90                   	nop

000000000000d03e <_ZNSaI16VkPresentModeKHRED1Ev>:
    d03e:	55                   	push   %rbp
    d03f:	48 89 e5             	mov    %rsp,%rbp
    d042:	48 83 ec 10          	sub    $0x10,%rsp
    d046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d04e:	48 89 c7             	mov    %rax,%rdi
    d051:	e8 34 22 00 00       	call   f28a <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    d056:	90                   	nop
    d057:	c9                   	leave
    d058:	c3                   	ret
    d059:	90                   	nop

000000000000d05a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    d05a:	55                   	push   %rbp
    d05b:	48 89 e5             	mov    %rsp,%rbp
    d05e:	48 83 ec 10          	sub    $0x10,%rsp
    d062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    d066:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d06a:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d06e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d072:	48 8b 00             	mov    (%rax),%rax
    d075:	48 29 c2             	sub    %rax,%rdx
    d078:	48 89 d0             	mov    %rdx,%rax
    d07b:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    d07f:	48 89 c2             	mov    %rax,%rdx
    d082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d086:	48 8b 08             	mov    (%rax),%rcx
    d089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d08d:	48 89 ce             	mov    %rcx,%rsi
    d090:	48 89 c7             	mov    %rax,%rdi
    d093:	e8 fe 21 00 00       	call   f296 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    d098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d09c:	48 89 c7             	mov    %rax,%rdi
    d09f:	e8 2e ef ff ff       	call   bfd2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    d0a4:	90                   	nop
    d0a5:	c9                   	leave
    d0a6:	c3                   	ret
    d0a7:	90                   	nop

000000000000d0a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d0a8:	55                   	push   %rbp
    d0a9:	48 89 e5             	mov    %rsp,%rbp
    d0ac:	48 83 ec 10          	sub    $0x10,%rsp
    d0b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d0b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0b8:	48 89 c7             	mov    %rax,%rdi
    d0bb:	e8 0c 22 00 00       	call   f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    d0c0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d0c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0c7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d0cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0cf:	48 8b 00             	mov    (%rax),%rax
    d0d2:	48 89 ce             	mov    %rcx,%rsi
    d0d5:	48 89 c7             	mov    %rax,%rdi
    d0d8:	e8 fd 21 00 00       	call   f2da <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    d0dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d0e1:	48 89 c7             	mov    %rax,%rdi
    d0e4:	e8 71 ff ff ff       	call   d05a <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    d0e9:	90                   	nop
    d0ea:	c9                   	leave
    d0eb:	c3                   	ret

000000000000d0ec <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    d0ec:	55                   	push   %rbp
    d0ed:	48 89 e5             	mov    %rsp,%rbp
    d0f0:	48 83 ec 10          	sub    $0x10,%rsp
    d0f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d0f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    d0fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d100:	48 89 c7             	mov    %rax,%rdi
    d103:	e8 fc 21 00 00       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    d108:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d10c:	0f 92 c0             	setb   %al
    d10f:	84 c0                	test   %al,%al
    d111:	74 24                	je     d137 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    d113:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d117:	48 89 c7             	mov    %rax,%rdi
    d11a:	e8 e5 21 00 00       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    d11f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d123:	48 29 c2             	sub    %rax,%rdx
    d126:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d12a:	48 89 d6             	mov    %rdx,%rsi
    d12d:	48 89 c7             	mov    %rax,%rdi
    d130:	e8 f3 21 00 00       	call   f328 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>
      }
    d135:	eb 38                	jmp    d16f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    d137:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d13b:	48 89 c7             	mov    %rax,%rdi
    d13e:	e8 c1 21 00 00       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    d143:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d147:	0f 92 c0             	setb   %al
    d14a:	84 c0                	test   %al,%al
    d14c:	74 21                	je     d16f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    d14e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d152:	48 8b 00             	mov    (%rax),%rax
    d155:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d159:	48 c1 e2 03          	shl    $0x3,%rdx
    d15d:	48 01 c2             	add    %rax,%rdx
    d160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d164:	48 89 d6             	mov    %rdx,%rsi
    d167:	48 89 c7             	mov    %rax,%rdi
    d16a:	e8 c3 23 00 00       	call   f532 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    d16f:	90                   	nop
    d170:	c9                   	leave
    d171:	c3                   	ret

000000000000d172 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d172:	55                   	push   %rbp
    d173:	48 89 e5             	mov    %rsp,%rbp
    d176:	48 83 ec 10          	sub    $0x10,%rsp
    d17a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d17e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d182:	48 8b 10             	mov    (%rax),%rdx
    d185:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d189:	48 89 d6             	mov    %rdx,%rsi
    d18c:	48 89 c7             	mov    %rax,%rdi
    d18f:	e8 fe 23 00 00       	call   f592 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    d194:	c9                   	leave
    d195:	c3                   	ret

000000000000d196 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm>:
      resize(size_type __new_size)
    d196:	55                   	push   %rbp
    d197:	48 89 e5             	mov    %rsp,%rbp
    d19a:	48 83 ec 10          	sub    $0x10,%rsp
    d19e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d1a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    d1a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1aa:	48 89 c7             	mov    %rax,%rdi
    d1ad:	e8 f2 23 00 00       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    d1b2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    d1b6:	0f 92 c0             	setb   %al
    d1b9:	84 c0                	test   %al,%al
    d1bb:	74 24                	je     d1e1 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    d1bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1c1:	48 89 c7             	mov    %rax,%rdi
    d1c4:	e8 db 23 00 00       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    d1c9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d1cd:	48 29 c2             	sub    %rax,%rdx
    d1d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1d4:	48 89 d6             	mov    %rdx,%rsi
    d1d7:	48 89 c7             	mov    %rax,%rdi
    d1da:	e8 e9 23 00 00       	call   f5c8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>
      }
    d1df:	eb 38                	jmp    d219 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	else if (__new_size < size())
    d1e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1e5:	48 89 c7             	mov    %rax,%rdi
    d1e8:	e8 b7 23 00 00       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    d1ed:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    d1f1:	0f 92 c0             	setb   %al
    d1f4:	84 c0                	test   %al,%al
    d1f6:	74 21                	je     d219 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    d1f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d1fc:	48 8b 00             	mov    (%rax),%rax
    d1ff:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d203:	48 c1 e2 02          	shl    $0x2,%rdx
    d207:	48 01 c2             	add    %rax,%rdx
    d20a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d20e:	48 89 d6             	mov    %rdx,%rsi
    d211:	48 89 c7             	mov    %rax,%rdi
    d214:	e8 b9 25 00 00       	call   f7d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>
      }
    d219:	90                   	nop
    d21a:	c9                   	leave
    d21b:	c3                   	ret

000000000000d21c <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d21c:	55                   	push   %rbp
    d21d:	48 89 e5             	mov    %rsp,%rbp
    d220:	48 83 ec 10          	sub    $0x10,%rsp
    d224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d22c:	48 8b 10             	mov    (%rax),%rdx
    d22f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d233:	48 89 d6             	mov    %rdx,%rsi
    d236:	48 89 c7             	mov    %rax,%rdi
    d239:	e8 f4 25 00 00       	call   f832 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    d23e:	c9                   	leave
    d23f:	c3                   	ret

000000000000d240 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    d240:	55                   	push   %rbp
    d241:	48 89 e5             	mov    %rsp,%rbp
    d244:	48 83 ec 20          	sub    $0x20,%rsp
    d248:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    d24c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d250:	48 89 c7             	mov    %rax,%rdi
    d253:	e8 b8 06 00 00       	call   d910 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    d258:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d25c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d260:	48 89 c7             	mov    %rax,%rdi
    d263:	e8 82 06 00 00       	call   d8ea <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    d268:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d26c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d270:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d274:	48 89 d6             	mov    %rdx,%rsi
    d277:	48 89 c7             	mov    %rax,%rdi
    d27a:	e8 c5 25 00 00       	call   f844 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d27f:	c9                   	leave
    d280:	c3                   	ret
    d281:	90                   	nop

000000000000d282 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    d282:	55                   	push   %rbp
    d283:	48 89 e5             	mov    %rsp,%rbp
    d286:	48 83 ec 20          	sub    $0x20,%rsp
    d28a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
    d28e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d292:	48 89 c7             	mov    %rax,%rdi
    d295:	e8 52 07 00 00       	call   d9ec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    d29a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    d29e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d2a2:	48 89 c7             	mov    %rax,%rdi
    d2a5:	e8 1c 07 00 00       	call   d9c6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    d2aa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    d2ae:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    d2b2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d2b6:	48 89 d6             	mov    %rdx,%rsi
    d2b9:	48 89 c7             	mov    %rax,%rdi
    d2bc:	e8 be 25 00 00       	call   f87f <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d2c1:	c9                   	leave
    d2c2:	c3                   	ret
    d2c3:	90                   	nop

000000000000d2c4 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    d2c4:	55                   	push   %rbp
    d2c5:	48 89 e5             	mov    %rsp,%rbp
    d2c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    d2d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2d4:	48 8b 00             	mov    (%rax),%rax
    d2d7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d2db:	48 c1 e2 03          	shl    $0x3,%rdx
    d2df:	48 01 d0             	add    %rdx,%rax
      }
    d2e2:	5d                   	pop    %rbp
    d2e3:	c3                   	ret

000000000000d2e4 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    d2e4:	55                   	push   %rbp
    d2e5:	48 89 e5             	mov    %rsp,%rbp
    d2e8:	48 83 ec 10          	sub    $0x10,%rsp
    d2ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d2f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d2f4:	48 89 c7             	mov    %rax,%rdi
    d2f7:	e8 be 25 00 00       	call   f8ba <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    d2fc:	90                   	nop
    d2fd:	c9                   	leave
    d2fe:	c3                   	ret
    d2ff:	90                   	nop

000000000000d300 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    d300:	55                   	push   %rbp
    d301:	48 89 e5             	mov    %rsp,%rbp
    d304:	48 83 ec 10          	sub    $0x10,%rsp
    d308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d310:	48 89 c7             	mov    %rax,%rdi
    d313:	e8 ae 25 00 00       	call   f8c6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    d318:	90                   	nop
    d319:	c9                   	leave
    d31a:	c3                   	ret
    d31b:	90                   	nop

000000000000d31c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    d31c:	55                   	push   %rbp
    d31d:	48 89 e5             	mov    %rsp,%rbp
    d320:	53                   	push   %rbx
    d321:	48 83 ec 28          	sub    $0x28,%rsp
    d325:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d329:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    d32d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    d331:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    d335:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    d339:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d33d:	48 89 d6             	mov    %rdx,%rsi
    d340:	48 89 c7             	mov    %rax,%rdi
    d343:	e8 89 25 00 00       	call   f8d1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    d348:	48 89 c1             	mov    %rax,%rcx
    d34b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d34f:	48 89 c2             	mov    %rax,%rdx
    d352:	48 89 ce             	mov    %rcx,%rsi
    d355:	48 89 df             	mov    %rbx,%rdi
    d358:	e8 f1 25 00 00       	call   f94e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    d35d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    d361:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d365:	48 89 d6             	mov    %rdx,%rsi
    d368:	48 89 c7             	mov    %rax,%rdi
    d36b:	e8 94 26 00 00       	call   fa04 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    d370:	eb 1a                	jmp    d38c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    d372:	48 89 c3             	mov    %rax,%rbx
    d375:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d379:	48 89 c7             	mov    %rax,%rdi
    d37c:	e8 2b 26 00 00       	call   f9ac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    d381:	48 89 d8             	mov    %rbx,%rax
    d384:	48 89 c7             	mov    %rax,%rdi
    d387:	e8 e4 74 ff ff       	call   4870 <_Unwind_Resume@plt>
    d38c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d390:	c9                   	leave
    d391:	c3                   	ret

000000000000d392 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d392:	55                   	push   %rbp
    d393:	48 89 e5             	mov    %rsp,%rbp
    d396:	48 83 ec 10          	sub    $0x10,%rsp
    d39a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d39e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3a2:	48 89 c7             	mov    %rax,%rdi
    d3a5:	e8 9a 26 00 00       	call   fa44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    d3aa:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d3ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b1:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d3b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3b9:	48 8b 00             	mov    (%rax),%rax
    d3bc:	48 89 ce             	mov    %rcx,%rsi
    d3bf:	48 89 c7             	mov    %rax,%rdi
    d3c2:	e8 8b 26 00 00       	call   fa52 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    d3c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3cb:	48 89 c7             	mov    %rax,%rdi
    d3ce:	e8 d9 25 00 00       	call   f9ac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    d3d3:	90                   	nop
    d3d4:	c9                   	leave
    d3d5:	c3                   	ret

000000000000d3d6 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d3d6:	55                   	push   %rbp
    d3d7:	48 89 e5             	mov    %rsp,%rbp
    d3da:	48 83 ec 10          	sub    $0x10,%rsp
    d3de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d3e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3e6:	48 8b 10             	mov    (%rax),%rdx
    d3e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d3ed:	48 89 d6             	mov    %rdx,%rsi
    d3f0:	48 89 c7             	mov    %rax,%rdi
    d3f3:	e8 84 26 00 00       	call   fa7c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    d3f8:	c9                   	leave
    d3f9:	c3                   	ret

000000000000d3fa <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    d3fa:	55                   	push   %rbp
    d3fb:	48 89 e5             	mov    %rsp,%rbp
    d3fe:	48 83 ec 20          	sub    $0x20,%rsp
    d402:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    d406:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d40a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d40e:	48 89 d6             	mov    %rdx,%rsi
    d411:	48 89 c7             	mov    %rax,%rdi
    d414:	e8 75 26 00 00       	call   fa8e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d419:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d41d:	c9                   	leave
    d41e:	c3                   	ret
    d41f:	90                   	nop

000000000000d420 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    d420:	55                   	push   %rbp
    d421:	48 89 e5             	mov    %rsp,%rbp
    d424:	48 83 ec 20          	sub    $0x20,%rsp
    d428:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    d42c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d430:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d434:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d438:	48 89 d6             	mov    %rdx,%rsi
    d43b:	48 89 c7             	mov    %rax,%rdi
    d43e:	e8 4b 26 00 00       	call   fa8e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    d443:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d447:	c9                   	leave
    d448:	c3                   	ret

000000000000d449 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d449:	55                   	push   %rbp
    d44a:	48 89 e5             	mov    %rsp,%rbp
    d44d:	53                   	push   %rbx
    d44e:	48 83 ec 18          	sub    $0x18,%rsp
    d452:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d456:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d45a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d45e:	48 89 c7             	mov    %rax,%rdi
    d461:	e8 46 26 00 00       	call   faac <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    d466:	48 8b 18             	mov    (%rax),%rbx
    d469:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d46d:	48 89 c7             	mov    %rax,%rdi
    d470:	e8 37 26 00 00       	call   faac <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    d475:	48 8b 00             	mov    (%rax),%rax
    d478:	48 39 c3             	cmp    %rax,%rbx
    d47b:	0f 95 c0             	setne  %al
    d47e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d482:	c9                   	leave
    d483:	c3                   	ret

000000000000d484 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d484:	55                   	push   %rbp
    d485:	48 89 e5             	mov    %rsp,%rbp
    d488:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d490:	48 8b 00             	mov    (%rax),%rax
    d493:	48 8d 50 18          	lea    0x18(%rax),%rdx
    d497:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d49b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d49e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d4a2:	5d                   	pop    %rbp
    d4a3:	c3                   	ret

000000000000d4a4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d4a4:	55                   	push   %rbp
    d4a5:	48 89 e5             	mov    %rsp,%rbp
    d4a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d4ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d4b0:	48 8b 00             	mov    (%rax),%rax
    d4b3:	5d                   	pop    %rbp
    d4b4:	c3                   	ret
    d4b5:	90                   	nop

000000000000d4b6 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_>:
	operator=(_Up&& __u)
    d4b6:	55                   	push   %rbp
    d4b7:	48 89 e5             	mov    %rsp,%rbp
    d4ba:	53                   	push   %rbx
    d4bb:	48 83 ec 18          	sub    $0x18,%rsp
    d4bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d4c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (this->_M_is_engaged())
    d4c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4cb:	48 89 c7             	mov    %rax,%rdi
    d4ce:	e8 39 ec ff ff       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    d4d3:	84 c0                	test   %al,%al
    d4d5:	74 20                	je     d4f7 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x41>
	    this->_M_get() = std::forward<_Up>(__u);
    d4d7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4db:	48 89 c7             	mov    %rax,%rdi
    d4de:	e8 d7 25 00 00       	call   faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    d4e3:	8b 00                	mov    (%rax),%eax
    d4e5:	89 c3                	mov    %eax,%ebx
    d4e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4eb:	48 89 c7             	mov    %rax,%rdi
    d4ee:	e8 0d 01 00 00       	call   d600 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
    d4f3:	89 18                	mov    %ebx,(%rax)
    d4f5:	eb 1e                	jmp    d515 <_ZNSt8optionalIjEaSIRiEENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS0_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES4_ISt6__and_IJSt9is_scalarIjES5_IjNSt5decayIS8_E4typeEEEEESt16is_constructibleIjJS8_EESt13is_assignableIRjS8_EEERS0_E4typeEOS8_+0x5f>
	    this->_M_construct(std::forward<_Up>(__u));
    d4f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d4fb:	48 89 c7             	mov    %rax,%rdi
    d4fe:	e8 b7 25 00 00       	call   faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    d503:	48 89 c2             	mov    %rax,%rdx
    d506:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d50a:	48 89 d6             	mov    %rdx,%rsi
    d50d:	48 89 c7             	mov    %rax,%rdi
    d510:	e8 b3 25 00 00       	call   fac8 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>
	  return *this;
    d515:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    d519:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d51d:	c9                   	leave
    d51e:	c3                   	ret
    d51f:	90                   	nop

000000000000d520 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
    d520:	55                   	push   %rbp
    d521:	48 89 e5             	mov    %rsp,%rbp
    d524:	48 83 ec 10          	sub    $0x10,%rsp
    d528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
    d52c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d530:	48 89 c7             	mov    %rax,%rdi
    d533:	e8 c4 25 00 00       	call   fafc <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>
    d538:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d53c:	48 89 c7             	mov    %rax,%rdi
    d53f:	e8 d4 25 00 00       	call   fb18 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    d544:	90                   	nop
    d545:	c9                   	leave
    d546:	c3                   	ret
    d547:	90                   	nop

000000000000d548 <_ZNSaI23VkDeviceQueueCreateInfoED1Ev>:
    d548:	55                   	push   %rbp
    d549:	48 89 e5             	mov    %rsp,%rbp
    d54c:	48 83 ec 10          	sub    $0x10,%rsp
    d550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d558:	48 89 c7             	mov    %rax,%rdi
    d55b:	e8 e6 25 00 00       	call   fb46 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>
    d560:	90                   	nop
    d561:	c9                   	leave
    d562:	c3                   	ret
    d563:	90                   	nop

000000000000d564 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    d564:	55                   	push   %rbp
    d565:	48 89 e5             	mov    %rsp,%rbp
    d568:	48 83 ec 10          	sub    $0x10,%rsp
    d56c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    d570:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d574:	48 8b 50 10          	mov    0x10(%rax),%rdx
    d578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d57c:	48 8b 00             	mov    (%rax),%rax
    d57f:	48 29 c2             	sub    %rax,%rdx
    d582:	48 c1 fa 03          	sar    $0x3,%rdx
    d586:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    d58d:	cc cc cc 
    d590:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    d594:	48 89 c2             	mov    %rax,%rdx
    d597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d59b:	48 8b 08             	mov    (%rax),%rcx
    d59e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5a2:	48 89 ce             	mov    %rcx,%rsi
    d5a5:	48 89 c7             	mov    %rax,%rdi
    d5a8:	e8 a5 25 00 00       	call   fb52 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
    d5ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5b1:	48 89 c7             	mov    %rax,%rdi
    d5b4:	e8 cd ea ff ff       	call   c086 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE12_Vector_implD1Ev>
    d5b9:	90                   	nop
    d5ba:	c9                   	leave
    d5bb:	c3                   	ret

000000000000d5bc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    d5bc:	55                   	push   %rbp
    d5bd:	48 89 e5             	mov    %rsp,%rbp
    d5c0:	48 83 ec 10          	sub    $0x10,%rsp
    d5c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    d5c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5cc:	48 89 c7             	mov    %rax,%rdi
    d5cf:	e8 b4 25 00 00       	call   fb88 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    d5d4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    d5d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5db:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d5df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5e3:	48 8b 00             	mov    (%rax),%rax
    d5e6:	48 89 ce             	mov    %rcx,%rsi
    d5e9:	48 89 c7             	mov    %rax,%rdi
    d5ec:	e8 a5 25 00 00       	call   fb96 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>
      }
    d5f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d5f5:	48 89 c7             	mov    %rax,%rdi
    d5f8:	e8 67 ff ff ff       	call   d564 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EED1Ev>
    d5fd:	90                   	nop
    d5fe:	c9                   	leave
    d5ff:	c3                   	ret

000000000000d600 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    d600:	55                   	push   %rbp
    d601:	48 89 e5             	mov    %rsp,%rbp
    d604:	48 83 ec 10          	sub    $0x10,%rsp
    d608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    d60c:	e8 6e e6 ff ff       	call   bc7f <_ZSt23__is_constant_evaluatedv>
    d611:	84 c0                	test   %al,%al
    d613:	74 1a                	je     d62f <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    d615:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d619:	48 89 c7             	mov    %rax,%rdi
    d61c:	e8 eb ea ff ff       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
    d621:	83 f0 01             	xor    $0x1,%eax
    d624:	84 c0                	test   %al,%al
    d626:	74 07                	je     d62f <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
    d628:	b8 01 00 00 00       	mov    $0x1,%eax
    d62d:	eb 05                	jmp    d634 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
    d62f:	b8 00 00 00 00       	mov    $0x0,%eax
    d634:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    d636:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d63a:	48 89 c7             	mov    %rax,%rdi
    d63d:	e8 7e 25 00 00       	call   fbc0 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>
      }
    d642:	c9                   	leave
    d643:	c3                   	ret

000000000000d644 <_ZNSaIjEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    d644:	55                   	push   %rbp
    d645:	48 89 e5             	mov    %rsp,%rbp
    d648:	48 83 ec 10          	sub    $0x10,%rsp
    d64c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d654:	48 89 c7             	mov    %rax,%rdi
    d657:	e8 72 25 00 00       	call   fbce <_ZNSt15__new_allocatorIjEC1Ev>
    d65c:	90                   	nop
    d65d:	c9                   	leave
    d65e:	c3                   	ret
    d65f:	90                   	nop

000000000000d660 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_>:
      set(initializer_list<value_type> __l,
    d660:	55                   	push   %rbp
    d661:	48 89 e5             	mov    %rsp,%rbp
    d664:	41 54                	push   %r12
    d666:	53                   	push   %rbx
    d667:	48 83 ec 40          	sub    $0x40,%rsp
    d66b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    d66f:	48 89 f0             	mov    %rsi,%rax
    d672:	48 89 d6             	mov    %rdx,%rsi
    d675:	48 89 f2             	mov    %rsi,%rdx
    d678:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    d67c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    d680:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
    d684:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
      : _M_t(__comp, _Key_alloc_type(__a))
    d688:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d68c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    d690:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d694:	48 89 d6             	mov    %rdx,%rsi
    d697:	48 89 c7             	mov    %rax,%rdi
    d69a:	e8 3b 25 00 00       	call   fbda <_ZNSaIjEC1ERKS_>
    d69f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    d6a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d6a7:	48 89 c6             	mov    %rax,%rsi
    d6aa:	48 89 df             	mov    %rbx,%rdi
    d6ad:	e8 4e 25 00 00       	call   fc00 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>
    d6b2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d6b6:	48 89 c7             	mov    %rax,%rdi
    d6b9:	e8 c2 eb ff ff       	call   c280 <_ZNSaIjED1Ev>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    d6be:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    d6c2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d6c6:	48 89 c7             	mov    %rax,%rdi
    d6c9:	e8 b2 25 00 00       	call   fc80 <_ZNKSt16initializer_listIjE3endEv>
    d6ce:	49 89 c4             	mov    %rax,%r12
    d6d1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d6d5:	48 89 c7             	mov    %rax,%rdi
    d6d8:	e8 91 25 00 00       	call   fc6e <_ZNKSt16initializer_listIjE5beginEv>
    d6dd:	4c 89 e2             	mov    %r12,%rdx
    d6e0:	48 89 c6             	mov    %rax,%rsi
    d6e3:	48 89 df             	mov    %rbx,%rdi
    d6e6:	e8 cb 25 00 00       	call   fcb6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>
    d6eb:	eb 34                	jmp    d721 <_ZNSt3setIjSt4lessIjESaIjEEC1ESt16initializer_listIjERKS1_RKS2_+0xc1>
      : _M_t(__comp, _Key_alloc_type(__a))
    d6ed:	48 89 c3             	mov    %rax,%rbx
    d6f0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    d6f4:	48 89 c7             	mov    %rax,%rdi
    d6f7:	e8 84 eb ff ff       	call   c280 <_ZNSaIjED1Ev>
    d6fc:	48 89 d8             	mov    %rbx,%rax
    d6ff:	48 89 c7             	mov    %rax,%rdi
    d702:	e8 69 71 ff ff       	call   4870 <_Unwind_Resume@plt>
      { _M_t._M_insert_range_unique(__l.begin(), __l.end()); }
    d707:	48 89 c3             	mov    %rax,%rbx
    d70a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d70e:	48 89 c7             	mov    %rax,%rdi
    d711:	e8 30 00 00 00       	call   d746 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>
    d716:	48 89 d8             	mov    %rbx,%rax
    d719:	48 89 c7             	mov    %rax,%rdi
    d71c:	e8 4f 71 ff ff       	call   4870 <_Unwind_Resume@plt>
    d721:	48 83 c4 40          	add    $0x40,%rsp
    d725:	5b                   	pop    %rbx
    d726:	41 5c                	pop    %r12
    d728:	5d                   	pop    %rbp
    d729:	c3                   	ret

000000000000d72a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>:
	struct _Rb_tree_impl
    d72a:	55                   	push   %rbp
    d72b:	48 89 e5             	mov    %rsp,%rbp
    d72e:	48 83 ec 10          	sub    $0x10,%rsp
    d732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d73a:	48 89 c7             	mov    %rax,%rdi
    d73d:	e8 ec 25 00 00       	call   fd2e <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    d742:	90                   	nop
    d743:	c9                   	leave
    d744:	c3                   	ret
    d745:	90                   	nop

000000000000d746 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEED1Ev>:
      ~_Rb_tree() _GLIBCXX_NOEXCEPT
    d746:	55                   	push   %rbp
    d747:	48 89 e5             	mov    %rsp,%rbp
    d74a:	48 83 ec 10          	sub    $0x10,%rsp
    d74e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
    d752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d756:	48 89 c7             	mov    %rax,%rdi
    d759:	e8 52 26 00 00       	call   fdb0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
    d75e:	48 89 c2             	mov    %rax,%rdx
    d761:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d765:	48 89 d6             	mov    %rdx,%rsi
    d768:	48 89 c7             	mov    %rax,%rdi
    d76b:	e8 da 25 00 00       	call   fd4a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
    d770:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d774:	48 89 c7             	mov    %rax,%rdi
    d777:	e8 ae ff ff ff       	call   d72a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EED1Ev>
    d77c:	90                   	nop
    d77d:	c9                   	leave
    d77e:	c3                   	ret
    d77f:	90                   	nop

000000000000d780 <_ZNKSt3setIjSt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d780:	55                   	push   %rbp
    d781:	48 89 e5             	mov    %rsp,%rbp
    d784:	48 83 ec 10          	sub    $0x10,%rsp
    d788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.begin(); }
    d78c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d790:	48 89 c7             	mov    %rax,%rdi
    d793:	e8 32 26 00 00       	call   fdca <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
    d798:	c9                   	leave
    d799:	c3                   	ret

000000000000d79a <_ZNKSt3setIjSt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d79a:	55                   	push   %rbp
    d79b:	48 89 e5             	mov    %rsp,%rbp
    d79e:	48 83 ec 10          	sub    $0x10,%rsp
    d7a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
    d7a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7aa:	48 89 c7             	mov    %rax,%rdi
    d7ad:	e8 42 26 00 00       	call   fdf4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    d7b2:	c9                   	leave
    d7b3:	c3                   	ret

000000000000d7b4 <_ZStneRKSt23_Rb_tree_const_iteratorIjES2_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    d7b4:	55                   	push   %rbp
    d7b5:	48 89 e5             	mov    %rsp,%rbp
    d7b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d7bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
    d7c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7c4:	48 8b 10             	mov    (%rax),%rdx
    d7c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    d7cb:	48 8b 00             	mov    (%rax),%rax
    d7ce:	48 39 c2             	cmp    %rax,%rdx
    d7d1:	0f 95 c0             	setne  %al
    d7d4:	5d                   	pop    %rbp
    d7d5:	c3                   	ret

000000000000d7d6 <_ZNSt23_Rb_tree_const_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d7d6:	55                   	push   %rbp
    d7d7:	48 89 e5             	mov    %rsp,%rbp
    d7da:	48 83 ec 10          	sub    $0x10,%rsp
    d7de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
    d7e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d7e6:	48 8b 00             	mov    (%rax),%rax
    d7e9:	48 89 c7             	mov    %rax,%rdi
    d7ec:	e8 3f 6d ff ff       	call   4530 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
    d7f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    d7f5:	48 89 02             	mov    %rax,(%rdx)
	return *this;
    d7f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d7fc:	c9                   	leave
    d7fd:	c3                   	ret

000000000000d7fe <_ZNKSt23_Rb_tree_const_iteratorIjEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d7fe:	55                   	push   %rbp
    d7ff:	48 89 e5             	mov    %rsp,%rbp
    d802:	48 83 ec 10          	sub    $0x10,%rsp
    d806:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    d80a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d80e:	48 8b 00             	mov    (%rax),%rax
    d811:	48 89 c7             	mov    %rax,%rdi
    d814:	e8 05 26 00 00       	call   fe1e <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
    d819:	c9                   	leave
    d81a:	c3                   	ret
    d81b:	90                   	nop

000000000000d81c <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_>:
      push_back(const value_type& __x)
    d81c:	55                   	push   %rbp
    d81d:	48 89 e5             	mov    %rsp,%rbp
    d820:	48 83 ec 10          	sub    $0x10,%rsp
    d824:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d828:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    d82c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d830:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d838:	48 8b 40 10          	mov    0x10(%rax),%rax
    d83c:	48 39 c2             	cmp    %rax,%rdx
    d83f:	74 31                	je     d872 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x56>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    d841:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d845:	48 8b 48 08          	mov    0x8(%rax),%rcx
    d849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d84d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d851:	48 89 ce             	mov    %rcx,%rsi
    d854:	48 89 c7             	mov    %rax,%rdi
    d857:	e8 e0 25 00 00       	call   fe3c <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
    d85c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d860:	48 8b 40 08          	mov    0x8(%rax),%rax
    d864:	48 8d 50 28          	lea    0x28(%rax),%rdx
    d868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d86c:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    d870:	eb 22                	jmp    d894 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE9push_backERKS0_+0x78>
	  _M_realloc_insert(end(), __x);
    d872:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d876:	48 89 c7             	mov    %rax,%rdi
    d879:	e8 f8 25 00 00       	call   fe76 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>
    d87e:	48 89 c1             	mov    %rax,%rcx
    d881:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d889:	48 89 ce             	mov    %rcx,%rsi
    d88c:	48 89 c7             	mov    %rax,%rdi
    d88f:	e8 0c 26 00 00       	call   fea0 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>
      }
    d894:	90                   	nop
    d895:	c9                   	leave
    d896:	c3                   	ret
    d897:	90                   	nop

000000000000d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    d898:	55                   	push   %rbp
    d899:	48 89 e5             	mov    %rsp,%rbp
    d89c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    d8a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8a4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d8a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8ac:	48 8b 00             	mov    (%rax),%rax
    d8af:	48 29 c2             	sub    %rax,%rdx
    d8b2:	48 c1 fa 03          	sar    $0x3,%rdx
    d8b6:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    d8bd:	cc cc cc 
    d8c0:	48 0f af c2          	imul   %rdx,%rax
    d8c4:	5d                   	pop    %rbp
    d8c5:	c3                   	ret

000000000000d8c6 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    d8c6:	55                   	push   %rbp
    d8c7:	48 89 e5             	mov    %rsp,%rbp
    d8ca:	48 83 ec 10          	sub    $0x10,%rsp
    d8ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    d8d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8d6:	48 8b 10             	mov    (%rax),%rdx
    d8d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d8dd:	48 89 d6             	mov    %rdx,%rsi
    d8e0:	48 89 c7             	mov    %rax,%rdi
    d8e3:	e8 72 27 00 00       	call   1005a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    d8e8:	c9                   	leave
    d8e9:	c3                   	ret

000000000000d8ea <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d8ea:	55                   	push   %rbp
    d8eb:	48 89 e5             	mov    %rsp,%rbp
    d8ee:	48 83 ec 20          	sub    $0x20,%rsp
    d8f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    d8f6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d8fa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d8fe:	48 89 d6             	mov    %rdx,%rsi
    d901:	48 89 c7             	mov    %rax,%rdi
    d904:	e8 63 27 00 00       	call   1006c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d90d:	c9                   	leave
    d90e:	c3                   	ret
    d90f:	90                   	nop

000000000000d910 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d910:	55                   	push   %rbp
    d911:	48 89 e5             	mov    %rsp,%rbp
    d914:	48 83 ec 20          	sub    $0x20,%rsp
    d918:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    d91c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d920:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d924:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d928:	48 89 d6             	mov    %rdx,%rsi
    d92b:	48 89 c7             	mov    %rax,%rdi
    d92e:	e8 39 27 00 00       	call   1006c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d933:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d937:	c9                   	leave
    d938:	c3                   	ret

000000000000d939 <_ZN9__gnu_cxxneIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    d939:	55                   	push   %rbp
    d93a:	48 89 e5             	mov    %rsp,%rbp
    d93d:	53                   	push   %rbx
    d93e:	48 83 ec 18          	sub    $0x18,%rsp
    d942:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    d946:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    d94a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d94e:	48 89 c7             	mov    %rax,%rdi
    d951:	e8 34 27 00 00       	call   1008a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d956:	48 8b 18             	mov    (%rax),%rbx
    d959:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d95d:	48 89 c7             	mov    %rax,%rdi
    d960:	e8 25 27 00 00       	call   1008a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    d965:	48 8b 00             	mov    (%rax),%rax
    d968:	48 39 c3             	cmp    %rax,%rbx
    d96b:	0f 95 c0             	setne  %al
    d96e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d972:	c9                   	leave
    d973:	c3                   	ret

000000000000d974 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    d974:	55                   	push   %rbp
    d975:	48 89 e5             	mov    %rsp,%rbp
    d978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    d97c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d980:	48 8b 00             	mov    (%rax),%rax
    d983:	48 8d 50 08          	lea    0x8(%rax),%rdx
    d987:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d98b:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    d98e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    d992:	5d                   	pop    %rbp
    d993:	c3                   	ret

000000000000d994 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    d994:	55                   	push   %rbp
    d995:	48 89 e5             	mov    %rsp,%rbp
    d998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    d99c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9a0:	48 8b 00             	mov    (%rax),%rax
    d9a3:	5d                   	pop    %rbp
    d9a4:	c3                   	ret
    d9a5:	90                   	nop

000000000000d9a6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) const _GLIBCXX_NOEXCEPT
    d9a6:	55                   	push   %rbp
    d9a7:	48 89 e5             	mov    %rsp,%rbp
    d9aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d9ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    d9b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9b6:	48 8b 00             	mov    (%rax),%rax
    d9b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    d9bd:	48 c1 e2 03          	shl    $0x3,%rdx
    d9c1:	48 01 d0             	add    %rdx,%rax
      }
    d9c4:	5d                   	pop    %rbp
    d9c5:	c3                   	ret

000000000000d9c6 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    d9c6:	55                   	push   %rbp
    d9c7:	48 89 e5             	mov    %rsp,%rbp
    d9ca:	48 83 ec 20          	sub    $0x20,%rsp
    d9ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
    d9d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d9d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    d9da:	48 89 d6             	mov    %rdx,%rsi
    d9dd:	48 89 c7             	mov    %rax,%rdi
    d9e0:	e8 b3 26 00 00       	call   10098 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    d9e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    d9e9:	c9                   	leave
    d9ea:	c3                   	ret
    d9eb:	90                   	nop

000000000000d9ec <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    d9ec:	55                   	push   %rbp
    d9ed:	48 89 e5             	mov    %rsp,%rbp
    d9f0:	48 83 ec 20          	sub    $0x20,%rsp
    d9f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
    d9f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d9fc:	48 8d 50 08          	lea    0x8(%rax),%rdx
    da00:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    da04:	48 89 d6             	mov    %rdx,%rsi
    da07:	48 89 c7             	mov    %rax,%rdi
    da0a:	e8 89 26 00 00       	call   10098 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
    da0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da13:	c9                   	leave
    da14:	c3                   	ret

000000000000da15 <_ZN9__gnu_cxxneIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    da15:	55                   	push   %rbp
    da16:	48 89 e5             	mov    %rsp,%rbp
    da19:	53                   	push   %rbx
    da1a:	48 83 ec 18          	sub    $0x18,%rsp
    da1e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    da22:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    da26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    da2a:	48 89 c7             	mov    %rax,%rdi
    da2d:	e8 84 26 00 00       	call   100b6 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    da32:	48 8b 18             	mov    (%rax),%rbx
    da35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    da39:	48 89 c7             	mov    %rax,%rdi
    da3c:	e8 75 26 00 00       	call   100b6 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    da41:	48 8b 00             	mov    (%rax),%rax
    da44:	48 39 c3             	cmp    %rax,%rbx
    da47:	0f 95 c0             	setne  %al
    da4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    da4e:	c9                   	leave
    da4f:	c3                   	ret

000000000000da50 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    da50:	55                   	push   %rbp
    da51:	48 89 e5             	mov    %rsp,%rbp
    da54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    da58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da5c:	48 8b 00             	mov    (%rax),%rax
    da5f:	48 8d 50 04          	lea    0x4(%rax),%rdx
    da63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da67:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    da6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    da6e:	5d                   	pop    %rbp
    da6f:	c3                   	ret

000000000000da70 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    da70:	55                   	push   %rbp
    da71:	48 89 e5             	mov    %rsp,%rbp
    da74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    da78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    da7c:	48 8b 00             	mov    (%rax),%rax
    da7f:	5d                   	pop    %rbp
    da80:	c3                   	ret

000000000000da81 <_ZSt5clampIjERKT_S2_S2_S2_>:
   *  @retval `__val` otherwise.
   *  @pre `_Tp` is LessThanComparable and `(__hi < __lo)` is false.
   */
  template<typename _Tp>
    constexpr const _Tp&
    clamp(const _Tp& __val, const _Tp& __lo, const _Tp& __hi)
    da81:	55                   	push   %rbp
    da82:	48 89 e5             	mov    %rsp,%rbp
    da85:	48 83 ec 20          	sub    $0x20,%rsp
    da89:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    da8d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    da91:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      __glibcxx_assert(!(__hi < __lo));
    da95:	e8 e5 e1 ff ff       	call   bc7f <_ZSt23__is_constant_evaluatedv>
    da9a:	84 c0                	test   %al,%al
    da9c:	74 17                	je     dab5 <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    da9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daa2:	8b 10                	mov    (%rax),%edx
    daa4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    daa8:	8b 00                	mov    (%rax),%eax
    daaa:	39 c2                	cmp    %eax,%edx
    daac:	73 07                	jae    dab5 <_ZSt5clampIjERKT_S2_S2_S2_+0x34>
    daae:	b8 01 00 00 00       	mov    $0x1,%eax
    dab3:	eb 05                	jmp    daba <_ZSt5clampIjERKT_S2_S2_S2_+0x39>
    dab5:	b8 00 00 00 00       	mov    $0x0,%eax
    daba:	84 c0                	test   %al,%al
      return std::min(std::max(__val, __lo), __hi);
    dabc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dac0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dac4:	48 89 d6             	mov    %rdx,%rsi
    dac7:	48 89 c7             	mov    %rax,%rdi
    daca:	e8 f5 25 00 00       	call   100c4 <_ZSt3maxIjERKT_S2_S2_>
    dacf:	48 89 c2             	mov    %rax,%rdx
    dad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dad6:	48 89 c6             	mov    %rax,%rsi
    dad9:	48 89 d7             	mov    %rdx,%rdi
    dadc:	e8 0b 26 00 00       	call   100ec <_ZSt3minIjERKT_S2_S2_>
    }
    dae1:	c9                   	leave
    dae2:	c3                   	ret

000000000000dae3 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E>:
	     && (!__lhs || *__lhs == *__rhs);
    }

  template<typename _Tp, typename _Up>
    constexpr auto
    operator!=(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
    dae3:	55                   	push   %rbp
    dae4:	48 89 e5             	mov    %rsp,%rbp
    dae7:	53                   	push   %rbx
    dae8:	48 83 ec 18          	sub    $0x18,%rsp
    daec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    daf0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    -> __optional_ne_t<_Tp, _Up>
    {
      return static_cast<bool>(__lhs) != static_cast<bool>(__rhs)
    daf4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    daf8:	48 89 c7             	mov    %rax,%rdi
    dafb:	e8 14 26 00 00       	call   10114 <_ZNKSt8optionalIjEcvbEv>
    db00:	89 c3                	mov    %eax,%ebx
    db02:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db06:	48 89 c7             	mov    %rax,%rdi
    db09:	e8 06 26 00 00       	call   10114 <_ZNKSt8optionalIjEcvbEv>
	|| (static_cast<bool>(__lhs) && *__lhs != *__rhs);
    db0e:	38 c3                	cmp    %al,%bl
    db10:	75 30                	jne    db42 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x5f>
    db12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db16:	48 89 c7             	mov    %rax,%rdi
    db19:	e8 f6 25 00 00       	call   10114 <_ZNKSt8optionalIjEcvbEv>
    db1e:	84 c0                	test   %al,%al
    db20:	74 27                	je     db49 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    db22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    db26:	48 89 c7             	mov    %rax,%rdi
    db29:	e8 00 26 00 00       	call   1012e <_ZNKRSt8optionalIjEdeEv>
    db2e:	8b 18                	mov    (%rax),%ebx
    db30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    db34:	48 89 c7             	mov    %rax,%rdi
    db37:	e8 f2 25 00 00       	call   1012e <_ZNKRSt8optionalIjEdeEv>
    db3c:	8b 00                	mov    (%rax),%eax
    db3e:	39 c3                	cmp    %eax,%ebx
    db40:	74 07                	je     db49 <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x66>
    db42:	b8 01 00 00 00       	mov    $0x1,%eax
    db47:	eb 05                	jmp    db4e <_ZStneIjjENSt9enable_ifIXsrSt14is_convertibleIDTnecl7declvalIRKT_EEcl7declvalIRKT0_EEEbE5valueEbE4typeERKSt8optionalIS2_ERKSC_IS5_E+0x6b>
    db49:	b8 00 00 00 00       	mov    $0x0,%eax
    }
    db4e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    db52:	c9                   	leave
    db53:	c3                   	ret

000000000000db54 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    db54:	55                   	push   %rbp
    db55:	48 89 e5             	mov    %rsp,%rbp
    db58:	48 83 ec 10          	sub    $0x10,%rsp
    db5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    db60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    db64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db68:	48 89 c7             	mov    %rax,%rdi
    db6b:	e8 8e 00 00 00       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    db70:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    db74:	0f 92 c0             	setb   %al
    db77:	84 c0                	test   %al,%al
    db79:	74 24                	je     db9f <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    db7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db7f:	48 89 c7             	mov    %rax,%rdi
    db82:	e8 77 00 00 00       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    db87:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    db8b:	48 29 c2             	sub    %rax,%rdx
    db8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    db92:	48 89 d6             	mov    %rdx,%rsi
    db95:	48 89 c7             	mov    %rax,%rdi
    db98:	e8 ab 25 00 00       	call   10148 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>
      }
    db9d:	eb 38                	jmp    dbd7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    db9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dba3:	48 89 c7             	mov    %rax,%rdi
    dba6:	e8 53 00 00 00       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    dbab:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    dbaf:	0f 92 c0             	setb   %al
    dbb2:	84 c0                	test   %al,%al
    dbb4:	74 21                	je     dbd7 <_ZNSt6vectorIP9VkImage_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    dbb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbba:	48 8b 00             	mov    (%rax),%rax
    dbbd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dbc1:	48 c1 e2 03          	shl    $0x3,%rdx
    dbc5:	48 01 c2             	add    %rax,%rdx
    dbc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbcc:	48 89 d6             	mov    %rdx,%rsi
    dbcf:	48 89 c7             	mov    %rax,%rdi
    dbd2:	e8 7b 27 00 00       	call   10352 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    dbd7:	90                   	nop
    dbd8:	c9                   	leave
    dbd9:	c3                   	ret

000000000000dbda <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    dbda:	55                   	push   %rbp
    dbdb:	48 89 e5             	mov    %rsp,%rbp
    dbde:	48 83 ec 10          	sub    $0x10,%rsp
    dbe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    dbe6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbea:	48 8b 10             	mov    (%rax),%rdx
    dbed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dbf1:	48 89 d6             	mov    %rdx,%rsi
    dbf4:	48 89 c7             	mov    %rax,%rdi
    dbf7:	e8 b6 27 00 00       	call   103b2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    dbfc:	c9                   	leave
    dbfd:	c3                   	ret

000000000000dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dbfe:	55                   	push   %rbp
    dbff:	48 89 e5             	mov    %rsp,%rbp
    dc02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dc06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc0a:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dc0e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc12:	48 8b 00             	mov    (%rax),%rax
    dc15:	48 29 c2             	sub    %rax,%rdx
    dc18:	48 89 d0             	mov    %rdx,%rax
    dc1b:	48 c1 f8 03          	sar    $0x3,%rax
    dc1f:	5d                   	pop    %rbp
    dc20:	c3                   	ret
    dc21:	90                   	nop

000000000000dc22 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    dc22:	55                   	push   %rbp
    dc23:	48 89 e5             	mov    %rsp,%rbp
    dc26:	48 83 ec 10          	sub    $0x10,%rsp
    dc2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dc2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    dc32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc36:	48 89 c7             	mov    %rax,%rdi
    dc39:	e8 ae 03 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    dc3e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    dc42:	0f 92 c0             	setb   %al
    dc45:	84 c0                	test   %al,%al
    dc47:	74 24                	je     dc6d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    dc49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc4d:	48 89 c7             	mov    %rax,%rdi
    dc50:	e8 97 03 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    dc55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc59:	48 29 c2             	sub    %rax,%rdx
    dc5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc60:	48 89 d6             	mov    %rdx,%rsi
    dc63:	48 89 c7             	mov    %rax,%rdi
    dc66:	e8 59 27 00 00       	call   103c4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
    dc6b:	eb 38                	jmp    dca5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    dc6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc71:	48 89 c7             	mov    %rax,%rdi
    dc74:	e8 73 03 00 00       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
    dc79:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    dc7d:	0f 92 c0             	setb   %al
    dc80:	84 c0                	test   %al,%al
    dc82:	74 21                	je     dca5 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    dc84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc88:	48 8b 00             	mov    (%rax),%rax
    dc8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dc8f:	48 c1 e2 03          	shl    $0x3,%rdx
    dc93:	48 01 c2             	add    %rax,%rdx
    dc96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dc9a:	48 89 d6             	mov    %rdx,%rsi
    dc9d:	48 89 c7             	mov    %rax,%rdi
    dca0:	e8 29 29 00 00       	call   105ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    dca5:	90                   	nop
    dca6:	c9                   	leave
    dca7:	c3                   	ret

000000000000dca8 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    dca8:	55                   	push   %rbp
    dca9:	48 89 e5             	mov    %rsp,%rbp
    dcac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    dcb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcb8:	48 8b 00             	mov    (%rax),%rax
    dcbb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcbf:	48 c1 e2 03          	shl    $0x3,%rdx
    dcc3:	48 01 d0             	add    %rdx,%rax
      }
    dcc6:	5d                   	pop    %rbp
    dcc7:	c3                   	ret

000000000000dcc8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    dcc8:	55                   	push   %rbp
    dcc9:	48 89 e5             	mov    %rsp,%rbp
    dccc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    dcd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcd8:	48 8b 00             	mov    (%rax),%rax
    dcdb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    dcdf:	48 c1 e2 03          	shl    $0x3,%rdx
    dce3:	48 01 d0             	add    %rdx,%rax
      }
    dce6:	5d                   	pop    %rbp
    dce7:	c3                   	ret

000000000000dce8 <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    dce8:	55                   	push   %rbp
    dce9:	48 89 e5             	mov    %rsp,%rbp
    dcec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dcf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dcf4:	48 8b 00             	mov    (%rax),%rax
    dcf7:	5d                   	pop    %rbp
    dcf8:	c3                   	ret
    dcf9:	90                   	nop

000000000000dcfa <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    dcfa:	55                   	push   %rbp
    dcfb:	48 89 e5             	mov    %rsp,%rbp
    dcfe:	53                   	push   %rbx
    dcff:	48 83 ec 28          	sub    $0x28,%rsp
    dd03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    dd07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    dd0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    dd0f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    dd13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    dd17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dd1b:	48 89 d6             	mov    %rdx,%rsi
    dd1e:	48 89 c7             	mov    %rax,%rdi
    dd21:	e8 08 29 00 00       	call   1062e <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    dd26:	48 89 c1             	mov    %rax,%rcx
    dd29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    dd2d:	48 89 c2             	mov    %rax,%rdx
    dd30:	48 89 ce             	mov    %rcx,%rsi
    dd33:	48 89 df             	mov    %rbx,%rdi
    dd36:	e8 53 29 00 00       	call   1068e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    dd3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    dd3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd43:	48 89 d6             	mov    %rdx,%rsi
    dd46:	48 89 c7             	mov    %rax,%rdi
    dd49:	e8 9e 29 00 00       	call   106ec <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    dd4e:	eb 1a                	jmp    dd6a <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    dd50:	48 89 c3             	mov    %rax,%rbx
    dd53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dd57:	48 89 c7             	mov    %rax,%rdi
    dd5a:	e8 a9 00 00 00       	call   de08 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    dd5f:	48 89 d8             	mov    %rbx,%rax
    dd62:	48 89 c7             	mov    %rax,%rdi
    dd65:	e8 06 6b ff ff       	call   4870 <_Unwind_Resume@plt>
    dd6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dd6e:	c9                   	leave
    dd6f:	c3                   	ret

000000000000dd70 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    dd70:	55                   	push   %rbp
    dd71:	48 89 e5             	mov    %rsp,%rbp
    dd74:	48 83 ec 10          	sub    $0x10,%rsp
    dd78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    dd7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd80:	48 89 c7             	mov    %rax,%rdi
    dd83:	e8 a4 29 00 00       	call   1072c <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    dd88:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    dd8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd8f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    dd93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dd97:	48 8b 00             	mov    (%rax),%rax
    dd9a:	48 89 ce             	mov    %rcx,%rsi
    dd9d:	48 89 c7             	mov    %rax,%rdi
    dda0:	e8 95 29 00 00       	call   1073a <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    dda5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dda9:	48 89 c7             	mov    %rax,%rdi
    ddac:	e8 57 00 00 00       	call   de08 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    ddb1:	90                   	nop
    ddb2:	c9                   	leave
    ddb3:	c3                   	ret

000000000000ddb4 <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    ddb4:	55                   	push   %rbp
    ddb5:	48 89 e5             	mov    %rsp,%rbp
    ddb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ddbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    ddc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddc4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ddc8:	48 89 10             	mov    %rdx,(%rax)
    ddcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddcf:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    ddd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddda:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    dde1:	90                   	nop
    dde2:	5d                   	pop    %rbp
    dde3:	c3                   	ret

000000000000dde4 <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    dde4:	55                   	push   %rbp
    dde5:	48 89 e5             	mov    %rsp,%rbp
    dde8:	48 83 ec 10          	sub    $0x10,%rsp
    ddec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    ddf0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddf4:	48 8b 10             	mov    (%rax),%rdx
    ddf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ddfb:	48 89 d6             	mov    %rdx,%rsi
    ddfe:	48 89 c7             	mov    %rax,%rdi
    de01:	e8 5e 29 00 00       	call   10764 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    de06:	c9                   	leave
    de07:	c3                   	ret

000000000000de08 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    de08:	55                   	push   %rbp
    de09:	48 89 e5             	mov    %rsp,%rbp
    de0c:	48 83 ec 10          	sub    $0x10,%rsp
    de10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    de14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de18:	48 8b 50 10          	mov    0x10(%rax),%rdx
    de1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de20:	48 8b 00             	mov    (%rax),%rax
    de23:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    de26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de2a:	48 8b 08             	mov    (%rax),%rcx
    de2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de31:	48 89 ce             	mov    %rcx,%rsi
    de34:	48 89 c7             	mov    %rax,%rdi
    de37:	e8 3a 29 00 00       	call   10776 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    de3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de40:	48 89 c7             	mov    %rax,%rdi
    de43:	e8 f2 e2 ff ff       	call   c13a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    de48:	90                   	nop
    de49:	c9                   	leave
    de4a:	c3                   	ret
    de4b:	90                   	nop

000000000000de4c <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    de4c:	55                   	push   %rbp
    de4d:	48 89 e5             	mov    %rsp,%rbp
    de50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    de54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de58:	48 8b 50 08          	mov    0x8(%rax),%rdx
    de5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de60:	48 8b 00             	mov    (%rax),%rax
    de63:	48 29 c2             	sub    %rax,%rdx
    de66:	48 89 d0             	mov    %rdx,%rax
    de69:	5d                   	pop    %rbp
    de6a:	c3                   	ret
    de6b:	90                   	nop

000000000000de6c <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    de6c:	55                   	push   %rbp
    de6d:	48 89 e5             	mov    %rsp,%rbp
    de70:	48 83 ec 10          	sub    $0x10,%rsp
    de74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    de78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de7c:	48 8b 10             	mov    (%rax),%rdx
    de7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    de83:	48 89 d6             	mov    %rdx,%rsi
    de86:	48 89 c7             	mov    %rax,%rdi
    de89:	e8 d6 28 00 00       	call   10764 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    de8e:	c9                   	leave
    de8f:	c3                   	ret

000000000000de90 <_ZNKSt5arrayI33VkVertexInputAttributeDescriptionLm2EE4sizeEv>:
      size() const noexcept { return _Nm; }
    de90:	55                   	push   %rbp
    de91:	48 89 e5             	mov    %rsp,%rbp
    de94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    de98:	b8 02 00 00 00       	mov    $0x2,%eax
    de9d:	5d                   	pop    %rbp
    de9e:	c3                   	ret
    de9f:	90                   	nop

000000000000dea0 <_ZNSaI14VkDynamicStateEC1Ev>:
    dea0:	55                   	push   %rbp
    dea1:	48 89 e5             	mov    %rsp,%rbp
    dea4:	48 83 ec 10          	sub    $0x10,%rsp
    dea8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    deac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    deb0:	48 89 c7             	mov    %rax,%rdi
    deb3:	e8 f4 28 00 00       	call   107ac <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>
    deb8:	90                   	nop
    deb9:	c9                   	leave
    deba:	c3                   	ret
    debb:	90                   	nop

000000000000debc <_ZNSaI14VkDynamicStateED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    debc:	55                   	push   %rbp
    debd:	48 89 e5             	mov    %rsp,%rbp
    dec0:	48 83 ec 10          	sub    $0x10,%rsp
    dec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    dec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    decc:	48 89 c7             	mov    %rax,%rdi
    decf:	e8 e4 28 00 00       	call   107b8 <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>
    ded4:	90                   	nop
    ded5:	c9                   	leave
    ded6:	c3                   	ret
    ded7:	90                   	nop

000000000000ded8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
    ded8:	55                   	push   %rbp
    ded9:	48 89 e5             	mov    %rsp,%rbp
    dedc:	53                   	push   %rbx
    dedd:	48 83 ec 38          	sub    $0x38,%rsp
    dee1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    dee5:	48 89 f0             	mov    %rsi,%rax
    dee8:	48 89 d6             	mov    %rdx,%rsi
    deeb:	48 89 f2             	mov    %rsi,%rdx
    deee:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    def2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
    def6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
    defa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    defe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    df02:	48 89 d6             	mov    %rdx,%rsi
    df05:	48 89 c7             	mov    %rax,%rdi
    df08:	e8 d3 28 00 00       	call   107e0 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
    df0d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df11:	48 89 c7             	mov    %rax,%rdi
    df14:	e8 4d 29 00 00       	call   10866 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>
    df19:	48 89 c3             	mov    %rax,%rbx
    df1c:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    df20:	48 89 c7             	mov    %rax,%rdi
    df23:	e8 2c 29 00 00       	call   10854 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
    df28:	48 89 c1             	mov    %rax,%rcx
    df2b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df2f:	48 89 da             	mov    %rbx,%rdx
    df32:	48 89 ce             	mov    %rcx,%rsi
    df35:	48 89 c7             	mov    %rax,%rdi
    df38:	e8 8f 29 00 00       	call   108cc <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
    df3d:	eb 1a                	jmp    df59 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
    df3f:	48 89 c3             	mov    %rax,%rbx
    df42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    df46:	48 89 c7             	mov    %rax,%rdi
    df49:	e8 b8 28 00 00       	call   10806 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    df4e:	48 89 d8             	mov    %rbx,%rax
    df51:	48 89 c7             	mov    %rax,%rdi
    df54:	e8 17 69 ff ff       	call   4870 <_Unwind_Resume@plt>
    df59:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df5d:	c9                   	leave
    df5e:	c3                   	ret
    df5f:	90                   	nop

000000000000df60 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    df60:	55                   	push   %rbp
    df61:	48 89 e5             	mov    %rsp,%rbp
    df64:	48 83 ec 10          	sub    $0x10,%rsp
    df68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    df6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df70:	48 89 c7             	mov    %rax,%rdi
    df73:	e8 04 2a 00 00       	call   1097c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
    df78:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    df7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df7f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    df83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df87:	48 8b 00             	mov    (%rax),%rax
    df8a:	48 89 ce             	mov    %rcx,%rsi
    df8d:	48 89 c7             	mov    %rax,%rdi
    df90:	e8 f5 29 00 00       	call   1098a <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>
      }
    df95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    df99:	48 89 c7             	mov    %rax,%rdi
    df9c:	e8 65 28 00 00       	call   10806 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
    dfa1:	90                   	nop
    dfa2:	c9                   	leave
    dfa3:	c3                   	ret

000000000000dfa4 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dfa4:	55                   	push   %rbp
    dfa5:	48 89 e5             	mov    %rsp,%rbp
    dfa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dfac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfb0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dfb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfb8:	48 8b 00             	mov    (%rax),%rax
    dfbb:	48 29 c2             	sub    %rax,%rdx
    dfbe:	48 89 d0             	mov    %rdx,%rax
    dfc1:	48 c1 f8 02          	sar    $0x2,%rax
    dfc5:	5d                   	pop    %rbp
    dfc6:	c3                   	ret
    dfc7:	90                   	nop

000000000000dfc8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    dfc8:	55                   	push   %rbp
    dfc9:	48 89 e5             	mov    %rsp,%rbp
    dfcc:	48 83 ec 10          	sub    $0x10,%rsp
    dfd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    dfd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfd8:	48 8b 10             	mov    (%rax),%rdx
    dfdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dfdf:	48 89 d6             	mov    %rdx,%rsi
    dfe2:	48 89 c7             	mov    %rax,%rdi
    dfe5:	e8 ca 29 00 00       	call   109b4 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    dfea:	c9                   	leave
    dfeb:	c3                   	ret

000000000000dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    dfec:	55                   	push   %rbp
    dfed:	48 89 e5             	mov    %rsp,%rbp
    dff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    dff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    dff8:	48 8b 50 08          	mov    0x8(%rax),%rdx
    dffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e000:	48 8b 00             	mov    (%rax),%rax
    e003:	48 29 c2             	sub    %rax,%rdx
    e006:	48 89 d0             	mov    %rdx,%rax
    e009:	48 c1 f8 03          	sar    $0x3,%rax
    e00d:	5d                   	pop    %rbp
    e00e:	c3                   	ret
    e00f:	90                   	nop

000000000000e010 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    e010:	55                   	push   %rbp
    e011:	48 89 e5             	mov    %rsp,%rbp
    e014:	48 83 ec 10          	sub    $0x10,%rsp
    e018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e01c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    e020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e024:	48 89 c7             	mov    %rax,%rdi
    e027:	e8 38 03 00 00       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    e02c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e030:	0f 92 c0             	setb   %al
    e033:	84 c0                	test   %al,%al
    e035:	74 24                	je     e05b <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    e037:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e03b:	48 89 c7             	mov    %rax,%rdi
    e03e:	e8 21 03 00 00       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    e043:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e047:	48 29 c2             	sub    %rax,%rdx
    e04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e04e:	48 89 d6             	mov    %rdx,%rsi
    e051:	48 89 c7             	mov    %rax,%rdi
    e054:	e8 6d 29 00 00       	call   109c6 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>
      }
    e059:	eb 38                	jmp    e093 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    e05b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e05f:	48 89 c7             	mov    %rax,%rdi
    e062:	e8 fd 02 00 00       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
    e067:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    e06b:	0f 92 c0             	setb   %al
    e06e:	84 c0                	test   %al,%al
    e070:	74 21                	je     e093 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    e072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e076:	48 8b 00             	mov    (%rax),%rax
    e079:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e07d:	48 c1 e2 03          	shl    $0x3,%rdx
    e081:	48 01 c2             	add    %rax,%rdx
    e084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e088:	48 89 d6             	mov    %rdx,%rsi
    e08b:	48 89 c7             	mov    %rax,%rdi
    e08e:	e8 3d 2b 00 00       	call   10bd0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    e093:	90                   	nop
    e094:	c9                   	leave
    e095:	c3                   	ret

000000000000e096 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e096:	55                   	push   %rbp
    e097:	48 89 e5             	mov    %rsp,%rbp
    e09a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e09e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e0a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0a6:	48 8b 00             	mov    (%rax),%rax
    e0a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e0ad:	48 c1 e2 03          	shl    $0x3,%rdx
    e0b1:	48 01 d0             	add    %rdx,%rax
      }
    e0b4:	5d                   	pop    %rbp
    e0b5:	c3                   	ret

000000000000e0b6 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e0b6:	55                   	push   %rbp
    e0b7:	48 89 e5             	mov    %rsp,%rbp
    e0ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e0be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0c2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e0c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0ca:	48 8b 00             	mov    (%rax),%rax
    e0cd:	48 29 c2             	sub    %rax,%rdx
    e0d0:	48 c1 fa 02          	sar    $0x2,%rdx
    e0d4:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
    e0db:	cc cc cc 
    e0de:	48 0f af c2          	imul   %rdx,%rax
    e0e2:	5d                   	pop    %rbp
    e0e3:	c3                   	ret

000000000000e0e4 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    e0e4:	55                   	push   %rbp
    e0e5:	48 89 e5             	mov    %rsp,%rbp
    e0e8:	48 83 ec 10          	sub    $0x10,%rsp
    e0ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    e0f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0f4:	48 8b 10             	mov    (%rax),%rdx
    e0f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e0fb:	48 89 d6             	mov    %rdx,%rsi
    e0fe:	48 89 c7             	mov    %rax,%rdi
    e101:	e8 2a 2b 00 00       	call   10c30 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    e106:	c9                   	leave
    e107:	c3                   	ret

000000000000e108 <_ZNKSt6vectorItSaItEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e108:	55                   	push   %rbp
    e109:	48 89 e5             	mov    %rsp,%rbp
    e10c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e114:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e11c:	48 8b 00             	mov    (%rax),%rax
    e11f:	48 29 c2             	sub    %rax,%rdx
    e122:	48 89 d0             	mov    %rdx,%rax
    e125:	48 d1 f8             	sar    %rax
    e128:	5d                   	pop    %rbp
    e129:	c3                   	ret

000000000000e12a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    e12a:	55                   	push   %rbp
    e12b:	48 89 e5             	mov    %rsp,%rbp
    e12e:	48 83 ec 10          	sub    $0x10,%rsp
    e132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    e13a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e13e:	48 89 c7             	mov    %rax,%rdi
    e141:	e8 6a 00 00 00       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    e146:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e14a:	0f 92 c0             	setb   %al
    e14d:	84 c0                	test   %al,%al
    e14f:	74 24                	je     e175 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    e151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e155:	48 89 c7             	mov    %rax,%rdi
    e158:	e8 53 00 00 00       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    e15d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e161:	48 29 c2             	sub    %rax,%rdx
    e164:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e168:	48 89 d6             	mov    %rdx,%rsi
    e16b:	48 89 c7             	mov    %rax,%rdi
    e16e:	e8 cf 2a 00 00       	call   10c42 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>
      }
    e173:	eb 38                	jmp    e1ad <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    e175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e179:	48 89 c7             	mov    %rax,%rdi
    e17c:	e8 2f 00 00 00       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
    e181:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    e185:	0f 92 c0             	setb   %al
    e188:	84 c0                	test   %al,%al
    e18a:	74 21                	je     e1ad <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    e18c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e190:	48 8b 00             	mov    (%rax),%rax
    e193:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e197:	48 c1 e2 03          	shl    $0x3,%rdx
    e19b:	48 01 c2             	add    %rax,%rdx
    e19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1a2:	48 89 d6             	mov    %rdx,%rsi
    e1a5:	48 89 c7             	mov    %rax,%rdi
    e1a8:	e8 9f 2c 00 00       	call   10e4c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    e1ad:	90                   	nop
    e1ae:	c9                   	leave
    e1af:	c3                   	ret

000000000000e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e1b0:	55                   	push   %rbp
    e1b1:	48 89 e5             	mov    %rsp,%rbp
    e1b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e1b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1bc:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e1c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1c4:	48 8b 00             	mov    (%rax),%rax
    e1c7:	48 29 c2             	sub    %rax,%rdx
    e1ca:	48 89 d0             	mov    %rdx,%rax
    e1cd:	48 c1 f8 03          	sar    $0x3,%rax
    e1d1:	5d                   	pop    %rbp
    e1d2:	c3                   	ret
    e1d3:	90                   	nop

000000000000e1d4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    e1d4:	55                   	push   %rbp
    e1d5:	48 89 e5             	mov    %rsp,%rbp
    e1d8:	48 83 ec 10          	sub    $0x10,%rsp
    e1dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    e1e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1e4:	48 8b 10             	mov    (%rax),%rdx
    e1e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e1eb:	48 89 d6             	mov    %rdx,%rsi
    e1ee:	48 89 c7             	mov    %rax,%rdi
    e1f1:	e8 b6 2c 00 00       	call   10eac <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    e1f6:	c9                   	leave
    e1f7:	c3                   	ret

000000000000e1f8 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    e1f8:	55                   	push   %rbp
    e1f9:	48 89 e5             	mov    %rsp,%rbp
    e1fc:	48 83 ec 10          	sub    $0x10,%rsp
    e200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e204:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    e208:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e20c:	48 89 c7             	mov    %rax,%rdi
    e20f:	e8 aa 2c 00 00       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    e214:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e218:	0f 92 c0             	setb   %al
    e21b:	84 c0                	test   %al,%al
    e21d:	74 24                	je     e243 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    e21f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e223:	48 89 c7             	mov    %rax,%rdi
    e226:	e8 93 2c 00 00       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    e22b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e22f:	48 29 c2             	sub    %rax,%rdx
    e232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e236:	48 89 d6             	mov    %rdx,%rsi
    e239:	48 89 c7             	mov    %rax,%rdi
    e23c:	e8 a1 2c 00 00       	call   10ee2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>
      }
    e241:	eb 38                	jmp    e27b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    e243:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e247:	48 89 c7             	mov    %rax,%rdi
    e24a:	e8 6f 2c 00 00       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
    e24f:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    e253:	0f 92 c0             	setb   %al
    e256:	84 c0                	test   %al,%al
    e258:	74 21                	je     e27b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    e25a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e25e:	48 8b 00             	mov    (%rax),%rax
    e261:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e265:	48 c1 e2 03          	shl    $0x3,%rdx
    e269:	48 01 c2             	add    %rax,%rdx
    e26c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e270:	48 89 d6             	mov    %rdx,%rsi
    e273:	48 89 c7             	mov    %rax,%rdi
    e276:	e8 71 2e 00 00       	call   110ec <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    e27b:	90                   	nop
    e27c:	c9                   	leave
    e27d:	c3                   	ret

000000000000e27e <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
    e27e:	55                   	push   %rbp
    e27f:	48 89 e5             	mov    %rsp,%rbp
    e282:	48 83 ec 10          	sub    $0x10,%rsp
    e286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e28a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
    e28e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e292:	48 89 c7             	mov    %rax,%rdi
    e295:	e8 b2 2e 00 00       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    e29a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    e29e:	0f 92 c0             	setb   %al
    e2a1:	84 c0                	test   %al,%al
    e2a3:	74 24                	je     e2c9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
    e2a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2a9:	48 89 c7             	mov    %rax,%rdi
    e2ac:	e8 9b 2e 00 00       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    e2b1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2b5:	48 29 c2             	sub    %rax,%rdx
    e2b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2bc:	48 89 d6             	mov    %rdx,%rsi
    e2bf:	48 89 c7             	mov    %rax,%rdi
    e2c2:	e8 a9 2e 00 00       	call   11170 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>
      }
    e2c7:	eb 38                	jmp    e301 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
    e2c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2cd:	48 89 c7             	mov    %rax,%rdi
    e2d0:	e8 77 2e 00 00       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
    e2d5:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
    e2d9:	0f 92 c0             	setb   %al
    e2dc:	84 c0                	test   %al,%al
    e2de:	74 21                	je     e301 <_ZNSt6vectorIP9VkFence_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
    e2e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2e4:	48 8b 00             	mov    (%rax),%rax
    e2e7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e2eb:	48 c1 e2 03          	shl    $0x3,%rdx
    e2ef:	48 01 c2             	add    %rax,%rdx
    e2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e2f6:	48 89 d6             	mov    %rdx,%rsi
    e2f9:	48 89 c7             	mov    %rax,%rdi
    e2fc:	e8 79 30 00 00       	call   1137a <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
    e301:	90                   	nop
    e302:	c9                   	leave
    e303:	c3                   	ret

000000000000e304 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e304:	55                   	push   %rbp
    e305:	48 89 e5             	mov    %rsp,%rbp
    e308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e30c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e310:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e314:	48 8b 00             	mov    (%rax),%rax
    e317:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e31b:	48 c1 e2 03          	shl    $0x3,%rdx
    e31f:	48 01 d0             	add    %rdx,%rax
      }
    e322:	5d                   	pop    %rbp
    e323:	c3                   	ret

000000000000e324 <_ZNSt6vectorIP9VkFence_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e324:	55                   	push   %rbp
    e325:	48 89 e5             	mov    %rsp,%rbp
    e328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e32c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e330:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e334:	48 8b 00             	mov    (%rax),%rax
    e337:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e33b:	48 c1 e2 03          	shl    $0x3,%rdx
    e33f:	48 01 d0             	add    %rdx,%rax
      }
    e342:	5d                   	pop    %rbp
    e343:	c3                   	ret

000000000000e344 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    e344:	55                   	push   %rbp
    e345:	48 89 e5             	mov    %rsp,%rbp
    e348:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e34c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    e350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e354:	48 8b 00             	mov    (%rax),%rax
    e357:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e35b:	48 c1 e2 03          	shl    $0x3,%rdx
    e35f:	48 01 d0             	add    %rdx,%rax
      }
    e362:	5d                   	pop    %rbp
    e363:	c3                   	ret

000000000000e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    e364:	55                   	push   %rbp
    e365:	48 89 e5             	mov    %rsp,%rbp
    e368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    e36c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e370:	48 8b 50 08          	mov    0x8(%rax),%rdx
    e374:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e378:	48 8b 00             	mov    (%rax),%rax
    e37b:	48 29 c2             	sub    %rax,%rdx
    e37e:	48 89 d0             	mov    %rdx,%rax
    e381:	48 c1 f8 03          	sar    $0x3,%rax
    e385:	5d                   	pop    %rbp
    e386:	c3                   	ret
    e387:	90                   	nop

000000000000e388 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
private:
  std::chrono::steady_clock::time_point start;
  std::string time_unit;

public:
  Timer() {
    e388:	55                   	push   %rbp
    e389:	48 89 e5             	mov    %rsp,%rbp
    e38c:	53                   	push   %rbx
    e38d:	48 83 ec 18          	sub    $0x18,%rsp
    e391:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e399:	48 89 c7             	mov    %rax,%rdi
    e39c:	e8 39 30 00 00       	call   113da <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
    e3a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3a5:	48 83 c0 08          	add    $0x8,%rax
    e3a9:	48 89 c7             	mov    %rax,%rdi
    e3ac:	e8 df 62 ff ff       	call   4690 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
    if (std::is_same_v<DurationType, mic>)
      this->time_unit = "μs";
    e3b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3b5:	48 83 c0 08          	add    $0x8,%rax
    e3b9:	48 8d 15 42 d4 00 00 	lea    0xd442(%rip),%rdx        # 1b802 <_ZN6__pstl9execution2v1L5unseqE+0x537>
    e3c0:	48 89 d6             	mov    %rdx,%rsi
    e3c3:	48 89 c7             	mov    %rax,%rdi
    e3c6:	e8 a5 62 ff ff       	call   4670 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    else if (std::is_same_v<DurationType, hr>)
      this->time_unit = "hrs";
    else
      static_assert("Unkown time unit.");

    this->start = std::chrono::steady_clock::now();
    e3cb:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e3cf:	e8 4c 62 ff ff       	call   4620 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e3d4:	48 89 03             	mov    %rax,(%rbx)
  }
    e3d7:	eb 1e                	jmp    e3f7 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
    e3d9:	48 89 c3             	mov    %rax,%rbx
    e3dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e3e0:	48 83 c0 08          	add    $0x8,%rax
    e3e4:	48 89 c7             	mov    %rax,%rdi
    e3e7:	e8 44 5e ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e3ec:	48 89 d8             	mov    %rbx,%rax
    e3ef:	48 89 c7             	mov    %rax,%rdi
    e3f2:	e8 79 64 ff ff       	call   4870 <_Unwind_Resume@plt>
    e3f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e3fb:	c9                   	leave
    e3fc:	c3                   	ret
    e3fd:	90                   	nop

000000000000e3fe <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:

  ~Timer() {
    e3fe:	55                   	push   %rbp
    e3ff:	48 89 e5             	mov    %rsp,%rbp
    e402:	48 83 ec 20          	sub    $0x20,%rsp
    e406:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
    e40a:	e8 11 62 ff ff       	call   4620 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e40f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    if (when_destroyed == announce)
      std::cout
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }
    e413:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e417:	48 83 c0 08          	add    $0x8,%rax
    e41b:	48 89 c7             	mov    %rax,%rdi
    e41e:	e8 0d 5e ff ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e423:	90                   	nop
    e424:	c9                   	leave
    e425:	c3                   	ret

000000000000e426 <_ZNK4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:

  double current() const {
    e426:	55                   	push   %rbp
    e427:	48 89 e5             	mov    %rsp,%rbp
    e42a:	53                   	push   %rbx
    e42b:	48 83 ec 38          	sub    $0x38,%rsp
    e42f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
    e433:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
    e437:	e8 e4 61 ff ff       	call   4620 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e43c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    e440:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e444:	48 89 de             	mov    %rbx,%rsi
    e447:	48 89 c7             	mov    %rax,%rdi
    e44a:	e8 ab 2f 00 00       	call   113fa <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
    e44f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
    e453:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    e457:	48 89 c7             	mov    %rax,%rdi
    e45a:	e8 e0 2f 00 00       	call   1143f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
    e45f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
    e463:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    e467:	48 89 c7             	mov    %rax,%rdi
    e46a:	e8 eb 2f 00 00       	call   1145a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
    e46f:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e473:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    e478:	66 48 0f 7e c0       	movq   %xmm0,%rax
  }
    e47d:	66 48 0f 6e c0       	movq   %rax,%xmm0
    e482:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e486:	c9                   	leave
    e487:	c3                   	ret

000000000000e488 <_ZN4rtvc5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
    e488:	55                   	push   %rbp
    e489:	48 89 e5             	mov    %rsp,%rbp
    e48c:	53                   	push   %rbx
    e48d:	48 83 ec 18          	sub    $0x18,%rsp
    e491:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e495:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    e499:	e8 82 61 ff ff       	call   4620 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    e49e:	48 89 03             	mov    %rax,(%rbx)
    e4a1:	90                   	nop
    e4a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e4a6:	c9                   	leave
    e4a7:	c3                   	ret

000000000000e4a8 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    e4a8:	55                   	push   %rbp
    e4a9:	48 89 e5             	mov    %rsp,%rbp
    e4ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    e4b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4b8:	0f b6 10             	movzbl (%rax),%edx
    e4bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e4bf:	0f b6 00             	movzbl (%rax),%eax
    e4c2:	38 c2                	cmp    %al,%dl
    e4c4:	0f 94 c0             	sete   %al
    e4c7:	5d                   	pop    %rbp
    e4c8:	c3                   	ret
    e4c9:	90                   	nop

000000000000e4ca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    e4ca:	55                   	push   %rbp
    e4cb:	48 89 e5             	mov    %rsp,%rbp
    e4ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e4d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4da:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e4de:	48 89 10             	mov    %rdx,(%rax)
    e4e1:	90                   	nop
    e4e2:	5d                   	pop    %rbp
    e4e3:	c3                   	ret

000000000000e4e4 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    e4e4:	55                   	push   %rbp
    e4e5:	48 89 e5             	mov    %rsp,%rbp
    e4e8:	48 83 ec 10          	sub    $0x10,%rsp
    e4ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e4f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e4f4:	48 8b 00             	mov    (%rax),%rax
    e4f7:	48 85 c0             	test   %rax,%rax
    e4fa:	74 0f                	je     e50b <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    e4fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e500:	48 8b 00             	mov    (%rax),%rax
    e503:	48 89 c7             	mov    %rax,%rdi
    e506:	e8 85 60 ff ff       	call   4590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    e50b:	90                   	nop
    e50c:	c9                   	leave
    e50d:	c3                   	ret

000000000000e50e <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    e50e:	55                   	push   %rbp
    e50f:	48 89 e5             	mov    %rsp,%rbp
    e512:	48 83 ec 40          	sub    $0x40,%rsp
    e516:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e51a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    e51e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    e522:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e526:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e52a:	48 89 d6             	mov    %rdx,%rsi
    e52d:	48 89 c7             	mov    %rax,%rdi
    e530:	e8 41 2f 00 00       	call   11476 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    e535:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    e539:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    e53d:	48 83 f8 0f          	cmp    $0xf,%rax
    e541:	76 3f                	jbe    e582 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    e543:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    e547:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e54b:	ba 00 00 00 00       	mov    $0x0,%edx
    e550:	48 89 ce             	mov    %rcx,%rsi
    e553:	48 89 c7             	mov    %rax,%rdi
    e556:	e8 45 63 ff ff       	call   48a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    e55b:	48 89 c2             	mov    %rax,%rdx
    e55e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e562:	48 89 d6             	mov    %rdx,%rsi
    e565:	48 89 c7             	mov    %rax,%rdi
    e568:	e8 d3 5d ff ff       	call   4340 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    e56d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e571:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e575:	48 89 d6             	mov    %rdx,%rsi
    e578:	48 89 c7             	mov    %rax,%rdi
    e57b:	e8 70 63 ff ff       	call   48f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    e580:	eb 15                	jmp    e597 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    e582:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e586:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    e58a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e58e:	48 89 c7             	mov    %rax,%rdi
    e591:	e8 4a 5d ff ff       	call   42e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    e596:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    e597:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e59b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e59f:	48 89 d6             	mov    %rdx,%rsi
    e5a2:	48 89 c7             	mov    %rax,%rdi
    e5a5:	e8 20 ff ff ff       	call   e4ca <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    e5aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e5ae:	48 89 c7             	mov    %rax,%rdi
    e5b1:	e8 3a 5f ff ff       	call   44f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    e5b6:	48 89 c1             	mov    %rax,%rcx
    e5b9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    e5bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e5c1:	48 89 c6             	mov    %rax,%rsi
    e5c4:	48 89 cf             	mov    %rcx,%rdi
    e5c7:	e8 34 5f ff ff       	call   4500 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    e5cc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e5d3:	00 

	_M_set_length(__dnew);
    e5d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e5d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e5dc:	48 89 d6             	mov    %rdx,%rsi
    e5df:	48 89 c7             	mov    %rax,%rdi
    e5e2:	e8 69 5c ff ff       	call   4250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    e5e7:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    e5eb:	48 89 c7             	mov    %rax,%rdi
    e5ee:	e8 f1 fe ff ff       	call   e4e4 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    e5f3:	c9                   	leave
    e5f4:	c3                   	ret
    e5f5:	90                   	nop

000000000000e5f6 <_ZNSt15__new_allocatorIjED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e5f6:	55                   	push   %rbp
    e5f7:	48 89 e5             	mov    %rsp,%rbp
    e5fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e5fe:	90                   	nop
    e5ff:	5d                   	pop    %rbp
    e600:	c3                   	ret
    e601:	90                   	nop

000000000000e602 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e602:	55                   	push   %rbp
    e603:	48 89 e5             	mov    %rsp,%rbp
    e606:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e60a:	90                   	nop
    e60b:	5d                   	pop    %rbp
    e60c:	c3                   	ret
    e60d:	90                   	nop

000000000000e60e <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e60e:	55                   	push   %rbp
    e60f:	48 89 e5             	mov    %rsp,%rbp
    e612:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e616:	90                   	nop
    e617:	5d                   	pop    %rbp
    e618:	c3                   	ret
    e619:	90                   	nop

000000000000e61a <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    e61a:	55                   	push   %rbp
    e61b:	48 89 e5             	mov    %rsp,%rbp
    e61e:	48 83 ec 10          	sub    $0x10,%rsp
    e622:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e626:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
    e62a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e62e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e632:	48 89 d6             	mov    %rdx,%rsi
    e635:	48 89 c7             	mov    %rax,%rdi
    e638:	e8 6b 2e 00 00       	call   114a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
    e63d:	90                   	nop
    e63e:	c9                   	leave
    e63f:	c3                   	ret

000000000000e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e640:	55                   	push   %rbp
    e641:	48 89 e5             	mov    %rsp,%rbp
    e644:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e64c:	5d                   	pop    %rbp
    e64d:	c3                   	ret

000000000000e64e <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e64e:	55                   	push   %rbp
    e64f:	48 89 e5             	mov    %rsp,%rbp
    e652:	48 83 ec 20          	sub    $0x20,%rsp
    e656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e65a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e65e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e662:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e66a:	48 89 d6             	mov    %rdx,%rsi
    e66d:	48 89 c7             	mov    %rax,%rdi
    e670:	e8 f8 2e 00 00       	call   1156d <_ZSt8_DestroyIPPKcEvT_S3_>
    }
    e675:	90                   	nop
    e676:	c9                   	leave
    e677:	c3                   	ret

000000000000e678 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
    e678:	55                   	push   %rbp
    e679:	48 89 e5             	mov    %rsp,%rbp
    e67c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e680:	90                   	nop
    e681:	5d                   	pop    %rbp
    e682:	c3                   	ret
    e683:	90                   	nop

000000000000e684 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e684:	55                   	push   %rbp
    e685:	48 89 e5             	mov    %rsp,%rbp
    e688:	48 83 ec 20          	sub    $0x20,%rsp
    e68c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e690:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e694:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e698:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e69d:	74 17                	je     e6b6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e69f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e6a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e6ab:	48 89 ce             	mov    %rcx,%rsi
    e6ae:	48 89 c7             	mov    %rax,%rdi
    e6b1:	e8 dd 2e 00 00       	call   11593 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    e6b6:	90                   	nop
    e6b7:	c9                   	leave
    e6b8:	c3                   	ret
    e6b9:	90                   	nop

000000000000e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e6ba:	55                   	push   %rbp
    e6bb:	48 89 e5             	mov    %rsp,%rbp
    e6be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e6c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6c6:	5d                   	pop    %rbp
    e6c7:	c3                   	ret

000000000000e6c8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e6c8:	55                   	push   %rbp
    e6c9:	48 89 e5             	mov    %rsp,%rbp
    e6cc:	48 83 ec 20          	sub    $0x20,%rsp
    e6d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e6d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e6dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e6e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e6e4:	48 89 d6             	mov    %rdx,%rsi
    e6e7:	48 89 c7             	mov    %rax,%rdi
    e6ea:	e8 d2 2e 00 00       	call   115c1 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    e6ef:	90                   	nop
    e6f0:	c9                   	leave
    e6f1:	c3                   	ret

000000000000e6f2 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
    e6f2:	55                   	push   %rbp
    e6f3:	48 89 e5             	mov    %rsp,%rbp
    e6f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e6fa:	90                   	nop
    e6fb:	5d                   	pop    %rbp
    e6fc:	c3                   	ret
    e6fd:	90                   	nop

000000000000e6fe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e6fe:	55                   	push   %rbp
    e6ff:	48 89 e5             	mov    %rsp,%rbp
    e702:	48 83 ec 20          	sub    $0x20,%rsp
    e706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e70a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e70e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e712:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e717:	74 17                	je     e730 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e719:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e71d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e721:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e725:	48 89 ce             	mov    %rcx,%rsi
    e728:	48 89 c7             	mov    %rax,%rdi
    e72b:	e8 b7 2e 00 00       	call   115e7 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
    e730:	90                   	nop
    e731:	c9                   	leave
    e732:	c3                   	ret
    e733:	90                   	nop

000000000000e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e734:	55                   	push   %rbp
    e735:	48 89 e5             	mov    %rsp,%rbp
    e738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e73c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e740:	5d                   	pop    %rbp
    e741:	c3                   	ret

000000000000e742 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e742:	55                   	push   %rbp
    e743:	48 89 e5             	mov    %rsp,%rbp
    e746:	48 83 ec 20          	sub    $0x20,%rsp
    e74a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e74e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e752:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e756:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e75a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e75e:	48 89 d6             	mov    %rdx,%rsi
    e761:	48 89 c7             	mov    %rax,%rdi
    e764:	e8 ac 2e 00 00       	call   11615 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
    e769:	90                   	nop
    e76a:	c9                   	leave
    e76b:	c3                   	ret

000000000000e76c <_ZNSt15__new_allocatorIP15VkFramebuffer_TED1Ev>:
    e76c:	55                   	push   %rbp
    e76d:	48 89 e5             	mov    %rsp,%rbp
    e770:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e774:	90                   	nop
    e775:	5d                   	pop    %rbp
    e776:	c3                   	ret
    e777:	90                   	nop

000000000000e778 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e778:	55                   	push   %rbp
    e779:	48 89 e5             	mov    %rsp,%rbp
    e77c:	48 83 ec 20          	sub    $0x20,%rsp
    e780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e788:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e78c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e791:	74 17                	je     e7aa <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e793:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e797:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e79b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e79f:	48 89 ce             	mov    %rcx,%rsi
    e7a2:	48 89 c7             	mov    %rax,%rdi
    e7a5:	e8 91 2e 00 00       	call   1163b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>
      }
    e7aa:	90                   	nop
    e7ab:	c9                   	leave
    e7ac:	c3                   	ret
    e7ad:	90                   	nop

000000000000e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e7ae:	55                   	push   %rbp
    e7af:	48 89 e5             	mov    %rsp,%rbp
    e7b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e7b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7ba:	5d                   	pop    %rbp
    e7bb:	c3                   	ret

000000000000e7bc <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e7bc:	55                   	push   %rbp
    e7bd:	48 89 e5             	mov    %rsp,%rbp
    e7c0:	48 83 ec 20          	sub    $0x20,%rsp
    e7c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e7cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e7d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e7d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e7d8:	48 89 d6             	mov    %rdx,%rsi
    e7db:	48 89 c7             	mov    %rax,%rdi
    e7de:	e8 86 2e 00 00       	call   11669 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>
    }
    e7e3:	90                   	nop
    e7e4:	c9                   	leave
    e7e5:	c3                   	ret

000000000000e7e6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
    e7e6:	55                   	push   %rbp
    e7e7:	48 89 e5             	mov    %rsp,%rbp
    e7ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7ee:	90                   	nop
    e7ef:	5d                   	pop    %rbp
    e7f0:	c3                   	ret
    e7f1:	90                   	nop

000000000000e7f2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e7f2:	55                   	push   %rbp
    e7f3:	48 89 e5             	mov    %rsp,%rbp
    e7f6:	48 83 ec 20          	sub    $0x20,%rsp
    e7fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e7fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e802:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e806:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e80b:	74 17                	je     e824 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e80d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e811:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e815:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e819:	48 89 ce             	mov    %rcx,%rsi
    e81c:	48 89 c7             	mov    %rax,%rdi
    e81f:	e8 6b 2e 00 00       	call   1168f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    e824:	90                   	nop
    e825:	c9                   	leave
    e826:	c3                   	ret
    e827:	90                   	nop

000000000000e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e828:	55                   	push   %rbp
    e829:	48 89 e5             	mov    %rsp,%rbp
    e82c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e834:	5d                   	pop    %rbp
    e835:	c3                   	ret

000000000000e836 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e836:	55                   	push   %rbp
    e837:	48 89 e5             	mov    %rsp,%rbp
    e83a:	48 83 ec 20          	sub    $0x20,%rsp
    e83e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e842:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e846:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e84a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e84e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e852:	48 89 d6             	mov    %rdx,%rsi
    e855:	48 89 c7             	mov    %rax,%rdi
    e858:	e8 60 2e 00 00       	call   116bd <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    e85d:	90                   	nop
    e85e:	c9                   	leave
    e85f:	c3                   	ret

000000000000e860 <_ZNSt15__new_allocatorIP13VkSemaphore_TED1Ev>:
    e860:	55                   	push   %rbp
    e861:	48 89 e5             	mov    %rsp,%rbp
    e864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e868:	90                   	nop
    e869:	5d                   	pop    %rbp
    e86a:	c3                   	ret
    e86b:	90                   	nop

000000000000e86c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e86c:	55                   	push   %rbp
    e86d:	48 89 e5             	mov    %rsp,%rbp
    e870:	48 83 ec 20          	sub    $0x20,%rsp
    e874:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e878:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e87c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e880:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e885:	74 17                	je     e89e <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e88b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e88f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e893:	48 89 ce             	mov    %rcx,%rsi
    e896:	48 89 c7             	mov    %rax,%rdi
    e899:	e8 45 2e 00 00       	call   116e3 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>
      }
    e89e:	90                   	nop
    e89f:	c9                   	leave
    e8a0:	c3                   	ret
    e8a1:	90                   	nop

000000000000e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e8a2:	55                   	push   %rbp
    e8a3:	48 89 e5             	mov    %rsp,%rbp
    e8a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e8aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8ae:	5d                   	pop    %rbp
    e8af:	c3                   	ret

000000000000e8b0 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e8b0:	55                   	push   %rbp
    e8b1:	48 89 e5             	mov    %rsp,%rbp
    e8b4:	48 83 ec 20          	sub    $0x20,%rsp
    e8b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8c0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e8c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e8c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e8cc:	48 89 d6             	mov    %rdx,%rsi
    e8cf:	48 89 c7             	mov    %rax,%rdi
    e8d2:	e8 3a 2e 00 00       	call   11711 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>
    }
    e8d7:	90                   	nop
    e8d8:	c9                   	leave
    e8d9:	c3                   	ret

000000000000e8da <_ZNSt15__new_allocatorIP9VkFence_TED1Ev>:
    e8da:	55                   	push   %rbp
    e8db:	48 89 e5             	mov    %rsp,%rbp
    e8de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8e2:	90                   	nop
    e8e3:	5d                   	pop    %rbp
    e8e4:	c3                   	ret
    e8e5:	90                   	nop

000000000000e8e6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    e8e6:	55                   	push   %rbp
    e8e7:	48 89 e5             	mov    %rsp,%rbp
    e8ea:	48 83 ec 20          	sub    $0x20,%rsp
    e8ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e8f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e8f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    e8fa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    e8ff:	74 17                	je     e918 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    e901:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e905:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    e909:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    e90d:	48 89 ce             	mov    %rcx,%rsi
    e910:	48 89 c7             	mov    %rax,%rdi
    e913:	e8 1f 2e 00 00       	call   11737 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>
      }
    e918:	90                   	nop
    e919:	c9                   	leave
    e91a:	c3                   	ret
    e91b:	90                   	nop

000000000000e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    e91c:	55                   	push   %rbp
    e91d:	48 89 e5             	mov    %rsp,%rbp
    e920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    e924:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e928:	5d                   	pop    %rbp
    e929:	c3                   	ret

000000000000e92a <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    e92a:	55                   	push   %rbp
    e92b:	48 89 e5             	mov    %rsp,%rbp
    e92e:	48 83 ec 20          	sub    $0x20,%rsp
    e932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e936:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    e93a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    e93e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    e942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    e946:	48 89 d6             	mov    %rdx,%rsi
    e949:	48 89 c7             	mov    %rax,%rdi
    e94c:	e8 14 2e 00 00       	call   11765 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>
    }
    e951:	90                   	nop
    e952:	c9                   	leave
    e953:	c3                   	ret

000000000000e954 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e954:	55                   	push   %rbp
    e955:	48 89 e5             	mov    %rsp,%rbp
    e958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e95c:	90                   	nop
    e95d:	5d                   	pop    %rbp
    e95e:	c3                   	ret
    e95f:	90                   	nop

000000000000e960 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    e960:	55                   	push   %rbp
    e961:	48 89 e5             	mov    %rsp,%rbp
    e964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    e968:	90                   	nop
    e969:	5d                   	pop    %rbp
    e96a:	c3                   	ret

000000000000e96b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    e96b:	55                   	push   %rbp
    e96c:	48 89 e5             	mov    %rsp,%rbp
    e96f:	53                   	push   %rbx
    e970:	48 83 ec 28          	sub    $0x28,%rsp
    e974:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    e978:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    e97c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    e980:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e984:	48 89 d6             	mov    %rdx,%rsi
    e987:	48 89 c7             	mov    %rax,%rdi
    e98a:	e8 25 01 00 00       	call   eab4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    e98f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e993:	48 89 c7             	mov    %rax,%rdi
    e996:	e8 f0 2d 00 00       	call   1178b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    e99b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    e99f:	0f 92 c3             	setb   %bl
    e9a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    e9a6:	48 89 c7             	mov    %rax,%rdi
    e9a9:	e8 b4 dd ff ff       	call   c762 <_ZNSaI21VkExtensionPropertiesED1Ev>
    e9ae:	84 db                	test   %bl,%bl
    e9b0:	74 0f                	je     e9c1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    e9b2:	48 8d 05 4f ce 00 00 	lea    0xce4f(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    e9b9:	48 89 c7             	mov    %rax,%rdi
    e9bc:	e8 ef 57 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    e9c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    e9c5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    e9c9:	c9                   	leave
    e9ca:	c3                   	ret
    e9cb:	90                   	nop

000000000000e9cc <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    e9cc:	55                   	push   %rbp
    e9cd:	48 89 e5             	mov    %rsp,%rbp
    e9d0:	53                   	push   %rbx
    e9d1:	48 83 ec 28          	sub    $0x28,%rsp
    e9d5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    e9d9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    e9dd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    e9e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e9e9:	48 89 d6             	mov    %rdx,%rsi
    e9ec:	48 89 c7             	mov    %rax,%rdi
    e9ef:	e8 da 2d 00 00       	call   117ce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    e9f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    e9f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    e9fc:	48 89 d6             	mov    %rdx,%rsi
    e9ff:	48 89 c7             	mov    %rax,%rdi
    ea02:	e8 f9 2d 00 00       	call   11800 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    ea07:	eb 1a                	jmp    ea23 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    ea09:	48 89 c3             	mov    %rax,%rbx
    ea0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ea10:	48 89 c7             	mov    %rax,%rdi
    ea13:	e8 12 d5 ff ff       	call   bf2a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    ea18:	48 89 d8             	mov    %rbx,%rax
    ea1b:	48 89 c7             	mov    %rax,%rdi
    ea1e:	e8 4d 5e ff ff       	call   4870 <_Unwind_Resume@plt>
    ea23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ea27:	c9                   	leave
    ea28:	c3                   	ret
    ea29:	90                   	nop

000000000000ea2a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ea2a:	55                   	push   %rbp
    ea2b:	48 89 e5             	mov    %rsp,%rbp
    ea2e:	48 83 ec 10          	sub    $0x10,%rsp
    ea32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ea3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea3e:	48 89 c7             	mov    %rax,%rdi
    ea41:	e8 24 00 00 00       	call   ea6a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ea46:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ea49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea4d:	48 8b 00             	mov    (%rax),%rax
    ea50:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ea54:	48 89 ce             	mov    %rcx,%rsi
    ea57:	48 89 c7             	mov    %rax,%rdi
    ea5a:	e8 02 2e 00 00       	call   11861 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ea5f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ea63:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ea67:	90                   	nop
    ea68:	c9                   	leave
    ea69:	c3                   	ret

000000000000ea6a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ea6a:	55                   	push   %rbp
    ea6b:	48 89 e5             	mov    %rsp,%rbp
    ea6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ea72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea76:	5d                   	pop    %rbp
    ea77:	c3                   	ret

000000000000ea78 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    ea78:	55                   	push   %rbp
    ea79:	48 89 e5             	mov    %rsp,%rbp
    ea7c:	48 83 ec 20          	sub    $0x20,%rsp
    ea80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ea84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ea88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    ea8c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ea90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ea94:	48 89 d6             	mov    %rdx,%rsi
    ea97:	48 89 c7             	mov    %rax,%rdi
    ea9a:	e8 eb 2d 00 00       	call   1188a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    ea9f:	90                   	nop
    eaa0:	c9                   	leave
    eaa1:	c3                   	ret

000000000000eaa2 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    eaa2:	55                   	push   %rbp
    eaa3:	48 89 e5             	mov    %rsp,%rbp
    eaa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eaaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    eaae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eab2:	5d                   	pop    %rbp
    eab3:	c3                   	ret

000000000000eab4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    eab4:	55                   	push   %rbp
    eab5:	48 89 e5             	mov    %rsp,%rbp
    eab8:	48 83 ec 10          	sub    $0x10,%rsp
    eabc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eac0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    eac4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eacc:	48 89 d6             	mov    %rdx,%rsi
    eacf:	48 89 c7             	mov    %rax,%rdi
    ead2:	e8 d9 2d 00 00       	call   118b0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    ead7:	90                   	nop
    ead8:	c9                   	leave
    ead9:	c3                   	ret

000000000000eada <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    eada:	55                   	push   %rbp
    eadb:	48 89 e5             	mov    %rsp,%rbp
    eade:	48 83 ec 20          	sub    $0x20,%rsp
    eae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eaea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    eaee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eaf3:	74 17                	je     eb0c <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    eaf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eaf9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    eafd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    eb01:	48 89 ce             	mov    %rcx,%rsi
    eb04:	48 89 c7             	mov    %rax,%rdi
    eb07:	e8 b3 2d 00 00       	call   118bf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    eb0c:	90                   	nop
    eb0d:	c9                   	leave
    eb0e:	c3                   	ret

000000000000eb0f <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    eb0f:	55                   	push   %rbp
    eb10:	48 89 e5             	mov    %rsp,%rbp
    eb13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    eb17:	90                   	nop
    eb18:	5d                   	pop    %rbp
    eb19:	c3                   	ret

000000000000eb1a <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
    eb1a:	55                   	push   %rbp
    eb1b:	48 89 e5             	mov    %rsp,%rbp
    eb1e:	48 83 ec 10          	sub    $0x10,%rsp
    eb22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eb26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
    eb2a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    eb2e:	48 89 c7             	mov    %rax,%rdi
    eb31:	e8 d9 ff ff ff       	call   eb0f <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
    eb36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eb3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eb3e:	48 89 d6             	mov    %rdx,%rsi
    eb41:	48 89 c7             	mov    %rax,%rdi
    eb44:	e8 a4 2d 00 00       	call   118ed <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
    eb49:	c9                   	leave
    eb4a:	c3                   	ret
    eb4b:	90                   	nop

000000000000eb4c <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPS1_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
    eb4c:	55                   	push   %rbp
    eb4d:	48 89 e5             	mov    %rsp,%rbp
    eb50:	53                   	push   %rbx
    eb51:	48 83 ec 38          	sub    $0x38,%rsp
    eb55:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    eb59:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    eb5d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
    eb61:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    eb65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    eb69:	48 89 d6             	mov    %rdx,%rsi
    eb6c:	48 89 c7             	mov    %rax,%rdi
    eb6f:	e8 a6 ff ff ff       	call   eb1a <_ZSt8distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_>
    eb74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
    eb78:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    eb7c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eb80:	48 89 c7             	mov    %rax,%rdi
    eb83:	e8 b8 fa ff ff       	call   e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    eb88:	48 89 c2             	mov    %rax,%rdx
    eb8b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eb8f:	48 89 d6             	mov    %rdx,%rsi
    eb92:	48 89 c7             	mov    %rax,%rdi
    eb95:	e8 40 29 00 00       	call   114da <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    eb9a:	48 89 c6             	mov    %rax,%rsi
    eb9d:	48 89 df             	mov    %rbx,%rdi
    eba0:	e8 95 29 00 00       	call   1153a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    eba5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    eba9:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    ebac:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebb0:	48 8b 00             	mov    (%rax),%rax
    ebb3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ebb7:	48 c1 e2 03          	shl    $0x3,%rdx
    ebbb:	48 01 c2             	add    %rax,%rdx
    ebbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebc2:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
    ebc6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebca:	48 89 c7             	mov    %rax,%rdi
    ebcd:	e8 6e fa ff ff       	call   e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    ebd2:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
    ebd5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebd9:	48 8b 10             	mov    (%rax),%rdx
    ebdc:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    ebe0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    ebe4:	48 89 c7             	mov    %rax,%rdi
    ebe7:	e8 1b 2d 00 00       	call   11907 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>
	  this->_M_impl._M_finish =
    ebec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ebf0:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
    ebf4:	90                   	nop
    ebf5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ebf9:	c9                   	leave
    ebfa:	c3                   	ret

000000000000ebfb <_ZSt4moveIRPKcEONSt16remove_referenceIT_E4typeEOS4_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
    ebfb:	55                   	push   %rbp
    ebfc:	48 89 e5             	mov    %rsp,%rbp
    ebff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    ec03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ec07:	5d                   	pop    %rbp
    ec08:	c3                   	ret
    ec09:	90                   	nop

000000000000ec0a <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
    ec0a:	55                   	push   %rbp
    ec0b:	48 89 e5             	mov    %rsp,%rbp
    ec0e:	53                   	push   %rbx
    ec0f:	48 83 ec 18          	sub    $0x18,%rsp
    ec13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ec17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    ec1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec1f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    ec23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec27:	48 8b 40 10          	mov    0x10(%rax),%rax
    ec2b:	48 39 c2             	cmp    %rax,%rdx
    ec2e:	74 3c                	je     ec6c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    ec30:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec34:	48 89 c7             	mov    %rax,%rdi
    ec37:	e8 fc 2c 00 00       	call   11938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ec3c:	48 89 c2             	mov    %rax,%rdx
    ec3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec43:	48 8b 48 08          	mov    0x8(%rax),%rcx
    ec47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec4b:	48 89 ce             	mov    %rcx,%rsi
    ec4e:	48 89 c7             	mov    %rax,%rdi
    ec51:	e8 f0 2c 00 00       	call   11946 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
    ec56:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec5a:	48 8b 40 08          	mov    0x8(%rax),%rax
    ec5e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ec62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec66:	48 89 50 08          	mov    %rdx,0x8(%rax)
    ec6a:	eb 30                	jmp    ec9c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
    ec6c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ec70:	48 89 c7             	mov    %rax,%rdi
    ec73:	e8 c0 2c 00 00       	call   11938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
    ec78:	48 89 c3             	mov    %rax,%rbx
    ec7b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec7f:	48 89 c7             	mov    %rax,%rdi
    ec82:	e8 03 e1 ff ff       	call   cd8a <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    ec87:	48 89 c1             	mov    %rax,%rcx
    ec8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ec8e:	48 89 da             	mov    %rbx,%rdx
    ec91:	48 89 ce             	mov    %rcx,%rsi
    ec94:	48 89 c7             	mov    %rax,%rdi
    ec97:	e8 e4 2c 00 00       	call   11980 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
    ec9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    eca0:	48 89 c7             	mov    %rax,%rdi
    eca3:	e8 6a 2e 00 00       	call   11b12 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
    eca8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ecac:	c9                   	leave
    ecad:	c3                   	ret

000000000000ecae <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    ecae:	55                   	push   %rbp
    ecaf:	48 89 e5             	mov    %rsp,%rbp
    ecb2:	48 83 ec 10          	sub    $0x10,%rsp
    ecb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ecba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    ecbe:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ecc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecc6:	48 89 d6             	mov    %rdx,%rsi
    ecc9:	48 89 c7             	mov    %rax,%rdi
    eccc:	e8 81 2e 00 00       	call   11b52 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    ecd1:	90                   	nop
    ecd2:	c9                   	leave
    ecd3:	c3                   	ret

000000000000ecd4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    ecd4:	55                   	push   %rbp
    ecd5:	48 89 e5             	mov    %rsp,%rbp
    ecd8:	48 83 ec 20          	sub    $0x20,%rsp
    ecdc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ece0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ece4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    ece8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    eced:	74 17                	je     ed06 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    ecef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ecf7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ecfb:	48 89 ce             	mov    %rcx,%rsi
    ecfe:	48 89 c7             	mov    %rax,%rdi
    ed01:	e8 5b 2e 00 00       	call   11b61 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    ed06:	90                   	nop
    ed07:	c9                   	leave
    ed08:	c3                   	ret
    ed09:	90                   	nop

000000000000ed0a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ed0a:	55                   	push   %rbp
    ed0b:	48 89 e5             	mov    %rsp,%rbp
    ed0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed12:	90                   	nop
    ed13:	5d                   	pop    %rbp
    ed14:	c3                   	ret
    ed15:	90                   	nop

000000000000ed16 <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    ed16:	55                   	push   %rbp
    ed17:	48 89 e5             	mov    %rsp,%rbp
    ed1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed1e:	90                   	nop
    ed1f:	5d                   	pop    %rbp
    ed20:	c3                   	ret

000000000000ed21 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    ed21:	55                   	push   %rbp
    ed22:	48 89 e5             	mov    %rsp,%rbp
    ed25:	53                   	push   %rbx
    ed26:	48 83 ec 28          	sub    $0x28,%rsp
    ed2a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    ed2e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    ed32:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ed36:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ed3a:	48 89 d6             	mov    %rdx,%rsi
    ed3d:	48 89 c7             	mov    %rax,%rdi
    ed40:	e8 8d 2e 00 00       	call   11bd2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    ed45:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ed49:	48 89 c7             	mov    %rax,%rdi
    ed4c:	e8 3e 2e 00 00       	call   11b8f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    ed51:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    ed55:	0f 92 c3             	setb   %bl
    ed58:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    ed5c:	48 89 c7             	mov    %rax,%rdi
    ed5f:	e8 5e dc ff ff       	call   c9c2 <_ZNSaI17VkLayerPropertiesED1Ev>
    ed64:	84 db                	test   %bl,%bl
    ed66:	74 0f                	je     ed77 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    ed68:	48 8d 05 99 ca 00 00 	lea    0xca99(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    ed6f:	48 89 c7             	mov    %rax,%rdi
    ed72:	e8 39 54 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    ed77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    ed7b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ed7f:	c9                   	leave
    ed80:	c3                   	ret
    ed81:	90                   	nop

000000000000ed82 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    ed82:	55                   	push   %rbp
    ed83:	48 89 e5             	mov    %rsp,%rbp
    ed86:	48 83 ec 10          	sub    $0x10,%rsp
    ed8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ed8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ed92:	48 89 c7             	mov    %rax,%rdi
    ed95:	e8 28 dc ff ff       	call   c9c2 <_ZNSaI17VkLayerPropertiesED1Ev>
    ed9a:	90                   	nop
    ed9b:	c9                   	leave
    ed9c:	c3                   	ret
    ed9d:	90                   	nop

000000000000ed9e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    ed9e:	55                   	push   %rbp
    ed9f:	48 89 e5             	mov    %rsp,%rbp
    eda2:	53                   	push   %rbx
    eda3:	48 83 ec 28          	sub    $0x28,%rsp
    eda7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    edab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    edaf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    edb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    edb7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    edbb:	48 89 d6             	mov    %rdx,%rsi
    edbe:	48 89 c7             	mov    %rax,%rdi
    edc1:	e8 32 2e 00 00       	call   11bf8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    edc6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    edca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    edce:	48 89 d6             	mov    %rdx,%rsi
    edd1:	48 89 c7             	mov    %rax,%rdi
    edd4:	e8 51 2e 00 00       	call   11c2a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    edd9:	eb 1a                	jmp    edf5 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    eddb:	48 89 c3             	mov    %rax,%rbx
    edde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ede2:	48 89 c7             	mov    %rax,%rdi
    ede5:	e8 98 ff ff ff       	call   ed82 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    edea:	48 89 d8             	mov    %rbx,%rax
    eded:	48 89 c7             	mov    %rax,%rdi
    edf0:	e8 7b 5a ff ff       	call   4870 <_Unwind_Resume@plt>
    edf5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    edf9:	c9                   	leave
    edfa:	c3                   	ret
    edfb:	90                   	nop

000000000000edfc <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    edfc:	55                   	push   %rbp
    edfd:	48 89 e5             	mov    %rsp,%rbp
    ee00:	48 83 ec 10          	sub    $0x10,%rsp
    ee04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    ee08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee0c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    ee10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee14:	48 8b 00             	mov    (%rax),%rax
    ee17:	48 29 c2             	sub    %rax,%rdx
    ee1a:	48 c1 fa 03          	sar    $0x3,%rdx
    ee1e:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    ee25:	fc c0 0f 
    ee28:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    ee2c:	48 89 c2             	mov    %rax,%rdx
    ee2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee33:	48 8b 08             	mov    (%rax),%rcx
    ee36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee3a:	48 89 ce             	mov    %rcx,%rsi
    ee3d:	48 89 c7             	mov    %rax,%rdi
    ee40:	e8 47 2e 00 00       	call   11c8c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    ee45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee49:	48 89 c7             	mov    %rax,%rdi
    ee4c:	e8 31 ff ff ff       	call   ed82 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    ee51:	90                   	nop
    ee52:	c9                   	leave
    ee53:	c3                   	ret

000000000000ee54 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    ee54:	55                   	push   %rbp
    ee55:	48 89 e5             	mov    %rsp,%rbp
    ee58:	48 83 ec 10          	sub    $0x10,%rsp
    ee5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ee60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    ee64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee68:	48 89 c7             	mov    %rax,%rdi
    ee6b:	e8 24 00 00 00       	call   ee94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    ee70:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    ee73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ee77:	48 8b 00             	mov    (%rax),%rax
    ee7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    ee7e:	48 89 ce             	mov    %rcx,%rsi
    ee81:	48 89 c7             	mov    %rax,%rdi
    ee84:	e8 38 2e 00 00       	call   11cc1 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    ee89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ee8d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    ee91:	90                   	nop
    ee92:	c9                   	leave
    ee93:	c3                   	ret

000000000000ee94 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    ee94:	55                   	push   %rbp
    ee95:	48 89 e5             	mov    %rsp,%rbp
    ee98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    ee9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eea0:	5d                   	pop    %rbp
    eea1:	c3                   	ret

000000000000eea2 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    eea2:	55                   	push   %rbp
    eea3:	48 89 e5             	mov    %rsp,%rbp
    eea6:	48 83 ec 20          	sub    $0x20,%rsp
    eeaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eeae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    eeb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    eeb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    eeba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eebe:	48 89 d6             	mov    %rdx,%rsi
    eec1:	48 89 c7             	mov    %rax,%rdi
    eec4:	e8 21 2e 00 00       	call   11cea <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    eec9:	90                   	nop
    eeca:	c9                   	leave
    eecb:	c3                   	ret

000000000000eecc <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    eecc:	55                   	push   %rbp
    eecd:	48 89 e5             	mov    %rsp,%rbp
    eed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eed4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    eed8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eedc:	5d                   	pop    %rbp
    eedd:	c3                   	ret

000000000000eede <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    eede:	55                   	push   %rbp
    eedf:	48 89 e5             	mov    %rsp,%rbp
    eee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    eee6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    eeea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    eeee:	48 8b 10             	mov    (%rax),%rdx
    eef1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eef5:	48 89 10             	mov    %rdx,(%rax)
    eef8:	90                   	nop
    eef9:	5d                   	pop    %rbp
    eefa:	c3                   	ret
    eefb:	90                   	nop

000000000000eefc <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    eefc:	55                   	push   %rbp
    eefd:	48 89 e5             	mov    %rsp,%rbp
    ef00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ef04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef08:	5d                   	pop    %rbp
    ef09:	c3                   	ret

000000000000ef0a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ef0a:	55                   	push   %rbp
    ef0b:	48 89 e5             	mov    %rsp,%rbp
    ef0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ef16:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef1a:	48 8b 10             	mov    (%rax),%rdx
    ef1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef21:	48 89 10             	mov    %rdx,(%rax)
    ef24:	90                   	nop
    ef25:	5d                   	pop    %rbp
    ef26:	c3                   	ret
    ef27:	90                   	nop

000000000000ef28 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ef28:	55                   	push   %rbp
    ef29:	48 89 e5             	mov    %rsp,%rbp
    ef2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ef30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef34:	5d                   	pop    %rbp
    ef35:	c3                   	ret

000000000000ef36 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    ef36:	55                   	push   %rbp
    ef37:	48 89 e5             	mov    %rsp,%rbp
    ef3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    ef42:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef46:	5d                   	pop    %rbp
    ef47:	c3                   	ret

000000000000ef48 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ef48:	55                   	push   %rbp
    ef49:	48 89 e5             	mov    %rsp,%rbp
    ef4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ef54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef58:	48 8b 10             	mov    (%rax),%rdx
    ef5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef5f:	48 89 10             	mov    %rdx,(%rax)
    ef62:	90                   	nop
    ef63:	5d                   	pop    %rbp
    ef64:	c3                   	ret
    ef65:	90                   	nop

000000000000ef66 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ef66:	55                   	push   %rbp
    ef67:	48 89 e5             	mov    %rsp,%rbp
    ef6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ef6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef72:	5d                   	pop    %rbp
    ef73:	c3                   	ret

000000000000ef74 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    ef74:	55                   	push   %rbp
    ef75:	48 89 e5             	mov    %rsp,%rbp
    ef78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ef7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    ef80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef84:	48 8b 10             	mov    (%rax),%rdx
    ef87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef8b:	48 89 10             	mov    %rdx,(%rax)
    ef8e:	90                   	nop
    ef8f:	5d                   	pop    %rbp
    ef90:	c3                   	ret
    ef91:	90                   	nop

000000000000ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    ef92:	55                   	push   %rbp
    ef93:	48 89 e5             	mov    %rsp,%rbp
    ef96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    ef9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef9e:	5d                   	pop    %rbp
    ef9f:	c3                   	ret

000000000000efa0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE13_Rb_tree_implIS9_Lb1EEC1Ev>:
	  _Rb_tree_impl()
    efa0:	55                   	push   %rbp
    efa1:	48 89 e5             	mov    %rsp,%rbp
    efa4:	48 83 ec 10          	sub    $0x10,%rsp
    efa8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
    efac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efb0:	48 89 c7             	mov    %rax,%rdi
    efb3:	e8 58 2d 00 00       	call   11d10 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    efb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efbc:	48 89 c7             	mov    %rax,%rdi
    efbf:	e8 68 2d 00 00       	call   11d2c <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
    efc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efc8:	48 83 c0 08          	add    $0x8,%rax
    efcc:	48 89 c7             	mov    %rax,%rdi
    efcf:	e8 92 cd ff ff       	call   bd66 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
    efd4:	90                   	nop
    efd5:	c9                   	leave
    efd6:	c3                   	ret
    efd7:	90                   	nop

000000000000efd8 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    efd8:	55                   	push   %rbp
    efd9:	48 89 e5             	mov    %rsp,%rbp
    efdc:	48 83 ec 10          	sub    $0x10,%rsp
    efe0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    efe4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    efe8:	48 89 c7             	mov    %rax,%rdi
    efeb:	e8 48 2d 00 00       	call   11d38 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>
    eff0:	90                   	nop
    eff1:	c9                   	leave
    eff2:	c3                   	ret
    eff3:	90                   	nop

000000000000eff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_>:
	    _M_insert_unique_(end(), *__first, __an);
	}

      template<typename _InputIterator>
	__enable_if_t<!__same_value_type<_InputIterator>::value>
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    eff4:	55                   	push   %rbp
    eff5:	48 89 e5             	mov    %rsp,%rbp
    eff8:	48 83 ec 20          	sub    $0x20,%rsp
    effc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f000:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f004:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	{
	  for (; __first != __last; ++__first)
    f008:	eb 2a                	jmp    f034 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x40>
	    _M_emplace_unique(*__first);
    f00a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f00e:	48 89 c7             	mov    %rax,%rdi
    f011:	e8 50 db ff ff       	call   cb66 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f016:	48 89 c2             	mov    %rax,%rdx
    f019:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f01d:	48 89 d6             	mov    %rdx,%rsi
    f020:	48 89 c7             	mov    %rax,%rdi
    f023:	e8 1c 2d 00 00       	call   11d44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>
	  for (; __first != __last; ++__first)
    f028:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f02c:	48 89 c7             	mov    %rax,%rdi
    f02f:	e8 12 db ff ff       	call   cb46 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f034:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    f038:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f03c:	48 89 d6             	mov    %rdx,%rsi
    f03f:	48 89 c7             	mov    %rax,%rdi
    f042:	e8 c4 da ff ff       	call   cb0b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f047:	84 c0                	test   %al,%al
    f049:	75 bf                	jne    f00a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE22_M_insert_range_uniqueIN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorISG_SaISG_EEEEEENSt9enable_ifIXntsrSt7is_sameIS5_NSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESQ_SQ_+0x16>
	}
    f04b:	90                   	nop
    f04c:	90                   	nop
    f04d:	c9                   	leave
    f04e:	c3                   	ret
    f04f:	90                   	nop

000000000000f050 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f050:	55                   	push   %rbp
    f051:	48 89 e5             	mov    %rsp,%rbp
    f054:	48 83 ec 20          	sub    $0x20,%rsp
    f058:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f05c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
    f060:	eb 49                	jmp    f0ab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x5b>
	{
	  _M_erase(_S_right(__x));
    f062:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f066:	48 89 c7             	mov    %rax,%rdi
    f069:	e8 fa 2d 00 00       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
    f06e:	48 89 c2             	mov    %rax,%rdx
    f071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f075:	48 89 d6             	mov    %rdx,%rsi
    f078:	48 89 c7             	mov    %rax,%rdi
    f07b:	e8 d0 ff ff ff       	call   f050 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	  _Link_type __y = _S_left(__x);
    f080:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f084:	48 89 c7             	mov    %rax,%rdi
    f087:	e8 ee 2d 00 00       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
    f08c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    f090:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f094:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f098:	48 89 d6             	mov    %rdx,%rsi
    f09b:	48 89 c7             	mov    %rax,%rdi
    f09e:	e8 e9 2d 00 00       	call   11e8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	  __x = __y;
    f0a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0a7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    f0ab:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    f0b0:	75 b0                	jne    f062 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x12>
	}
    }
    f0b2:	90                   	nop
    f0b3:	90                   	nop
    f0b4:	c9                   	leave
    f0b5:	c3                   	ret

000000000000f0b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    f0b6:	55                   	push   %rbp
    f0b7:	48 89 e5             	mov    %rsp,%rbp
    f0ba:	48 83 ec 10          	sub    $0x10,%rsp
    f0be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    f0c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f0c6:	48 89 c7             	mov    %rax,%rdi
    f0c9:	e8 f8 2d 00 00       	call   11ec6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>
    f0ce:	c9                   	leave
    f0cf:	c3                   	ret

000000000000f0d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5eraseERKS5_>:
    }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    f0d0:	55                   	push   %rbp
    f0d1:	48 89 e5             	mov    %rsp,%rbp
    f0d4:	48 83 ec 40          	sub    $0x40,%rsp
    f0d8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f0dc:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    erase(const _Key& __x)
    {
      pair<iterator, iterator> __p = equal_range(__x);
    f0e0:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    f0e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f0e8:	48 89 d6             	mov    %rdx,%rsi
    f0eb:	48 89 c7             	mov    %rax,%rdi
    f0ee:	e8 e5 2d 00 00       	call   11ed8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>
    f0f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f0f7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const size_type __old_size = size();
    f0fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f0ff:	48 89 c7             	mov    %rax,%rdi
    f102:	e8 6f 2f 00 00       	call   12076 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    f107:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_erase_aux(__p.first, __p.second);
    f10b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    f10f:	48 8d 50 08          	lea    0x8(%rax),%rdx
    f113:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    f117:	48 89 d6             	mov    %rdx,%rsi
    f11a:	48 89 c7             	mov    %rax,%rdi
    f11d:	e8 66 2f 00 00       	call   12088 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    f122:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    f126:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    f12a:	48 89 d6             	mov    %rdx,%rsi
    f12d:	48 89 c7             	mov    %rax,%rdi
    f130:	e8 53 2f 00 00       	call   12088 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
    f135:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f139:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f13d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f141:	48 89 ce             	mov    %rcx,%rsi
    f144:	48 89 c7             	mov    %rax,%rdi
    f147:	e8 5a 2f 00 00       	call   120a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>
      return __old_size - size();
    f14c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f150:	48 89 c7             	mov    %rax,%rdi
    f153:	e8 1e 2f 00 00       	call   12076 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>
    f158:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    f15c:	48 29 c2             	sub    %rax,%rdx
    f15f:	48 89 d0             	mov    %rdx,%rax
    }
    f162:	c9                   	leave
    f163:	c3                   	ret

000000000000f164 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
    f164:	55                   	push   %rbp
    f165:	48 89 e5             	mov    %rsp,%rbp
    f168:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count == 0; }
    f16c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f170:	48 8b 40 28          	mov    0x28(%rax),%rax
    f174:	48 85 c0             	test   %rax,%rax
    f177:	0f 94 c0             	sete   %al
    f17a:	5d                   	pop    %rbp
    f17b:	c3                   	ret

000000000000f17c <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    f17c:	55                   	push   %rbp
    f17d:	48 89 e5             	mov    %rsp,%rbp
    f180:	48 83 ec 10          	sub    $0x10,%rsp
    f184:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f18c:	48 89 c7             	mov    %rax,%rdi
    f18f:	e8 f6 2f 00 00       	call   1218a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    f194:	90                   	nop
    f195:	c9                   	leave
    f196:	c3                   	ret
    f197:	90                   	nop

000000000000f198 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    f198:	55                   	push   %rbp
    f199:	48 89 e5             	mov    %rsp,%rbp
    f19c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    f1a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1a4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f1ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1af:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f1b6:	00 
    f1b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1bb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f1c2:	00 
	{ }
    f1c3:	90                   	nop
    f1c4:	5d                   	pop    %rbp
    f1c5:	c3                   	ret

000000000000f1c6 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
    f1c6:	55                   	push   %rbp
    f1c7:	48 89 e5             	mov    %rsp,%rbp
    f1ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1ce:	90                   	nop
    f1cf:	5d                   	pop    %rbp
    f1d0:	c3                   	ret
    f1d1:	90                   	nop

000000000000f1d2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    f1d2:	55                   	push   %rbp
    f1d3:	48 89 e5             	mov    %rsp,%rbp
    f1d6:	48 83 ec 20          	sub    $0x20,%rsp
    f1da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f1de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f1e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    f1e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f1eb:	74 17                	je     f204 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    f1ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f1f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f1f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f1f9:	48 89 ce             	mov    %rcx,%rsi
    f1fc:	48 89 c7             	mov    %rax,%rdi
    f1ff:	e8 91 2f 00 00       	call   12195 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    f204:	90                   	nop
    f205:	c9                   	leave
    f206:	c3                   	ret
    f207:	90                   	nop

000000000000f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f208:	55                   	push   %rbp
    f209:	48 89 e5             	mov    %rsp,%rbp
    f20c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f214:	5d                   	pop    %rbp
    f215:	c3                   	ret

000000000000f216 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f216:	55                   	push   %rbp
    f217:	48 89 e5             	mov    %rsp,%rbp
    f21a:	48 83 ec 20          	sub    $0x20,%rsp
    f21e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f226:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f22a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f22e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f232:	48 89 d6             	mov    %rdx,%rsi
    f235:	48 89 c7             	mov    %rax,%rdi
    f238:	e8 86 2f 00 00       	call   121c3 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    f23d:	90                   	nop
    f23e:	c9                   	leave
    f23f:	c3                   	ret

000000000000f240 <_ZNSaI16VkPresentModeKHREC1Ev>:
    f240:	55                   	push   %rbp
    f241:	48 89 e5             	mov    %rsp,%rbp
    f244:	48 83 ec 10          	sub    $0x10,%rsp
    f248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f24c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f250:	48 89 c7             	mov    %rax,%rdi
    f253:	e8 92 2f 00 00       	call   121ea <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    f258:	90                   	nop
    f259:	c9                   	leave
    f25a:	c3                   	ret
    f25b:	90                   	nop

000000000000f25c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    f25c:	55                   	push   %rbp
    f25d:	48 89 e5             	mov    %rsp,%rbp
    f260:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    f264:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f268:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    f26f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f273:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    f27a:	00 
    f27b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f27f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    f286:	00 
	{ }
    f287:	90                   	nop
    f288:	5d                   	pop    %rbp
    f289:	c3                   	ret

000000000000f28a <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
    f28a:	55                   	push   %rbp
    f28b:	48 89 e5             	mov    %rsp,%rbp
    f28e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f292:	90                   	nop
    f293:	5d                   	pop    %rbp
    f294:	c3                   	ret
    f295:	90                   	nop

000000000000f296 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    f296:	55                   	push   %rbp
    f297:	48 89 e5             	mov    %rsp,%rbp
    f29a:	48 83 ec 20          	sub    $0x20,%rsp
    f29e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f2a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    f2aa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    f2af:	74 17                	je     f2c8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    f2b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f2b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    f2bd:	48 89 ce             	mov    %rcx,%rsi
    f2c0:	48 89 c7             	mov    %rax,%rdi
    f2c3:	e8 2d 2f 00 00       	call   121f5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    f2c8:	90                   	nop
    f2c9:	c9                   	leave
    f2ca:	c3                   	ret
    f2cb:	90                   	nop

000000000000f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    f2cc:	55                   	push   %rbp
    f2cd:	48 89 e5             	mov    %rsp,%rbp
    f2d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    f2d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2d8:	5d                   	pop    %rbp
    f2d9:	c3                   	ret

000000000000f2da <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    f2da:	55                   	push   %rbp
    f2db:	48 89 e5             	mov    %rsp,%rbp
    f2de:	48 83 ec 20          	sub    $0x20,%rsp
    f2e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f2e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    f2ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    f2ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    f2f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f2f6:	48 89 d6             	mov    %rdx,%rsi
    f2f9:	48 89 c7             	mov    %rax,%rdi
    f2fc:	e8 22 2f 00 00       	call   12223 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    f301:	90                   	nop
    f302:	c9                   	leave
    f303:	c3                   	ret

000000000000f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    f304:	55                   	push   %rbp
    f305:	48 89 e5             	mov    %rsp,%rbp
    f308:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    f30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f310:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f318:	48 8b 00             	mov    (%rax),%rax
    f31b:	48 29 c2             	sub    %rax,%rdx
    f31e:	48 89 d0             	mov    %rdx,%rax
    f321:	48 c1 f8 03          	sar    $0x3,%rax
    f325:	5d                   	pop    %rbp
    f326:	c3                   	ret
    f327:	90                   	nop

000000000000f328 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
    f328:	55                   	push   %rbp
    f329:	48 89 e5             	mov    %rsp,%rbp
    f32c:	53                   	push   %rbx
    f32d:	48 83 ec 38          	sub    $0x38,%rsp
    f331:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f335:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
    f339:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    f33e:	0f 84 e7 01 00 00    	je     f52b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
    f344:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f348:	48 89 c7             	mov    %rax,%rdi
    f34b:	e8 b4 ff ff ff       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
    f350:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f354:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f358:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    f35c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f360:	48 8b 40 08          	mov    0x8(%rax),%rax
    f364:	48 29 c2             	sub    %rax,%rdx
    f367:	48 89 d0             	mov    %rdx,%rax
    f36a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f36e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
    f372:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f376:	48 89 c7             	mov    %rax,%rdi
    f379:	e8 cc 2e 00 00       	call   1224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    f37e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f382:	72 16                	jb     f39a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x72>
    f384:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f388:	48 89 c7             	mov    %rax,%rdi
    f38b:	e8 ba 2e 00 00       	call   1224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
    f390:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f394:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f398:	73 07                	jae    f3a1 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x79>
    f39a:	b8 01 00 00 00       	mov    $0x1,%eax
    f39f:	eb 05                	jmp    f3a6 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x7e>
    f3a1:	b8 00 00 00 00       	mov    $0x0,%eax
    f3a6:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
    f3a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f3ac:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f3b0:	72 33                	jb     f3e5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
    f3b2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3b6:	48 89 c7             	mov    %rax,%rdi
    f3b9:	e8 4a fe ff ff       	call   f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f3be:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    f3c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3c5:	48 8b 40 08          	mov    0x8(%rax),%rax
    f3c9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f3cd:	48 89 ce             	mov    %rcx,%rsi
    f3d0:	48 89 c7             	mov    %rax,%rdi
    f3d3:	e8 94 2e 00 00       	call   1226c <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    f3d8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f3dc:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
    f3e0:	e9 46 01 00 00       	jmp    f52b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    f3e5:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f3e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f3ed:	48 8d 15 45 c4 00 00 	lea    0xc445(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    f3f4:	48 89 ce             	mov    %rcx,%rsi
    f3f7:	48 89 c7             	mov    %rax,%rdi
    f3fa:	e8 97 2e 00 00       	call   12296 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>
    f3ff:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    f403:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f407:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f40b:	48 89 d6             	mov    %rdx,%rsi
    f40e:	48 89 c7             	mov    %rax,%rdi
    f411:	e8 48 2f 00 00       	call   1235e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    f416:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    f41a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f41e:	48 89 c7             	mov    %rax,%rdi
    f421:	e8 e2 fd ff ff       	call   f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f426:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    f429:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f42d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
    f434:	00 
    f435:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f439:	48 01 c1             	add    %rax,%rcx
    f43c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f440:	48 89 c6             	mov    %rax,%rsi
    f443:	48 89 cf             	mov    %rcx,%rdi
    f446:	e8 21 2e 00 00       	call   1226c <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    f44b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f44f:	48 89 c7             	mov    %rax,%rdi
    f452:	e8 b1 fd ff ff       	call   f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f457:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    f45a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f45e:	48 8b 70 08          	mov    0x8(%rax),%rsi
    f462:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f466:	48 8b 00             	mov    (%rax),%rax
    f469:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f46d:	48 89 c7             	mov    %rax,%rdi
    f470:	e8 1c 2f 00 00       	call   12391 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    f475:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    f479:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f47d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    f481:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f485:	48 8b 12             	mov    (%rdx),%rdx
    f488:	48 29 d1             	sub    %rdx,%rcx
    f48b:	48 c1 f9 03          	sar    $0x3,%rcx
    f48f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    f492:	48 89 d6             	mov    %rdx,%rsi
    f495:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f499:	48 8b 0a             	mov    (%rdx),%rcx
    f49c:	48 89 f2             	mov    %rsi,%rdx
    f49f:	48 89 ce             	mov    %rcx,%rsi
    f4a2:	48 89 c7             	mov    %rax,%rdi
    f4a5:	e8 28 fd ff ff       	call   f1d2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    f4aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f4ae:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f4b2:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    f4b5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f4b9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f4bd:	48 01 d0             	add    %rdx,%rax
    f4c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f4c7:	00 
    f4c8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4cc:	48 01 c2             	add    %rax,%rdx
    f4cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f4d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    f4d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f4db:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    f4e2:	00 
    f4e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f4e7:	48 01 c2             	add    %rax,%rdx
    f4ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f4ee:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    f4f2:	eb 37                	jmp    f52b <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    f4f4:	48 89 c7             	mov    %rax,%rdi
    f4f7:	e8 34 4c ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    f4fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f500:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f504:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f508:	48 89 ce             	mov    %rcx,%rsi
    f50b:	48 89 c7             	mov    %rax,%rdi
    f50e:	e8 bf fc ff ff       	call   f1d2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    f513:	e8 08 52 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
    f518:	48 89 c3             	mov    %rax,%rbx
    f51b:	e8 d0 52 ff ff       	call   47f0 <__cxa_end_catch@plt>
    f520:	48 89 d8             	mov    %rbx,%rax
    f523:	48 89 c7             	mov    %rax,%rdi
    f526:	e8 45 53 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
    f52b:	90                   	nop
    f52c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f530:	c9                   	leave
    f531:	c3                   	ret

000000000000f532 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    f532:	55                   	push   %rbp
    f533:	48 89 e5             	mov    %rsp,%rbp
    f536:	48 83 ec 20          	sub    $0x20,%rsp
    f53a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f53e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    f542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f546:	48 8b 40 08          	mov    0x8(%rax),%rax
    f54a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    f54e:	48 c1 f8 03          	sar    $0x3,%rax
    f552:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f556:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f55b:	74 32                	je     f58f <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    f55d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f561:	48 89 c7             	mov    %rax,%rdi
    f564:	e8 9f fc ff ff       	call   f208 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f569:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    f56c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f570:	48 8b 48 08          	mov    0x8(%rax),%rcx
    f574:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f578:	48 89 ce             	mov    %rcx,%rsi
    f57b:	48 89 c7             	mov    %rax,%rdi
    f57e:	e8 93 fc ff ff       	call   f216 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    f583:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f587:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f58b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    f58f:	90                   	nop
    f590:	c9                   	leave
    f591:	c3                   	ret

000000000000f592 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    f592:	55                   	push   %rbp
    f593:	48 89 e5             	mov    %rsp,%rbp
    f596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f59a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    f59e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f5a2:	5d                   	pop    %rbp
    f5a3:	c3                   	ret

000000000000f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    f5a4:	55                   	push   %rbp
    f5a5:	48 89 e5             	mov    %rsp,%rbp
    f5a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    f5ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5b0:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f5b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f5b8:	48 8b 00             	mov    (%rax),%rax
    f5bb:	48 29 c2             	sub    %rax,%rdx
    f5be:	48 89 d0             	mov    %rdx,%rax
    f5c1:	48 c1 f8 02          	sar    $0x2,%rax
    f5c5:	5d                   	pop    %rbp
    f5c6:	c3                   	ret
    f5c7:	90                   	nop

000000000000f5c8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
    f5c8:	55                   	push   %rbp
    f5c9:	48 89 e5             	mov    %rsp,%rbp
    f5cc:	53                   	push   %rbx
    f5cd:	48 83 ec 38          	sub    $0x38,%rsp
    f5d1:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    f5d5:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
    f5d9:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
    f5de:	0f 84 e7 01 00 00    	je     f7cb <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
    f5e4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5e8:	48 89 c7             	mov    %rax,%rdi
    f5eb:	e8 b4 ff ff ff       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
    f5f0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f5f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f5f8:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
    f5fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f600:	48 8b 40 08          	mov    0x8(%rax),%rax
    f604:	48 29 c2             	sub    %rax,%rdx
    f607:	48 89 d0             	mov    %rdx,%rax
    f60a:	48 c1 f8 02          	sar    $0x2,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
    f60e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
    f612:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f616:	48 89 c7             	mov    %rax,%rdi
    f619:	e8 a6 2d 00 00       	call   123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    f61e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f622:	72 16                	jb     f63a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x72>
    f624:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f628:	48 89 c7             	mov    %rax,%rdi
    f62b:	e8 94 2d 00 00       	call   123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
    f630:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    f634:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    f638:	73 07                	jae    f641 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x79>
    f63a:	b8 01 00 00 00       	mov    $0x1,%eax
    f63f:	eb 05                	jmp    f646 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x7e>
    f641:	b8 00 00 00 00       	mov    $0x0,%eax
    f646:	84 c0                	test   %al,%al
	  if (__navail >= __n)
    f648:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f64c:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
    f650:	72 33                	jb     f685 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
    f652:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f656:	48 89 c7             	mov    %rax,%rdi
    f659:	e8 6e fc ff ff       	call   f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f65e:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
    f661:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f665:	48 8b 40 08          	mov    0x8(%rax),%rax
    f669:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f66d:	48 89 ce             	mov    %rcx,%rsi
    f670:	48 89 c7             	mov    %rax,%rdi
    f673:	e8 6e 2d 00 00       	call   123e6 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
    f678:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f67c:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
    f680:	e9 46 01 00 00       	jmp    f7cb <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
    f685:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
    f689:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f68d:	48 8d 15 a5 c1 00 00 	lea    0xc1a5(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
    f694:	48 89 ce             	mov    %rcx,%rsi
    f697:	48 89 c7             	mov    %rax,%rdi
    f69a:	e8 71 2d 00 00       	call   12410 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>
    f69f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
    f6a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f6ab:	48 89 d6             	mov    %rdx,%rsi
    f6ae:	48 89 c7             	mov    %rax,%rdi
    f6b1:	e8 22 2e 00 00       	call   124d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    f6b6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
    f6ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6be:	48 89 c7             	mov    %rax,%rdi
    f6c1:	e8 06 fc ff ff       	call   f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f6c6:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
    f6c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6cd:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx
    f6d4:	00 
    f6d5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f6d9:	48 01 c1             	add    %rax,%rcx
    f6dc:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f6e0:	48 89 c6             	mov    %rax,%rsi
    f6e3:	48 89 cf             	mov    %rcx,%rdi
    f6e6:	e8 fb 2c 00 00       	call   123e6 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
    f6eb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6ef:	48 89 c7             	mov    %rax,%rdi
    f6f2:	e8 d5 fb ff ff       	call   f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f6f7:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
    f6fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f6fe:	48 8b 70 08          	mov    0x8(%rax),%rsi
    f702:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f706:	48 8b 00             	mov    (%rax),%rax
    f709:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f70d:	48 89 c7             	mov    %rax,%rdi
    f710:	e8 f6 2d 00 00       	call   1250b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
	      _M_deallocate(this->_M_impl._M_start,
    f715:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
    f719:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f71d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
    f721:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f725:	48 8b 12             	mov    (%rdx),%rdx
    f728:	48 29 d1             	sub    %rdx,%rcx
    f72b:	48 c1 f9 02          	sar    $0x2,%rcx
    f72f:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
    f732:	48 89 d6             	mov    %rdx,%rsi
    f735:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    f739:	48 8b 0a             	mov    (%rdx),%rcx
    f73c:	48 89 f2             	mov    %rsi,%rdx
    f73f:	48 89 ce             	mov    %rcx,%rsi
    f742:	48 89 c7             	mov    %rax,%rdi
    f745:	e8 4c fb ff ff       	call   f296 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
	      this->_M_impl._M_start = __new_start;
    f74a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f74e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f752:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
    f755:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    f759:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f75d:	48 01 d0             	add    %rdx,%rax
    f760:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    f767:	00 
    f768:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f76c:	48 01 c2             	add    %rax,%rdx
    f76f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f773:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
    f777:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f77b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    f782:	00 
    f783:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f787:	48 01 c2             	add    %rax,%rdx
    f78a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f78e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
    f792:	eb 37                	jmp    f7cb <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_M_default_appendEm+0x203>
		  __catch(...)
    f794:	48 89 c7             	mov    %rax,%rdi
    f797:	e8 94 49 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
    f79c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f7a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f7a4:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    f7a8:	48 89 ce             	mov    %rcx,%rsi
    f7ab:	48 89 c7             	mov    %rax,%rdi
    f7ae:	e8 e3 fa ff ff       	call   f296 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
		      __throw_exception_again;
    f7b3:	e8 68 4f ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
    f7b8:	48 89 c3             	mov    %rax,%rbx
    f7bb:	e8 30 50 ff ff       	call   47f0 <__cxa_end_catch@plt>
    f7c0:	48 89 d8             	mov    %rbx,%rax
    f7c3:	48 89 c7             	mov    %rax,%rdi
    f7c6:	e8 a5 50 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
    f7cb:	90                   	nop
    f7cc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f7d0:	c9                   	leave
    f7d1:	c3                   	ret

000000000000f7d2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
    f7d2:	55                   	push   %rbp
    f7d3:	48 89 e5             	mov    %rsp,%rbp
    f7d6:	48 83 ec 20          	sub    $0x20,%rsp
    f7da:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f7de:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
    f7e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f7e6:	48 8b 40 08          	mov    0x8(%rax),%rax
    f7ea:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    f7ee:	48 c1 f8 02          	sar    $0x2,%rax
    f7f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    f7f6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    f7fb:	74 32                	je     f82f <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE15_M_erase_at_endEPS0_+0x5d>
			  _M_get_Tp_allocator());
    f7fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f801:	48 89 c7             	mov    %rax,%rdi
    f804:	e8 c3 fa ff ff       	call   f2cc <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    f809:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
    f80c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f810:	48 8b 48 08          	mov    0x8(%rax),%rcx
    f814:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f818:	48 89 ce             	mov    %rcx,%rsi
    f81b:	48 89 c7             	mov    %rax,%rdi
    f81e:	e8 b7 fa ff ff       	call   f2da <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
    f823:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f827:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f82b:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
    f82f:	90                   	nop
    f830:	c9                   	leave
    f831:	c3                   	ret

000000000000f832 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    f832:	55                   	push   %rbp
    f833:	48 89 e5             	mov    %rsp,%rbp
    f836:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f83a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    f83e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    f842:	5d                   	pop    %rbp
    f843:	c3                   	ret

000000000000f844 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    f844:	55                   	push   %rbp
    f845:	48 89 e5             	mov    %rsp,%rbp
    f848:	53                   	push   %rbx
    f849:	48 83 ec 18          	sub    $0x18,%rsp
    f84d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f851:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    f855:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f859:	48 89 c7             	mov    %rax,%rdi
    f85c:	e8 29 08 00 00       	call   1008a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f861:	48 8b 18             	mov    (%rax),%rbx
    f864:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f868:	48 89 c7             	mov    %rax,%rdi
    f86b:	e8 1a 08 00 00       	call   1008a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f870:	48 8b 00             	mov    (%rax),%rax
    f873:	48 39 c3             	cmp    %rax,%rbx
    f876:	0f 94 c0             	sete   %al
    f879:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f87d:	c9                   	leave
    f87e:	c3                   	ret

000000000000f87f <_ZN9__gnu_cxxeqIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
    f87f:	55                   	push   %rbp
    f880:	48 89 e5             	mov    %rsp,%rbp
    f883:	53                   	push   %rbx
    f884:	48 83 ec 18          	sub    $0x18,%rsp
    f888:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f88c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
    f890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f894:	48 89 c7             	mov    %rax,%rdi
    f897:	e8 1a 08 00 00       	call   100b6 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f89c:	48 8b 18             	mov    (%rax),%rbx
    f89f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f8a3:	48 89 c7             	mov    %rax,%rdi
    f8a6:	e8 0b 08 00 00       	call   100b6 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
    f8ab:	48 8b 00             	mov    (%rax),%rax
    f8ae:	48 39 c3             	cmp    %rax,%rbx
    f8b1:	0f 94 c0             	sete   %al
    f8b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f8b8:	c9                   	leave
    f8b9:	c3                   	ret

000000000000f8ba <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f8ba:	55                   	push   %rbp
    f8bb:	48 89 e5             	mov    %rsp,%rbp
    f8be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8c2:	90                   	nop
    f8c3:	5d                   	pop    %rbp
    f8c4:	c3                   	ret
    f8c5:	90                   	nop

000000000000f8c6 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    f8c6:	55                   	push   %rbp
    f8c7:	48 89 e5             	mov    %rsp,%rbp
    f8ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f8ce:	90                   	nop
    f8cf:	5d                   	pop    %rbp
    f8d0:	c3                   	ret

000000000000f8d1 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    f8d1:	55                   	push   %rbp
    f8d2:	48 89 e5             	mov    %rsp,%rbp
    f8d5:	53                   	push   %rbx
    f8d6:	48 83 ec 28          	sub    $0x28,%rsp
    f8da:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    f8de:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    f8e2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    f8e6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f8ea:	48 89 d6             	mov    %rdx,%rsi
    f8ed:	48 89 c7             	mov    %rax,%rdi
    f8f0:	e8 8b 2c 00 00       	call   12580 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    f8f5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f8f9:	48 89 c7             	mov    %rax,%rdi
    f8fc:	e8 3c 2c 00 00       	call   1253d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    f901:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    f905:	0f 92 c3             	setb   %bl
    f908:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    f90c:	48 89 c7             	mov    %rax,%rdi
    f90f:	e8 ec d9 ff ff       	call   d300 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    f914:	84 db                	test   %bl,%bl
    f916:	74 0f                	je     f927 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    f918:	48 8d 05 e9 be 00 00 	lea    0xbee9(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
    f91f:	48 89 c7             	mov    %rax,%rdi
    f922:	e8 89 48 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    f927:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    f92b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f92f:	c9                   	leave
    f930:	c3                   	ret
    f931:	90                   	nop

000000000000f932 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    f932:	55                   	push   %rbp
    f933:	48 89 e5             	mov    %rsp,%rbp
    f936:	48 83 ec 10          	sub    $0x10,%rsp
    f93a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    f93e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f942:	48 89 c7             	mov    %rax,%rdi
    f945:	e8 b6 d9 ff ff       	call   d300 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    f94a:	90                   	nop
    f94b:	c9                   	leave
    f94c:	c3                   	ret
    f94d:	90                   	nop

000000000000f94e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    f94e:	55                   	push   %rbp
    f94f:	48 89 e5             	mov    %rsp,%rbp
    f952:	53                   	push   %rbx
    f953:	48 83 ec 28          	sub    $0x28,%rsp
    f957:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    f95b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    f95f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    f963:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f967:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    f96b:	48 89 d6             	mov    %rdx,%rsi
    f96e:	48 89 c7             	mov    %rax,%rdi
    f971:	e8 30 2c 00 00       	call   125a6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    f976:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    f97a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f97e:	48 89 d6             	mov    %rdx,%rsi
    f981:	48 89 c7             	mov    %rax,%rdi
    f984:	e8 4f 2c 00 00       	call   125d8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    f989:	eb 1a                	jmp    f9a5 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    f98b:	48 89 c3             	mov    %rax,%rbx
    f98e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f992:	48 89 c7             	mov    %rax,%rdi
    f995:	e8 98 ff ff ff       	call   f932 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    f99a:	48 89 d8             	mov    %rbx,%rax
    f99d:	48 89 c7             	mov    %rax,%rdi
    f9a0:	e8 cb 4e ff ff       	call   4870 <_Unwind_Resume@plt>
    f9a5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f9a9:	c9                   	leave
    f9aa:	c3                   	ret
    f9ab:	90                   	nop

000000000000f9ac <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    f9ac:	55                   	push   %rbp
    f9ad:	48 89 e5             	mov    %rsp,%rbp
    f9b0:	48 83 ec 10          	sub    $0x10,%rsp
    f9b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    f9b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9bc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    f9c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9c4:	48 8b 00             	mov    (%rax),%rax
    f9c7:	48 29 c2             	sub    %rax,%rdx
    f9ca:	48 c1 fa 03          	sar    $0x3,%rdx
    f9ce:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    f9d5:	aa aa aa 
    f9d8:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    f9dc:	48 89 c2             	mov    %rax,%rdx
    f9df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9e3:	48 8b 08             	mov    (%rax),%rcx
    f9e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9ea:	48 89 ce             	mov    %rcx,%rsi
    f9ed:	48 89 c7             	mov    %rax,%rdi
    f9f0:	e8 43 2c 00 00       	call   12638 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    f9f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    f9f9:	48 89 c7             	mov    %rax,%rdi
    f9fc:	e8 31 ff ff ff       	call   f932 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    fa01:	90                   	nop
    fa02:	c9                   	leave
    fa03:	c3                   	ret

000000000000fa04 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    fa04:	55                   	push   %rbp
    fa05:	48 89 e5             	mov    %rsp,%rbp
    fa08:	48 83 ec 10          	sub    $0x10,%rsp
    fa0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    fa14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa18:	48 89 c7             	mov    %rax,%rdi
    fa1b:	e8 24 00 00 00       	call   fa44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    fa20:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    fa23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa27:	48 8b 00             	mov    (%rax),%rax
    fa2a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fa2e:	48 89 ce             	mov    %rcx,%rsi
    fa31:	48 89 c7             	mov    %rax,%rdi
    fa34:	e8 34 2c 00 00       	call   1266d <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    fa39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fa3d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    fa41:	90                   	nop
    fa42:	c9                   	leave
    fa43:	c3                   	ret

000000000000fa44 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    fa44:	55                   	push   %rbp
    fa45:	48 89 e5             	mov    %rsp,%rbp
    fa48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    fa4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa50:	5d                   	pop    %rbp
    fa51:	c3                   	ret

000000000000fa52 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    fa52:	55                   	push   %rbp
    fa53:	48 89 e5             	mov    %rsp,%rbp
    fa56:	48 83 ec 20          	sub    $0x20,%rsp
    fa5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fa62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    fa66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fa6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fa6e:	48 89 d6             	mov    %rdx,%rsi
    fa71:	48 89 c7             	mov    %rax,%rdi
    fa74:	e8 1d 2c 00 00       	call   12696 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    fa79:	90                   	nop
    fa7a:	c9                   	leave
    fa7b:	c3                   	ret

000000000000fa7c <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    fa7c:	55                   	push   %rbp
    fa7d:	48 89 e5             	mov    %rsp,%rbp
    fa80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    fa88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa8c:	5d                   	pop    %rbp
    fa8d:	c3                   	ret

000000000000fa8e <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    fa8e:	55                   	push   %rbp
    fa8f:	48 89 e5             	mov    %rsp,%rbp
    fa92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fa96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    fa9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fa9e:	48 8b 10             	mov    (%rax),%rdx
    faa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    faa5:	48 89 10             	mov    %rdx,(%rax)
    faa8:	90                   	nop
    faa9:	5d                   	pop    %rbp
    faaa:	c3                   	ret
    faab:	90                   	nop

000000000000faac <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    faac:	55                   	push   %rbp
    faad:	48 89 e5             	mov    %rsp,%rbp
    fab0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    fab4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fab8:	5d                   	pop    %rbp
    fab9:	c3                   	ret

000000000000faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    faba:	55                   	push   %rbp
    fabb:	48 89 e5             	mov    %rsp,%rbp
    fabe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    fac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fac6:	5d                   	pop    %rbp
    fac7:	c3                   	ret

000000000000fac8 <_ZNSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
    fac8:	55                   	push   %rbp
    fac9:	48 89 e5             	mov    %rsp,%rbp
    facc:	53                   	push   %rbx
    facd:	48 83 ec 18          	sub    $0x18,%rsp
    fad1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fad5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    fad9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    fadd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fae1:	48 89 c7             	mov    %rax,%rdi
    fae4:	e8 d1 ff ff ff       	call   faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
    fae9:	48 89 c6             	mov    %rax,%rsi
    faec:	48 89 df             	mov    %rbx,%rdi
    faef:	e8 c8 2b 00 00       	call   126bc <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>
	}
    faf4:	90                   	nop
    faf5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    faf9:	c9                   	leave
    fafa:	c3                   	ret
    fafb:	90                   	nop

000000000000fafc <_ZNSaI23VkDeviceQueueCreateInfoEC1Ev>:
    fafc:	55                   	push   %rbp
    fafd:	48 89 e5             	mov    %rsp,%rbp
    fb00:	48 83 ec 10          	sub    $0x10,%rsp
    fb04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb0c:	48 89 c7             	mov    %rax,%rdi
    fb0f:	e8 ee 2b 00 00       	call   12702 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>
    fb14:	90                   	nop
    fb15:	c9                   	leave
    fb16:	c3                   	ret
    fb17:	90                   	nop

000000000000fb18 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    fb18:	55                   	push   %rbp
    fb19:	48 89 e5             	mov    %rsp,%rbp
    fb1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    fb20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb24:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    fb2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb2f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    fb36:	00 
    fb37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb3b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    fb42:	00 
	{ }
    fb43:	90                   	nop
    fb44:	5d                   	pop    %rbp
    fb45:	c3                   	ret

000000000000fb46 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoED1Ev>:
    fb46:	55                   	push   %rbp
    fb47:	48 89 e5             	mov    %rsp,%rbp
    fb4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb4e:	90                   	nop
    fb4f:	5d                   	pop    %rbp
    fb50:	c3                   	ret
    fb51:	90                   	nop

000000000000fb52 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    fb52:	55                   	push   %rbp
    fb53:	48 89 e5             	mov    %rsp,%rbp
    fb56:	48 83 ec 20          	sub    $0x20,%rsp
    fb5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fb5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fb62:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    fb66:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    fb6b:	74 17                	je     fb84 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    fb6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb71:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    fb75:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fb79:	48 89 ce             	mov    %rcx,%rsi
    fb7c:	48 89 c7             	mov    %rax,%rdi
    fb7f:	e8 89 2b 00 00       	call   1270d <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>
      }
    fb84:	90                   	nop
    fb85:	c9                   	leave
    fb86:	c3                   	ret
    fb87:	90                   	nop

000000000000fb88 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    fb88:	55                   	push   %rbp
    fb89:	48 89 e5             	mov    %rsp,%rbp
    fb8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    fb90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fb94:	5d                   	pop    %rbp
    fb95:	c3                   	ret

000000000000fb96 <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    fb96:	55                   	push   %rbp
    fb97:	48 89 e5             	mov    %rsp,%rbp
    fb9a:	48 83 ec 20          	sub    $0x20,%rsp
    fb9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fba2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fba6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    fbaa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fbae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbb2:	48 89 d6             	mov    %rdx,%rsi
    fbb5:	48 89 c7             	mov    %rax,%rdi
    fbb8:	e8 7e 2b 00 00       	call   1273b <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>
    }
    fbbd:	90                   	nop
    fbbe:	c9                   	leave
    fbbf:	c3                   	ret

000000000000fbc0 <_ZNSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() noexcept
    fbc0:	55                   	push   %rbp
    fbc1:	48 89 e5             	mov    %rsp,%rbp
    fbc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    fbc8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbcc:	5d                   	pop    %rbp
    fbcd:	c3                   	ret

000000000000fbce <_ZNSt15__new_allocatorIjEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    fbce:	55                   	push   %rbp
    fbcf:	48 89 e5             	mov    %rsp,%rbp
    fbd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbd6:	90                   	nop
    fbd7:	5d                   	pop    %rbp
    fbd8:	c3                   	ret
    fbd9:	90                   	nop

000000000000fbda <_ZNSaIjEC1ERKS_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    fbda:	55                   	push   %rbp
    fbdb:	48 89 e5             	mov    %rsp,%rbp
    fbde:	48 83 ec 10          	sub    $0x10,%rsp
    fbe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fbe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    fbea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    fbee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fbf2:	48 89 d6             	mov    %rdx,%rsi
    fbf5:	48 89 c7             	mov    %rax,%rdi
    fbf8:	e8 65 2b 00 00       	call   12762 <_ZNSt15__new_allocatorIjEC1ERKS0_>
    fbfd:	90                   	nop
    fbfe:	c9                   	leave
    fbff:	c3                   	ret

000000000000fc00 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_>:
      _Rb_tree(const _Compare& __comp,
    fc00:	55                   	push   %rbp
    fc01:	48 89 e5             	mov    %rsp,%rbp
    fc04:	53                   	push   %rbx
    fc05:	48 83 ec 38          	sub    $0x38,%rsp
    fc09:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fc0d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fc11:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_impl(__comp, _Node_allocator(__a)) { }
    fc15:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    fc19:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    fc1d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fc21:	48 89 d6             	mov    %rdx,%rsi
    fc24:	48 89 c7             	mov    %rax,%rdi
    fc27:	e8 46 2b 00 00       	call   12772 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>
    fc2c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    fc30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fc34:	48 89 c6             	mov    %rax,%rsi
    fc37:	48 89 df             	mov    %rbx,%rdi
    fc3a:	e8 53 2b 00 00       	call   12792 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>
    fc3f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fc43:	48 89 c7             	mov    %rax,%rdi
    fc46:	e8 e3 00 00 00       	call   fd2e <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    fc4b:	eb 1a                	jmp    fc67 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEEC1ERKS3_RKS4_+0x67>
    fc4d:	48 89 c3             	mov    %rax,%rbx
    fc50:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    fc54:	48 89 c7             	mov    %rax,%rdi
    fc57:	e8 d2 00 00 00       	call   fd2e <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>
    fc5c:	48 89 d8             	mov    %rbx,%rax
    fc5f:	48 89 c7             	mov    %rax,%rdi
    fc62:	e8 09 4c ff ff       	call   4870 <_Unwind_Resume@plt>
    fc67:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fc6b:	c9                   	leave
    fc6c:	c3                   	ret
    fc6d:	90                   	nop

000000000000fc6e <_ZNKSt16initializer_listIjE5beginEv>:
      begin() const noexcept { return _M_array; }
    fc6e:	55                   	push   %rbp
    fc6f:	48 89 e5             	mov    %rsp,%rbp
    fc72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fc76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fc7a:	48 8b 00             	mov    (%rax),%rax
    fc7d:	5d                   	pop    %rbp
    fc7e:	c3                   	ret
    fc7f:	90                   	nop

000000000000fc80 <_ZNKSt16initializer_listIjE3endEv>:
      end() const noexcept { return begin() + size(); }
    fc80:	55                   	push   %rbp
    fc81:	48 89 e5             	mov    %rsp,%rbp
    fc84:	53                   	push   %rbx
    fc85:	48 83 ec 18          	sub    $0x18,%rsp
    fc89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fc8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fc91:	48 89 c7             	mov    %rax,%rdi
    fc94:	e8 d5 ff ff ff       	call   fc6e <_ZNKSt16initializer_listIjE5beginEv>
    fc99:	48 89 c3             	mov    %rax,%rbx
    fc9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fca0:	48 89 c7             	mov    %rax,%rdi
    fca3:	e8 42 2b 00 00       	call   127ea <_ZNKSt16initializer_listIjE4sizeEv>
    fca8:	48 c1 e0 02          	shl    $0x2,%rax
    fcac:	48 01 d8             	add    %rbx,%rax
    fcaf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    fcb3:	c9                   	leave
    fcb4:	c3                   	ret
    fcb5:	90                   	nop

000000000000fcb6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_>:
	_M_insert_range_unique(_InputIterator __first, _InputIterator __last)
    fcb6:	55                   	push   %rbp
    fcb7:	48 89 e5             	mov    %rsp,%rbp
    fcba:	48 83 ec 40          	sub    $0x40,%rsp
    fcbe:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    fcc2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    fcc6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  _Alloc_node __an(*this);
    fcca:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    fcce:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    fcd2:	48 89 d6             	mov    %rdx,%rsi
    fcd5:	48 89 c7             	mov    %rax,%rdi
    fcd8:	e8 1f 2b 00 00       	call   127fc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>
	  for (; __first != __last; ++__first)
    fcdd:	eb 40                	jmp    fd1f <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x69>
	    _M_insert_unique_(end(), *__first, __an);
    fcdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fce3:	48 89 c7             	mov    %rax,%rdi
    fce6:	e8 2b 2b 00 00       	call   12816 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>
    fceb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fcef:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fcf3:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    fcf7:	48 89 d6             	mov    %rdx,%rsi
    fcfa:	48 89 c7             	mov    %rax,%rdi
    fcfd:	e8 3e 2b 00 00       	call   12840 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>
    fd02:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    fd06:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    fd0a:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
    fd0e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    fd12:	48 89 c7             	mov    %rax,%rdi
    fd15:	e8 44 2b 00 00       	call   1285e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>
	  for (; __first != __last; ++__first)
    fd1a:	48 83 45 d0 04       	addq   $0x4,-0x30(%rbp)
    fd1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    fd23:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax
    fd27:	75 b6                	jne    fcdf <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE22_M_insert_range_uniqueIPKjEENSt9enable_ifIXsrSt7is_sameIjNSt15iterator_traitsIT_E10value_typeEE5valueEvE4typeESC_SC_+0x29>
	}
    fd29:	90                   	nop
    fd2a:	90                   	nop
    fd2b:	c9                   	leave
    fd2c:	c3                   	ret
    fd2d:	90                   	nop

000000000000fd2e <_ZNSaISt13_Rb_tree_nodeIjEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    fd2e:	55                   	push   %rbp
    fd2f:	48 89 e5             	mov    %rsp,%rbp
    fd32:	48 83 ec 10          	sub    $0x10,%rsp
    fd36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd3e:	48 89 c7             	mov    %rax,%rdi
    fd41:	e8 b0 2b 00 00       	call   128f6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>
    fd46:	90                   	nop
    fd47:	c9                   	leave
    fd48:	c3                   	ret
    fd49:	90                   	nop

000000000000fd4a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    fd4a:	55                   	push   %rbp
    fd4b:	48 89 e5             	mov    %rsp,%rbp
    fd4e:	48 83 ec 20          	sub    $0x20,%rsp
    fd52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    fd56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      while (__x != 0)
    fd5a:	eb 49                	jmp    fda5 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x5b>
	  _M_erase(_S_right(__x));
    fd5c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd60:	48 89 c7             	mov    %rax,%rdi
    fd63:	e8 99 2b 00 00       	call   12901 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
    fd68:	48 89 c2             	mov    %rax,%rdx
    fd6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd6f:	48 89 d6             	mov    %rdx,%rsi
    fd72:	48 89 c7             	mov    %rax,%rdi
    fd75:	e8 d0 ff ff ff       	call   fd4a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE>
	  _Link_type __y = _S_left(__x);
    fd7a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fd7e:	48 89 c7             	mov    %rax,%rdi
    fd81:	e8 8d 2b 00 00       	call   12913 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
    fd86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
    fd8a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    fd8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fd92:	48 89 d6             	mov    %rdx,%rsi
    fd95:	48 89 c7             	mov    %rax,%rdi
    fd98:	e8 89 2b 00 00       	call   12926 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>
	  __x = __y;
    fd9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fda1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
    fda5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    fdaa:	75 b0                	jne    fd5c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_eraseEPSt13_Rb_tree_nodeIjE+0x12>
    }
    fdac:	90                   	nop
    fdad:	90                   	nop
    fdae:	c9                   	leave
    fdaf:	c3                   	ret

000000000000fdb0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
    fdb0:	55                   	push   %rbp
    fdb1:	48 89 e5             	mov    %rsp,%rbp
    fdb4:	48 83 ec 10          	sub    $0x10,%rsp
    fdb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
    fdbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdc0:	48 89 c7             	mov    %rax,%rdi
    fdc3:	e8 98 2b 00 00       	call   12960 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>
    fdc8:	c9                   	leave
    fdc9:	c3                   	ret

000000000000fdca <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
    fdca:	55                   	push   %rbp
    fdcb:	48 89 e5             	mov    %rsp,%rbp
    fdce:	48 83 ec 20          	sub    $0x20,%rsp
    fdd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_header._M_left); }
    fdd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fdda:	48 8b 50 18          	mov    0x18(%rax),%rdx
    fdde:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fde2:	48 89 d6             	mov    %rdx,%rsi
    fde5:	48 89 c7             	mov    %rax,%rdi
    fde8:	e8 85 2b 00 00       	call   12972 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    fded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdf1:	c9                   	leave
    fdf2:	c3                   	ret
    fdf3:	90                   	nop

000000000000fdf4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
    fdf4:	55                   	push   %rbp
    fdf5:	48 89 e5             	mov    %rsp,%rbp
    fdf8:	48 83 ec 20          	sub    $0x20,%rsp
    fdfc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(&this->_M_impl._M_header); }
    fe00:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe04:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fe08:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fe0c:	48 89 d6             	mov    %rdx,%rsi
    fe0f:	48 89 c7             	mov    %rax,%rdi
    fe12:	e8 5b 2b 00 00       	call   12972 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>
    fe17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe1b:	c9                   	leave
    fe1c:	c3                   	ret
    fe1d:	90                   	nop

000000000000fe1e <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr() const
    fe1e:	55                   	push   %rbp
    fe1f:	48 89 e5             	mov    %rsp,%rbp
    fe22:	48 83 ec 10          	sub    $0x10,%rsp
    fe26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
    fe2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe2e:	48 83 c0 20          	add    $0x20,%rax
    fe32:	48 89 c7             	mov    %rax,%rdi
    fe35:	e8 52 2b 00 00       	call   1298c <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
    fe3a:	c9                   	leave
    fe3b:	c3                   	ret

000000000000fe3c <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
    fe3c:	55                   	push   %rbp
    fe3d:	48 89 e5             	mov    %rsp,%rbp
    fe40:	48 83 ec 20          	sub    $0x20,%rsp
    fe44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fe4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
    fe50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe54:	48 89 c7             	mov    %rax,%rdi
    fe57:	e8 4a 2b 00 00       	call   129a6 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    fe5c:	48 89 c2             	mov    %rax,%rdx
    fe5f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    fe63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe67:	48 89 ce             	mov    %rcx,%rsi
    fe6a:	48 89 c7             	mov    %rax,%rdi
    fe6d:	e8 42 2b 00 00       	call   129b4 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>
	}
    fe72:	90                   	nop
    fe73:	c9                   	leave
    fe74:	c3                   	ret
    fe75:	90                   	nop

000000000000fe76 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    fe76:	55                   	push   %rbp
    fe77:	48 89 e5             	mov    %rsp,%rbp
    fe7a:	48 83 ec 20          	sub    $0x20,%rsp
    fe7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    fe82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fe86:	48 8d 50 08          	lea    0x8(%rax),%rdx
    fe8a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    fe8e:	48 89 d6             	mov    %rdx,%rsi
    fe91:	48 89 c7             	mov    %rax,%rdi
    fe94:	e8 7d 2b 00 00       	call   12a16 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    fe99:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe9d:	c9                   	leave
    fe9e:	c3                   	ret
    fe9f:	90                   	nop

000000000000fea0 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE17_M_realloc_insertIJRKS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_>:
      vector<_Tp, _Alloc>::
    fea0:	55                   	push   %rbp
    fea1:	48 89 e5             	mov    %rsp,%rbp
    fea4:	53                   	push   %rbx
    fea5:	48 83 ec 68          	sub    $0x68,%rsp
    fea9:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    fead:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    feb1:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
    feb5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    feb9:	48 8d 15 93 b9 00 00 	lea    0xb993(%rip),%rdx        # 1b853 <_ZN6__pstl9execution2v1L5unseqE+0x588>
    fec0:	be 01 00 00 00       	mov    $0x1,%esi
    fec5:	48 89 c7             	mov    %rax,%rdi
    fec8:	e8 67 2b 00 00       	call   12a34 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>
    fecd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
    fed1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fed5:	48 8b 00             	mov    (%rax),%rax
    fed8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
    fedc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fee0:	48 8b 40 08          	mov    0x8(%rax),%rax
    fee4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
    fee8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    feec:	48 89 c7             	mov    %rax,%rdi
    feef:	e8 08 2c 00 00       	call   12afc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>
    fef4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    fef8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    fefc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ff00:	48 89 d6             	mov    %rdx,%rsi
    ff03:	48 89 c7             	mov    %rax,%rdi
    ff06:	e8 16 2c 00 00       	call   12b21 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>
    ff0b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
    ff0f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ff13:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ff17:	48 89 d6             	mov    %rdx,%rsi
    ff1a:	48 89 c7             	mov    %rax,%rdi
    ff1d:	e8 4c 2c 00 00       	call   12b6e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>
    ff22:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
    ff26:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff2a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
    ff2e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    ff32:	48 89 c7             	mov    %rax,%rdi
    ff35:	e8 6c 2a 00 00       	call   129a6 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
    ff3a:	48 89 c6             	mov    %rax,%rsi
				   __new_start + __elems_before,
    ff3d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    ff41:	48 89 d0             	mov    %rdx,%rax
    ff44:	48 c1 e0 02          	shl    $0x2,%rax
    ff48:	48 01 d0             	add    %rdx,%rax
    ff4b:	48 c1 e0 03          	shl    $0x3,%rax
    ff4f:	48 89 c2             	mov    %rax,%rdx
	  _Alloc_traits::construct(this->_M_impl,
    ff52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    ff56:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    ff5a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ff5e:	48 89 f2             	mov    %rsi,%rdx
    ff61:	48 89 ce             	mov    %rcx,%rsi
    ff64:	48 89 c7             	mov    %rax,%rdi
    ff67:	e8 d0 fe ff ff       	call   fe3c <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_>
	  __new_finish = pointer();
    ff6c:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    ff73:	00 
					 __new_start, _M_get_Tp_allocator());
    ff74:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ff78:	48 89 c7             	mov    %rax,%rdi
    ff7b:	e8 08 fc ff ff       	call   fb88 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    ff80:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
    ff83:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ff87:	48 89 c7             	mov    %rax,%rdi
    ff8a:	e8 45 2c 00 00       	call   12bd4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    ff8f:	48 8b 30             	mov    (%rax),%rsi
    ff92:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    ff96:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ff9a:	48 89 d9             	mov    %rbx,%rcx
    ff9d:	48 89 c7             	mov    %rax,%rdi
    ffa0:	e8 fc 2b 00 00       	call   12ba1 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    ffa5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
    ffa9:	48 83 45 c0 28       	addq   $0x28,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
    ffae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    ffb2:	48 89 c7             	mov    %rax,%rdi
    ffb5:	e8 ce fb ff ff       	call   fb88 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
    ffba:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
    ffbd:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    ffc1:	48 89 c7             	mov    %rax,%rdi
    ffc4:	e8 0b 2c 00 00       	call   12bd4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
    ffc9:	48 8b 00             	mov    (%rax),%rax
    ffcc:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
    ffd0:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    ffd4:	48 89 d9             	mov    %rbx,%rcx
    ffd7:	48 89 c7             	mov    %rax,%rdi
    ffda:	e8 c2 2b 00 00       	call   12ba1 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>
    ffdf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
    ffe3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
    ffe7:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
    ffeb:	48 8b 52 10          	mov    0x10(%rdx),%rdx
    ffef:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
    fff3:	48 89 d1             	mov    %rdx,%rcx
    fff6:	48 c1 f9 03          	sar    $0x3,%rcx
    fffa:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
   10001:	cc cc cc 
   10004:	48 0f af d1          	imul   %rcx,%rdx
      _M_deallocate(__old_start,
   10008:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1000c:	48 89 ce             	mov    %rcx,%rsi
   1000f:	48 89 c7             	mov    %rax,%rdi
   10012:	e8 3b fb ff ff       	call   fb52 <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      this->_M_impl._M_start = __new_start;
   10017:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1001b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1001f:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   10022:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   10026:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1002a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   1002e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10032:	48 89 d0             	mov    %rdx,%rax
   10035:	48 c1 e0 02          	shl    $0x2,%rax
   10039:	48 01 d0             	add    %rdx,%rax
   1003c:	48 c1 e0 03          	shl    $0x3,%rax
   10040:	48 89 c2             	mov    %rax,%rdx
   10043:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10047:	48 01 c2             	add    %rax,%rdx
   1004a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1004e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10052:	90                   	nop
   10053:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10057:	c9                   	leave
   10058:	c3                   	ret
   10059:	90                   	nop

000000000001005a <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1005a:	55                   	push   %rbp
   1005b:	48 89 e5             	mov    %rsp,%rbp
   1005e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10062:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10066:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1006a:	5d                   	pop    %rbp
   1006b:	c3                   	ret

000000000001006c <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1006c:	55                   	push   %rbp
   1006d:	48 89 e5             	mov    %rsp,%rbp
   10070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10074:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   10078:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1007c:	48 8b 10             	mov    (%rax),%rdx
   1007f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10083:	48 89 10             	mov    %rdx,(%rax)
   10086:	90                   	nop
   10087:	5d                   	pop    %rbp
   10088:	c3                   	ret
   10089:	90                   	nop

000000000001008a <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1008a:	55                   	push   %rbp
   1008b:	48 89 e5             	mov    %rsp,%rbp
   1008e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   10092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10096:	5d                   	pop    %rbp
   10097:	c3                   	ret

0000000000010098 <_ZN9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   10098:	55                   	push   %rbp
   10099:	48 89 e5             	mov    %rsp,%rbp
   1009c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   100a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100a8:	48 8b 10             	mov    (%rax),%rdx
   100ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100af:	48 89 10             	mov    %rdx,(%rax)
   100b2:	90                   	nop
   100b3:	5d                   	pop    %rbp
   100b4:	c3                   	ret
   100b5:	90                   	nop

00000000000100b6 <_ZNK9__gnu_cxx17__normal_iteratorIPK16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   100b6:	55                   	push   %rbp
   100b7:	48 89 e5             	mov    %rsp,%rbp
   100ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   100be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100c2:	5d                   	pop    %rbp
   100c3:	c3                   	ret

00000000000100c4 <_ZSt3maxIjERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   100c4:	55                   	push   %rbp
   100c5:	48 89 e5             	mov    %rsp,%rbp
   100c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   100d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100d4:	8b 10                	mov    (%rax),%edx
   100d6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100da:	8b 00                	mov    (%rax),%eax
   100dc:	39 c2                	cmp    %eax,%edx
   100de:	73 06                	jae    100e6 <_ZSt3maxIjERKT_S2_S2_+0x22>
	return __b;
   100e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100e4:	eb 04                	jmp    100ea <_ZSt3maxIjERKT_S2_S2_+0x26>
      return __a;
   100e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   100ea:	5d                   	pop    %rbp
   100eb:	c3                   	ret

00000000000100ec <_ZSt3minIjERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
   100ec:	55                   	push   %rbp
   100ed:	48 89 e5             	mov    %rsp,%rbp
   100f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
   100f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   100fc:	8b 10                	mov    (%rax),%edx
   100fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10102:	8b 00                	mov    (%rax),%eax
   10104:	39 c2                	cmp    %eax,%edx
   10106:	73 06                	jae    1010e <_ZSt3minIjERKT_S2_S2_+0x22>
	return __b;
   10108:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1010c:	eb 04                	jmp    10112 <_ZSt3minIjERKT_S2_S2_+0x26>
      return __a;
   1010e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   10112:	5d                   	pop    %rbp
   10113:	c3                   	ret

0000000000010114 <_ZNKSt8optionalIjEcvbEv>:
      constexpr explicit operator bool() const noexcept
   10114:	55                   	push   %rbp
   10115:	48 89 e5             	mov    %rsp,%rbp
   10118:	48 83 ec 10          	sub    $0x10,%rsp
   1011c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10124:	48 89 c7             	mov    %rax,%rdi
   10127:	e8 e0 bf ff ff       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   1012c:	c9                   	leave
   1012d:	c3                   	ret

000000000001012e <_ZNKRSt8optionalIjEdeEv>:
      operator*() const& noexcept
   1012e:	55                   	push   %rbp
   1012f:	48 89 e5             	mov    %rsp,%rbp
   10132:	48 83 ec 10          	sub    $0x10,%rsp
   10136:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_get(); }
   1013a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1013e:	48 89 c7             	mov    %rax,%rdi
   10141:	e8 9c 2a 00 00       	call   12be2 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>
   10146:	c9                   	leave
   10147:	c3                   	ret

0000000000010148 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10148:	55                   	push   %rbp
   10149:	48 89 e5             	mov    %rsp,%rbp
   1014c:	53                   	push   %rbx
   1014d:	48 83 ec 38          	sub    $0x38,%rsp
   10151:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10155:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10159:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   1015e:	0f 84 e7 01 00 00    	je     1034b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   10164:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10168:	48 89 c7             	mov    %rax,%rdi
   1016b:	e8 8e da ff ff       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   10170:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10174:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10178:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   1017c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10180:	48 8b 40 08          	mov    0x8(%rax),%rax
   10184:	48 29 c2             	sub    %rax,%rdx
   10187:	48 89 d0             	mov    %rdx,%rax
   1018a:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1018e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   10192:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10196:	48 89 c7             	mov    %rax,%rdi
   10199:	e8 88 2a 00 00       	call   12c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   1019e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   101a2:	72 16                	jb     101ba <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x72>
   101a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   101a8:	48 89 c7             	mov    %rax,%rdi
   101ab:	e8 76 2a 00 00       	call   12c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   101b0:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   101b4:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   101b8:	73 07                	jae    101c1 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x79>
   101ba:	b8 01 00 00 00       	mov    $0x1,%eax
   101bf:	eb 05                	jmp    101c6 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x7e>
   101c1:	b8 00 00 00 00       	mov    $0x0,%eax
   101c6:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   101c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   101cc:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   101d0:	72 33                	jb     10205 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   101d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   101d6:	48 89 c7             	mov    %rax,%rdi
   101d9:	e8 dc e4 ff ff       	call   e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   101de:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   101e1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   101e5:	48 8b 40 08          	mov    0x8(%rax),%rax
   101e9:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   101ed:	48 89 ce             	mov    %rcx,%rsi
   101f0:	48 89 c7             	mov    %rax,%rdi
   101f3:	e8 50 2a 00 00       	call   12c48 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   101f8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   101fc:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   10200:	e9 46 01 00 00       	jmp    1034b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10205:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10209:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1020d:	48 8d 15 25 b6 00 00 	lea    0xb625(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10214:	48 89 ce             	mov    %rcx,%rsi
   10217:	48 89 c7             	mov    %rax,%rdi
   1021a:	e8 53 2a 00 00       	call   12c72 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>
   1021f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10223:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10227:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1022b:	48 89 d6             	mov    %rdx,%rsi
   1022e:	48 89 c7             	mov    %rax,%rdi
   10231:	e8 04 2b 00 00       	call   12d3a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
   10236:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   1023a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1023e:	48 89 c7             	mov    %rax,%rdi
   10241:	e8 74 e4 ff ff       	call   e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10246:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1024d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10254:	00 
   10255:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10259:	48 01 c1             	add    %rax,%rcx
   1025c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10260:	48 89 c6             	mov    %rax,%rsi
   10263:	48 89 cf             	mov    %rcx,%rdi
   10266:	e8 dd 29 00 00       	call   12c48 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   1026b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1026f:	48 89 c7             	mov    %rax,%rdi
   10272:	e8 43 e4 ff ff       	call   e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10277:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   1027a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1027e:	48 8b 70 08          	mov    0x8(%rax),%rsi
   10282:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10286:	48 8b 00             	mov    (%rax),%rax
   10289:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1028d:	48 89 c7             	mov    %rax,%rdi
   10290:	e8 d8 2a 00 00       	call   12d6d <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10295:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10299:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1029d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   102a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   102a5:	48 8b 12             	mov    (%rdx),%rdx
   102a8:	48 29 d1             	sub    %rdx,%rcx
   102ab:	48 c1 f9 03          	sar    $0x3,%rcx
   102af:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   102b2:	48 89 d6             	mov    %rdx,%rsi
   102b5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   102b9:	48 8b 0a             	mov    (%rdx),%rcx
   102bc:	48 89 f2             	mov    %rsi,%rdx
   102bf:	48 89 ce             	mov    %rcx,%rsi
   102c2:	48 89 c7             	mov    %rax,%rdi
   102c5:	e8 ba e3 ff ff       	call   e684 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   102ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   102ce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   102d2:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   102d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   102d9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   102dd:	48 01 d0             	add    %rdx,%rax
   102e0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   102e7:	00 
   102e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   102ec:	48 01 c2             	add    %rax,%rdx
   102ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   102f3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   102f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   102fb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10302:	00 
   10303:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10307:	48 01 c2             	add    %rax,%rdx
   1030a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1030e:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10312:	eb 37                	jmp    1034b <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10314:	48 89 c7             	mov    %rax,%rdi
   10317:	e8 14 3e ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1031c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10320:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10324:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10328:	48 89 ce             	mov    %rcx,%rsi
   1032b:	48 89 c7             	mov    %rax,%rdi
   1032e:	e8 51 e3 ff ff       	call   e684 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10333:	e8 e8 43 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   10338:	48 89 c3             	mov    %rax,%rbx
   1033b:	e8 b0 44 ff ff       	call   47f0 <__cxa_end_catch@plt>
   10340:	48 89 d8             	mov    %rbx,%rax
   10343:	48 89 c7             	mov    %rax,%rdi
   10346:	e8 25 45 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   1034b:	90                   	nop
   1034c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10350:	c9                   	leave
   10351:	c3                   	ret

0000000000010352 <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10352:	55                   	push   %rbp
   10353:	48 89 e5             	mov    %rsp,%rbp
   10356:	48 83 ec 20          	sub    $0x20,%rsp
   1035a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1035e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10362:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10366:	48 8b 40 08          	mov    0x8(%rax),%rax
   1036a:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   1036e:	48 c1 f8 03          	sar    $0x3,%rax
   10372:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10376:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1037b:	74 32                	je     103af <_ZNSt6vectorIP9VkImage_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1037d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10381:	48 89 c7             	mov    %rax,%rdi
   10384:	e8 31 e3 ff ff       	call   e6ba <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10389:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1038c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10390:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10394:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10398:	48 89 ce             	mov    %rcx,%rsi
   1039b:	48 89 c7             	mov    %rax,%rdi
   1039e:	e8 25 e3 ff ff       	call   e6c8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   103a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103a7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   103ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   103af:	90                   	nop
   103b0:	c9                   	leave
   103b1:	c3                   	ret

00000000000103b2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   103b2:	55                   	push   %rbp
   103b3:	48 89 e5             	mov    %rsp,%rbp
   103b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   103ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   103be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   103c2:	5d                   	pop    %rbp
   103c3:	c3                   	ret

00000000000103c4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   103c4:	55                   	push   %rbp
   103c5:	48 89 e5             	mov    %rsp,%rbp
   103c8:	53                   	push   %rbx
   103c9:	48 83 ec 38          	sub    $0x38,%rsp
   103cd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   103d1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   103d5:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   103da:	0f 84 e7 01 00 00    	je     105c7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   103e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103e4:	48 89 c7             	mov    %rax,%rdi
   103e7:	e8 00 dc ff ff       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   103ec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   103f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103f4:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   103f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   103fc:	48 8b 40 08          	mov    0x8(%rax),%rax
   10400:	48 29 c2             	sub    %rax,%rdx
   10403:	48 89 d0             	mov    %rdx,%rax
   10406:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1040a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   1040e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10412:	48 89 c7             	mov    %rax,%rdi
   10415:	e8 86 29 00 00       	call   12da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1041a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1041e:	72 16                	jb     10436 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   10420:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10424:	48 89 c7             	mov    %rax,%rdi
   10427:	e8 74 29 00 00       	call   12da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1042c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10430:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10434:	73 07                	jae    1043d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   10436:	b8 01 00 00 00       	mov    $0x1,%eax
   1043b:	eb 05                	jmp    10442 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   1043d:	b8 00 00 00 00       	mov    $0x0,%eax
   10442:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10444:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10448:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   1044c:	72 33                	jb     10481 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   1044e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10452:	48 89 c7             	mov    %rax,%rdi
   10455:	e8 da e2 ff ff       	call   e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1045a:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   1045d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10461:	48 8b 40 08          	mov    0x8(%rax),%rax
   10465:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10469:	48 89 ce             	mov    %rcx,%rsi
   1046c:	48 89 c7             	mov    %rax,%rdi
   1046f:	e8 4e 29 00 00       	call   12dc2 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10474:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10478:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   1047c:	e9 46 01 00 00       	jmp    105c7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10481:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10485:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10489:	48 8d 15 a9 b3 00 00 	lea    0xb3a9(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10490:	48 89 ce             	mov    %rcx,%rsi
   10493:	48 89 c7             	mov    %rax,%rdi
   10496:	e8 51 29 00 00       	call   12dec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   1049b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1049f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104a3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   104a7:	48 89 d6             	mov    %rdx,%rsi
   104aa:	48 89 c7             	mov    %rax,%rdi
   104ad:	e8 02 2a 00 00       	call   12eb4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   104b2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   104b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104ba:	48 89 c7             	mov    %rax,%rdi
   104bd:	e8 72 e2 ff ff       	call   e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   104c2:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   104c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104c9:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   104d0:	00 
   104d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   104d5:	48 01 c1             	add    %rax,%rcx
   104d8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   104dc:	48 89 c6             	mov    %rax,%rsi
   104df:	48 89 cf             	mov    %rcx,%rdi
   104e2:	e8 db 28 00 00       	call   12dc2 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   104e7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104eb:	48 89 c7             	mov    %rax,%rdi
   104ee:	e8 41 e2 ff ff       	call   e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   104f3:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   104f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   104fa:	48 8b 70 08          	mov    0x8(%rax),%rsi
   104fe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10502:	48 8b 00             	mov    (%rax),%rax
   10505:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10509:	48 89 c7             	mov    %rax,%rdi
   1050c:	e8 d6 29 00 00       	call   12ee7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10511:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10515:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10519:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1051d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10521:	48 8b 12             	mov    (%rdx),%rdx
   10524:	48 29 d1             	sub    %rdx,%rcx
   10527:	48 c1 f9 03          	sar    $0x3,%rcx
   1052b:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1052e:	48 89 d6             	mov    %rdx,%rsi
   10531:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10535:	48 8b 0a             	mov    (%rdx),%rcx
   10538:	48 89 f2             	mov    %rsi,%rdx
   1053b:	48 89 ce             	mov    %rcx,%rsi
   1053e:	48 89 c7             	mov    %rax,%rdi
   10541:	e8 b8 e1 ff ff       	call   e6fe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10546:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1054a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1054e:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10551:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10555:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10559:	48 01 d0             	add    %rdx,%rax
   1055c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10563:	00 
   10564:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10568:	48 01 c2             	add    %rax,%rdx
   1056b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1056f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10573:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10577:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1057e:	00 
   1057f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10583:	48 01 c2             	add    %rax,%rdx
   10586:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1058a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1058e:	eb 37                	jmp    105c7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10590:	48 89 c7             	mov    %rax,%rdi
   10593:	e8 98 3b ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10598:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1059c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   105a0:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   105a4:	48 89 ce             	mov    %rcx,%rsi
   105a7:	48 89 c7             	mov    %rax,%rdi
   105aa:	e8 4f e1 ff ff       	call   e6fe <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   105af:	e8 6c 41 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   105b4:	48 89 c3             	mov    %rax,%rbx
   105b7:	e8 34 42 ff ff       	call   47f0 <__cxa_end_catch@plt>
   105bc:	48 89 d8             	mov    %rbx,%rax
   105bf:	48 89 c7             	mov    %rax,%rdi
   105c2:	e8 a9 42 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   105c7:	90                   	nop
   105c8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   105cc:	c9                   	leave
   105cd:	c3                   	ret

00000000000105ce <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   105ce:	55                   	push   %rbp
   105cf:	48 89 e5             	mov    %rsp,%rbp
   105d2:	48 83 ec 20          	sub    $0x20,%rsp
   105d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   105da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   105de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105e2:	48 8b 40 08          	mov    0x8(%rax),%rax
   105e6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   105ea:	48 c1 f8 03          	sar    $0x3,%rax
   105ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   105f2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   105f7:	74 32                	je     1062b <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   105f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105fd:	48 89 c7             	mov    %rax,%rdi
   10600:	e8 2f e1 ff ff       	call   e734 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10605:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10608:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1060c:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10610:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10614:	48 89 ce             	mov    %rcx,%rsi
   10617:	48 89 c7             	mov    %rax,%rdi
   1061a:	e8 23 e1 ff ff       	call   e742 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1061f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10623:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10627:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   1062b:	90                   	nop
   1062c:	c9                   	leave
   1062d:	c3                   	ret

000000000001062e <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   1062e:	55                   	push   %rbp
   1062f:	48 89 e5             	mov    %rsp,%rbp
   10632:	53                   	push   %rbx
   10633:	48 83 ec 28          	sub    $0x28,%rsp
   10637:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1063b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1063f:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10643:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10647:	48 89 d6             	mov    %rdx,%rsi
   1064a:	48 89 c7             	mov    %rax,%rdi
   1064d:	e8 8e 3b ff ff       	call   41e0 <_ZNSaIcEC1ERKS_@plt>
   10652:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10656:	48 89 c7             	mov    %rax,%rdi
   10659:	e8 bb 28 00 00       	call   12f19 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
   1065e:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   10662:	0f 92 c3             	setb   %bl
   10665:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   10669:	48 89 c7             	mov    %rax,%rdi
   1066c:	e8 4f 3e ff ff       	call   44c0 <_ZNSaIcED1Ev@plt>
   10671:	84 db                	test   %bl,%bl
   10673:	74 0f                	je     10684 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
   10675:	48 8d 05 8c b1 00 00 	lea    0xb18c(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
   1067c:	48 89 c7             	mov    %rax,%rdi
   1067f:	e8 2c 3b ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   10684:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   10688:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1068c:	c9                   	leave
   1068d:	c3                   	ret

000000000001068e <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   1068e:	55                   	push   %rbp
   1068f:	48 89 e5             	mov    %rsp,%rbp
   10692:	53                   	push   %rbx
   10693:	48 83 ec 28          	sub    $0x28,%rsp
   10697:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1069b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1069f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   106a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   106ab:	48 89 d6             	mov    %rdx,%rsi
   106ae:	48 89 c7             	mov    %rax,%rdi
   106b1:	e8 a6 28 00 00       	call   12f5c <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
   106b6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   106ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106be:	48 89 d6             	mov    %rdx,%rsi
   106c1:	48 89 c7             	mov    %rax,%rdi
   106c4:	e8 c5 28 00 00       	call   12f8e <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
   106c9:	eb 1a                	jmp    106e5 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
   106cb:	48 89 c3             	mov    %rax,%rbx
   106ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106d2:	48 89 c7             	mov    %rax,%rdi
   106d5:	e8 60 ba ff ff       	call   c13a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
   106da:	48 89 d8             	mov    %rbx,%rax
   106dd:	48 89 c7             	mov    %rax,%rdi
   106e0:	e8 8b 41 ff ff       	call   4870 <_Unwind_Resume@plt>
   106e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   106e9:	c9                   	leave
   106ea:	c3                   	ret
   106eb:	90                   	nop

00000000000106ec <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   106ec:	55                   	push   %rbp
   106ed:	48 89 e5             	mov    %rsp,%rbp
   106f0:	48 83 ec 10          	sub    $0x10,%rsp
   106f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   106fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10700:	48 89 c7             	mov    %rax,%rdi
   10703:	e8 24 00 00 00       	call   1072c <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
   10708:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   1070b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1070f:	48 8b 00             	mov    (%rax),%rax
   10712:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   10716:	48 89 ce             	mov    %rcx,%rsi
   10719:	48 89 c7             	mov    %rax,%rdi
   1071c:	e8 bf 28 00 00       	call   12fe0 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   10721:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   10725:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   10729:	90                   	nop
   1072a:	c9                   	leave
   1072b:	c3                   	ret

000000000001072c <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1072c:	55                   	push   %rbp
   1072d:	48 89 e5             	mov    %rsp,%rbp
   10730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10738:	5d                   	pop    %rbp
   10739:	c3                   	ret

000000000001073a <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1073a:	55                   	push   %rbp
   1073b:	48 89 e5             	mov    %rsp,%rbp
   1073e:	48 83 ec 20          	sub    $0x20,%rsp
   10742:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10746:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1074a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1074e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10756:	48 89 d6             	mov    %rdx,%rsi
   10759:	48 89 c7             	mov    %rax,%rdi
   1075c:	e8 a8 28 00 00       	call   13009 <_ZSt8_DestroyIPcEvT_S1_>
    }
   10761:	90                   	nop
   10762:	c9                   	leave
   10763:	c3                   	ret

0000000000010764 <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10764:	55                   	push   %rbp
   10765:	48 89 e5             	mov    %rsp,%rbp
   10768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1076c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10770:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10774:	5d                   	pop    %rbp
   10775:	c3                   	ret

0000000000010776 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
   10776:	55                   	push   %rbp
   10777:	48 89 e5             	mov    %rsp,%rbp
   1077a:	48 83 ec 20          	sub    $0x20,%rsp
   1077e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10782:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   10786:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1078a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1078f:	74 17                	je     107a8 <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   10791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10795:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10799:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1079d:	48 89 ce             	mov    %rcx,%rsi
   107a0:	48 89 c7             	mov    %rax,%rdi
   107a3:	e8 87 28 00 00       	call   1302f <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
   107a8:	90                   	nop
   107a9:	c9                   	leave
   107aa:	c3                   	ret
   107ab:	90                   	nop

00000000000107ac <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>:
   107ac:	55                   	push   %rbp
   107ad:	48 89 e5             	mov    %rsp,%rbp
   107b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107b4:	90                   	nop
   107b5:	5d                   	pop    %rbp
   107b6:	c3                   	ret
   107b7:	90                   	nop

00000000000107b8 <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   107b8:	55                   	push   %rbp
   107b9:	48 89 e5             	mov    %rsp,%rbp
   107bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107c0:	90                   	nop
   107c1:	5d                   	pop    %rbp
   107c2:	c3                   	ret
   107c3:	90                   	nop

00000000000107c4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   107c4:	55                   	push   %rbp
   107c5:	48 89 e5             	mov    %rsp,%rbp
   107c8:	48 83 ec 10          	sub    $0x10,%rsp
   107cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107d4:	48 89 c7             	mov    %rax,%rdi
   107d7:	e8 e0 d6 ff ff       	call   debc <_ZNSaI14VkDynamicStateED1Ev>
   107dc:	90                   	nop
   107dd:	c9                   	leave
   107de:	c3                   	ret
   107df:	90                   	nop

00000000000107e0 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   107e0:	55                   	push   %rbp
   107e1:	48 89 e5             	mov    %rsp,%rbp
   107e4:	48 83 ec 10          	sub    $0x10,%rsp
   107e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   107ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   107f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107f4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   107f8:	48 89 d6             	mov    %rdx,%rsi
   107fb:	48 89 c7             	mov    %rax,%rdi
   107fe:	e8 5b 28 00 00       	call   1305e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>
   10803:	90                   	nop
   10804:	c9                   	leave
   10805:	c3                   	ret

0000000000010806 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   10806:	55                   	push   %rbp
   10807:	48 89 e5             	mov    %rsp,%rbp
   1080a:	48 83 ec 10          	sub    $0x10,%rsp
   1080e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   10812:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10816:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1081a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1081e:	48 8b 00             	mov    (%rax),%rax
   10821:	48 29 c2             	sub    %rax,%rdx
   10824:	48 89 d0             	mov    %rdx,%rax
   10827:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   1082b:	48 89 c2             	mov    %rax,%rdx
   1082e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10832:	48 8b 08             	mov    (%rax),%rcx
   10835:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10839:	48 89 ce             	mov    %rcx,%rsi
   1083c:	48 89 c7             	mov    %rax,%rdi
   1083f:	e8 4c 28 00 00       	call   13090 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>
      }
   10844:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10848:	48 89 c7             	mov    %rax,%rdi
   1084b:	e8 74 ff ff ff       	call   107c4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>
   10850:	90                   	nop
   10851:	c9                   	leave
   10852:	c3                   	ret
   10853:	90                   	nop

0000000000010854 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>:
      begin() const noexcept { return _M_array; }
   10854:	55                   	push   %rbp
   10855:	48 89 e5             	mov    %rsp,%rbp
   10858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1085c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10860:	48 8b 00             	mov    (%rax),%rax
   10863:	5d                   	pop    %rbp
   10864:	c3                   	ret
   10865:	90                   	nop

0000000000010866 <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>:
      end() const noexcept { return begin() + size(); }
   10866:	55                   	push   %rbp
   10867:	48 89 e5             	mov    %rsp,%rbp
   1086a:	53                   	push   %rbx
   1086b:	48 83 ec 18          	sub    $0x18,%rsp
   1086f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10873:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10877:	48 89 c7             	mov    %rax,%rdi
   1087a:	e8 d5 ff ff ff       	call   10854 <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   1087f:	48 89 c3             	mov    %rax,%rbx
   10882:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10886:	48 89 c7             	mov    %rax,%rdi
   10889:	e8 38 28 00 00       	call   130c6 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>
   1088e:	48 c1 e0 02          	shl    $0x2,%rax
   10892:	48 01 d8             	add    %rbx,%rax
   10895:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10899:	c9                   	leave
   1089a:	c3                   	ret

000000000001089b <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   1089b:	55                   	push   %rbp
   1089c:	48 89 e5             	mov    %rsp,%rbp
   1089f:	48 83 ec 10          	sub    $0x10,%rsp
   108a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   108ab:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   108af:	48 89 c7             	mov    %rax,%rdi
   108b2:	e8 21 28 00 00       	call   130d8 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   108b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108bb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   108bf:	48 89 d6             	mov    %rdx,%rsi
   108c2:	48 89 c7             	mov    %rax,%rdi
   108c5:	e8 19 28 00 00       	call   130e3 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   108ca:	c9                   	leave
   108cb:	c3                   	ret

00000000000108cc <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   108cc:	55                   	push   %rbp
   108cd:	48 89 e5             	mov    %rsp,%rbp
   108d0:	53                   	push   %rbx
   108d1:	48 83 ec 38          	sub    $0x38,%rsp
   108d5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   108d9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   108dd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   108e1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   108e5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   108e9:	48 89 d6             	mov    %rdx,%rsi
   108ec:	48 89 c7             	mov    %rax,%rdi
   108ef:	e8 a7 ff ff ff       	call   1089b <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   108f4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   108f8:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   108fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10900:	48 89 c7             	mov    %rax,%rdi
   10903:	e8 74 00 00 00       	call   1097c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   10908:	48 89 c2             	mov    %rax,%rdx
   1090b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1090f:	48 89 d6             	mov    %rdx,%rsi
   10912:	48 89 c7             	mov    %rax,%rdi
   10915:	e8 e3 27 00 00       	call   130fd <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>
   1091a:	48 89 c6             	mov    %rax,%rsi
   1091d:	48 89 df             	mov    %rbx,%rdi
   10920:	e8 39 28 00 00       	call   1315e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>
   10925:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10929:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1092c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10930:	48 8b 00             	mov    (%rax),%rax
   10933:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10937:	48 c1 e2 02          	shl    $0x2,%rdx
   1093b:	48 01 c2             	add    %rax,%rdx
   1093e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10942:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   10946:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1094a:	48 89 c7             	mov    %rax,%rdi
   1094d:	e8 2a 00 00 00       	call   1097c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   10952:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   10955:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10959:	48 8b 10             	mov    (%rax),%rdx
   1095c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   10960:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10964:	48 89 c7             	mov    %rax,%rdi
   10967:	e8 25 28 00 00       	call   13191 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   1096c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10970:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   10974:	90                   	nop
   10975:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10979:	c9                   	leave
   1097a:	c3                   	ret
   1097b:	90                   	nop

000000000001097c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1097c:	55                   	push   %rbp
   1097d:	48 89 e5             	mov    %rsp,%rbp
   10980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   10984:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10988:	5d                   	pop    %rbp
   10989:	c3                   	ret

000000000001098a <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1098a:	55                   	push   %rbp
   1098b:	48 89 e5             	mov    %rsp,%rbp
   1098e:	48 83 ec 20          	sub    $0x20,%rsp
   10992:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10996:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1099a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1099e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   109a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109a6:	48 89 d6             	mov    %rdx,%rsi
   109a9:	48 89 c7             	mov    %rax,%rdi
   109ac:	e8 11 28 00 00       	call   131c2 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>
    }
   109b1:	90                   	nop
   109b2:	c9                   	leave
   109b3:	c3                   	ret

00000000000109b4 <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   109b4:	55                   	push   %rbp
   109b5:	48 89 e5             	mov    %rsp,%rbp
   109b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   109bc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   109c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   109c4:	5d                   	pop    %rbp
   109c5:	c3                   	ret

00000000000109c6 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   109c6:	55                   	push   %rbp
   109c7:	48 89 e5             	mov    %rsp,%rbp
   109ca:	53                   	push   %rbx
   109cb:	48 83 ec 38          	sub    $0x38,%rsp
   109cf:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   109d3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   109d7:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   109dc:	0f 84 e7 01 00 00    	je     10bc9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   109e2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109e6:	48 89 c7             	mov    %rax,%rdi
   109e9:	e8 76 d9 ff ff       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   109ee:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   109f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109f6:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   109fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   109fe:	48 8b 40 08          	mov    0x8(%rax),%rax
   10a02:	48 29 c2             	sub    %rax,%rdx
   10a05:	48 89 d0             	mov    %rdx,%rax
   10a08:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10a0c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   10a10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a14:	48 89 c7             	mov    %rax,%rdi
   10a17:	e8 cc 27 00 00       	call   131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   10a1c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10a20:	72 16                	jb     10a38 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   10a22:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a26:	48 89 c7             	mov    %rax,%rdi
   10a29:	e8 ba 27 00 00       	call   131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   10a2e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10a32:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10a36:	73 07                	jae    10a3f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   10a38:	b8 01 00 00 00       	mov    $0x1,%eax
   10a3d:	eb 05                	jmp    10a44 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   10a3f:	b8 00 00 00 00       	mov    $0x0,%eax
   10a44:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10a46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a4a:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10a4e:	72 33                	jb     10a83 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   10a50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a54:	48 89 c7             	mov    %rax,%rdi
   10a57:	e8 52 dd ff ff       	call   e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10a5c:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   10a5f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a63:	48 8b 40 08          	mov    0x8(%rax),%rax
   10a67:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10a6b:	48 89 ce             	mov    %rcx,%rsi
   10a6e:	48 89 c7             	mov    %rax,%rdi
   10a71:	e8 94 27 00 00       	call   1320a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10a76:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10a7a:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   10a7e:	e9 46 01 00 00       	jmp    10bc9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10a83:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10a87:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10a8b:	48 8d 15 a7 ad 00 00 	lea    0xada7(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10a92:	48 89 ce             	mov    %rcx,%rsi
   10a95:	48 89 c7             	mov    %rax,%rdi
   10a98:	e8 97 27 00 00       	call   13234 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>
   10a9d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10aa1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10aa5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10aa9:	48 89 d6             	mov    %rdx,%rsi
   10aac:	48 89 c7             	mov    %rax,%rdi
   10aaf:	e8 48 28 00 00       	call   132fc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>
   10ab4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10ab8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10abc:	48 89 c7             	mov    %rax,%rdi
   10abf:	e8 ea dc ff ff       	call   e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10ac4:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10ac7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10acb:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10ad2:	00 
   10ad3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ad7:	48 01 c1             	add    %rax,%rcx
   10ada:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10ade:	48 89 c6             	mov    %rax,%rsi
   10ae1:	48 89 cf             	mov    %rcx,%rdi
   10ae4:	e8 21 27 00 00       	call   1320a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10ae9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10aed:	48 89 c7             	mov    %rax,%rdi
   10af0:	e8 b9 dc ff ff       	call   e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10af5:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   10af8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10afc:	48 8b 70 08          	mov    0x8(%rax),%rsi
   10b00:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b04:	48 8b 00             	mov    (%rax),%rax
   10b07:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10b0b:	48 89 c7             	mov    %rax,%rdi
   10b0e:	e8 1c 28 00 00       	call   1332f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10b13:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10b17:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10b1b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   10b1f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10b23:	48 8b 12             	mov    (%rdx),%rdx
   10b26:	48 29 d1             	sub    %rdx,%rcx
   10b29:	48 c1 f9 03          	sar    $0x3,%rcx
   10b2d:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   10b30:	48 89 d6             	mov    %rdx,%rsi
   10b33:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10b37:	48 8b 0a             	mov    (%rdx),%rcx
   10b3a:	48 89 f2             	mov    %rsi,%rdx
   10b3d:	48 89 ce             	mov    %rcx,%rsi
   10b40:	48 89 c7             	mov    %rax,%rdi
   10b43:	e8 30 dc ff ff       	call   e778 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10b48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b4c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10b50:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10b53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b57:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10b5b:	48 01 d0             	add    %rdx,%rax
   10b5e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b65:	00 
   10b66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10b6a:	48 01 c2             	add    %rax,%rdx
   10b6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b71:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10b75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10b79:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10b80:	00 
   10b81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10b85:	48 01 c2             	add    %rax,%rdx
   10b88:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b8c:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10b90:	eb 37                	jmp    10bc9 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10b92:	48 89 c7             	mov    %rax,%rdi
   10b95:	e8 96 35 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10b9a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10b9e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10ba2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10ba6:	48 89 ce             	mov    %rcx,%rsi
   10ba9:	48 89 c7             	mov    %rax,%rdi
   10bac:	e8 c7 db ff ff       	call   e778 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10bb1:	e8 6a 3b ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   10bb6:	48 89 c3             	mov    %rax,%rbx
   10bb9:	e8 32 3c ff ff       	call   47f0 <__cxa_end_catch@plt>
   10bbe:	48 89 d8             	mov    %rbx,%rax
   10bc1:	48 89 c7             	mov    %rax,%rdi
   10bc4:	e8 a7 3c ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   10bc9:	90                   	nop
   10bca:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10bce:	c9                   	leave
   10bcf:	c3                   	ret

0000000000010bd0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10bd0:	55                   	push   %rbp
   10bd1:	48 89 e5             	mov    %rsp,%rbp
   10bd4:	48 83 ec 20          	sub    $0x20,%rsp
   10bd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10bdc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10be0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10be4:	48 8b 40 08          	mov    0x8(%rax),%rax
   10be8:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10bec:	48 c1 f8 03          	sar    $0x3,%rax
   10bf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10bf4:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10bf9:	74 32                	je     10c2d <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10bfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bff:	48 89 c7             	mov    %rax,%rdi
   10c02:	e8 a7 db ff ff       	call   e7ae <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10c07:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10c0a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c0e:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10c12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c16:	48 89 ce             	mov    %rcx,%rsi
   10c19:	48 89 c7             	mov    %rax,%rdi
   10c1c:	e8 9b db ff ff       	call   e7bc <_ZSt8_DestroyIPP15VkFramebuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   10c21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c25:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10c29:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10c2d:	90                   	nop
   10c2e:	c9                   	leave
   10c2f:	c3                   	ret

0000000000010c30 <_ZNKSt6vectorIN4rtvc6VertexESaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10c30:	55                   	push   %rbp
   10c31:	48 89 e5             	mov    %rsp,%rbp
   10c34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10c38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10c3c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10c40:	5d                   	pop    %rbp
   10c41:	c3                   	ret

0000000000010c42 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10c42:	55                   	push   %rbp
   10c43:	48 89 e5             	mov    %rsp,%rbp
   10c46:	53                   	push   %rbx
   10c47:	48 83 ec 38          	sub    $0x38,%rsp
   10c4b:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10c4f:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10c53:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10c58:	0f 84 e7 01 00 00    	je     10e45 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   10c5e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c62:	48 89 c7             	mov    %rax,%rdi
   10c65:	e8 46 d5 ff ff       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   10c6a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10c6e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c72:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   10c76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c7a:	48 8b 40 08          	mov    0x8(%rax),%rax
   10c7e:	48 29 c2             	sub    %rax,%rdx
   10c81:	48 89 d0             	mov    %rdx,%rax
   10c84:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10c88:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   10c8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10c90:	48 89 c7             	mov    %rax,%rdi
   10c93:	e8 ca 26 00 00       	call   13362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   10c98:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10c9c:	72 16                	jb     10cb4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x72>
   10c9e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ca2:	48 89 c7             	mov    %rax,%rdi
   10ca5:	e8 b8 26 00 00       	call   13362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   10caa:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10cae:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10cb2:	73 07                	jae    10cbb <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x79>
   10cb4:	b8 01 00 00 00       	mov    $0x1,%eax
   10cb9:	eb 05                	jmp    10cc0 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x7e>
   10cbb:	b8 00 00 00 00       	mov    $0x0,%eax
   10cc0:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10cc2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10cc6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10cca:	72 33                	jb     10cff <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   10ccc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cd0:	48 89 c7             	mov    %rax,%rdi
   10cd3:	e8 50 db ff ff       	call   e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10cd8:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   10cdb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10cdf:	48 8b 40 08          	mov    0x8(%rax),%rax
   10ce3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10ce7:	48 89 ce             	mov    %rcx,%rsi
   10cea:	48 89 c7             	mov    %rax,%rdi
   10ced:	e8 92 26 00 00       	call   13384 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10cf2:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10cf6:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   10cfa:	e9 46 01 00 00       	jmp    10e45 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10cff:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10d03:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d07:	48 8d 15 2b ab 00 00 	lea    0xab2b(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10d0e:	48 89 ce             	mov    %rcx,%rsi
   10d11:	48 89 c7             	mov    %rax,%rdi
   10d14:	e8 95 26 00 00       	call   133ae <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc>
   10d19:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10d1d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d21:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10d25:	48 89 d6             	mov    %rdx,%rsi
   10d28:	48 89 c7             	mov    %rax,%rdi
   10d2b:	e8 46 27 00 00       	call   13476 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
   10d30:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10d34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d38:	48 89 c7             	mov    %rax,%rdi
   10d3b:	e8 e8 da ff ff       	call   e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10d40:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10d43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10d47:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10d4e:	00 
   10d4f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10d53:	48 01 c1             	add    %rax,%rcx
   10d56:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10d5a:	48 89 c6             	mov    %rax,%rsi
   10d5d:	48 89 cf             	mov    %rcx,%rdi
   10d60:	e8 1f 26 00 00       	call   13384 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   10d65:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d69:	48 89 c7             	mov    %rax,%rdi
   10d6c:	e8 b7 da ff ff       	call   e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10d71:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   10d74:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d78:	48 8b 70 08          	mov    0x8(%rax),%rsi
   10d7c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10d80:	48 8b 00             	mov    (%rax),%rax
   10d83:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10d87:	48 89 c7             	mov    %rax,%rdi
   10d8a:	e8 1a 27 00 00       	call   134a9 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   10d8f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   10d93:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10d97:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   10d9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10d9f:	48 8b 12             	mov    (%rdx),%rdx
   10da2:	48 29 d1             	sub    %rdx,%rcx
   10da5:	48 c1 f9 03          	sar    $0x3,%rcx
   10da9:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   10dac:	48 89 d6             	mov    %rdx,%rsi
   10daf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10db3:	48 8b 0a             	mov    (%rdx),%rcx
   10db6:	48 89 f2             	mov    %rsi,%rdx
   10db9:	48 89 ce             	mov    %rcx,%rsi
   10dbc:	48 89 c7             	mov    %rax,%rdi
   10dbf:	e8 2e da ff ff       	call   e7f2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   10dc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10dc8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10dcc:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   10dcf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10dd3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10dd7:	48 01 d0             	add    %rdx,%rax
   10dda:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10de1:	00 
   10de2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10de6:	48 01 c2             	add    %rax,%rdx
   10de9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10ded:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   10df1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10df5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   10dfc:	00 
   10dfd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10e01:	48 01 c2             	add    %rax,%rdx
   10e04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e08:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   10e0c:	eb 37                	jmp    10e45 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   10e0e:	48 89 c7             	mov    %rax,%rdi
   10e11:	e8 1a 33 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   10e16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10e1a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10e1e:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   10e22:	48 89 ce             	mov    %rcx,%rsi
   10e25:	48 89 c7             	mov    %rax,%rdi
   10e28:	e8 c5 d9 ff ff       	call   e7f2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   10e2d:	e8 ee 38 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   10e32:	48 89 c3             	mov    %rax,%rbx
   10e35:	e8 b6 39 ff ff       	call   47f0 <__cxa_end_catch@plt>
   10e3a:	48 89 d8             	mov    %rbx,%rax
   10e3d:	48 89 c7             	mov    %rax,%rdi
   10e40:	e8 2b 3a ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   10e45:	90                   	nop
   10e46:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10e4a:	c9                   	leave
   10e4b:	c3                   	ret

0000000000010e4c <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   10e4c:	55                   	push   %rbp
   10e4d:	48 89 e5             	mov    %rsp,%rbp
   10e50:	48 83 ec 20          	sub    $0x20,%rsp
   10e54:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10e58:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   10e5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e60:	48 8b 40 08          	mov    0x8(%rax),%rax
   10e64:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   10e68:	48 c1 f8 03          	sar    $0x3,%rax
   10e6c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10e70:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   10e75:	74 32                	je     10ea9 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   10e77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e7b:	48 89 c7             	mov    %rax,%rdi
   10e7e:	e8 a5 d9 ff ff       	call   e828 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10e83:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   10e86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10e8a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10e8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10e92:	48 89 ce             	mov    %rcx,%rsi
   10e95:	48 89 c7             	mov    %rax,%rdi
   10e98:	e8 99 d9 ff ff       	call   e836 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   10e9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ea1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10ea5:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   10ea9:	90                   	nop
   10eaa:	c9                   	leave
   10eab:	c3                   	ret

0000000000010eac <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   10eac:	55                   	push   %rbp
   10ead:	48 89 e5             	mov    %rsp,%rbp
   10eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10eb4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   10eb8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10ebc:	5d                   	pop    %rbp
   10ebd:	c3                   	ret

0000000000010ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10ebe:	55                   	push   %rbp
   10ebf:	48 89 e5             	mov    %rsp,%rbp
   10ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10ec6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eca:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ed2:	48 8b 00             	mov    (%rax),%rax
   10ed5:	48 29 c2             	sub    %rax,%rdx
   10ed8:	48 89 d0             	mov    %rdx,%rax
   10edb:	48 c1 f8 03          	sar    $0x3,%rax
   10edf:	5d                   	pop    %rbp
   10ee0:	c3                   	ret
   10ee1:	90                   	nop

0000000000010ee2 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   10ee2:	55                   	push   %rbp
   10ee3:	48 89 e5             	mov    %rsp,%rbp
   10ee6:	53                   	push   %rbx
   10ee7:	48 83 ec 38          	sub    $0x38,%rsp
   10eeb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   10eef:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   10ef3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   10ef8:	0f 84 e7 01 00 00    	je     110e5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   10efe:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f02:	48 89 c7             	mov    %rax,%rdi
   10f05:	e8 b4 ff ff ff       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   10f0a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10f0e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f12:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   10f16:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f1a:	48 8b 40 08          	mov    0x8(%rax),%rax
   10f1e:	48 29 c2             	sub    %rax,%rdx
   10f21:	48 89 d0             	mov    %rdx,%rax
   10f24:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   10f28:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   10f2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f30:	48 89 c7             	mov    %rax,%rdi
   10f33:	e8 a4 25 00 00       	call   134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   10f38:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   10f3c:	72 16                	jb     10f54 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x72>
   10f3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f42:	48 89 c7             	mov    %rax,%rdi
   10f45:	e8 92 25 00 00       	call   134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   10f4a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   10f4e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   10f52:	73 07                	jae    10f5b <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x79>
   10f54:	b8 01 00 00 00       	mov    $0x1,%eax
   10f59:	eb 05                	jmp    10f60 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x7e>
   10f5b:	b8 00 00 00 00       	mov    $0x0,%eax
   10f60:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   10f62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10f66:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   10f6a:	72 33                	jb     10f9f <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   10f6c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f70:	48 89 c7             	mov    %rax,%rdi
   10f73:	e8 2a d9 ff ff       	call   e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10f78:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   10f7b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10f7f:	48 8b 40 08          	mov    0x8(%rax),%rax
   10f83:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10f87:	48 89 ce             	mov    %rcx,%rsi
   10f8a:	48 89 c7             	mov    %rax,%rdi
   10f8d:	e8 6c 25 00 00       	call   134fe <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   10f92:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   10f96:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   10f9a:	e9 46 01 00 00       	jmp    110e5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   10f9f:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   10fa3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10fa7:	48 8d 15 8b a8 00 00 	lea    0xa88b(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   10fae:	48 89 ce             	mov    %rcx,%rsi
   10fb1:	48 89 c7             	mov    %rax,%rdi
   10fb4:	e8 6f 25 00 00       	call   13528 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>
   10fb9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   10fbd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10fc1:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10fc5:	48 89 d6             	mov    %rdx,%rsi
   10fc8:	48 89 c7             	mov    %rax,%rdi
   10fcb:	e8 20 26 00 00       	call   135f0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>
   10fd0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   10fd4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   10fd8:	48 89 c7             	mov    %rax,%rdi
   10fdb:	e8 c2 d8 ff ff       	call   e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10fe0:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   10fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10fe7:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   10fee:	00 
   10fef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10ff3:	48 01 c1             	add    %rax,%rcx
   10ff6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10ffa:	48 89 c6             	mov    %rax,%rsi
   10ffd:	48 89 cf             	mov    %rcx,%rdi
   11000:	e8 f9 24 00 00       	call   134fe <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   11005:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11009:	48 89 c7             	mov    %rax,%rdi
   1100c:	e8 91 d8 ff ff       	call   e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11011:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   11014:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11018:	48 8b 70 08          	mov    0x8(%rax),%rsi
   1101c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11020:	48 8b 00             	mov    (%rax),%rax
   11023:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11027:	48 89 c7             	mov    %rax,%rdi
   1102a:	e8 f4 25 00 00       	call   13623 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   1102f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   11033:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11037:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   1103b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1103f:	48 8b 12             	mov    (%rdx),%rdx
   11042:	48 29 d1             	sub    %rdx,%rcx
   11045:	48 c1 f9 03          	sar    $0x3,%rcx
   11049:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   1104c:	48 89 d6             	mov    %rdx,%rsi
   1104f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11053:	48 8b 0a             	mov    (%rdx),%rcx
   11056:	48 89 f2             	mov    %rsi,%rdx
   11059:	48 89 ce             	mov    %rcx,%rsi
   1105c:	48 89 c7             	mov    %rax,%rdi
   1105f:	e8 08 d8 ff ff       	call   e86c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   11064:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11068:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   1106c:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   1106f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11073:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11077:	48 01 d0             	add    %rdx,%rax
   1107a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11081:	00 
   11082:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11086:	48 01 c2             	add    %rax,%rdx
   11089:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1108d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   11091:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11095:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1109c:	00 
   1109d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   110a1:	48 01 c2             	add    %rax,%rdx
   110a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   110a8:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   110ac:	eb 37                	jmp    110e5 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   110ae:	48 89 c7             	mov    %rax,%rdi
   110b1:	e8 7a 30 ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   110b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   110ba:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   110be:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   110c2:	48 89 ce             	mov    %rcx,%rsi
   110c5:	48 89 c7             	mov    %rax,%rdi
   110c8:	e8 9f d7 ff ff       	call   e86c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   110cd:	e8 4e 36 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   110d2:	48 89 c3             	mov    %rax,%rbx
   110d5:	e8 16 37 ff ff       	call   47f0 <__cxa_end_catch@plt>
   110da:	48 89 d8             	mov    %rbx,%rax
   110dd:	48 89 c7             	mov    %rax,%rdi
   110e0:	e8 8b 37 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   110e5:	90                   	nop
   110e6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   110ea:	c9                   	leave
   110eb:	c3                   	ret

00000000000110ec <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   110ec:	55                   	push   %rbp
   110ed:	48 89 e5             	mov    %rsp,%rbp
   110f0:	48 83 ec 20          	sub    $0x20,%rsp
   110f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   110f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   110fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11100:	48 8b 40 08          	mov    0x8(%rax),%rax
   11104:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   11108:	48 c1 f8 03          	sar    $0x3,%rax
   1110c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11110:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   11115:	74 32                	je     11149 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   11117:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1111b:	48 89 c7             	mov    %rax,%rdi
   1111e:	e8 7f d7 ff ff       	call   e8a2 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11123:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   11126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1112a:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1112e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11132:	48 89 ce             	mov    %rcx,%rsi
   11135:	48 89 c7             	mov    %rax,%rdi
   11138:	e8 73 d7 ff ff       	call   e8b0 <_ZSt8_DestroyIPP13VkSemaphore_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1113d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11141:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11145:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   11149:	90                   	nop
   1114a:	c9                   	leave
   1114b:	c3                   	ret

000000000001114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1114c:	55                   	push   %rbp
   1114d:	48 89 e5             	mov    %rsp,%rbp
   11150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11158:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1115c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11160:	48 8b 00             	mov    (%rax),%rax
   11163:	48 29 c2             	sub    %rax,%rdx
   11166:	48 89 d0             	mov    %rdx,%rax
   11169:	48 c1 f8 03          	sar    $0x3,%rax
   1116d:	5d                   	pop    %rbp
   1116e:	c3                   	ret
   1116f:	90                   	nop

0000000000011170 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm>:
    vector<_Tp, _Alloc>::
   11170:	55                   	push   %rbp
   11171:	48 89 e5             	mov    %rsp,%rbp
   11174:	53                   	push   %rbx
   11175:	48 83 ec 38          	sub    $0x38,%rsp
   11179:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   1117d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
      if (__n != 0)
   11181:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11186:	0f 84 e7 01 00 00    	je     11373 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
	  const size_type __size = size();
   1118c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11190:	48 89 c7             	mov    %rax,%rdi
   11193:	e8 b4 ff ff ff       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   11198:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   1119c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111a0:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   111a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111a8:	48 8b 40 08          	mov    0x8(%rax),%rax
   111ac:	48 29 c2             	sub    %rax,%rdx
   111af:	48 89 d0             	mov    %rdx,%rax
   111b2:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   111b6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
	  if (__size > max_size() || __navail > max_size() - __size)
   111ba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111be:	48 89 c7             	mov    %rax,%rdi
   111c1:	e8 90 24 00 00       	call   13656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   111c6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   111ca:	72 16                	jb     111e2 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x72>
   111cc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111d0:	48 89 c7             	mov    %rax,%rdi
   111d3:	e8 7e 24 00 00       	call   13656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   111d8:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   111dc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   111e0:	73 07                	jae    111e9 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x79>
   111e2:	b8 01 00 00 00       	mov    $0x1,%eax
   111e7:	eb 05                	jmp    111ee <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x7e>
   111e9:	b8 00 00 00 00       	mov    $0x0,%eax
   111ee:	84 c0                	test   %al,%al
	  if (__navail >= __n)
   111f0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   111f4:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   111f8:	72 33                	jb     1122d <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0xbd>
						 __n, _M_get_Tp_allocator());
   111fa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   111fe:	48 89 c7             	mov    %rax,%rdi
   11201:	e8 16 d7 ff ff       	call   e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11206:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   11209:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1120d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11211:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11215:	48 89 ce             	mov    %rcx,%rsi
   11218:	48 89 c7             	mov    %rax,%rdi
   1121b:	e8 58 24 00 00       	call   13678 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   11220:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11224:	48 89 42 08          	mov    %rax,0x8(%rdx)
    }
   11228:	e9 46 01 00 00       	jmp    11373 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   1122d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11231:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11235:	48 8d 15 fd a5 00 00 	lea    0xa5fd(%rip),%rdx        # 1b839 <_ZN6__pstl9execution2v1L5unseqE+0x56e>
   1123c:	48 89 ce             	mov    %rcx,%rsi
   1123f:	48 89 c7             	mov    %rax,%rdi
   11242:	e8 5b 24 00 00       	call   136a2 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>
   11247:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   1124b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1124f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11253:	48 89 d6             	mov    %rdx,%rsi
   11256:	48 89 c7             	mov    %rax,%rdi
   11259:	e8 0c 25 00 00       	call   1376a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>
   1125e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   11262:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11266:	48 89 c7             	mov    %rax,%rdi
   11269:	e8 ae d6 ff ff       	call   e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1126e:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   11271:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11275:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1127c:	00 
   1127d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11281:	48 01 c1             	add    %rax,%rcx
   11284:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11288:	48 89 c6             	mov    %rax,%rsi
   1128b:	48 89 cf             	mov    %rcx,%rdi
   1128e:	e8 e5 23 00 00       	call   13678 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   11293:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11297:	48 89 c7             	mov    %rax,%rdi
   1129a:	e8 7d d6 ff ff       	call   e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1129f:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   112a2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   112a6:	48 8b 70 08          	mov    0x8(%rax),%rsi
   112aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   112ae:	48 8b 00             	mov    (%rax),%rax
   112b1:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   112b5:	48 89 c7             	mov    %rax,%rdi
   112b8:	e8 e0 24 00 00       	call   1379d <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   112bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   112c1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   112c5:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   112c9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   112cd:	48 8b 12             	mov    (%rdx),%rdx
   112d0:	48 29 d1             	sub    %rdx,%rcx
   112d3:	48 c1 f9 03          	sar    $0x3,%rcx
   112d7:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   112da:	48 89 d6             	mov    %rdx,%rsi
   112dd:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   112e1:	48 8b 0a             	mov    (%rdx),%rcx
   112e4:	48 89 f2             	mov    %rsi,%rdx
   112e7:	48 89 ce             	mov    %rcx,%rsi
   112ea:	48 89 c7             	mov    %rax,%rdi
   112ed:	e8 f4 d5 ff ff       	call   e8e6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   112f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   112f6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   112fa:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   112fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11301:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11305:	48 01 d0             	add    %rdx,%rax
   11308:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1130f:	00 
   11310:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11314:	48 01 c2             	add    %rax,%rdx
   11317:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1131b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   1131f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11323:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1132a:	00 
   1132b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1132f:	48 01 c2             	add    %rax,%rdx
   11332:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11336:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1133a:	eb 37                	jmp    11373 <_ZNSt6vectorIP9VkFence_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   1133c:	48 89 c7             	mov    %rax,%rdi
   1133f:	e8 ec 2d ff ff       	call   4130 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   11344:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11348:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1134c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   11350:	48 89 ce             	mov    %rcx,%rsi
   11353:	48 89 c7             	mov    %rax,%rdi
   11356:	e8 8b d5 ff ff       	call   e8e6 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   1135b:	e8 c0 33 ff ff       	call   4720 <__cxa_rethrow@plt>
		  __catch(...)
   11360:	48 89 c3             	mov    %rax,%rbx
   11363:	e8 88 34 ff ff       	call   47f0 <__cxa_end_catch@plt>
   11368:	48 89 d8             	mov    %rbx,%rax
   1136b:	48 89 c7             	mov    %rax,%rdi
   1136e:	e8 fd 34 ff ff       	call   4870 <_Unwind_Resume@plt>
    }
   11373:	90                   	nop
   11374:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11378:	c9                   	leave
   11379:	c3                   	ret

000000000001137a <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   1137a:	55                   	push   %rbp
   1137b:	48 89 e5             	mov    %rsp,%rbp
   1137e:	48 83 ec 20          	sub    $0x20,%rsp
   11382:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11386:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   1138a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1138e:	48 8b 40 08          	mov    0x8(%rax),%rax
   11392:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   11396:	48 c1 f8 03          	sar    $0x3,%rax
   1139a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1139e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   113a3:	74 32                	je     113d7 <_ZNSt6vectorIP9VkFence_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   113a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113a9:	48 89 c7             	mov    %rax,%rdi
   113ac:	e8 6b d5 ff ff       	call   e91c <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   113b1:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   113b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113b8:	48 8b 48 08          	mov    0x8(%rax),%rcx
   113bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   113c0:	48 89 ce             	mov    %rcx,%rsi
   113c3:	48 89 c7             	mov    %rax,%rdi
   113c6:	e8 5f d5 ff ff       	call   e92a <_ZSt8_DestroyIPP9VkFence_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   113cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113cf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   113d3:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   113d7:	90                   	nop
   113d8:	c9                   	leave
   113d9:	c3                   	ret

00000000000113da <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	typedef _Clock						clock;
	typedef _Dur						duration;
	typedef typename duration::rep				rep;
	typedef typename duration::period			period;

	constexpr time_point() : __d(duration::zero())
   113da:	55                   	push   %rbp
   113db:	48 89 e5             	mov    %rsp,%rbp
   113de:	53                   	push   %rbx
   113df:	48 83 ec 18          	sub    $0x18,%rsp
   113e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   113e7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   113eb:	e8 a5 a8 ff ff       	call   bc95 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   113f0:	48 89 03             	mov    %rax,(%rbx)
	{ }
   113f3:	90                   	nop
   113f4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   113f8:	c9                   	leave
   113f9:	c3                   	ret

00000000000113fa <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   113fa:	55                   	push   %rbp
   113fb:	48 89 e5             	mov    %rsp,%rbp
   113fe:	48 83 ec 20          	sub    $0x20,%rsp
   11402:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11406:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   1140a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1140e:	48 89 c7             	mov    %rax,%rdi
   11411:	e8 ba 23 00 00       	call   137d0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11416:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1141a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1141e:	48 89 c7             	mov    %rax,%rdi
   11421:	e8 aa 23 00 00       	call   137d0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11426:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1142a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1142e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11432:	48 89 d6             	mov    %rdx,%rsi
   11435:	48 89 c7             	mov    %rax,%rdi
   11438:	e8 a4 23 00 00       	call   137e1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   1143d:	c9                   	leave
   1143e:	c3                   	ret

000000000001143f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   1143f:	55                   	push   %rbp
   11440:	48 89 e5             	mov    %rsp,%rbp
   11443:	48 83 ec 10          	sub    $0x10,%rsp
   11447:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   1144b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1144f:	48 89 c7             	mov    %rax,%rdi
   11452:	e8 f3 23 00 00       	call   1384a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11457:	c9                   	leave
   11458:	c3                   	ret
   11459:	90                   	nop

000000000001145a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   1145a:	55                   	push   %rbp
   1145b:	48 89 e5             	mov    %rsp,%rbp
   1145e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   11462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11466:	48 8b 00             	mov    (%rax),%rax
   11469:	5d                   	pop    %rbp
   1146a:	c3                   	ret

000000000001146b <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
   1146b:	55                   	push   %rbp
   1146c:	48 89 e5             	mov    %rsp,%rbp
   1146f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   11473:	90                   	nop
   11474:	5d                   	pop    %rbp
   11475:	c3                   	ret

0000000000011476 <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
    distance(_InputIterator __first, _InputIterator __last)
   11476:	55                   	push   %rbp
   11477:	48 89 e5             	mov    %rsp,%rbp
   1147a:	48 83 ec 10          	sub    $0x10,%rsp
   1147e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   11486:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1148a:	48 89 c7             	mov    %rax,%rdi
   1148d:	e8 11 24 00 00       	call   138a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
   11492:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11496:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1149a:	48 89 d6             	mov    %rdx,%rsi
   1149d:	48 89 c7             	mov    %rax,%rdi
   114a0:	e8 09 24 00 00       	call   138ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
   114a5:	c9                   	leave
   114a6:	c3                   	ret
   114a7:	90                   	nop

00000000000114a8 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   114a8:	55                   	push   %rbp
   114a9:	48 89 e5             	mov    %rsp,%rbp
   114ac:	48 83 ec 10          	sub    $0x10,%rsp
   114b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   114b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c0:	48 89 d6             	mov    %rdx,%rsi
   114c3:	48 89 c7             	mov    %rax,%rdi
   114c6:	e8 e3 d7 ff ff       	call   ecae <_ZNSaIPKcEC1ERKS1_>
   114cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114cf:	48 89 c7             	mov    %rax,%rdi
   114d2:	e8 19 24 00 00       	call   138f0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   114d7:	90                   	nop
   114d8:	c9                   	leave
   114d9:	c3                   	ret

00000000000114da <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   114da:	55                   	push   %rbp
   114db:	48 89 e5             	mov    %rsp,%rbp
   114de:	53                   	push   %rbx
   114df:	48 83 ec 28          	sub    $0x28,%rsp
   114e3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   114e7:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   114eb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   114ef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   114f3:	48 89 d6             	mov    %rdx,%rsi
   114f6:	48 89 c7             	mov    %rax,%rdi
   114f9:	e8 b0 d7 ff ff       	call   ecae <_ZNSaIPKcEC1ERKS1_>
   114fe:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11502:	48 89 c7             	mov    %rax,%rdi
   11505:	e8 14 24 00 00       	call   1391e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   1150a:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   1150e:	0f 92 c3             	setb   %bl
   11511:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11515:	48 89 c7             	mov    %rax,%rdi
   11518:	e8 9b ad ff ff       	call   c2b8 <_ZNSaIPKcED1Ev>
   1151d:	84 db                	test   %bl,%bl
   1151f:	74 0f                	je     11530 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   11521:	48 8d 05 e0 a2 00 00 	lea    0xa2e0(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
   11528:	48 89 c7             	mov    %rax,%rdi
   1152b:	e8 80 2c ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   11530:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   11534:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11538:	c9                   	leave
   11539:	c3                   	ret

000000000001153a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1153a:	55                   	push   %rbp
   1153b:	48 89 e5             	mov    %rsp,%rbp
   1153e:	48 83 ec 10          	sub    $0x10,%rsp
   11542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11546:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1154a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1154f:	74 15                	je     11566 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
   11551:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11555:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11559:	48 89 d6             	mov    %rdx,%rsi
   1155c:	48 89 c7             	mov    %rax,%rdi
   1155f:	e8 fc 23 00 00       	call   13960 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
   11564:	eb 05                	jmp    1156b <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
   11566:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1156b:	c9                   	leave
   1156c:	c3                   	ret

000000000001156d <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1156d:	55                   	push   %rbp
   1156e:	48 89 e5             	mov    %rsp,%rbp
   11571:	48 83 ec 10          	sub    $0x10,%rsp
   11575:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11579:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1157d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11581:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11585:	48 89 d6             	mov    %rdx,%rsi
   11588:	48 89 c7             	mov    %rax,%rdi
   1158b:	e8 fa 23 00 00       	call   1398a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   11590:	90                   	nop
   11591:	c9                   	leave
   11592:	c3                   	ret

0000000000011593 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11593:	55                   	push   %rbp
   11594:	48 89 e5             	mov    %rsp,%rbp
   11597:	48 83 ec 20          	sub    $0x20,%rsp
   1159b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1159f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   115a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   115ab:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   115af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115b3:	48 89 ce             	mov    %rcx,%rsi
   115b6:	48 89 c7             	mov    %rax,%rdi
   115b9:	e8 dc 23 00 00       	call   1399a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
   115be:	90                   	nop
   115bf:	c9                   	leave
   115c0:	c3                   	ret

00000000000115c1 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   115c1:	55                   	push   %rbp
   115c2:	48 89 e5             	mov    %rsp,%rbp
   115c5:	48 83 ec 10          	sub    $0x10,%rsp
   115c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   115d1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   115d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115d9:	48 89 d6             	mov    %rdx,%rsi
   115dc:	48 89 c7             	mov    %rax,%rdi
   115df:	e8 e7 23 00 00       	call   139cb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
   115e4:	90                   	nop
   115e5:	c9                   	leave
   115e6:	c3                   	ret

00000000000115e7 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   115e7:	55                   	push   %rbp
   115e8:	48 89 e5             	mov    %rsp,%rbp
   115eb:	48 83 ec 20          	sub    $0x20,%rsp
   115ef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115f3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115f7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   115fb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   115ff:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11607:	48 89 ce             	mov    %rcx,%rsi
   1160a:	48 89 c7             	mov    %rax,%rdi
   1160d:	e8 c8 23 00 00       	call   139da <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   11612:	90                   	nop
   11613:	c9                   	leave
   11614:	c3                   	ret

0000000000011615 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11615:	55                   	push   %rbp
   11616:	48 89 e5             	mov    %rsp,%rbp
   11619:	48 83 ec 10          	sub    $0x10,%rsp
   1161d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11621:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11625:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1162d:	48 89 d6             	mov    %rdx,%rsi
   11630:	48 89 c7             	mov    %rax,%rdi
   11633:	e8 d3 23 00 00       	call   13a0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   11638:	90                   	nop
   11639:	c9                   	leave
   1163a:	c3                   	ret

000000000001163b <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1163b:	55                   	push   %rbp
   1163c:	48 89 e5             	mov    %rsp,%rbp
   1163f:	48 83 ec 20          	sub    $0x20,%rsp
   11643:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11647:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1164b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1164f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11653:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1165b:	48 89 ce             	mov    %rcx,%rsi
   1165e:	48 89 c7             	mov    %rax,%rdi
   11661:	e8 b4 23 00 00       	call   13a1a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>
   11666:	90                   	nop
   11667:	c9                   	leave
   11668:	c3                   	ret

0000000000011669 <_ZSt8_DestroyIPP15VkFramebuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11669:	55                   	push   %rbp
   1166a:	48 89 e5             	mov    %rsp,%rbp
   1166d:	48 83 ec 10          	sub    $0x10,%rsp
   11671:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11675:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11679:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1167d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11681:	48 89 d6             	mov    %rdx,%rsi
   11684:	48 89 c7             	mov    %rax,%rdi
   11687:	e8 bf 23 00 00       	call   13a4b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>
    }
   1168c:	90                   	nop
   1168d:	c9                   	leave
   1168e:	c3                   	ret

000000000001168f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1168f:	55                   	push   %rbp
   11690:	48 89 e5             	mov    %rsp,%rbp
   11693:	48 83 ec 20          	sub    $0x20,%rsp
   11697:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1169b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1169f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   116a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   116a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   116ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116af:	48 89 ce             	mov    %rcx,%rsi
   116b2:	48 89 c7             	mov    %rax,%rdi
   116b5:	e8 a0 23 00 00       	call   13a5a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
   116ba:	90                   	nop
   116bb:	c9                   	leave
   116bc:	c3                   	ret

00000000000116bd <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   116bd:	55                   	push   %rbp
   116be:	48 89 e5             	mov    %rsp,%rbp
   116c1:	48 83 ec 10          	sub    $0x10,%rsp
   116c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   116cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   116d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   116d5:	48 89 d6             	mov    %rdx,%rsi
   116d8:	48 89 c7             	mov    %rax,%rdi
   116db:	e8 ab 23 00 00       	call   13a8b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
   116e0:	90                   	nop
   116e1:	c9                   	leave
   116e2:	c3                   	ret

00000000000116e3 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   116e3:	55                   	push   %rbp
   116e4:	48 89 e5             	mov    %rsp,%rbp
   116e7:	48 83 ec 20          	sub    $0x20,%rsp
   116eb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   116ef:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   116f3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   116f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   116fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   116ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11703:	48 89 ce             	mov    %rcx,%rsi
   11706:	48 89 c7             	mov    %rax,%rdi
   11709:	e8 8c 23 00 00       	call   13a9a <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>
   1170e:	90                   	nop
   1170f:	c9                   	leave
   11710:	c3                   	ret

0000000000011711 <_ZSt8_DestroyIPP13VkSemaphore_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11711:	55                   	push   %rbp
   11712:	48 89 e5             	mov    %rsp,%rbp
   11715:	48 83 ec 10          	sub    $0x10,%rsp
   11719:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1171d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11721:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11725:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11729:	48 89 d6             	mov    %rdx,%rsi
   1172c:	48 89 c7             	mov    %rax,%rdi
   1172f:	e8 97 23 00 00       	call   13acb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>
    }
   11734:	90                   	nop
   11735:	c9                   	leave
   11736:	c3                   	ret

0000000000011737 <_ZNSt16allocator_traitsISaIP9VkFence_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11737:	55                   	push   %rbp
   11738:	48 89 e5             	mov    %rsp,%rbp
   1173b:	48 83 ec 20          	sub    $0x20,%rsp
   1173f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11743:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11747:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1174b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1174f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11757:	48 89 ce             	mov    %rcx,%rsi
   1175a:	48 89 c7             	mov    %rax,%rdi
   1175d:	e8 78 23 00 00       	call   13ada <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>
   11762:	90                   	nop
   11763:	c9                   	leave
   11764:	c3                   	ret

0000000000011765 <_ZSt8_DestroyIPP9VkFence_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11765:	55                   	push   %rbp
   11766:	48 89 e5             	mov    %rsp,%rbp
   11769:	48 83 ec 10          	sub    $0x10,%rsp
   1176d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11771:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11775:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1177d:	48 89 d6             	mov    %rdx,%rsi
   11780:	48 89 c7             	mov    %rax,%rdi
   11783:	e8 83 23 00 00       	call   13b0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>
    }
   11788:	90                   	nop
   11789:	c9                   	leave
   1178a:	c3                   	ret

000000000001178b <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1178b:	55                   	push   %rbp
   1178c:	48 89 e5             	mov    %rsp,%rbp
   1178f:	48 83 ec 20          	sub    $0x20,%rsp
   11793:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   11797:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1179e:	07 7e 00 
   117a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   117a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   117a9:	48 89 c7             	mov    %rax,%rdi
   117ac:	e8 69 23 00 00       	call   13b1a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
   117b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   117b5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   117b9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   117bd:	48 89 d6             	mov    %rdx,%rsi
   117c0:	48 89 c7             	mov    %rax,%rdi
   117c3:	e8 b0 49 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   117c8:	48 8b 00             	mov    (%rax),%rax
      }
   117cb:	c9                   	leave
   117cc:	c3                   	ret
   117cd:	90                   	nop

00000000000117ce <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   117ce:	55                   	push   %rbp
   117cf:	48 89 e5             	mov    %rsp,%rbp
   117d2:	48 83 ec 10          	sub    $0x10,%rsp
   117d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117da:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   117de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   117e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117e6:	48 89 d6             	mov    %rdx,%rsi
   117e9:	48 89 c7             	mov    %rax,%rdi
   117ec:	e8 c3 d2 ff ff       	call   eab4 <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
   117f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f5:	48 89 c7             	mov    %rax,%rdi
   117f8:	e8 37 23 00 00       	call   13b34 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   117fd:	90                   	nop
   117fe:	c9                   	leave
   117ff:	c3                   	ret

0000000000011800 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   11800:	55                   	push   %rbp
   11801:	48 89 e5             	mov    %rsp,%rbp
   11804:	48 83 ec 10          	sub    $0x10,%rsp
   11808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1180c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   11810:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11818:	48 89 d6             	mov    %rdx,%rsi
   1181b:	48 89 c7             	mov    %rax,%rdi
   1181e:	e8 3f 23 00 00       	call   13b62 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
   11823:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11827:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1182a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1182e:	48 8b 10             	mov    (%rax),%rdx
   11831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11835:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1183d:	48 8b 08             	mov    (%rax),%rcx
   11840:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11844:	48 89 d0             	mov    %rdx,%rax
   11847:	48 c1 e0 06          	shl    $0x6,%rax
   1184b:	48 01 d0             	add    %rdx,%rax
   1184e:	48 c1 e0 02          	shl    $0x2,%rax
   11852:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   11856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1185a:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1185e:	90                   	nop
   1185f:	c9                   	leave
   11860:	c3                   	ret

0000000000011861 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11861:	55                   	push   %rbp
   11862:	48 89 e5             	mov    %rsp,%rbp
   11865:	48 83 ec 20          	sub    $0x20,%rsp
   11869:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1186d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11871:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11875:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1187d:	48 89 d6             	mov    %rdx,%rsi
   11880:	48 89 c7             	mov    %rax,%rdi
   11883:	e8 0d 23 00 00       	call   13b95 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
   11888:	c9                   	leave
   11889:	c3                   	ret

000000000001188a <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1188a:	55                   	push   %rbp
   1188b:	48 89 e5             	mov    %rsp,%rbp
   1188e:	48 83 ec 10          	sub    $0x10,%rsp
   11892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11896:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1189a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1189e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118a2:	48 89 d6             	mov    %rdx,%rsi
   118a5:	48 89 c7             	mov    %rax,%rdi
   118a8:	e8 11 23 00 00       	call   13bbe <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
   118ad:	90                   	nop
   118ae:	c9                   	leave
   118af:	c3                   	ret

00000000000118b0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   118b0:	55                   	push   %rbp
   118b1:	48 89 e5             	mov    %rsp,%rbp
   118b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   118bc:	90                   	nop
   118bd:	5d                   	pop    %rbp
   118be:	c3                   	ret

00000000000118bf <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   118bf:	55                   	push   %rbp
   118c0:	48 89 e5             	mov    %rsp,%rbp
   118c3:	48 83 ec 20          	sub    $0x20,%rsp
   118c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   118cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   118d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   118d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   118db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118df:	48 89 ce             	mov    %rcx,%rsi
   118e2:	48 89 c7             	mov    %rax,%rdi
   118e5:	e8 e4 22 00 00       	call   13bce <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
   118ea:	90                   	nop
   118eb:	c9                   	leave
   118ec:	c3                   	ret

00000000000118ed <_ZSt10__distanceIPPKcENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   118ed:	55                   	push   %rbp
   118ee:	48 89 e5             	mov    %rsp,%rbp
   118f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   118f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   118fd:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   11901:	48 c1 f8 03          	sar    $0x3,%rax
    }
   11905:	5d                   	pop    %rbp
   11906:	c3                   	ret

0000000000011907 <_ZSt22__uninitialized_copy_aIPPKcS2_S1_ET0_T_S4_S3_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   11907:	55                   	push   %rbp
   11908:	48 89 e5             	mov    %rsp,%rbp
   1190b:	48 83 ec 20          	sub    $0x20,%rsp
   1190f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11913:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11917:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1191b:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1191f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11923:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1192b:	48 89 ce             	mov    %rcx,%rsi
   1192e:	48 89 c7             	mov    %rax,%rdi
   11931:	e8 d2 22 00 00       	call   13c08 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>
    }
   11936:	c9                   	leave
   11937:	c3                   	ret

0000000000011938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11938:	55                   	push   %rbp
   11939:	48 89 e5             	mov    %rsp,%rbp
   1193c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11940:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11944:	5d                   	pop    %rbp
   11945:	c3                   	ret

0000000000011946 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   11946:	55                   	push   %rbp
   11947:	48 89 e5             	mov    %rsp,%rbp
   1194a:	48 83 ec 20          	sub    $0x20,%rsp
   1194e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11952:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11956:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   1195a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1195e:	48 89 c7             	mov    %rax,%rdi
   11961:	e8 d2 ff ff ff       	call   11938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   11966:	48 89 c2             	mov    %rax,%rdx
   11969:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1196d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11971:	48 89 ce             	mov    %rcx,%rsi
   11974:	48 89 c7             	mov    %rax,%rdi
   11977:	e8 c2 22 00 00       	call   13c3e <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
   1197c:	90                   	nop
   1197d:	c9                   	leave
   1197e:	c3                   	ret
   1197f:	90                   	nop

0000000000011980 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   11980:	55                   	push   %rbp
   11981:	48 89 e5             	mov    %rsp,%rbp
   11984:	53                   	push   %rbx
   11985:	48 83 ec 68          	sub    $0x68,%rsp
   11989:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1198d:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   11991:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11995:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11999:	48 8d 15 b3 9e 00 00 	lea    0x9eb3(%rip),%rdx        # 1b853 <_ZN6__pstl9execution2v1L5unseqE+0x588>
   119a0:	be 01 00 00 00       	mov    $0x1,%esi
   119a5:	48 89 c7             	mov    %rax,%rdi
   119a8:	e8 d3 22 00 00       	call   13c80 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   119ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   119b1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   119b5:	48 8b 00             	mov    (%rax),%rax
   119b8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   119bc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   119c0:	48 8b 40 08          	mov    0x8(%rax),%rax
   119c4:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   119c8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   119cc:	48 89 c7             	mov    %rax,%rdi
   119cf:	e8 90 b3 ff ff       	call   cd64 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   119d4:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   119d8:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   119dc:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   119e0:	48 89 d6             	mov    %rdx,%rsi
   119e3:	48 89 c7             	mov    %rax,%rdi
   119e6:	e8 5d 23 00 00       	call   13d48 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   119eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   119ef:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   119f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   119f7:	48 89 d6             	mov    %rdx,%rsi
   119fa:	48 89 c7             	mov    %rax,%rdi
   119fd:	e8 38 fb ff ff       	call   1153a <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11a02:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   11a06:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11a0a:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   11a0e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11a12:	48 89 c7             	mov    %rax,%rdi
   11a15:	e8 1e ff ff ff       	call   11938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   11a1a:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   11a1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11a21:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11a28:	00 
	  _Alloc_traits::construct(this->_M_impl,
   11a29:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11a2d:	48 01 c1             	add    %rax,%rcx
   11a30:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11a34:	48 89 ce             	mov    %rcx,%rsi
   11a37:	48 89 c7             	mov    %rax,%rdi
   11a3a:	e8 07 ff ff ff       	call   11946 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   11a3f:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11a46:	00 
					 __new_start, _M_get_Tp_allocator());
   11a47:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11a4b:	48 89 c7             	mov    %rax,%rdi
   11a4e:	e8 ed cb ff ff       	call   e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11a53:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   11a56:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11a5a:	48 89 c7             	mov    %rax,%rdi
   11a5d:	e8 30 d5 ff ff       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11a62:	48 8b 30             	mov    (%rax),%rsi
   11a65:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11a69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a6d:	48 89 d9             	mov    %rbx,%rcx
   11a70:	48 89 c7             	mov    %rax,%rdi
   11a73:	e8 12 23 00 00       	call   13d8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11a78:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   11a7c:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   11a81:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11a85:	48 89 c7             	mov    %rax,%rdi
   11a88:	e8 b3 cb ff ff       	call   e640 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11a8d:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   11a90:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11a94:	48 89 c7             	mov    %rax,%rdi
   11a97:	e8 f6 d4 ff ff       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11a9c:	48 8b 00             	mov    (%rax),%rax
   11a9f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11aa3:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11aa7:	48 89 d9             	mov    %rbx,%rcx
   11aaa:	48 89 c7             	mov    %rax,%rdi
   11aad:	e8 d8 22 00 00       	call   13d8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11ab2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   11ab6:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   11aba:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11abe:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   11ac2:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   11ac6:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   11aca:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11ace:	48 89 ce             	mov    %rcx,%rsi
   11ad1:	48 89 c7             	mov    %rax,%rdi
   11ad4:	e8 fb d1 ff ff       	call   ecd4 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   11ad9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11add:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11ae1:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   11ae4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11ae8:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11aec:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   11af0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11af4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11afb:	00 
   11afc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11b00:	48 01 c2             	add    %rax,%rdx
   11b03:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11b07:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   11b0b:	90                   	nop
   11b0c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11b10:	c9                   	leave
   11b11:	c3                   	ret

0000000000011b12 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   11b12:	55                   	push   %rbp
   11b13:	48 89 e5             	mov    %rsp,%rbp
   11b16:	48 83 ec 20          	sub    $0x20,%rsp
   11b1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   11b1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11b22:	48 89 c7             	mov    %rax,%rdi
   11b25:	e8 60 b2 ff ff       	call   cd8a <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11b2a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11b2e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11b32:	be 01 00 00 00       	mov    $0x1,%esi
   11b37:	48 89 c7             	mov    %rax,%rdi
   11b3a:	e8 7d 22 00 00       	call   13dbc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   11b3f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11b43:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11b47:	48 89 c7             	mov    %rax,%rdi
   11b4a:	e8 bf b2 ff ff       	call   ce0e <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   11b4f:	c9                   	leave
   11b50:	c3                   	ret
   11b51:	90                   	nop

0000000000011b52 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
   11b52:	55                   	push   %rbp
   11b53:	48 89 e5             	mov    %rsp,%rbp
   11b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b5e:	90                   	nop
   11b5f:	5d                   	pop    %rbp
   11b60:	c3                   	ret

0000000000011b61 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   11b61:	55                   	push   %rbp
   11b62:	48 89 e5             	mov    %rsp,%rbp
   11b65:	48 83 ec 20          	sub    $0x20,%rsp
   11b69:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b6d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b71:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   11b75:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b79:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11b7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b81:	48 89 ce             	mov    %rcx,%rsi
   11b84:	48 89 c7             	mov    %rax,%rdi
   11b87:	e8 72 22 00 00       	call   13dfe <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
   11b8c:	90                   	nop
   11b8d:	c9                   	leave
   11b8e:	c3                   	ret

0000000000011b8f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   11b8f:	55                   	push   %rbp
   11b90:	48 89 e5             	mov    %rsp,%rbp
   11b93:	48 83 ec 20          	sub    $0x20,%rsp
   11b97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   11b9b:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   11ba2:	03 3f 00 
   11ba5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   11ba9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11bad:	48 89 c7             	mov    %rax,%rdi
   11bb0:	e8 7a 22 00 00       	call   13e2f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
   11bb5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   11bb9:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11bbd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11bc1:	48 89 d6             	mov    %rdx,%rsi
   11bc4:	48 89 c7             	mov    %rax,%rdi
   11bc7:	e8 ac 45 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   11bcc:	48 8b 00             	mov    (%rax),%rax
      }
   11bcf:	c9                   	leave
   11bd0:	c3                   	ret
   11bd1:	90                   	nop

0000000000011bd2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   11bd2:	55                   	push   %rbp
   11bd3:	48 89 e5             	mov    %rsp,%rbp
   11bd6:	48 83 ec 10          	sub    $0x10,%rsp
   11bda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11bde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   11be2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11bea:	48 89 d6             	mov    %rdx,%rsi
   11bed:	48 89 c7             	mov    %rax,%rdi
   11bf0:	e8 55 22 00 00       	call   13e4a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
   11bf5:	90                   	nop
   11bf6:	c9                   	leave
   11bf7:	c3                   	ret

0000000000011bf8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   11bf8:	55                   	push   %rbp
   11bf9:	48 89 e5             	mov    %rsp,%rbp
   11bfc:	48 83 ec 10          	sub    $0x10,%rsp
   11c00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   11c08:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c10:	48 89 d6             	mov    %rdx,%rsi
   11c13:	48 89 c7             	mov    %rax,%rdi
   11c16:	e8 b7 ff ff ff       	call   11bd2 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
   11c1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c1f:	48 89 c7             	mov    %rax,%rdi
   11c22:	e8 33 22 00 00       	call   13e5a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   11c27:	90                   	nop
   11c28:	c9                   	leave
   11c29:	c3                   	ret

0000000000011c2a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   11c2a:	55                   	push   %rbp
   11c2b:	48 89 e5             	mov    %rsp,%rbp
   11c2e:	48 83 ec 10          	sub    $0x10,%rsp
   11c32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   11c3a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c42:	48 89 d6             	mov    %rdx,%rsi
   11c45:	48 89 c7             	mov    %rax,%rdi
   11c48:	e8 3b 22 00 00       	call   13e88 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
   11c4d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   11c51:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   11c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c58:	48 8b 10             	mov    (%rax),%rdx
   11c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c5f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c67:	48 8b 08             	mov    (%rax),%rcx
   11c6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11c6e:	48 89 d0             	mov    %rdx,%rax
   11c71:	48 c1 e0 06          	shl    $0x6,%rax
   11c75:	48 01 d0             	add    %rdx,%rax
   11c78:	48 c1 e0 03          	shl    $0x3,%rax
   11c7c:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   11c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c84:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   11c88:	90                   	nop
   11c89:	c9                   	leave
   11c8a:	c3                   	ret
   11c8b:	90                   	nop

0000000000011c8c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   11c8c:	55                   	push   %rbp
   11c8d:	48 89 e5             	mov    %rsp,%rbp
   11c90:	48 83 ec 20          	sub    $0x20,%rsp
   11c94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11c98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11c9c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   11ca0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   11ca5:	74 17                	je     11cbe <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   11ca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cab:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11caf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11cb3:	48 89 ce             	mov    %rcx,%rsi
   11cb6:	48 89 c7             	mov    %rax,%rdi
   11cb9:	e8 fd 21 00 00       	call   13ebb <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
   11cbe:	90                   	nop
   11cbf:	c9                   	leave
   11cc0:	c3                   	ret

0000000000011cc1 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   11cc1:	55                   	push   %rbp
   11cc2:	48 89 e5             	mov    %rsp,%rbp
   11cc5:	48 83 ec 20          	sub    $0x20,%rsp
   11cc9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ccd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11cd1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   11cd5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cdd:	48 89 d6             	mov    %rdx,%rsi
   11ce0:	48 89 c7             	mov    %rax,%rdi
   11ce3:	e8 01 22 00 00       	call   13ee9 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
   11ce8:	c9                   	leave
   11ce9:	c3                   	ret

0000000000011cea <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   11cea:	55                   	push   %rbp
   11ceb:	48 89 e5             	mov    %rsp,%rbp
   11cee:	48 83 ec 10          	sub    $0x10,%rsp
   11cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   11cfa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11cfe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d02:	48 89 d6             	mov    %rdx,%rsi
   11d05:	48 89 c7             	mov    %rax,%rdi
   11d08:	e8 05 22 00 00       	call   13f12 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
   11d0d:	90                   	nop
   11d0e:	c9                   	leave
   11d0f:	c3                   	ret

0000000000011d10 <_ZNSaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11d10:	55                   	push   %rbp
   11d11:	48 89 e5             	mov    %rsp,%rbp
   11d14:	48 83 ec 10          	sub    $0x10,%rsp
   11d18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d20:	48 89 c7             	mov    %rax,%rdi
   11d23:	e8 fa 21 00 00       	call   13f22 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   11d28:	90                   	nop
   11d29:	c9                   	leave
   11d2a:	c3                   	ret
   11d2b:	90                   	nop

0000000000011d2c <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   11d2c:	55                   	push   %rbp
   11d2d:	48 89 e5             	mov    %rsp,%rbp
   11d30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   11d34:	90                   	nop
   11d35:	5d                   	pop    %rbp
   11d36:	c3                   	ret
   11d37:	90                   	nop

0000000000011d38 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   11d38:	55                   	push   %rbp
   11d39:	48 89 e5             	mov    %rsp,%rbp
   11d3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d40:	90                   	nop
   11d41:	5d                   	pop    %rbp
   11d42:	c3                   	ret
   11d43:	90                   	nop

0000000000011d44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11d44:	55                   	push   %rbp
   11d45:	48 89 e5             	mov    %rsp,%rbp
   11d48:	41 55                	push   %r13
   11d4a:	41 54                	push   %r12
   11d4c:	53                   	push   %rbx
   11d4d:	48 83 ec 78          	sub    $0x78,%rsp
   11d51:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
   11d58:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   11d5f:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   11d66:	48 89 c7             	mov    %rax,%rdi
   11d69:	e8 bf 21 00 00       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   11d6e:	48 89 c2             	mov    %rax,%rdx
   11d71:	48 8b 8d 78 ff ff ff 	mov    -0x88(%rbp),%rcx
   11d78:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11d7c:	48 89 ce             	mov    %rcx,%rsi
   11d7f:	48 89 c7             	mov    %rax,%rdi
   11d82:	e8 b5 21 00 00       	call   13f3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>
	auto __res = _M_get_insert_unique_pos(__z._M_key());
   11d87:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11d8b:	48 89 c7             	mov    %rax,%rdi
   11d8e:	e8 9d 23 00 00       	call   14130 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>
   11d93:	48 89 c2             	mov    %rax,%rdx
   11d96:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
   11d9d:	48 89 d6             	mov    %rdx,%rsi
   11da0:	48 89 c7             	mov    %rax,%rdi
   11da3:	e8 12 22 00 00       	call   13fba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>
   11da8:	48 89 45 80          	mov    %rax,-0x80(%rbp)
   11dac:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
	if (__res.second)
   11db0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11db4:	48 85 c0             	test   %rax,%rax
   11db7:	74 40                	je     11df9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xb5>
	  return {__z._M_insert(__res), true};
   11db9:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11dbd:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   11dc1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11dc5:	48 89 ce             	mov    %rcx,%rsi
   11dc8:	48 89 c7             	mov    %rax,%rdi
   11dcb:	e8 7e 23 00 00       	call   1414e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>
   11dd0:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
   11dd4:	c6 45 bf 01          	movb   $0x1,-0x41(%rbp)
   11dd8:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
   11ddc:	48 8d 4d b0          	lea    -0x50(%rbp),%rcx
   11de0:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11de4:	48 89 ce             	mov    %rcx,%rsi
   11de7:	48 89 c7             	mov    %rax,%rdi
   11dea:	e8 b5 23 00 00       	call   141a4 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
   11def:	4c 8b 65 a0          	mov    -0x60(%rbp),%r12
   11df3:	4c 8b 6d a8          	mov    -0x58(%rbp),%r13
   11df7:	eb 36                	jmp    11e2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0xeb>
	return {iterator(__res.first), false};
   11df9:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
   11dfd:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11e01:	48 89 d6             	mov    %rdx,%rsi
   11e04:	48 89 c7             	mov    %rax,%rdi
   11e07:	e8 dc 23 00 00       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   11e0c:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
   11e10:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   11e14:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx
   11e18:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   11e1c:	48 89 ce             	mov    %rcx,%rsi
   11e1f:	48 89 c7             	mov    %rax,%rdi
   11e22:	e8 7d 23 00 00       	call   141a4 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>
   11e27:	4c 8b 65 c0          	mov    -0x40(%rbp),%r12
   11e2b:	4c 8b 6d c8          	mov    -0x38(%rbp),%r13
      }
   11e2f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11e33:	48 89 c7             	mov    %rax,%rdi
   11e36:	e8 49 21 00 00       	call   13f84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
   11e3b:	4c 89 e0             	mov    %r12,%rax
   11e3e:	4c 89 ea             	mov    %r13,%rdx
   11e41:	eb 1a                	jmp    11e5d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_emplace_uniqueIJRKPKcEEESt4pairISt17_Rb_tree_iteratorIS5_EbEDpOT_+0x119>
   11e43:	48 89 c3             	mov    %rax,%rbx
   11e46:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   11e4a:	48 89 c7             	mov    %rax,%rdi
   11e4d:	e8 32 21 00 00       	call   13f84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>
   11e52:	48 89 d8             	mov    %rbx,%rax
   11e55:	48 89 c7             	mov    %rax,%rdi
   11e58:	e8 13 2a ff ff       	call   4870 <_Unwind_Resume@plt>
   11e5d:	48 83 c4 78          	add    $0x78,%rsp
   11e61:	5b                   	pop    %rbx
   11e62:	41 5c                	pop    %r12
   11e64:	41 5d                	pop    %r13
   11e66:	5d                   	pop    %rbp
   11e67:	c3                   	ret

0000000000011e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   11e68:	55                   	push   %rbp
   11e69:	48 89 e5             	mov    %rsp,%rbp
   11e6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   11e70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e74:	48 8b 40 18          	mov    0x18(%rax),%rax
   11e78:	5d                   	pop    %rbp
   11e79:	c3                   	ret

0000000000011e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   11e7a:	55                   	push   %rbp
   11e7b:	48 89 e5             	mov    %rsp,%rbp
   11e7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   11e82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e86:	48 8b 40 10          	mov    0x10(%rax),%rax
   11e8a:	5d                   	pop    %rbp
   11e8b:	c3                   	ret

0000000000011e8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   11e8c:	55                   	push   %rbp
   11e8d:	48 89 e5             	mov    %rsp,%rbp
   11e90:	48 83 ec 10          	sub    $0x10,%rsp
   11e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11e98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   11e9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11ea0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ea4:	48 89 d6             	mov    %rdx,%rsi
   11ea7:	48 89 c7             	mov    %rax,%rdi
   11eaa:	e8 53 23 00 00       	call   14202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>
	_M_put_node(__p);
   11eaf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11eb3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11eb7:	48 89 d6             	mov    %rdx,%rsi
   11eba:	48 89 c7             	mov    %rax,%rdi
   11ebd:	e8 7e 23 00 00       	call   14240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
      }
   11ec2:	90                   	nop
   11ec3:	c9                   	leave
   11ec4:	c3                   	ret
   11ec5:	90                   	nop

0000000000011ec6 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   11ec6:	55                   	push   %rbp
   11ec7:	48 89 e5             	mov    %rsp,%rbp
   11eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   11ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ed2:	48 8b 40 10          	mov    0x10(%rax),%rax
   11ed6:	5d                   	pop    %rbp
   11ed7:	c3                   	ret

0000000000011ed8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11ed8:	55                   	push   %rbp
   11ed9:	48 89 e5             	mov    %rsp,%rbp
   11edc:	53                   	push   %rbx
   11edd:	48 83 ec 78          	sub    $0x78,%rsp
   11ee1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   11ee5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   11ee9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11eed:	48 89 c7             	mov    %rax,%rdi
   11ef0:	e8 c1 d1 ff ff       	call   f0b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   11ef5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      _Base_ptr __y = _M_end();
   11ef9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11efd:	48 89 c7             	mov    %rax,%rdi
   11f00:	e8 71 23 00 00       	call   14276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   11f05:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   11f09:	e9 12 01 00 00       	jmp    12020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  if (_M_impl._M_key_compare(_S_key(__x), __k))
   11f0e:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   11f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f16:	48 89 c7             	mov    %rax,%rdi
   11f19:	e8 6a 23 00 00       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   11f1e:	48 89 c1             	mov    %rax,%rcx
   11f21:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11f25:	48 89 c2             	mov    %rax,%rdx
   11f28:	48 89 ce             	mov    %rcx,%rsi
   11f2b:	48 89 df             	mov    %rbx,%rdi
   11f2e:	e8 81 23 00 00       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   11f33:	84 c0                	test   %al,%al
   11f35:	74 15                	je     11f4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x74>
	    __x = _S_right(__x);
   11f37:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f3b:	48 89 c7             	mov    %rax,%rdi
   11f3e:	e8 25 ff ff ff       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   11f43:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11f47:	e9 d4 00 00 00       	jmp    12020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	  else if (_M_impl._M_key_compare(__k, _S_key(__x)))
   11f4c:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   11f50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f54:	48 89 c7             	mov    %rax,%rdi
   11f57:	e8 2c 23 00 00       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   11f5c:	48 89 c2             	mov    %rax,%rdx
   11f5f:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   11f63:	48 89 c6             	mov    %rax,%rsi
   11f66:	48 89 df             	mov    %rbx,%rdi
   11f69:	e8 46 23 00 00       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   11f6e:	84 c0                	test   %al,%al
   11f70:	74 1d                	je     11f8f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0xb7>
	    __y = __x, __x = _S_left(__x);
   11f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f76:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11f7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f7e:	48 89 c7             	mov    %rax,%rdi
   11f81:	e8 f4 fe ff ff       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   11f86:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   11f8a:	e9 91 00 00 00       	jmp    12020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x148>
	      _Link_type __xu(__x);
   11f8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f93:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      _Base_ptr __yu(__y);
   11f97:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11f9b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
	      __y = __x, __x = _S_left(__x);
   11f9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fa3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   11fa7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fab:	48 89 c7             	mov    %rax,%rdi
   11fae:	e8 c7 fe ff ff       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   11fb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	      __xu = _S_right(__xu);
   11fb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11fbb:	48 89 c7             	mov    %rax,%rdi
   11fbe:	e8 a5 fe ff ff       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   11fc3:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
				    _M_upper_bound(__xu, __yu, __k));
   11fc7:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11fcb:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11fcf:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11fd3:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11fd7:	48 89 c7             	mov    %rax,%rdi
   11fda:	e8 95 23 00 00       	call   14374 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
   11fdf:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
			  iterator>(_M_lower_bound(__x, __y, __k),
   11fe3:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
   11fe7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11feb:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   11fef:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   11ff3:	48 89 c7             	mov    %rax,%rdi
   11ff6:	e8 e3 22 00 00       	call   142de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>
   11ffb:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
	      return pair<iterator,
   11fff:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
   12003:	48 8d 4d a8          	lea    -0x58(%rbp),%rcx
   12007:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1200b:	48 89 ce             	mov    %rcx,%rsi
   1200e:	48 89 c7             	mov    %rax,%rdi
   12011:	e8 ee 23 00 00       	call   14404 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				    _M_upper_bound(__xu, __yu, __k));
   12016:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   1201a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1201e:	eb 50                	jmp    12070 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x198>
      while (__x != 0)
   12020:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
   12025:	0f 85 e3 fe ff ff    	jne    11f0e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11equal_rangeERKS5_+0x36>
				      iterator(__y));
   1202b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1202f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   12033:	48 89 d6             	mov    %rdx,%rsi
   12036:	48 89 c7             	mov    %rax,%rdi
   12039:	e8 aa 21 00 00       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      return pair<iterator, iterator>(iterator(__y),
   1203e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12042:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   12046:	48 89 d6             	mov    %rdx,%rsi
   12049:	48 89 c7             	mov    %rax,%rdi
   1204c:	e8 97 21 00 00       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   12051:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
   12055:	48 8d 4d c8          	lea    -0x38(%rbp),%rcx
   12059:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   1205d:	48 89 ce             	mov    %rcx,%rsi
   12060:	48 89 c7             	mov    %rax,%rdi
   12063:	e8 9c 23 00 00       	call   14404 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>
				      iterator(__y));
   12068:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1206c:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
    }
   12070:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12074:	c9                   	leave
   12075:	c3                   	ret

0000000000012076 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   12076:	55                   	push   %rbp
   12077:	48 89 e5             	mov    %rsp,%rbp
   1207a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1207e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12082:	48 8b 40 28          	mov    0x28(%rax),%rax
   12086:	5d                   	pop    %rbp
   12087:	c3                   	ret

0000000000012088 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   12088:	55                   	push   %rbp
   12089:	48 89 e5             	mov    %rsp,%rbp
   1208c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12090:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   12094:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12098:	48 8b 10             	mov    (%rax),%rdx
   1209b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1209f:	48 89 10             	mov    %rdx,(%rax)
   120a2:	90                   	nop
   120a3:	5d                   	pop    %rbp
   120a4:	c3                   	ret
   120a5:	90                   	nop

00000000000120a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   120a6:	55                   	push   %rbp
   120a7:	48 89 e5             	mov    %rsp,%rbp
   120aa:	48 83 ec 40          	sub    $0x40,%rsp
   120ae:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   120b2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   120b6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      if (__first == begin() && __last == end())
   120ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120be:	48 89 c7             	mov    %rax,%rdi
   120c1:	e8 82 23 00 00       	call   14448 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
   120c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   120ca:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   120ce:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   120d2:	48 89 d6             	mov    %rdx,%rsi
   120d5:	48 89 c7             	mov    %rax,%rdi
   120d8:	e8 ab ff ff ff       	call   12088 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
   120dd:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   120e1:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   120e5:	48 89 d6             	mov    %rdx,%rsi
   120e8:	48 89 c7             	mov    %rax,%rdi
   120eb:	e8 81 23 00 00       	call   14471 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   120f0:	84 c0                	test   %al,%al
   120f2:	74 41                	je     12135 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
   120f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   120f8:	48 89 c7             	mov    %rax,%rdi
   120fb:	e8 94 23 00 00       	call   14494 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>
   12100:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12104:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   12108:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1210c:	48 89 d6             	mov    %rdx,%rsi
   1210f:	48 89 c7             	mov    %rax,%rdi
   12112:	e8 71 ff ff ff       	call   12088 <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1ERKSt17_Rb_tree_iteratorIS5_E>
   12117:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1211b:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   1211f:	48 89 d6             	mov    %rdx,%rsi
   12122:	48 89 c7             	mov    %rax,%rdi
   12125:	e8 47 23 00 00       	call   14471 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   1212a:	84 c0                	test   %al,%al
   1212c:	74 07                	je     12135 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x8f>
   1212e:	b8 01 00 00 00       	mov    $0x1,%eax
   12133:	eb 05                	jmp    1213a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0x94>
   12135:	b8 00 00 00 00       	mov    $0x0,%eax
   1213a:	84 c0                	test   %al,%al
   1213c:	74 31                	je     1216f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xc9>
	clear();
   1213e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12142:	48 89 c7             	mov    %rax,%rdi
   12145:	e8 74 23 00 00       	call   144be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>
    }
   1214a:	eb 3a                	jmp    12186 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xe0>
	  _M_erase_aux(__first++);
   1214c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12150:	be 00 00 00 00       	mov    $0x0,%esi
   12155:	48 89 c7             	mov    %rax,%rdi
   12158:	e8 c1 23 00 00       	call   1451e <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>
   1215d:	48 89 c2             	mov    %rax,%rdx
   12160:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12164:	48 89 d6             	mov    %rdx,%rsi
   12167:	48 89 c7             	mov    %rax,%rdi
   1216a:	e8 e5 23 00 00       	call   14554 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>
	while (__first != __last)
   1216f:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   12173:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12177:	48 89 d6             	mov    %rdx,%rsi
   1217a:	48 89 c7             	mov    %rax,%rdi
   1217d:	e8 79 23 00 00       	call   144fb <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   12182:	84 c0                	test   %al,%al
   12184:	75 c6                	jne    1214c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_ESD_+0xa6>
    }
   12186:	90                   	nop
   12187:	c9                   	leave
   12188:	c3                   	ret
   12189:	90                   	nop

000000000001218a <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1218a:	55                   	push   %rbp
   1218b:	48 89 e5             	mov    %rsp,%rbp
   1218e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12192:	90                   	nop
   12193:	5d                   	pop    %rbp
   12194:	c3                   	ret

0000000000012195 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   12195:	55                   	push   %rbp
   12196:	48 89 e5             	mov    %rsp,%rbp
   12199:	48 83 ec 20          	sub    $0x20,%rsp
   1219d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121a1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   121a5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   121a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   121ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   121b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121b5:	48 89 ce             	mov    %rcx,%rsi
   121b8:	48 89 c7             	mov    %rax,%rdi
   121bb:	e8 ea 23 00 00       	call   145aa <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
   121c0:	90                   	nop
   121c1:	c9                   	leave
   121c2:	c3                   	ret

00000000000121c3 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   121c3:	55                   	push   %rbp
   121c4:	48 89 e5             	mov    %rsp,%rbp
   121c7:	48 83 ec 10          	sub    $0x10,%rsp
   121cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   121d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   121d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121db:	48 89 d6             	mov    %rdx,%rsi
   121de:	48 89 c7             	mov    %rax,%rdi
   121e1:	e8 f5 23 00 00       	call   145db <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
   121e6:	90                   	nop
   121e7:	c9                   	leave
   121e8:	c3                   	ret
   121e9:	90                   	nop

00000000000121ea <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
   121ea:	55                   	push   %rbp
   121eb:	48 89 e5             	mov    %rsp,%rbp
   121ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121f2:	90                   	nop
   121f3:	5d                   	pop    %rbp
   121f4:	c3                   	ret

00000000000121f5 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   121f5:	55                   	push   %rbp
   121f6:	48 89 e5             	mov    %rsp,%rbp
   121f9:	48 83 ec 20          	sub    $0x20,%rsp
   121fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12201:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12205:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   12209:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1220d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12211:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12215:	48 89 ce             	mov    %rcx,%rsi
   12218:	48 89 c7             	mov    %rax,%rdi
   1221b:	e8 ca 23 00 00       	call   145ea <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
   12220:	90                   	nop
   12221:	c9                   	leave
   12222:	c3                   	ret

0000000000012223 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   12223:	55                   	push   %rbp
   12224:	48 89 e5             	mov    %rsp,%rbp
   12227:	48 83 ec 10          	sub    $0x10,%rsp
   1222b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1222f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   12233:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1223b:	48 89 d6             	mov    %rdx,%rsi
   1223e:	48 89 c7             	mov    %rax,%rdi
   12241:	e8 d5 23 00 00       	call   1461b <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
   12246:	90                   	nop
   12247:	c9                   	leave
   12248:	c3                   	ret
   12249:	90                   	nop

000000000001224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1224a:	55                   	push   %rbp
   1224b:	48 89 e5             	mov    %rsp,%rbp
   1224e:	48 83 ec 10          	sub    $0x10,%rsp
   12252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1225a:	48 89 c7             	mov    %rax,%rdi
   1225d:	e8 0a 24 00 00       	call   1466c <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
   12262:	48 89 c7             	mov    %rax,%rdi
   12265:	e8 c0 23 00 00       	call   1462a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
   1226a:	c9                   	leave
   1226b:	c3                   	ret

000000000001226c <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1226c:	55                   	push   %rbp
   1226d:	48 89 e5             	mov    %rsp,%rbp
   12270:	48 83 ec 20          	sub    $0x20,%rsp
   12274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1227c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12280:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12284:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12288:	48 89 d6             	mov    %rdx,%rsi
   1228b:	48 89 c7             	mov    %rax,%rdi
   1228e:	e8 e7 23 00 00       	call   1467a <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
   12293:	c9                   	leave
   12294:	c3                   	ret
   12295:	90                   	nop

0000000000012296 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12296:	55                   	push   %rbp
   12297:	48 89 e5             	mov    %rsp,%rbp
   1229a:	53                   	push   %rbx
   1229b:	48 83 ec 38          	sub    $0x38,%rsp
   1229f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   122a3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   122a7:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   122ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122af:	48 89 c7             	mov    %rax,%rdi
   122b2:	e8 93 ff ff ff       	call   1224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   122b7:	48 89 c3             	mov    %rax,%rbx
   122ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122be:	48 89 c7             	mov    %rax,%rdi
   122c1:	e8 3e d0 ff ff       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   122c6:	48 29 c3             	sub    %rax,%rbx
   122c9:	48 89 da             	mov    %rbx,%rdx
   122cc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   122d0:	48 39 c2             	cmp    %rax,%rdx
   122d3:	0f 92 c0             	setb   %al
   122d6:	84 c0                	test   %al,%al
   122d8:	74 0c                	je     122e6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   122da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   122de:	48 89 c7             	mov    %rax,%rdi
   122e1:	e8 ca 1e ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   122e6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122ea:	48 89 c7             	mov    %rax,%rdi
   122ed:	e8 12 d0 ff ff       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   122f2:	48 89 c3             	mov    %rax,%rbx
   122f5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   122f9:	48 89 c7             	mov    %rax,%rdi
   122fc:	e8 03 d0 ff ff       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   12301:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12305:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12309:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1230d:	48 89 d6             	mov    %rdx,%rsi
   12310:	48 89 c7             	mov    %rax,%rdi
   12313:	e8 ac 15 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   12318:	48 8b 00             	mov    (%rax),%rax
   1231b:	48 01 d8             	add    %rbx,%rax
   1231e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12322:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12326:	48 89 c7             	mov    %rax,%rdi
   12329:	e8 d6 cf ff ff       	call   f304 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4sizeEv>
   1232e:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12332:	72 12                	jb     12346 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
   12334:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12338:	48 89 c7             	mov    %rax,%rdi
   1233b:	e8 0a ff ff ff       	call   1224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   12340:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12344:	73 0e                	jae    12354 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
   12346:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1234a:	48 89 c7             	mov    %rax,%rdi
   1234d:	e8 f8 fe ff ff       	call   1224a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE8max_sizeEv>
   12352:	eb 04                	jmp    12358 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
   12354:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12358:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1235c:	c9                   	leave
   1235d:	c3                   	ret

000000000001235e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1235e:	55                   	push   %rbp
   1235f:	48 89 e5             	mov    %rsp,%rbp
   12362:	48 83 ec 10          	sub    $0x10,%rsp
   12366:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1236a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1236e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12373:	74 15                	je     1238a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
   12375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12379:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1237d:	48 89 d6             	mov    %rdx,%rsi
   12380:	48 89 c7             	mov    %rax,%rdi
   12383:	e8 1b 23 00 00       	call   146a3 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
   12388:	eb 05                	jmp    1238f <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
   1238a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1238f:	c9                   	leave
   12390:	c3                   	ret

0000000000012391 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12391:	55                   	push   %rbp
   12392:	48 89 e5             	mov    %rsp,%rbp
   12395:	48 83 ec 20          	sub    $0x20,%rsp
   12399:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1239d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   123a5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   123a9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   123ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   123b1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   123b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123b9:	48 89 c7             	mov    %rax,%rdi
   123bc:	e8 0c 23 00 00       	call   146cd <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   123c1:	c9                   	leave
   123c2:	c3                   	ret
   123c3:	90                   	nop

00000000000123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   123c4:	55                   	push   %rbp
   123c5:	48 89 e5             	mov    %rsp,%rbp
   123c8:	48 83 ec 10          	sub    $0x10,%rsp
   123cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   123d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123d4:	48 89 c7             	mov    %rax,%rdi
   123d7:	e8 96 23 00 00       	call   14772 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
   123dc:	48 89 c7             	mov    %rax,%rdi
   123df:	e8 4c 23 00 00       	call   14730 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
   123e4:	c9                   	leave
   123e5:	c3                   	ret

00000000000123e6 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   123e6:	55                   	push   %rbp
   123e7:	48 89 e5             	mov    %rsp,%rbp
   123ea:	48 83 ec 20          	sub    $0x20,%rsp
   123ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   123fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   123fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12402:	48 89 d6             	mov    %rdx,%rsi
   12405:	48 89 c7             	mov    %rax,%rdi
   12408:	e8 73 23 00 00       	call   14780 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
   1240d:	c9                   	leave
   1240e:	c3                   	ret
   1240f:	90                   	nop

0000000000012410 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12410:	55                   	push   %rbp
   12411:	48 89 e5             	mov    %rsp,%rbp
   12414:	53                   	push   %rbx
   12415:	48 83 ec 38          	sub    $0x38,%rsp
   12419:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1241d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12421:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12425:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12429:	48 89 c7             	mov    %rax,%rdi
   1242c:	e8 93 ff ff ff       	call   123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   12431:	48 89 c3             	mov    %rax,%rbx
   12434:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12438:	48 89 c7             	mov    %rax,%rdi
   1243b:	e8 64 d1 ff ff       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   12440:	48 29 c3             	sub    %rax,%rbx
   12443:	48 89 da             	mov    %rbx,%rdx
   12446:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1244a:	48 39 c2             	cmp    %rax,%rdx
   1244d:	0f 92 c0             	setb   %al
   12450:	84 c0                	test   %al,%al
   12452:	74 0c                	je     12460 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12454:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12458:	48 89 c7             	mov    %rax,%rdi
   1245b:	e8 50 1d ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12460:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12464:	48 89 c7             	mov    %rax,%rdi
   12467:	e8 38 d1 ff ff       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   1246c:	48 89 c3             	mov    %rax,%rbx
   1246f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12473:	48 89 c7             	mov    %rax,%rdi
   12476:	e8 29 d1 ff ff       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   1247b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1247f:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12483:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12487:	48 89 d6             	mov    %rdx,%rsi
   1248a:	48 89 c7             	mov    %rax,%rdi
   1248d:	e8 32 14 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   12492:	48 8b 00             	mov    (%rax),%rax
   12495:	48 01 d8             	add    %rbx,%rax
   12498:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1249c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124a0:	48 89 c7             	mov    %rax,%rdi
   124a3:	e8 fc d0 ff ff       	call   f5a4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE4sizeEv>
   124a8:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   124ac:	72 12                	jb     124c0 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xb0>
   124ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124b2:	48 89 c7             	mov    %rax,%rdi
   124b5:	e8 0a ff ff ff       	call   123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   124ba:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   124be:	73 0e                	jae    124ce <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xbe>
   124c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   124c4:	48 89 c7             	mov    %rax,%rdi
   124c7:	e8 f8 fe ff ff       	call   123c4 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE8max_sizeEv>
   124cc:	eb 04                	jmp    124d2 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE12_M_check_lenEmPKc+0xc2>
   124ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   124d2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124d6:	c9                   	leave
   124d7:	c3                   	ret

00000000000124d8 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   124d8:	55                   	push   %rbp
   124d9:	48 89 e5             	mov    %rsp,%rbp
   124dc:	48 83 ec 10          	sub    $0x10,%rsp
   124e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   124e8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   124ed:	74 15                	je     12504 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
   124ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124f3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   124f7:	48 89 d6             	mov    %rdx,%rsi
   124fa:	48 89 c7             	mov    %rax,%rdi
   124fd:	e8 a7 22 00 00       	call   147a9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
   12502:	eb 05                	jmp    12509 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
   12504:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12509:	c9                   	leave
   1250a:	c3                   	ret

000000000001250b <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1250b:	55                   	push   %rbp
   1250c:	48 89 e5             	mov    %rsp,%rbp
   1250f:	48 83 ec 20          	sub    $0x20,%rsp
   12513:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12517:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1251b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   1251f:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12523:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12527:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1252b:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   1252f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12533:	48 89 c7             	mov    %rax,%rdi
   12536:	e8 98 22 00 00       	call   147d3 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   1253b:	c9                   	leave
   1253c:	c3                   	ret

000000000001253d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1253d:	55                   	push   %rbp
   1253e:	48 89 e5             	mov    %rsp,%rbp
   12541:	48 83 ec 20          	sub    $0x20,%rsp
   12545:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   12549:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   12550:	55 55 05 
   12553:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   12557:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1255b:	48 89 c7             	mov    %rax,%rdi
   1255e:	e8 d3 22 00 00       	call   14836 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
   12563:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   12567:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1256b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1256f:	48 89 d6             	mov    %rdx,%rsi
   12572:	48 89 c7             	mov    %rax,%rdi
   12575:	e8 fe 3b ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1257a:	48 8b 00             	mov    (%rax),%rax
      }
   1257d:	c9                   	leave
   1257e:	c3                   	ret
   1257f:	90                   	nop

0000000000012580 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   12580:	55                   	push   %rbp
   12581:	48 89 e5             	mov    %rsp,%rbp
   12584:	48 83 ec 10          	sub    $0x10,%rsp
   12588:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1258c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   12590:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12594:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12598:	48 89 d6             	mov    %rdx,%rsi
   1259b:	48 89 c7             	mov    %rax,%rdi
   1259e:	e8 ad 22 00 00       	call   14850 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
   125a3:	90                   	nop
   125a4:	c9                   	leave
   125a5:	c3                   	ret

00000000000125a6 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   125a6:	55                   	push   %rbp
   125a7:	48 89 e5             	mov    %rsp,%rbp
   125aa:	48 83 ec 10          	sub    $0x10,%rsp
   125ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   125b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   125ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125be:	48 89 d6             	mov    %rdx,%rsi
   125c1:	48 89 c7             	mov    %rax,%rdi
   125c4:	e8 b7 ff ff ff       	call   12580 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
   125c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125cd:	48 89 c7             	mov    %rax,%rdi
   125d0:	e8 8b 22 00 00       	call   14860 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   125d5:	90                   	nop
   125d6:	c9                   	leave
   125d7:	c3                   	ret

00000000000125d8 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   125d8:	55                   	push   %rbp
   125d9:	48 89 e5             	mov    %rsp,%rbp
   125dc:	48 83 ec 10          	sub    $0x10,%rsp
   125e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   125e8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   125ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125f0:	48 89 d6             	mov    %rdx,%rsi
   125f3:	48 89 c7             	mov    %rax,%rdi
   125f6:	e8 93 22 00 00       	call   1488e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
   125fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   125ff:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   12602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12606:	48 8b 10             	mov    (%rax),%rdx
   12609:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1260d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12615:	48 8b 08             	mov    (%rax),%rcx
   12618:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1261c:	48 89 d0             	mov    %rdx,%rax
   1261f:	48 01 c0             	add    %rax,%rax
   12622:	48 01 d0             	add    %rdx,%rax
   12625:	48 c1 e0 03          	shl    $0x3,%rax
   12629:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   1262d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12631:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   12635:	90                   	nop
   12636:	c9                   	leave
   12637:	c3                   	ret

0000000000012638 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   12638:	55                   	push   %rbp
   12639:	48 89 e5             	mov    %rsp,%rbp
   1263c:	48 83 ec 20          	sub    $0x20,%rsp
   12640:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12644:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12648:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   1264c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12651:	74 17                	je     1266a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   12653:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12657:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1265b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1265f:	48 89 ce             	mov    %rcx,%rsi
   12662:	48 89 c7             	mov    %rax,%rdi
   12665:	e8 57 22 00 00       	call   148c1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
   1266a:	90                   	nop
   1266b:	c9                   	leave
   1266c:	c3                   	ret

000000000001266d <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1266d:	55                   	push   %rbp
   1266e:	48 89 e5             	mov    %rsp,%rbp
   12671:	48 83 ec 20          	sub    $0x20,%rsp
   12675:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12679:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1267d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12681:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12689:	48 89 d6             	mov    %rdx,%rsi
   1268c:	48 89 c7             	mov    %rax,%rdi
   1268f:	e8 5b 22 00 00       	call   148ef <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
   12694:	c9                   	leave
   12695:	c3                   	ret

0000000000012696 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   12696:	55                   	push   %rbp
   12697:	48 89 e5             	mov    %rsp,%rbp
   1269a:	48 83 ec 10          	sub    $0x10,%rsp
   1269e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   126a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   126aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126ae:	48 89 d6             	mov    %rdx,%rsi
   126b1:	48 89 c7             	mov    %rax,%rdi
   126b4:	e8 5f 22 00 00       	call   14918 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
   126b9:	90                   	nop
   126ba:	c9                   	leave
   126bb:	c3                   	ret

00000000000126bc <_ZNSt22_Optional_payload_baseIjE12_M_constructIJRiEEEvDpOT_>:
	_M_construct(_Args&&... __args)
   126bc:	55                   	push   %rbp
   126bd:	48 89 e5             	mov    %rsp,%rbp
   126c0:	53                   	push   %rbx
   126c1:	48 83 ec 18          	sub    $0x18,%rsp
   126c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   126c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   126cd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   126d1:	48 89 c7             	mov    %rax,%rdi
   126d4:	e8 e1 d3 ff ff       	call   faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
   126d9:	48 89 c3             	mov    %rax,%rbx
   126dc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126e0:	48 89 c7             	mov    %rax,%rdi
   126e3:	e8 3f 22 00 00       	call   14927 <_ZSt11__addressofIjEPT_RS0_>
   126e8:	48 89 de             	mov    %rbx,%rsi
   126eb:	48 89 c7             	mov    %rax,%rdi
   126ee:	e8 42 22 00 00       	call   14935 <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>
	  this->_M_engaged = true;
   126f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   126f7:	c6 40 04 01          	movb   $0x1,0x4(%rax)
	}
   126fb:	90                   	nop
   126fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12700:	c9                   	leave
   12701:	c3                   	ret

0000000000012702 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoEC1Ev>:
   12702:	55                   	push   %rbp
   12703:	48 89 e5             	mov    %rsp,%rbp
   12706:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1270a:	90                   	nop
   1270b:	5d                   	pop    %rbp
   1270c:	c3                   	ret

000000000001270d <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1270d:	55                   	push   %rbp
   1270e:	48 89 e5             	mov    %rsp,%rbp
   12711:	48 83 ec 20          	sub    $0x20,%rsp
   12715:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12719:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1271d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   12721:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12725:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12729:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1272d:	48 89 ce             	mov    %rcx,%rsi
   12730:	48 89 c7             	mov    %rax,%rdi
   12733:	e8 3a 22 00 00       	call   14972 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>
   12738:	90                   	nop
   12739:	c9                   	leave
   1273a:	c3                   	ret

000000000001273b <_ZSt8_DestroyIP23VkDeviceQueueCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   1273b:	55                   	push   %rbp
   1273c:	48 89 e5             	mov    %rsp,%rbp
   1273f:	48 83 ec 10          	sub    $0x10,%rsp
   12743:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12747:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   1274b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1274f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12753:	48 89 d6             	mov    %rdx,%rsi
   12756:	48 89 c7             	mov    %rax,%rdi
   12759:	e8 4e 22 00 00       	call   149ac <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>
    }
   1275e:	90                   	nop
   1275f:	c9                   	leave
   12760:	c3                   	ret
   12761:	90                   	nop

0000000000012762 <_ZNSt15__new_allocatorIjEC1ERKS0_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   12762:	55                   	push   %rbp
   12763:	48 89 e5             	mov    %rsp,%rbp
   12766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1276a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1276e:	90                   	nop
   1276f:	5d                   	pop    %rbp
   12770:	c3                   	ret
   12771:	90                   	nop

0000000000012772 <_ZNSaISt13_Rb_tree_nodeIjEEC1IjEERKSaIT_E>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
   12772:	55                   	push   %rbp
   12773:	48 89 e5             	mov    %rsp,%rbp
   12776:	48 83 ec 10          	sub    $0x10,%rsp
   1277a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1277e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12786:	48 89 c7             	mov    %rax,%rdi
   12789:	e8 2e 22 00 00       	call   149bc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>
   1278e:	90                   	nop
   1278f:	c9                   	leave
   12790:	c3                   	ret
   12791:	90                   	nop

0000000000012792 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE13_Rb_tree_implIS3_Lb1EEC1ERKS3_OSaISt13_Rb_tree_nodeIjEE>:
	  _Rb_tree_impl(const _Key_compare& __comp, _Node_allocator&& __a)
   12792:	55                   	push   %rbp
   12793:	48 89 e5             	mov    %rsp,%rbp
   12796:	48 83 ec 20          	sub    $0x20,%rsp
   1279a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1279e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   127a2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _Node_allocator(std::move(__a)), _Base_key_compare(__comp)
   127a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   127aa:	48 89 c7             	mov    %rax,%rdi
   127ad:	e8 15 22 00 00       	call   149c7 <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>
   127b2:	48 89 c2             	mov    %rax,%rdx
   127b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127b9:	48 89 d6             	mov    %rdx,%rsi
   127bc:	48 89 c7             	mov    %rax,%rdi
   127bf:	e8 12 22 00 00       	call   149d6 <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>
   127c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   127cc:	48 89 d6             	mov    %rdx,%rsi
   127cf:	48 89 c7             	mov    %rax,%rdi
   127d2:	e8 25 22 00 00       	call   149fc <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>
   127d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127db:	48 83 c0 08          	add    $0x8,%rax
   127df:	48 89 c7             	mov    %rax,%rdi
   127e2:	e8 7f 95 ff ff       	call   bd66 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   127e7:	90                   	nop
   127e8:	c9                   	leave
   127e9:	c3                   	ret

00000000000127ea <_ZNKSt16initializer_listIjE4sizeEv>:
      size() const noexcept { return _M_len; }
   127ea:	55                   	push   %rbp
   127eb:	48 89 e5             	mov    %rsp,%rbp
   127ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127f6:	48 8b 40 08          	mov    0x8(%rax),%rax
   127fa:	5d                   	pop    %rbp
   127fb:	c3                   	ret

00000000000127fc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeC1ERS5_>:
	_Alloc_node(_Rb_tree& __t)
   127fc:	55                   	push   %rbp
   127fd:	48 89 e5             	mov    %rsp,%rbp
   12800:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12804:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_t(__t) { }
   12808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1280c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12810:	48 89 10             	mov    %rdx,(%rax)
   12813:	90                   	nop
   12814:	5d                   	pop    %rbp
   12815:	c3                   	ret

0000000000012816 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12816:	55                   	push   %rbp
   12817:	48 89 e5             	mov    %rsp,%rbp
   1281a:	48 83 ec 20          	sub    $0x20,%rsp
   1281e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12822:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12826:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1282a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1282e:	48 89 d6             	mov    %rdx,%rsi
   12831:	48 89 c7             	mov    %rax,%rdi
   12834:	e8 d3 21 00 00       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   12839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1283d:	c9                   	leave
   1283e:	c3                   	ret
   1283f:	90                   	nop

0000000000012840 <_ZNSt23_Rb_tree_const_iteratorIjEC1ERKSt17_Rb_tree_iteratorIjE>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   12840:	55                   	push   %rbp
   12841:	48 89 e5             	mov    %rsp,%rbp
   12844:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12848:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   1284c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12850:	48 8b 10             	mov    (%rax),%rdx
   12853:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12857:	48 89 10             	mov    %rdx,(%rax)
   1285a:	90                   	nop
   1285b:	5d                   	pop    %rbp
   1285c:	c3                   	ret
   1285d:	90                   	nop

000000000001285e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1285e:	55                   	push   %rbp
   1285f:	48 89 e5             	mov    %rsp,%rbp
   12862:	48 83 ec 40          	sub    $0x40,%rsp
   12866:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1286a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1286e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   12872:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	= _M_get_insert_hint_unique_pos(__position, _KeyOfValue()(__v));
   12876:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1287a:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
   1287e:	48 89 d6             	mov    %rdx,%rsi
   12881:	48 89 c7             	mov    %rax,%rdi
   12884:	e8 eb 25 00 00       	call   14e74 <_ZNKSt9_IdentityIjEclERKj>
   12889:	48 89 c2             	mov    %rax,%rdx
   1288c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   12890:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12894:	48 89 ce             	mov    %rcx,%rsi
   12897:	48 89 c7             	mov    %rax,%rdi
   1289a:	e8 87 21 00 00       	call   14a26 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>
   1289f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   128a3:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__res.second)
   128a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128ab:	48 85 c0             	test   %rax,%rax
   128ae:	74 2c                	je     128dc <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x7e>
	return _M_insert_(__res.first, __res.second,
   128b0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   128b4:	48 89 c7             	mov    %rax,%rdi
   128b7:	e8 ca 25 00 00       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   128bc:	48 89 c1             	mov    %rax,%rcx
   128bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   128c3:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   128c7:	48 8b 7d c0          	mov    -0x40(%rbp),%rdi
   128cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128cf:	49 89 f8             	mov    %rdi,%r8
   128d2:	48 89 c7             	mov    %rax,%rdi
   128d5:	e8 ba 25 00 00       	call   14e94 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>
			  __node_gen);
   128da:	eb 17                	jmp    128f3 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_insert_unique_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjESt23_Rb_tree_const_iteratorIjEOT_RT0_+0x95>
      return iterator(__res.first);
   128dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   128e0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   128e4:	48 89 d6             	mov    %rdx,%rsi
   128e7:	48 89 c7             	mov    %rax,%rdi
   128ea:	e8 1d 21 00 00       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   128ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   128f3:	c9                   	leave
   128f4:	c3                   	ret
   128f5:	90                   	nop

00000000000128f6 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   128f6:	55                   	push   %rbp
   128f7:	48 89 e5             	mov    %rsp,%rbp
   128fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   128fe:	90                   	nop
   128ff:	5d                   	pop    %rbp
   12900:	c3                   	ret

0000000000012901 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12901:	55                   	push   %rbp
   12902:	48 89 e5             	mov    %rsp,%rbp
   12905:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   12909:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1290d:	48 8b 40 18          	mov    0x18(%rax),%rax
   12911:	5d                   	pop    %rbp
   12912:	c3                   	ret

0000000000012913 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12913:	55                   	push   %rbp
   12914:	48 89 e5             	mov    %rsp,%rbp
   12917:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   1291b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1291f:	48 8b 40 10          	mov    0x10(%rax),%rax
   12923:	5d                   	pop    %rbp
   12924:	c3                   	ret
   12925:	90                   	nop

0000000000012926 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_drop_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12926:	55                   	push   %rbp
   12927:	48 89 e5             	mov    %rsp,%rbp
   1292a:	48 83 ec 10          	sub    $0x10,%rsp
   1292e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12932:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12936:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1293a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293e:	48 89 d6             	mov    %rdx,%rsi
   12941:	48 89 c7             	mov    %rax,%rdi
   12944:	e8 3b 26 00 00       	call   14f84 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>
	_M_put_node(__p);
   12949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1294d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12951:	48 89 d6             	mov    %rdx,%rsi
   12954:	48 89 c7             	mov    %rax,%rdi
   12957:	e8 66 26 00 00       	call   14fc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>
      }
   1295c:	90                   	nop
   1295d:	c9                   	leave
   1295e:	c3                   	ret
   1295f:	90                   	nop

0000000000012960 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12960:	55                   	push   %rbp
   12961:	48 89 e5             	mov    %rsp,%rbp
   12964:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   12968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1296c:	48 8b 40 10          	mov    0x10(%rax),%rax
   12970:	5d                   	pop    %rbp
   12971:	c3                   	ret

0000000000012972 <_ZNSt23_Rb_tree_const_iteratorIjEC1EPKSt18_Rb_tree_node_base>:
      _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12972:	55                   	push   %rbp
   12973:	48 89 e5             	mov    %rsp,%rbp
   12976:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1297a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1297e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12982:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12986:	48 89 10             	mov    %rdx,(%rax)
   12989:	90                   	nop
   1298a:	5d                   	pop    %rbp
   1298b:	c3                   	ret

000000000001298c <_ZNK9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _Tp*
      _M_ptr() noexcept
      { return static_cast<_Tp*>(_M_addr()); }

      const _Tp*
      _M_ptr() const noexcept
   1298c:	55                   	push   %rbp
   1298d:	48 89 e5             	mov    %rsp,%rbp
   12990:	48 83 ec 10          	sub    $0x10,%rsp
   12994:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   12998:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1299c:	48 89 c7             	mov    %rax,%rdi
   1299f:	e8 54 26 00 00       	call   14ff8 <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
   129a4:	c9                   	leave
   129a5:	c3                   	ret

00000000000129a6 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   129a6:	55                   	push   %rbp
   129a7:	48 89 e5             	mov    %rsp,%rbp
   129aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   129ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129b2:	5d                   	pop    %rbp
   129b3:	c3                   	ret

00000000000129b4 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE9constructIS0_JRKS0_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   129b4:	55                   	push   %rbp
   129b5:	48 89 e5             	mov    %rsp,%rbp
   129b8:	53                   	push   %rbx
   129b9:	48 83 ec 28          	sub    $0x28,%rsp
   129bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   129c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   129c9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   129cd:	48 89 c6             	mov    %rax,%rsi
   129d0:	bf 28 00 00 00       	mov    $0x28,%edi
   129d5:	e8 93 29 ff ff       	call   536d <_ZnwmPv>
   129da:	48 89 c3             	mov    %rax,%rbx
   129dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   129e1:	48 89 c7             	mov    %rax,%rdi
   129e4:	e8 bd ff ff ff       	call   129a6 <_ZSt7forwardIRK23VkDeviceQueueCreateInfoEOT_RNSt16remove_referenceIS3_E4typeE>
   129e9:	48 8b 30             	mov    (%rax),%rsi
   129ec:	48 8b 78 08          	mov    0x8(%rax),%rdi
   129f0:	48 89 33             	mov    %rsi,(%rbx)
   129f3:	48 89 7b 08          	mov    %rdi,0x8(%rbx)
   129f7:	48 8b 70 10          	mov    0x10(%rax),%rsi
   129fb:	48 8b 78 18          	mov    0x18(%rax),%rdi
   129ff:	48 89 73 10          	mov    %rsi,0x10(%rbx)
   12a03:	48 89 7b 18          	mov    %rdi,0x18(%rbx)
   12a07:	48 8b 40 20          	mov    0x20(%rax),%rax
   12a0b:	48 89 43 20          	mov    %rax,0x20(%rbx)
   12a0f:	90                   	nop
   12a10:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a14:	c9                   	leave
   12a15:	c3                   	ret

0000000000012a16 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12a16:	55                   	push   %rbp
   12a17:	48 89 e5             	mov    %rsp,%rbp
   12a1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12a22:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a26:	48 8b 10             	mov    (%rax),%rdx
   12a29:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a2d:	48 89 10             	mov    %rdx,(%rax)
   12a30:	90                   	nop
   12a31:	5d                   	pop    %rbp
   12a32:	c3                   	ret
   12a33:	90                   	nop

0000000000012a34 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12a34:	55                   	push   %rbp
   12a35:	48 89 e5             	mov    %rsp,%rbp
   12a38:	53                   	push   %rbx
   12a39:	48 83 ec 38          	sub    $0x38,%rsp
   12a3d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12a41:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12a45:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12a49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a4d:	48 89 c7             	mov    %rax,%rdi
   12a50:	e8 b1 25 00 00       	call   15006 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   12a55:	48 89 c3             	mov    %rax,%rbx
   12a58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a5c:	48 89 c7             	mov    %rax,%rdi
   12a5f:	e8 34 ae ff ff       	call   d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12a64:	48 29 c3             	sub    %rax,%rbx
   12a67:	48 89 da             	mov    %rbx,%rdx
   12a6a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12a6e:	48 39 c2             	cmp    %rax,%rdx
   12a71:	0f 92 c0             	setb   %al
   12a74:	84 c0                	test   %al,%al
   12a76:	74 0c                	je     12a84 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12a78:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12a7c:	48 89 c7             	mov    %rax,%rdi
   12a7f:	e8 2c 17 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12a84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a88:	48 89 c7             	mov    %rax,%rdi
   12a8b:	e8 08 ae ff ff       	call   d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12a90:	48 89 c3             	mov    %rax,%rbx
   12a93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a97:	48 89 c7             	mov    %rax,%rdi
   12a9a:	e8 f9 ad ff ff       	call   d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12a9f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12aa3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12aa7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12aab:	48 89 d6             	mov    %rdx,%rsi
   12aae:	48 89 c7             	mov    %rax,%rdi
   12ab1:	e8 0e 0e 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   12ab6:	48 8b 00             	mov    (%rax),%rax
   12ab9:	48 01 d8             	add    %rbx,%rax
   12abc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12ac0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ac4:	48 89 c7             	mov    %rax,%rdi
   12ac7:	e8 cc ad ff ff       	call   d898 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE4sizeEv>
   12acc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12ad0:	72 12                	jb     12ae4 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xb0>
   12ad2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ad6:	48 89 c7             	mov    %rax,%rdi
   12ad9:	e8 28 25 00 00       	call   15006 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   12ade:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12ae2:	73 0e                	jae    12af2 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xbe>
   12ae4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ae8:	48 89 c7             	mov    %rax,%rdi
   12aeb:	e8 16 25 00 00       	call   15006 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>
   12af0:	eb 04                	jmp    12af6 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE12_M_check_lenEmPKc+0xc2>
   12af2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12af6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12afa:	c9                   	leave
   12afb:	c3                   	ret

0000000000012afc <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   12afc:	55                   	push   %rbp
   12afd:	48 89 e5             	mov    %rsp,%rbp
   12b00:	48 83 ec 20          	sub    $0x20,%rsp
   12b04:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   12b08:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12b0c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12b10:	48 89 d6             	mov    %rdx,%rsi
   12b13:	48 89 c7             	mov    %rax,%rdi
   12b16:	e8 fb fe ff ff       	call   12a16 <_ZN9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   12b1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b1f:	c9                   	leave
   12b20:	c3                   	ret

0000000000012b21 <_ZN9__gnu_cxxmiIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   12b21:	55                   	push   %rbp
   12b22:	48 89 e5             	mov    %rsp,%rbp
   12b25:	53                   	push   %rbx
   12b26:	48 83 ec 18          	sub    $0x18,%rsp
   12b2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   12b32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b36:	48 89 c7             	mov    %rax,%rdi
   12b39:	e8 96 00 00 00       	call   12bd4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
   12b3e:	48 8b 18             	mov    (%rax),%rbx
   12b41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b45:	48 89 c7             	mov    %rax,%rdi
   12b48:	e8 87 00 00 00       	call   12bd4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>
   12b4d:	48 8b 00             	mov    (%rax),%rax
   12b50:	48 29 c3             	sub    %rax,%rbx
   12b53:	48 89 da             	mov    %rbx,%rdx
   12b56:	48 c1 fa 03          	sar    $0x3,%rdx
   12b5a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   12b61:	cc cc cc 
   12b64:	48 0f af c2          	imul   %rdx,%rax
   12b68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12b6c:	c9                   	leave
   12b6d:	c3                   	ret

0000000000012b6e <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12b6e:	55                   	push   %rbp
   12b6f:	48 89 e5             	mov    %rsp,%rbp
   12b72:	48 83 ec 10          	sub    $0x10,%rsp
   12b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12b7e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12b83:	74 15                	je     12b9a <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   12b85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b89:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b8d:	48 89 d6             	mov    %rdx,%rsi
   12b90:	48 89 c7             	mov    %rax,%rdi
   12b93:	e8 90 24 00 00       	call   15028 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>
   12b98:	eb 05                	jmp    12b9f <_ZNSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   12b9a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12b9f:	c9                   	leave
   12ba0:	c3                   	ret

0000000000012ba1 <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_relocateEPS0_S3_S3_RS1_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12ba1:	55                   	push   %rbp
   12ba2:	48 89 e5             	mov    %rsp,%rbp
   12ba5:	48 83 ec 20          	sub    $0x20,%rsp
   12ba9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12bad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12bb1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12bb5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12bb9:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12bbd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12bc1:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12bc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bc9:	48 89 c7             	mov    %rax,%rdi
   12bcc:	e8 81 24 00 00       	call   15052 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>
      }
   12bd1:	c9                   	leave
   12bd2:	c3                   	ret
   12bd3:	90                   	nop

0000000000012bd4 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkDeviceQueueCreateInfoSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12bd4:	55                   	push   %rbp
   12bd5:	48 89 e5             	mov    %rsp,%rbp
   12bd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12bdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12be0:	5d                   	pop    %rbp
   12be1:	c3                   	ret

0000000000012be2 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv>:
      _M_get() const noexcept
   12be2:	55                   	push   %rbp
   12be3:	48 89 e5             	mov    %rsp,%rbp
   12be6:	48 83 ec 10          	sub    $0x10,%rsp
   12bea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   12bee:	e8 8c 90 ff ff       	call   bc7f <_ZSt23__is_constant_evaluatedv>
   12bf3:	84 c0                	test   %al,%al
   12bf5:	74 1a                	je     12c11 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   12bf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bfb:	48 89 c7             	mov    %rax,%rdi
   12bfe:	e8 09 95 ff ff       	call   c10c <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE13_M_is_engagedEv>
   12c03:	83 f0 01             	xor    $0x1,%eax
   12c06:	84 c0                	test   %al,%al
   12c08:	74 07                	je     12c11 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x2f>
   12c0a:	b8 01 00 00 00       	mov    $0x1,%eax
   12c0f:	eb 05                	jmp    12c16 <_ZNKSt19_Optional_base_implIjSt14_Optional_baseIjLb1ELb1EEE6_M_getEv+0x34>
   12c11:	b8 00 00 00 00       	mov    $0x0,%eax
   12c16:	84 c0                	test   %al,%al
	return static_cast<const _Dp*>(this)->_M_payload._M_get();
   12c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c1c:	48 89 c7             	mov    %rax,%rdi
   12c1f:	e8 92 24 00 00       	call   150b6 <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>
      }
   12c24:	c9                   	leave
   12c25:	c3                   	ret

0000000000012c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12c26:	55                   	push   %rbp
   12c27:	48 89 e5             	mov    %rsp,%rbp
   12c2a:	48 83 ec 10          	sub    $0x10,%rsp
   12c2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c36:	48 89 c7             	mov    %rax,%rdi
   12c39:	e8 c8 24 00 00       	call   15106 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12c3e:	48 89 c7             	mov    %rax,%rdi
   12c41:	e8 7e 24 00 00       	call   150c4 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
   12c46:	c9                   	leave
   12c47:	c3                   	ret

0000000000012c48 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12c48:	55                   	push   %rbp
   12c49:	48 89 e5             	mov    %rsp,%rbp
   12c4c:	48 83 ec 20          	sub    $0x20,%rsp
   12c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12c58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12c5c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c64:	48 89 d6             	mov    %rdx,%rsi
   12c67:	48 89 c7             	mov    %rax,%rdi
   12c6a:	e8 a5 24 00 00       	call   15114 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
   12c6f:	c9                   	leave
   12c70:	c3                   	ret
   12c71:	90                   	nop

0000000000012c72 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12c72:	55                   	push   %rbp
   12c73:	48 89 e5             	mov    %rsp,%rbp
   12c76:	53                   	push   %rbx
   12c77:	48 83 ec 38          	sub    $0x38,%rsp
   12c7b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12c7f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12c83:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12c87:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c8b:	48 89 c7             	mov    %rax,%rdi
   12c8e:	e8 93 ff ff ff       	call   12c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   12c93:	48 89 c3             	mov    %rax,%rbx
   12c96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12c9a:	48 89 c7             	mov    %rax,%rdi
   12c9d:	e8 5c af ff ff       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   12ca2:	48 29 c3             	sub    %rax,%rbx
   12ca5:	48 89 da             	mov    %rbx,%rdx
   12ca8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12cac:	48 39 c2             	cmp    %rax,%rdx
   12caf:	0f 92 c0             	setb   %al
   12cb2:	84 c0                	test   %al,%al
   12cb4:	74 0c                	je     12cc2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12cb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12cba:	48 89 c7             	mov    %rax,%rdi
   12cbd:	e8 ee 14 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12cc2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cc6:	48 89 c7             	mov    %rax,%rdi
   12cc9:	e8 30 af ff ff       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   12cce:	48 89 c3             	mov    %rax,%rbx
   12cd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cd5:	48 89 c7             	mov    %rax,%rdi
   12cd8:	e8 21 af ff ff       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   12cdd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12ce1:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12ce5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12ce9:	48 89 d6             	mov    %rdx,%rsi
   12cec:	48 89 c7             	mov    %rax,%rdi
   12cef:	e8 d0 0b 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   12cf4:	48 8b 00             	mov    (%rax),%rax
   12cf7:	48 01 d8             	add    %rbx,%rax
   12cfa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12cfe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d02:	48 89 c7             	mov    %rax,%rdi
   12d05:	e8 f4 ae ff ff       	call   dbfe <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
   12d0a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12d0e:	72 12                	jb     12d22 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12d10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d14:	48 89 c7             	mov    %rax,%rdi
   12d17:	e8 0a ff ff ff       	call   12c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   12d1c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12d20:	73 0e                	jae    12d30 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12d22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12d26:	48 89 c7             	mov    %rax,%rdi
   12d29:	e8 f8 fe ff ff       	call   12c26 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE8max_sizeEv>
   12d2e:	eb 04                	jmp    12d34 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12d30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12d34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12d38:	c9                   	leave
   12d39:	c3                   	ret

0000000000012d3a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12d3a:	55                   	push   %rbp
   12d3b:	48 89 e5             	mov    %rsp,%rbp
   12d3e:	48 83 ec 10          	sub    $0x10,%rsp
   12d42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d46:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12d4a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12d4f:	74 15                	je     12d66 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
   12d51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12d59:	48 89 d6             	mov    %rdx,%rsi
   12d5c:	48 89 c7             	mov    %rax,%rdi
   12d5f:	e8 d9 23 00 00       	call   1513d <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
   12d64:	eb 05                	jmp    12d6b <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
   12d66:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12d6b:	c9                   	leave
   12d6c:	c3                   	ret

0000000000012d6d <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12d6d:	55                   	push   %rbp
   12d6e:	48 89 e5             	mov    %rsp,%rbp
   12d71:	48 83 ec 20          	sub    $0x20,%rsp
   12d75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12d79:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12d7d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12d81:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12d85:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12d89:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d8d:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12d91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d95:	48 89 c7             	mov    %rax,%rdi
   12d98:	e8 ca 23 00 00       	call   15167 <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12d9d:	c9                   	leave
   12d9e:	c3                   	ret
   12d9f:	90                   	nop

0000000000012da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   12da0:	55                   	push   %rbp
   12da1:	48 89 e5             	mov    %rsp,%rbp
   12da4:	48 83 ec 10          	sub    $0x10,%rsp
   12da8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   12dac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12db0:	48 89 c7             	mov    %rax,%rdi
   12db3:	e8 54 24 00 00       	call   1520c <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12db8:	48 89 c7             	mov    %rax,%rdi
   12dbb:	e8 0a 24 00 00       	call   151ca <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   12dc0:	c9                   	leave
   12dc1:	c3                   	ret

0000000000012dc2 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12dc2:	55                   	push   %rbp
   12dc3:	48 89 e5             	mov    %rsp,%rbp
   12dc6:	48 83 ec 20          	sub    $0x20,%rsp
   12dca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12dce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12dd2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12dd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12dda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12dde:	48 89 d6             	mov    %rdx,%rsi
   12de1:	48 89 c7             	mov    %rax,%rdi
   12de4:	e8 31 24 00 00       	call   1521a <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   12de9:	c9                   	leave
   12dea:	c3                   	ret
   12deb:	90                   	nop

0000000000012dec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   12dec:	55                   	push   %rbp
   12ded:	48 89 e5             	mov    %rsp,%rbp
   12df0:	53                   	push   %rbx
   12df1:	48 83 ec 38          	sub    $0x38,%rsp
   12df5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12df9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12dfd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   12e01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e05:	48 89 c7             	mov    %rax,%rdi
   12e08:	e8 93 ff ff ff       	call   12da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12e0d:	48 89 c3             	mov    %rax,%rbx
   12e10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e14:	48 89 c7             	mov    %rax,%rdi
   12e17:	e8 d0 b1 ff ff       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12e1c:	48 29 c3             	sub    %rax,%rbx
   12e1f:	48 89 da             	mov    %rbx,%rdx
   12e22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12e26:	48 39 c2             	cmp    %rax,%rdx
   12e29:	0f 92 c0             	setb   %al
   12e2c:	84 c0                	test   %al,%al
   12e2e:	74 0c                	je     12e3c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   12e30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12e34:	48 89 c7             	mov    %rax,%rdi
   12e37:	e8 74 13 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   12e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e40:	48 89 c7             	mov    %rax,%rdi
   12e43:	e8 a4 b1 ff ff       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12e48:	48 89 c3             	mov    %rax,%rbx
   12e4b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e4f:	48 89 c7             	mov    %rax,%rdi
   12e52:	e8 95 b1 ff ff       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12e57:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   12e5b:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12e5f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12e63:	48 89 d6             	mov    %rdx,%rsi
   12e66:	48 89 c7             	mov    %rax,%rdi
   12e69:	e8 56 0a 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   12e6e:	48 8b 00             	mov    (%rax),%rax
   12e71:	48 01 d8             	add    %rbx,%rax
   12e74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12e78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e7c:	48 89 c7             	mov    %rax,%rdi
   12e7f:	e8 68 b1 ff ff       	call   dfec <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   12e84:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12e88:	72 12                	jb     12e9c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   12e8a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12e8e:	48 89 c7             	mov    %rax,%rdi
   12e91:	e8 0a ff ff ff       	call   12da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12e96:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12e9a:	73 0e                	jae    12eaa <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   12e9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12ea0:	48 89 c7             	mov    %rax,%rdi
   12ea3:	e8 f8 fe ff ff       	call   12da0 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   12ea8:	eb 04                	jmp    12eae <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   12eaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12eae:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12eb2:	c9                   	leave
   12eb3:	c3                   	ret

0000000000012eb4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   12eb4:	55                   	push   %rbp
   12eb5:	48 89 e5             	mov    %rsp,%rbp
   12eb8:	48 83 ec 10          	sub    $0x10,%rsp
   12ebc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ec0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   12ec4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12ec9:	74 15                	je     12ee0 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   12ecb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ecf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12ed3:	48 89 d6             	mov    %rdx,%rsi
   12ed6:	48 89 c7             	mov    %rax,%rdi
   12ed9:	e8 65 23 00 00       	call   15243 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   12ede:	eb 05                	jmp    12ee5 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   12ee0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   12ee5:	c9                   	leave
   12ee6:	c3                   	ret

0000000000012ee7 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12ee7:	55                   	push   %rbp
   12ee8:	48 89 e5             	mov    %rsp,%rbp
   12eeb:	48 83 ec 20          	sub    $0x20,%rsp
   12eef:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12ef3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12ef7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12efb:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   12eff:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   12f03:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12f07:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12f0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f0f:	48 89 c7             	mov    %rax,%rdi
   12f12:	e8 56 23 00 00       	call   1526d <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   12f17:	c9                   	leave
   12f18:	c3                   	ret

0000000000012f19 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   12f19:	55                   	push   %rbp
   12f1a:	48 89 e5             	mov    %rsp,%rbp
   12f1d:	48 83 ec 20          	sub    $0x20,%rsp
   12f21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   12f25:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   12f2c:	ff ff 7f 
   12f2f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   12f33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12f37:	48 89 c7             	mov    %rax,%rdi
   12f3a:	e8 91 23 00 00       	call   152d0 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
   12f3f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   12f43:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   12f47:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12f4b:	48 89 d6             	mov    %rdx,%rsi
   12f4e:	48 89 c7             	mov    %rax,%rdi
   12f51:	e8 22 32 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   12f56:	48 8b 00             	mov    (%rax),%rax
      }
   12f59:	c9                   	leave
   12f5a:	c3                   	ret
   12f5b:	90                   	nop

0000000000012f5c <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   12f5c:	55                   	push   %rbp
   12f5d:	48 89 e5             	mov    %rsp,%rbp
   12f60:	48 83 ec 10          	sub    $0x10,%rsp
   12f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   12f6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12f70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f74:	48 89 d6             	mov    %rdx,%rsi
   12f77:	48 89 c7             	mov    %rax,%rdi
   12f7a:	e8 81 17 ff ff       	call   4700 <_ZNSaIcEC2ERKS_@plt>
   12f7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12f83:	48 89 c7             	mov    %rax,%rdi
   12f86:	e8 5f 23 00 00       	call   152ea <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
   12f8b:	90                   	nop
   12f8c:	c9                   	leave
   12f8d:	c3                   	ret

0000000000012f8e <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   12f8e:	55                   	push   %rbp
   12f8f:	48 89 e5             	mov    %rsp,%rbp
   12f92:	48 83 ec 10          	sub    $0x10,%rsp
   12f96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12f9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   12f9e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12fa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fa6:	48 89 d6             	mov    %rdx,%rsi
   12fa9:	48 89 c7             	mov    %rax,%rdi
   12fac:	e8 67 23 00 00       	call   15318 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
   12fb1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12fb5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   12fb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fbc:	48 8b 10             	mov    (%rax),%rdx
   12fbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fc3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fcb:	48 8b 10             	mov    (%rax),%rdx
   12fce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12fd2:	48 01 c2             	add    %rax,%rdx
   12fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12fd9:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   12fdd:	90                   	nop
   12fde:	c9                   	leave
   12fdf:	c3                   	ret

0000000000012fe0 <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   12fe0:	55                   	push   %rbp
   12fe1:	48 89 e5             	mov    %rsp,%rbp
   12fe4:	48 83 ec 20          	sub    $0x20,%rsp
   12fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12fec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12ff0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   12ff4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12ff8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ffc:	48 89 d6             	mov    %rdx,%rsi
   12fff:	48 89 c7             	mov    %rax,%rdi
   13002:	e8 44 23 00 00       	call   1534b <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
   13007:	c9                   	leave
   13008:	c3                   	ret

0000000000013009 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13009:	55                   	push   %rbp
   1300a:	48 89 e5             	mov    %rsp,%rbp
   1300d:	48 83 ec 10          	sub    $0x10,%rsp
   13011:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13015:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13019:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1301d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13021:	48 89 d6             	mov    %rdx,%rsi
   13024:	48 89 c7             	mov    %rax,%rdi
   13027:	e8 48 23 00 00       	call   15374 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
   1302c:	90                   	nop
   1302d:	c9                   	leave
   1302e:	c3                   	ret

000000000001302f <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1302f:	55                   	push   %rbp
   13030:	48 89 e5             	mov    %rsp,%rbp
   13033:	48 83 ec 20          	sub    $0x20,%rsp
   13037:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1303b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1303f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13043:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13047:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1304b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1304f:	48 89 ce             	mov    %rcx,%rsi
   13052:	48 89 c7             	mov    %rax,%rdi
   13055:	e8 2a 23 00 00       	call   15384 <_ZNSt15__new_allocatorIcE10deallocateEPcm>
   1305a:	90                   	nop
   1305b:	c9                   	leave
   1305c:	c3                   	ret
   1305d:	90                   	nop

000000000001305e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1305e:	55                   	push   %rbp
   1305f:	48 89 e5             	mov    %rsp,%rbp
   13062:	48 83 ec 10          	sub    $0x10,%rsp
   13066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1306a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1306e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13076:	48 89 d6             	mov    %rdx,%rsi
   13079:	48 89 c7             	mov    %rax,%rdi
   1307c:	e8 2d 23 00 00       	call   153ae <_ZNSaI14VkDynamicStateEC1ERKS0_>
   13081:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13085:	48 89 c7             	mov    %rax,%rdi
   13088:	e8 47 23 00 00       	call   153d4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1308d:	90                   	nop
   1308e:	c9                   	leave
   1308f:	c3                   	ret

0000000000013090 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   13090:	55                   	push   %rbp
   13091:	48 89 e5             	mov    %rsp,%rbp
   13094:	48 83 ec 20          	sub    $0x20,%rsp
   13098:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1309c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   130a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   130a4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   130a9:	74 17                	je     130c2 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   130ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   130b7:	48 89 ce             	mov    %rcx,%rsi
   130ba:	48 89 c7             	mov    %rax,%rdi
   130bd:	e8 40 23 00 00       	call   15402 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>
      }
   130c2:	90                   	nop
   130c3:	c9                   	leave
   130c4:	c3                   	ret
   130c5:	90                   	nop

00000000000130c6 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>:
   130c6:	55                   	push   %rbp
   130c7:	48 89 e5             	mov    %rsp,%rbp
   130ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130d2:	48 8b 40 08          	mov    0x8(%rax),%rax
   130d6:	5d                   	pop    %rbp
   130d7:	c3                   	ret

00000000000130d8 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   130d8:	55                   	push   %rbp
   130d9:	48 89 e5             	mov    %rsp,%rbp
   130dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   130e0:	90                   	nop
   130e1:	5d                   	pop    %rbp
   130e2:	c3                   	ret

00000000000130e3 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   130e3:	55                   	push   %rbp
   130e4:	48 89 e5             	mov    %rsp,%rbp
   130e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   130eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   130ef:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   130f3:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   130f7:	48 c1 f8 02          	sar    $0x2,%rax
    }
   130fb:	5d                   	pop    %rbp
   130fc:	c3                   	ret

00000000000130fd <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   130fd:	55                   	push   %rbp
   130fe:	48 89 e5             	mov    %rsp,%rbp
   13101:	53                   	push   %rbx
   13102:	48 83 ec 28          	sub    $0x28,%rsp
   13106:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1310a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   1310e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13112:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13116:	48 89 d6             	mov    %rdx,%rsi
   13119:	48 89 c7             	mov    %rax,%rdi
   1311c:	e8 8d 22 00 00       	call   153ae <_ZNSaI14VkDynamicStateEC1ERKS0_>
   13121:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13125:	48 89 c7             	mov    %rax,%rdi
   13128:	e8 03 23 00 00       	call   15430 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>
   1312d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   13131:	0f 92 c3             	setb   %bl
   13134:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13138:	48 89 c7             	mov    %rax,%rdi
   1313b:	e8 7c ad ff ff       	call   debc <_ZNSaI14VkDynamicStateED1Ev>
   13140:	84 db                	test   %bl,%bl
   13142:	74 0f                	je     13153 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   13144:	48 8d 05 bd 86 00 00 	lea    0x86bd(%rip),%rax        # 1b808 <_ZN6__pstl9execution2v1L5unseqE+0x53d>
   1314b:	48 89 c7             	mov    %rax,%rdi
   1314e:	e8 5d 10 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   13153:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   13157:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1315b:	c9                   	leave
   1315c:	c3                   	ret
   1315d:	90                   	nop

000000000001315e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1315e:	55                   	push   %rbp
   1315f:	48 89 e5             	mov    %rsp,%rbp
   13162:	48 83 ec 10          	sub    $0x10,%rsp
   13166:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1316a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1316e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13173:	74 15                	je     1318a <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x2c>
   13175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13179:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1317d:	48 89 d6             	mov    %rdx,%rsi
   13180:	48 89 c7             	mov    %rax,%rdi
   13183:	e8 ea 22 00 00       	call   15472 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>
   13188:	eb 05                	jmp    1318f <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x31>
   1318a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1318f:	c9                   	leave
   13190:	c3                   	ret

0000000000013191 <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   13191:	55                   	push   %rbp
   13192:	48 89 e5             	mov    %rsp,%rbp
   13195:	48 83 ec 20          	sub    $0x20,%rsp
   13199:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1319d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   131a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   131a5:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   131a9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131ad:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   131b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131b5:	48 89 ce             	mov    %rcx,%rsi
   131b8:	48 89 c7             	mov    %rax,%rdi
   131bb:	e8 dc 22 00 00       	call   1549c <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
    }
   131c0:	c9                   	leave
   131c1:	c3                   	ret

00000000000131c2 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   131c2:	55                   	push   %rbp
   131c3:	48 89 e5             	mov    %rsp,%rbp
   131c6:	48 83 ec 10          	sub    $0x10,%rsp
   131ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   131ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   131d2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131da:	48 89 d6             	mov    %rdx,%rsi
   131dd:	48 89 c7             	mov    %rax,%rdi
   131e0:	e8 ec 22 00 00       	call   154d1 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>
    }
   131e5:	90                   	nop
   131e6:	c9                   	leave
   131e7:	c3                   	ret

00000000000131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   131e8:	55                   	push   %rbp
   131e9:	48 89 e5             	mov    %rsp,%rbp
   131ec:	48 83 ec 10          	sub    $0x10,%rsp
   131f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   131f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131f8:	48 89 c7             	mov    %rax,%rdi
   131fb:	e8 22 23 00 00       	call   15522 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13200:	48 89 c7             	mov    %rax,%rdi
   13203:	e8 d8 22 00 00       	call   154e0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   13208:	c9                   	leave
   13209:	c3                   	ret

000000000001320a <_ZSt27__uninitialized_default_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1320a:	55                   	push   %rbp
   1320b:	48 89 e5             	mov    %rsp,%rbp
   1320e:	48 83 ec 20          	sub    $0x20,%rsp
   13212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13216:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1321a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1321e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13226:	48 89 d6             	mov    %rdx,%rsi
   13229:	48 89 c7             	mov    %rax,%rdi
   1322c:	e8 ff 22 00 00       	call   15530 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>
   13231:	c9                   	leave
   13232:	c3                   	ret
   13233:	90                   	nop

0000000000013234 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   13234:	55                   	push   %rbp
   13235:	48 89 e5             	mov    %rsp,%rbp
   13238:	53                   	push   %rbx
   13239:	48 83 ec 38          	sub    $0x38,%rsp
   1323d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13241:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13245:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   13249:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1324d:	48 89 c7             	mov    %rax,%rdi
   13250:	e8 93 ff ff ff       	call   131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   13255:	48 89 c3             	mov    %rax,%rbx
   13258:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1325c:	48 89 c7             	mov    %rax,%rdi
   1325f:	e8 00 b1 ff ff       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   13264:	48 29 c3             	sub    %rax,%rbx
   13267:	48 89 da             	mov    %rbx,%rdx
   1326a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1326e:	48 39 c2             	cmp    %rax,%rdx
   13271:	0f 92 c0             	setb   %al
   13274:	84 c0                	test   %al,%al
   13276:	74 0c                	je     13284 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   13278:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1327c:	48 89 c7             	mov    %rax,%rdi
   1327f:	e8 2c 0f ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13284:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13288:	48 89 c7             	mov    %rax,%rdi
   1328b:	e8 d4 b0 ff ff       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   13290:	48 89 c3             	mov    %rax,%rbx
   13293:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13297:	48 89 c7             	mov    %rax,%rdi
   1329a:	e8 c5 b0 ff ff       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   1329f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   132a3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   132a7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132ab:	48 89 d6             	mov    %rdx,%rsi
   132ae:	48 89 c7             	mov    %rax,%rdi
   132b1:	e8 0e 06 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   132b6:	48 8b 00             	mov    (%rax),%rax
   132b9:	48 01 d8             	add    %rbx,%rax
   132bc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   132c0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132c4:	48 89 c7             	mov    %rax,%rdi
   132c7:	e8 98 b0 ff ff       	call   e364 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE4sizeEv>
   132cc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   132d0:	72 12                	jb     132e4 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   132d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132d6:	48 89 c7             	mov    %rax,%rdi
   132d9:	e8 0a ff ff ff       	call   131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   132de:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   132e2:	73 0e                	jae    132f2 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   132e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132e8:	48 89 c7             	mov    %rax,%rdi
   132eb:	e8 f8 fe ff ff       	call   131e8 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE8max_sizeEv>
   132f0:	eb 04                	jmp    132f6 <_ZNKSt6vectorIP15VkFramebuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   132f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   132f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   132fa:	c9                   	leave
   132fb:	c3                   	ret

00000000000132fc <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   132fc:	55                   	push   %rbp
   132fd:	48 89 e5             	mov    %rsp,%rbp
   13300:	48 83 ec 10          	sub    $0x10,%rsp
   13304:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13308:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1330c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13311:	74 15                	je     13328 <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   13313:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13317:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1331b:	48 89 d6             	mov    %rdx,%rsi
   1331e:	48 89 c7             	mov    %rax,%rdi
   13321:	e8 33 22 00 00       	call   15559 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>
   13326:	eb 05                	jmp    1332d <_ZNSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE11_M_allocateEm+0x31>
   13328:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1332d:	c9                   	leave
   1332e:	c3                   	ret

000000000001332f <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1332f:	55                   	push   %rbp
   13330:	48 89 e5             	mov    %rsp,%rbp
   13333:	48 83 ec 20          	sub    $0x20,%rsp
   13337:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1333b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1333f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13343:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13347:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1334b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1334f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13357:	48 89 c7             	mov    %rax,%rdi
   1335a:	e8 24 22 00 00       	call   15583 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1335f:	c9                   	leave
   13360:	c3                   	ret
   13361:	90                   	nop

0000000000013362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13362:	55                   	push   %rbp
   13363:	48 89 e5             	mov    %rsp,%rbp
   13366:	48 83 ec 10          	sub    $0x10,%rsp
   1336a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1336e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13372:	48 89 c7             	mov    %rax,%rdi
   13375:	e8 ae 22 00 00       	call   15628 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1337a:	48 89 c7             	mov    %rax,%rdi
   1337d:	e8 64 22 00 00       	call   155e6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
   13382:	c9                   	leave
   13383:	c3                   	ret

0000000000013384 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13384:	55                   	push   %rbp
   13385:	48 89 e5             	mov    %rsp,%rbp
   13388:	48 83 ec 20          	sub    $0x20,%rsp
   1338c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13390:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13394:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   13398:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1339c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133a0:	48 89 d6             	mov    %rdx,%rsi
   133a3:	48 89 c7             	mov    %rax,%rdi
   133a6:	e8 8b 22 00 00       	call   15636 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
   133ab:	c9                   	leave
   133ac:	c3                   	ret
   133ad:	90                   	nop

00000000000133ae <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   133ae:	55                   	push   %rbp
   133af:	48 89 e5             	mov    %rsp,%rbp
   133b2:	53                   	push   %rbx
   133b3:	48 83 ec 38          	sub    $0x38,%rsp
   133b7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   133bb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   133bf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   133c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133c7:	48 89 c7             	mov    %rax,%rdi
   133ca:	e8 93 ff ff ff       	call   13362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   133cf:	48 89 c3             	mov    %rax,%rbx
   133d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133d6:	48 89 c7             	mov    %rax,%rdi
   133d9:	e8 d2 ad ff ff       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   133de:	48 29 c3             	sub    %rax,%rbx
   133e1:	48 89 da             	mov    %rbx,%rdx
   133e4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   133e8:	48 39 c2             	cmp    %rax,%rdx
   133eb:	0f 92 c0             	setb   %al
   133ee:	84 c0                	test   %al,%al
   133f0:	74 0c                	je     133fe <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   133f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133f6:	48 89 c7             	mov    %rax,%rdi
   133f9:	e8 b2 0d ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   133fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13402:	48 89 c7             	mov    %rax,%rdi
   13405:	e8 a6 ad ff ff       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   1340a:	48 89 c3             	mov    %rax,%rbx
   1340d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13411:	48 89 c7             	mov    %rax,%rdi
   13414:	e8 97 ad ff ff       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   13419:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   1341d:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13421:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13425:	48 89 d6             	mov    %rdx,%rsi
   13428:	48 89 c7             	mov    %rax,%rdi
   1342b:	e8 94 04 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   13430:	48 8b 00             	mov    (%rax),%rax
   13433:	48 01 d8             	add    %rbx,%rax
   13436:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1343a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1343e:	48 89 c7             	mov    %rax,%rdi
   13441:	e8 6a ad ff ff       	call   e1b0 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE4sizeEv>
   13446:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1344a:	72 12                	jb     1345e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   1344c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13450:	48 89 c7             	mov    %rax,%rdi
   13453:	e8 0a ff ff ff       	call   13362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   13458:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1345c:	73 0e                	jae    1346c <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1345e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13462:	48 89 c7             	mov    %rax,%rdi
   13465:	e8 f8 fe ff ff       	call   13362 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE8max_sizeEv>
   1346a:	eb 04                	jmp    13470 <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   1346c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13470:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13474:	c9                   	leave
   13475:	c3                   	ret

0000000000013476 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13476:	55                   	push   %rbp
   13477:	48 89 e5             	mov    %rsp,%rbp
   1347a:	48 83 ec 10          	sub    $0x10,%rsp
   1347e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13486:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1348b:	74 15                	je     134a2 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
   1348d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13491:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13495:	48 89 d6             	mov    %rdx,%rsi
   13498:	48 89 c7             	mov    %rax,%rdi
   1349b:	e8 bf 21 00 00       	call   1565f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
   134a0:	eb 05                	jmp    134a7 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
   134a2:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   134a7:	c9                   	leave
   134a8:	c3                   	ret

00000000000134a9 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   134a9:	55                   	push   %rbp
   134aa:	48 89 e5             	mov    %rsp,%rbp
   134ad:	48 83 ec 20          	sub    $0x20,%rsp
   134b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   134bd:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   134c1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   134c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   134c9:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   134cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134d1:	48 89 c7             	mov    %rax,%rdi
   134d4:	e8 b0 21 00 00       	call   15689 <_ZSt12__relocate_aIPP17VkCommandBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   134d9:	c9                   	leave
   134da:	c3                   	ret
   134db:	90                   	nop

00000000000134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   134dc:	55                   	push   %rbp
   134dd:	48 89 e5             	mov    %rsp,%rbp
   134e0:	48 83 ec 10          	sub    $0x10,%rsp
   134e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   134e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134ec:	48 89 c7             	mov    %rax,%rdi
   134ef:	e8 3a 22 00 00       	call   1572e <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>
   134f4:	48 89 c7             	mov    %rax,%rdi
   134f7:	e8 f0 21 00 00       	call   156ec <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>
   134fc:	c9                   	leave
   134fd:	c3                   	ret

00000000000134fe <_ZSt27__uninitialized_default_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   134fe:	55                   	push   %rbp
   134ff:	48 89 e5             	mov    %rsp,%rbp
   13502:	48 83 ec 20          	sub    $0x20,%rsp
   13506:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1350a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1350e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   13512:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13516:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1351a:	48 89 d6             	mov    %rdx,%rsi
   1351d:	48 89 c7             	mov    %rax,%rdi
   13520:	e8 17 22 00 00       	call   1573c <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>
   13525:	c9                   	leave
   13526:	c3                   	ret
   13527:	90                   	nop

0000000000013528 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   13528:	55                   	push   %rbp
   13529:	48 89 e5             	mov    %rsp,%rbp
   1352c:	53                   	push   %rbx
   1352d:	48 83 ec 38          	sub    $0x38,%rsp
   13531:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13535:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13539:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1353d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13541:	48 89 c7             	mov    %rax,%rdi
   13544:	e8 93 ff ff ff       	call   134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   13549:	48 89 c3             	mov    %rax,%rbx
   1354c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13550:	48 89 c7             	mov    %rax,%rdi
   13553:	e8 66 d9 ff ff       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13558:	48 29 c3             	sub    %rax,%rbx
   1355b:	48 89 da             	mov    %rbx,%rdx
   1355e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13562:	48 39 c2             	cmp    %rax,%rdx
   13565:	0f 92 c0             	setb   %al
   13568:	84 c0                	test   %al,%al
   1356a:	74 0c                	je     13578 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   1356c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13570:	48 89 c7             	mov    %rax,%rdi
   13573:	e8 38 0c ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13578:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1357c:	48 89 c7             	mov    %rax,%rdi
   1357f:	e8 3a d9 ff ff       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13584:	48 89 c3             	mov    %rax,%rbx
   13587:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1358b:	48 89 c7             	mov    %rax,%rdi
   1358e:	e8 2b d9 ff ff       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   13593:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13597:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   1359b:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1359f:	48 89 d6             	mov    %rdx,%rsi
   135a2:	48 89 c7             	mov    %rax,%rdi
   135a5:	e8 1a 03 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   135aa:	48 8b 00             	mov    (%rax),%rax
   135ad:	48 01 d8             	add    %rbx,%rax
   135b0:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   135b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   135b8:	48 89 c7             	mov    %rax,%rdi
   135bb:	e8 fe d8 ff ff       	call   10ebe <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE4sizeEv>
   135c0:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   135c4:	72 12                	jb     135d8 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   135c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   135ca:	48 89 c7             	mov    %rax,%rdi
   135cd:	e8 0a ff ff ff       	call   134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   135d2:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   135d6:	73 0e                	jae    135e6 <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   135d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   135dc:	48 89 c7             	mov    %rax,%rdi
   135df:	e8 f8 fe ff ff       	call   134dc <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE8max_sizeEv>
   135e4:	eb 04                	jmp    135ea <_ZNKSt6vectorIP13VkSemaphore_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   135e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   135ea:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   135ee:	c9                   	leave
   135ef:	c3                   	ret

00000000000135f0 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   135f0:	55                   	push   %rbp
   135f1:	48 89 e5             	mov    %rsp,%rbp
   135f4:	48 83 ec 10          	sub    $0x10,%rsp
   135f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13600:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13605:	74 15                	je     1361c <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x2c>
   13607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1360b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1360f:	48 89 d6             	mov    %rdx,%rsi
   13612:	48 89 c7             	mov    %rax,%rdi
   13615:	e8 4b 21 00 00       	call   15765 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>
   1361a:	eb 05                	jmp    13621 <_ZNSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE11_M_allocateEm+0x31>
   1361c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13621:	c9                   	leave
   13622:	c3                   	ret

0000000000013623 <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   13623:	55                   	push   %rbp
   13624:	48 89 e5             	mov    %rsp,%rbp
   13627:	48 83 ec 20          	sub    $0x20,%rsp
   1362b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1362f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13633:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13637:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1363b:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1363f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13643:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13647:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1364b:	48 89 c7             	mov    %rax,%rdi
   1364e:	e8 3c 21 00 00       	call   1578f <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13653:	c9                   	leave
   13654:	c3                   	ret
   13655:	90                   	nop

0000000000013656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13656:	55                   	push   %rbp
   13657:	48 89 e5             	mov    %rsp,%rbp
   1365a:	48 83 ec 10          	sub    $0x10,%rsp
   1365e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13666:	48 89 c7             	mov    %rax,%rdi
   13669:	e8 c6 21 00 00       	call   15834 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1366e:	48 89 c7             	mov    %rax,%rdi
   13671:	e8 7c 21 00 00       	call   157f2 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>
   13676:	c9                   	leave
   13677:	c3                   	ret

0000000000013678 <_ZSt27__uninitialized_default_n_aIPP9VkFence_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13678:	55                   	push   %rbp
   13679:	48 89 e5             	mov    %rsp,%rbp
   1367c:	48 83 ec 20          	sub    $0x20,%rsp
   13680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13688:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1368c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13694:	48 89 d6             	mov    %rdx,%rsi
   13697:	48 89 c7             	mov    %rax,%rdi
   1369a:	e8 a3 21 00 00       	call   15842 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>
   1369f:	c9                   	leave
   136a0:	c3                   	ret
   136a1:	90                   	nop

00000000000136a2 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   136a2:	55                   	push   %rbp
   136a3:	48 89 e5             	mov    %rsp,%rbp
   136a6:	53                   	push   %rbx
   136a7:	48 83 ec 38          	sub    $0x38,%rsp
   136ab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   136af:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   136b3:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   136b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136bb:	48 89 c7             	mov    %rax,%rdi
   136be:	e8 93 ff ff ff       	call   13656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   136c3:	48 89 c3             	mov    %rax,%rbx
   136c6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136ca:	48 89 c7             	mov    %rax,%rdi
   136cd:	e8 7a da ff ff       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   136d2:	48 29 c3             	sub    %rax,%rbx
   136d5:	48 89 da             	mov    %rbx,%rdx
   136d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   136dc:	48 39 c2             	cmp    %rax,%rdx
   136df:	0f 92 c0             	setb   %al
   136e2:	84 c0                	test   %al,%al
   136e4:	74 0c                	je     136f2 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   136e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   136ea:	48 89 c7             	mov    %rax,%rdi
   136ed:	e8 be 0a ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   136f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   136f6:	48 89 c7             	mov    %rax,%rdi
   136f9:	e8 4e da ff ff       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   136fe:	48 89 c3             	mov    %rax,%rbx
   13701:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13705:	48 89 c7             	mov    %rax,%rdi
   13708:	e8 3f da ff ff       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1370d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13711:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13715:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13719:	48 89 d6             	mov    %rdx,%rsi
   1371c:	48 89 c7             	mov    %rax,%rdi
   1371f:	e8 a0 01 00 00       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   13724:	48 8b 00             	mov    (%rax),%rax
   13727:	48 01 d8             	add    %rbx,%rax
   1372a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1372e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13732:	48 89 c7             	mov    %rax,%rdi
   13735:	e8 12 da ff ff       	call   1114c <_ZNKSt6vectorIP9VkFence_TSaIS1_EE4sizeEv>
   1373a:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1373e:	72 12                	jb     13752 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   13740:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13744:	48 89 c7             	mov    %rax,%rdi
   13747:	e8 0a ff ff ff       	call   13656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1374c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13750:	73 0e                	jae    13760 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   13752:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13756:	48 89 c7             	mov    %rax,%rdi
   13759:	e8 f8 fe ff ff       	call   13656 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE8max_sizeEv>
   1375e:	eb 04                	jmp    13764 <_ZNKSt6vectorIP9VkFence_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   13760:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13764:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13768:	c9                   	leave
   13769:	c3                   	ret

000000000001376a <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1376a:	55                   	push   %rbp
   1376b:	48 89 e5             	mov    %rsp,%rbp
   1376e:	48 83 ec 10          	sub    $0x10,%rsp
   13772:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13776:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1377a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1377f:	74 15                	je     13796 <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x2c>
   13781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13785:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13789:	48 89 d6             	mov    %rdx,%rsi
   1378c:	48 89 c7             	mov    %rax,%rdi
   1378f:	e8 d7 20 00 00       	call   1586b <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>
   13794:	eb 05                	jmp    1379b <_ZNSt12_Vector_baseIP9VkFence_TSaIS1_EE11_M_allocateEm+0x31>
   13796:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1379b:	c9                   	leave
   1379c:	c3                   	ret

000000000001379d <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1379d:	55                   	push   %rbp
   1379e:	48 89 e5             	mov    %rsp,%rbp
   137a1:	48 83 ec 20          	sub    $0x20,%rsp
   137a5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137a9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137ad:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   137b1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   137b5:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   137b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   137bd:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   137c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c5:	48 89 c7             	mov    %rax,%rdi
   137c8:	e8 c8 20 00 00       	call   15895 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   137cd:	c9                   	leave
   137ce:	c3                   	ret
   137cf:	90                   	nop

00000000000137d0 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   137d0:	55                   	push   %rbp
   137d1:	48 89 e5             	mov    %rsp,%rbp
   137d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   137d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137dc:	48 8b 00             	mov    (%rax),%rax
   137df:	5d                   	pop    %rbp
   137e0:	c3                   	ret

00000000000137e1 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   137e1:	55                   	push   %rbp
   137e2:	48 89 e5             	mov    %rsp,%rbp
   137e5:	53                   	push   %rbx
   137e6:	48 83 ec 38          	sub    $0x38,%rsp
   137ea:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   137ee:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   137f2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   137f6:	48 8b 00             	mov    (%rax),%rax
   137f9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   137fd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13801:	48 89 c7             	mov    %rax,%rdi
   13804:	e8 df 84 ff ff       	call   bce8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13809:	48 89 c3             	mov    %rax,%rbx
   1380c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13810:	48 8b 00             	mov    (%rax),%rax
   13813:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   13817:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1381b:	48 89 c7             	mov    %rax,%rdi
   1381e:	e8 c5 84 ff ff       	call   bce8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13823:	48 29 c3             	sub    %rax,%rbx
   13826:	48 89 da             	mov    %rbx,%rdx
   13829:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1382d:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   13831:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13835:	48 89 d6             	mov    %rdx,%rsi
   13838:	48 89 c7             	mov    %rax,%rdi
   1383b:	e8 80 84 ff ff       	call   bcc0 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   13840:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   13844:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13848:	c9                   	leave
   13849:	c3                   	ret

000000000001384a <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   1384a:	55                   	push   %rbp
   1384b:	48 89 e5             	mov    %rsp,%rbp
   1384e:	48 83 ec 20          	sub    $0x20,%rsp
   13852:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   13856:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1385a:	48 89 c7             	mov    %rax,%rdi
   1385d:	e8 86 84 ff ff       	call   bce8 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   13862:	48 89 c1             	mov    %rax,%rcx
   13865:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   1386c:	9b c4 20 
   1386f:	48 89 c8             	mov    %rcx,%rax
   13872:	48 f7 ea             	imul   %rdx
   13875:	48 89 d0             	mov    %rdx,%rax
   13878:	48 c1 f8 07          	sar    $0x7,%rax
   1387c:	48 c1 f9 3f          	sar    $0x3f,%rcx
   13880:	48 89 ca             	mov    %rcx,%rdx
   13883:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   13886:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1388a:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1388e:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13892:	48 89 d6             	mov    %rdx,%rsi
   13895:	48 89 c7             	mov    %rax,%rdi
   13898:	e8 5b 20 00 00       	call   158f8 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1389d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   138a1:	c9                   	leave
   138a2:	c3                   	ret

00000000000138a3 <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   138a3:	55                   	push   %rbp
   138a4:	48 89 e5             	mov    %rsp,%rbp
   138a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   138ab:	90                   	nop
   138ac:	5d                   	pop    %rbp
   138ad:	c3                   	ret

00000000000138ae <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   138ae:	55                   	push   %rbp
   138af:	48 89 e5             	mov    %rsp,%rbp
   138b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   138ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138be:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
   138c2:	5d                   	pop    %rbp
   138c3:	c3                   	ret

00000000000138c4 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   138c4:	55                   	push   %rbp
   138c5:	48 89 e5             	mov    %rsp,%rbp
   138c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   138cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   138d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138d4:	48 8b 10             	mov    (%rax),%rdx
   138d7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138db:	48 8b 00             	mov    (%rax),%rax
   138de:	48 39 c2             	cmp    %rax,%rdx
   138e1:	73 06                	jae    138e9 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   138e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   138e7:	eb 04                	jmp    138ed <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   138e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   138ed:	5d                   	pop    %rbp
   138ee:	c3                   	ret
   138ef:	90                   	nop

00000000000138f0 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   138f0:	55                   	push   %rbp
   138f1:	48 89 e5             	mov    %rsp,%rbp
   138f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   138f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138fc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13907:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1390e:	00 
   1390f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13913:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1391a:	00 
	{ }
   1391b:	90                   	nop
   1391c:	5d                   	pop    %rbp
   1391d:	c3                   	ret

000000000001391e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1391e:	55                   	push   %rbp
   1391f:	48 89 e5             	mov    %rsp,%rbp
   13922:	48 83 ec 20          	sub    $0x20,%rsp
   13926:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1392a:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   13931:	ff ff 0f 
   13934:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   13938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1393c:	48 89 c7             	mov    %rax,%rdi
   1393f:	e8 df 1f 00 00       	call   15923 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
   13944:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   13948:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1394c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13950:	48 89 d6             	mov    %rdx,%rsi
   13953:	48 89 c7             	mov    %rax,%rdi
   13956:	e8 1d 28 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1395b:	48 8b 00             	mov    (%rax),%rax
      }
   1395e:	c9                   	leave
   1395f:	c3                   	ret

0000000000013960 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   13960:	55                   	push   %rbp
   13961:	48 89 e5             	mov    %rsp,%rbp
   13964:	48 83 ec 10          	sub    $0x10,%rsp
   13968:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1396c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   13970:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13974:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13978:	ba 00 00 00 00       	mov    $0x0,%edx
   1397d:	48 89 ce             	mov    %rcx,%rsi
   13980:	48 89 c7             	mov    %rax,%rdi
   13983:	e8 b6 1f 00 00       	call   1593e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
   13988:	c9                   	leave
   13989:	c3                   	ret

000000000001398a <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   1398a:	55                   	push   %rbp
   1398b:	48 89 e5             	mov    %rsp,%rbp
   1398e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13996:	90                   	nop
   13997:	5d                   	pop    %rbp
   13998:	c3                   	ret
   13999:	90                   	nop

000000000001399a <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1399a:	55                   	push   %rbp
   1399b:	48 89 e5             	mov    %rsp,%rbp
   1399e:	48 83 ec 20          	sub    $0x20,%rsp
   139a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   139aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   139ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   139b9:	00 
   139ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   139be:	48 89 d6             	mov    %rdx,%rsi
   139c1:	48 89 c7             	mov    %rax,%rdi
   139c4:	e8 77 0a ff ff       	call   4440 <_ZdlPvm@plt>
      }
   139c9:	c9                   	leave
   139ca:	c3                   	ret

00000000000139cb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
   139cb:	55                   	push   %rbp
   139cc:	48 89 e5             	mov    %rsp,%rbp
   139cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   139d7:	90                   	nop
   139d8:	5d                   	pop    %rbp
   139d9:	c3                   	ret

00000000000139da <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   139da:	55                   	push   %rbp
   139db:	48 89 e5             	mov    %rsp,%rbp
   139de:	48 83 ec 20          	sub    $0x20,%rsp
   139e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   139ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   139ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139f2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   139f9:	00 
   139fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   139fe:	48 89 d6             	mov    %rdx,%rsi
   13a01:	48 89 c7             	mov    %rax,%rdi
   13a04:	e8 37 0a ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13a09:	c9                   	leave
   13a0a:	c3                   	ret

0000000000013a0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   13a0b:	55                   	push   %rbp
   13a0c:	48 89 e5             	mov    %rsp,%rbp
   13a0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a17:	90                   	nop
   13a18:	5d                   	pop    %rbp
   13a19:	c3                   	ret

0000000000013a1a <_ZNSt15__new_allocatorIP15VkFramebuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13a1a:	55                   	push   %rbp
   13a1b:	48 89 e5             	mov    %rsp,%rbp
   13a1e:	48 83 ec 20          	sub    $0x20,%rsp
   13a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13a2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a32:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13a39:	00 
   13a3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a3e:	48 89 d6             	mov    %rdx,%rsi
   13a41:	48 89 c7             	mov    %rax,%rdi
   13a44:	e8 f7 09 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13a49:	c9                   	leave
   13a4a:	c3                   	ret

0000000000013a4b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP15VkFramebuffer_TEEvT_S5_>:
   13a4b:	55                   	push   %rbp
   13a4c:	48 89 e5             	mov    %rsp,%rbp
   13a4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a53:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a57:	90                   	nop
   13a58:	5d                   	pop    %rbp
   13a59:	c3                   	ret

0000000000013a5a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13a5a:	55                   	push   %rbp
   13a5b:	48 89 e5             	mov    %rsp,%rbp
   13a5e:	48 83 ec 20          	sub    $0x20,%rsp
   13a62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a6a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13a6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13a72:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13a79:	00 
   13a7a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13a7e:	48 89 d6             	mov    %rdx,%rsi
   13a81:	48 89 c7             	mov    %rax,%rdi
   13a84:	e8 b7 09 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13a89:	c9                   	leave
   13a8a:	c3                   	ret

0000000000013a8b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
   13a8b:	55                   	push   %rbp
   13a8c:	48 89 e5             	mov    %rsp,%rbp
   13a8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a97:	90                   	nop
   13a98:	5d                   	pop    %rbp
   13a99:	c3                   	ret

0000000000013a9a <_ZNSt15__new_allocatorIP13VkSemaphore_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13a9a:	55                   	push   %rbp
   13a9b:	48 89 e5             	mov    %rsp,%rbp
   13a9e:	48 83 ec 20          	sub    $0x20,%rsp
   13aa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13aa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13aaa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13aae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ab2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13ab9:	00 
   13aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13abe:	48 89 d6             	mov    %rdx,%rsi
   13ac1:	48 89 c7             	mov    %rax,%rdi
   13ac4:	e8 77 09 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13ac9:	c9                   	leave
   13aca:	c3                   	ret

0000000000013acb <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkSemaphore_TEEvT_S5_>:
   13acb:	55                   	push   %rbp
   13acc:	48 89 e5             	mov    %rsp,%rbp
   13acf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ad3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ad7:	90                   	nop
   13ad8:	5d                   	pop    %rbp
   13ad9:	c3                   	ret

0000000000013ada <_ZNSt15__new_allocatorIP9VkFence_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13ada:	55                   	push   %rbp
   13adb:	48 89 e5             	mov    %rsp,%rbp
   13ade:	48 83 ec 20          	sub    $0x20,%rsp
   13ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ae6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13aea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13aee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13af2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13af9:	00 
   13afa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13afe:	48 89 d6             	mov    %rdx,%rsi
   13b01:	48 89 c7             	mov    %rax,%rdi
   13b04:	e8 37 09 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13b09:	c9                   	leave
   13b0a:	c3                   	ret

0000000000013b0b <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkFence_TEEvT_S5_>:
   13b0b:	55                   	push   %rbp
   13b0c:	48 89 e5             	mov    %rsp,%rbp
   13b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b17:	90                   	nop
   13b18:	5d                   	pop    %rbp
   13b19:	c3                   	ret

0000000000013b1a <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   13b1a:	55                   	push   %rbp
   13b1b:	48 89 e5             	mov    %rsp,%rbp
   13b1e:	48 83 ec 10          	sub    $0x10,%rsp
   13b22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   13b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b2a:	48 89 c7             	mov    %rax,%rdi
   13b2d:	e8 6e 1e 00 00       	call   159a0 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
   13b32:	c9                   	leave
   13b33:	c3                   	ret

0000000000013b34 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13b34:	55                   	push   %rbp
   13b35:	48 89 e5             	mov    %rsp,%rbp
   13b38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13b3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b40:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b4b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13b52:	00 
   13b53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b57:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13b5e:	00 
	{ }
   13b5f:	90                   	nop
   13b60:	5d                   	pop    %rbp
   13b61:	c3                   	ret

0000000000013b62 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13b62:	55                   	push   %rbp
   13b63:	48 89 e5             	mov    %rsp,%rbp
   13b66:	48 83 ec 10          	sub    $0x10,%rsp
   13b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13b72:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13b77:	74 15                	je     13b8e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   13b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b7d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13b81:	48 89 d6             	mov    %rdx,%rsi
   13b84:	48 89 c7             	mov    %rax,%rdi
   13b87:	e8 2e 1e 00 00       	call   159ba <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
   13b8c:	eb 05                	jmp    13b93 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
   13b8e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13b93:	c9                   	leave
   13b94:	c3                   	ret

0000000000013b95 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13b95:	55                   	push   %rbp
   13b96:	48 89 e5             	mov    %rsp,%rbp
   13b99:	48 83 ec 20          	sub    $0x20,%rsp
   13b9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ba1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13ba5:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13ba9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13bad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13bb1:	48 89 d6             	mov    %rdx,%rsi
   13bb4:	48 89 c7             	mov    %rax,%rdi
   13bb7:	e8 28 1e 00 00       	call   159e4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
   13bbc:	c9                   	leave
   13bbd:	c3                   	ret

0000000000013bbe <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
   13bbe:	55                   	push   %rbp
   13bbf:	48 89 e5             	mov    %rsp,%rbp
   13bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bc6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13bca:	90                   	nop
   13bcb:	5d                   	pop    %rbp
   13bcc:	c3                   	ret
   13bcd:	90                   	nop

0000000000013bce <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13bce:	55                   	push   %rbp
   13bcf:	48 89 e5             	mov    %rsp,%rbp
   13bd2:	48 83 ec 20          	sub    $0x20,%rsp
   13bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13bde:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13be2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13be6:	48 89 d0             	mov    %rdx,%rax
   13be9:	48 c1 e0 06          	shl    $0x6,%rax
   13bed:	48 01 d0             	add    %rdx,%rax
   13bf0:	48 c1 e0 02          	shl    $0x2,%rax
   13bf4:	48 89 c2             	mov    %rax,%rdx
   13bf7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13bfb:	48 89 d6             	mov    %rdx,%rsi
   13bfe:	48 89 c7             	mov    %rax,%rdi
   13c01:	e8 3a 08 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13c06:	c9                   	leave
   13c07:	c3                   	ret

0000000000013c08 <_ZSt18uninitialized_copyIPPKcS2_ET0_T_S4_S3_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   13c08:	55                   	push   %rbp
   13c09:	48 89 e5             	mov    %rsp,%rbp
   13c0c:	48 83 ec 30          	sub    $0x30,%rsp
   13c10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13c18:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   13c1c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   13c20:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   13c24:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13c28:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c30:	48 89 ce             	mov    %rcx,%rsi
   13c33:	48 89 c7             	mov    %rax,%rdi
   13c36:	e8 09 1e 00 00       	call   15a44 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>
    }
   13c3b:	c9                   	leave
   13c3c:	c3                   	ret
   13c3d:	90                   	nop

0000000000013c3e <_ZNSt15__new_allocatorIPKcE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   13c3e:	55                   	push   %rbp
   13c3f:	48 89 e5             	mov    %rsp,%rbp
   13c42:	53                   	push   %rbx
   13c43:	48 83 ec 28          	sub    $0x28,%rsp
   13c47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13c4f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   13c53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c57:	48 89 c6             	mov    %rax,%rsi
   13c5a:	bf 08 00 00 00       	mov    $0x8,%edi
   13c5f:	e8 09 17 ff ff       	call   536d <_ZnwmPv>
   13c64:	48 89 c3             	mov    %rax,%rbx
   13c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c6b:	48 89 c7             	mov    %rax,%rdi
   13c6e:	e8 c5 dc ff ff       	call   11938 <_ZSt7forwardIPKcEOT_RNSt16remove_referenceIS2_E4typeE>
   13c73:	48 8b 00             	mov    (%rax),%rax
   13c76:	48 89 03             	mov    %rax,(%rbx)
   13c79:	90                   	nop
   13c7a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13c7e:	c9                   	leave
   13c7f:	c3                   	ret

0000000000013c80 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   13c80:	55                   	push   %rbp
   13c81:	48 89 e5             	mov    %rsp,%rbp
   13c84:	53                   	push   %rbx
   13c85:	48 83 ec 38          	sub    $0x38,%rsp
   13c89:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13c8d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13c91:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   13c95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13c99:	48 89 c7             	mov    %rax,%rdi
   13c9c:	e8 d1 1d 00 00       	call   15a72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13ca1:	48 89 c3             	mov    %rax,%rbx
   13ca4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ca8:	48 89 c7             	mov    %rax,%rdi
   13cab:	e8 88 8f ff ff       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13cb0:	48 29 c3             	sub    %rax,%rbx
   13cb3:	48 89 da             	mov    %rbx,%rdx
   13cb6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13cba:	48 39 c2             	cmp    %rax,%rdx
   13cbd:	0f 92 c0             	setb   %al
   13cc0:	84 c0                	test   %al,%al
   13cc2:	74 0c                	je     13cd0 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   13cc4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13cc8:	48 89 c7             	mov    %rax,%rdi
   13ccb:	e8 e0 04 ff ff       	call   41b0 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   13cd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13cd4:	48 89 c7             	mov    %rax,%rdi
   13cd7:	e8 5c 8f ff ff       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13cdc:	48 89 c3             	mov    %rax,%rbx
   13cdf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ce3:	48 89 c7             	mov    %rax,%rdi
   13ce6:	e8 4d 8f ff ff       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13ceb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   13cef:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   13cf3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13cf7:	48 89 d6             	mov    %rdx,%rsi
   13cfa:	48 89 c7             	mov    %rax,%rdi
   13cfd:	e8 c2 fb ff ff       	call   138c4 <_ZSt3maxImERKT_S2_S2_>
   13d02:	48 8b 00             	mov    (%rax),%rax
   13d05:	48 01 d8             	add    %rbx,%rax
   13d08:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13d0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d10:	48 89 c7             	mov    %rax,%rdi
   13d13:	e8 20 8f ff ff       	call   cc38 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   13d18:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13d1c:	72 12                	jb     13d30 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   13d1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d22:	48 89 c7             	mov    %rax,%rdi
   13d25:	e8 48 1d 00 00       	call   15a72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13d2a:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13d2e:	73 0e                	jae    13d3e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   13d30:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13d34:	48 89 c7             	mov    %rax,%rdi
   13d37:	e8 36 1d 00 00       	call   15a72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   13d3c:	eb 04                	jmp    13d42 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   13d3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13d42:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d46:	c9                   	leave
   13d47:	c3                   	ret

0000000000013d48 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   13d48:	55                   	push   %rbp
   13d49:	48 89 e5             	mov    %rsp,%rbp
   13d4c:	53                   	push   %rbx
   13d4d:	48 83 ec 18          	sub    $0x18,%rsp
   13d51:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13d55:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   13d59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d5d:	48 89 c7             	mov    %rax,%rdi
   13d60:	e8 2d b2 ff ff       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13d65:	48 8b 18             	mov    (%rax),%rbx
   13d68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13d6c:	48 89 c7             	mov    %rax,%rdi
   13d6f:	e8 1e b2 ff ff       	call   ef92 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   13d74:	48 8b 00             	mov    (%rax),%rax
   13d77:	48 89 da             	mov    %rbx,%rdx
   13d7a:	48 29 c2             	sub    %rax,%rdx
   13d7d:	48 89 d0             	mov    %rdx,%rax
   13d80:	48 c1 f8 03          	sar    $0x3,%rax
   13d84:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d88:	c9                   	leave
   13d89:	c3                   	ret

0000000000013d8a <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   13d8a:	55                   	push   %rbp
   13d8b:	48 89 e5             	mov    %rsp,%rbp
   13d8e:	48 83 ec 20          	sub    $0x20,%rsp
   13d92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d96:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13d9a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13d9e:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13da2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13da6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13daa:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13db2:	48 89 c7             	mov    %rax,%rdi
   13db5:	e8 da 1c 00 00       	call   15a94 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   13dba:	c9                   	leave
   13dbb:	c3                   	ret

0000000000013dbc <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   13dbc:	55                   	push   %rbp
   13dbd:	48 89 e5             	mov    %rsp,%rbp
   13dc0:	48 83 ec 20          	sub    $0x20,%rsp
   13dc4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13dc8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   13dcc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13dd0:	48 8b 00             	mov    (%rax),%rax
   13dd3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13dd7:	48 c1 e2 03          	shl    $0x3,%rdx
   13ddb:	48 f7 da             	neg    %rdx
   13dde:	48 01 d0             	add    %rdx,%rax
   13de1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   13de5:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   13de9:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   13ded:	48 89 d6             	mov    %rdx,%rsi
   13df0:	48 89 c7             	mov    %rax,%rdi
   13df3:	e8 7c b1 ff ff       	call   ef74 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   13df8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13dfc:	c9                   	leave
   13dfd:	c3                   	ret

0000000000013dfe <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   13dfe:	55                   	push   %rbp
   13dff:	48 89 e5             	mov    %rsp,%rbp
   13e02:	48 83 ec 20          	sub    $0x20,%rsp
   13e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e0a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e0e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   13e12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e16:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13e1d:	00 
   13e1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13e22:	48 89 d6             	mov    %rdx,%rsi
   13e25:	48 89 c7             	mov    %rax,%rdi
   13e28:	e8 13 06 ff ff       	call   4440 <_ZdlPvm@plt>
      }
   13e2d:	c9                   	leave
   13e2e:	c3                   	ret

0000000000013e2f <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   13e2f:	55                   	push   %rbp
   13e30:	48 89 e5             	mov    %rsp,%rbp
   13e33:	48 83 ec 10          	sub    $0x10,%rsp
   13e37:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   13e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e3f:	48 89 c7             	mov    %rax,%rdi
   13e42:	e8 b1 1c 00 00       	call   15af8 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
   13e47:	c9                   	leave
   13e48:	c3                   	ret
   13e49:	90                   	nop

0000000000013e4a <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   13e4a:	55                   	push   %rbp
   13e4b:	48 89 e5             	mov    %rsp,%rbp
   13e4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e52:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13e56:	90                   	nop
   13e57:	5d                   	pop    %rbp
   13e58:	c3                   	ret
   13e59:	90                   	nop

0000000000013e5a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   13e5a:	55                   	push   %rbp
   13e5b:	48 89 e5             	mov    %rsp,%rbp
   13e5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   13e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e66:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   13e6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e71:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13e78:	00 
   13e79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e7d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   13e84:	00 
	{ }
   13e85:	90                   	nop
   13e86:	5d                   	pop    %rbp
   13e87:	c3                   	ret

0000000000013e88 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13e88:	55                   	push   %rbp
   13e89:	48 89 e5             	mov    %rsp,%rbp
   13e8c:	48 83 ec 10          	sub    $0x10,%rsp
   13e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13e94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13e98:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13e9d:	74 15                	je     13eb4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   13e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ea3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13ea7:	48 89 d6             	mov    %rdx,%rsi
   13eaa:	48 89 c7             	mov    %rax,%rdi
   13ead:	e8 60 1c 00 00       	call   15b12 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
   13eb2:	eb 05                	jmp    13eb9 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
   13eb4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13eb9:	c9                   	leave
   13eba:	c3                   	ret

0000000000013ebb <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13ebb:	55                   	push   %rbp
   13ebc:	48 89 e5             	mov    %rsp,%rbp
   13ebf:	48 83 ec 20          	sub    $0x20,%rsp
   13ec3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ec7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ecb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13ecf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13ed3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13edb:	48 89 ce             	mov    %rcx,%rsi
   13ede:	48 89 c7             	mov    %rax,%rdi
   13ee1:	e8 56 1c 00 00       	call   15b3c <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
   13ee6:	90                   	nop
   13ee7:	c9                   	leave
   13ee8:	c3                   	ret

0000000000013ee9 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13ee9:	55                   	push   %rbp
   13eea:	48 89 e5             	mov    %rsp,%rbp
   13eed:	48 83 ec 20          	sub    $0x20,%rsp
   13ef1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ef5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13ef9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13efd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13f01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f05:	48 89 d6             	mov    %rdx,%rsi
   13f08:	48 89 c7             	mov    %rax,%rdi
   13f0b:	e8 66 1c 00 00       	call   15b76 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
   13f10:	c9                   	leave
   13f11:	c3                   	ret

0000000000013f12 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
   13f12:	55                   	push   %rbp
   13f13:	48 89 e5             	mov    %rsp,%rbp
   13f16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f1a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13f1e:	90                   	nop
   13f1f:	5d                   	pop    %rbp
   13f20:	c3                   	ret
   13f21:	90                   	nop

0000000000013f22 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13f22:	55                   	push   %rbp
   13f23:	48 89 e5             	mov    %rsp,%rbp
   13f26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f2a:	90                   	nop
   13f2b:	5d                   	pop    %rbp
   13f2c:	c3                   	ret

0000000000013f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13f2d:	55                   	push   %rbp
   13f2e:	48 89 e5             	mov    %rsp,%rbp
   13f31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13f35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f39:	5d                   	pop    %rbp
   13f3a:	c3                   	ret
   13f3b:	90                   	nop

0000000000013f3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeC1IJRKPKcEEERSB_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   13f3c:	55                   	push   %rbp
   13f3d:	48 89 e5             	mov    %rsp,%rbp
   13f40:	48 83 ec 20          	sub    $0x20,%rsp
   13f44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13f48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13f4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  : _M_t(__t),
   13f50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f54:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13f58:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   13f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f5f:	48 89 c7             	mov    %rax,%rdi
   13f62:	e8 c6 ff ff ff       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   13f67:	48 89 c2             	mov    %rax,%rdx
   13f6a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f6e:	48 89 d6             	mov    %rdx,%rsi
   13f71:	48 89 c7             	mov    %rax,%rdi
   13f74:	e8 5d 1c 00 00       	call   15bd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>
   13f79:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13f7d:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   13f81:	90                   	nop
   13f82:	c9                   	leave
   13f83:	c3                   	ret

0000000000013f84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   13f84:	55                   	push   %rbp
   13f85:	48 89 e5             	mov    %rsp,%rbp
   13f88:	48 83 ec 10          	sub    $0x10,%rsp
   13f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   13f90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f94:	48 8b 40 08          	mov    0x8(%rax),%rax
   13f98:	48 85 c0             	test   %rax,%rax
   13f9b:	74 1a                	je     13fb7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   13f9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fa1:	48 8b 00             	mov    (%rax),%rax
   13fa4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13fa8:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   13fac:	48 89 d6             	mov    %rdx,%rsi
   13faf:	48 89 c7             	mov    %rax,%rdi
   13fb2:	e8 d5 de ff ff       	call   11e8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
	}
   13fb7:	90                   	nop
   13fb8:	c9                   	leave
   13fb9:	c3                   	ret

0000000000013fba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13fba:	55                   	push   %rbp
   13fbb:	48 89 e5             	mov    %rsp,%rbp
   13fbe:	53                   	push   %rbx
   13fbf:	48 83 ec 78          	sub    $0x78,%rsp
   13fc3:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   13fc7:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   13fcb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13fcf:	48 89 c7             	mov    %rax,%rdi
   13fd2:	e8 df b0 ff ff       	call   f0b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   13fd7:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   13fdb:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13fdf:	48 89 c7             	mov    %rax,%rdi
   13fe2:	e8 8f 02 00 00       	call   14276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   13fe7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   13feb:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13fef:	eb 51                	jmp    14042 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x88>
	  __y = __x;
   13ff1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13ff5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   13ff9:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13ffd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14001:	48 89 c7             	mov    %rax,%rdi
   14004:	e8 7f 02 00 00       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   14009:	48 89 c2             	mov    %rax,%rdx
   1400c:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14010:	48 89 c6             	mov    %rax,%rsi
   14013:	48 89 df             	mov    %rbx,%rdi
   14016:	e8 99 02 00 00       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1401b:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1401e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14022:	74 0e                	je     14032 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x78>
   14024:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14028:	48 89 c7             	mov    %rax,%rdi
   1402b:	e8 4a de ff ff       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   14030:	eb 0c                	jmp    1403e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
   14032:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14036:	48 89 c7             	mov    %rax,%rdi
   14039:	e8 2a de ff ff       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   1403e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   14042:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14046:	48 85 c0             	test   %rax,%rax
   14049:	75 a6                	jne    13ff1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x37>
      iterator __j = iterator(__y);
   1404b:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1404f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   14053:	48 89 d6             	mov    %rdx,%rsi
   14056:	48 89 c7             	mov    %rax,%rdi
   14059:	e8 8a 01 00 00       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   1405e:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   14062:	74 54                	je     140b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xfe>
	  if (__j == begin())
   14064:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   14068:	48 89 c7             	mov    %rax,%rdi
   1406b:	e8 d8 03 00 00       	call   14448 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>
   14070:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   14074:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   14078:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1407c:	48 89 d6             	mov    %rdx,%rsi
   1407f:	48 89 c7             	mov    %rax,%rdi
   14082:	e8 97 1b 00 00       	call   15c1e <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>
   14087:	84 c0                	test   %al,%al
   14089:	74 21                	je     140ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf2>
	    return _Res(__x, __y);
   1408b:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1408f:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   14093:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   14097:	48 89 ce             	mov    %rcx,%rsi
   1409a:	48 89 c7             	mov    %rax,%rdi
   1409d:	e8 9e 1b 00 00       	call   15c40 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
   140a2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   140a6:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   140aa:	eb 7d                	jmp    14129 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
	    --__j;
   140ac:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   140b0:	48 89 c7             	mov    %rax,%rdi
   140b3:	e8 cc 1b 00 00       	call   15c84 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   140b8:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   140bc:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   140c0:	48 89 c7             	mov    %rax,%rdi
   140c3:	e8 e4 1b 00 00       	call   15cac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
   140c8:	48 89 c1             	mov    %rax,%rcx
   140cb:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   140cf:	48 89 c2             	mov    %rax,%rdx
   140d2:	48 89 ce             	mov    %rcx,%rsi
   140d5:	48 89 df             	mov    %rbx,%rdi
   140d8:	e8 d7 01 00 00       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   140dd:	84 c0                	test   %al,%al
   140df:	74 21                	je     14102 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x148>
	return _Res(__x, __y);
   140e1:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   140e5:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   140e9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   140ed:	48 89 ce             	mov    %rcx,%rsi
   140f0:	48 89 c7             	mov    %rax,%rdi
   140f3:	e8 48 1b 00 00       	call   15c40 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>
   140f8:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   140fc:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14100:	eb 27                	jmp    14129 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x16f>
      return _Res(__j._M_node, 0);
   14102:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   14109:	00 
   1410a:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1410e:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   14112:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14116:	48 89 ce             	mov    %rcx,%rsi
   14119:	48 89 c7             	mov    %rax,%rdi
   1411c:	e8 a5 1b 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14121:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14125:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   14129:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1412d:	c9                   	leave
   1412e:	c3                   	ret
   1412f:	90                   	nop

0000000000014130 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   14130:	55                   	push   %rbp
   14131:	48 89 e5             	mov    %rsp,%rbp
   14134:	48 83 ec 10          	sub    $0x10,%rsp
   14138:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   1413c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14140:	48 8b 40 08          	mov    0x8(%rax),%rax
   14144:	48 89 c7             	mov    %rax,%rdi
   14147:	e8 3c 01 00 00       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   1414c:	c9                   	leave
   1414d:	c3                   	ret

000000000001414e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_Auto_node9_M_insertESt4pairIPSt18_Rb_tree_node_baseSF_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   1414e:	55                   	push   %rbp
   1414f:	48 89 e5             	mov    %rsp,%rbp
   14152:	48 83 ec 30          	sub    $0x30,%rsp
   14156:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1415a:	48 89 d1             	mov    %rdx,%rcx
   1415d:	48 89 f0             	mov    %rsi,%rax
   14160:	48 89 fa             	mov    %rdi,%rdx
   14163:	48 89 ca             	mov    %rcx,%rdx
   14166:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1416a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   1416e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14172:	48 8b 00             	mov    (%rax),%rax
   14175:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14179:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   1417d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14181:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   14185:	48 89 c7             	mov    %rax,%rdi
   14188:	e8 69 1b 00 00       	call   15cf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>
   1418d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   14191:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14195:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1419c:	00 
	  return __it;
   1419d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   141a1:	c9                   	leave
   141a2:	c3                   	ret
   141a3:	90                   	nop

00000000000141a4 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbEC1IS7_bLb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   141a4:	55                   	push   %rbp
   141a5:	48 89 e5             	mov    %rsp,%rbp
   141a8:	48 83 ec 20          	sub    $0x20,%rsp
   141ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   141b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   141b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   141bc:	48 89 c7             	mov    %rax,%rdi
   141bf:	e8 f5 1b 00 00       	call   15db9 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   141c4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   141c8:	48 8b 00             	mov    (%rax),%rax
   141cb:	48 89 02             	mov    %rax,(%rdx)
   141ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   141d2:	48 89 c7             	mov    %rax,%rdi
   141d5:	e8 ed 1b 00 00       	call   15dc7 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>
   141da:	0f b6 10             	movzbl (%rax),%edx
   141dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141e1:	88 50 08             	mov    %dl,0x8(%rax)
   141e4:	90                   	nop
   141e5:	c9                   	leave
   141e6:	c3                   	ret
   141e7:	90                   	nop

00000000000141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   141e8:	55                   	push   %rbp
   141e9:	48 89 e5             	mov    %rsp,%rbp
   141ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   141f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   141fc:	48 89 10             	mov    %rdx,(%rax)
   141ff:	90                   	nop
   14200:	5d                   	pop    %rbp
   14201:	c3                   	ret

0000000000014202 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14202:	55                   	push   %rbp
   14203:	48 89 e5             	mov    %rsp,%rbp
   14206:	53                   	push   %rbx
   14207:	48 83 ec 18          	sub    $0x18,%rsp
   1420b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1420f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   14213:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14217:	48 89 c7             	mov    %rax,%rdi
   1421a:	e8 c5 1b 00 00       	call   15de4 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   1421f:	48 89 c3             	mov    %rax,%rbx
   14222:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14226:	48 89 c7             	mov    %rax,%rdi
   14229:	e8 a8 1b 00 00       	call   15dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   1422e:	48 89 de             	mov    %rbx,%rsi
   14231:	48 89 c7             	mov    %rax,%rdi
   14234:	e8 c9 1b 00 00       	call   15e02 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>
      }
   14239:	90                   	nop
   1423a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1423e:	c9                   	leave
   1423f:	c3                   	ret

0000000000014240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14240:	55                   	push   %rbp
   14241:	48 89 e5             	mov    %rsp,%rbp
   14244:	48 83 ec 10          	sub    $0x10,%rsp
   14248:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1424c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   14250:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14254:	48 89 c7             	mov    %rax,%rdi
   14257:	e8 7a 1b 00 00       	call   15dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   1425c:	48 89 c1             	mov    %rax,%rcx
   1425f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14263:	ba 01 00 00 00       	mov    $0x1,%edx
   14268:	48 89 c6             	mov    %rax,%rsi
   1426b:	48 89 cf             	mov    %rcx,%rdi
   1426e:	e8 b5 1b 00 00       	call   15e28 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>
   14273:	90                   	nop
   14274:	c9                   	leave
   14275:	c3                   	ret

0000000000014276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   14276:	55                   	push   %rbp
   14277:	48 89 e5             	mov    %rsp,%rbp
   1427a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1427e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14282:	48 83 c0 08          	add    $0x8,%rax
   14286:	5d                   	pop    %rbp
   14287:	c3                   	ret

0000000000014288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>:
      _S_key(_Const_Link_type __x)
   14288:	55                   	push   %rbp
   14289:	48 89 e5             	mov    %rsp,%rbp
   1428c:	48 83 ec 20          	sub    $0x20,%rsp
   14290:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   14294:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14298:	48 89 c7             	mov    %rax,%rdi
   1429b:	e8 b6 1b 00 00       	call   15e56 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   142a0:	48 89 c2             	mov    %rax,%rdx
   142a3:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   142a7:	48 89 d6             	mov    %rdx,%rsi
   142aa:	48 89 c7             	mov    %rax,%rdi
   142ad:	e8 c2 1b 00 00       	call   15e74 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>
      }
   142b2:	c9                   	leave
   142b3:	c3                   	ret

00000000000142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   142b4:	55                   	push   %rbp
   142b5:	48 89 e5             	mov    %rsp,%rbp
   142b8:	48 83 ec 20          	sub    $0x20,%rsp
   142bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   142c8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   142cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142d0:	48 89 d6             	mov    %rdx,%rsi
   142d3:	48 89 c7             	mov    %rax,%rdi
   142d6:	e8 ab 1b 00 00       	call   15e86 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   142db:	c9                   	leave
   142dc:	c3                   	ret
   142dd:	90                   	nop

00000000000142de <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   142de:	55                   	push   %rbp
   142df:	48 89 e5             	mov    %rsp,%rbp
   142e2:	53                   	push   %rbx
   142e3:	48 83 ec 38          	sub    $0x38,%rsp
   142e7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   142eb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   142ef:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   142f3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   142f7:	eb 56                	jmp    1434f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   142f9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   142fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14301:	48 89 c7             	mov    %rax,%rdi
   14304:	e8 7f ff ff ff       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   14309:	48 89 c1             	mov    %rax,%rcx
   1430c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14310:	48 89 c2             	mov    %rax,%rdx
   14313:	48 89 ce             	mov    %rcx,%rsi
   14316:	48 89 df             	mov    %rbx,%rdi
   14319:	e8 96 ff ff ff       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1431e:	83 f0 01             	xor    $0x1,%eax
   14321:	84 c0                	test   %al,%al
   14323:	74 1a                	je     1433f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x61>
	  __y = __x, __x = _S_left(__x);
   14325:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14329:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   1432d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14331:	48 89 c7             	mov    %rax,%rdi
   14334:	e8 41 db ff ff       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   14339:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   1433d:	eb 10                	jmp    1434f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x71>
	  __x = _S_right(__x);
   1433f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14343:	48 89 c7             	mov    %rax,%rdi
   14346:	e8 1d db ff ff       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   1434b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   1434f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14354:	75 a3                	jne    142f9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
   14356:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1435a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1435e:	48 89 d6             	mov    %rdx,%rsi
   14361:	48 89 c7             	mov    %rax,%rdi
   14364:	e8 7f fe ff ff       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   14369:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   1436d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14371:	c9                   	leave
   14372:	c3                   	ret
   14373:	90                   	nop

0000000000014374 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14374:	55                   	push   %rbp
   14375:	48 89 e5             	mov    %rsp,%rbp
   14378:	53                   	push   %rbx
   14379:	48 83 ec 38          	sub    $0x38,%rsp
   1437d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14381:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14385:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   14389:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   1438d:	eb 50                	jmp    143df <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	if (_M_impl._M_key_compare(__k, _S_key(__x)))
   1438f:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   14393:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14397:	48 89 c7             	mov    %rax,%rdi
   1439a:	e8 e9 fe ff ff       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   1439f:	48 89 c2             	mov    %rax,%rdx
   143a2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   143a6:	48 89 c6             	mov    %rax,%rsi
   143a9:	48 89 df             	mov    %rbx,%rdi
   143ac:	e8 03 ff ff ff       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   143b1:	84 c0                	test   %al,%al
   143b3:	74 1a                	je     143cf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x5b>
	  __y = __x, __x = _S_left(__x);
   143b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143b9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   143bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143c1:	48 89 c7             	mov    %rax,%rdi
   143c4:	e8 b1 da ff ff       	call   11e7a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base>
   143c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   143cd:	eb 10                	jmp    143df <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x6b>
	  __x = _S_right(__x);
   143cf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   143d3:	48 89 c7             	mov    %rax,%rdi
   143d6:	e8 8d da ff ff       	call   11e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base>
   143db:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   143df:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   143e4:	75 a9                	jne    1438f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS5_EPSt18_Rb_tree_node_baseRKS5_+0x1b>
      return iterator(__y);
   143e6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   143ea:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   143ee:	48 89 d6             	mov    %rdx,%rsi
   143f1:	48 89 c7             	mov    %rax,%rdi
   143f4:	e8 ef fd ff ff       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   143f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   143fd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14401:	c9                   	leave
   14402:	c3                   	ret
   14403:	90                   	nop

0000000000014404 <_ZNSt4pairISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_EC1IS7_S7_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14404:	55                   	push   %rbp
   14405:	48 89 e5             	mov    %rsp,%rbp
   14408:	48 83 ec 20          	sub    $0x20,%rsp
   1440c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14410:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14414:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14418:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1441c:	48 89 c7             	mov    %rax,%rdi
   1441f:	e8 95 19 00 00       	call   15db9 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   14424:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14428:	48 8b 00             	mov    (%rax),%rax
   1442b:	48 89 02             	mov    %rax,(%rdx)
   1442e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14432:	48 89 c7             	mov    %rax,%rdi
   14435:	e8 7f 19 00 00       	call   15db9 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>
   1443a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1443e:	48 8b 00             	mov    (%rax),%rax
   14441:	48 89 42 08          	mov    %rax,0x8(%rdx)
   14445:	90                   	nop
   14446:	c9                   	leave
   14447:	c3                   	ret

0000000000014448 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14448:	55                   	push   %rbp
   14449:	48 89 e5             	mov    %rsp,%rbp
   1444c:	48 83 ec 20          	sub    $0x20,%rsp
   14450:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   14454:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14458:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1445c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14460:	48 89 d6             	mov    %rdx,%rsi
   14463:	48 89 c7             	mov    %rax,%rdi
   14466:	e8 7d fd ff ff       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   1446b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1446f:	c9                   	leave
   14470:	c3                   	ret

0000000000014471 <_ZSteqRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   14471:	55                   	push   %rbp
   14472:	48 89 e5             	mov    %rsp,%rbp
   14475:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14479:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   1447d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14481:	48 8b 10             	mov    (%rax),%rdx
   14484:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14488:	48 8b 00             	mov    (%rax),%rax
   1448b:	48 39 c2             	cmp    %rax,%rdx
   1448e:	0f 94 c0             	sete   %al
   14491:	5d                   	pop    %rbp
   14492:	c3                   	ret
   14493:	90                   	nop

0000000000014494 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   14494:	55                   	push   %rbp
   14495:	48 89 e5             	mov    %rsp,%rbp
   14498:	48 83 ec 20          	sub    $0x20,%rsp
   1449c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   144a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   144a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   144a8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   144ac:	48 89 d6             	mov    %rdx,%rsi
   144af:	48 89 c7             	mov    %rax,%rdi
   144b2:	e8 31 fd ff ff       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   144b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144bb:	c9                   	leave
   144bc:	c3                   	ret
   144bd:	90                   	nop

00000000000144be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE5clearEv>:
      clear() _GLIBCXX_NOEXCEPT
   144be:	55                   	push   %rbp
   144bf:	48 89 e5             	mov    %rsp,%rbp
   144c2:	48 83 ec 10          	sub    $0x10,%rsp
   144c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_erase(_M_begin());
   144ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ce:	48 89 c7             	mov    %rax,%rdi
   144d1:	e8 e0 ab ff ff       	call   f0b6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_beginEv>
   144d6:	48 89 c2             	mov    %rax,%rdx
   144d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144dd:	48 89 d6             	mov    %rdx,%rsi
   144e0:	48 89 c7             	mov    %rax,%rdi
   144e3:	e8 68 ab ff ff       	call   f050 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
	_M_impl._M_reset();
   144e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ec:	48 83 c0 08          	add    $0x8,%rax
   144f0:	48 89 c7             	mov    %rax,%rdi
   144f3:	e8 94 78 ff ff       	call   bd8c <_ZNSt15_Rb_tree_header8_M_resetEv>
      }
   144f8:	90                   	nop
   144f9:	c9                   	leave
   144fa:	c3                   	ret

00000000000144fb <_ZStneRKSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   144fb:	55                   	push   %rbp
   144fc:	48 89 e5             	mov    %rsp,%rbp
   144ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14503:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node != __y._M_node; }
   14507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1450b:	48 8b 10             	mov    (%rax),%rdx
   1450e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14512:	48 8b 00             	mov    (%rax),%rax
   14515:	48 39 c2             	cmp    %rax,%rdx
   14518:	0f 95 c0             	setne  %al
   1451b:	5d                   	pop    %rbp
   1451c:	c3                   	ret
   1451d:	90                   	nop

000000000001451e <_ZNSt23_Rb_tree_const_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEi>:
      operator++(int) _GLIBCXX_NOEXCEPT
   1451e:	55                   	push   %rbp
   1451f:	48 89 e5             	mov    %rsp,%rbp
   14522:	48 83 ec 20          	sub    $0x20,%rsp
   14526:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1452a:	89 75 e4             	mov    %esi,-0x1c(%rbp)
	_Self __tmp = *this;
   1452d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14531:	48 8b 00             	mov    (%rax),%rax
   14534:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   14538:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1453c:	48 8b 00             	mov    (%rax),%rax
   1453f:	48 89 c7             	mov    %rax,%rdi
   14542:	e8 e9 ff fe ff       	call   4530 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@plt>
   14547:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1454b:	48 89 02             	mov    %rax,(%rdx)
	return __tmp;
   1454e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14552:	c9                   	leave
   14553:	c3                   	ret

0000000000014554 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14554:	55                   	push   %rbp
   14555:	48 89 e5             	mov    %rsp,%rbp
   14558:	48 83 ec 20          	sub    $0x20,%rsp
   1455c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14560:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
				 this->_M_impl._M_header));
   14564:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14568:	48 8d 50 08          	lea    0x8(%rax),%rdx
				(const_cast<_Base_ptr>(__position._M_node),
   1456c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14570:	48 89 d6             	mov    %rdx,%rsi
   14573:	48 89 c7             	mov    %rax,%rdi
   14576:	e8 a5 fc fe ff       	call   4220 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@plt>
   1457b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      _M_drop_node(__y);
   1457f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14583:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14587:	48 89 d6             	mov    %rdx,%rsi
   1458a:	48 89 c7             	mov    %rax,%rdi
   1458d:	e8 fa d8 ff ff       	call   11e8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E>
      --_M_impl._M_node_count;
   14592:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14596:	48 8b 40 28          	mov    0x28(%rax),%rax
   1459a:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
   1459e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   145a2:	48 89 50 28          	mov    %rdx,0x28(%rax)
    }
   145a6:	90                   	nop
   145a7:	c9                   	leave
   145a8:	c3                   	ret
   145a9:	90                   	nop

00000000000145aa <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   145aa:	55                   	push   %rbp
   145ab:	48 89 e5             	mov    %rsp,%rbp
   145ae:	48 83 ec 20          	sub    $0x20,%rsp
   145b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   145ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   145be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   145c2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   145c9:	00 
   145ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145ce:	48 89 d6             	mov    %rdx,%rsi
   145d1:	48 89 c7             	mov    %rax,%rdi
   145d4:	e8 67 fe fe ff       	call   4440 <_ZdlPvm@plt>
      }
   145d9:	c9                   	leave
   145da:	c3                   	ret

00000000000145db <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
   145db:	55                   	push   %rbp
   145dc:	48 89 e5             	mov    %rsp,%rbp
   145df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   145e7:	90                   	nop
   145e8:	5d                   	pop    %rbp
   145e9:	c3                   	ret

00000000000145ea <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   145ea:	55                   	push   %rbp
   145eb:	48 89 e5             	mov    %rsp,%rbp
   145ee:	48 83 ec 20          	sub    $0x20,%rsp
   145f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   145fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   145fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14602:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14609:	00 
   1460a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1460e:	48 89 d6             	mov    %rdx,%rsi
   14611:	48 89 c7             	mov    %rax,%rdi
   14614:	e8 27 fe fe ff       	call   4440 <_ZdlPvm@plt>
      }
   14619:	c9                   	leave
   1461a:	c3                   	ret

000000000001461b <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
   1461b:	55                   	push   %rbp
   1461c:	48 89 e5             	mov    %rsp,%rbp
   1461f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14623:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14627:	90                   	nop
   14628:	5d                   	pop    %rbp
   14629:	c3                   	ret

000000000001462a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1462a:	55                   	push   %rbp
   1462b:	48 89 e5             	mov    %rsp,%rbp
   1462e:	48 83 ec 20          	sub    $0x20,%rsp
   14632:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14636:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1463d:	ff ff 0f 
   14640:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14644:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14648:	48 89 c7             	mov    %rax,%rdi
   1464b:	e8 5e 18 00 00       	call   15eae <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
   14650:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   14654:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14658:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1465c:	48 89 d6             	mov    %rdx,%rsi
   1465f:	48 89 c7             	mov    %rax,%rdi
   14662:	e8 11 1b ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   14667:	48 8b 00             	mov    (%rax),%rax
      }
   1466a:	c9                   	leave
   1466b:	c3                   	ret

000000000001466c <_ZNKSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1466c:	55                   	push   %rbp
   1466d:	48 89 e5             	mov    %rsp,%rbp
   14670:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14674:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14678:	5d                   	pop    %rbp
   14679:	c3                   	ret

000000000001467a <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1467a:	55                   	push   %rbp
   1467b:	48 89 e5             	mov    %rsp,%rbp
   1467e:	48 83 ec 20          	sub    $0x20,%rsp
   14682:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14686:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1468a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1468e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14692:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14696:	48 89 d6             	mov    %rdx,%rsi
   14699:	48 89 c7             	mov    %rax,%rdi
   1469c:	e8 27 18 00 00       	call   15ec8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
   146a1:	c9                   	leave
   146a2:	c3                   	ret

00000000000146a3 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   146a3:	55                   	push   %rbp
   146a4:	48 89 e5             	mov    %rsp,%rbp
   146a7:	48 83 ec 10          	sub    $0x10,%rsp
   146ab:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146af:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   146b3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   146b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146bb:	ba 00 00 00 00       	mov    $0x0,%edx
   146c0:	48 89 ce             	mov    %rcx,%rsi
   146c3:	48 89 c7             	mov    %rax,%rdi
   146c6:	e8 5b 18 00 00       	call   15f26 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
   146cb:	c9                   	leave
   146cc:	c3                   	ret

00000000000146cd <_ZSt12__relocate_aIP18VkSurfaceFormatKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   146cd:	55                   	push   %rbp
   146ce:	48 89 e5             	mov    %rsp,%rbp
   146d1:	41 54                	push   %r12
   146d3:	53                   	push   %rbx
   146d4:	48 83 ec 20          	sub    $0x20,%rsp
   146d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   146e0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   146e4:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   146e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   146ec:	48 89 c7             	mov    %rax,%rdi
   146ef:	e8 93 18 00 00       	call   15f87 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   146f4:	49 89 c4             	mov    %rax,%r12
   146f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146fb:	48 89 c7             	mov    %rax,%rdi
   146fe:	e8 84 18 00 00       	call   15f87 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   14703:	48 89 c3             	mov    %rax,%rbx
   14706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1470a:	48 89 c7             	mov    %rax,%rdi
   1470d:	e8 75 18 00 00       	call   15f87 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>
   14712:	48 89 c7             	mov    %rax,%rdi
   14715:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14719:	48 89 c1             	mov    %rax,%rcx
   1471c:	4c 89 e2             	mov    %r12,%rdx
   1471f:	48 89 de             	mov    %rbx,%rsi
   14722:	e8 6e 18 00 00       	call   15f95 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   14727:	48 83 c4 20          	add    $0x20,%rsp
   1472b:	5b                   	pop    %rbx
   1472c:	41 5c                	pop    %r12
   1472e:	5d                   	pop    %rbp
   1472f:	c3                   	ret

0000000000014730 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14730:	55                   	push   %rbp
   14731:	48 89 e5             	mov    %rsp,%rbp
   14734:	48 83 ec 20          	sub    $0x20,%rsp
   14738:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1473c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14743:	ff ff 1f 
   14746:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1474a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1474e:	48 89 c7             	mov    %rax,%rdi
   14751:	e8 a2 18 00 00       	call   15ff8 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
   14756:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1475a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1475e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14762:	48 89 d6             	mov    %rdx,%rsi
   14765:	48 89 c7             	mov    %rax,%rdi
   14768:	e8 0b 1a ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1476d:	48 8b 00             	mov    (%rax),%rax
      }
   14770:	c9                   	leave
   14771:	c3                   	ret

0000000000014772 <_ZNKSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14772:	55                   	push   %rbp
   14773:	48 89 e5             	mov    %rsp,%rbp
   14776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1477a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1477e:	5d                   	pop    %rbp
   1477f:	c3                   	ret

0000000000014780 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14780:	55                   	push   %rbp
   14781:	48 89 e5             	mov    %rsp,%rbp
   14784:	48 83 ec 20          	sub    $0x20,%rsp
   14788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1478c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14790:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14794:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14798:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1479c:	48 89 d6             	mov    %rdx,%rsi
   1479f:	48 89 c7             	mov    %rax,%rdi
   147a2:	e8 6b 18 00 00       	call   16012 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
   147a7:	c9                   	leave
   147a8:	c3                   	ret

00000000000147a9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   147a9:	55                   	push   %rbp
   147aa:	48 89 e5             	mov    %rsp,%rbp
   147ad:	48 83 ec 10          	sub    $0x10,%rsp
   147b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   147b9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   147bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147c1:	ba 00 00 00 00       	mov    $0x0,%edx
   147c6:	48 89 ce             	mov    %rcx,%rsi
   147c9:	48 89 c7             	mov    %rax,%rdi
   147cc:	e8 9f 18 00 00       	call   16070 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
   147d1:	c9                   	leave
   147d2:	c3                   	ret

00000000000147d3 <_ZSt12__relocate_aIP16VkPresentModeKHRS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   147d3:	55                   	push   %rbp
   147d4:	48 89 e5             	mov    %rsp,%rbp
   147d7:	41 54                	push   %r12
   147d9:	53                   	push   %rbx
   147da:	48 83 ec 20          	sub    $0x20,%rsp
   147de:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   147e2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   147e6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   147ea:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   147ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   147f2:	48 89 c7             	mov    %rax,%rdi
   147f5:	e8 d7 18 00 00       	call   160d1 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   147fa:	49 89 c4             	mov    %rax,%r12
   147fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14801:	48 89 c7             	mov    %rax,%rdi
   14804:	e8 c8 18 00 00       	call   160d1 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   14809:	48 89 c3             	mov    %rax,%rbx
   1480c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14810:	48 89 c7             	mov    %rax,%rdi
   14813:	e8 b9 18 00 00       	call   160d1 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>
   14818:	48 89 c7             	mov    %rax,%rdi
   1481b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1481f:	48 89 c1             	mov    %rax,%rcx
   14822:	4c 89 e2             	mov    %r12,%rdx
   14825:	48 89 de             	mov    %rbx,%rsi
   14828:	e8 b2 18 00 00       	call   160df <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
   1482d:	48 83 c4 20          	add    $0x20,%rsp
   14831:	5b                   	pop    %rbx
   14832:	41 5c                	pop    %r12
   14834:	5d                   	pop    %rbp
   14835:	c3                   	ret

0000000000014836 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14836:	55                   	push   %rbp
   14837:	48 89 e5             	mov    %rsp,%rbp
   1483a:	48 83 ec 10          	sub    $0x10,%rsp
   1483e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14842:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14846:	48 89 c7             	mov    %rax,%rdi
   14849:	e8 f4 18 00 00       	call   16142 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
   1484e:	c9                   	leave
   1484f:	c3                   	ret

0000000000014850 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14850:	55                   	push   %rbp
   14851:	48 89 e5             	mov    %rsp,%rbp
   14854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14858:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1485c:	90                   	nop
   1485d:	5d                   	pop    %rbp
   1485e:	c3                   	ret
   1485f:	90                   	nop

0000000000014860 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14860:	55                   	push   %rbp
   14861:	48 89 e5             	mov    %rsp,%rbp
   14864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1486c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14877:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1487e:	00 
   1487f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14883:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1488a:	00 
	{ }
   1488b:	90                   	nop
   1488c:	5d                   	pop    %rbp
   1488d:	c3                   	ret

000000000001488e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1488e:	55                   	push   %rbp
   1488f:	48 89 e5             	mov    %rsp,%rbp
   14892:	48 83 ec 10          	sub    $0x10,%rsp
   14896:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1489a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1489e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   148a3:	74 15                	je     148ba <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
   148a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148a9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   148ad:	48 89 d6             	mov    %rdx,%rsi
   148b0:	48 89 c7             	mov    %rax,%rdi
   148b3:	e8 a4 18 00 00       	call   1615c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
   148b8:	eb 05                	jmp    148bf <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
   148ba:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   148bf:	c9                   	leave
   148c0:	c3                   	ret

00000000000148c1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   148c1:	55                   	push   %rbp
   148c2:	48 89 e5             	mov    %rsp,%rbp
   148c5:	48 83 ec 20          	sub    $0x20,%rsp
   148c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   148d1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   148d5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   148d9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   148dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148e1:	48 89 ce             	mov    %rcx,%rsi
   148e4:	48 89 c7             	mov    %rax,%rdi
   148e7:	e8 9a 18 00 00       	call   16186 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
   148ec:	90                   	nop
   148ed:	c9                   	leave
   148ee:	c3                   	ret

00000000000148ef <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   148ef:	55                   	push   %rbp
   148f0:	48 89 e5             	mov    %rsp,%rbp
   148f3:	48 83 ec 20          	sub    $0x20,%rsp
   148f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   148ff:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   14903:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14907:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1490b:	48 89 d6             	mov    %rdx,%rsi
   1490e:	48 89 c7             	mov    %rax,%rdi
   14911:	e8 a9 18 00 00       	call   161bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
   14916:	c9                   	leave
   14917:	c3                   	ret

0000000000014918 <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
   14918:	55                   	push   %rbp
   14919:	48 89 e5             	mov    %rsp,%rbp
   1491c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14920:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14924:	90                   	nop
   14925:	5d                   	pop    %rbp
   14926:	c3                   	ret

0000000000014927 <_ZSt11__addressofIjEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14927:	55                   	push   %rbp
   14928:	48 89 e5             	mov    %rsp,%rbp
   1492b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1492f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14933:	5d                   	pop    %rbp
   14934:	c3                   	ret

0000000000014935 <_ZSt10_ConstructIjJRiEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   14935:	55                   	push   %rbp
   14936:	48 89 e5             	mov    %rsp,%rbp
   14939:	53                   	push   %rbx
   1493a:	48 83 ec 18          	sub    $0x18,%rsp
   1493e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14942:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   14946:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1494a:	48 89 c6             	mov    %rax,%rsi
   1494d:	bf 04 00 00 00       	mov    $0x4,%edi
   14952:	e8 16 0a ff ff       	call   536d <_ZnwmPv>
   14957:	48 89 c3             	mov    %rax,%rbx
   1495a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1495e:	48 89 c7             	mov    %rax,%rdi
   14961:	e8 54 b1 ff ff       	call   faba <_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE>
   14966:	8b 00                	mov    (%rax),%eax
   14968:	89 03                	mov    %eax,(%rbx)
    }
   1496a:	90                   	nop
   1496b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1496f:	c9                   	leave
   14970:	c3                   	ret
   14971:	90                   	nop

0000000000014972 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14972:	55                   	push   %rbp
   14973:	48 89 e5             	mov    %rsp,%rbp
   14976:	48 83 ec 20          	sub    $0x20,%rsp
   1497a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1497e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14982:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14986:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1498a:	48 89 d0             	mov    %rdx,%rax
   1498d:	48 c1 e0 02          	shl    $0x2,%rax
   14991:	48 01 d0             	add    %rdx,%rax
   14994:	48 c1 e0 03          	shl    $0x3,%rax
   14998:	48 89 c2             	mov    %rax,%rdx
   1499b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1499f:	48 89 d6             	mov    %rdx,%rsi
   149a2:	48 89 c7             	mov    %rax,%rdi
   149a5:	e8 96 fa fe ff       	call   4440 <_ZdlPvm@plt>
      }
   149aa:	c9                   	leave
   149ab:	c3                   	ret

00000000000149ac <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkDeviceQueueCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   149ac:	55                   	push   %rbp
   149ad:	48 89 e5             	mov    %rsp,%rbp
   149b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   149b8:	90                   	nop
   149b9:	5d                   	pop    %rbp
   149ba:	c3                   	ret
   149bb:	90                   	nop

00000000000149bc <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   149bc:	55                   	push   %rbp
   149bd:	48 89 e5             	mov    %rsp,%rbp
   149c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149c4:	90                   	nop
   149c5:	5d                   	pop    %rbp
   149c6:	c3                   	ret

00000000000149c7 <_ZSt4moveIRSaISt13_Rb_tree_nodeIjEEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   149c7:	55                   	push   %rbp
   149c8:	48 89 e5             	mov    %rsp,%rbp
   149cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   149cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149d3:	5d                   	pop    %rbp
   149d4:	c3                   	ret
   149d5:	90                   	nop

00000000000149d6 <_ZNSaISt13_Rb_tree_nodeIjEEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   149d6:	55                   	push   %rbp
   149d7:	48 89 e5             	mov    %rsp,%rbp
   149da:	48 83 ec 10          	sub    $0x10,%rsp
   149de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   149e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   149ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149ee:	48 89 d6             	mov    %rdx,%rsi
   149f1:	48 89 c7             	mov    %rax,%rdi
   149f4:	e8 23 18 00 00       	call   1621c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>
   149f9:	90                   	nop
   149fa:	c9                   	leave
   149fb:	c3                   	ret

00000000000149fc <_ZNSt20_Rb_tree_key_compareISt4lessIjEEC1ERKS1_>:
      _Rb_tree_key_compare(const _Key_compare& __comp)
   149fc:	55                   	push   %rbp
   149fd:	48 89 e5             	mov    %rsp,%rbp
   14a00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a04:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { }
   14a08:	90                   	nop
   14a09:	5d                   	pop    %rbp
   14a0a:	c3                   	ret
   14a0b:	90                   	nop

0000000000014a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   14a0c:	55                   	push   %rbp
   14a0d:	48 89 e5             	mov    %rsp,%rbp
   14a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   14a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14a20:	48 89 10             	mov    %rdx,(%rax)
   14a23:	90                   	nop
   14a24:	5d                   	pop    %rbp
   14a25:	c3                   	ret

0000000000014a26 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14a26:	55                   	push   %rbp
   14a27:	48 89 e5             	mov    %rsp,%rbp
   14a2a:	53                   	push   %rbx
   14a2b:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   14a32:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   14a39:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   14a40:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   14a47:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   14a4e:	48 89 c7             	mov    %rax,%rdi
   14a51:	e8 d6 17 00 00       	call   1622c <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>
   14a56:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   14a5d:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14a64:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14a6b:	48 89 c7             	mov    %rax,%rdi
   14a6e:	e8 e1 17 00 00       	call   16254 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   14a73:	48 39 c3             	cmp    %rax,%rbx
   14a76:	0f 94 c0             	sete   %al
   14a79:	84 c0                	test   %al,%al
   14a7b:	0f 84 c8 00 00 00    	je     14b49 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x123>
	  if (size() > 0
   14a81:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14a88:	48 89 c7             	mov    %rax,%rdi
   14a8b:	e8 d6 17 00 00       	call   16266 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   14a90:	48 85 c0             	test   %rax,%rax
   14a93:	74 44                	je     14ad9 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
   14a95:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14a9c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14aa3:	48 89 c7             	mov    %rax,%rdi
   14aa6:	e8 cd 17 00 00       	call   16278 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14aab:	48 8b 00             	mov    (%rax),%rax
   14aae:	48 89 c7             	mov    %rax,%rdi
   14ab1:	e8 d4 17 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14ab6:	48 89 c1             	mov    %rax,%rcx
   14ab9:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14ac0:	48 89 c2             	mov    %rax,%rdx
   14ac3:	48 89 ce             	mov    %rcx,%rsi
   14ac6:	48 89 df             	mov    %rbx,%rdi
   14ac9:	e8 d6 17 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14ace:	84 c0                	test   %al,%al
   14ad0:	74 07                	je     14ad9 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb3>
   14ad2:	b8 01 00 00 00       	mov    $0x1,%eax
   14ad7:	eb 05                	jmp    14ade <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0xb8>
   14ad9:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   14ade:	84 c0                	test   %al,%al
   14ae0:	74 49                	je     14b2b <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x105>
	    return _Res(0, _M_rightmost());
   14ae2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14ae9:	48 89 c7             	mov    %rax,%rdi
   14aec:	e8 87 17 00 00       	call   16278 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14af1:	48 89 c2             	mov    %rax,%rdx
   14af4:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   14afb:	00 00 00 00 
   14aff:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   14b06:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   14b0d:	48 89 ce             	mov    %rcx,%rsi
   14b10:	48 89 c7             	mov    %rax,%rdi
   14b13:	e8 ae 11 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14b18:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   14b1f:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   14b26:	e9 43 03 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   14b2b:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14b32:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14b39:	48 89 d6             	mov    %rdx,%rsi
   14b3c:	48 89 c7             	mov    %rax,%rdi
   14b3f:	e8 84 17 00 00       	call   162c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   14b44:	e9 25 03 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   14b49:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14b50:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14b57:	48 89 c7             	mov    %rax,%rdi
   14b5a:	e8 2b 17 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14b5f:	48 89 c2             	mov    %rax,%rdx
   14b62:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14b69:	48 89 c6             	mov    %rax,%rsi
   14b6c:	48 89 df             	mov    %rbx,%rdi
   14b6f:	e8 30 17 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14b74:	84 c0                	test   %al,%al
   14b76:	0f 84 66 01 00 00    	je     14ce2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x2bc>
	  iterator __before = __pos;
   14b7c:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14b83:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   14b8a:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14b91:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14b98:	48 89 c7             	mov    %rax,%rdi
   14b9b:	e8 9e 18 00 00       	call   1643e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14ba0:	48 8b 00             	mov    (%rax),%rax
   14ba3:	48 39 c3             	cmp    %rax,%rbx
   14ba6:	0f 94 c0             	sete   %al
   14ba9:	84 c0                	test   %al,%al
   14bab:	74 4c                	je     14bf9 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   14bad:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14bb4:	48 89 c7             	mov    %rax,%rdi
   14bb7:	e8 82 18 00 00       	call   1643e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14bbc:	48 89 c3             	mov    %rax,%rbx
   14bbf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14bc6:	48 89 c7             	mov    %rax,%rdi
   14bc9:	e8 70 18 00 00       	call   1643e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>
   14bce:	48 89 c1             	mov    %rax,%rcx
   14bd1:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   14bd8:	48 89 da             	mov    %rbx,%rdx
   14bdb:	48 89 ce             	mov    %rcx,%rsi
   14bde:	48 89 c7             	mov    %rax,%rdi
   14be1:	e8 6a 18 00 00       	call   16450 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14be6:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   14bed:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   14bf4:	e9 75 02 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   14bf9:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14c00:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   14c07:	48 89 c7             	mov    %rax,%rdi
   14c0a:	e8 85 18 00 00       	call   16494 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
   14c0f:	48 8b 00             	mov    (%rax),%rax
   14c12:	48 89 c7             	mov    %rax,%rdi
   14c15:	e8 70 16 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14c1a:	48 89 c1             	mov    %rax,%rcx
   14c1d:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14c24:	48 89 c2             	mov    %rax,%rdx
   14c27:	48 89 ce             	mov    %rcx,%rsi
   14c2a:	48 89 df             	mov    %rbx,%rdi
   14c2d:	e8 72 16 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14c32:	84 c0                	test   %al,%al
   14c34:	0f 84 8a 00 00 00    	je     14cc4 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x29e>
	      if (_S_right(__before._M_node) == 0)
   14c3a:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   14c41:	48 89 c7             	mov    %rax,%rdi
   14c44:	e8 b8 dc ff ff       	call   12901 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   14c49:	48 85 c0             	test   %rax,%rax
   14c4c:	0f 94 c0             	sete   %al
   14c4f:	84 c0                	test   %al,%al
   14c51:	74 3e                	je     14c91 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x26b>
		return _Res(0, __before._M_node);
   14c53:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   14c5a:	00 00 00 00 
   14c5e:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   14c65:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   14c6c:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   14c73:	48 89 ce             	mov    %rcx,%rsi
   14c76:	48 89 c7             	mov    %rax,%rdi
   14c79:	e8 48 10 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14c7e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   14c85:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   14c8c:	e9 dd 01 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   14c91:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   14c98:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   14c9f:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   14ca6:	48 89 ce             	mov    %rcx,%rsi
   14ca9:	48 89 c7             	mov    %rax,%rdi
   14cac:	e8 9f 17 00 00       	call   16450 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14cb1:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   14cb8:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   14cbf:	e9 aa 01 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   14cc4:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14ccb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14cd2:	48 89 d6             	mov    %rdx,%rsi
   14cd5:	48 89 c7             	mov    %rax,%rdi
   14cd8:	e8 eb 15 00 00       	call   162c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   14cdd:	e9 8c 01 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   14ce2:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14ce9:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14cf0:	48 89 c7             	mov    %rax,%rdi
   14cf3:	e8 92 15 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14cf8:	48 89 c1             	mov    %rax,%rcx
   14cfb:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14d02:	48 89 c2             	mov    %rax,%rdx
   14d05:	48 89 ce             	mov    %rcx,%rsi
   14d08:	48 89 df             	mov    %rbx,%rdi
   14d0b:	e8 94 15 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14d10:	84 c0                	test   %al,%al
   14d12:	0f 84 2c 01 00 00    	je     14e44 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x41e>
	  iterator __after = __pos;
   14d18:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14d1f:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   14d26:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   14d2d:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14d34:	48 89 c7             	mov    %rax,%rdi
   14d37:	e8 3c 15 00 00       	call   16278 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14d3c:	48 8b 00             	mov    (%rax),%rax
   14d3f:	48 39 c3             	cmp    %rax,%rbx
   14d42:	0f 94 c0             	sete   %al
   14d45:	84 c0                	test   %al,%al
   14d47:	74 3a                	je     14d83 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x35d>
	    return _Res(0, _M_rightmost());
   14d49:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14d50:	48 89 c7             	mov    %rax,%rdi
   14d53:	e8 20 15 00 00       	call   16278 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>
   14d58:	48 89 c2             	mov    %rax,%rdx
   14d5b:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   14d62:	00 
   14d63:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   14d67:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   14d6b:	48 89 ce             	mov    %rcx,%rsi
   14d6e:	48 89 c7             	mov    %rax,%rdi
   14d71:	e8 50 0f 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14d76:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14d7a:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   14d7e:	e9 eb 00 00 00       	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   14d83:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   14d8a:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   14d91:	48 89 c7             	mov    %rax,%rdi
   14d94:	e8 23 17 00 00       	call   164bc <_ZNSt17_Rb_tree_iteratorIjEppEv>
   14d99:	48 8b 00             	mov    (%rax),%rax
   14d9c:	48 89 c7             	mov    %rax,%rdi
   14d9f:	e8 e6 14 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14da4:	48 89 c2             	mov    %rax,%rdx
   14da7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   14dae:	48 89 c6             	mov    %rax,%rsi
   14db1:	48 89 df             	mov    %rbx,%rdi
   14db4:	e8 eb 14 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14db9:	84 c0                	test   %al,%al
   14dbb:	74 6c                	je     14e29 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x403>
	      if (_S_right(__pos._M_node) == 0)
   14dbd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   14dc4:	48 89 c7             	mov    %rax,%rdi
   14dc7:	e8 35 db ff ff       	call   12901 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   14dcc:	48 85 c0             	test   %rax,%rax
   14dcf:	0f 94 c0             	sete   %al
   14dd2:	84 c0                	test   %al,%al
   14dd4:	74 2c                	je     14e02 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x3dc>
		return _Res(0, __pos._M_node);
   14dd6:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   14ddd:	00 
   14dde:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   14de5:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   14de9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   14ded:	48 89 ce             	mov    %rcx,%rsi
   14df0:	48 89 c7             	mov    %rax,%rdi
   14df3:	e8 ce 0e 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14df8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   14dfc:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   14e00:	eb 6c                	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
		return _Res(__after._M_node, __after._M_node);
   14e02:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   14e09:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   14e10:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   14e14:	48 89 ce             	mov    %rcx,%rsi
   14e17:	48 89 c7             	mov    %rax,%rdi
   14e1a:	e8 31 16 00 00       	call   16450 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   14e1f:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   14e23:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14e27:	eb 45                	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	    return _M_get_insert_unique_pos(__k);
   14e29:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   14e30:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   14e37:	48 89 d6             	mov    %rdx,%rsi
   14e3a:	48 89 c7             	mov    %rax,%rdi
   14e3d:	e8 86 14 00 00       	call   162c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>
   14e42:	eb 2a                	jmp    14e6e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIjERKj+0x448>
	return _Res(__pos._M_node, 0);
   14e44:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   14e4b:	00 
   14e4c:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   14e50:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   14e57:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14e5b:	48 89 ce             	mov    %rcx,%rsi
   14e5e:	48 89 c7             	mov    %rax,%rdi
   14e61:	e8 60 0e 00 00       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14e66:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14e6a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   14e6e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14e72:	c9                   	leave
   14e73:	c3                   	ret

0000000000014e74 <_ZNKSt9_IdentityIjEclERKj>:
      _Tp&
      operator()(_Tp& __x) const
      { return __x; }

      const _Tp&
      operator()(const _Tp& __x) const
   14e74:	55                   	push   %rbp
   14e75:	48 89 e5             	mov    %rsp,%rbp
   14e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   14e80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e84:	5d                   	pop    %rbp
   14e85:	c3                   	ret

0000000000014e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14e86:	55                   	push   %rbp
   14e87:	48 89 e5             	mov    %rsp,%rbp
   14e8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14e8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e92:	5d                   	pop    %rbp
   14e93:	c3                   	ret

0000000000014e94 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_>:
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14e94:	55                   	push   %rbp
   14e95:	48 89 e5             	mov    %rsp,%rbp
   14e98:	41 54                	push   %r12
   14e9a:	53                   	push   %rbx
   14e9b:	48 83 ec 50          	sub    $0x50,%rsp
   14e9f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14ea3:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   14ea7:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14eab:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   14eaf:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   14eb3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   14eb8:	75 4a                	jne    14f04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
	bool __insert_left = (__x != 0 || __p == _M_end()
   14eba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14ebe:	48 89 c7             	mov    %rax,%rdi
   14ec1:	e8 8e 13 00 00       	call   16254 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   14ec6:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
   14eca:	74 38                	je     14f04 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x70>
			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
   14ecc:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   14ed0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14ed4:	48 89 c7             	mov    %rax,%rdi
   14ed7:	e8 ae 13 00 00       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   14edc:	49 89 c4             	mov    %rax,%r12
   14edf:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   14ee3:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
   14ee7:	48 89 d6             	mov    %rdx,%rsi
   14eea:	48 89 c7             	mov    %rax,%rdi
   14eed:	e8 82 ff ff ff       	call   14e74 <_ZNKSt9_IdentityIjEclERKj>
   14ef2:	4c 89 e2             	mov    %r12,%rdx
   14ef5:	48 89 c6             	mov    %rax,%rsi
   14ef8:	48 89 df             	mov    %rbx,%rdi
   14efb:	e8 a4 13 00 00       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   14f00:	84 c0                	test   %al,%al
   14f02:	74 07                	je     14f0b <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x77>
   14f04:	b8 01 00 00 00       	mov    $0x1,%eax
   14f09:	eb 05                	jmp    14f10 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE10_M_insert_IRKjNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIjEPSt18_Rb_tree_node_baseSD_OT_RT0_+0x7c>
   14f0b:	b8 00 00 00 00       	mov    $0x0,%eax
	bool __insert_left = (__x != 0 || __p == _M_end()
   14f10:	88 45 ef             	mov    %al,-0x11(%rbp)
	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
   14f13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14f17:	48 89 c7             	mov    %rax,%rdi
   14f1a:	e8 67 ff ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   14f1f:	48 89 c2             	mov    %rax,%rdx
   14f22:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14f26:	48 89 d6             	mov    %rdx,%rsi
   14f29:	48 89 c7             	mov    %rax,%rdi
   14f2c:	e8 b3 15 00 00       	call   164e4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>
   14f31:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
				      this->_M_impl._M_header);
   14f35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14f39:	48 8d 48 08          	lea    0x8(%rax),%rcx
	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   14f3d:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   14f41:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   14f45:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   14f49:	89 c7                	mov    %eax,%edi
   14f4b:	e8 00 f1 fe ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
	++_M_impl._M_node_count;
   14f50:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14f54:	48 8b 40 28          	mov    0x28(%rax),%rax
   14f58:	48 8d 50 01          	lea    0x1(%rax),%rdx
   14f5c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14f60:	48 89 50 28          	mov    %rdx,0x28(%rax)
	return iterator(__z);
   14f64:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   14f68:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14f6c:	48 89 d6             	mov    %rdx,%rsi
   14f6f:	48 89 c7             	mov    %rax,%rdi
   14f72:	e8 95 fa ff ff       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   14f77:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   14f7b:	48 83 c4 50          	add    $0x50,%rsp
   14f7f:	5b                   	pop    %rbx
   14f80:	41 5c                	pop    %r12
   14f82:	5d                   	pop    %rbp
   14f83:	c3                   	ret

0000000000014f84 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14f84:	55                   	push   %rbp
   14f85:	48 89 e5             	mov    %rsp,%rbp
   14f88:	53                   	push   %rbx
   14f89:	48 83 ec 18          	sub    $0x18,%rsp
   14f8d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14f91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   14f95:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14f99:	48 89 c7             	mov    %rax,%rdi
   14f9c:	e8 87 15 00 00       	call   16528 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   14fa1:	48 89 c3             	mov    %rax,%rbx
   14fa4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14fa8:	48 89 c7             	mov    %rax,%rdi
   14fab:	e8 6a 15 00 00       	call   1651a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   14fb0:	48 89 de             	mov    %rbx,%rsi
   14fb3:	48 89 c7             	mov    %rax,%rdi
   14fb6:	e8 8b 15 00 00       	call   16546 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>
      }
   14fbb:	90                   	nop
   14fbc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14fc0:	c9                   	leave
   14fc1:	c3                   	ret

0000000000014fc2 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_put_nodeEPSt13_Rb_tree_nodeIjE>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   14fc2:	55                   	push   %rbp
   14fc3:	48 89 e5             	mov    %rsp,%rbp
   14fc6:	48 83 ec 10          	sub    $0x10,%rsp
   14fca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   14fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fd6:	48 89 c7             	mov    %rax,%rdi
   14fd9:	e8 3c 15 00 00       	call   1651a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   14fde:	48 89 c1             	mov    %rax,%rcx
   14fe1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14fe5:	ba 01 00 00 00       	mov    $0x1,%edx
   14fea:	48 89 c6             	mov    %rax,%rsi
   14fed:	48 89 cf             	mov    %rcx,%rdi
   14ff0:	e8 77 15 00 00       	call   1656c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>
   14ff5:	90                   	nop
   14ff6:	c9                   	leave
   14ff7:	c3                   	ret

0000000000014ff8 <_ZNK9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() const noexcept
   14ff8:	55                   	push   %rbp
   14ff9:	48 89 e5             	mov    %rsp,%rbp
   14ffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   15000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15004:	5d                   	pop    %rbp
   15005:	c3                   	ret

0000000000015006 <_ZNKSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   15006:	55                   	push   %rbp
   15007:	48 89 e5             	mov    %rsp,%rbp
   1500a:	48 83 ec 10          	sub    $0x10,%rsp
   1500e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15016:	48 89 c7             	mov    %rax,%rdi
   15019:	e8 be 15 00 00       	call   165dc <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1501e:	48 89 c7             	mov    %rax,%rdi
   15021:	e8 74 15 00 00       	call   1659a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   15026:	c9                   	leave
   15027:	c3                   	ret

0000000000015028 <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   15028:	55                   	push   %rbp
   15029:	48 89 e5             	mov    %rsp,%rbp
   1502c:	48 83 ec 10          	sub    $0x10,%rsp
   15030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15034:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15038:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1503c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15040:	ba 00 00 00 00       	mov    $0x0,%edx
   15045:	48 89 ce             	mov    %rcx,%rsi
   15048:	48 89 c7             	mov    %rax,%rdi
   1504b:	e8 9a 15 00 00       	call   165ea <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>
   15050:	c9                   	leave
   15051:	c3                   	ret

0000000000015052 <_ZSt12__relocate_aIP23VkDeviceQueueCreateInfoS1_SaIS0_EET0_T_S4_S3_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15052:	55                   	push   %rbp
   15053:	48 89 e5             	mov    %rsp,%rbp
   15056:	41 54                	push   %r12
   15058:	53                   	push   %rbx
   15059:	48 83 ec 20          	sub    $0x20,%rsp
   1505d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15061:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15065:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15069:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1506d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15071:	48 89 c7             	mov    %rax,%rdi
   15074:	e8 dc 15 00 00       	call   16655 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   15079:	49 89 c4             	mov    %rax,%r12
   1507c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15080:	48 89 c7             	mov    %rax,%rdi
   15083:	e8 cd 15 00 00       	call   16655 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   15088:	48 89 c3             	mov    %rax,%rbx
   1508b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1508f:	48 89 c7             	mov    %rax,%rdi
   15092:	e8 be 15 00 00       	call   16655 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>
   15097:	48 89 c7             	mov    %rax,%rdi
   1509a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1509e:	48 89 c1             	mov    %rax,%rcx
   150a1:	4c 89 e2             	mov    %r12,%rdx
   150a4:	48 89 de             	mov    %rbx,%rsi
   150a7:	e8 b7 15 00 00       	call   16663 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>
    }
   150ac:	48 83 c4 20          	add    $0x20,%rsp
   150b0:	5b                   	pop    %rbx
   150b1:	41 5c                	pop    %r12
   150b3:	5d                   	pop    %rbp
   150b4:	c3                   	ret
   150b5:	90                   	nop

00000000000150b6 <_ZNKSt22_Optional_payload_baseIjE6_M_getEv>:
      _M_get() const noexcept
   150b6:	55                   	push   %rbp
   150b7:	48 89 e5             	mov    %rsp,%rbp
   150ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   150be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c2:	5d                   	pop    %rbp
   150c3:	c3                   	ret

00000000000150c4 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   150c4:	55                   	push   %rbp
   150c5:	48 89 e5             	mov    %rsp,%rbp
   150c8:	48 83 ec 20          	sub    $0x20,%rsp
   150cc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   150d0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   150d7:	ff ff 0f 
   150da:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   150de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   150e2:	48 89 c7             	mov    %rax,%rdi
   150e5:	e8 ff 15 00 00       	call   166e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
   150ea:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   150ee:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   150f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   150f6:	48 89 d6             	mov    %rdx,%rsi
   150f9:	48 89 c7             	mov    %rax,%rdi
   150fc:	e8 77 10 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   15101:	48 8b 00             	mov    (%rax),%rax
      }
   15104:	c9                   	leave
   15105:	c3                   	ret

0000000000015106 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15106:	55                   	push   %rbp
   15107:	48 89 e5             	mov    %rsp,%rbp
   1510a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1510e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15112:	5d                   	pop    %rbp
   15113:	c3                   	ret

0000000000015114 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15114:	55                   	push   %rbp
   15115:	48 89 e5             	mov    %rsp,%rbp
   15118:	48 83 ec 20          	sub    $0x20,%rsp
   1511c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15120:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15124:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15128:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1512c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15130:	48 89 d6             	mov    %rdx,%rsi
   15133:	48 89 c7             	mov    %rax,%rdi
   15136:	e8 c8 15 00 00       	call   16703 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
   1513b:	c9                   	leave
   1513c:	c3                   	ret

000000000001513d <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1513d:	55                   	push   %rbp
   1513e:	48 89 e5             	mov    %rsp,%rbp
   15141:	48 83 ec 10          	sub    $0x10,%rsp
   15145:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15149:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1514d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15155:	ba 00 00 00 00       	mov    $0x0,%edx
   1515a:	48 89 ce             	mov    %rcx,%rsi
   1515d:	48 89 c7             	mov    %rax,%rdi
   15160:	e8 fb 15 00 00       	call   16760 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
   15165:	c9                   	leave
   15166:	c3                   	ret

0000000000015167 <_ZSt12__relocate_aIPP9VkImage_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15167:	55                   	push   %rbp
   15168:	48 89 e5             	mov    %rsp,%rbp
   1516b:	41 54                	push   %r12
   1516d:	53                   	push   %rbx
   1516e:	48 83 ec 20          	sub    $0x20,%rsp
   15172:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15176:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1517a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1517e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   15182:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15186:	48 89 c7             	mov    %rax,%rdi
   15189:	e8 33 16 00 00       	call   167c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   1518e:	49 89 c4             	mov    %rax,%r12
   15191:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15195:	48 89 c7             	mov    %rax,%rdi
   15198:	e8 24 16 00 00       	call   167c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   1519d:	48 89 c3             	mov    %rax,%rbx
   151a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151a4:	48 89 c7             	mov    %rax,%rdi
   151a7:	e8 15 16 00 00       	call   167c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>
   151ac:	48 89 c7             	mov    %rax,%rdi
   151af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   151b3:	48 89 c1             	mov    %rax,%rcx
   151b6:	4c 89 e2             	mov    %r12,%rdx
   151b9:	48 89 de             	mov    %rbx,%rsi
   151bc:	e8 0e 16 00 00       	call   167cf <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   151c1:	48 83 c4 20          	add    $0x20,%rsp
   151c5:	5b                   	pop    %rbx
   151c6:	41 5c                	pop    %r12
   151c8:	5d                   	pop    %rbp
   151c9:	c3                   	ret

00000000000151ca <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   151ca:	55                   	push   %rbp
   151cb:	48 89 e5             	mov    %rsp,%rbp
   151ce:	48 83 ec 20          	sub    $0x20,%rsp
   151d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   151d6:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   151dd:	ff ff 0f 
   151e0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   151e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151e8:	48 89 c7             	mov    %rax,%rdi
   151eb:	e8 42 16 00 00       	call   16832 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   151f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   151f4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   151f8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   151fc:	48 89 d6             	mov    %rdx,%rsi
   151ff:	48 89 c7             	mov    %rax,%rdi
   15202:	e8 71 0f ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   15207:	48 8b 00             	mov    (%rax),%rax
      }
   1520a:	c9                   	leave
   1520b:	c3                   	ret

000000000001520c <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1520c:	55                   	push   %rbp
   1520d:	48 89 e5             	mov    %rsp,%rbp
   15210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15218:	5d                   	pop    %rbp
   15219:	c3                   	ret

000000000001521a <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1521a:	55                   	push   %rbp
   1521b:	48 89 e5             	mov    %rsp,%rbp
   1521e:	48 83 ec 20          	sub    $0x20,%rsp
   15222:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15226:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1522a:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1522e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15232:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15236:	48 89 d6             	mov    %rdx,%rsi
   15239:	48 89 c7             	mov    %rax,%rdi
   1523c:	e8 0b 16 00 00       	call   1684c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   15241:	c9                   	leave
   15242:	c3                   	ret

0000000000015243 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15243:	55                   	push   %rbp
   15244:	48 89 e5             	mov    %rsp,%rbp
   15247:	48 83 ec 10          	sub    $0x10,%rsp
   1524b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1524f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15253:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15257:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1525b:	ba 00 00 00 00       	mov    $0x0,%edx
   15260:	48 89 ce             	mov    %rcx,%rsi
   15263:	48 89 c7             	mov    %rax,%rdi
   15266:	e8 3f 16 00 00       	call   168aa <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   1526b:	c9                   	leave
   1526c:	c3                   	ret

000000000001526d <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1526d:	55                   	push   %rbp
   1526e:	48 89 e5             	mov    %rsp,%rbp
   15271:	41 54                	push   %r12
   15273:	53                   	push   %rbx
   15274:	48 83 ec 20          	sub    $0x20,%rsp
   15278:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1527c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15280:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15284:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   15288:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1528c:	48 89 c7             	mov    %rax,%rdi
   1528f:	e8 77 16 00 00       	call   1690b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   15294:	49 89 c4             	mov    %rax,%r12
   15297:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1529b:	48 89 c7             	mov    %rax,%rdi
   1529e:	e8 68 16 00 00       	call   1690b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   152a3:	48 89 c3             	mov    %rax,%rbx
   152a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   152aa:	48 89 c7             	mov    %rax,%rdi
   152ad:	e8 59 16 00 00       	call   1690b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   152b2:	48 89 c7             	mov    %rax,%rdi
   152b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   152b9:	48 89 c1             	mov    %rax,%rcx
   152bc:	4c 89 e2             	mov    %r12,%rdx
   152bf:	48 89 de             	mov    %rbx,%rsi
   152c2:	e8 52 16 00 00       	call   16919 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   152c7:	48 83 c4 20          	add    $0x20,%rsp
   152cb:	5b                   	pop    %rbx
   152cc:	41 5c                	pop    %r12
   152ce:	5d                   	pop    %rbp
   152cf:	c3                   	ret

00000000000152d0 <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   152d0:	55                   	push   %rbp
   152d1:	48 89 e5             	mov    %rsp,%rbp
   152d4:	48 83 ec 10          	sub    $0x10,%rsp
   152d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   152dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152e0:	48 89 c7             	mov    %rax,%rdi
   152e3:	e8 94 16 00 00       	call   1697c <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
   152e8:	c9                   	leave
   152e9:	c3                   	ret

00000000000152ea <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   152ea:	55                   	push   %rbp
   152eb:	48 89 e5             	mov    %rsp,%rbp
   152ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   152f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   152fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15301:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   15308:	00 
   15309:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1530d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   15314:	00 
	{ }
   15315:	90                   	nop
   15316:	5d                   	pop    %rbp
   15317:	c3                   	ret

0000000000015318 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
   15318:	55                   	push   %rbp
   15319:	48 89 e5             	mov    %rsp,%rbp
   1531c:	48 83 ec 10          	sub    $0x10,%rsp
   15320:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15324:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   15328:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1532d:	74 15                	je     15344 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
   1532f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15333:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15337:	48 89 d6             	mov    %rdx,%rsi
   1533a:	48 89 c7             	mov    %rax,%rdi
   1533d:	e8 54 16 00 00       	call   16996 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
   15342:	eb 05                	jmp    15349 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
   15344:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   15349:	c9                   	leave
   1534a:	c3                   	ret

000000000001534b <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1534b:	55                   	push   %rbp
   1534c:	48 89 e5             	mov    %rsp,%rbp
   1534f:	48 83 ec 20          	sub    $0x20,%rsp
   15353:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15357:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1535b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1535f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15363:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15367:	48 89 d6             	mov    %rdx,%rsi
   1536a:	48 89 c7             	mov    %rax,%rdi
   1536d:	e8 4e 16 00 00       	call   169c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
   15372:	c9                   	leave
   15373:	c3                   	ret

0000000000015374 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
   15374:	55                   	push   %rbp
   15375:	48 89 e5             	mov    %rsp,%rbp
   15378:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1537c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15380:	90                   	nop
   15381:	5d                   	pop    %rbp
   15382:	c3                   	ret
   15383:	90                   	nop

0000000000015384 <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15384:	55                   	push   %rbp
   15385:	48 89 e5             	mov    %rsp,%rbp
   15388:	48 83 ec 20          	sub    $0x20,%rsp
   1538c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15390:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15394:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15398:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1539c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   153a0:	48 89 d6             	mov    %rdx,%rsi
   153a3:	48 89 c7             	mov    %rax,%rdi
   153a6:	e8 95 f0 fe ff       	call   4440 <_ZdlPvm@plt>
      }
   153ab:	c9                   	leave
   153ac:	c3                   	ret
   153ad:	90                   	nop

00000000000153ae <_ZNSaI14VkDynamicStateEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   153ae:	55                   	push   %rbp
   153af:	48 89 e5             	mov    %rsp,%rbp
   153b2:	48 83 ec 10          	sub    $0x10,%rsp
   153b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   153be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   153c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153c6:	48 89 d6             	mov    %rdx,%rsi
   153c9:	48 89 c7             	mov    %rax,%rdi
   153cc:	e8 4d 16 00 00       	call   16a1e <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>
   153d1:	90                   	nop
   153d2:	c9                   	leave
   153d3:	c3                   	ret

00000000000153d4 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   153d4:	55                   	push   %rbp
   153d5:	48 89 e5             	mov    %rsp,%rbp
   153d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   153dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153e0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   153e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153eb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   153f2:	00 
   153f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153f7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   153fe:	00 
	{ }
   153ff:	90                   	nop
   15400:	5d                   	pop    %rbp
   15401:	c3                   	ret

0000000000015402 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15402:	55                   	push   %rbp
   15403:	48 89 e5             	mov    %rsp,%rbp
   15406:	48 83 ec 20          	sub    $0x20,%rsp
   1540a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1540e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15412:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15416:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1541a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1541e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15422:	48 89 ce             	mov    %rcx,%rsi
   15425:	48 89 c7             	mov    %rax,%rdi
   15428:	e8 01 16 00 00       	call   16a2e <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>
   1542d:	90                   	nop
   1542e:	c9                   	leave
   1542f:	c3                   	ret

0000000000015430 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   15430:	55                   	push   %rbp
   15431:	48 89 e5             	mov    %rsp,%rbp
   15434:	48 83 ec 20          	sub    $0x20,%rsp
   15438:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1543c:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15443:	ff ff 1f 
   15446:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1544a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1544e:	48 89 c7             	mov    %rax,%rdi
   15451:	e8 09 16 00 00       	call   16a5f <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>
   15456:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1545a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1545e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15462:	48 89 d6             	mov    %rdx,%rsi
   15465:	48 89 c7             	mov    %rax,%rdi
   15468:	e8 0b 0d ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1546d:	48 8b 00             	mov    (%rax),%rax
      }
   15470:	c9                   	leave
   15471:	c3                   	ret

0000000000015472 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   15472:	55                   	push   %rbp
   15473:	48 89 e5             	mov    %rsp,%rbp
   15476:	48 83 ec 10          	sub    $0x10,%rsp
   1547a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1547e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15482:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1548a:	ba 00 00 00 00       	mov    $0x0,%edx
   1548f:	48 89 ce             	mov    %rcx,%rsi
   15492:	48 89 c7             	mov    %rax,%rdi
   15495:	e8 e0 15 00 00       	call   16a7a <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>
   1549a:	c9                   	leave
   1549b:	c3                   	ret

000000000001549c <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1549c:	55                   	push   %rbp
   1549d:	48 89 e5             	mov    %rsp,%rbp
   154a0:	48 83 ec 30          	sub    $0x30,%rsp
   154a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   154a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   154ac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   154b0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   154b4:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   154b8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   154bc:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   154c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154c4:	48 89 ce             	mov    %rcx,%rsi
   154c7:	48 89 c7             	mov    %rax,%rdi
   154ca:	e8 0c 16 00 00       	call   16adb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>
    }
   154cf:	c9                   	leave
   154d0:	c3                   	ret

00000000000154d1 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>:
   154d1:	55                   	push   %rbp
   154d2:	48 89 e5             	mov    %rsp,%rbp
   154d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   154d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   154dd:	90                   	nop
   154de:	5d                   	pop    %rbp
   154df:	c3                   	ret

00000000000154e0 <_ZNSt6vectorIP15VkFramebuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   154e0:	55                   	push   %rbp
   154e1:	48 89 e5             	mov    %rsp,%rbp
   154e4:	48 83 ec 20          	sub    $0x20,%rsp
   154e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   154ec:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   154f3:	ff ff 0f 
   154f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   154fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   154fe:	48 89 c7             	mov    %rax,%rdi
   15501:	e8 02 16 00 00       	call   16b08 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>
   15506:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1550a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1550e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15512:	48 89 d6             	mov    %rdx,%rsi
   15515:	48 89 c7             	mov    %rax,%rdi
   15518:	e8 5b 0c ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1551d:	48 8b 00             	mov    (%rax),%rax
      }
   15520:	c9                   	leave
   15521:	c3                   	ret

0000000000015522 <_ZNKSt12_Vector_baseIP15VkFramebuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15522:	55                   	push   %rbp
   15523:	48 89 e5             	mov    %rsp,%rbp
   15526:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1552a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1552e:	5d                   	pop    %rbp
   1552f:	c3                   	ret

0000000000015530 <_ZSt25__uninitialized_default_nIPP15VkFramebuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15530:	55                   	push   %rbp
   15531:	48 89 e5             	mov    %rsp,%rbp
   15534:	48 83 ec 20          	sub    $0x20,%rsp
   15538:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1553c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15540:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15544:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15548:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1554c:	48 89 d6             	mov    %rdx,%rsi
   1554f:	48 89 c7             	mov    %rax,%rdi
   15552:	e8 cb 15 00 00       	call   16b22 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>
    }
   15557:	c9                   	leave
   15558:	c3                   	ret

0000000000015559 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15559:	55                   	push   %rbp
   1555a:	48 89 e5             	mov    %rsp,%rbp
   1555d:	48 83 ec 10          	sub    $0x10,%rsp
   15561:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15565:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15569:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1556d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15571:	ba 00 00 00 00       	mov    $0x0,%edx
   15576:	48 89 ce             	mov    %rcx,%rsi
   15579:	48 89 c7             	mov    %rax,%rdi
   1557c:	e8 ff 15 00 00       	call   16b80 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>
   15581:	c9                   	leave
   15582:	c3                   	ret

0000000000015583 <_ZSt12__relocate_aIPP15VkFramebuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15583:	55                   	push   %rbp
   15584:	48 89 e5             	mov    %rsp,%rbp
   15587:	41 54                	push   %r12
   15589:	53                   	push   %rbx
   1558a:	48 83 ec 20          	sub    $0x20,%rsp
   1558e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15592:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15596:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1559a:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   1559e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   155a2:	48 89 c7             	mov    %rax,%rdi
   155a5:	e8 37 16 00 00       	call   16be1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   155aa:	49 89 c4             	mov    %rax,%r12
   155ad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   155b1:	48 89 c7             	mov    %rax,%rdi
   155b4:	e8 28 16 00 00       	call   16be1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   155b9:	48 89 c3             	mov    %rax,%rbx
   155bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   155c0:	48 89 c7             	mov    %rax,%rdi
   155c3:	e8 19 16 00 00       	call   16be1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>
   155c8:	48 89 c7             	mov    %rax,%rdi
   155cb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   155cf:	48 89 c1             	mov    %rax,%rcx
   155d2:	4c 89 e2             	mov    %r12,%rdx
   155d5:	48 89 de             	mov    %rbx,%rsi
   155d8:	e8 12 16 00 00       	call   16bef <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   155dd:	48 83 c4 20          	add    $0x20,%rsp
   155e1:	5b                   	pop    %rbx
   155e2:	41 5c                	pop    %r12
   155e4:	5d                   	pop    %rbp
   155e5:	c3                   	ret

00000000000155e6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   155e6:	55                   	push   %rbp
   155e7:	48 89 e5             	mov    %rsp,%rbp
   155ea:	48 83 ec 20          	sub    $0x20,%rsp
   155ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   155f2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   155f9:	ff ff 0f 
   155fc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15604:	48 89 c7             	mov    %rax,%rdi
   15607:	e8 46 16 00 00       	call   16c52 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
   1560c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15610:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15614:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15618:	48 89 d6             	mov    %rdx,%rsi
   1561b:	48 89 c7             	mov    %rax,%rdi
   1561e:	e8 55 0b ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   15623:	48 8b 00             	mov    (%rax),%rax
      }
   15626:	c9                   	leave
   15627:	c3                   	ret

0000000000015628 <_ZNKSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15628:	55                   	push   %rbp
   15629:	48 89 e5             	mov    %rsp,%rbp
   1562c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15634:	5d                   	pop    %rbp
   15635:	c3                   	ret

0000000000015636 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15636:	55                   	push   %rbp
   15637:	48 89 e5             	mov    %rsp,%rbp
   1563a:	48 83 ec 20          	sub    $0x20,%rsp
   1563e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15642:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15646:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1564a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1564e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15652:	48 89 d6             	mov    %rdx,%rsi
   15655:	48 89 c7             	mov    %rax,%rdi
   15658:	e8 0f 16 00 00       	call   16c6c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
   1565d:	c9                   	leave
   1565e:	c3                   	ret

000000000001565f <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1565f:	55                   	push   %rbp
   15660:	48 89 e5             	mov    %rsp,%rbp
   15663:	48 83 ec 10          	sub    $0x10,%rsp
   15667:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1566b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1566f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15673:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15677:	ba 00 00 00 00       	mov    $0x0,%edx
   1567c:	48 89 ce             	mov    %rcx,%rsi
   1567f:	48 89 c7             	mov    %rax,%rdi
   15682:	e8 43 16 00 00       	call   16cca <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
   15687:	c9                   	leave
   15688:	c3                   	ret

0000000000015689 <_ZSt12__relocate_aIPP17VkCommandBuffer_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15689:	55                   	push   %rbp
   1568a:	48 89 e5             	mov    %rsp,%rbp
   1568d:	41 54                	push   %r12
   1568f:	53                   	push   %rbx
   15690:	48 83 ec 20          	sub    $0x20,%rsp
   15694:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15698:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1569c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   156a0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   156a4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   156a8:	48 89 c7             	mov    %rax,%rdi
   156ab:	e8 7b 16 00 00       	call   16d2b <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   156b0:	49 89 c4             	mov    %rax,%r12
   156b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   156b7:	48 89 c7             	mov    %rax,%rdi
   156ba:	e8 6c 16 00 00       	call   16d2b <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   156bf:	48 89 c3             	mov    %rax,%rbx
   156c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   156c6:	48 89 c7             	mov    %rax,%rdi
   156c9:	e8 5d 16 00 00       	call   16d2b <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>
   156ce:	48 89 c7             	mov    %rax,%rdi
   156d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   156d5:	48 89 c1             	mov    %rax,%rcx
   156d8:	4c 89 e2             	mov    %r12,%rdx
   156db:	48 89 de             	mov    %rbx,%rsi
   156de:	e8 56 16 00 00       	call   16d39 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   156e3:	48 83 c4 20          	add    $0x20,%rsp
   156e7:	5b                   	pop    %rbx
   156e8:	41 5c                	pop    %r12
   156ea:	5d                   	pop    %rbp
   156eb:	c3                   	ret

00000000000156ec <_ZNSt6vectorIP13VkSemaphore_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   156ec:	55                   	push   %rbp
   156ed:	48 89 e5             	mov    %rsp,%rbp
   156f0:	48 83 ec 20          	sub    $0x20,%rsp
   156f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   156f8:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   156ff:	ff ff 0f 
   15702:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15706:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1570a:	48 89 c7             	mov    %rax,%rdi
   1570d:	e8 8a 16 00 00       	call   16d9c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>
   15712:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15716:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1571a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1571e:	48 89 d6             	mov    %rdx,%rsi
   15721:	48 89 c7             	mov    %rax,%rdi
   15724:	e8 4f 0a ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   15729:	48 8b 00             	mov    (%rax),%rax
      }
   1572c:	c9                   	leave
   1572d:	c3                   	ret

000000000001572e <_ZNKSt12_Vector_baseIP13VkSemaphore_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   1572e:	55                   	push   %rbp
   1572f:	48 89 e5             	mov    %rsp,%rbp
   15732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15736:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1573a:	5d                   	pop    %rbp
   1573b:	c3                   	ret

000000000001573c <_ZSt25__uninitialized_default_nIPP13VkSemaphore_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   1573c:	55                   	push   %rbp
   1573d:	48 89 e5             	mov    %rsp,%rbp
   15740:	48 83 ec 20          	sub    $0x20,%rsp
   15744:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15748:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   1574c:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15750:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   15754:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15758:	48 89 d6             	mov    %rdx,%rsi
   1575b:	48 89 c7             	mov    %rax,%rdi
   1575e:	e8 53 16 00 00       	call   16db6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>
    }
   15763:	c9                   	leave
   15764:	c3                   	ret

0000000000015765 <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   15765:	55                   	push   %rbp
   15766:	48 89 e5             	mov    %rsp,%rbp
   15769:	48 83 ec 10          	sub    $0x10,%rsp
   1576d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15771:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15775:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15779:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1577d:	ba 00 00 00 00       	mov    $0x0,%edx
   15782:	48 89 ce             	mov    %rcx,%rsi
   15785:	48 89 c7             	mov    %rax,%rdi
   15788:	e8 87 16 00 00       	call   16e14 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>
   1578d:	c9                   	leave
   1578e:	c3                   	ret

000000000001578f <_ZSt12__relocate_aIPP13VkSemaphore_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1578f:	55                   	push   %rbp
   15790:	48 89 e5             	mov    %rsp,%rbp
   15793:	41 54                	push   %r12
   15795:	53                   	push   %rbx
   15796:	48 83 ec 20          	sub    $0x20,%rsp
   1579a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1579e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   157a2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   157a6:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   157aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   157ae:	48 89 c7             	mov    %rax,%rdi
   157b1:	e8 bf 16 00 00       	call   16e75 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   157b6:	49 89 c4             	mov    %rax,%r12
   157b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   157bd:	48 89 c7             	mov    %rax,%rdi
   157c0:	e8 b0 16 00 00       	call   16e75 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   157c5:	48 89 c3             	mov    %rax,%rbx
   157c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   157cc:	48 89 c7             	mov    %rax,%rdi
   157cf:	e8 a1 16 00 00       	call   16e75 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>
   157d4:	48 89 c7             	mov    %rax,%rdi
   157d7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   157db:	48 89 c1             	mov    %rax,%rcx
   157de:	4c 89 e2             	mov    %r12,%rdx
   157e1:	48 89 de             	mov    %rbx,%rsi
   157e4:	e8 9a 16 00 00       	call   16e83 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   157e9:	48 83 c4 20          	add    $0x20,%rsp
   157ed:	5b                   	pop    %rbx
   157ee:	41 5c                	pop    %r12
   157f0:	5d                   	pop    %rbp
   157f1:	c3                   	ret

00000000000157f2 <_ZNSt6vectorIP9VkFence_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   157f2:	55                   	push   %rbp
   157f3:	48 89 e5             	mov    %rsp,%rbp
   157f6:	48 83 ec 20          	sub    $0x20,%rsp
   157fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   157fe:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15805:	ff ff 0f 
   15808:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1580c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15810:	48 89 c7             	mov    %rax,%rdi
   15813:	e8 ce 16 00 00       	call   16ee6 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>
   15818:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1581c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   15820:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   15824:	48 89 d6             	mov    %rdx,%rsi
   15827:	48 89 c7             	mov    %rax,%rdi
   1582a:	e8 49 09 ff ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   1582f:	48 8b 00             	mov    (%rax),%rax
      }
   15832:	c9                   	leave
   15833:	c3                   	ret

0000000000015834 <_ZNKSt12_Vector_baseIP9VkFence_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   15834:	55                   	push   %rbp
   15835:	48 89 e5             	mov    %rsp,%rbp
   15838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1583c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15840:	5d                   	pop    %rbp
   15841:	c3                   	ret

0000000000015842 <_ZSt25__uninitialized_default_nIPP9VkFence_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   15842:	55                   	push   %rbp
   15843:	48 89 e5             	mov    %rsp,%rbp
   15846:	48 83 ec 20          	sub    $0x20,%rsp
   1584a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1584e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   15852:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   15856:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1585a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1585e:	48 89 d6             	mov    %rdx,%rsi
   15861:	48 89 c7             	mov    %rax,%rdi
   15864:	e8 97 16 00 00       	call   16f00 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>
    }
   15869:	c9                   	leave
   1586a:	c3                   	ret

000000000001586b <_ZNSt16allocator_traitsISaIP9VkFence_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   1586b:	55                   	push   %rbp
   1586c:	48 89 e5             	mov    %rsp,%rbp
   1586f:	48 83 ec 10          	sub    $0x10,%rsp
   15873:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15877:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1587b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1587f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15883:	ba 00 00 00 00       	mov    $0x0,%edx
   15888:	48 89 ce             	mov    %rcx,%rsi
   1588b:	48 89 c7             	mov    %rax,%rdi
   1588e:	e8 cb 16 00 00       	call   16f5e <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>
   15893:	c9                   	leave
   15894:	c3                   	ret

0000000000015895 <_ZSt12__relocate_aIPP9VkFence_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15895:	55                   	push   %rbp
   15896:	48 89 e5             	mov    %rsp,%rbp
   15899:	41 54                	push   %r12
   1589b:	53                   	push   %rbx
   1589c:	48 83 ec 20          	sub    $0x20,%rsp
   158a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158a4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   158a8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   158ac:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   158b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   158b4:	48 89 c7             	mov    %rax,%rdi
   158b7:	e8 03 17 00 00       	call   16fbf <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   158bc:	49 89 c4             	mov    %rax,%r12
   158bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   158c3:	48 89 c7             	mov    %rax,%rdi
   158c6:	e8 f4 16 00 00       	call   16fbf <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   158cb:	48 89 c3             	mov    %rax,%rbx
   158ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158d2:	48 89 c7             	mov    %rax,%rdi
   158d5:	e8 e5 16 00 00       	call   16fbf <_ZSt12__niter_baseIPP9VkFence_TET_S3_>
   158da:	48 89 c7             	mov    %rax,%rdi
   158dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   158e1:	48 89 c1             	mov    %rax,%rcx
   158e4:	4c 89 e2             	mov    %r12,%rdx
   158e7:	48 89 de             	mov    %rbx,%rsi
   158ea:	e8 de 16 00 00       	call   16fcd <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   158ef:	48 83 c4 20          	add    $0x20,%rsp
   158f3:	5b                   	pop    %rbx
   158f4:	41 5c                	pop    %r12
   158f6:	5d                   	pop    %rbp
   158f7:	c3                   	ret

00000000000158f8 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   158f8:	55                   	push   %rbp
   158f9:	48 89 e5             	mov    %rsp,%rbp
   158fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15900:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   15904:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15908:	48 8b 10             	mov    (%rax),%rdx
   1590b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1590f:	48 89 10             	mov    %rdx,(%rax)
   15912:	90                   	nop
   15913:	5d                   	pop    %rbp
   15914:	c3                   	ret

0000000000015915 <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15915:	55                   	push   %rbp
   15916:	48 89 e5             	mov    %rsp,%rbp
   15919:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1591d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15921:	5d                   	pop    %rbp
   15922:	c3                   	ret

0000000000015923 <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15923:	55                   	push   %rbp
   15924:	48 89 e5             	mov    %rsp,%rbp
   15927:	48 83 ec 10          	sub    $0x10,%rsp
   1592b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1592f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15933:	48 89 c7             	mov    %rax,%rdi
   15936:	e8 f5 16 00 00       	call   17030 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
   1593b:	c9                   	leave
   1593c:	c3                   	ret
   1593d:	90                   	nop

000000000001593e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1593e:	55                   	push   %rbp
   1593f:	48 89 e5             	mov    %rsp,%rbp
   15942:	48 83 ec 20          	sub    $0x20,%rsp
   15946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1594a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1594e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15956:	48 89 c7             	mov    %rax,%rdi
   15959:	e8 ec 16 00 00       	call   1704a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
   1595e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15962:	0f 92 c0             	setb   %al
   15965:	0f b6 c0             	movzbl %al,%eax
   15968:	48 85 c0             	test   %rax,%rax
   1596b:	0f 95 c0             	setne  %al
   1596e:	84 c0                	test   %al,%al
   15970:	74 1a                	je     1598c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15972:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15979:	ff ff 1f 
   1597c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15980:	73 05                	jae    15987 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15982:	e8 39 e9 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15987:	e8 64 e7 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1598c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15990:	48 c1 e0 03          	shl    $0x3,%rax
   15994:	48 89 c7             	mov    %rax,%rdi
   15997:	e8 84 ea fe ff       	call   4420 <_Znwm@plt>
   1599c:	90                   	nop
      }
   1599d:	c9                   	leave
   1599e:	c3                   	ret
   1599f:	90                   	nop

00000000000159a0 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   159a0:	55                   	push   %rbp
   159a1:	48 89 e5             	mov    %rsp,%rbp
   159a4:	48 83 ec 10          	sub    $0x10,%rsp
   159a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   159ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b0:	48 89 c7             	mov    %rax,%rdi
   159b3:	e8 a6 16 00 00       	call   1705e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   159b8:	c9                   	leave
   159b9:	c3                   	ret

00000000000159ba <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   159ba:	55                   	push   %rbp
   159bb:	48 89 e5             	mov    %rsp,%rbp
   159be:	48 83 ec 10          	sub    $0x10,%rsp
   159c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   159c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   159ca:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   159ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159d2:	ba 00 00 00 00       	mov    $0x0,%edx
   159d7:	48 89 ce             	mov    %rcx,%rsi
   159da:	48 89 c7             	mov    %rax,%rdi
   159dd:	e8 90 16 00 00       	call   17072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
   159e2:	c9                   	leave
   159e3:	c3                   	ret

00000000000159e4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   159e4:	55                   	push   %rbp
   159e5:	48 89 e5             	mov    %rsp,%rbp
   159e8:	48 83 ec 20          	sub    $0x20,%rsp
   159ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   159f4:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   159f9:	74 43                	je     15a3e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   159fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   159ff:	48 89 c7             	mov    %rax,%rdi
   15a02:	e8 d6 16 00 00       	call   170dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
   15a07:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a0f:	48 89 c7             	mov    %rax,%rdi
   15a12:	e8 d4 16 00 00       	call   170eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
   15a17:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
   15a1e:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   15a1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a23:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15a27:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15a2b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15a2f:	48 89 ce             	mov    %rcx,%rsi
   15a32:	48 89 c7             	mov    %rax,%rdi
   15a35:	e8 0b 17 00 00       	call   17145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
   15a3a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15a3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15a42:	c9                   	leave
   15a43:	c3                   	ret

0000000000015a44 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPPKcS4_EET0_T_S6_S5_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   15a44:	55                   	push   %rbp
   15a45:	48 89 e5             	mov    %rsp,%rbp
   15a48:	48 83 ec 20          	sub    $0x20,%rsp
   15a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15a54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   15a58:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15a5c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a64:	48 89 ce             	mov    %rcx,%rsi
   15a67:	48 89 c7             	mov    %rax,%rdi
   15a6a:	e8 1a 17 00 00       	call   17189 <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>
   15a6f:	c9                   	leave
   15a70:	c3                   	ret
   15a71:	90                   	nop

0000000000015a72 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   15a72:	55                   	push   %rbp
   15a73:	48 89 e5             	mov    %rsp,%rbp
   15a76:	48 83 ec 10          	sub    $0x10,%rsp
   15a7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   15a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a82:	48 89 c7             	mov    %rax,%rdi
   15a85:	e8 4a 17 00 00       	call   171d4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   15a8a:	48 89 c7             	mov    %rax,%rdi
   15a8d:	e8 8c de ff ff       	call   1391e <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   15a92:	c9                   	leave
   15a93:	c3                   	ret

0000000000015a94 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   15a94:	55                   	push   %rbp
   15a95:	48 89 e5             	mov    %rsp,%rbp
   15a98:	41 54                	push   %r12
   15a9a:	53                   	push   %rbx
   15a9b:	48 83 ec 20          	sub    $0x20,%rsp
   15a9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15aa3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15aa7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15aab:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   15aaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ab3:	48 89 c7             	mov    %rax,%rdi
   15ab6:	e8 27 17 00 00       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   15abb:	49 89 c4             	mov    %rax,%r12
   15abe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15ac2:	48 89 c7             	mov    %rax,%rdi
   15ac5:	e8 18 17 00 00       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   15aca:	48 89 c3             	mov    %rax,%rbx
   15acd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ad1:	48 89 c7             	mov    %rax,%rdi
   15ad4:	e8 09 17 00 00       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   15ad9:	48 89 c7             	mov    %rax,%rdi
   15adc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   15ae0:	48 89 c1             	mov    %rax,%rcx
   15ae3:	4c 89 e2             	mov    %r12,%rdx
   15ae6:	48 89 de             	mov    %rbx,%rsi
   15ae9:	e8 02 17 00 00       	call   171f0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   15aee:	48 83 c4 20          	add    $0x20,%rsp
   15af2:	5b                   	pop    %rbx
   15af3:	41 5c                	pop    %r12
   15af5:	5d                   	pop    %rbp
   15af6:	c3                   	ret
   15af7:	90                   	nop

0000000000015af8 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15af8:	55                   	push   %rbp
   15af9:	48 89 e5             	mov    %rsp,%rbp
   15afc:	48 83 ec 10          	sub    $0x10,%rsp
   15b00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15b04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b08:	48 89 c7             	mov    %rax,%rdi
   15b0b:	e8 44 17 00 00       	call   17254 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   15b10:	c9                   	leave
   15b11:	c3                   	ret

0000000000015b12 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   15b12:	55                   	push   %rbp
   15b13:	48 89 e5             	mov    %rsp,%rbp
   15b16:	48 83 ec 10          	sub    $0x10,%rsp
   15b1a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b1e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   15b22:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15b26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15b2a:	ba 00 00 00 00       	mov    $0x0,%edx
   15b2f:	48 89 ce             	mov    %rcx,%rsi
   15b32:	48 89 c7             	mov    %rax,%rdi
   15b35:	e8 2e 17 00 00       	call   17268 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
   15b3a:	c9                   	leave
   15b3b:	c3                   	ret

0000000000015b3c <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   15b3c:	55                   	push   %rbp
   15b3d:	48 89 e5             	mov    %rsp,%rbp
   15b40:	48 83 ec 20          	sub    $0x20,%rsp
   15b44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15b48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15b4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   15b50:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15b54:	48 89 d0             	mov    %rdx,%rax
   15b57:	48 c1 e0 06          	shl    $0x6,%rax
   15b5b:	48 01 d0             	add    %rdx,%rax
   15b5e:	48 c1 e0 03          	shl    $0x3,%rax
   15b62:	48 89 c2             	mov    %rax,%rdx
   15b65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15b69:	48 89 d6             	mov    %rdx,%rsi
   15b6c:	48 89 c7             	mov    %rax,%rdi
   15b6f:	e8 cc e8 fe ff       	call   4440 <_ZdlPvm@plt>
      }
   15b74:	c9                   	leave
   15b75:	c3                   	ret

0000000000015b76 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15b76:	55                   	push   %rbp
   15b77:	48 89 e5             	mov    %rsp,%rbp
   15b7a:	48 83 ec 20          	sub    $0x20,%rsp
   15b7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15b82:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15b86:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15b8b:	74 43                	je     15bd0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
   15b8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15b91:	48 89 c7             	mov    %rax,%rdi
   15b94:	e8 3a 17 00 00       	call   172d3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
   15b99:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ba1:	48 89 c7             	mov    %rax,%rdi
   15ba4:	e8 38 17 00 00       	call   172e1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
   15ba9:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
   15bb0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
   15bb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15bb5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15bb9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15bbd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bc1:	48 89 ce             	mov    %rcx,%rsi
   15bc4:	48 89 c7             	mov    %rax,%rdi
   15bc7:	e8 6f 17 00 00       	call   1733b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
   15bcc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15bd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15bd4:	c9                   	leave
   15bd5:	c3                   	ret

0000000000015bd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_create_nodeIJRKPKcEEEPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_create_node(_Args&&... __args)
   15bd6:	55                   	push   %rbp
   15bd7:	48 89 e5             	mov    %rsp,%rbp
   15bda:	48 83 ec 20          	sub    $0x20,%rsp
   15bde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15be2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   15be6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15bea:	48 89 c7             	mov    %rax,%rdi
   15bed:	e8 8e 17 00 00       	call   17380 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>
   15bf2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   15bf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15bfa:	48 89 c7             	mov    %rax,%rdi
   15bfd:	e8 2b e3 ff ff       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   15c02:	48 89 c2             	mov    %rax,%rdx
   15c05:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15c09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c0d:	48 89 ce             	mov    %rcx,%rsi
   15c10:	48 89 c7             	mov    %rax,%rdi
   15c13:	e8 90 17 00 00       	call   173a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>
	  return __tmp;
   15c18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   15c1c:	c9                   	leave
   15c1d:	c3                   	ret

0000000000015c1e <_ZSteqRKSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES8_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   15c1e:	55                   	push   %rbp
   15c1f:	48 89 e5             	mov    %rsp,%rbp
   15c22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   15c2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c2e:	48 8b 10             	mov    (%rax),%rdx
   15c31:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c35:	48 8b 00             	mov    (%rax),%rax
   15c38:	48 39 c2             	cmp    %rax,%rdx
   15c3b:	0f 94 c0             	sete   %al
   15c3e:	5d                   	pop    %rbp
   15c3f:	c3                   	ret

0000000000015c40 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   15c40:	55                   	push   %rbp
   15c41:	48 89 e5             	mov    %rsp,%rbp
   15c44:	48 83 ec 20          	sub    $0x20,%rsp
   15c48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15c4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15c50:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   15c54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15c58:	48 89 c7             	mov    %rax,%rdi
   15c5b:	e8 e6 17 00 00       	call   17446 <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>
   15c60:	48 8b 10             	mov    (%rax),%rdx
   15c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c67:	48 89 10             	mov    %rdx,(%rax)
   15c6a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15c6e:	48 89 c7             	mov    %rax,%rdi
   15c71:	e8 de 17 00 00       	call   17454 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   15c76:	48 8b 10             	mov    (%rax),%rdx
   15c79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15c81:	90                   	nop
   15c82:	c9                   	leave
   15c83:	c3                   	ret

0000000000015c84 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   15c84:	55                   	push   %rbp
   15c85:	48 89 e5             	mov    %rsp,%rbp
   15c88:	48 83 ec 10          	sub    $0x10,%rsp
   15c8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   15c90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15c94:	48 8b 00             	mov    (%rax),%rax
   15c97:	48 89 c7             	mov    %rax,%rdi
   15c9a:	e8 e1 e7 fe ff       	call   4480 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   15c9f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15ca3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   15ca6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   15caa:	c9                   	leave
   15cab:	c3                   	ret

0000000000015cac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   15cac:	55                   	push   %rbp
   15cad:	48 89 e5             	mov    %rsp,%rbp
   15cb0:	48 83 ec 10          	sub    $0x10,%rsp
   15cb4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   15cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cbc:	48 89 c7             	mov    %rax,%rdi
   15cbf:	e8 c4 e5 ff ff       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   15cc4:	c9                   	leave
   15cc5:	c3                   	ret

0000000000015cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   15cc6:	55                   	push   %rbp
   15cc7:	48 89 e5             	mov    %rsp,%rbp
   15cca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15cce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15cd2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   15cd6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15cda:	48 8b 10             	mov    (%rax),%rdx
   15cdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ce1:	48 89 10             	mov    %rdx,(%rax)
   15ce4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ce8:	48 8b 10             	mov    (%rax),%rdx
   15ceb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15cef:	48 89 50 08          	mov    %rdx,0x8(%rax)
   15cf3:	90                   	nop
   15cf4:	5d                   	pop    %rbp
   15cf5:	c3                   	ret

0000000000015cf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   15cf6:	55                   	push   %rbp
   15cf7:	48 89 e5             	mov    %rsp,%rbp
   15cfa:	41 54                	push   %r12
   15cfc:	53                   	push   %rbx
   15cfd:	48 83 ec 30          	sub    $0x30,%rsp
   15d01:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   15d05:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   15d09:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   15d0d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   15d11:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   15d16:	75 43                	jne    15d5b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   15d18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d1c:	48 89 c7             	mov    %rax,%rdi
   15d1f:	e8 52 e5 ff ff       	call   14276 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_M_endEv>
   15d24:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   15d28:	74 31                	je     15d5b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   15d2a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   15d2e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   15d32:	48 89 c7             	mov    %rax,%rdi
   15d35:	e8 72 ff ff ff       	call   15cac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base>
   15d3a:	49 89 c4             	mov    %rax,%r12
   15d3d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   15d41:	48 89 c7             	mov    %rax,%rdi
   15d44:	e8 3f e5 ff ff       	call   14288 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E>
   15d49:	4c 89 e2             	mov    %r12,%rdx
   15d4c:	48 89 c6             	mov    %rax,%rsi
   15d4f:	48 89 df             	mov    %rbx,%rdi
   15d52:	e8 5d e5 ff ff       	call   142b4 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   15d57:	84 c0                	test   %al,%al
   15d59:	74 07                	je     15d62 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x6c>
   15d5b:	b8 01 00 00 00       	mov    $0x1,%eax
   15d60:	eb 05                	jmp    15d67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E+0x71>
   15d62:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   15d67:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   15d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d6e:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   15d72:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   15d76:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   15d7a:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   15d7e:	89 c7                	mov    %eax,%edi
   15d80:	e8 cb e2 fe ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   15d85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d89:	48 8b 40 28          	mov    0x28(%rax),%rax
   15d8d:	48 8d 50 01          	lea    0x1(%rax),%rdx
   15d91:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15d95:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   15d99:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   15d9d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   15da1:	48 89 d6             	mov    %rdx,%rsi
   15da4:	48 89 c7             	mov    %rax,%rdi
   15da7:	e8 3c e4 ff ff       	call   141e8 <_ZNSt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC1EPSt18_Rb_tree_node_base>
   15dac:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   15db0:	48 83 c4 30          	add    $0x30,%rsp
   15db4:	5b                   	pop    %rbx
   15db5:	41 5c                	pop    %r12
   15db7:	5d                   	pop    %rbp
   15db8:	c3                   	ret

0000000000015db9 <_ZSt7forwardISt17_Rb_tree_iteratorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceIS8_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15db9:	55                   	push   %rbp
   15dba:	48 89 e5             	mov    %rsp,%rbp
   15dbd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dc5:	5d                   	pop    %rbp
   15dc6:	c3                   	ret

0000000000015dc7 <_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15dc7:	55                   	push   %rbp
   15dc8:	48 89 e5             	mov    %rsp,%rbp
   15dcb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15dcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15dd3:	5d                   	pop    %rbp
   15dd4:	c3                   	ret
   15dd5:	90                   	nop

0000000000015dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   15dd6:	55                   	push   %rbp
   15dd7:	48 89 e5             	mov    %rsp,%rbp
   15dda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   15dde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15de2:	5d                   	pop    %rbp
   15de3:	c3                   	ret

0000000000015de4 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr()
   15de4:	55                   	push   %rbp
   15de5:	48 89 e5             	mov    %rsp,%rbp
   15de8:	48 83 ec 10          	sub    $0x10,%rsp
   15dec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   15df0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15df4:	48 83 c0 20          	add    $0x20,%rax
   15df8:	48 89 c7             	mov    %rax,%rdi
   15dfb:	e8 62 16 00 00       	call   17462 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   15e00:	c9                   	leave
   15e01:	c3                   	ret

0000000000015e02 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE7destroyIS6_EEvRS8_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   15e02:	55                   	push   %rbp
   15e03:	48 89 e5             	mov    %rsp,%rbp
   15e06:	48 83 ec 10          	sub    $0x10,%rsp
   15e0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   15e12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e1a:	48 89 d6             	mov    %rdx,%rsi
   15e1d:	48 89 c7             	mov    %rax,%rdi
   15e20:	e8 57 16 00 00       	call   1747c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>
	}
   15e25:	90                   	nop
   15e26:	c9                   	leave
   15e27:	c3                   	ret

0000000000015e28 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE10deallocateERS8_PS7_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   15e28:	55                   	push   %rbp
   15e29:	48 89 e5             	mov    %rsp,%rbp
   15e2c:	48 83 ec 20          	sub    $0x20,%rsp
   15e30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15e38:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   15e3c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15e40:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15e44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e48:	48 89 ce             	mov    %rcx,%rsi
   15e4b:	48 89 c7             	mov    %rax,%rdi
   15e4e:	e8 49 16 00 00       	call   1749c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>
   15e53:	90                   	nop
   15e54:	c9                   	leave
   15e55:	c3                   	ret

0000000000015e56 <_ZNKSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>:
      _M_valptr() const
   15e56:	55                   	push   %rbp
   15e57:	48 89 e5             	mov    %rsp,%rbp
   15e5a:	48 83 ec 10          	sub    $0x10,%rsp
   15e5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   15e62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e66:	48 83 c0 20          	add    $0x20,%rax
   15e6a:	48 89 c7             	mov    %rax,%rdi
   15e6d:	e8 5a 16 00 00       	call   174cc <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>
   15e72:	c9                   	leave
   15e73:	c3                   	ret

0000000000015e74 <_ZNKSt9_IdentityINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_>:
      operator()(const _Tp& __x) const
   15e74:	55                   	push   %rbp
   15e75:	48 89 e5             	mov    %rsp,%rbp
   15e78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x; }
   15e80:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15e84:	5d                   	pop    %rbp
   15e85:	c3                   	ret

0000000000015e86 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   15e86:	55                   	push   %rbp
   15e87:	48 89 e5             	mov    %rsp,%rbp
   15e8a:	48 83 ec 10          	sub    $0x10,%rsp
   15e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15e92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   15e96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15e9e:	48 89 d6             	mov    %rdx,%rsi
   15ea1:	48 89 c7             	mov    %rax,%rdi
   15ea4:	e8 87 e1 fe ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   15ea9:	c1 e8 1f             	shr    $0x1f,%eax
   15eac:	c9                   	leave
   15ead:	c3                   	ret

0000000000015eae <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15eae:	55                   	push   %rbp
   15eaf:	48 89 e5             	mov    %rsp,%rbp
   15eb2:	48 83 ec 10          	sub    $0x10,%rsp
   15eb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   15eba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ebe:	48 89 c7             	mov    %rax,%rdi
   15ec1:	e8 20 16 00 00       	call   174e6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
   15ec6:	c9                   	leave
   15ec7:	c3                   	ret

0000000000015ec8 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   15ec8:	55                   	push   %rbp
   15ec9:	48 89 e5             	mov    %rsp,%rbp
   15ecc:	48 83 ec 20          	sub    $0x20,%rsp
   15ed0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15ed4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   15ed8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   15edd:	74 40                	je     15f1f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   15edf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15ee3:	48 89 c7             	mov    %rax,%rdi
   15ee6:	e8 15 16 00 00       	call   17500 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
   15eeb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   15eef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ef3:	48 89 c7             	mov    %rax,%rdi
   15ef6:	e8 13 16 00 00       	call   1750e <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
   15efb:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   15f00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15f04:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   15f08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15f0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15f10:	48 89 ce             	mov    %rcx,%rsi
   15f13:	48 89 c7             	mov    %rax,%rdi
   15f16:	e8 20 16 00 00       	call   1753b <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
   15f1b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   15f1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   15f23:	c9                   	leave
   15f24:	c3                   	ret
   15f25:	90                   	nop

0000000000015f26 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15f26:	55                   	push   %rbp
   15f27:	48 89 e5             	mov    %rsp,%rbp
   15f2a:	48 83 ec 20          	sub    $0x20,%rsp
   15f2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15f32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15f36:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f3e:	48 89 c7             	mov    %rax,%rdi
   15f41:	e8 3a 16 00 00       	call   17580 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   15f46:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15f4a:	0f 92 c0             	setb   %al
   15f4d:	0f b6 c0             	movzbl %al,%eax
   15f50:	48 85 c0             	test   %rax,%rax
   15f53:	0f 95 c0             	setne  %al
   15f56:	84 c0                	test   %al,%al
   15f58:	74 1a                	je     15f74 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15f5a:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   15f61:	ff ff 1f 
   15f64:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15f68:	73 05                	jae    15f6f <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15f6a:	e8 51 e3 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15f6f:	e8 7c e1 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15f74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15f78:	48 c1 e0 03          	shl    $0x3,%rax
   15f7c:	48 89 c7             	mov    %rax,%rdi
   15f7f:	e8 9c e4 fe ff       	call   4420 <_Znwm@plt>
   15f84:	90                   	nop
      }
   15f85:	c9                   	leave
   15f86:	c3                   	ret

0000000000015f87 <_ZSt12__niter_baseIP18VkSurfaceFormatKHRET_S2_>:
    __niter_base(_Iterator __it)
   15f87:	55                   	push   %rbp
   15f88:	48 89 e5             	mov    %rsp,%rbp
   15f8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15f8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15f93:	5d                   	pop    %rbp
   15f94:	c3                   	ret

0000000000015f95 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   15f95:	55                   	push   %rbp
   15f96:	48 89 e5             	mov    %rsp,%rbp
   15f99:	48 83 ec 30          	sub    $0x30,%rsp
   15f9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15fa1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15fa5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15fa9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15fad:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15fb1:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15fb5:	48 c1 f8 03          	sar    $0x3,%rax
   15fb9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15fbd:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15fc2:	7e 1f                	jle    15fe3 <_ZSt14__relocate_a_1I18VkSurfaceFormatKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   15fc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fc8:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15fcf:	00 
   15fd0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15fd4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15fd8:	48 89 ce             	mov    %rcx,%rsi
   15fdb:	48 89 c7             	mov    %rax,%rdi
   15fde:	e8 fd e7 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   15fe3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15fe7:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15fee:	00 
   15fef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15ff3:	48 01 d0             	add    %rdx,%rax
    }
   15ff6:	c9                   	leave
   15ff7:	c3                   	ret

0000000000015ff8 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   15ff8:	55                   	push   %rbp
   15ff9:	48 89 e5             	mov    %rsp,%rbp
   15ffc:	48 83 ec 10          	sub    $0x10,%rsp
   16000:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16004:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16008:	48 89 c7             	mov    %rax,%rdi
   1600b:	e8 84 15 00 00       	call   17594 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
   16010:	c9                   	leave
   16011:	c3                   	ret

0000000000016012 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16012:	55                   	push   %rbp
   16013:	48 89 e5             	mov    %rsp,%rbp
   16016:	48 83 ec 20          	sub    $0x20,%rsp
   1601a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1601e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16022:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16027:	74 40                	je     16069 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   16029:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1602d:	48 89 c7             	mov    %rax,%rdi
   16030:	e8 79 15 00 00       	call   175ae <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
   16035:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16039:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1603d:	48 89 c7             	mov    %rax,%rdi
   16040:	e8 77 15 00 00       	call   175bc <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
   16045:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1604a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1604e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16052:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16056:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1605a:	48 89 ce             	mov    %rcx,%rsi
   1605d:	48 89 c7             	mov    %rax,%rdi
   16060:	e8 7d 15 00 00       	call   175e2 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
   16065:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1606d:	c9                   	leave
   1606e:	c3                   	ret
   1606f:	90                   	nop

0000000000016070 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16070:	55                   	push   %rbp
   16071:	48 89 e5             	mov    %rsp,%rbp
   16074:	48 83 ec 20          	sub    $0x20,%rsp
   16078:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1607c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16080:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16084:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16088:	48 89 c7             	mov    %rax,%rdi
   1608b:	e8 96 15 00 00       	call   17626 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   16090:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16094:	0f 92 c0             	setb   %al
   16097:	0f b6 c0             	movzbl %al,%eax
   1609a:	48 85 c0             	test   %rax,%rax
   1609d:	0f 95 c0             	setne  %al
   160a0:	84 c0                	test   %al,%al
   160a2:	74 1a                	je     160be <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   160a4:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   160ab:	ff ff 3f 
   160ae:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   160b2:	73 05                	jae    160b9 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   160b4:	e8 07 e2 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   160b9:	e8 32 e0 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   160be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   160c2:	48 c1 e0 02          	shl    $0x2,%rax
   160c6:	48 89 c7             	mov    %rax,%rdi
   160c9:	e8 52 e3 fe ff       	call   4420 <_Znwm@plt>
   160ce:	90                   	nop
      }
   160cf:	c9                   	leave
   160d0:	c3                   	ret

00000000000160d1 <_ZSt12__niter_baseIP16VkPresentModeKHRET_S2_>:
    __niter_base(_Iterator __it)
   160d1:	55                   	push   %rbp
   160d2:	48 89 e5             	mov    %rsp,%rbp
   160d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   160d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   160dd:	5d                   	pop    %rbp
   160de:	c3                   	ret

00000000000160df <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   160df:	55                   	push   %rbp
   160e0:	48 89 e5             	mov    %rsp,%rbp
   160e3:	48 83 ec 30          	sub    $0x30,%rsp
   160e7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   160eb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   160ef:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   160f3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   160f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   160fb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   160ff:	48 c1 f8 02          	sar    $0x2,%rax
   16103:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16107:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1610c:	7e 1f                	jle    1612d <_ZSt14__relocate_a_1I16VkPresentModeKHRS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1610e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16112:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16119:	00 
   1611a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1611e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16122:	48 89 ce             	mov    %rcx,%rsi
   16125:	48 89 c7             	mov    %rax,%rdi
   16128:	e8 b3 e6 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   1612d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16131:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16138:	00 
   16139:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1613d:	48 01 d0             	add    %rdx,%rax
    }
   16140:	c9                   	leave
   16141:	c3                   	ret

0000000000016142 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   16142:	55                   	push   %rbp
   16143:	48 89 e5             	mov    %rsp,%rbp
   16146:	48 83 ec 10          	sub    $0x10,%rsp
   1614a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1614e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16152:	48 89 c7             	mov    %rax,%rdi
   16155:	e8 e0 14 00 00       	call   1763a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   1615a:	c9                   	leave
   1615b:	c3                   	ret

000000000001615c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1615c:	55                   	push   %rbp
   1615d:	48 89 e5             	mov    %rsp,%rbp
   16160:	48 83 ec 10          	sub    $0x10,%rsp
   16164:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16168:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1616c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16170:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16174:	ba 00 00 00 00       	mov    $0x0,%edx
   16179:	48 89 ce             	mov    %rcx,%rsi
   1617c:	48 89 c7             	mov    %rax,%rdi
   1617f:	e8 ca 14 00 00       	call   1764e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
   16184:	c9                   	leave
   16185:	c3                   	ret

0000000000016186 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16186:	55                   	push   %rbp
   16187:	48 89 e5             	mov    %rsp,%rbp
   1618a:	48 83 ec 20          	sub    $0x20,%rsp
   1618e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16192:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16196:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   1619a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1619e:	48 89 d0             	mov    %rdx,%rax
   161a1:	48 01 c0             	add    %rax,%rax
   161a4:	48 01 d0             	add    %rdx,%rax
   161a7:	48 c1 e0 03          	shl    $0x3,%rax
   161ab:	48 89 c2             	mov    %rax,%rdx
   161ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   161b2:	48 89 d6             	mov    %rdx,%rsi
   161b5:	48 89 c7             	mov    %rax,%rdi
   161b8:	e8 83 e2 fe ff       	call   4440 <_ZdlPvm@plt>
      }
   161bd:	c9                   	leave
   161be:	c3                   	ret

00000000000161bf <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   161bf:	55                   	push   %rbp
   161c0:	48 89 e5             	mov    %rsp,%rbp
   161c3:	48 83 ec 20          	sub    $0x20,%rsp
   161c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   161cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   161cf:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   161d4:	74 40                	je     16216 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   161d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   161da:	48 89 c7             	mov    %rax,%rdi
   161dd:	e8 d6 14 00 00       	call   176b8 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
   161e2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   161e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   161ea:	48 89 c7             	mov    %rax,%rdi
   161ed:	e8 d4 14 00 00       	call   176c6 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
   161f2:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   161f7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   161fb:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   161ff:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16203:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16207:	48 89 ce             	mov    %rcx,%rsi
   1620a:	48 89 c7             	mov    %rax,%rdi
   1620d:	e8 fd 14 00 00       	call   1770f <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
   16212:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1621a:	c9                   	leave
   1621b:	c3                   	ret

000000000001621c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1621c:	55                   	push   %rbp
   1621d:	48 89 e5             	mov    %rsp,%rbp
   16220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16224:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16228:	90                   	nop
   16229:	5d                   	pop    %rbp
   1622a:	c3                   	ret
   1622b:	90                   	nop

000000000001622c <_ZNKSt23_Rb_tree_const_iteratorIjE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   1622c:	55                   	push   %rbp
   1622d:	48 89 e5             	mov    %rsp,%rbp
   16230:	48 83 ec 20          	sub    $0x20,%rsp
   16234:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   16238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1623c:	48 8b 10             	mov    (%rax),%rdx
   1623f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   16243:	48 89 d6             	mov    %rdx,%rsi
   16246:	48 89 c7             	mov    %rax,%rdi
   16249:	e8 be e7 ff ff       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   1624e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16252:	c9                   	leave
   16253:	c3                   	ret

0000000000016254 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   16254:	55                   	push   %rbp
   16255:	48 89 e5             	mov    %rsp,%rbp
   16258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   1625c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16260:	48 83 c0 08          	add    $0x8,%rax
   16264:	5d                   	pop    %rbp
   16265:	c3                   	ret

0000000000016266 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   16266:	55                   	push   %rbp
   16267:	48 89 e5             	mov    %rsp,%rbp
   1626a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   1626e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16272:	48 8b 40 28          	mov    0x28(%rax),%rax
   16276:	5d                   	pop    %rbp
   16277:	c3                   	ret

0000000000016278 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   16278:	55                   	push   %rbp
   16279:	48 89 e5             	mov    %rsp,%rbp
   1627c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   16280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16284:	48 83 c0 20          	add    $0x20,%rax
   16288:	5d                   	pop    %rbp
   16289:	c3                   	ret

000000000001628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   1628a:	55                   	push   %rbp
   1628b:	48 89 e5             	mov    %rsp,%rbp
   1628e:	48 83 ec 10          	sub    $0x10,%rsp
   16292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   16296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1629a:	48 89 c7             	mov    %rax,%rdi
   1629d:	e8 b1 14 00 00       	call   17753 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   162a2:	c9                   	leave
   162a3:	c3                   	ret

00000000000162a4 <_ZNKSt4lessIjEclERKjS2_>:
      operator()(const _Tp& __x, const _Tp& __y) const
   162a4:	55                   	push   %rbp
   162a5:	48 89 e5             	mov    %rsp,%rbp
   162a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   162ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   162b0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   162b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   162b8:	8b 10                	mov    (%rax),%edx
   162ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   162be:	8b 00                	mov    (%rax),%eax
   162c0:	39 c2                	cmp    %eax,%edx
   162c2:	0f 92 c0             	setb   %al
   162c5:	5d                   	pop    %rbp
   162c6:	c3                   	ret
   162c7:	90                   	nop

00000000000162c8 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   162c8:	55                   	push   %rbp
   162c9:	48 89 e5             	mov    %rsp,%rbp
   162cc:	53                   	push   %rbx
   162cd:	48 83 ec 78          	sub    $0x78,%rsp
   162d1:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   162d5:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   162d9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   162dd:	48 89 c7             	mov    %rax,%rdi
   162e0:	e8 cb 9a ff ff       	call   fdb0 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_M_beginEv>
   162e5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   162e9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   162ed:	48 89 c7             	mov    %rax,%rdi
   162f0:	e8 5f ff ff ff       	call   16254 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_M_endEv>
   162f5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   162f9:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   162fd:	eb 51                	jmp    16350 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x88>
	  __y = __x;
   162ff:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16303:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   16307:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   1630b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1630f:	48 89 c7             	mov    %rax,%rdi
   16312:	e8 3c 14 00 00       	call   17753 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>
   16317:	48 89 c2             	mov    %rax,%rdx
   1631a:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   1631e:	48 89 c6             	mov    %rax,%rsi
   16321:	48 89 df             	mov    %rbx,%rdi
   16324:	e8 7b ff ff ff       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   16329:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   1632c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   16330:	74 0e                	je     16340 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x78>
   16332:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16336:	48 89 c7             	mov    %rax,%rdi
   16339:	e8 d5 c5 ff ff       	call   12913 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE7_S_leftEPSt18_Rb_tree_node_base>
   1633e:	eb 0c                	jmp    1634c <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x84>
   16340:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16344:	48 89 c7             	mov    %rax,%rdi
   16347:	e8 b5 c5 ff ff       	call   12901 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE8_S_rightEPSt18_Rb_tree_node_base>
   1634c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   16350:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   16354:	48 85 c0             	test   %rax,%rax
   16357:	75 a6                	jne    162ff <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x37>
      iterator __j = iterator(__y);
   16359:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   1635d:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   16361:	48 89 d6             	mov    %rdx,%rsi
   16364:	48 89 c7             	mov    %rax,%rdi
   16367:	e8 a0 e6 ff ff       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   1636c:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   16370:	74 54                	je     163c6 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xfe>
	  if (__j == begin())
   16372:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   16376:	48 89 c7             	mov    %rax,%rdi
   16379:	e8 02 14 00 00       	call   17780 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>
   1637e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   16382:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   16386:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   1638a:	48 89 d6             	mov    %rdx,%rsi
   1638d:	48 89 c7             	mov    %rax,%rdi
   16390:	e8 14 14 00 00       	call   177a9 <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>
   16395:	84 c0                	test   %al,%al
   16397:	74 21                	je     163ba <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0xf2>
	    return _Res(__x, __y);
   16399:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   1639d:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   163a1:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   163a5:	48 89 ce             	mov    %rcx,%rsi
   163a8:	48 89 c7             	mov    %rax,%rdi
   163ab:	e8 1c 14 00 00       	call   177cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   163b0:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   163b4:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   163b8:	eb 7d                	jmp    16437 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
	    --__j;
   163ba:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   163be:	48 89 c7             	mov    %rax,%rdi
   163c1:	e8 ce 00 00 00       	call   16494 <_ZNSt17_Rb_tree_iteratorIjEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   163c6:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   163ca:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   163ce:	48 89 c7             	mov    %rax,%rdi
   163d1:	e8 b4 fe ff ff       	call   1628a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt18_Rb_tree_node_base>
   163d6:	48 89 c1             	mov    %rax,%rcx
   163d9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   163dd:	48 89 c2             	mov    %rax,%rdx
   163e0:	48 89 ce             	mov    %rcx,%rsi
   163e3:	48 89 df             	mov    %rbx,%rdi
   163e6:	e8 b9 fe ff ff       	call   162a4 <_ZNKSt4lessIjEclERKjS2_>
   163eb:	84 c0                	test   %al,%al
   163ed:	74 21                	je     16410 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x148>
	return _Res(__x, __y);
   163ef:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   163f3:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   163f7:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   163fb:	48 89 ce             	mov    %rcx,%rsi
   163fe:	48 89 c7             	mov    %rax,%rdi
   16401:	e8 c6 13 00 00       	call   177cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>
   16406:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1640a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1640e:	eb 27                	jmp    16437 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE24_M_get_insert_unique_posERKj+0x16f>
      return _Res(__j._M_node, 0);
   16410:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   16417:	00 
   16418:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1641c:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   16420:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   16424:	48 89 ce             	mov    %rcx,%rsi
   16427:	48 89 c7             	mov    %rax,%rdi
   1642a:	e8 97 f8 ff ff       	call   15cc6 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1642f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   16433:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   16437:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1643b:	c9                   	leave
   1643c:	c3                   	ret
   1643d:	90                   	nop

000000000001643e <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   1643e:	55                   	push   %rbp
   1643f:	48 89 e5             	mov    %rsp,%rbp
   16442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   16446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1644a:	48 83 c0 18          	add    $0x18,%rax
   1644e:	5d                   	pop    %rbp
   1644f:	c3                   	ret

0000000000016450 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   16450:	55                   	push   %rbp
   16451:	48 89 e5             	mov    %rsp,%rbp
   16454:	48 83 ec 20          	sub    $0x20,%rsp
   16458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1645c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16460:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   16464:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16468:	48 89 c7             	mov    %rax,%rdi
   1646b:	e8 e4 0f 00 00       	call   17454 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   16470:	48 8b 10             	mov    (%rax),%rdx
   16473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16477:	48 89 10             	mov    %rdx,(%rax)
   1647a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1647e:	48 89 c7             	mov    %rax,%rdi
   16481:	e8 ce 0f 00 00       	call   17454 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   16486:	48 8b 10             	mov    (%rax),%rdx
   16489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1648d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   16491:	90                   	nop
   16492:	c9                   	leave
   16493:	c3                   	ret

0000000000016494 <_ZNSt17_Rb_tree_iteratorIjEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   16494:	55                   	push   %rbp
   16495:	48 89 e5             	mov    %rsp,%rbp
   16498:	48 83 ec 10          	sub    $0x10,%rsp
   1649c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   164a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164a4:	48 8b 00             	mov    (%rax),%rax
   164a7:	48 89 c7             	mov    %rax,%rdi
   164aa:	e8 d1 df fe ff       	call   4480 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   164af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   164b3:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   164b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   164ba:	c9                   	leave
   164bb:	c3                   	ret

00000000000164bc <_ZNSt17_Rb_tree_iteratorIjEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   164bc:	55                   	push   %rbp
   164bd:	48 89 e5             	mov    %rsp,%rbp
   164c0:	48 83 ec 10          	sub    $0x10,%rsp
   164c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   164c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   164cc:	48 8b 00             	mov    (%rax),%rax
   164cf:	48 89 c7             	mov    %rax,%rdi
   164d2:	e8 89 dd fe ff       	call   4260 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   164d7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   164db:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   164de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   164e2:	c9                   	leave
   164e3:	c3                   	ret

00000000000164e4 <_ZNKSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_Alloc_nodeclIRKjEEPSt13_Rb_tree_nodeIjEOT_>:
	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const
   164e4:	55                   	push   %rbp
   164e5:	48 89 e5             	mov    %rsp,%rbp
   164e8:	53                   	push   %rbx
   164e9:	48 83 ec 18          	sub    $0x18,%rsp
   164ed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   164f1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
   164f5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   164f9:	48 8b 18             	mov    (%rax),%rbx
   164fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16500:	48 89 c7             	mov    %rax,%rdi
   16503:	e8 7e e9 ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   16508:	48 89 c6             	mov    %rax,%rsi
   1650b:	48 89 df             	mov    %rbx,%rdi
   1650e:	e8 fd 12 00 00       	call   17810 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>
   16513:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   16517:	c9                   	leave
   16518:	c3                   	ret
   16519:	90                   	nop

000000000001651a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   1651a:	55                   	push   %rbp
   1651b:	48 89 e5             	mov    %rsp,%rbp
   1651e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   16522:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16526:	5d                   	pop    %rbp
   16527:	c3                   	ret

0000000000016528 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>:
      _M_valptr()
   16528:	55                   	push   %rbp
   16529:	48 89 e5             	mov    %rsp,%rbp
   1652c:	48 83 ec 10          	sub    $0x10,%rsp
   16530:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   16534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16538:	48 83 c0 20          	add    $0x20,%rax
   1653c:	48 89 c7             	mov    %rax,%rdi
   1653f:	e8 14 13 00 00       	call   17858 <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>
   16544:	c9                   	leave
   16545:	c3                   	ret

0000000000016546 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE7destroyIjEEvRS2_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   16546:	55                   	push   %rbp
   16547:	48 89 e5             	mov    %rsp,%rbp
   1654a:	48 83 ec 10          	sub    $0x10,%rsp
   1654e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16552:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   16556:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1655a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1655e:	48 89 d6             	mov    %rdx,%rsi
   16561:	48 89 c7             	mov    %rax,%rdi
   16564:	e8 09 13 00 00       	call   17872 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>
	}
   16569:	90                   	nop
   1656a:	c9                   	leave
   1656b:	c3                   	ret

000000000001656c <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1656c:	55                   	push   %rbp
   1656d:	48 89 e5             	mov    %rsp,%rbp
   16570:	48 83 ec 20          	sub    $0x20,%rsp
   16574:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16578:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1657c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   16580:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16584:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1658c:	48 89 ce             	mov    %rcx,%rsi
   1658f:	48 89 c7             	mov    %rax,%rdi
   16592:	e8 eb 12 00 00       	call   17882 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>
   16597:	90                   	nop
   16598:	c9                   	leave
   16599:	c3                   	ret

000000000001659a <_ZNSt6vectorI23VkDeviceQueueCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1659a:	55                   	push   %rbp
   1659b:	48 89 e5             	mov    %rsp,%rbp
   1659e:	48 83 ec 20          	sub    $0x20,%rsp
   165a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   165a6:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   165ad:	33 33 03 
   165b0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   165b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   165b8:	48 89 c7             	mov    %rax,%rdi
   165bb:	e8 fc 12 00 00       	call   178bc <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>
   165c0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   165c4:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   165c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   165cc:	48 89 d6             	mov    %rdx,%rsi
   165cf:	48 89 c7             	mov    %rax,%rdi
   165d2:	e8 a1 fb fe ff       	call   6178 <_ZSt3minImERKT_S2_S2_>
   165d7:	48 8b 00             	mov    (%rax),%rax
      }
   165da:	c9                   	leave
   165db:	c3                   	ret

00000000000165dc <_ZNKSt12_Vector_baseI23VkDeviceQueueCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   165dc:	55                   	push   %rbp
   165dd:	48 89 e5             	mov    %rsp,%rbp
   165e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   165e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   165e8:	5d                   	pop    %rbp
   165e9:	c3                   	ret

00000000000165ea <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   165ea:	55                   	push   %rbp
   165eb:	48 89 e5             	mov    %rsp,%rbp
   165ee:	48 83 ec 20          	sub    $0x20,%rsp
   165f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   165f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   165fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   165fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16602:	48 89 c7             	mov    %rax,%rdi
   16605:	e8 cc 12 00 00       	call   178d6 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   1660a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1660e:	0f 92 c0             	setb   %al
   16611:	0f b6 c0             	movzbl %al,%eax
   16614:	48 85 c0             	test   %rax,%rax
   16617:	0f 95 c0             	setne  %al
   1661a:	84 c0                	test   %al,%al
   1661c:	74 1a                	je     16638 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1661e:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   16625:	66 66 06 
   16628:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1662c:	73 05                	jae    16633 <_ZNSt15__new_allocatorI23VkDeviceQueueCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1662e:	e8 8d dc fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16633:	e8 b8 da fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16638:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1663c:	48 89 d0             	mov    %rdx,%rax
   1663f:	48 c1 e0 02          	shl    $0x2,%rax
   16643:	48 01 d0             	add    %rdx,%rax
   16646:	48 c1 e0 03          	shl    $0x3,%rax
   1664a:	48 89 c7             	mov    %rax,%rdi
   1664d:	e8 ce dd fe ff       	call   4420 <_Znwm@plt>
   16652:	90                   	nop
      }
   16653:	c9                   	leave
   16654:	c3                   	ret

0000000000016655 <_ZSt12__niter_baseIP23VkDeviceQueueCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   16655:	55                   	push   %rbp
   16656:	48 89 e5             	mov    %rsp,%rbp
   16659:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1665d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16661:	5d                   	pop    %rbp
   16662:	c3                   	ret

0000000000016663 <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16663:	55                   	push   %rbp
   16664:	48 89 e5             	mov    %rsp,%rbp
   16667:	48 83 ec 30          	sub    $0x30,%rsp
   1666b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1666f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16673:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16677:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1667b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1667f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16683:	48 c1 f8 03          	sar    $0x3,%rax
   16687:	48 89 c2             	mov    %rax,%rdx
   1668a:	48 b8 cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rax
   16691:	cc cc cc 
   16694:	48 0f af c2          	imul   %rdx,%rax
   16698:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1669c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   166a1:	7e 28                	jle    166cb <_ZSt14__relocate_a_1I23VkDeviceQueueCreateInfoS0_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS3_E4typeES5_S5_S5_RSaIT0_E+0x68>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   166a3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166a7:	48 89 d0             	mov    %rdx,%rax
   166aa:	48 c1 e0 02          	shl    $0x2,%rax
   166ae:	48 01 d0             	add    %rdx,%rax
   166b1:	48 c1 e0 03          	shl    $0x3,%rax
   166b5:	48 89 c2             	mov    %rax,%rdx
   166b8:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   166bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166c0:	48 89 ce             	mov    %rcx,%rsi
   166c3:	48 89 c7             	mov    %rax,%rdi
   166c6:	e8 15 e1 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   166cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   166cf:	48 89 d0             	mov    %rdx,%rax
   166d2:	48 c1 e0 02          	shl    $0x2,%rax
   166d6:	48 01 d0             	add    %rdx,%rax
   166d9:	48 c1 e0 03          	shl    $0x3,%rax
   166dd:	48 89 c2             	mov    %rax,%rdx
   166e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   166e4:	48 01 d0             	add    %rdx,%rax
    }
   166e7:	c9                   	leave
   166e8:	c3                   	ret

00000000000166e9 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   166e9:	55                   	push   %rbp
   166ea:	48 89 e5             	mov    %rsp,%rbp
   166ed:	48 83 ec 10          	sub    $0x10,%rsp
   166f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   166f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   166f9:	48 89 c7             	mov    %rax,%rdi
   166fc:	e8 e9 11 00 00       	call   178ea <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
   16701:	c9                   	leave
   16702:	c3                   	ret

0000000000016703 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16703:	55                   	push   %rbp
   16704:	48 89 e5             	mov    %rsp,%rbp
   16707:	48 83 ec 20          	sub    $0x20,%rsp
   1670b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1670f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16713:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16718:	74 40                	je     1675a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   1671a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1671e:	48 89 c7             	mov    %rax,%rdi
   16721:	e8 de 11 00 00       	call   17904 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
   16726:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   1672a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1672e:	48 89 c7             	mov    %rax,%rdi
   16731:	e8 dc 11 00 00       	call   17912 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
   16736:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   1673b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1673f:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16743:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16747:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1674b:	48 89 ce             	mov    %rcx,%rsi
   1674e:	48 89 c7             	mov    %rax,%rdi
   16751:	e8 e3 11 00 00       	call   17939 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
   16756:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   1675a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   1675e:	c9                   	leave
   1675f:	c3                   	ret

0000000000016760 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16760:	55                   	push   %rbp
   16761:	48 89 e5             	mov    %rsp,%rbp
   16764:	48 83 ec 20          	sub    $0x20,%rsp
   16768:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1676c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16770:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16774:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16778:	48 89 c7             	mov    %rax,%rdi
   1677b:	e8 fe 11 00 00       	call   1797e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   16780:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16784:	0f 92 c0             	setb   %al
   16787:	0f b6 c0             	movzbl %al,%eax
   1678a:	48 85 c0             	test   %rax,%rax
   1678d:	0f 95 c0             	setne  %al
   16790:	84 c0                	test   %al,%al
   16792:	74 1a                	je     167ae <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16794:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1679b:	ff ff 1f 
   1679e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   167a2:	73 05                	jae    167a9 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   167a4:	e8 17 db fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   167a9:	e8 42 d9 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   167ae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   167b2:	48 c1 e0 03          	shl    $0x3,%rax
   167b6:	48 89 c7             	mov    %rax,%rdi
   167b9:	e8 62 dc fe ff       	call   4420 <_Znwm@plt>
   167be:	90                   	nop
      }
   167bf:	c9                   	leave
   167c0:	c3                   	ret

00000000000167c1 <_ZSt12__niter_baseIPP9VkImage_TET_S3_>:
    __niter_base(_Iterator __it)
   167c1:	55                   	push   %rbp
   167c2:	48 89 e5             	mov    %rsp,%rbp
   167c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   167c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   167cd:	5d                   	pop    %rbp
   167ce:	c3                   	ret

00000000000167cf <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   167cf:	55                   	push   %rbp
   167d0:	48 89 e5             	mov    %rsp,%rbp
   167d3:	48 83 ec 30          	sub    $0x30,%rsp
   167d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   167db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   167df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   167e3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   167e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   167eb:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   167ef:	48 c1 f8 03          	sar    $0x3,%rax
   167f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   167f7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   167fc:	7e 1f                	jle    1681d <_ZSt14__relocate_a_1IP9VkImage_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   167fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16802:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16809:	00 
   1680a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1680e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16812:	48 89 ce             	mov    %rcx,%rsi
   16815:	48 89 c7             	mov    %rax,%rdi
   16818:	e8 c3 df fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   1681d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16821:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16828:	00 
   16829:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1682d:	48 01 d0             	add    %rdx,%rax
    }
   16830:	c9                   	leave
   16831:	c3                   	ret

0000000000016832 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16832:	55                   	push   %rbp
   16833:	48 89 e5             	mov    %rsp,%rbp
   16836:	48 83 ec 10          	sub    $0x10,%rsp
   1683a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1683e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16842:	48 89 c7             	mov    %rax,%rdi
   16845:	e8 48 11 00 00       	call   17992 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   1684a:	c9                   	leave
   1684b:	c3                   	ret

000000000001684c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   1684c:	55                   	push   %rbp
   1684d:	48 89 e5             	mov    %rsp,%rbp
   16850:	48 83 ec 20          	sub    $0x20,%rsp
   16854:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16858:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1685c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16861:	74 40                	je     168a3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16867:	48 89 c7             	mov    %rax,%rdi
   1686a:	e8 3d 11 00 00       	call   179ac <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1686f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16873:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16877:	48 89 c7             	mov    %rax,%rdi
   1687a:	e8 3b 11 00 00       	call   179ba <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1687f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16884:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16888:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1688c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16894:	48 89 ce             	mov    %rcx,%rsi
   16897:	48 89 c7             	mov    %rax,%rdi
   1689a:	e8 42 11 00 00       	call   179e1 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1689f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   168a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   168a7:	c9                   	leave
   168a8:	c3                   	ret
   168a9:	90                   	nop

00000000000168aa <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   168aa:	55                   	push   %rbp
   168ab:	48 89 e5             	mov    %rsp,%rbp
   168ae:	48 83 ec 20          	sub    $0x20,%rsp
   168b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   168b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   168ba:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   168be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   168c2:	48 89 c7             	mov    %rax,%rdi
   168c5:	e8 5c 11 00 00       	call   17a26 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   168ca:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   168ce:	0f 92 c0             	setb   %al
   168d1:	0f b6 c0             	movzbl %al,%eax
   168d4:	48 85 c0             	test   %rax,%rax
   168d7:	0f 95 c0             	setne  %al
   168da:	84 c0                	test   %al,%al
   168dc:	74 1a                	je     168f8 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   168de:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   168e5:	ff ff 1f 
   168e8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   168ec:	73 05                	jae    168f3 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   168ee:	e8 cd d9 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   168f3:	e8 f8 d7 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   168f8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   168fc:	48 c1 e0 03          	shl    $0x3,%rax
   16900:	48 89 c7             	mov    %rax,%rdi
   16903:	e8 18 db fe ff       	call   4420 <_Znwm@plt>
   16908:	90                   	nop
      }
   16909:	c9                   	leave
   1690a:	c3                   	ret

000000000001690b <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   1690b:	55                   	push   %rbp
   1690c:	48 89 e5             	mov    %rsp,%rbp
   1690f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16913:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16917:	5d                   	pop    %rbp
   16918:	c3                   	ret

0000000000016919 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16919:	55                   	push   %rbp
   1691a:	48 89 e5             	mov    %rsp,%rbp
   1691d:	48 83 ec 30          	sub    $0x30,%rsp
   16921:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16925:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16929:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1692d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16931:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16935:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16939:	48 c1 f8 03          	sar    $0x3,%rax
   1693d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16941:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16946:	7e 1f                	jle    16967 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16948:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1694c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16953:	00 
   16954:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16958:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1695c:	48 89 ce             	mov    %rcx,%rsi
   1695f:	48 89 c7             	mov    %rax,%rdi
   16962:	e8 79 de fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   16967:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1696b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16972:	00 
   16973:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16977:	48 01 d0             	add    %rdx,%rax
    }
   1697a:	c9                   	leave
   1697b:	c3                   	ret

000000000001697c <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   1697c:	55                   	push   %rbp
   1697d:	48 89 e5             	mov    %rsp,%rbp
   16980:	48 83 ec 10          	sub    $0x10,%rsp
   16984:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   16988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1698c:	48 89 c7             	mov    %rax,%rdi
   1698f:	e8 a6 10 00 00       	call   17a3a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   16994:	c9                   	leave
   16995:	c3                   	ret

0000000000016996 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
   16996:	55                   	push   %rbp
   16997:	48 89 e5             	mov    %rsp,%rbp
   1699a:	48 83 ec 10          	sub    $0x10,%rsp
   1699e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   169a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   169a6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   169aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169ae:	ba 00 00 00 00       	mov    $0x0,%edx
   169b3:	48 89 ce             	mov    %rcx,%rsi
   169b6:	48 89 c7             	mov    %rax,%rdi
   169b9:	e8 90 10 00 00       	call   17a4e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
   169be:	c9                   	leave
   169bf:	c3                   	ret

00000000000169c0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   169c0:	55                   	push   %rbp
   169c1:	48 89 e5             	mov    %rsp,%rbp
   169c4:	48 83 ec 20          	sub    $0x20,%rsp
   169c8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   169cc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   169d0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   169d5:	74 40                	je     16a17 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
   169d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   169db:	48 89 c7             	mov    %rax,%rdi
   169de:	e8 32 ef ff ff       	call   15915 <_ZSt11__addressofIcEPT_RS0_>
   169e3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   169e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   169eb:	48 89 c7             	mov    %rax,%rdi
   169ee:	e8 a3 10 00 00       	call   17a96 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
   169f3:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   169f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   169fc:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16a00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16a04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a08:	48 89 ce             	mov    %rcx,%rsi
   16a0b:	48 89 c7             	mov    %rax,%rdi
   16a0e:	e8 a6 10 00 00       	call   17ab9 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
   16a13:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16a17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16a1b:	c9                   	leave
   16a1c:	c3                   	ret
   16a1d:	90                   	nop

0000000000016a1e <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   16a1e:	55                   	push   %rbp
   16a1f:	48 89 e5             	mov    %rsp,%rbp
   16a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16a2a:	90                   	nop
   16a2b:	5d                   	pop    %rbp
   16a2c:	c3                   	ret
   16a2d:	90                   	nop

0000000000016a2e <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   16a2e:	55                   	push   %rbp
   16a2f:	48 89 e5             	mov    %rsp,%rbp
   16a32:	48 83 ec 20          	sub    $0x20,%rsp
   16a36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a3a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16a3e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   16a42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16a46:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   16a4d:	00 
   16a4e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16a52:	48 89 d6             	mov    %rdx,%rsi
   16a55:	48 89 c7             	mov    %rax,%rdi
   16a58:	e8 e3 d9 fe ff       	call   4440 <_ZdlPvm@plt>
      }
   16a5d:	c9                   	leave
   16a5e:	c3                   	ret

0000000000016a5f <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16a5f:	55                   	push   %rbp
   16a60:	48 89 e5             	mov    %rsp,%rbp
   16a63:	48 83 ec 10          	sub    $0x10,%rsp
   16a67:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16a6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a6f:	48 89 c7             	mov    %rax,%rdi
   16a72:	e8 87 10 00 00       	call   17afe <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>
      }
   16a77:	c9                   	leave
   16a78:	c3                   	ret
   16a79:	90                   	nop

0000000000016a7a <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16a7a:	55                   	push   %rbp
   16a7b:	48 89 e5             	mov    %rsp,%rbp
   16a7e:	48 83 ec 20          	sub    $0x20,%rsp
   16a82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16a86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16a8a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16a92:	48 89 c7             	mov    %rax,%rdi
   16a95:	e8 7e 10 00 00       	call   17b18 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   16a9a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16a9e:	0f 92 c0             	setb   %al
   16aa1:	0f b6 c0             	movzbl %al,%eax
   16aa4:	48 85 c0             	test   %rax,%rax
   16aa7:	0f 95 c0             	setne  %al
   16aaa:	84 c0                	test   %al,%al
   16aac:	74 1a                	je     16ac8 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16aae:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   16ab5:	ff ff 3f 
   16ab8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16abc:	73 05                	jae    16ac3 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16abe:	e8 fd d7 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16ac3:	e8 28 d6 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16ac8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16acc:	48 c1 e0 02          	shl    $0x2,%rax
   16ad0:	48 89 c7             	mov    %rax,%rdi
   16ad3:	e8 48 d9 fe ff       	call   4420 <_Znwm@plt>
   16ad8:	90                   	nop
      }
   16ad9:	c9                   	leave
   16ada:	c3                   	ret

0000000000016adb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   16adb:	55                   	push   %rbp
   16adc:	48 89 e5             	mov    %rsp,%rbp
   16adf:	48 83 ec 20          	sub    $0x20,%rsp
   16ae3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16ae7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16aeb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   16aef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   16af3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   16af7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16afb:	48 89 ce             	mov    %rcx,%rsi
   16afe:	48 89 c7             	mov    %rax,%rdi
   16b01:	e8 26 10 00 00       	call   17b2c <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
   16b06:	c9                   	leave
   16b07:	c3                   	ret

0000000000016b08 <_ZNSt16allocator_traitsISaIP15VkFramebuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16b08:	55                   	push   %rbp
   16b09:	48 89 e5             	mov    %rsp,%rbp
   16b0c:	48 83 ec 10          	sub    $0x10,%rsp
   16b10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16b14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b18:	48 89 c7             	mov    %rax,%rdi
   16b1b:	e8 58 10 00 00       	call   17b78 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>
      }
   16b20:	c9                   	leave
   16b21:	c3                   	ret

0000000000016b22 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16b22:	55                   	push   %rbp
   16b23:	48 89 e5             	mov    %rsp,%rbp
   16b26:	48 83 ec 20          	sub    $0x20,%rsp
   16b2a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16b2e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16b32:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16b37:	74 40                	je     16b79 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP15VkFramebuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16b39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b3d:	48 89 c7             	mov    %rax,%rdi
   16b40:	e8 4d 10 00 00       	call   17b92 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>
   16b45:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16b49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b4d:	48 89 c7             	mov    %rax,%rdi
   16b50:	e8 4b 10 00 00       	call   17ba0 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>
	      ++__first;
   16b55:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16b5a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16b5e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16b62:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16b66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16b6a:	48 89 ce             	mov    %rcx,%rsi
   16b6d:	48 89 c7             	mov    %rax,%rdi
   16b70:	e8 52 10 00 00       	call   17bc7 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>
   16b75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16b79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16b7d:	c9                   	leave
   16b7e:	c3                   	ret
   16b7f:	90                   	nop

0000000000016b80 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16b80:	55                   	push   %rbp
   16b81:	48 89 e5             	mov    %rsp,%rbp
   16b84:	48 83 ec 20          	sub    $0x20,%rsp
   16b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16b8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16b90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16b94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16b98:	48 89 c7             	mov    %rax,%rdi
   16b9b:	e8 6c 10 00 00       	call   17c0c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   16ba0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16ba4:	0f 92 c0             	setb   %al
   16ba7:	0f b6 c0             	movzbl %al,%eax
   16baa:	48 85 c0             	test   %rax,%rax
   16bad:	0f 95 c0             	setne  %al
   16bb0:	84 c0                	test   %al,%al
   16bb2:	74 1a                	je     16bce <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16bb4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16bbb:	ff ff 1f 
   16bbe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16bc2:	73 05                	jae    16bc9 <_ZNSt15__new_allocatorIP15VkFramebuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16bc4:	e8 f7 d6 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16bc9:	e8 22 d5 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16bce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16bd2:	48 c1 e0 03          	shl    $0x3,%rax
   16bd6:	48 89 c7             	mov    %rax,%rdi
   16bd9:	e8 42 d8 fe ff       	call   4420 <_Znwm@plt>
   16bde:	90                   	nop
      }
   16bdf:	c9                   	leave
   16be0:	c3                   	ret

0000000000016be1 <_ZSt12__niter_baseIPP15VkFramebuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   16be1:	55                   	push   %rbp
   16be2:	48 89 e5             	mov    %rsp,%rbp
   16be5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16be9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16bed:	5d                   	pop    %rbp
   16bee:	c3                   	ret

0000000000016bef <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16bef:	55                   	push   %rbp
   16bf0:	48 89 e5             	mov    %rsp,%rbp
   16bf3:	48 83 ec 30          	sub    $0x30,%rsp
   16bf7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16bfb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16bff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16c03:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16c07:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16c0b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16c0f:	48 c1 f8 03          	sar    $0x3,%rax
   16c13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16c17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16c1c:	7e 1f                	jle    16c3d <_ZSt14__relocate_a_1IP15VkFramebuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16c1e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c22:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16c29:	00 
   16c2a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16c2e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c32:	48 89 ce             	mov    %rcx,%rsi
   16c35:	48 89 c7             	mov    %rax,%rdi
   16c38:	e8 a3 db fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   16c3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c41:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16c48:	00 
   16c49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16c4d:	48 01 d0             	add    %rdx,%rax
    }
   16c50:	c9                   	leave
   16c51:	c3                   	ret

0000000000016c52 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16c52:	55                   	push   %rbp
   16c53:	48 89 e5             	mov    %rsp,%rbp
   16c56:	48 83 ec 10          	sub    $0x10,%rsp
   16c5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16c5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c62:	48 89 c7             	mov    %rax,%rdi
   16c65:	e8 b6 0f 00 00       	call   17c20 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
   16c6a:	c9                   	leave
   16c6b:	c3                   	ret

0000000000016c6c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16c6c:	55                   	push   %rbp
   16c6d:	48 89 e5             	mov    %rsp,%rbp
   16c70:	48 83 ec 20          	sub    $0x20,%rsp
   16c74:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16c78:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16c7c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16c81:	74 40                	je     16cc3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16c83:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16c87:	48 89 c7             	mov    %rax,%rdi
   16c8a:	e8 ab 0f 00 00       	call   17c3a <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
   16c8f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16c97:	48 89 c7             	mov    %rax,%rdi
   16c9a:	e8 a9 0f 00 00       	call   17c48 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
   16c9f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16ca4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16ca8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16cac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16cb0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16cb4:	48 89 ce             	mov    %rcx,%rsi
   16cb7:	48 89 c7             	mov    %rax,%rdi
   16cba:	e8 b0 0f 00 00       	call   17c6f <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
   16cbf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16cc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16cc7:	c9                   	leave
   16cc8:	c3                   	ret
   16cc9:	90                   	nop

0000000000016cca <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16cca:	55                   	push   %rbp
   16ccb:	48 89 e5             	mov    %rsp,%rbp
   16cce:	48 83 ec 20          	sub    $0x20,%rsp
   16cd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16cd6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16cda:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16cde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ce2:	48 89 c7             	mov    %rax,%rdi
   16ce5:	e8 ca 0f 00 00       	call   17cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
   16cea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16cee:	0f 92 c0             	setb   %al
   16cf1:	0f b6 c0             	movzbl %al,%eax
   16cf4:	48 85 c0             	test   %rax,%rax
   16cf7:	0f 95 c0             	setne  %al
   16cfa:	84 c0                	test   %al,%al
   16cfc:	74 1a                	je     16d18 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16cfe:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16d05:	ff ff 1f 
   16d08:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16d0c:	73 05                	jae    16d13 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16d0e:	e8 ad d5 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16d13:	e8 d8 d3 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16d18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16d1c:	48 c1 e0 03          	shl    $0x3,%rax
   16d20:	48 89 c7             	mov    %rax,%rdi
   16d23:	e8 f8 d6 fe ff       	call   4420 <_Znwm@plt>
   16d28:	90                   	nop
      }
   16d29:	c9                   	leave
   16d2a:	c3                   	ret

0000000000016d2b <_ZSt12__niter_baseIPP17VkCommandBuffer_TET_S3_>:
    __niter_base(_Iterator __it)
   16d2b:	55                   	push   %rbp
   16d2c:	48 89 e5             	mov    %rsp,%rbp
   16d2f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d37:	5d                   	pop    %rbp
   16d38:	c3                   	ret

0000000000016d39 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16d39:	55                   	push   %rbp
   16d3a:	48 89 e5             	mov    %rsp,%rbp
   16d3d:	48 83 ec 30          	sub    $0x30,%rsp
   16d41:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16d45:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16d49:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16d4d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16d51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16d55:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16d59:	48 c1 f8 03          	sar    $0x3,%rax
   16d5d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16d61:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16d66:	7e 1f                	jle    16d87 <_ZSt14__relocate_a_1IP17VkCommandBuffer_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d6c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16d73:	00 
   16d74:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16d78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d7c:	48 89 ce             	mov    %rcx,%rsi
   16d7f:	48 89 c7             	mov    %rax,%rdi
   16d82:	e8 59 da fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   16d87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16d8b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16d92:	00 
   16d93:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16d97:	48 01 d0             	add    %rdx,%rax
    }
   16d9a:	c9                   	leave
   16d9b:	c3                   	ret

0000000000016d9c <_ZNSt16allocator_traitsISaIP13VkSemaphore_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16d9c:	55                   	push   %rbp
   16d9d:	48 89 e5             	mov    %rsp,%rbp
   16da0:	48 83 ec 10          	sub    $0x10,%rsp
   16da4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16da8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16dac:	48 89 c7             	mov    %rax,%rdi
   16daf:	e8 14 0f 00 00       	call   17cc8 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>
      }
   16db4:	c9                   	leave
   16db5:	c3                   	ret

0000000000016db6 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16db6:	55                   	push   %rbp
   16db7:	48 89 e5             	mov    %rsp,%rbp
   16dba:	48 83 ec 20          	sub    $0x20,%rsp
   16dbe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16dc2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16dc6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16dcb:	74 40                	je     16e0d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkSemaphore_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16dcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dd1:	48 89 c7             	mov    %rax,%rdi
   16dd4:	e8 09 0f 00 00       	call   17ce2 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>
   16dd9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16ddd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16de1:	48 89 c7             	mov    %rax,%rdi
   16de4:	e8 07 0f 00 00       	call   17cf0 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>
	      ++__first;
   16de9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16dee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16df2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16df6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16dfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16dfe:	48 89 ce             	mov    %rcx,%rsi
   16e01:	48 89 c7             	mov    %rax,%rdi
   16e04:	e8 0e 0f 00 00       	call   17d17 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>
   16e09:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16e0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16e11:	c9                   	leave
   16e12:	c3                   	ret
   16e13:	90                   	nop

0000000000016e14 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16e14:	55                   	push   %rbp
   16e15:	48 89 e5             	mov    %rsp,%rbp
   16e18:	48 83 ec 20          	sub    $0x20,%rsp
   16e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16e20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16e24:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16e28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e2c:	48 89 c7             	mov    %rax,%rdi
   16e2f:	e8 28 0f 00 00       	call   17d5c <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   16e34:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e38:	0f 92 c0             	setb   %al
   16e3b:	0f b6 c0             	movzbl %al,%eax
   16e3e:	48 85 c0             	test   %rax,%rax
   16e41:	0f 95 c0             	setne  %al
   16e44:	84 c0                	test   %al,%al
   16e46:	74 1a                	je     16e62 <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16e48:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16e4f:	ff ff 1f 
   16e52:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16e56:	73 05                	jae    16e5d <_ZNSt15__new_allocatorIP13VkSemaphore_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16e58:	e8 63 d4 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16e5d:	e8 8e d2 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16e62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16e66:	48 c1 e0 03          	shl    $0x3,%rax
   16e6a:	48 89 c7             	mov    %rax,%rdi
   16e6d:	e8 ae d5 fe ff       	call   4420 <_Znwm@plt>
   16e72:	90                   	nop
      }
   16e73:	c9                   	leave
   16e74:	c3                   	ret

0000000000016e75 <_ZSt12__niter_baseIPP13VkSemaphore_TET_S3_>:
    __niter_base(_Iterator __it)
   16e75:	55                   	push   %rbp
   16e76:	48 89 e5             	mov    %rsp,%rbp
   16e79:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16e7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16e81:	5d                   	pop    %rbp
   16e82:	c3                   	ret

0000000000016e83 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16e83:	55                   	push   %rbp
   16e84:	48 89 e5             	mov    %rsp,%rbp
   16e87:	48 83 ec 30          	sub    $0x30,%rsp
   16e8b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16e8f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16e93:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16e97:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16e9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16e9f:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16ea3:	48 c1 f8 03          	sar    $0x3,%rax
   16ea7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16eab:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16eb0:	7e 1f                	jle    16ed1 <_ZSt14__relocate_a_1IP13VkSemaphore_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16eb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16eb6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16ebd:	00 
   16ebe:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   16ec2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ec6:	48 89 ce             	mov    %rcx,%rsi
   16ec9:	48 89 c7             	mov    %rax,%rdi
   16ecc:	e8 0f d9 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   16ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ed5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   16edc:	00 
   16edd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   16ee1:	48 01 d0             	add    %rdx,%rax
    }
   16ee4:	c9                   	leave
   16ee5:	c3                   	ret

0000000000016ee6 <_ZNSt16allocator_traitsISaIP9VkFence_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   16ee6:	55                   	push   %rbp
   16ee7:	48 89 e5             	mov    %rsp,%rbp
   16eea:	48 83 ec 10          	sub    $0x10,%rsp
   16eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   16ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16ef6:	48 89 c7             	mov    %rax,%rdi
   16ef9:	e8 72 0e 00 00       	call   17d70 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>
      }
   16efe:	c9                   	leave
   16eff:	c3                   	ret

0000000000016f00 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   16f00:	55                   	push   %rbp
   16f01:	48 89 e5             	mov    %rsp,%rbp
   16f04:	48 83 ec 20          	sub    $0x20,%rsp
   16f08:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16f0c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   16f10:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   16f15:	74 40                	je     16f57 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkFence_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   16f17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f1b:	48 89 c7             	mov    %rax,%rdi
   16f1e:	e8 67 0e 00 00       	call   17d8a <_ZSt11__addressofIP9VkFence_TEPT_RS2_>
   16f23:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   16f27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f2b:	48 89 c7             	mov    %rax,%rdi
   16f2e:	e8 65 0e 00 00       	call   17d98 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>
	      ++__first;
   16f33:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   16f38:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16f3c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   16f40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   16f44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   16f48:	48 89 ce             	mov    %rcx,%rsi
   16f4b:	48 89 c7             	mov    %rax,%rdi
   16f4e:	e8 6c 0e 00 00       	call   17dbf <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>
   16f53:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   16f57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   16f5b:	c9                   	leave
   16f5c:	c3                   	ret
   16f5d:	90                   	nop

0000000000016f5e <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   16f5e:	55                   	push   %rbp
   16f5f:	48 89 e5             	mov    %rsp,%rbp
   16f62:	48 83 ec 20          	sub    $0x20,%rsp
   16f66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   16f6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   16f6e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   16f72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16f76:	48 89 c7             	mov    %rax,%rdi
   16f79:	e8 86 0e 00 00       	call   17e04 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   16f7e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16f82:	0f 92 c0             	setb   %al
   16f85:	0f b6 c0             	movzbl %al,%eax
   16f88:	48 85 c0             	test   %rax,%rax
   16f8b:	0f 95 c0             	setne  %al
   16f8e:	84 c0                	test   %al,%al
   16f90:	74 1a                	je     16fac <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   16f92:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   16f99:	ff ff 1f 
   16f9c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   16fa0:	73 05                	jae    16fa7 <_ZNSt15__new_allocatorIP9VkFence_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   16fa2:	e8 19 d3 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   16fa7:	e8 44 d1 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   16fac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   16fb0:	48 c1 e0 03          	shl    $0x3,%rax
   16fb4:	48 89 c7             	mov    %rax,%rdi
   16fb7:	e8 64 d4 fe ff       	call   4420 <_Znwm@plt>
   16fbc:	90                   	nop
      }
   16fbd:	c9                   	leave
   16fbe:	c3                   	ret

0000000000016fbf <_ZSt12__niter_baseIPP9VkFence_TET_S3_>:
    __niter_base(_Iterator __it)
   16fbf:	55                   	push   %rbp
   16fc0:	48 89 e5             	mov    %rsp,%rbp
   16fc3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   16fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   16fcb:	5d                   	pop    %rbp
   16fcc:	c3                   	ret

0000000000016fcd <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   16fcd:	55                   	push   %rbp
   16fce:	48 89 e5             	mov    %rsp,%rbp
   16fd1:	48 83 ec 30          	sub    $0x30,%rsp
   16fd5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   16fd9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   16fdd:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   16fe1:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   16fe5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   16fe9:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   16fed:	48 c1 f8 03          	sar    $0x3,%rax
   16ff1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   16ff5:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   16ffa:	7e 1f                	jle    1701b <_ZSt14__relocate_a_1IP9VkFence_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   16ffc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17000:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17007:	00 
   17008:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1700c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17010:	48 89 ce             	mov    %rcx,%rsi
   17013:	48 89 c7             	mov    %rax,%rdi
   17016:	e8 c5 d7 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   1701b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1701f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17026:	00 
   17027:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1702b:	48 01 d0             	add    %rdx,%rax
    }
   1702e:	c9                   	leave
   1702f:	c3                   	ret

0000000000017030 <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17030:	55                   	push   %rbp
   17031:	48 89 e5             	mov    %rsp,%rbp
   17034:	48 83 ec 10          	sub    $0x10,%rsp
   17038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1703c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17040:	48 89 c7             	mov    %rax,%rdi
   17043:	e8 02 00 00 00       	call   1704a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
   17048:	c9                   	leave
   17049:	c3                   	ret

000000000001704a <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1704a:	55                   	push   %rbp
   1704b:	48 89 e5             	mov    %rsp,%rbp
   1704e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17052:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17059:	ff ff 0f 
      }
   1705c:	5d                   	pop    %rbp
   1705d:	c3                   	ret

000000000001705e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1705e:	55                   	push   %rbp
   1705f:	48 89 e5             	mov    %rsp,%rbp
   17062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17066:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   1706d:	07 7e 00 
      }
   17070:	5d                   	pop    %rbp
   17071:	c3                   	ret

0000000000017072 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17072:	55                   	push   %rbp
   17073:	48 89 e5             	mov    %rsp,%rbp
   17076:	48 83 ec 20          	sub    $0x20,%rsp
   1707a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1707e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17086:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1708a:	48 89 c7             	mov    %rax,%rdi
   1708d:	e8 cc ff ff ff       	call   1705e <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
   17092:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17096:	0f 92 c0             	setb   %al
   17099:	0f b6 c0             	movzbl %al,%eax
   1709c:	48 85 c0             	test   %rax,%rax
   1709f:	0f 95 c0             	setne  %al
   170a2:	84 c0                	test   %al,%al
   170a4:	74 1a                	je     170c0 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   170a6:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
   170ad:	0f fc 00 
   170b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   170b4:	73 05                	jae    170bb <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   170b6:	e8 05 d2 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   170bb:	e8 30 d0 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   170c0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   170c4:	48 89 d0             	mov    %rdx,%rax
   170c7:	48 c1 e0 06          	shl    $0x6,%rax
   170cb:	48 01 d0             	add    %rdx,%rax
   170ce:	48 c1 e0 02          	shl    $0x2,%rax
   170d2:	48 89 c7             	mov    %rax,%rdi
   170d5:	e8 46 d3 fe ff       	call   4420 <_Znwm@plt>
   170da:	90                   	nop
      }
   170db:	c9                   	leave
   170dc:	c3                   	ret

00000000000170dd <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   170dd:	55                   	push   %rbp
   170de:	48 89 e5             	mov    %rsp,%rbp
   170e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   170e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170e9:	5d                   	pop    %rbp
   170ea:	c3                   	ret

00000000000170eb <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   170eb:	55                   	push   %rbp
   170ec:	48 89 e5             	mov    %rsp,%rbp
   170ef:	48 83 ec 10          	sub    $0x10,%rsp
   170f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   170f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   170fb:	48 89 c6             	mov    %rax,%rsi
   170fe:	bf 04 01 00 00       	mov    $0x104,%edi
   17103:	e8 65 e2 fe ff       	call   536d <_ZnwmPv>
   17108:	b9 04 01 00 00       	mov    $0x104,%ecx
   1710d:	be 00 00 00 00       	mov    $0x0,%esi
   17112:	48 89 30             	mov    %rsi,(%rax)
   17115:	89 ca                	mov    %ecx,%edx
   17117:	48 01 c2             	add    %rax,%rdx
   1711a:	48 83 c2 08          	add    $0x8,%rdx
   1711e:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   17122:	48 8d 50 08          	lea    0x8(%rax),%rdx
   17126:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   1712a:	48 29 d0             	sub    %rdx,%rax
   1712d:	01 c1                	add    %eax,%ecx
   1712f:	83 e1 f8             	and    $0xfffffff8,%ecx
   17132:	89 c8                	mov    %ecx,%eax
   17134:	c1 e8 03             	shr    $0x3,%eax
   17137:	89 c1                	mov    %eax,%ecx
   17139:	48 89 d7             	mov    %rdx,%rdi
   1713c:	48 89 f0             	mov    %rsi,%rax
   1713f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   17142:	90                   	nop
   17143:	c9                   	leave
   17144:	c3                   	ret

0000000000017145 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17145:	55                   	push   %rbp
   17146:	48 89 e5             	mov    %rsp,%rbp
   17149:	48 83 ec 20          	sub    $0x20,%rsp
   1714d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17151:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17155:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17159:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1715d:	48 89 c7             	mov    %rax,%rdi
   17160:	e8 b3 0c 00 00       	call   17e18 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17165:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17169:	48 89 c7             	mov    %rax,%rdi
   1716c:	e8 0e e2 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17171:	48 89 c1             	mov    %rax,%rcx
   17174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17178:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1717c:	48 89 ce             	mov    %rcx,%rsi
   1717f:	48 89 c7             	mov    %rax,%rdi
   17182:	e8 9c 0c 00 00       	call   17e23 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   17187:	c9                   	leave
   17188:	c3                   	ret

0000000000017189 <_ZSt4copyIPPKcS2_ET0_T_S4_S3_>:
    copy(_II __first, _II __last, _OI __result)
   17189:	55                   	push   %rbp
   1718a:	48 89 e5             	mov    %rsp,%rbp
   1718d:	53                   	push   %rbx
   1718e:	48 83 ec 28          	sub    $0x28,%rsp
   17192:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17196:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1719a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   1719e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   171a2:	48 89 c7             	mov    %rax,%rdi
   171a5:	e8 e8 0c 00 00       	call   17e92 <_ZSt12__miter_baseIPPKcET_S3_>
   171aa:	48 89 c3             	mov    %rax,%rbx
   171ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   171b1:	48 89 c7             	mov    %rax,%rdi
   171b4:	e8 d9 0c 00 00       	call   17e92 <_ZSt12__miter_baseIPPKcET_S3_>
   171b9:	48 89 c1             	mov    %rax,%rcx
   171bc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   171c0:	48 89 c2             	mov    %rax,%rdx
   171c3:	48 89 de             	mov    %rbx,%rsi
   171c6:	48 89 cf             	mov    %rcx,%rdi
   171c9:	e8 d2 0c 00 00       	call   17ea0 <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>
    }
   171ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   171d2:	c9                   	leave
   171d3:	c3                   	ret

00000000000171d4 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   171d4:	55                   	push   %rbp
   171d5:	48 89 e5             	mov    %rsp,%rbp
   171d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   171dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171e0:	5d                   	pop    %rbp
   171e1:	c3                   	ret

00000000000171e2 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   171e2:	55                   	push   %rbp
   171e3:	48 89 e5             	mov    %rsp,%rbp
   171e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   171ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   171ee:	5d                   	pop    %rbp
   171ef:	c3                   	ret

00000000000171f0 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   171f0:	55                   	push   %rbp
   171f1:	48 89 e5             	mov    %rsp,%rbp
   171f4:	48 83 ec 30          	sub    $0x30,%rsp
   171f8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   171fc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17200:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   17204:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   17208:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1720c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   17210:	48 c1 f8 03          	sar    $0x3,%rax
   17214:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   17218:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1721d:	7e 1f                	jle    1723e <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1721f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17223:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1722a:	00 
   1722b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1722f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17233:	48 89 ce             	mov    %rcx,%rsi
   17236:	48 89 c7             	mov    %rax,%rdi
   17239:	e8 a2 d5 fe ff       	call   47e0 <memmove@plt>
      return __result + __count;
   1723e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17242:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   17249:	00 
   1724a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1724e:	48 01 d0             	add    %rdx,%rax
    }
   17251:	c9                   	leave
   17252:	c3                   	ret
   17253:	90                   	nop

0000000000017254 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17254:	55                   	push   %rbp
   17255:	48 89 e5             	mov    %rsp,%rbp
   17258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1725c:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
   17263:	03 3f 00 
      }
   17266:	5d                   	pop    %rbp
   17267:	c3                   	ret

0000000000017268 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17268:	55                   	push   %rbp
   17269:	48 89 e5             	mov    %rsp,%rbp
   1726c:	48 83 ec 20          	sub    $0x20,%rsp
   17270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17278:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1727c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17280:	48 89 c7             	mov    %rax,%rdi
   17283:	e8 cc ff ff ff       	call   17254 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
   17288:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1728c:	0f 92 c0             	setb   %al
   1728f:	0f b6 c0             	movzbl %al,%eax
   17292:	48 85 c0             	test   %rax,%rax
   17295:	0f 95 c0             	setne  %al
   17298:	84 c0                	test   %al,%al
   1729a:	74 1a                	je     172b6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1729c:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
   172a3:	07 7e 00 
   172a6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   172aa:	73 05                	jae    172b1 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   172ac:	e8 0f d0 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   172b1:	e8 3a ce fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   172b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   172ba:	48 89 d0             	mov    %rdx,%rax
   172bd:	48 c1 e0 06          	shl    $0x6,%rax
   172c1:	48 01 d0             	add    %rdx,%rax
   172c4:	48 c1 e0 03          	shl    $0x3,%rax
   172c8:	48 89 c7             	mov    %rax,%rdi
   172cb:	e8 50 d1 fe ff       	call   4420 <_Znwm@plt>
   172d0:	90                   	nop
      }
   172d1:	c9                   	leave
   172d2:	c3                   	ret

00000000000172d3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   172d3:	55                   	push   %rbp
   172d4:	48 89 e5             	mov    %rsp,%rbp
   172d7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   172db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172df:	5d                   	pop    %rbp
   172e0:	c3                   	ret

00000000000172e1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   172e1:	55                   	push   %rbp
   172e2:	48 89 e5             	mov    %rsp,%rbp
   172e5:	48 83 ec 10          	sub    $0x10,%rsp
   172e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   172ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   172f1:	48 89 c6             	mov    %rax,%rsi
   172f4:	bf 08 02 00 00       	mov    $0x208,%edi
   172f9:	e8 6f e0 fe ff       	call   536d <_ZnwmPv>
   172fe:	b9 08 02 00 00       	mov    $0x208,%ecx
   17303:	be 00 00 00 00       	mov    $0x0,%esi
   17308:	48 89 30             	mov    %rsi,(%rax)
   1730b:	89 ca                	mov    %ecx,%edx
   1730d:	48 01 c2             	add    %rax,%rdx
   17310:	48 83 c2 08          	add    $0x8,%rdx
   17314:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
   17318:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1731c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
   17320:	48 29 d0             	sub    %rdx,%rax
   17323:	01 c1                	add    %eax,%ecx
   17325:	83 e1 f8             	and    $0xfffffff8,%ecx
   17328:	89 c8                	mov    %ecx,%eax
   1732a:	c1 e8 03             	shr    $0x3,%eax
   1732d:	89 c1                	mov    %eax,%ecx
   1732f:	48 89 d7             	mov    %rdx,%rdi
   17332:	48 89 f0             	mov    %rsi,%rax
   17335:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
   17338:	90                   	nop
   17339:	c9                   	leave
   1733a:	c3                   	ret

000000000001733b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1733b:	55                   	push   %rbp
   1733c:	48 89 e5             	mov    %rsp,%rbp
   1733f:	48 83 ec 20          	sub    $0x20,%rsp
   17343:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17347:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1734b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1734f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17353:	48 89 c7             	mov    %rax,%rdi
   17356:	e8 af 0b 00 00       	call   17f0a <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1735b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1735f:	48 89 c7             	mov    %rax,%rdi
   17362:	e8 18 e0 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17367:	48 89 c1             	mov    %rax,%rcx
   1736a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1736e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17372:	48 89 ce             	mov    %rcx,%rsi
   17375:	48 89 c7             	mov    %rax,%rdi
   17378:	e8 98 0b 00 00       	call   17f15 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   1737d:	c9                   	leave
   1737e:	c3                   	ret
   1737f:	90                   	nop

0000000000017380 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_get_nodeEv>:
      _M_get_node()
   17380:	55                   	push   %rbp
   17381:	48 89 e5             	mov    %rsp,%rbp
   17384:	48 83 ec 10          	sub    $0x10,%rsp
   17388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   1738c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17390:	48 89 c7             	mov    %rax,%rdi
   17393:	e8 3e ea ff ff       	call   15dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   17398:	be 01 00 00 00       	mov    $0x1,%esi
   1739d:	48 89 c7             	mov    %rax,%rdi
   173a0:	e8 df 0b 00 00       	call   17f84 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>
   173a5:	c9                   	leave
   173a6:	c3                   	ret
   173a7:	90                   	nop

00000000000173a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   173a8:	55                   	push   %rbp
   173a9:	48 89 e5             	mov    %rsp,%rbp
   173ac:	41 54                	push   %r12
   173ae:	53                   	push   %rbx
   173af:	48 83 ec 20          	sub    $0x20,%rsp
   173b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   173b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   173bb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   173bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   173c3:	48 89 c6             	mov    %rax,%rsi
   173c6:	bf 40 00 00 00       	mov    $0x40,%edi
   173cb:	e8 9d df fe ff       	call   536d <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   173d0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   173d4:	48 89 c7             	mov    %rax,%rdi
   173d7:	e8 51 cb ff ff       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   173dc:	49 89 c4             	mov    %rax,%r12
   173df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   173e3:	48 89 c7             	mov    %rax,%rdi
   173e6:	e8 f9 e9 ff ff       	call   15de4 <_ZNSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_M_valptrEv>
   173eb:	48 89 c3             	mov    %rax,%rbx
   173ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   173f2:	48 89 c7             	mov    %rax,%rdi
   173f5:	e8 dc e9 ff ff       	call   15dd6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE21_M_get_Node_allocatorEv>
   173fa:	4c 89 e2             	mov    %r12,%rdx
   173fd:	48 89 de             	mov    %rbx,%rsi
   17400:	48 89 c7             	mov    %rax,%rdi
   17403:	e8 a6 0b 00 00       	call   17fae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>
	}
   17408:	eb 33                	jmp    1743d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE17_M_construct_nodeIJRKPKcEEEvPSt13_Rb_tree_nodeIS5_EDpOT_+0x95>
	  __catch(...)
   1740a:	48 89 c7             	mov    %rax,%rdi
   1740d:	e8 1e cd fe ff       	call   4130 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   17412:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   17416:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1741a:	48 89 d6             	mov    %rdx,%rsi
   1741d:	48 89 c7             	mov    %rax,%rdi
   17420:	e8 1b ce ff ff       	call   14240 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E>
	      __throw_exception_again;
   17425:	e8 f6 d2 fe ff       	call   4720 <__cxa_rethrow@plt>
	  __catch(...)
   1742a:	48 89 c3             	mov    %rax,%rbx
   1742d:	e8 be d3 fe ff       	call   47f0 <__cxa_end_catch@plt>
   17432:	48 89 d8             	mov    %rbx,%rax
   17435:	48 89 c7             	mov    %rax,%rdi
   17438:	e8 33 d4 fe ff       	call   4870 <_Unwind_Resume@plt>
	}
   1743d:	48 83 c4 20          	add    $0x20,%rsp
   17441:	5b                   	pop    %rbx
   17442:	41 5c                	pop    %r12
   17444:	5d                   	pop    %rbp
   17445:	c3                   	ret

0000000000017446 <_ZSt7forwardIRPSt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEOT_RNSt16remove_referenceISA_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17446:	55                   	push   %rbp
   17447:	48 89 e5             	mov    %rsp,%rbp
   1744a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1744e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17452:	5d                   	pop    %rbp
   17453:	c3                   	ret

0000000000017454 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   17454:	55                   	push   %rbp
   17455:	48 89 e5             	mov    %rsp,%rbp
   17458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1745c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17460:	5d                   	pop    %rbp
   17461:	c3                   	ret

0000000000017462 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() noexcept
   17462:	55                   	push   %rbp
   17463:	48 89 e5             	mov    %rsp,%rbp
   17466:	48 83 ec 10          	sub    $0x10,%rsp
   1746a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   1746e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17472:	48 89 c7             	mov    %rax,%rdi
   17475:	e8 6e 0b 00 00       	call   17fe8 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   1747a:	c9                   	leave
   1747b:	c3                   	ret

000000000001747c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS6_EEvPT_>:
	destroy(_Up* __p)
   1747c:	55                   	push   %rbp
   1747d:	48 89 e5             	mov    %rsp,%rbp
   17480:	48 83 ec 10          	sub    $0x10,%rsp
   17484:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17488:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1748c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17490:	48 89 c7             	mov    %rax,%rdi
   17493:	e8 98 cd fe ff       	call   4230 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   17498:	90                   	nop
   17499:	c9                   	leave
   1749a:	c3                   	ret
   1749b:	90                   	nop

000000000001749c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateEPS7_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1749c:	55                   	push   %rbp
   1749d:	48 89 e5             	mov    %rsp,%rbp
   174a0:	48 83 ec 20          	sub    $0x20,%rsp
   174a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   174a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   174ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   174b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   174b4:	48 c1 e0 06          	shl    $0x6,%rax
   174b8:	48 89 c2             	mov    %rax,%rdx
   174bb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   174bf:	48 89 d6             	mov    %rdx,%rsi
   174c2:	48 89 c7             	mov    %rax,%rdi
   174c5:	e8 76 cf fe ff       	call   4440 <_ZdlPvm@plt>
      }
   174ca:	c9                   	leave
   174cb:	c3                   	ret

00000000000174cc <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE6_M_ptrEv>:
      _M_ptr() const noexcept
   174cc:	55                   	push   %rbp
   174cd:	48 89 e5             	mov    %rsp,%rbp
   174d0:	48 83 ec 10          	sub    $0x10,%rsp
   174d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   174d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174dc:	48 89 c7             	mov    %rax,%rdi
   174df:	e8 12 0b 00 00       	call   17ff6 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>
   174e4:	c9                   	leave
   174e5:	c3                   	ret

00000000000174e6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   174e6:	55                   	push   %rbp
   174e7:	48 89 e5             	mov    %rsp,%rbp
   174ea:	48 83 ec 10          	sub    $0x10,%rsp
   174ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   174f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   174f6:	48 89 c7             	mov    %rax,%rdi
   174f9:	e8 82 00 00 00       	call   17580 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
   174fe:	c9                   	leave
   174ff:	c3                   	ret

0000000000017500 <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17500:	55                   	push   %rbp
   17501:	48 89 e5             	mov    %rsp,%rbp
   17504:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1750c:	5d                   	pop    %rbp
   1750d:	c3                   	ret

000000000001750e <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   1750e:	55                   	push   %rbp
   1750f:	48 89 e5             	mov    %rsp,%rbp
   17512:	48 83 ec 10          	sub    $0x10,%rsp
   17516:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1751a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1751e:	48 89 c6             	mov    %rax,%rsi
   17521:	bf 08 00 00 00       	mov    $0x8,%edi
   17526:	e8 42 de fe ff       	call   536d <_ZnwmPv>
   1752b:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   17531:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
   17538:	90                   	nop
   17539:	c9                   	leave
   1753a:	c3                   	ret

000000000001753b <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1753b:	55                   	push   %rbp
   1753c:	48 89 e5             	mov    %rsp,%rbp
   1753f:	48 83 ec 20          	sub    $0x20,%rsp
   17543:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17547:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1754b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1754f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17553:	48 89 c7             	mov    %rax,%rdi
   17556:	e8 a9 0a 00 00       	call   18004 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1755b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1755f:	48 89 c7             	mov    %rax,%rdi
   17562:	e8 18 de fe ff       	call   537f <_ZSt17__size_to_integerm>
   17567:	48 89 c1             	mov    %rax,%rcx
   1756a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1756e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17572:	48 89 ce             	mov    %rcx,%rsi
   17575:	48 89 c7             	mov    %rax,%rdi
   17578:	e8 92 0a 00 00       	call   1800f <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   1757d:	c9                   	leave
   1757e:	c3                   	ret
   1757f:	90                   	nop

0000000000017580 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17580:	55                   	push   %rbp
   17581:	48 89 e5             	mov    %rsp,%rbp
   17584:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17588:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1758f:	ff ff 0f 
      }
   17592:	5d                   	pop    %rbp
   17593:	c3                   	ret

0000000000017594 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17594:	55                   	push   %rbp
   17595:	48 89 e5             	mov    %rsp,%rbp
   17598:	48 83 ec 10          	sub    $0x10,%rsp
   1759c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   175a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175a4:	48 89 c7             	mov    %rax,%rdi
   175a7:	e8 7a 00 00 00       	call   17626 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
   175ac:	c9                   	leave
   175ad:	c3                   	ret

00000000000175ae <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   175ae:	55                   	push   %rbp
   175af:	48 89 e5             	mov    %rsp,%rbp
   175b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   175b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175ba:	5d                   	pop    %rbp
   175bb:	c3                   	ret

00000000000175bc <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   175bc:	55                   	push   %rbp
   175bd:	48 89 e5             	mov    %rsp,%rbp
   175c0:	48 83 ec 10          	sub    $0x10,%rsp
   175c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   175c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   175cc:	48 89 c6             	mov    %rax,%rsi
   175cf:	bf 04 00 00 00       	mov    $0x4,%edi
   175d4:	e8 94 dd fe ff       	call   536d <_ZnwmPv>
   175d9:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
   175df:	90                   	nop
   175e0:	c9                   	leave
   175e1:	c3                   	ret

00000000000175e2 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   175e2:	55                   	push   %rbp
   175e3:	48 89 e5             	mov    %rsp,%rbp
   175e6:	48 83 ec 20          	sub    $0x20,%rsp
   175ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   175ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   175f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   175f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   175fa:	48 89 c7             	mov    %rax,%rdi
   175fd:	e8 6a 0a 00 00       	call   1806c <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17602:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17606:	48 89 c7             	mov    %rax,%rdi
   17609:	e8 71 dd fe ff       	call   537f <_ZSt17__size_to_integerm>
   1760e:	48 89 c1             	mov    %rax,%rcx
   17611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17615:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17619:	48 89 ce             	mov    %rcx,%rsi
   1761c:	48 89 c7             	mov    %rax,%rdi
   1761f:	e8 53 0a 00 00       	call   18077 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   17624:	c9                   	leave
   17625:	c3                   	ret

0000000000017626 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17626:	55                   	push   %rbp
   17627:	48 89 e5             	mov    %rsp,%rbp
   1762a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1762e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   17635:	ff ff 1f 
      }
   17638:	5d                   	pop    %rbp
   17639:	c3                   	ret

000000000001763a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1763a:	55                   	push   %rbp
   1763b:	48 89 e5             	mov    %rsp,%rbp
   1763e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17642:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
   17649:	55 55 05 
      }
   1764c:	5d                   	pop    %rbp
   1764d:	c3                   	ret

000000000001764e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1764e:	55                   	push   %rbp
   1764f:	48 89 e5             	mov    %rsp,%rbp
   17652:	48 83 ec 20          	sub    $0x20,%rsp
   17656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1765a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1765e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17666:	48 89 c7             	mov    %rax,%rdi
   17669:	e8 cc ff ff ff       	call   1763a <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
   1766e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17672:	0f 92 c0             	setb   %al
   17675:	0f b6 c0             	movzbl %al,%eax
   17678:	48 85 c0             	test   %rax,%rax
   1767b:	0f 95 c0             	setne  %al
   1767e:	84 c0                	test   %al,%al
   17680:	74 1a                	je     1769c <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   17682:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
   17689:	aa aa 0a 
   1768c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17690:	73 05                	jae    17697 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   17692:	e8 29 cc fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   17697:	e8 54 ca fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1769c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   176a0:	48 89 d0             	mov    %rdx,%rax
   176a3:	48 01 c0             	add    %rax,%rax
   176a6:	48 01 d0             	add    %rdx,%rax
   176a9:	48 c1 e0 03          	shl    $0x3,%rax
   176ad:	48 89 c7             	mov    %rax,%rdi
   176b0:	e8 6b cd fe ff       	call   4420 <_Znwm@plt>
   176b5:	90                   	nop
      }
   176b6:	c9                   	leave
   176b7:	c3                   	ret

00000000000176b8 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   176b8:	55                   	push   %rbp
   176b9:	48 89 e5             	mov    %rsp,%rbp
   176bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   176c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176c4:	5d                   	pop    %rbp
   176c5:	c3                   	ret

00000000000176c6 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   176c6:	55                   	push   %rbp
   176c7:	48 89 e5             	mov    %rsp,%rbp
   176ca:	48 83 ec 10          	sub    $0x10,%rsp
   176ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   176d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   176d6:	48 89 c6             	mov    %rax,%rsi
   176d9:	bf 18 00 00 00       	mov    $0x18,%edi
   176de:	e8 8a dc fe ff       	call   536d <_ZnwmPv>
   176e3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
   176e9:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
   176f0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
   176f7:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
   176fe:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
   17705:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
   1770c:	90                   	nop
   1770d:	c9                   	leave
   1770e:	c3                   	ret

000000000001770f <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   1770f:	55                   	push   %rbp
   17710:	48 89 e5             	mov    %rsp,%rbp
   17713:	48 83 ec 20          	sub    $0x20,%rsp
   17717:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1771b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1771f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17723:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17727:	48 89 c7             	mov    %rax,%rdi
   1772a:	e8 a5 09 00 00       	call   180d4 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   1772f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17733:	48 89 c7             	mov    %rax,%rdi
   17736:	e8 44 dc fe ff       	call   537f <_ZSt17__size_to_integerm>
   1773b:	48 89 c1             	mov    %rax,%rcx
   1773e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17742:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17746:	48 89 ce             	mov    %rcx,%rsi
   17749:	48 89 c7             	mov    %rax,%rdi
   1774c:	e8 8e 09 00 00       	call   180df <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   17751:	c9                   	leave
   17752:	c3                   	ret

0000000000017753 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE6_S_keyEPKSt13_Rb_tree_nodeIjE>:
      _S_key(_Const_Link_type __x)
   17753:	55                   	push   %rbp
   17754:	48 89 e5             	mov    %rsp,%rbp
   17757:	48 83 ec 20          	sub    $0x20,%rsp
   1775b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   1775f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17763:	48 89 c7             	mov    %rax,%rdi
   17766:	e8 b3 86 ff ff       	call   fe1e <_ZNKSt13_Rb_tree_nodeIjE9_M_valptrEv>
   1776b:	48 89 c2             	mov    %rax,%rdx
   1776e:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   17772:	48 89 d6             	mov    %rdx,%rsi
   17775:	48 89 c7             	mov    %rax,%rdi
   17778:	e8 f7 d6 ff ff       	call   14e74 <_ZNKSt9_IdentityIjEclERKj>
      }
   1777d:	c9                   	leave
   1777e:	c3                   	ret
   1777f:	90                   	nop

0000000000017780 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   17780:	55                   	push   %rbp
   17781:	48 89 e5             	mov    %rsp,%rbp
   17784:	48 83 ec 20          	sub    $0x20,%rsp
   17788:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   1778c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17790:	48 8b 50 18          	mov    0x18(%rax),%rdx
   17794:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17798:	48 89 d6             	mov    %rdx,%rsi
   1779b:	48 89 c7             	mov    %rax,%rdi
   1779e:	e8 69 d2 ff ff       	call   14a0c <_ZNSt17_Rb_tree_iteratorIjEC1EPSt18_Rb_tree_node_base>
   177a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177a7:	c9                   	leave
   177a8:	c3                   	ret

00000000000177a9 <_ZSteqRKSt17_Rb_tree_iteratorIjES2_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   177a9:	55                   	push   %rbp
   177aa:	48 89 e5             	mov    %rsp,%rbp
   177ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   177b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177b9:	48 8b 10             	mov    (%rax),%rdx
   177bc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177c0:	48 8b 00             	mov    (%rax),%rax
   177c3:	48 39 c2             	cmp    %rax,%rdx
   177c6:	0f 94 c0             	sete   %al
   177c9:	5d                   	pop    %rbp
   177ca:	c3                   	ret
   177cb:	90                   	nop

00000000000177cc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIjERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   177cc:	55                   	push   %rbp
   177cd:	48 89 e5             	mov    %rsp,%rbp
   177d0:	48 83 ec 20          	sub    $0x20,%rsp
   177d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   177d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   177dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   177e0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   177e4:	48 89 c7             	mov    %rax,%rdi
   177e7:	e8 60 09 00 00       	call   1814c <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>
   177ec:	48 8b 10             	mov    (%rax),%rdx
   177ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   177f3:	48 89 10             	mov    %rdx,(%rax)
   177f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   177fa:	48 89 c7             	mov    %rax,%rdi
   177fd:	e8 52 fc ff ff       	call   17454 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   17802:	48 8b 10             	mov    (%rax),%rdx
   17805:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17809:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1780d:	90                   	nop
   1780e:	c9                   	leave
   1780f:	c3                   	ret

0000000000017810 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE14_M_create_nodeIJRKjEEEPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_create_node(_Args&&... __args)
   17810:	55                   	push   %rbp
   17811:	48 89 e5             	mov    %rsp,%rbp
   17814:	48 83 ec 20          	sub    $0x20,%rsp
   17818:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1781c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _Link_type __tmp = _M_get_node();
   17820:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17824:	48 89 c7             	mov    %rax,%rdi
   17827:	e8 2e 09 00 00       	call   1815a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>
   1782c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   17830:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17834:	48 89 c7             	mov    %rax,%rdi
   17837:	e8 4a d6 ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   1783c:	48 89 c2             	mov    %rax,%rdx
   1783f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   17843:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17847:	48 89 ce             	mov    %rcx,%rsi
   1784a:	48 89 c7             	mov    %rax,%rdi
   1784d:	e8 30 09 00 00       	call   18182 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>
	  return __tmp;
   17852:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   17856:	c9                   	leave
   17857:	c3                   	ret

0000000000017858 <_ZN9__gnu_cxx16__aligned_membufIjE6_M_ptrEv>:
      _M_ptr() noexcept
   17858:	55                   	push   %rbp
   17859:	48 89 e5             	mov    %rsp,%rbp
   1785c:	48 83 ec 10          	sub    $0x10,%rsp
   17860:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   17864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17868:	48 89 c7             	mov    %rax,%rdi
   1786b:	e8 7c 09 00 00       	call   181ec <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>
   17870:	c9                   	leave
   17871:	c3                   	ret

0000000000017872 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE7destroyIjEEvPT_>:
	destroy(_Up* __p)
   17872:	55                   	push   %rbp
   17873:	48 89 e5             	mov    %rsp,%rbp
   17876:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1787a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   1787e:	90                   	nop
   1787f:	5d                   	pop    %rbp
   17880:	c3                   	ret
   17881:	90                   	nop

0000000000017882 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   17882:	55                   	push   %rbp
   17883:	48 89 e5             	mov    %rsp,%rbp
   17886:	48 83 ec 20          	sub    $0x20,%rsp
   1788a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1788e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17892:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   17896:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1789a:	48 89 d0             	mov    %rdx,%rax
   1789d:	48 c1 e0 02          	shl    $0x2,%rax
   178a1:	48 01 d0             	add    %rdx,%rax
   178a4:	48 c1 e0 03          	shl    $0x3,%rax
   178a8:	48 89 c2             	mov    %rax,%rdx
   178ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   178af:	48 89 d6             	mov    %rdx,%rsi
   178b2:	48 89 c7             	mov    %rax,%rdi
   178b5:	e8 86 cb fe ff       	call   4440 <_ZdlPvm@plt>
      }
   178ba:	c9                   	leave
   178bb:	c3                   	ret

00000000000178bc <_ZNSt16allocator_traitsISaI23VkDeviceQueueCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   178bc:	55                   	push   %rbp
   178bd:	48 89 e5             	mov    %rsp,%rbp
   178c0:	48 83 ec 10          	sub    $0x10,%rsp
   178c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   178c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178cc:	48 89 c7             	mov    %rax,%rdi
   178cf:	e8 26 09 00 00       	call   181fa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>
      }
   178d4:	c9                   	leave
   178d5:	c3                   	ret

00000000000178d6 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   178d6:	55                   	push   %rbp
   178d7:	48 89 e5             	mov    %rsp,%rbp
   178da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   178de:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   178e5:	33 33 03 
      }
   178e8:	5d                   	pop    %rbp
   178e9:	c3                   	ret

00000000000178ea <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   178ea:	55                   	push   %rbp
   178eb:	48 89 e5             	mov    %rsp,%rbp
   178ee:	48 83 ec 10          	sub    $0x10,%rsp
   178f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   178f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   178fa:	48 89 c7             	mov    %rax,%rdi
   178fd:	e8 7c 00 00 00       	call   1797e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
   17902:	c9                   	leave
   17903:	c3                   	ret

0000000000017904 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17904:	55                   	push   %rbp
   17905:	48 89 e5             	mov    %rsp,%rbp
   17908:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1790c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17910:	5d                   	pop    %rbp
   17911:	c3                   	ret

0000000000017912 <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17912:	55                   	push   %rbp
   17913:	48 89 e5             	mov    %rsp,%rbp
   17916:	48 83 ec 10          	sub    $0x10,%rsp
   1791a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1791e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17922:	48 89 c6             	mov    %rax,%rsi
   17925:	bf 08 00 00 00       	mov    $0x8,%edi
   1792a:	e8 3e da fe ff       	call   536d <_ZnwmPv>
   1792f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17936:	90                   	nop
   17937:	c9                   	leave
   17938:	c3                   	ret

0000000000017939 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17939:	55                   	push   %rbp
   1793a:	48 89 e5             	mov    %rsp,%rbp
   1793d:	48 83 ec 20          	sub    $0x20,%rsp
   17941:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17945:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17949:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   1794d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17951:	48 89 c7             	mov    %rax,%rdi
   17954:	e8 bb 08 00 00       	call   18214 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17959:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1795d:	48 89 c7             	mov    %rax,%rdi
   17960:	e8 1a da fe ff       	call   537f <_ZSt17__size_to_integerm>
   17965:	48 89 c1             	mov    %rax,%rcx
   17968:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1796c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17970:	48 89 ce             	mov    %rcx,%rsi
   17973:	48 89 c7             	mov    %rax,%rdi
   17976:	e8 a4 08 00 00       	call   1821f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   1797b:	c9                   	leave
   1797c:	c3                   	ret
   1797d:	90                   	nop

000000000001797e <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1797e:	55                   	push   %rbp
   1797f:	48 89 e5             	mov    %rsp,%rbp
   17982:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17986:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1798d:	ff ff 0f 
      }
   17990:	5d                   	pop    %rbp
   17991:	c3                   	ret

0000000000017992 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17992:	55                   	push   %rbp
   17993:	48 89 e5             	mov    %rsp,%rbp
   17996:	48 83 ec 10          	sub    $0x10,%rsp
   1799a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1799e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179a2:	48 89 c7             	mov    %rax,%rdi
   179a5:	e8 7c 00 00 00       	call   17a26 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   179aa:	c9                   	leave
   179ab:	c3                   	ret

00000000000179ac <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   179ac:	55                   	push   %rbp
   179ad:	48 89 e5             	mov    %rsp,%rbp
   179b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   179b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179b8:	5d                   	pop    %rbp
   179b9:	c3                   	ret

00000000000179ba <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   179ba:	55                   	push   %rbp
   179bb:	48 89 e5             	mov    %rsp,%rbp
   179be:	48 83 ec 10          	sub    $0x10,%rsp
   179c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   179c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   179ca:	48 89 c6             	mov    %rax,%rsi
   179cd:	bf 08 00 00 00       	mov    $0x8,%edi
   179d2:	e8 96 d9 fe ff       	call   536d <_ZnwmPv>
   179d7:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   179de:	90                   	nop
   179df:	c9                   	leave
   179e0:	c3                   	ret

00000000000179e1 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   179e1:	55                   	push   %rbp
   179e2:	48 89 e5             	mov    %rsp,%rbp
   179e5:	48 83 ec 20          	sub    $0x20,%rsp
   179e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   179ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   179f1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   179f5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   179f9:	48 89 c7             	mov    %rax,%rdi
   179fc:	e8 7b 08 00 00       	call   1827c <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17a01:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a05:	48 89 c7             	mov    %rax,%rdi
   17a08:	e8 72 d9 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17a0d:	48 89 c1             	mov    %rax,%rcx
   17a10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a14:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17a18:	48 89 ce             	mov    %rcx,%rsi
   17a1b:	48 89 c7             	mov    %rax,%rdi
   17a1e:	e8 64 08 00 00       	call   18287 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17a23:	c9                   	leave
   17a24:	c3                   	ret
   17a25:	90                   	nop

0000000000017a26 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17a26:	55                   	push   %rbp
   17a27:	48 89 e5             	mov    %rsp,%rbp
   17a2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17a2e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17a35:	ff ff 0f 
      }
   17a38:	5d                   	pop    %rbp
   17a39:	c3                   	ret

0000000000017a3a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17a3a:	55                   	push   %rbp
   17a3b:	48 89 e5             	mov    %rsp,%rbp
   17a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17a42:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
   17a49:	ff ff 7f 
      }
   17a4c:	5d                   	pop    %rbp
   17a4d:	c3                   	ret

0000000000017a4e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   17a4e:	55                   	push   %rbp
   17a4f:	48 89 e5             	mov    %rsp,%rbp
   17a52:	48 83 ec 20          	sub    $0x20,%rsp
   17a56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17a5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17a5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   17a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17a66:	48 89 c7             	mov    %rax,%rdi
   17a69:	e8 cc ff ff ff       	call   17a3a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
   17a6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   17a72:	0f 92 c0             	setb   %al
   17a75:	0f b6 c0             	movzbl %al,%eax
   17a78:	48 85 c0             	test   %rax,%rax
   17a7b:	0f 95 c0             	setne  %al
   17a7e:	84 c0                	test   %al,%al
   17a80:	74 05                	je     17a87 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
   17a82:	e8 69 c6 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   17a87:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17a8b:	48 89 c7             	mov    %rax,%rdi
   17a8e:	e8 8d c9 fe ff       	call   4420 <_Znwm@plt>
   17a93:	90                   	nop
      }
   17a94:	c9                   	leave
   17a95:	c3                   	ret

0000000000017a96 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17a96:	55                   	push   %rbp
   17a97:	48 89 e5             	mov    %rsp,%rbp
   17a9a:	48 83 ec 10          	sub    $0x10,%rsp
   17a9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17aa2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17aa6:	48 89 c6             	mov    %rax,%rsi
   17aa9:	bf 01 00 00 00       	mov    $0x1,%edi
   17aae:	e8 ba d8 fe ff       	call   536d <_ZnwmPv>
   17ab3:	c6 00 00             	movb   $0x0,(%rax)
    }
   17ab6:	90                   	nop
   17ab7:	c9                   	leave
   17ab8:	c3                   	ret

0000000000017ab9 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17ab9:	55                   	push   %rbp
   17aba:	48 89 e5             	mov    %rsp,%rbp
   17abd:	48 83 ec 20          	sub    $0x20,%rsp
   17ac1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17ac5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17ac9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17acd:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17ad1:	48 89 c7             	mov    %rax,%rdi
   17ad4:	e8 92 99 ff ff       	call   1146b <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17ad9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17add:	48 89 c7             	mov    %rax,%rdi
   17ae0:	e8 9a d8 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17ae5:	48 89 c1             	mov    %rax,%rcx
   17ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17aec:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17af0:	48 89 ce             	mov    %rcx,%rsi
   17af3:	48 89 c7             	mov    %rax,%rdi
   17af6:	e8 e9 07 00 00       	call   182e4 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
   17afb:	c9                   	leave
   17afc:	c3                   	ret
   17afd:	90                   	nop

0000000000017afe <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17afe:	55                   	push   %rbp
   17aff:	48 89 e5             	mov    %rsp,%rbp
   17b02:	48 83 ec 10          	sub    $0x10,%rsp
   17b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17b0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b0e:	48 89 c7             	mov    %rax,%rdi
   17b11:	e8 02 00 00 00       	call   17b18 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   17b16:	c9                   	leave
   17b17:	c3                   	ret

0000000000017b18 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17b18:	55                   	push   %rbp
   17b19:	48 89 e5             	mov    %rsp,%rbp
   17b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17b20:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   17b27:	ff ff 1f 
      }
   17b2a:	5d                   	pop    %rbp
   17b2b:	c3                   	ret

0000000000017b2c <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   17b2c:	55                   	push   %rbp
   17b2d:	48 89 e5             	mov    %rsp,%rbp
   17b30:	53                   	push   %rbx
   17b31:	48 83 ec 28          	sub    $0x28,%rsp
   17b35:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17b39:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17b3d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   17b41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17b45:	48 89 c7             	mov    %rax,%rdi
   17b48:	e8 e4 07 00 00       	call   18331 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   17b4d:	48 89 c3             	mov    %rax,%rbx
   17b50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17b54:	48 89 c7             	mov    %rax,%rdi
   17b57:	e8 d5 07 00 00       	call   18331 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   17b5c:	48 89 c1             	mov    %rax,%rcx
   17b5f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17b63:	48 89 c2             	mov    %rax,%rdx
   17b66:	48 89 de             	mov    %rbx,%rsi
   17b69:	48 89 cf             	mov    %rcx,%rdi
   17b6c:	e8 ce 07 00 00       	call   1833f <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
    }
   17b71:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   17b75:	c9                   	leave
   17b76:	c3                   	ret
   17b77:	90                   	nop

0000000000017b78 <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17b78:	55                   	push   %rbp
   17b79:	48 89 e5             	mov    %rsp,%rbp
   17b7c:	48 83 ec 10          	sub    $0x10,%rsp
   17b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b88:	48 89 c7             	mov    %rax,%rdi
   17b8b:	e8 7c 00 00 00       	call   17c0c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>
   17b90:	c9                   	leave
   17b91:	c3                   	ret

0000000000017b92 <_ZSt11__addressofIP15VkFramebuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17b92:	55                   	push   %rbp
   17b93:	48 89 e5             	mov    %rsp,%rbp
   17b96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17b9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17b9e:	5d                   	pop    %rbp
   17b9f:	c3                   	ret

0000000000017ba0 <_ZSt10_ConstructIP15VkFramebuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17ba0:	55                   	push   %rbp
   17ba1:	48 89 e5             	mov    %rsp,%rbp
   17ba4:	48 83 ec 10          	sub    $0x10,%rsp
   17ba8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bb0:	48 89 c6             	mov    %rax,%rsi
   17bb3:	bf 08 00 00 00       	mov    $0x8,%edi
   17bb8:	e8 b0 d7 fe ff       	call   536d <_ZnwmPv>
   17bbd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17bc4:	90                   	nop
   17bc5:	c9                   	leave
   17bc6:	c3                   	ret

0000000000017bc7 <_ZSt6fill_nIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17bc7:	55                   	push   %rbp
   17bc8:	48 89 e5             	mov    %rsp,%rbp
   17bcb:	48 83 ec 20          	sub    $0x20,%rsp
   17bcf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17bd3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17bd7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17bdb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17bdf:	48 89 c7             	mov    %rax,%rdi
   17be2:	e8 c2 07 00 00       	call   183a9 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17be7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17beb:	48 89 c7             	mov    %rax,%rdi
   17bee:	e8 8c d7 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17bf3:	48 89 c1             	mov    %rax,%rcx
   17bf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17bfa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17bfe:	48 89 ce             	mov    %rcx,%rsi
   17c01:	48 89 c7             	mov    %rax,%rdi
   17c04:	e8 ab 07 00 00       	call   183b4 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17c09:	c9                   	leave
   17c0a:	c3                   	ret
   17c0b:	90                   	nop

0000000000017c0c <_ZNKSt15__new_allocatorIP15VkFramebuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17c0c:	55                   	push   %rbp
   17c0d:	48 89 e5             	mov    %rsp,%rbp
   17c10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17c14:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17c1b:	ff ff 0f 
      }
   17c1e:	5d                   	pop    %rbp
   17c1f:	c3                   	ret

0000000000017c20 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17c20:	55                   	push   %rbp
   17c21:	48 89 e5             	mov    %rsp,%rbp
   17c24:	48 83 ec 10          	sub    $0x10,%rsp
   17c28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17c2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c30:	48 89 c7             	mov    %rax,%rdi
   17c33:	e8 7c 00 00 00       	call   17cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
   17c38:	c9                   	leave
   17c39:	c3                   	ret

0000000000017c3a <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17c3a:	55                   	push   %rbp
   17c3b:	48 89 e5             	mov    %rsp,%rbp
   17c3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c46:	5d                   	pop    %rbp
   17c47:	c3                   	ret

0000000000017c48 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17c48:	55                   	push   %rbp
   17c49:	48 89 e5             	mov    %rsp,%rbp
   17c4c:	48 83 ec 10          	sub    $0x10,%rsp
   17c50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17c54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17c58:	48 89 c6             	mov    %rax,%rsi
   17c5b:	bf 08 00 00 00       	mov    $0x8,%edi
   17c60:	e8 08 d7 fe ff       	call   536d <_ZnwmPv>
   17c65:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17c6c:	90                   	nop
   17c6d:	c9                   	leave
   17c6e:	c3                   	ret

0000000000017c6f <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17c6f:	55                   	push   %rbp
   17c70:	48 89 e5             	mov    %rsp,%rbp
   17c73:	48 83 ec 20          	sub    $0x20,%rsp
   17c77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17c7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17c7f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17c83:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17c87:	48 89 c7             	mov    %rax,%rdi
   17c8a:	e8 82 07 00 00       	call   18411 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17c8f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17c93:	48 89 c7             	mov    %rax,%rdi
   17c96:	e8 e4 d6 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17c9b:	48 89 c1             	mov    %rax,%rcx
   17c9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ca2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17ca6:	48 89 ce             	mov    %rcx,%rsi
   17ca9:	48 89 c7             	mov    %rax,%rdi
   17cac:	e8 6b 07 00 00       	call   1841c <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17cb1:	c9                   	leave
   17cb2:	c3                   	ret
   17cb3:	90                   	nop

0000000000017cb4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17cb4:	55                   	push   %rbp
   17cb5:	48 89 e5             	mov    %rsp,%rbp
   17cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17cbc:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17cc3:	ff ff 0f 
      }
   17cc6:	5d                   	pop    %rbp
   17cc7:	c3                   	ret

0000000000017cc8 <_ZNKSt15__new_allocatorIP13VkSemaphore_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17cc8:	55                   	push   %rbp
   17cc9:	48 89 e5             	mov    %rsp,%rbp
   17ccc:	48 83 ec 10          	sub    $0x10,%rsp
   17cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17cd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cd8:	48 89 c7             	mov    %rax,%rdi
   17cdb:	e8 7c 00 00 00       	call   17d5c <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>
   17ce0:	c9                   	leave
   17ce1:	c3                   	ret

0000000000017ce2 <_ZSt11__addressofIP13VkSemaphore_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17ce2:	55                   	push   %rbp
   17ce3:	48 89 e5             	mov    %rsp,%rbp
   17ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17cea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17cee:	5d                   	pop    %rbp
   17cef:	c3                   	ret

0000000000017cf0 <_ZSt10_ConstructIP13VkSemaphore_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17cf0:	55                   	push   %rbp
   17cf1:	48 89 e5             	mov    %rsp,%rbp
   17cf4:	48 83 ec 10          	sub    $0x10,%rsp
   17cf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17cfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d00:	48 89 c6             	mov    %rax,%rsi
   17d03:	bf 08 00 00 00       	mov    $0x8,%edi
   17d08:	e8 60 d6 fe ff       	call   536d <_ZnwmPv>
   17d0d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17d14:	90                   	nop
   17d15:	c9                   	leave
   17d16:	c3                   	ret

0000000000017d17 <_ZSt6fill_nIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17d17:	55                   	push   %rbp
   17d18:	48 89 e5             	mov    %rsp,%rbp
   17d1b:	48 83 ec 20          	sub    $0x20,%rsp
   17d1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17d23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17d27:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17d2b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17d2f:	48 89 c7             	mov    %rax,%rdi
   17d32:	e8 42 07 00 00       	call   18479 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17d37:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17d3b:	48 89 c7             	mov    %rax,%rdi
   17d3e:	e8 3c d6 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17d43:	48 89 c1             	mov    %rax,%rcx
   17d46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d4a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17d4e:	48 89 ce             	mov    %rcx,%rsi
   17d51:	48 89 c7             	mov    %rax,%rdi
   17d54:	e8 2b 07 00 00       	call   18484 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17d59:	c9                   	leave
   17d5a:	c3                   	ret
   17d5b:	90                   	nop

0000000000017d5c <_ZNKSt15__new_allocatorIP13VkSemaphore_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17d5c:	55                   	push   %rbp
   17d5d:	48 89 e5             	mov    %rsp,%rbp
   17d60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17d64:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17d6b:	ff ff 0f 
      }
   17d6e:	5d                   	pop    %rbp
   17d6f:	c3                   	ret

0000000000017d70 <_ZNKSt15__new_allocatorIP9VkFence_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   17d70:	55                   	push   %rbp
   17d71:	48 89 e5             	mov    %rsp,%rbp
   17d74:	48 83 ec 10          	sub    $0x10,%rsp
   17d78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   17d7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d80:	48 89 c7             	mov    %rax,%rdi
   17d83:	e8 7c 00 00 00       	call   17e04 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>
   17d88:	c9                   	leave
   17d89:	c3                   	ret

0000000000017d8a <_ZSt11__addressofIP9VkFence_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   17d8a:	55                   	push   %rbp
   17d8b:	48 89 e5             	mov    %rsp,%rbp
   17d8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   17d92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17d96:	5d                   	pop    %rbp
   17d97:	c3                   	ret

0000000000017d98 <_ZSt10_ConstructIP9VkFence_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   17d98:	55                   	push   %rbp
   17d99:	48 89 e5             	mov    %rsp,%rbp
   17d9c:	48 83 ec 10          	sub    $0x10,%rsp
   17da0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   17da4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17da8:	48 89 c6             	mov    %rax,%rsi
   17dab:	bf 08 00 00 00       	mov    $0x8,%edi
   17db0:	e8 b8 d5 fe ff       	call   536d <_ZnwmPv>
   17db5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   17dbc:	90                   	nop
   17dbd:	c9                   	leave
   17dbe:	c3                   	ret

0000000000017dbf <_ZSt6fill_nIPP9VkFence_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   17dbf:	55                   	push   %rbp
   17dc0:	48 89 e5             	mov    %rsp,%rbp
   17dc3:	48 83 ec 20          	sub    $0x20,%rsp
   17dc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17dcb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17dcf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   17dd3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   17dd7:	48 89 c7             	mov    %rax,%rdi
   17dda:	e8 02 07 00 00       	call   184e1 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   17ddf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   17de3:	48 89 c7             	mov    %rax,%rdi
   17de6:	e8 94 d5 fe ff       	call   537f <_ZSt17__size_to_integerm>
   17deb:	48 89 c1             	mov    %rax,%rcx
   17dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17df2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17df6:	48 89 ce             	mov    %rcx,%rsi
   17df9:	48 89 c7             	mov    %rax,%rdi
   17dfc:	e8 eb 06 00 00       	call   184ec <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   17e01:	c9                   	leave
   17e02:	c3                   	ret
   17e03:	90                   	nop

0000000000017e04 <_ZNKSt15__new_allocatorIP9VkFence_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   17e04:	55                   	push   %rbp
   17e05:	48 89 e5             	mov    %rsp,%rbp
   17e08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   17e0c:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   17e13:	ff ff 0f 
      }
   17e16:	5d                   	pop    %rbp
   17e17:	c3                   	ret

0000000000017e18 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17e18:	55                   	push   %rbp
   17e19:	48 89 e5             	mov    %rsp,%rbp
   17e1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17e20:	90                   	nop
   17e21:	5d                   	pop    %rbp
   17e22:	c3                   	ret

0000000000017e23 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17e23:	55                   	push   %rbp
   17e24:	48 89 e5             	mov    %rsp,%rbp
   17e27:	48 83 ec 20          	sub    $0x20,%rsp
   17e2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17e2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17e33:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17e37:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17e3c:	75 06                	jne    17e44 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17e3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e42:	eb 4c                	jmp    17e90 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   17e44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e48:	48 89 d0             	mov    %rdx,%rax
   17e4b:	48 c1 e0 06          	shl    $0x6,%rax
   17e4f:	48 01 d0             	add    %rdx,%rax
   17e52:	48 c1 e0 02          	shl    $0x2,%rax
   17e56:	48 89 c2             	mov    %rax,%rdx
   17e59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e5d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17e61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17e65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e69:	48 89 ce             	mov    %rcx,%rsi
   17e6c:	48 89 c7             	mov    %rax,%rdi
   17e6f:	e8 e7 06 00 00       	call   1855b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   17e74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17e78:	48 89 d0             	mov    %rdx,%rax
   17e7b:	48 c1 e0 06          	shl    $0x6,%rax
   17e7f:	48 01 d0             	add    %rdx,%rax
   17e82:	48 c1 e0 02          	shl    $0x2,%rax
   17e86:	48 89 c2             	mov    %rax,%rdx
   17e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e8d:	48 01 d0             	add    %rdx,%rax
    }
   17e90:	c9                   	leave
   17e91:	c3                   	ret

0000000000017e92 <_ZSt12__miter_baseIPPKcET_S3_>:
    __miter_base(_Iterator __it)
   17e92:	55                   	push   %rbp
   17e93:	48 89 e5             	mov    %rsp,%rbp
   17e96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   17e9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17e9e:	5d                   	pop    %rbp
   17e9f:	c3                   	ret

0000000000017ea0 <_ZSt13__copy_move_aILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   17ea0:	55                   	push   %rbp
   17ea1:	48 89 e5             	mov    %rsp,%rbp
   17ea4:	41 54                	push   %r12
   17ea6:	53                   	push   %rbx
   17ea7:	48 83 ec 20          	sub    $0x20,%rsp
   17eab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   17eaf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   17eb3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   17eb7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   17ebb:	48 89 c7             	mov    %rax,%rdi
   17ebe:	e8 1f f3 ff ff       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   17ec3:	49 89 c4             	mov    %rax,%r12
   17ec6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   17eca:	48 89 c7             	mov    %rax,%rdi
   17ecd:	e8 10 f3 ff ff       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   17ed2:	48 89 c3             	mov    %rax,%rbx
   17ed5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17ed9:	48 89 c7             	mov    %rax,%rdi
   17edc:	e8 01 f3 ff ff       	call   171e2 <_ZSt12__niter_baseIPPKcET_S3_>
   17ee1:	4c 89 e2             	mov    %r12,%rdx
   17ee4:	48 89 de             	mov    %rbx,%rsi
   17ee7:	48 89 c7             	mov    %rax,%rdi
   17eea:	e8 9a 06 00 00       	call   18589 <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>
   17eef:	48 89 c2             	mov    %rax,%rdx
   17ef2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   17ef6:	48 89 d6             	mov    %rdx,%rsi
   17ef9:	48 89 c7             	mov    %rax,%rdi
   17efc:	e8 48 06 00 00       	call   18549 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   17f01:	48 83 c4 20          	add    $0x20,%rsp
   17f05:	5b                   	pop    %rbx
   17f06:	41 5c                	pop    %r12
   17f08:	5d                   	pop    %rbp
   17f09:	c3                   	ret

0000000000017f0a <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   17f0a:	55                   	push   %rbp
   17f0b:	48 89 e5             	mov    %rsp,%rbp
   17f0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   17f12:	90                   	nop
   17f13:	5d                   	pop    %rbp
   17f14:	c3                   	ret

0000000000017f15 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   17f15:	55                   	push   %rbp
   17f16:	48 89 e5             	mov    %rsp,%rbp
   17f19:	48 83 ec 20          	sub    $0x20,%rsp
   17f1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17f25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   17f29:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   17f2e:	75 06                	jne    17f36 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   17f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f34:	eb 4c                	jmp    17f82 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
   17f36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f3a:	48 89 d0             	mov    %rdx,%rax
   17f3d:	48 c1 e0 06          	shl    $0x6,%rax
   17f41:	48 01 d0             	add    %rdx,%rax
   17f44:	48 c1 e0 03          	shl    $0x3,%rax
   17f48:	48 89 c2             	mov    %rax,%rdx
   17f4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f4f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   17f53:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   17f57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f5b:	48 89 ce             	mov    %rcx,%rsi
   17f5e:	48 89 c7             	mov    %rax,%rdi
   17f61:	e8 50 06 00 00       	call   185b6 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   17f66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   17f6a:	48 89 d0             	mov    %rdx,%rax
   17f6d:	48 c1 e0 06          	shl    $0x6,%rax
   17f71:	48 01 d0             	add    %rdx,%rax
   17f74:	48 c1 e0 03          	shl    $0x3,%rax
   17f78:	48 89 c2             	mov    %rax,%rdx
   17f7b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f7f:	48 01 d0             	add    %rdx,%rax
    }
   17f82:	c9                   	leave
   17f83:	c3                   	ret

0000000000017f84 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE8allocateERS8_m>:
      allocate(allocator_type& __a, size_type __n)
   17f84:	55                   	push   %rbp
   17f85:	48 89 e5             	mov    %rsp,%rbp
   17f88:	48 83 ec 10          	sub    $0x10,%rsp
   17f8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17f90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   17f94:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17f98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17f9c:	ba 00 00 00 00       	mov    $0x0,%edx
   17fa1:	48 89 ce             	mov    %rcx,%rsi
   17fa4:	48 89 c7             	mov    %rax,%rdi
   17fa7:	e8 38 06 00 00       	call   185e4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>
   17fac:	c9                   	leave
   17fad:	c3                   	ret

0000000000017fae <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE9constructIS6_JRKPKcEEEvRS8_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   17fae:	55                   	push   %rbp
   17faf:	48 89 e5             	mov    %rsp,%rbp
   17fb2:	48 83 ec 20          	sub    $0x20,%rsp
   17fb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   17fba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   17fbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   17fc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   17fc6:	48 89 c7             	mov    %rax,%rdi
   17fc9:	e8 5f bf ff ff       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   17fce:	48 89 c2             	mov    %rax,%rdx
   17fd1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   17fd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17fd9:	48 89 ce             	mov    %rcx,%rsi
   17fdc:	48 89 c7             	mov    %rax,%rdi
   17fdf:	e8 62 06 00 00       	call   18646 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>
	}
   17fe4:	90                   	nop
   17fe5:	c9                   	leave
   17fe6:	c3                   	ret
   17fe7:	90                   	nop

0000000000017fe8 <_ZN9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() noexcept
   17fe8:	55                   	push   %rbp
   17fe9:	48 89 e5             	mov    %rsp,%rbp
   17fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   17ff0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   17ff4:	5d                   	pop    %rbp
   17ff5:	c3                   	ret

0000000000017ff6 <_ZNK9__gnu_cxx16__aligned_membufINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7_M_addrEv>:
      _M_addr() const noexcept
   17ff6:	55                   	push   %rbp
   17ff7:	48 89 e5             	mov    %rsp,%rbp
   17ffa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   17ffe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18002:	5d                   	pop    %rbp
   18003:	c3                   	ret

0000000000018004 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   18004:	55                   	push   %rbp
   18005:	48 89 e5             	mov    %rsp,%rbp
   18008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1800c:	90                   	nop
   1800d:	5d                   	pop    %rbp
   1800e:	c3                   	ret

000000000001800f <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1800f:	55                   	push   %rbp
   18010:	48 89 e5             	mov    %rsp,%rbp
   18013:	48 83 ec 20          	sub    $0x20,%rsp
   18017:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1801b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1801f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   18023:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18028:	75 06                	jne    18030 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1802a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1802e:	eb 3a                	jmp    1806a <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   18030:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18034:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1803b:	00 
   1803c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18040:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18044:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1804c:	48 89 ce             	mov    %rcx,%rsi
   1804f:	48 89 c7             	mov    %rax,%rdi
   18052:	e8 93 06 00 00       	call   186ea <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   18057:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1805b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18062:	00 
   18063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18067:	48 01 d0             	add    %rdx,%rax
    }
   1806a:	c9                   	leave
   1806b:	c3                   	ret

000000000001806c <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   1806c:	55                   	push   %rbp
   1806d:	48 89 e5             	mov    %rsp,%rbp
   18070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18074:	90                   	nop
   18075:	5d                   	pop    %rbp
   18076:	c3                   	ret

0000000000018077 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   18077:	55                   	push   %rbp
   18078:	48 89 e5             	mov    %rsp,%rbp
   1807b:	48 83 ec 20          	sub    $0x20,%rsp
   1807f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18083:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18087:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1808b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18090:	75 06                	jne    18098 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   18092:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18096:	eb 3a                	jmp    180d2 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   18098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1809c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   180a3:	00 
   180a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180a8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   180ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   180b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180b4:	48 89 ce             	mov    %rcx,%rsi
   180b7:	48 89 c7             	mov    %rax,%rdi
   180ba:	e8 59 06 00 00       	call   18718 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
   180bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   180c3:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   180ca:	00 
   180cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180cf:	48 01 d0             	add    %rdx,%rax
    }
   180d2:	c9                   	leave
   180d3:	c3                   	ret

00000000000180d4 <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   180d4:	55                   	push   %rbp
   180d5:	48 89 e5             	mov    %rsp,%rbp
   180d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   180dc:	90                   	nop
   180dd:	5d                   	pop    %rbp
   180de:	c3                   	ret

00000000000180df <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   180df:	55                   	push   %rbp
   180e0:	48 89 e5             	mov    %rsp,%rbp
   180e3:	48 83 ec 20          	sub    $0x20,%rsp
   180e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   180eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   180ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   180f3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   180f8:	75 06                	jne    18100 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   180fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   180fe:	eb 4a                	jmp    1814a <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
   18100:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18104:	48 89 d0             	mov    %rdx,%rax
   18107:	48 01 c0             	add    %rax,%rax
   1810a:	48 01 d0             	add    %rdx,%rax
   1810d:	48 c1 e0 03          	shl    $0x3,%rax
   18111:	48 89 c2             	mov    %rax,%rdx
   18114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18118:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1811c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18124:	48 89 ce             	mov    %rcx,%rsi
   18127:	48 89 c7             	mov    %rax,%rdi
   1812a:	e8 17 06 00 00       	call   18746 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
   1812f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18133:	48 89 d0             	mov    %rdx,%rax
   18136:	48 01 c0             	add    %rax,%rax
   18139:	48 01 d0             	add    %rdx,%rax
   1813c:	48 c1 e0 03          	shl    $0x3,%rax
   18140:	48 89 c2             	mov    %rax,%rdx
   18143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18147:	48 01 d0             	add    %rdx,%rax
    }
   1814a:	c9                   	leave
   1814b:	c3                   	ret

000000000001814c <_ZSt7forwardIRPSt13_Rb_tree_nodeIjEEOT_RNSt16remove_referenceIS4_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1814c:	55                   	push   %rbp
   1814d:	48 89 e5             	mov    %rsp,%rbp
   18150:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   18154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18158:	5d                   	pop    %rbp
   18159:	c3                   	ret

000000000001815a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE11_M_get_nodeEv>:
      _M_get_node()
   1815a:	55                   	push   %rbp
   1815b:	48 89 e5             	mov    %rsp,%rbp
   1815e:	48 83 ec 10          	sub    $0x10,%rsp
   18162:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   18166:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1816a:	48 89 c7             	mov    %rax,%rdi
   1816d:	e8 a8 e3 ff ff       	call   1651a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   18172:	be 01 00 00 00       	mov    $0x1,%esi
   18177:	48 89 c7             	mov    %rax,%rdi
   1817a:	e8 f5 05 00 00       	call   18774 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>
   1817f:	c9                   	leave
   18180:	c3                   	ret
   18181:	90                   	nop

0000000000018182 <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE17_M_construct_nodeIJRKjEEEvPSt13_Rb_tree_nodeIjEDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   18182:	55                   	push   %rbp
   18183:	48 89 e5             	mov    %rsp,%rbp
   18186:	41 54                	push   %r12
   18188:	53                   	push   %rbx
   18189:	48 83 ec 20          	sub    $0x20,%rsp
   1818d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18191:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18195:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   18199:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1819d:	48 89 c6             	mov    %rax,%rsi
   181a0:	bf 28 00 00 00       	mov    $0x28,%edi
   181a5:	e8 c3 d1 fe ff       	call   536d <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   181aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   181ae:	48 89 c7             	mov    %rax,%rdi
   181b1:	e8 d0 cc ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   181b6:	49 89 c4             	mov    %rax,%r12
   181b9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   181bd:	48 89 c7             	mov    %rax,%rdi
   181c0:	e8 63 e3 ff ff       	call   16528 <_ZNSt13_Rb_tree_nodeIjE9_M_valptrEv>
   181c5:	48 89 c3             	mov    %rax,%rbx
   181c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   181cc:	48 89 c7             	mov    %rax,%rdi
   181cf:	e8 46 e3 ff ff       	call   1651a <_ZNSt8_Rb_treeIjjSt9_IdentityIjESt4lessIjESaIjEE21_M_get_Node_allocatorEv>
   181d4:	4c 89 e2             	mov    %r12,%rdx
   181d7:	48 89 de             	mov    %rbx,%rsi
   181da:	48 89 c7             	mov    %rax,%rdi
   181dd:	e8 bc 05 00 00       	call   1879e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>
	}
   181e2:	90                   	nop
   181e3:	48 83 c4 20          	add    $0x20,%rsp
   181e7:	5b                   	pop    %rbx
   181e8:	41 5c                	pop    %r12
   181ea:	5d                   	pop    %rbp
   181eb:	c3                   	ret

00000000000181ec <_ZN9__gnu_cxx16__aligned_membufIjE7_M_addrEv>:
      _M_addr() noexcept
   181ec:	55                   	push   %rbp
   181ed:	48 89 e5             	mov    %rsp,%rbp
   181f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   181f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   181f8:	5d                   	pop    %rbp
   181f9:	c3                   	ret

00000000000181fa <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   181fa:	55                   	push   %rbp
   181fb:	48 89 e5             	mov    %rsp,%rbp
   181fe:	48 83 ec 10          	sub    $0x10,%rsp
   18202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   18206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1820a:	48 89 c7             	mov    %rax,%rdi
   1820d:	e8 c4 f6 ff ff       	call   178d6 <_ZNKSt15__new_allocatorI23VkDeviceQueueCreateInfoE11_M_max_sizeEv>
   18212:	c9                   	leave
   18213:	c3                   	ret

0000000000018214 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   18214:	55                   	push   %rbp
   18215:	48 89 e5             	mov    %rsp,%rbp
   18218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   1821c:	90                   	nop
   1821d:	5d                   	pop    %rbp
   1821e:	c3                   	ret

000000000001821f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1821f:	55                   	push   %rbp
   18220:	48 89 e5             	mov    %rsp,%rbp
   18223:	48 83 ec 20          	sub    $0x20,%rsp
   18227:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1822b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1822f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   18233:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18238:	75 06                	jne    18240 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1823a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1823e:	eb 3a                	jmp    1827a <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   18240:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18244:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1824b:	00 
   1824c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18250:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18254:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1825c:	48 89 ce             	mov    %rcx,%rsi
   1825f:	48 89 c7             	mov    %rax,%rdi
   18262:	e8 70 05 00 00       	call   187d7 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
   18267:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1826b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18272:	00 
   18273:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18277:	48 01 d0             	add    %rdx,%rax
    }
   1827a:	c9                   	leave
   1827b:	c3                   	ret

000000000001827c <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1827c:	55                   	push   %rbp
   1827d:	48 89 e5             	mov    %rsp,%rbp
   18280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18284:	90                   	nop
   18285:	5d                   	pop    %rbp
   18286:	c3                   	ret

0000000000018287 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   18287:	55                   	push   %rbp
   18288:	48 89 e5             	mov    %rsp,%rbp
   1828b:	48 83 ec 20          	sub    $0x20,%rsp
   1828f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18293:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18297:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   1829b:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   182a0:	75 06                	jne    182a8 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   182a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182a6:	eb 3a                	jmp    182e2 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   182a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182ac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   182b3:	00 
   182b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182b8:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   182bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   182c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182c4:	48 89 ce             	mov    %rcx,%rsi
   182c7:	48 89 c7             	mov    %rax,%rdi
   182ca:	e8 36 05 00 00       	call   18805 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   182cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   182d3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   182da:	00 
   182db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   182df:	48 01 d0             	add    %rdx,%rax
    }
   182e2:	c9                   	leave
   182e3:	c3                   	ret

00000000000182e4 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   182e4:	55                   	push   %rbp
   182e5:	48 89 e5             	mov    %rsp,%rbp
   182e8:	48 83 ec 20          	sub    $0x20,%rsp
   182ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   182f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   182f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   182f8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   182fd:	75 06                	jne    18305 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   182ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18303:	eb 2a                	jmp    1832f <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
   18305:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18309:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1830d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18311:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18315:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18319:	48 89 ce             	mov    %rcx,%rsi
   1831c:	48 89 c7             	mov    %rax,%rdi
   1831f:	e8 0f 05 00 00       	call   18833 <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
   18324:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18328:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1832c:	48 01 d0             	add    %rdx,%rax
    }
   1832f:	c9                   	leave
   18330:	c3                   	ret

0000000000018331 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>:
    __miter_base(_Iterator __it)
   18331:	55                   	push   %rbp
   18332:	48 89 e5             	mov    %rsp,%rbp
   18335:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18339:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1833d:	5d                   	pop    %rbp
   1833e:	c3                   	ret

000000000001833f <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   1833f:	55                   	push   %rbp
   18340:	48 89 e5             	mov    %rsp,%rbp
   18343:	41 54                	push   %r12
   18345:	53                   	push   %rbx
   18346:	48 83 ec 20          	sub    $0x20,%rsp
   1834a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1834e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18352:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   18356:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1835a:	48 89 c7             	mov    %rax,%rdi
   1835d:	e8 0d 05 00 00       	call   1886f <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>
   18362:	49 89 c4             	mov    %rax,%r12
   18365:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18369:	48 89 c7             	mov    %rax,%rdi
   1836c:	e8 f0 04 00 00       	call   18861 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   18371:	48 89 c3             	mov    %rax,%rbx
   18374:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18378:	48 89 c7             	mov    %rax,%rdi
   1837b:	e8 e1 04 00 00       	call   18861 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   18380:	4c 89 e2             	mov    %r12,%rdx
   18383:	48 89 de             	mov    %rbx,%rsi
   18386:	48 89 c7             	mov    %rax,%rdi
   18389:	e8 ef 04 00 00       	call   1887d <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   1838e:	48 89 c2             	mov    %rax,%rdx
   18391:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   18395:	48 89 d6             	mov    %rdx,%rsi
   18398:	48 89 c7             	mov    %rax,%rdi
   1839b:	e8 0a 05 00 00       	call   188aa <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>
    }
   183a0:	48 83 c4 20          	add    $0x20,%rsp
   183a4:	5b                   	pop    %rbx
   183a5:	41 5c                	pop    %r12
   183a7:	5d                   	pop    %rbp
   183a8:	c3                   	ret

00000000000183a9 <_ZSt19__iterator_categoryIPP15VkFramebuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   183a9:	55                   	push   %rbp
   183aa:	48 89 e5             	mov    %rsp,%rbp
   183ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   183b1:	90                   	nop
   183b2:	5d                   	pop    %rbp
   183b3:	c3                   	ret

00000000000183b4 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   183b4:	55                   	push   %rbp
   183b5:	48 89 e5             	mov    %rsp,%rbp
   183b8:	48 83 ec 20          	sub    $0x20,%rsp
   183bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   183c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   183c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   183c8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   183cd:	75 06                	jne    183d5 <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   183cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183d3:	eb 3a                	jmp    1840f <_ZSt10__fill_n_aIPP15VkFramebuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   183d5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   183d9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   183e0:	00 
   183e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183e5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   183e9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   183ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   183f1:	48 89 ce             	mov    %rcx,%rsi
   183f4:	48 89 c7             	mov    %rax,%rdi
   183f7:	e8 c0 04 00 00       	call   188bc <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   183fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18400:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18407:	00 
   18408:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1840c:	48 01 d0             	add    %rdx,%rax
    }
   1840f:	c9                   	leave
   18410:	c3                   	ret

0000000000018411 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   18411:	55                   	push   %rbp
   18412:	48 89 e5             	mov    %rsp,%rbp
   18415:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18419:	90                   	nop
   1841a:	5d                   	pop    %rbp
   1841b:	c3                   	ret

000000000001841c <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   1841c:	55                   	push   %rbp
   1841d:	48 89 e5             	mov    %rsp,%rbp
   18420:	48 83 ec 20          	sub    $0x20,%rsp
   18424:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18428:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1842c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   18430:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18435:	75 06                	jne    1843d <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   18437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1843b:	eb 3a                	jmp    18477 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1843d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18441:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18448:	00 
   18449:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1844d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18451:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18455:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18459:	48 89 ce             	mov    %rcx,%rsi
   1845c:	48 89 c7             	mov    %rax,%rdi
   1845f:	e8 86 04 00 00       	call   188ea <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
   18464:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18468:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1846f:	00 
   18470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18474:	48 01 d0             	add    %rdx,%rax
    }
   18477:	c9                   	leave
   18478:	c3                   	ret

0000000000018479 <_ZSt19__iterator_categoryIPP13VkSemaphore_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   18479:	55                   	push   %rbp
   1847a:	48 89 e5             	mov    %rsp,%rbp
   1847d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   18481:	90                   	nop
   18482:	5d                   	pop    %rbp
   18483:	c3                   	ret

0000000000018484 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   18484:	55                   	push   %rbp
   18485:	48 89 e5             	mov    %rsp,%rbp
   18488:	48 83 ec 20          	sub    $0x20,%rsp
   1848c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18490:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18494:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   18498:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1849d:	75 06                	jne    184a5 <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1849f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184a3:	eb 3a                	jmp    184df <_ZSt10__fill_n_aIPP13VkSemaphore_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   184a5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   184a9:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   184b0:	00 
   184b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184b5:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   184b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   184bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184c1:	48 89 ce             	mov    %rcx,%rsi
   184c4:	48 89 c7             	mov    %rax,%rdi
   184c7:	e8 4c 04 00 00       	call   18918 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>
      return __first + __n;
   184cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   184d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   184d7:	00 
   184d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   184dc:	48 01 d0             	add    %rdx,%rax
    }
   184df:	c9                   	leave
   184e0:	c3                   	ret

00000000000184e1 <_ZSt19__iterator_categoryIPP9VkFence_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   184e1:	55                   	push   %rbp
   184e2:	48 89 e5             	mov    %rsp,%rbp
   184e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   184e9:	90                   	nop
   184ea:	5d                   	pop    %rbp
   184eb:	c3                   	ret

00000000000184ec <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   184ec:	55                   	push   %rbp
   184ed:	48 89 e5             	mov    %rsp,%rbp
   184f0:	48 83 ec 20          	sub    $0x20,%rsp
   184f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   184f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   184fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   18500:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18505:	75 06                	jne    1850d <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   18507:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1850b:	eb 3a                	jmp    18547 <_ZSt10__fill_n_aIPP9VkFence_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   1850d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18511:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18518:	00 
   18519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1851d:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   18521:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18529:	48 89 ce             	mov    %rcx,%rsi
   1852c:	48 89 c7             	mov    %rax,%rdi
   1852f:	e8 12 04 00 00       	call   18946 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>
      return __first + __n;
   18534:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18538:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1853f:	00 
   18540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18544:	48 01 d0             	add    %rdx,%rax
    }
   18547:	c9                   	leave
   18548:	c3                   	ret

0000000000018549 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   18549:	55                   	push   %rbp
   1854a:	48 89 e5             	mov    %rsp,%rbp
   1854d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18551:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   18555:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18559:	5d                   	pop    %rbp
   1855a:	c3                   	ret

000000000001855b <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   1855b:	55                   	push   %rbp
   1855c:	48 89 e5             	mov    %rsp,%rbp
   1855f:	48 83 ec 20          	sub    $0x20,%rsp
   18563:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18567:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1856b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1856f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18573:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18577:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1857b:	48 89 ce             	mov    %rcx,%rsi
   1857e:	48 89 c7             	mov    %rax,%rdi
   18581:	e8 ee 03 00 00       	call   18974 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   18586:	90                   	nop
   18587:	c9                   	leave
   18588:	c3                   	ret

0000000000018589 <_ZSt14__copy_move_a1ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   18589:	55                   	push   %rbp
   1858a:	48 89 e5             	mov    %rsp,%rbp
   1858d:	48 83 ec 20          	sub    $0x20,%rsp
   18591:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18595:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18599:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   1859d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   185a1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   185a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185a9:	48 89 ce             	mov    %rcx,%rsi
   185ac:	48 89 c7             	mov    %rax,%rdi
   185af:	e8 38 04 00 00       	call   189ec <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>
   185b4:	c9                   	leave
   185b5:	c3                   	ret

00000000000185b6 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   185b6:	55                   	push   %rbp
   185b7:	48 89 e5             	mov    %rsp,%rbp
   185ba:	48 83 ec 20          	sub    $0x20,%rsp
   185be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   185ca:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   185ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   185d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185d6:	48 89 ce             	mov    %rcx,%rsi
   185d9:	48 89 c7             	mov    %rax,%rdi
   185dc:	e8 38 04 00 00       	call   18a19 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   185e1:	90                   	nop
   185e2:	c9                   	leave
   185e3:	c3                   	ret

00000000000185e4 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   185e4:	55                   	push   %rbp
   185e5:	48 89 e5             	mov    %rsp,%rbp
   185e8:	48 83 ec 20          	sub    $0x20,%rsp
   185ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   185f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   185f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   185f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   185fc:	48 89 c7             	mov    %rax,%rdi
   185ff:	e8 8e 04 00 00       	call   18a92 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>
   18604:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18608:	0f 92 c0             	setb   %al
   1860b:	0f b6 c0             	movzbl %al,%eax
   1860e:	48 85 c0             	test   %rax,%rax
   18611:	0f 95 c0             	setne  %al
   18614:	84 c0                	test   %al,%al
   18616:	74 1a                	je     18632 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18618:	48 b8 ff ff ff ff ff 	movabs $0x3ffffffffffffff,%rax
   1861f:	ff ff 03 
   18622:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18626:	73 05                	jae    1862d <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18628:	e8 93 bc fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1862d:	e8 be ba fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18632:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   18636:	48 c1 e0 06          	shl    $0x6,%rax
   1863a:	48 89 c7             	mov    %rax,%rdi
   1863d:	e8 de bd fe ff       	call   4420 <_Znwm@plt>
   18642:	90                   	nop
      }
   18643:	c9                   	leave
   18644:	c3                   	ret
   18645:	90                   	nop

0000000000018646 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   18646:	55                   	push   %rbp
   18647:	48 89 e5             	mov    %rsp,%rbp
   1864a:	41 56                	push   %r14
   1864c:	41 55                	push   %r13
   1864e:	41 54                	push   %r12
   18650:	53                   	push   %rbx
   18651:	48 83 ec 30          	sub    $0x30,%rsp
   18655:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   18659:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   1865d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   18661:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   18665:	48 89 de             	mov    %rbx,%rsi
   18668:	bf 20 00 00 00       	mov    $0x20,%edi
   1866d:	e8 fb cc fe ff       	call   536d <_ZnwmPv>
   18672:	49 89 c4             	mov    %rax,%r12
   18675:	41 be 01 00 00 00    	mov    $0x1,%r14d
   1867b:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   1867f:	48 89 c7             	mov    %rax,%rdi
   18682:	e8 f9 c1 fe ff       	call   4880 <_ZNSaIcEC1Ev@plt>
   18687:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1868b:	48 89 c7             	mov    %rax,%rdi
   1868e:	e8 9a b8 ff ff       	call   13f2d <_ZSt7forwardIRKPKcEOT_RNSt16remove_referenceIS4_E4typeE>
   18693:	48 8b 00             	mov    (%rax),%rax
   18696:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
   1869a:	48 89 c6             	mov    %rax,%rsi
   1869d:	4c 89 e7             	mov    %r12,%rdi
   186a0:	e8 3b 3b ff ff       	call   c1e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
   186a5:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   186a9:	48 89 c7             	mov    %rax,%rdi
   186ac:	e8 0f be fe ff       	call   44c0 <_ZNSaIcED1Ev@plt>
   186b1:	eb 2a                	jmp    186dd <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x97>
   186b3:	49 89 c5             	mov    %rax,%r13
   186b6:	48 8d 45 df          	lea    -0x21(%rbp),%rax
   186ba:	48 89 c7             	mov    %rax,%rdi
   186bd:	e8 fe bd fe ff       	call   44c0 <_ZNSaIcED1Ev@plt>
   186c2:	45 84 f6             	test   %r14b,%r14b
   186c5:	74 0b                	je     186d2 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS6_JRKPKcEEEvPT_DpOT0_+0x8c>
   186c7:	48 89 de             	mov    %rbx,%rsi
   186ca:	4c 89 e7             	mov    %r12,%rdi
   186cd:	e8 41 36 ff ff       	call   bd13 <_ZdlPvS_>
   186d2:	4c 89 e8             	mov    %r13,%rax
   186d5:	48 89 c7             	mov    %rax,%rdi
   186d8:	e8 93 c1 fe ff       	call   4870 <_Unwind_Resume@plt>
   186dd:	48 83 c4 30          	add    $0x30,%rsp
   186e1:	5b                   	pop    %rbx
   186e2:	41 5c                	pop    %r12
   186e4:	41 5d                	pop    %r13
   186e6:	41 5e                	pop    %r14
   186e8:	5d                   	pop    %rbp
   186e9:	c3                   	ret

00000000000186ea <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   186ea:	55                   	push   %rbp
   186eb:	48 89 e5             	mov    %rsp,%rbp
   186ee:	48 83 ec 20          	sub    $0x20,%rsp
   186f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   186f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   186fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   186fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18702:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1870a:	48 89 ce             	mov    %rcx,%rsi
   1870d:	48 89 c7             	mov    %rax,%rdi
   18710:	e8 91 03 00 00       	call   18aa6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   18715:	90                   	nop
   18716:	c9                   	leave
   18717:	c3                   	ret

0000000000018718 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18718:	55                   	push   %rbp
   18719:	48 89 e5             	mov    %rsp,%rbp
   1871c:	48 83 ec 20          	sub    $0x20,%rsp
   18720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18724:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18728:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1872c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18730:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18738:	48 89 ce             	mov    %rcx,%rsi
   1873b:	48 89 c7             	mov    %rax,%rdi
   1873e:	e8 96 03 00 00       	call   18ad9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   18743:	90                   	nop
   18744:	c9                   	leave
   18745:	c3                   	ret

0000000000018746 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18746:	55                   	push   %rbp
   18747:	48 89 e5             	mov    %rsp,%rbp
   1874a:	48 83 ec 20          	sub    $0x20,%rsp
   1874e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18752:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18756:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1875a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1875e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18762:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18766:	48 89 ce             	mov    %rcx,%rsi
   18769:	48 89 c7             	mov    %rax,%rdi
   1876c:	e8 99 03 00 00       	call   18b0a <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   18771:	90                   	nop
   18772:	c9                   	leave
   18773:	c3                   	ret

0000000000018774 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   18774:	55                   	push   %rbp
   18775:	48 89 e5             	mov    %rsp,%rbp
   18778:	48 83 ec 10          	sub    $0x10,%rsp
   1877c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18780:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   18784:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1878c:	ba 00 00 00 00       	mov    $0x0,%edx
   18791:	48 89 ce             	mov    %rcx,%rsi
   18794:	48 89 c7             	mov    %rax,%rdi
   18797:	e8 b2 03 00 00       	call   18b4e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>
   1879c:	c9                   	leave
   1879d:	c3                   	ret

000000000001879e <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIjEEE9constructIjJRKjEEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   1879e:	55                   	push   %rbp
   1879f:	48 89 e5             	mov    %rsp,%rbp
   187a2:	48 83 ec 20          	sub    $0x20,%rsp
   187a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   187ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   187b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   187b6:	48 89 c7             	mov    %rax,%rdi
   187b9:	e8 c8 c6 ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   187be:	48 89 c2             	mov    %rax,%rdx
   187c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   187c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187c9:	48 89 ce             	mov    %rcx,%rsi
   187cc:	48 89 c7             	mov    %rax,%rdi
   187cf:	e8 e6 03 00 00       	call   18bba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>
	}
   187d4:	90                   	nop
   187d5:	c9                   	leave
   187d6:	c3                   	ret

00000000000187d7 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   187d7:	55                   	push   %rbp
   187d8:	48 89 e5             	mov    %rsp,%rbp
   187db:	48 83 ec 20          	sub    $0x20,%rsp
   187df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   187e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   187e7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   187eb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   187ef:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   187f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   187f7:	48 89 ce             	mov    %rcx,%rsi
   187fa:	48 89 c7             	mov    %rax,%rdi
   187fd:	e8 f8 03 00 00       	call   18bfa <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18802:	90                   	nop
   18803:	c9                   	leave
   18804:	c3                   	ret

0000000000018805 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18805:	55                   	push   %rbp
   18806:	48 89 e5             	mov    %rsp,%rbp
   18809:	48 83 ec 20          	sub    $0x20,%rsp
   1880d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18811:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18815:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   18819:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1881d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18821:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18825:	48 89 ce             	mov    %rcx,%rsi
   18828:	48 89 c7             	mov    %rax,%rdi
   1882b:	e8 05 04 00 00       	call   18c35 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18830:	90                   	nop
   18831:	c9                   	leave
   18832:	c3                   	ret

0000000000018833 <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18833:	55                   	push   %rbp
   18834:	48 89 e5             	mov    %rsp,%rbp
   18837:	48 83 ec 20          	sub    $0x20,%rsp
   1883b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1883f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18843:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   18847:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1884b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1884f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18853:	48 89 ce             	mov    %rcx,%rsi
   18856:	48 89 c7             	mov    %rax,%rdi
   18859:	e8 12 04 00 00       	call   18c70 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
   1885e:	90                   	nop
   1885f:	c9                   	leave
   18860:	c3                   	ret

0000000000018861 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>:
    __niter_base(_Iterator __it)
   18861:	55                   	push   %rbp
   18862:	48 89 e5             	mov    %rsp,%rbp
   18865:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18869:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1886d:	5d                   	pop    %rbp
   1886e:	c3                   	ret

000000000001886f <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>:
    __niter_base(_Iterator __it)
   1886f:	55                   	push   %rbp
   18870:	48 89 e5             	mov    %rsp,%rbp
   18873:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   18877:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1887b:	5d                   	pop    %rbp
   1887c:	c3                   	ret

000000000001887d <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   1887d:	55                   	push   %rbp
   1887e:	48 89 e5             	mov    %rsp,%rbp
   18881:	48 83 ec 20          	sub    $0x20,%rsp
   18885:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18889:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1888d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   18891:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18895:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18899:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1889d:	48 89 ce             	mov    %rcx,%rsi
   188a0:	48 89 c7             	mov    %rax,%rdi
   188a3:	e8 15 04 00 00       	call   18cbd <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   188a8:	c9                   	leave
   188a9:	c3                   	ret

00000000000188aa <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   188aa:	55                   	push   %rbp
   188ab:	48 89 e5             	mov    %rsp,%rbp
   188ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   188b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   188ba:	5d                   	pop    %rbp
   188bb:	c3                   	ret

00000000000188bc <_ZSt8__fill_aIPP15VkFramebuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   188bc:	55                   	push   %rbp
   188bd:	48 89 e5             	mov    %rsp,%rbp
   188c0:	48 83 ec 20          	sub    $0x20,%rsp
   188c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   188d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   188d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   188d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   188dc:	48 89 ce             	mov    %rcx,%rsi
   188df:	48 89 c7             	mov    %rax,%rdi
   188e2:	e8 03 04 00 00       	call   18cea <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   188e7:	90                   	nop
   188e8:	c9                   	leave
   188e9:	c3                   	ret

00000000000188ea <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   188ea:	55                   	push   %rbp
   188eb:	48 89 e5             	mov    %rsp,%rbp
   188ee:	48 83 ec 20          	sub    $0x20,%rsp
   188f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   188f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   188fa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   188fe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18902:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18906:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1890a:	48 89 ce             	mov    %rcx,%rsi
   1890d:	48 89 c7             	mov    %rax,%rdi
   18910:	e8 10 04 00 00       	call   18d25 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18915:	90                   	nop
   18916:	c9                   	leave
   18917:	c3                   	ret

0000000000018918 <_ZSt8__fill_aIPP13VkSemaphore_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18918:	55                   	push   %rbp
   18919:	48 89 e5             	mov    %rsp,%rbp
   1891c:	48 83 ec 20          	sub    $0x20,%rsp
   18920:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18924:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18928:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1892c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18930:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18934:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18938:	48 89 ce             	mov    %rcx,%rsi
   1893b:	48 89 c7             	mov    %rax,%rdi
   1893e:	e8 1d 04 00 00       	call   18d60 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18943:	90                   	nop
   18944:	c9                   	leave
   18945:	c3                   	ret

0000000000018946 <_ZSt8__fill_aIPP9VkFence_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   18946:	55                   	push   %rbp
   18947:	48 89 e5             	mov    %rsp,%rbp
   1894a:	48 83 ec 20          	sub    $0x20,%rsp
   1894e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18952:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18956:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1895a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1895e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18962:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18966:	48 89 ce             	mov    %rcx,%rsi
   18969:	48 89 c7             	mov    %rax,%rdi
   1896c:	e8 2a 04 00 00       	call   18d9b <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   18971:	90                   	nop
   18972:	c9                   	leave
   18973:	c3                   	ret

0000000000018974 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18974:	55                   	push   %rbp
   18975:	48 89 e5             	mov    %rsp,%rbp
   18978:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1897c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18980:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18984:	eb 58                	jmp    189de <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   18986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1898a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1898e:	b9 04 01 00 00       	mov    $0x104,%ecx
   18993:	48 8b 32             	mov    (%rdx),%rsi
   18996:	48 89 30             	mov    %rsi,(%rax)
   18999:	89 ce                	mov    %ecx,%esi
   1899b:	48 01 c6             	add    %rax,%rsi
   1899e:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   189a2:	89 ce                	mov    %ecx,%esi
   189a4:	48 01 d6             	add    %rdx,%rsi
   189a7:	48 83 c6 08          	add    $0x8,%rsi
   189ab:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   189af:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   189b3:	48 8d 78 08          	lea    0x8(%rax),%rdi
   189b7:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   189bb:	48 29 f8             	sub    %rdi,%rax
   189be:	48 29 c2             	sub    %rax,%rdx
   189c1:	01 c1                	add    %eax,%ecx
   189c3:	83 e1 f8             	and    $0xfffffff8,%ecx
   189c6:	89 c8                	mov    %ecx,%eax
   189c8:	c1 e8 03             	shr    $0x3,%eax
   189cb:	89 c0                	mov    %eax,%eax
   189cd:	48 89 d6             	mov    %rdx,%rsi
   189d0:	48 89 c1             	mov    %rax,%rcx
   189d3:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   189d6:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
   189dd:	00 
   189de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   189e2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   189e6:	75 9e                	jne    18986 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   189e8:	90                   	nop
   189e9:	90                   	nop
   189ea:	5d                   	pop    %rbp
   189eb:	c3                   	ret

00000000000189ec <_ZSt14__copy_move_a2ILb0EPPKcS2_ET1_T0_S4_S3_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   189ec:	55                   	push   %rbp
   189ed:	48 89 e5             	mov    %rsp,%rbp
   189f0:	48 83 ec 20          	sub    $0x20,%rsp
   189f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   189f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   189fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   18a00:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18a04:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a0c:	48 89 ce             	mov    %rcx,%rsi
   18a0f:	48 89 c7             	mov    %rax,%rdi
   18a12:	e8 bf 03 00 00       	call   18dd6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   18a17:	c9                   	leave
   18a18:	c3                   	ret

0000000000018a19 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18a19:	55                   	push   %rbp
   18a1a:	48 89 e5             	mov    %rsp,%rbp
   18a1d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18a21:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18a25:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18a29:	eb 58                	jmp    18a83 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
   18a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a2f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18a33:	b9 08 02 00 00       	mov    $0x208,%ecx
   18a38:	48 8b 32             	mov    (%rdx),%rsi
   18a3b:	48 89 30             	mov    %rsi,(%rax)
   18a3e:	89 ce                	mov    %ecx,%esi
   18a40:	48 01 c6             	add    %rax,%rsi
   18a43:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
   18a47:	89 ce                	mov    %ecx,%esi
   18a49:	48 01 d6             	add    %rdx,%rsi
   18a4c:	48 83 c6 08          	add    $0x8,%rsi
   18a50:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
   18a54:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
   18a58:	48 8d 78 08          	lea    0x8(%rax),%rdi
   18a5c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
   18a60:	48 29 f8             	sub    %rdi,%rax
   18a63:	48 29 c2             	sub    %rax,%rdx
   18a66:	01 c1                	add    %eax,%ecx
   18a68:	83 e1 f8             	and    $0xfffffff8,%ecx
   18a6b:	89 c8                	mov    %ecx,%eax
   18a6d:	c1 e8 03             	shr    $0x3,%eax
   18a70:	89 c0                	mov    %eax,%eax
   18a72:	48 89 d6             	mov    %rdx,%rsi
   18a75:	48 89 c1             	mov    %rax,%rcx
   18a78:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
   18a7b:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
   18a82:	00 
   18a83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18a87:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18a8b:	75 9e                	jne    18a2b <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18a8d:	90                   	nop
   18a8e:	90                   	nop
   18a8f:	5d                   	pop    %rbp
   18a90:	c3                   	ret
   18a91:	90                   	nop

0000000000018a92 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18a92:	55                   	push   %rbp
   18a93:	48 89 e5             	mov    %rsp,%rbp
   18a96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18a9a:	48 b8 ff ff ff ff ff 	movabs $0x1ffffffffffffff,%rax
   18aa1:	ff ff 01 
      }
   18aa4:	5d                   	pop    %rbp
   18aa5:	c3                   	ret

0000000000018aa6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18aa6:	55                   	push   %rbp
   18aa7:	48 89 e5             	mov    %rsp,%rbp
   18aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18aae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ab2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18ab6:	eb 13                	jmp    18acb <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
   18ab8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18abc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18ac0:	48 8b 12             	mov    (%rdx),%rdx
   18ac3:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18ac6:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
   18acb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18acf:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18ad3:	75 e3                	jne    18ab8 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18ad5:	90                   	nop
   18ad6:	90                   	nop
   18ad7:	5d                   	pop    %rbp
   18ad8:	c3                   	ret

0000000000018ad9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18ad9:	55                   	push   %rbp
   18ada:	48 89 e5             	mov    %rsp,%rbp
   18add:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ae1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ae5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18ae9:	eb 11                	jmp    18afc <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
   18aeb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18aef:	8b 10                	mov    (%rax),%edx
   18af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18af5:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
   18af7:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
   18afc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b00:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18b04:	75 e5                	jne    18aeb <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18b06:	90                   	nop
   18b07:	90                   	nop
   18b08:	5d                   	pop    %rbp
   18b09:	c3                   	ret

0000000000018b0a <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18b0a:	55                   	push   %rbp
   18b0b:	48 89 e5             	mov    %rsp,%rbp
   18b0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b16:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   18b1a:	eb 23                	jmp    18b3f <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
   18b1c:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   18b20:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   18b24:	48 8b 06             	mov    (%rsi),%rax
   18b27:	48 8b 56 08          	mov    0x8(%rsi),%rdx
   18b2b:	48 89 01             	mov    %rax,(%rcx)
   18b2e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
   18b32:	48 8b 46 10          	mov    0x10(%rsi),%rax
   18b36:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
   18b3a:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
   18b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b43:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18b47:	75 d3                	jne    18b1c <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   18b49:	90                   	nop
   18b4a:	90                   	nop
   18b4b:	5d                   	pop    %rbp
   18b4c:	c3                   	ret
   18b4d:	90                   	nop

0000000000018b4e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   18b4e:	55                   	push   %rbp
   18b4f:	48 89 e5             	mov    %rsp,%rbp
   18b52:	48 83 ec 20          	sub    $0x20,%rsp
   18b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18b5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18b5e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   18b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18b66:	48 89 c7             	mov    %rax,%rdi
   18b69:	e8 c8 02 00 00       	call   18e36 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>
   18b6e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18b72:	0f 92 c0             	setb   %al
   18b75:	0f b6 c0             	movzbl %al,%eax
   18b78:	48 85 c0             	test   %rax,%rax
   18b7b:	0f 95 c0             	setne  %al
   18b7e:	84 c0                	test   %al,%al
   18b80:	74 1a                	je     18b9c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   18b82:	48 b8 66 66 66 66 66 	movabs $0x666666666666666,%rax
   18b89:	66 66 06 
   18b8c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   18b90:	73 05                	jae    18b97 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   18b92:	e8 29 b7 fe ff       	call   42c0 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   18b97:	e8 54 b5 fe ff       	call   40f0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   18b9c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18ba0:	48 89 d0             	mov    %rdx,%rax
   18ba3:	48 c1 e0 02          	shl    $0x2,%rax
   18ba7:	48 01 d0             	add    %rdx,%rax
   18baa:	48 c1 e0 03          	shl    $0x3,%rax
   18bae:	48 89 c7             	mov    %rax,%rdi
   18bb1:	e8 6a b8 fe ff       	call   4420 <_Znwm@plt>
   18bb6:	90                   	nop
      }
   18bb7:	c9                   	leave
   18bb8:	c3                   	ret
   18bb9:	90                   	nop

0000000000018bba <_ZNSt15__new_allocatorISt13_Rb_tree_nodeIjEE9constructIjJRKjEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   18bba:	55                   	push   %rbp
   18bbb:	48 89 e5             	mov    %rsp,%rbp
   18bbe:	53                   	push   %rbx
   18bbf:	48 83 ec 28          	sub    $0x28,%rsp
   18bc3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18bc7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18bcb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   18bcf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18bd3:	48 89 c6             	mov    %rax,%rsi
   18bd6:	bf 04 00 00 00       	mov    $0x4,%edi
   18bdb:	e8 8d c7 fe ff       	call   536d <_ZnwmPv>
   18be0:	48 89 c3             	mov    %rax,%rbx
   18be3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18be7:	48 89 c7             	mov    %rax,%rdi
   18bea:	e8 97 c2 ff ff       	call   14e86 <_ZSt7forwardIRKjEOT_RNSt16remove_referenceIS2_E4typeE>
   18bef:	8b 00                	mov    (%rax),%eax
   18bf1:	89 03                	mov    %eax,(%rbx)
   18bf3:	90                   	nop
   18bf4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   18bf8:	c9                   	leave
   18bf9:	c3                   	ret

0000000000018bfa <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18bfa:	55                   	push   %rbp
   18bfb:	48 89 e5             	mov    %rsp,%rbp
   18bfe:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c02:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18c06:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18c0a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18c0e:	48 8b 00             	mov    (%rax),%rax
   18c11:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18c15:	eb 10                	jmp    18c27 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18c17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c1b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18c1f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18c22:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18c27:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c2b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18c2f:	75 e6                	jne    18c17 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18c31:	90                   	nop
   18c32:	90                   	nop
   18c33:	5d                   	pop    %rbp
   18c34:	c3                   	ret

0000000000018c35 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18c35:	55                   	push   %rbp
   18c36:	48 89 e5             	mov    %rsp,%rbp
   18c39:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c3d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18c41:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18c45:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18c49:	48 8b 00             	mov    (%rax),%rax
   18c4c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18c50:	eb 10                	jmp    18c62 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18c52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c56:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18c5a:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18c5d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18c66:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18c6a:	75 e6                	jne    18c52 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18c6c:	90                   	nop
   18c6d:	90                   	nop
   18c6e:	5d                   	pop    %rbp
   18c6f:	c3                   	ret

0000000000018c70 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
   18c70:	55                   	push   %rbp
   18c71:	48 89 e5             	mov    %rsp,%rbp
   18c74:	48 83 ec 30          	sub    $0x30,%rsp
   18c78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18c7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18c80:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
   18c84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18c88:	0f b6 00             	movzbl (%rax),%eax
   18c8b:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
   18c8e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18c92:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18c96:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   18c9a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   18c9f:	74 19                	je     18cba <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
   18ca1:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
   18ca5:	0f b6 c8             	movzbl %al,%ecx
   18ca8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   18cac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18cb0:	89 ce                	mov    %ecx,%esi
   18cb2:	48 89 c7             	mov    %rax,%rdi
   18cb5:	e8 16 b5 fe ff       	call   41d0 <memset@plt>
    }
   18cba:	90                   	nop
   18cbb:	c9                   	leave
   18cbc:	c3                   	ret

0000000000018cbd <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   18cbd:	55                   	push   %rbp
   18cbe:	48 89 e5             	mov    %rsp,%rbp
   18cc1:	48 83 ec 20          	sub    $0x20,%rsp
   18cc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18cc9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   18ccd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   18cd1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   18cd5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   18cd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18cdd:	48 89 ce             	mov    %rcx,%rsi
   18ce0:	48 89 c7             	mov    %rax,%rdi
   18ce3:	e8 62 01 00 00       	call   18e4a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>
    }
   18ce8:	c9                   	leave
   18ce9:	c3                   	ret

0000000000018cea <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18cea:	55                   	push   %rbp
   18ceb:	48 89 e5             	mov    %rsp,%rbp
   18cee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18cf2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18cf6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18cfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18cfe:	48 8b 00             	mov    (%rax),%rax
   18d01:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18d05:	eb 10                	jmp    18d17 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18d07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d0b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18d0f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18d12:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18d17:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d1b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18d1f:	75 e6                	jne    18d07 <_ZSt9__fill_a1IPP15VkFramebuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18d21:	90                   	nop
   18d22:	90                   	nop
   18d23:	5d                   	pop    %rbp
   18d24:	c3                   	ret

0000000000018d25 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18d25:	55                   	push   %rbp
   18d26:	48 89 e5             	mov    %rsp,%rbp
   18d29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18d2d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18d31:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18d35:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d39:	48 8b 00             	mov    (%rax),%rax
   18d3c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18d40:	eb 10                	jmp    18d52 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18d42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d46:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18d4a:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18d4d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18d52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d56:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18d5a:	75 e6                	jne    18d42 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18d5c:	90                   	nop
   18d5d:	90                   	nop
   18d5e:	5d                   	pop    %rbp
   18d5f:	c3                   	ret

0000000000018d60 <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18d60:	55                   	push   %rbp
   18d61:	48 89 e5             	mov    %rsp,%rbp
   18d64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18d68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18d6c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18d70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18d74:	48 8b 00             	mov    (%rax),%rax
   18d77:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18d7b:	eb 10                	jmp    18d8d <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18d7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d81:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18d85:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18d88:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18d8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18d91:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18d95:	75 e6                	jne    18d7d <_ZSt9__fill_a1IPP13VkSemaphore_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18d97:	90                   	nop
   18d98:	90                   	nop
   18d99:	5d                   	pop    %rbp
   18d9a:	c3                   	ret

0000000000018d9b <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   18d9b:	55                   	push   %rbp
   18d9c:	48 89 e5             	mov    %rsp,%rbp
   18d9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18da3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18da7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   18dab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18daf:	48 8b 00             	mov    (%rax),%rax
   18db2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   18db6:	eb 10                	jmp    18dc8 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   18db8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18dbc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   18dc0:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   18dc3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   18dc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18dcc:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   18dd0:	75 e6                	jne    18db8 <_ZSt9__fill_a1IPP9VkFence_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   18dd2:	90                   	nop
   18dd3:	90                   	nop
   18dd4:	5d                   	pop    %rbp
   18dd5:	c3                   	ret

0000000000018dd6 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18dd6:	55                   	push   %rbp
   18dd7:	48 89 e5             	mov    %rsp,%rbp
   18dda:	48 83 ec 30          	sub    $0x30,%rsp
   18dde:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18de2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18de6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   18dea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18dee:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18df2:	48 c1 f8 03          	sar    $0x3,%rax
   18df6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   18dfa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18dff:	74 1f                	je     18e20 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   18e01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e05:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18e0c:	00 
   18e0d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18e11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e15:	48 89 ce             	mov    %rcx,%rsi
   18e18:	48 89 c7             	mov    %rax,%rdi
   18e1b:	e8 c0 b9 fe ff       	call   47e0 <memmove@plt>
	  return __result + _Num;
   18e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e24:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   18e2b:	00 
   18e2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e30:	48 01 d0             	add    %rdx,%rax
	}
   18e33:	c9                   	leave
   18e34:	c3                   	ret
   18e35:	90                   	nop

0000000000018e36 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeIjEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   18e36:	55                   	push   %rbp
   18e37:	48 89 e5             	mov    %rsp,%rbp
   18e3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   18e3e:	48 b8 33 33 33 33 33 	movabs $0x333333333333333,%rax
   18e45:	33 33 03 
      }
   18e48:	5d                   	pop    %rbp
   18e49:	c3                   	ret

0000000000018e4a <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   18e4a:	55                   	push   %rbp
   18e4b:	48 89 e5             	mov    %rsp,%rbp
   18e4e:	48 83 ec 30          	sub    $0x30,%rsp
   18e52:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   18e56:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   18e5a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   18e5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   18e62:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   18e66:	48 c1 f8 02          	sar    $0x2,%rax
   18e6a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   18e6e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   18e73:	74 1f                	je     18e94 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   18e75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e79:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   18e80:	00 
   18e81:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   18e85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18e89:	48 89 ce             	mov    %rcx,%rsi
   18e8c:	48 89 c7             	mov    %rax,%rdi
   18e8f:	e8 4c b9 fe ff       	call   47e0 <memmove@plt>
	  return __result + _Num;
   18e94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18e98:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   18e9f:	00 
   18ea0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   18ea4:	48 01 d0             	add    %rdx,%rax
	}
   18ea7:	c9                   	leave
   18ea8:	c3                   	ret
   18ea9:	90                   	nop

0000000000018eaa <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   18eaa:	55                   	push   %rbp
   18eab:	48 89 e5             	mov    %rsp,%rbp
   18eae:	48 83 ec 10          	sub    $0x10,%rsp
   18eb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18eb6:	48 8d 15 13 0e 01 00 	lea    0x10e13(%rip),%rdx        # 29cd0 <_ZTVSt19bad_optional_access+0x10>
   18ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ec1:	48 89 10             	mov    %rdx,(%rax)
   18ec4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ec8:	48 89 c7             	mov    %rax,%rdi
   18ecb:	e8 e0 b9 fe ff       	call   48b0 <_ZNSt9exceptionD2Ev@plt>
   18ed0:	90                   	nop
   18ed1:	c9                   	leave
   18ed2:	c3                   	ret
   18ed3:	90                   	nop

0000000000018ed4 <_ZNSt19bad_optional_accessD0Ev>:
   18ed4:	55                   	push   %rbp
   18ed5:	48 89 e5             	mov    %rsp,%rbp
   18ed8:	48 83 ec 10          	sub    $0x10,%rsp
   18edc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   18ee0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ee4:	48 89 c7             	mov    %rax,%rdi
   18ee7:	e8 be ff ff ff       	call   18eaa <_ZNSt19bad_optional_accessD1Ev>
   18eec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ef0:	be 08 00 00 00       	mov    $0x8,%esi
   18ef5:	48 89 c7             	mov    %rax,%rdi
   18ef8:	e8 43 b5 fe ff       	call   4440 <_ZdlPvm@plt>
   18efd:	c9                   	leave
   18efe:	c3                   	ret

0000000000018eff <_Z41__static_initialization_and_destruction_0ii>:
  std::mt19937 gen(rd());
  std::uniform_real_distribution<> dis(min, max);
  while (it_begin != it_end)
    *(it_begin++) = dis(gen);
}
} // namespace rtvc
   18eff:	55                   	push   %rbp
   18f00:	48 89 e5             	mov    %rsp,%rbp
   18f03:	48 83 ec 10          	sub    $0x10,%rsp
   18f07:	89 7d fc             	mov    %edi,-0x4(%rbp)
   18f0a:	89 75 f8             	mov    %esi,-0x8(%rbp)
   18f0d:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
   18f11:	75 3b                	jne    18f4e <_Z41__static_initialization_and_destruction_0ii+0x4f>
   18f13:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
   18f1a:	75 32                	jne    18f4e <_Z41__static_initialization_and_destruction_0ii+0x4f>
   18f1c:	48 8d 05 26 18 01 00 	lea    0x11826(%rip),%rax        # 2a749 <_ZStL8__ioinit>
   18f23:	48 89 c7             	mov    %rax,%rdi
   18f26:	e8 25 b8 fe ff       	call   4750 <_ZNSt8ios_base4InitC1Ev@plt>
   18f2b:	48 8d 05 3e 15 01 00 	lea    0x1153e(%rip),%rax        # 2a470 <__dso_handle>
   18f32:	48 89 c2             	mov    %rax,%rdx
   18f35:	48 8d 05 0d 18 01 00 	lea    0x1180d(%rip),%rax        # 2a749 <_ZStL8__ioinit>
   18f3c:	48 89 c6             	mov    %rax,%rsi
   18f3f:	48 8b 05 82 10 01 00 	mov    0x11082(%rip),%rax        # 29fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
   18f46:	48 89 c7             	mov    %rax,%rdi
   18f49:	e8 32 b4 fe ff       	call   4380 <__cxa_atexit@plt>
   18f4e:	90                   	nop
   18f4f:	c9                   	leave
   18f50:	c3                   	ret

0000000000018f51 <_GLOBAL__sub_I_Utility.cpp>:
   18f51:	55                   	push   %rbp
   18f52:	48 89 e5             	mov    %rsp,%rbp
   18f55:	be ff ff 00 00       	mov    $0xffff,%esi
   18f5a:	bf 01 00 00 00       	mov    $0x1,%edi
   18f5f:	e8 9b ff ff ff       	call   18eff <_Z41__static_initialization_and_destruction_0ii>
   18f64:	5d                   	pop    %rbp
   18f65:	c3                   	ret

0000000000018f66 <_ZN4rtvc6Vertex21getBindingDescriptionEv>:
#include "Vertex.hpp"

namespace rtvc {
VkVertexInputBindingDescription Vertex::getBindingDescription() {
   18f66:	55                   	push   %rbp
   18f67:	48 89 e5             	mov    %rsp,%rbp
  VkVertexInputBindingDescription bindingDescription{};
   18f6a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   18f71:	00 
   18f72:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)

  bindingDescription.binding = 0;
   18f79:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  bindingDescription.stride = sizeof(Vertex);
   18f80:	c7 45 ec 14 00 00 00 	movl   $0x14,-0x14(%rbp)
  bindingDescription.inputRate = VK_VERTEX_INPUT_RATE_VERTEX;
   18f87:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)

  return bindingDescription;
   18f8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   18f92:	48 89 45 f4          	mov    %rax,-0xc(%rbp)
   18f96:	8b 45 f0             	mov    -0x10(%rbp),%eax
   18f99:	89 45 fc             	mov    %eax,-0x4(%rbp)
   18f9c:	48 8b 45 f4          	mov    -0xc(%rbp),%rax
   18fa0:	8b 4d fc             	mov    -0x4(%rbp),%ecx
   18fa3:	48 89 ca             	mov    %rcx,%rdx
}
   18fa6:	5d                   	pop    %rbp
   18fa7:	c3                   	ret

0000000000018fa8 <_ZN4rtvc6Vertex24getAttributeDescriptionsEv>:

std::array<VkVertexInputAttributeDescription, 2>
Vertex::getAttributeDescriptions() {
   18fa8:	55                   	push   %rbp
   18fa9:	48 89 e5             	mov    %rsp,%rbp
   18fac:	48 83 ec 10          	sub    $0x10,%rsp
   18fb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  std::array<VkVertexInputAttributeDescription, 2> attributeDescriptions{};
   18fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fb8:	66 0f ef c0          	pxor   %xmm0,%xmm0
   18fbc:	0f 11 00             	movups %xmm0,(%rax)
   18fbf:	0f 11 40 10          	movups %xmm0,0x10(%rax)

  attributeDescriptions[0].binding = 0;
   18fc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fc7:	be 00 00 00 00       	mov    $0x0,%esi
   18fcc:	48 89 c7             	mov    %rax,%rdi
   18fcf:	e8 b4 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   18fd4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  attributeDescriptions[0].location = 0;
   18fdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18fdf:	be 00 00 00 00       	mov    $0x0,%esi
   18fe4:	48 89 c7             	mov    %rax,%rdi
   18fe7:	e8 9c 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   18fec:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
  attributeDescriptions[0].format = VK_FORMAT_R32G32_SFLOAT;
   18ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   18ff6:	be 00 00 00 00       	mov    $0x0,%esi
   18ffb:	48 89 c7             	mov    %rax,%rdi
   18ffe:	e8 85 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   19003:	c7 40 08 67 00 00 00 	movl   $0x67,0x8(%rax)
  attributeDescriptions[0].offset = offsetof(Vertex, pos);
   1900a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1900e:	be 00 00 00 00       	mov    $0x0,%esi
   19013:	48 89 c7             	mov    %rax,%rdi
   19016:	e8 6d 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1901b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)

  attributeDescriptions[1].binding = 0;
   19022:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19026:	be 01 00 00 00       	mov    $0x1,%esi
   1902b:	48 89 c7             	mov    %rax,%rdi
   1902e:	e8 55 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   19033:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
  attributeDescriptions[1].location = 1;
   1903a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1903e:	be 01 00 00 00       	mov    $0x1,%esi
   19043:	48 89 c7             	mov    %rax,%rdi
   19046:	e8 3d 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1904b:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
  attributeDescriptions[1].format = VK_FORMAT_R32G32B32_SFLOAT;
   19051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19055:	be 01 00 00 00       	mov    $0x1,%esi
   1905a:	48 89 c7             	mov    %rax,%rdi
   1905d:	e8 26 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   19062:	c7 40 08 6a 00 00 00 	movl   $0x6a,0x8(%rax)
  attributeDescriptions[1].offset = offsetof(Vertex, color);
   19069:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1906d:	be 01 00 00 00       	mov    $0x1,%esi
   19072:	48 89 c7             	mov    %rax,%rdi
   19075:	e8 0e 00 00 00       	call   19088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>
   1907a:	c7 40 0c 08 00 00 00 	movl   $0x8,0xc(%rax)

  return attributeDescriptions;
   19081:	90                   	nop
}
   19082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   19086:	c9                   	leave
   19087:	c3                   	ret

0000000000019088 <_ZNSt5arrayI33VkVertexInputAttributeDescriptionLm2EEixEm>:
      operator[](size_type __n) noexcept
   19088:	55                   	push   %rbp
   19089:	48 89 e5             	mov    %rsp,%rbp
   1908c:	48 83 ec 10          	sub    $0x10,%rsp
   19090:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   19094:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return _AT_Type::_S_ref(_M_elems, __n);
   19098:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1909c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   190a0:	48 89 d6             	mov    %rdx,%rsi
   190a3:	48 89 c7             	mov    %rax,%rdi
   190a6:	e8 02 00 00 00       	call   190ad <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>
      }
   190ab:	c9                   	leave
   190ac:	c3                   	ret

00000000000190ad <_ZNSt14__array_traitsI33VkVertexInputAttributeDescriptionLm2EE6_S_refERA2_KS0_m>:
      _S_ref(const _Type& __t, std::size_t __n) noexcept
   190ad:	55                   	push   %rbp
   190ae:	48 89 e5             	mov    %rsp,%rbp
   190b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   190b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return const_cast<_Tp&>(__t[__n]); }
   190b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   190bd:	48 c1 e0 04          	shl    $0x4,%rax
   190c1:	48 89 c2             	mov    %rax,%rdx
   190c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   190c8:	48 01 d0             	add    %rdx,%rax
   190cb:	5d                   	pop    %rbp
   190cc:	c3                   	ret

Disassembly of section .fini:

00000000000190d0 <_fini>:
   190d0:	48 83 ec 08          	sub    $0x8,%rsp
   190d4:	48 83 c4 08          	add    $0x8,%rsp
   190d8:	c3                   	ret
