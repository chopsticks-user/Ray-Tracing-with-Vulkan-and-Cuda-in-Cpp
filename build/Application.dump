
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 1f 02 00 	mov    0x21fad(%rip),%rax        # 25fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 1f 02 00    	push   0x21fca(%rip)        # 25ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 1f 02 00    	jmp    *0x21fcc(%rip)        # 25ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 1f 02 00    	jmp    *0x21fca(%rip)        # 26000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 1f 02 00    	jmp    *0x21fc2(%rip)        # 26008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 1f 02 00    	jmp    *0x21fba(%rip)        # 26010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 1f 02 00    	jmp    *0x21fb2(%rip)        # 26018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 1f 02 00    	jmp    *0x21faa(%rip)        # 26020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 1f 02 00    	jmp    *0x21fa2(%rip)        # 26028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 1f 02 00    	jmp    *0x21f9a(%rip)        # 26030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 1f 02 00    	jmp    *0x21f92(%rip)        # 26038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 1f 02 00    	jmp    *0x21f8a(%rip)        # 26040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 1f 02 00    	jmp    *0x21f82(%rip)        # 26048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a 1f 02 00    	jmp    *0x21f7a(%rip)        # 26050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 1f 02 00    	jmp    *0x21f72(%rip)        # 26058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a 1f 02 00    	jmp    *0x21f6a(%rip)        # 26060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 1f 02 00    	jmp    *0x21f62(%rip)        # 26068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 1f 02 00    	jmp    *0x21f5a(%rip)        # 26070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 1f 02 00    	jmp    *0x21f52(%rip)        # 26078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a 1f 02 00    	jmp    *0x21f4a(%rip)        # 26080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 1f 02 00    	jmp    *0x21f42(%rip)        # 26088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a 1f 02 00    	jmp    *0x21f3a(%rip)        # 26090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <__cxa_allocate_exception@plt>:
    4160:	ff 25 32 1f 02 00    	jmp    *0x21f32(%rip)        # 26098 <__cxa_allocate_exception@CXXABI_1.3>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <_ZSt20__throw_length_errorPKc@plt>:
    4170:	ff 25 2a 1f 02 00    	jmp    *0x21f2a(%rip)        # 260a0 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <vkEnumeratePhysicalDevices@plt>:
    4180:	ff 25 22 1f 02 00    	jmp    *0x21f22(%rip)        # 260a8 <vkEnumeratePhysicalDevices@Base>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <memset@plt>:
    4190:	ff 25 1a 1f 02 00    	jmp    *0x21f1a(%rip)        # 260b0 <memset@GLIBC_2.2.5>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <_ZNSaIcEC1ERKS_@plt>:
    41a0:	ff 25 12 1f 02 00    	jmp    *0x21f12(%rip)        # 260b8 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <vkGetSwapchainImagesKHR@plt>:
    41b0:	ff 25 0a 1f 02 00    	jmp    *0x21f0a(%rip)        # 260c0 <vkGetSwapchainImagesKHR@Base>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41c0:	ff 25 02 1f 02 00    	jmp    *0x21f02(%rip)        # 260c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41d0:	ff 25 fa 1e 02 00    	jmp    *0x21efa(%rip)        # 260d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <vkCreateRenderPass@plt>:
    41e0:	ff 25 f2 1e 02 00    	jmp    *0x21ef2(%rip)        # 260d8 <vkCreateRenderPass@Base>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    41f0:	ff 25 ea 1e 02 00    	jmp    *0x21eea(%rip)        # 260e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4200:	ff 25 e2 1e 02 00    	jmp    *0x21ee2(%rip)        # 260e8 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4210:	ff 25 da 1e 02 00    	jmp    *0x21eda(%rip)        # 260f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZSt19__throw_logic_errorPKc@plt>:
    4220:	ff 25 d2 1e 02 00    	jmp    *0x21ed2(%rip)        # 260f8 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <__cxa_free_exception@plt>:
    4230:	ff 25 ca 1e 02 00    	jmp    *0x21eca(%rip)        # 26100 <__cxa_free_exception@CXXABI_1.3>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4240:	ff 25 c2 1e 02 00    	jmp    *0x21ec2(%rip)        # 26108 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <glfwGetRequiredInstanceExtensions@plt>:
    4250:	ff 25 ba 1e 02 00    	jmp    *0x21eba(%rip)        # 26110 <glfwGetRequiredInstanceExtensions@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4260:	ff 25 b2 1e 02 00    	jmp    *0x21eb2(%rip)        # 26118 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <vkCreateShaderModule@plt>:
    4270:	ff 25 aa 1e 02 00    	jmp    *0x21eaa(%rip)        # 26120 <vkCreateShaderModule@Base>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4280:	ff 25 a2 1e 02 00    	jmp    *0x21ea2(%rip)        # 26128 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <vkDestroyDevice@plt>:
    4290:	ff 25 9a 1e 02 00    	jmp    *0x21e9a(%rip)        # 26130 <vkDestroyDevice@Base>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkCreatePipelineLayout@plt>:
    42a0:	ff 25 92 1e 02 00    	jmp    *0x21e92(%rip)        # 26138 <vkCreatePipelineLayout@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkEnumerateInstanceExtensionProperties@plt>:
    42b0:	ff 25 8a 1e 02 00    	jmp    *0x21e8a(%rip)        # 26140 <vkEnumerateInstanceExtensionProperties@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42c0:	ff 25 82 1e 02 00    	jmp    *0x21e82(%rip)        # 26148 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <glfwWindowHint@plt>:
    42d0:	ff 25 7a 1e 02 00    	jmp    *0x21e7a(%rip)        # 26150 <glfwWindowHint@Base>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42e0:	ff 25 72 1e 02 00    	jmp    *0x21e72(%rip)        # 26158 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <__cxa_atexit@plt>:
    42f0:	ff 25 6a 1e 02 00    	jmp    *0x21e6a(%rip)        # 26160 <__cxa_atexit@GLIBC_2.2.5>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4300:	ff 25 62 1e 02 00    	jmp    *0x21e62(%rip)        # 26168 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <vkAllocateCommandBuffers@plt>:
    4310:	ff 25 5a 1e 02 00    	jmp    *0x21e5a(%rip)        # 26170 <vkAllocateCommandBuffers@Base>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkGetPhysicalDeviceProperties2@plt>:
    4320:	ff 25 52 1e 02 00    	jmp    *0x21e52(%rip)        # 26178 <vkGetPhysicalDeviceProperties2@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetInstanceProcAddr@plt>:
    4330:	ff 25 4a 1e 02 00    	jmp    *0x21e4a(%rip)        # 26180 <vkGetInstanceProcAddr@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <glfwPollEvents@plt>:
    4340:	ff 25 42 1e 02 00    	jmp    *0x21e42(%rip)        # 26188 <glfwPollEvents@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4350:	ff 25 3a 1e 02 00    	jmp    *0x21e3a(%rip)        # 26190 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <_Znwm@plt>:
    4360:	ff 25 32 1e 02 00    	jmp    *0x21e32(%rip)        # 26198 <_Znwm@GLIBCXX_3.4>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_ZdlPvm@plt>:
    4370:	ff 25 2a 1e 02 00    	jmp    *0x21e2a(%rip)        # 261a0 <_ZdlPvm@CXXABI_1.3.9>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <vkDestroyInstance@plt>:
    4380:	ff 25 22 1e 02 00    	jmp    *0x21e22(%rip)        # 261a8 <vkDestroyInstance@Base>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <glfwTerminate@plt>:
    4390:	ff 25 1a 1e 02 00    	jmp    *0x21e1a(%rip)        # 261b0 <glfwTerminate@Base>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkCreateImageView@plt>:
    43a0:	ff 25 12 1e 02 00    	jmp    *0x21e12(%rip)        # 261b8 <vkCreateImageView@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    43b0:	ff 25 0a 1e 02 00    	jmp    *0x21e0a(%rip)        # 261c0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <_ZNSolsEPFRSoS_E@plt>:
    43c0:	ff 25 02 1e 02 00    	jmp    *0x21e02(%rip)        # 261c8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43d0:	ff 25 fa 1d 02 00    	jmp    *0x21dfa(%rip)        # 261d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    43e0:	ff 25 f2 1d 02 00    	jmp    *0x21df2(%rip)        # 261d8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    43f0:	ff 25 ea 1d 02 00    	jmp    *0x21dea(%rip)        # 261e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <_ZNSaIcED1Ev@plt>:
    4400:	ff 25 e2 1d 02 00    	jmp    *0x21de2(%rip)        # 261e8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <vkDestroyPipeline@plt>:
    4410:	ff 25 da 1d 02 00    	jmp    *0x21dda(%rip)        # 261f0 <vkDestroyPipeline@Base>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4420:	ff 25 d2 1d 02 00    	jmp    *0x21dd2(%rip)        # 261f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4430:	ff 25 ca 1d 02 00    	jmp    *0x21dca(%rip)        # 26200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <vkEnumerateInstanceLayerProperties@plt>:
    4440:	ff 25 c2 1d 02 00    	jmp    *0x21dc2(%rip)        # 26208 <vkEnumerateInstanceLayerProperties@Base>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <glfwInit@plt>:
    4450:	ff 25 ba 1d 02 00    	jmp    *0x21dba(%rip)        # 26210 <glfwInit@Base>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4460:	ff 25 b2 1d 02 00    	jmp    *0x21db2(%rip)        # 26218 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <vkCreateSwapchainKHR@plt>:
    4470:	ff 25 aa 1d 02 00    	jmp    *0x21daa(%rip)        # 26220 <vkCreateSwapchainKHR@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    4480:	ff 25 a2 1d 02 00    	jmp    *0x21da2(%rip)        # 26228 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkDestroyShaderModule@plt>:
    4490:	ff 25 9a 1d 02 00    	jmp    *0x21d9a(%rip)        # 26230 <vkDestroyShaderModule@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <vkCreateInstance@plt>:
    44a0:	ff 25 92 1d 02 00    	jmp    *0x21d92(%rip)        # 26238 <vkCreateInstance@Base>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    44b0:	ff 25 8a 1d 02 00    	jmp    *0x21d8a(%rip)        # 26240 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkDestroyPipelineLayout@plt>:
    44c0:	ff 25 82 1d 02 00    	jmp    *0x21d82(%rip)        # 26248 <vkDestroyPipelineLayout@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSi4readEPcl@plt>:
    44d0:	ff 25 7a 1d 02 00    	jmp    *0x21d7a(%rip)        # 26250 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    44e0:	ff 25 72 1d 02 00    	jmp    *0x21d72(%rip)        # 26258 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    44f0:	ff 25 6a 1d 02 00    	jmp    *0x21d6a(%rip)        # 26260 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4500:	ff 25 62 1d 02 00    	jmp    *0x21d62(%rip)        # 26268 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4510:	ff 25 5a 1d 02 00    	jmp    *0x21d5a(%rip)        # 26270 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkGetDeviceQueue@plt>:
    4520:	ff 25 52 1d 02 00    	jmp    *0x21d52(%rip)        # 26278 <vkGetDeviceQueue@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSolsEj@plt>:
    4530:	ff 25 4a 1d 02 00    	jmp    *0x21d4a(%rip)        # 26280 <_ZNSolsEj@GLIBCXX_3.4>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4540:	ff 25 42 1d 02 00    	jmp    *0x21d42(%rip)        # 26288 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4550:	ff 25 3a 1d 02 00    	jmp    *0x21d3a(%rip)        # 26290 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <vkEnumerateDeviceExtensionProperties@plt>:
    4560:	ff 25 32 1d 02 00    	jmp    *0x21d32(%rip)        # 26298 <vkEnumerateDeviceExtensionProperties@Base>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4570:	ff 25 2a 1d 02 00    	jmp    *0x21d2a(%rip)        # 262a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkDestroyCommandPool@plt>:
    4580:	ff 25 22 1d 02 00    	jmp    *0x21d22(%rip)        # 262a8 <vkDestroyCommandPool@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <_ZNSaIcEC2ERKS_@plt>:
    4590:	ff 25 1a 1d 02 00    	jmp    *0x21d1a(%rip)        # 262b0 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <__cxa_rethrow@plt>:
    45a0:	ff 25 12 1d 02 00    	jmp    *0x21d12(%rip)        # 262b8 <__cxa_rethrow@CXXABI_1.3>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <vkCreateDevice@plt>:
    45b0:	ff 25 0a 1d 02 00    	jmp    *0x21d0a(%rip)        # 262c0 <vkCreateDevice@Base>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <_ZNSt8ios_base4InitC1Ev@plt>:
    45c0:	ff 25 02 1d 02 00    	jmp    *0x21d02(%rip)        # 262c8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <glfwCreateWindowSurface@plt>:
    45d0:	ff 25 fa 1c 02 00    	jmp    *0x21cfa(%rip)        # 262d0 <glfwCreateWindowSurface@Base>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <glfwCreateWindow@plt>:
    45e0:	ff 25 f2 1c 02 00    	jmp    *0x21cf2(%rip)        # 262d8 <glfwCreateWindow@Base>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    45f0:	ff 25 ea 1c 02 00    	jmp    *0x21cea(%rip)        # 262e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4600:	ff 25 e2 1c 02 00    	jmp    *0x21ce2(%rip)        # 262e8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4610:	ff 25 da 1c 02 00    	jmp    *0x21cda(%rip)        # 262f0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4620:	ff 25 d2 1c 02 00    	jmp    *0x21cd2(%rip)        # 262f8 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <memmove@plt>:
    4630:	ff 25 ca 1c 02 00    	jmp    *0x21cca(%rip)        # 26300 <memmove@GLIBC_2.2.5>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <__cxa_end_catch@plt>:
    4640:	ff 25 c2 1c 02 00    	jmp    *0x21cc2(%rip)        # 26308 <__cxa_end_catch@CXXABI_1.3>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <__cxa_throw@plt>:
    4650:	ff 25 ba 1c 02 00    	jmp    *0x21cba(%rip)        # 26310 <__cxa_throw@CXXABI_1.3>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4660:	ff 25 b2 1c 02 00    	jmp    *0x21cb2(%rip)        # 26318 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4670:	ff 25 aa 1c 02 00    	jmp    *0x21caa(%rip)        # 26320 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_ZNSolsEi@plt>:
    4680:	ff 25 a2 1c 02 00    	jmp    *0x21ca2(%rip)        # 26328 <_ZNSolsEi@GLIBCXX_3.4>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSi5tellgEv@plt>:
    4690:	ff 25 9a 1c 02 00    	jmp    *0x21c9a(%rip)        # 26330 <_ZNSi5tellgEv@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <vkDestroySurfaceKHR@plt>:
    46a0:	ff 25 92 1c 02 00    	jmp    *0x21c92(%rip)        # 26338 <vkDestroySurfaceKHR@Base>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_Unwind_Resume@plt>:
    46b0:	ff 25 8a 1c 02 00    	jmp    *0x21c8a(%rip)        # 26340 <_Unwind_Resume@GCC_3.0>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <_ZNSaIcEC1Ev@plt>:
    46c0:	ff 25 82 1c 02 00    	jmp    *0x21c82(%rip)        # 26348 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <vkDestroyImageView@plt>:
    46d0:	ff 25 7a 1c 02 00    	jmp    *0x21c7a(%rip)        # 26350 <vkDestroyImageView@Base>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    46e0:	ff 25 72 1c 02 00    	jmp    *0x21c72(%rip)        # 26358 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <_ZNSt9exceptionD2Ev@plt>:
    46f0:	ff 25 6a 1c 02 00    	jmp    *0x21c6a(%rip)        # 26360 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <glfwWindowShouldClose@plt>:
    4700:	ff 25 62 1c 02 00    	jmp    *0x21c62(%rip)        # 26368 <glfwWindowShouldClose@Base>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <_ZNSolsEd@plt>:
    4710:	ff 25 5a 1c 02 00    	jmp    *0x21c5a(%rip)        # 26370 <_ZNSolsEd@GLIBCXX_3.4>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4720:	ff 25 52 1c 02 00    	jmp    *0x21c52(%rip)        # 26378 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4730:	ff 25 4a 1c 02 00    	jmp    *0x21c4a(%rip)        # 26380 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004740 <__cxa_finalize@plt>:
    4740:	ff 25 4a 18 02 00    	jmp    *0x2184a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4746:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004750 <_start>:
    4750:	31 ed                	xor    %ebp,%ebp
    4752:	49 89 d1             	mov    %rdx,%r9
    4755:	5e                   	pop    %rsi
    4756:	48 89 e2             	mov    %rsp,%rdx
    4759:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    475d:	50                   	push   %rax
    475e:	54                   	push   %rsp
    475f:	45 31 c0             	xor    %r8d,%r8d
    4762:	31 c9                	xor    %ecx,%ecx
    4764:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4914 <main>
    476b:	ff 15 2f 18 02 00    	call   *0x2182f(%rip)        # 25fa0 <__libc_start_main@GLIBC_2.34>
    4771:	f4                   	hlt
    4772:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4779:	00 00 00 
    477c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004780 <deregister_tm_clones>:
    4780:	48 8d 3d 21 1c 02 00 	lea    0x21c21(%rip),%rdi        # 263a8 <__TMC_END__>
    4787:	48 8d 05 1a 1c 02 00 	lea    0x21c1a(%rip),%rax        # 263a8 <__TMC_END__>
    478e:	48 39 f8             	cmp    %rdi,%rax
    4791:	74 15                	je     47a8 <deregister_tm_clones+0x28>
    4793:	48 8b 05 16 18 02 00 	mov    0x21816(%rip),%rax        # 25fb0 <_ITM_deregisterTMCloneTable@Base>
    479a:	48 85 c0             	test   %rax,%rax
    479d:	74 09                	je     47a8 <deregister_tm_clones+0x28>
    479f:	ff e0                	jmp    *%rax
    47a1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47a8:	c3                   	ret
    47a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047b0 <register_tm_clones>:
    47b0:	48 8d 3d f1 1b 02 00 	lea    0x21bf1(%rip),%rdi        # 263a8 <__TMC_END__>
    47b7:	48 8d 35 ea 1b 02 00 	lea    0x21bea(%rip),%rsi        # 263a8 <__TMC_END__>
    47be:	48 29 fe             	sub    %rdi,%rsi
    47c1:	48 89 f0             	mov    %rsi,%rax
    47c4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    47c8:	48 c1 f8 03          	sar    $0x3,%rax
    47cc:	48 01 c6             	add    %rax,%rsi
    47cf:	48 d1 fe             	sar    %rsi
    47d2:	74 14                	je     47e8 <register_tm_clones+0x38>
    47d4:	48 8b 05 e5 17 02 00 	mov    0x217e5(%rip),%rax        # 25fc0 <_ITM_registerTMCloneTable@Base>
    47db:	48 85 c0             	test   %rax,%rax
    47de:	74 08                	je     47e8 <register_tm_clones+0x38>
    47e0:	ff e0                	jmp    *%rax
    47e2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    47e8:	c3                   	ret
    47e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047f0 <__do_global_dtors_aux>:
    47f0:	f3 0f 1e fa          	endbr64
    47f4:	80 3d f5 1d 02 00 00 	cmpb   $0x0,0x21df5(%rip)        # 265f0 <completed.0>
    47fb:	75 2b                	jne    4828 <__do_global_dtors_aux+0x38>
    47fd:	55                   	push   %rbp
    47fe:	48 83 3d 8a 17 02 00 	cmpq   $0x0,0x2178a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4805:	00 
    4806:	48 89 e5             	mov    %rsp,%rbp
    4809:	74 0c                	je     4817 <__do_global_dtors_aux+0x27>
    480b:	48 8b 3d 7e 1b 02 00 	mov    0x21b7e(%rip),%rdi        # 26390 <__dso_handle>
    4812:	e8 29 ff ff ff       	call   4740 <__cxa_finalize@plt>
    4817:	e8 64 ff ff ff       	call   4780 <deregister_tm_clones>
    481c:	c6 05 cd 1d 02 00 01 	movb   $0x1,0x21dcd(%rip)        # 265f0 <completed.0>
    4823:	5d                   	pop    %rbp
    4824:	c3                   	ret
    4825:	0f 1f 00             	nopl   (%rax)
    4828:	c3                   	ret
    4829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004830 <frame_dummy>:
    4830:	f3 0f 1e fa          	endbr64
    4834:	e9 77 ff ff ff       	jmp    47b0 <register_tm_clones>

0000000000004839 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4839:	55                   	push   %rbp
    483a:	48 89 e5             	mov    %rsp,%rbp
    483d:	53                   	push   %rbx
    483e:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  VulkanApp app;
    4845:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    484c:	48 89 c7             	mov    %rax,%rdi
    484f:	e8 7e a1 00 00       	call   e9d2 <_ZN9VulkanAppC1Ev>
  app.run();
    4854:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    485b:	48 89 c7             	mov    %rax,%rdi
    485e:	e8 c7 a5 00 00       	call   ee2a <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4863:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4867:	48 89 c7             	mov    %rax,%rdi
    486a:	e8 51 fe ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    486f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4873:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4877:	48 8d 0d 66 1d 01 00 	lea    0x11d66(%rip),%rcx        # 165e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    487e:	48 89 ce             	mov    %rcx,%rsi
    4881:	48 89 c7             	mov    %rax,%rdi
    4884:	e8 77 02 00 00       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    4889:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    488d:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    4894:	48 89 d6             	mov    %rdx,%rsi
    4897:	48 89 c7             	mov    %rax,%rdi
    489a:	e8 cf a6 00 00       	call   ef6e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    489f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48a3:	48 89 c7             	mov    %rax,%rdi
    48a6:	e8 25 f9 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48ab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48af:	48 89 c7             	mov    %rax,%rdi
    48b2:	e8 49 fb ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    48b7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    48bc:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48c3:	48 89 c7             	mov    %rax,%rdi
    48c6:	e8 81 a3 00 00       	call   ec4c <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    48cb:	89 d8                	mov    %ebx,%eax
    48cd:	eb 3f                	jmp    490e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    48cf:	48 89 c3             	mov    %rax,%rbx
    48d2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48d6:	48 89 c7             	mov    %rax,%rdi
    48d9:	e8 f2 f8 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48de:	eb 03                	jmp    48e3 <_Z14protected_mainv+0xaa>
    48e0:	48 89 c3             	mov    %rax,%rbx
    48e3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48e7:	48 89 c7             	mov    %rax,%rdi
    48ea:	e8 11 fb ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    48ef:	eb 03                	jmp    48f4 <_Z14protected_mainv+0xbb>
}
    48f1:	48 89 c3             	mov    %rax,%rbx
    48f4:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48fb:	48 89 c7             	mov    %rax,%rdi
    48fe:	e8 49 a3 00 00       	call   ec4c <_ZN9VulkanAppD1Ev>
    4903:	48 89 d8             	mov    %rbx,%rax
    4906:	48 89 c7             	mov    %rax,%rdi
    4909:	e8 a2 fd ff ff       	call   46b0 <_Unwind_Resume@plt>
    490e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4912:	c9                   	leave
    4913:	c3                   	ret

0000000000004914 <main>:

int main() {
    4914:	55                   	push   %rbp
    4915:	48 89 e5             	mov    %rsp,%rbp
    4918:	53                   	push   %rbx
    4919:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    491d:	e8 17 ff ff ff       	call   4839 <_Z14protected_mainv>
    4922:	e9 aa 00 00 00       	jmp    49d1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4927:	b8 01 00 00 00       	mov    $0x1,%eax
    492c:	e9 a0 00 00 00       	jmp    49d1 <main+0xbd>
  } catch (const std::exception &e) {
    4931:	48 83 fa 01          	cmp    $0x1,%rdx
    4935:	75 49                	jne    4980 <main+0x6c>
    4937:	48 89 c7             	mov    %rax,%rdi
    493a:	e8 e1 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    493f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4943:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4947:	48 8b 00             	mov    (%rax),%rax
    494a:	48 83 c0 10          	add    $0x10,%rax
    494e:	48 8b 10             	mov    (%rax),%rdx
    4951:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4955:	48 89 c7             	mov    %rax,%rdi
    4958:	ff d2                	call   *%rdx
    495a:	48 89 c6             	mov    %rax,%rsi
    495d:	48 8d 05 7c 1b 02 00 	lea    0x21b7c(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    4964:	48 89 c7             	mov    %rax,%rdi
    4967:	e8 e4 f9 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    496c:	be 0a 00 00 00       	mov    $0xa,%esi
    4971:	48 89 c7             	mov    %rax,%rdi
    4974:	e8 e7 fa ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4979:	e8 c2 fc ff ff       	call   4640 <__cxa_end_catch@plt>
    497e:	eb a7                	jmp    4927 <main+0x13>
    4980:	48 89 c7             	mov    %rax,%rdi
    4983:	e8 98 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    4988:	48 8d 05 5e 1c 01 00 	lea    0x11c5e(%rip),%rax        # 165ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    498f:	48 89 c6             	mov    %rax,%rsi
    4992:	48 8d 05 47 1b 02 00 	lea    0x21b47(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    4999:	48 89 c7             	mov    %rax,%rdi
    499c:	e8 af f9 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    49a1:	e8 9a fc ff ff       	call   4640 <__cxa_end_catch@plt>
    49a6:	e9 7c ff ff ff       	jmp    4927 <main+0x13>
  } catch (...) {
    49ab:	48 89 c3             	mov    %rax,%rbx
    49ae:	e8 8d fc ff ff       	call   4640 <__cxa_end_catch@plt>
    49b3:	48 89 d8             	mov    %rbx,%rax
    49b6:	48 89 c7             	mov    %rax,%rdi
    49b9:	e8 f2 fc ff ff       	call   46b0 <_Unwind_Resume@plt>
  }
    49be:	48 89 c3             	mov    %rax,%rbx
    49c1:	e8 7a fc ff ff       	call   4640 <__cxa_end_catch@plt>
    49c6:	48 89 d8             	mov    %rbx,%rax
    49c9:	48 89 c7             	mov    %rax,%rdi
    49cc:	e8 df fc ff ff       	call   46b0 <_Unwind_Resume@plt>
    49d1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49d5:	c9                   	leave
    49d6:	c3                   	ret

00000000000049d7 <_Z41__static_initialization_and_destruction_0ii>:
    49d7:	55                   	push   %rbp
    49d8:	48 89 e5             	mov    %rsp,%rbp
    49db:	48 83 ec 10          	sub    $0x10,%rsp
    49df:	89 7d fc             	mov    %edi,-0x4(%rbp)
    49e2:	89 75 f8             	mov    %esi,-0x8(%rbp)
    49e5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    49e9:	75 3b                	jne    4a26 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    49eb:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    49f2:	75 32                	jne    4a26 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    49f4:	48 8d 05 f6 1b 02 00 	lea    0x21bf6(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    49fb:	48 89 c7             	mov    %rax,%rdi
    49fe:	e8 bd fb ff ff       	call   45c0 <_ZNSt8ios_base4InitC1Ev@plt>
    4a03:	48 8d 05 86 19 02 00 	lea    0x21986(%rip),%rax        # 26390 <__dso_handle>
    4a0a:	48 89 c2             	mov    %rax,%rdx
    4a0d:	48 8d 05 dd 1b 02 00 	lea    0x21bdd(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    4a14:	48 89 c6             	mov    %rax,%rsi
    4a17:	48 8b 05 aa 15 02 00 	mov    0x215aa(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4a1e:	48 89 c7             	mov    %rax,%rdi
    4a21:	e8 ca f8 ff ff       	call   42f0 <__cxa_atexit@plt>
    4a26:	90                   	nop
    4a27:	c9                   	leave
    4a28:	c3                   	ret

0000000000004a29 <_GLOBAL__sub_I__Z14protected_mainv>:
    4a29:	55                   	push   %rbp
    4a2a:	48 89 e5             	mov    %rsp,%rbp
    4a2d:	be ff ff 00 00       	mov    $0xffff,%esi
    4a32:	bf 01 00 00 00       	mov    $0x1,%edi
    4a37:	e8 9b ff ff ff       	call   49d7 <_Z41__static_initialization_and_destruction_0ii>
    4a3c:	5d                   	pop    %rbp
    4a3d:	c3                   	ret

0000000000004a3e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a3e:	55                   	push   %rbp
    4a3f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a42:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a47:	5d                   	pop    %rbp
    4a48:	c3                   	ret

0000000000004a49 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a49:	55                   	push   %rbp
    4a4a:	48 89 e5             	mov    %rsp,%rbp
    4a4d:	48 83 ec 10          	sub    $0x10,%rsp
    4a51:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a55:	e8 e4 ff ff ff       	call   4a3e <_ZSt23__is_constant_evaluatedv>
    4a5a:	84 c0                	test   %al,%al
    4a5c:	74 0e                	je     4a6c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a62:	48 89 c7             	mov    %rax,%rdi
    4a65:	e8 12 00 00 00       	call   4a7c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4a6a:	eb 0d                	jmp    4a79 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4a6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a70:	48 89 c7             	mov    %rax,%rdi
    4a73:	e8 c8 f6 ff ff       	call   4140 <strlen@plt>
    4a78:	90                   	nop
      }
    4a79:	c9                   	leave
    4a7a:	c3                   	ret
    4a7b:	90                   	nop

0000000000004a7c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4a7c:	55                   	push   %rbp
    4a7d:	48 89 e5             	mov    %rsp,%rbp
    4a80:	48 83 ec 20          	sub    $0x20,%rsp
    4a84:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4a88:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4a8f:	00 
      while (!eq(__p[__i], char_type()))
    4a90:	eb 05                	jmp    4a97 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4a92:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4a97:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4a9b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4a9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4aa3:	48 01 c2             	add    %rax,%rdx
    4aa6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4aaa:	48 89 c6             	mov    %rax,%rsi
    4aad:	48 89 d7             	mov    %rdx,%rdi
    4ab0:	e8 0d 00 00 00       	call   4ac2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4ab5:	83 f0 01             	xor    $0x1,%eax
    4ab8:	84 c0                	test   %al,%al
    4aba:	75 d6                	jne    4a92 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4abc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4ac0:	c9                   	leave
    4ac1:	c3                   	ret

0000000000004ac2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4ac2:	55                   	push   %rbp
    4ac3:	48 89 e5             	mov    %rsp,%rbp
    4ac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4aca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ad2:	0f b6 10             	movzbl (%rax),%edx
    4ad5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4ad9:	0f b6 00             	movzbl (%rax),%eax
    4adc:	38 c2                	cmp    %al,%dl
    4ade:	0f 94 c0             	sete   %al
    4ae1:	5d                   	pop    %rbp
    4ae2:	c3                   	ret
    4ae3:	90                   	nop

0000000000004ae4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4ae4:	55                   	push   %rbp
    4ae5:	48 89 e5             	mov    %rsp,%rbp
    4ae8:	48 83 ec 10          	sub    $0x10,%rsp
    4aec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4af0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4af4:	48 89 c7             	mov    %rax,%rdi
    4af7:	e8 64 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4afc:	90                   	nop
    4afd:	c9                   	leave
    4afe:	c3                   	ret
    4aff:	90                   	nop

0000000000004b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4b00:	55                   	push   %rbp
    4b01:	48 89 e5             	mov    %rsp,%rbp
    4b04:	53                   	push   %rbx
    4b05:	48 83 ec 38          	sub    $0x38,%rsp
    4b09:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b0d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b11:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4b15:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4b19:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b1d:	48 89 c7             	mov    %rax,%rdi
    4b20:	e8 5b f7 ff ff       	call   4280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4b25:	48 89 c1             	mov    %rax,%rcx
    4b28:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b2c:	48 89 c2             	mov    %rax,%rdx
    4b2f:	48 89 ce             	mov    %rcx,%rsi
    4b32:	48 89 df             	mov    %rbx,%rdi
    4b35:	e8 96 f8 ff ff       	call   43d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b3a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b3f:	75 0f                	jne    4b50 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b41:	48 8d 05 c0 1a 01 00 	lea    0x11ac0(%rip),%rax        # 16608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b48:	48 89 c7             	mov    %rax,%rdi
    4b4b:	e8 d0 f6 ff ff       	call   4220 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b54:	48 89 c7             	mov    %rax,%rdi
    4b57:	e8 ed fe ff ff       	call   4a49 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b5c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4b60:	48 01 d0             	add    %rdx,%rax
    4b63:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4b67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b6b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4b6f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b73:	48 89 ce             	mov    %rcx,%rsi
    4b76:	48 89 c7             	mov    %rax,%rdi
    4b79:	e8 66 00 00 00       	call   4be4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4b7e:	eb 1a                	jmp    4b9a <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4b80:	48 89 c3             	mov    %rax,%rbx
    4b83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b87:	48 89 c7             	mov    %rax,%rdi
    4b8a:	e8 55 ff ff ff       	call   4ae4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4b8f:	48 89 d8             	mov    %rbx,%rax
    4b92:	48 89 c7             	mov    %rax,%rdi
    4b95:	e8 16 fb ff ff       	call   46b0 <_Unwind_Resume@plt>
    4b9a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4b9e:	c9                   	leave
    4b9f:	c3                   	ret

0000000000004ba0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4ba0:	55                   	push   %rbp
    4ba1:	48 89 e5             	mov    %rsp,%rbp
    4ba4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ba8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bb0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bb4:	48 89 10             	mov    %rdx,(%rax)
    4bb7:	90                   	nop
    4bb8:	5d                   	pop    %rbp
    4bb9:	c3                   	ret

0000000000004bba <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4bba:	55                   	push   %rbp
    4bbb:	48 89 e5             	mov    %rsp,%rbp
    4bbe:	48 83 ec 10          	sub    $0x10,%rsp
    4bc2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bc6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bca:	48 8b 00             	mov    (%rax),%rax
    4bcd:	48 85 c0             	test   %rax,%rax
    4bd0:	74 0f                	je     4be1 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4bd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd6:	48 8b 00             	mov    (%rax),%rax
    4bd9:	48 89 c7             	mov    %rax,%rdi
    4bdc:	e8 cf f8 ff ff       	call   44b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4be1:	90                   	nop
    4be2:	c9                   	leave
    4be3:	c3                   	ret

0000000000004be4 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4be4:	55                   	push   %rbp
    4be5:	48 89 e5             	mov    %rsp,%rbp
    4be8:	48 83 ec 40          	sub    $0x40,%rsp
    4bec:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4bf0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4bf4:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4bf8:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4bfc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c00:	48 89 d6             	mov    %rdx,%rsi
    4c03:	48 89 c7             	mov    %rax,%rdi
    4c06:	e8 c0 00 00 00       	call   4ccb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4c0b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4c0f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c13:	48 83 f8 0f          	cmp    $0xf,%rax
    4c17:	76 3f                	jbe    4c58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4c19:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4c1d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c21:	ba 00 00 00 00       	mov    $0x0,%edx
    4c26:	48 89 ce             	mov    %rcx,%rsi
    4c29:	48 89 c7             	mov    %rax,%rdi
    4c2c:	e8 af fa ff ff       	call   46e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c31:	48 89 c2             	mov    %rax,%rdx
    4c34:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c38:	48 89 d6             	mov    %rdx,%rsi
    4c3b:	48 89 c7             	mov    %rax,%rdi
    4c3e:	e8 7d f6 ff ff       	call   42c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c47:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c4b:	48 89 d6             	mov    %rdx,%rsi
    4c4e:	48 89 c7             	mov    %rax,%rdi
    4c51:	e8 da fa ff ff       	call   4730 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c56:	eb 15                	jmp    4c6d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c5c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4c60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c64:	48 89 c7             	mov    %rax,%rdi
    4c67:	e8 14 f6 ff ff       	call   4280 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c6c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4c6d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c71:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c75:	48 89 d6             	mov    %rdx,%rsi
    4c78:	48 89 c7             	mov    %rax,%rdi
    4c7b:	e8 20 ff ff ff       	call   4ba0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4c80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c84:	48 89 c7             	mov    %rax,%rdi
    4c87:	e8 94 f7 ff ff       	call   4420 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4c8c:	48 89 c1             	mov    %rax,%rcx
    4c8f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c93:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c97:	48 89 c6             	mov    %rax,%rsi
    4c9a:	48 89 cf             	mov    %rcx,%rdi
    4c9d:	e8 8e f7 ff ff       	call   4430 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4ca2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4ca9:	00 

	_M_set_length(__dnew);
    4caa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cb2:	48 89 d6             	mov    %rdx,%rsi
    4cb5:	48 89 c7             	mov    %rax,%rdi
    4cb8:	e8 33 f5 ff ff       	call   41f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4cbd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4cc1:	48 89 c7             	mov    %rax,%rdi
    4cc4:	e8 f1 fe ff ff       	call   4bba <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4cc9:	c9                   	leave
    4cca:	c3                   	ret

0000000000004ccb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4ccb:	55                   	push   %rbp
    4ccc:	48 89 e5             	mov    %rsp,%rbp
    4ccf:	48 83 ec 10          	sub    $0x10,%rsp
    4cd3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cd7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4cdb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4cdf:	48 89 c7             	mov    %rax,%rdi
    4ce2:	e8 15 00 00 00       	call   4cfc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4ce7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ceb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cef:	48 89 d6             	mov    %rdx,%rsi
    4cf2:	48 89 c7             	mov    %rax,%rdi
    4cf5:	e8 0d 00 00 00       	call   4d07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4cfa:	c9                   	leave
    4cfb:	c3                   	ret

0000000000004cfc <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4cfc:	55                   	push   %rbp
    4cfd:	48 89 e5             	mov    %rsp,%rbp
    4d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4d04:	90                   	nop
    4d05:	5d                   	pop    %rbp
    4d06:	c3                   	ret

0000000000004d07 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4d07:	55                   	push   %rbp
    4d08:	48 89 e5             	mov    %rsp,%rbp
    4d0b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d0f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4d13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d17:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4d1b:	5d                   	pop    %rbp
    4d1c:	c3                   	ret

0000000000004d1d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4d1d:	55                   	push   %rbp
    4d1e:	48 89 e5             	mov    %rsp,%rbp
    4d21:	41 54                	push   %r12
    4d23:	53                   	push   %rbx
    4d24:	48 83 ec 30          	sub    $0x30,%rsp
    4d28:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d2c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d38:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d3b:	89 c3                	mov    %eax,%ebx
    4d3d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d41:	48 89 c7             	mov    %rax,%rdi
    4d44:	e8 13 01 00 00       	call   4e5c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d49:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d4d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d51:	48 89 de             	mov    %rbx,%rsi
    4d54:	48 89 c7             	mov    %rax,%rdi
    4d57:	e8 38 01 00 00       	call   4e94 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d5c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d60:	48 89 c7             	mov    %rax,%rdi
    4d63:	e8 10 01 00 00       	call   4e78 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4d68:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d6c:	48 89 c7             	mov    %rax,%rdi
    4d6f:	e8 da 01 00 00       	call   4f4e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4d74:	48 89 c2             	mov    %rax,%rdx
    4d77:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4d7b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d7f:	48 89 ce             	mov    %rcx,%rsi
    4d82:	48 89 c7             	mov    %rax,%rdi
    4d85:	e8 86 f5 ff ff       	call   4310 <vkAllocateCommandBuffers@plt>
    4d8a:	85 c0                	test   %eax,%eax
    4d8c:	0f 95 c0             	setne  %al
    4d8f:	84 c0                	test   %al,%al
    4d91:	74 7f                	je     4e12 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4d93:	bf 10 00 00 00       	mov    $0x10,%edi
    4d98:	e8 c3 f3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    4d9d:	48 89 c3             	mov    %rax,%rbx
    4da0:	48 8d 05 71 1e 01 00 	lea    0x11e71(%rip),%rax        # 16c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4da7:	48 89 c6             	mov    %rax,%rsi
    4daa:	48 89 df             	mov    %rbx,%rdi
    4dad:	e8 4e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4db2:	48 8b 05 ef 11 02 00 	mov    0x211ef(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4db9:	48 89 c2             	mov    %rax,%rdx
    4dbc:	48 8d 05 7d 0f 02 00 	lea    0x20f7d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4dc3:	48 89 c6             	mov    %rax,%rsi
    4dc6:	48 89 df             	mov    %rbx,%rdi
    4dc9:	e8 82 f8 ff ff       	call   4650 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4dce:	48 89 c3             	mov    %rax,%rbx
    4dd1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4dd5:	48 89 c7             	mov    %rax,%rdi
    4dd8:	e8 9b 00 00 00       	call   4e78 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4ddd:	48 89 d8             	mov    %rbx,%rax
    4de0:	48 89 c7             	mov    %rax,%rdi
    4de3:	e8 c8 f8 ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4de8:	49 89 c4             	mov    %rax,%r12
    4deb:	48 89 df             	mov    %rbx,%rdi
    4dee:	e8 3d f4 ff ff       	call   4230 <__cxa_free_exception@plt>
    4df3:	4c 89 e3             	mov    %r12,%rbx
    4df6:	eb 03                	jmp    4dfb <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4df8:	48 89 c3             	mov    %rax,%rbx
    4dfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4dff:	48 89 c7             	mov    %rax,%rdi
    4e02:	e8 03 01 00 00       	call   4f0a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4e07:	48 89 d8             	mov    %rbx,%rax
    4e0a:	48 89 c7             	mov    %rax,%rdi
    4e0d:	e8 9e f8 ff ff       	call   46b0 <_Unwind_Resume@plt>
  return commandBuffers;
    4e12:	90                   	nop
}
    4e13:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e17:	48 83 c4 30          	add    $0x30,%rsp
    4e1b:	5b                   	pop    %rbx
    4e1c:	41 5c                	pop    %r12
    4e1e:	5d                   	pop    %rbp
    4e1f:	c3                   	ret

0000000000004e20 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e20:	55                   	push   %rbp
    4e21:	48 89 e5             	mov    %rsp,%rbp
    4e24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e30:	5d                   	pop    %rbp
    4e31:	c3                   	ret

0000000000004e32 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e32:	55                   	push   %rbp
    4e33:	48 89 e5             	mov    %rsp,%rbp
    4e36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e3e:	5d                   	pop    %rbp
    4e3f:	c3                   	ret

0000000000004e40 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e40:	55                   	push   %rbp
    4e41:	48 89 e5             	mov    %rsp,%rbp
    4e44:	48 83 ec 10          	sub    $0x10,%rsp
    4e48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e50:	48 89 c7             	mov    %rax,%rdi
    4e53:	e8 20 00 00 00       	call   4e78 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e58:	90                   	nop
    4e59:	c9                   	leave
    4e5a:	c3                   	ret
    4e5b:	90                   	nop

0000000000004e5c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e5c:	55                   	push   %rbp
    4e5d:	48 89 e5             	mov    %rsp,%rbp
    4e60:	48 83 ec 10          	sub    $0x10,%rsp
    4e64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e6c:	48 89 c7             	mov    %rax,%rdi
    4e6f:	e8 4c 01 00 00       	call   4fc0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4e74:	90                   	nop
    4e75:	c9                   	leave
    4e76:	c3                   	ret
    4e77:	90                   	nop

0000000000004e78 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4e78:	55                   	push   %rbp
    4e79:	48 89 e5             	mov    %rsp,%rbp
    4e7c:	48 83 ec 10          	sub    $0x10,%rsp
    4e80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e88:	48 89 c7             	mov    %rax,%rdi
    4e8b:	e8 3c 01 00 00       	call   4fcc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4e90:	90                   	nop
    4e91:	c9                   	leave
    4e92:	c3                   	ret
    4e93:	90                   	nop

0000000000004e94 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4e94:	55                   	push   %rbp
    4e95:	48 89 e5             	mov    %rsp,%rbp
    4e98:	53                   	push   %rbx
    4e99:	48 83 ec 28          	sub    $0x28,%rsp
    4e9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ea1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ea5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4ea9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4ead:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4eb1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4eb5:	48 89 d6             	mov    %rdx,%rsi
    4eb8:	48 89 c7             	mov    %rax,%rdi
    4ebb:	e8 17 01 00 00       	call   4fd7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4ec0:	48 89 c1             	mov    %rax,%rcx
    4ec3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ec7:	48 89 c2             	mov    %rax,%rdx
    4eca:	48 89 ce             	mov    %rcx,%rsi
    4ecd:	48 89 df             	mov    %rbx,%rdi
    4ed0:	e8 63 01 00 00       	call   5038 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4ed5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ed9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4edd:	48 89 d6             	mov    %rdx,%rsi
    4ee0:	48 89 c7             	mov    %rax,%rdi
    4ee3:	e8 ae 01 00 00       	call   5096 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4ee8:	eb 1a                	jmp    4f04 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4eea:	48 89 c3             	mov    %rax,%rbx
    4eed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4ef1:	48 89 c7             	mov    %rax,%rdi
    4ef4:	e8 79 00 00 00       	call   4f72 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4ef9:	48 89 d8             	mov    %rbx,%rax
    4efc:	48 89 c7             	mov    %rax,%rdi
    4eff:	e8 ac f7 ff ff       	call   46b0 <_Unwind_Resume@plt>
    4f04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f08:	c9                   	leave
    4f09:	c3                   	ret

0000000000004f0a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f0a:	55                   	push   %rbp
    4f0b:	48 89 e5             	mov    %rsp,%rbp
    4f0e:	48 83 ec 10          	sub    $0x10,%rsp
    4f12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f1a:	48 89 c7             	mov    %rax,%rdi
    4f1d:	e8 b4 01 00 00       	call   50d6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f22:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f29:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f31:	48 8b 00             	mov    (%rax),%rax
    4f34:	48 89 ce             	mov    %rcx,%rsi
    4f37:	48 89 c7             	mov    %rax,%rdi
    4f3a:	e8 a5 01 00 00       	call   50e4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f43:	48 89 c7             	mov    %rax,%rdi
    4f46:	e8 27 00 00 00       	call   4f72 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f4b:	90                   	nop
    4f4c:	c9                   	leave
    4f4d:	c3                   	ret

0000000000004f4e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f4e:	55                   	push   %rbp
    4f4f:	48 89 e5             	mov    %rsp,%rbp
    4f52:	48 83 ec 10          	sub    $0x10,%rsp
    4f56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f5e:	48 8b 10             	mov    (%rax),%rdx
    4f61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f65:	48 89 d6             	mov    %rdx,%rsi
    4f68:	48 89 c7             	mov    %rax,%rdi
    4f6b:	e8 9e 01 00 00       	call   510e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4f70:	c9                   	leave
    4f71:	c3                   	ret

0000000000004f72 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4f72:	55                   	push   %rbp
    4f73:	48 89 e5             	mov    %rsp,%rbp
    4f76:	48 83 ec 10          	sub    $0x10,%rsp
    4f7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4f7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f82:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4f86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f8a:	48 8b 00             	mov    (%rax),%rax
    4f8d:	48 29 c2             	sub    %rax,%rdx
    4f90:	48 89 d0             	mov    %rdx,%rax
    4f93:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4f97:	48 89 c2             	mov    %rax,%rdx
    4f9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f9e:	48 8b 08             	mov    (%rax),%rcx
    4fa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa5:	48 89 ce             	mov    %rcx,%rsi
    4fa8:	48 89 c7             	mov    %rax,%rdi
    4fab:	e8 96 01 00 00       	call   5146 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4fb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fb4:	48 89 c7             	mov    %rax,%rdi
    4fb7:	e8 84 fe ff ff       	call   4e40 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4fbc:	90                   	nop
    4fbd:	c9                   	leave
    4fbe:	c3                   	ret
    4fbf:	90                   	nop

0000000000004fc0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fc0:	55                   	push   %rbp
    4fc1:	48 89 e5             	mov    %rsp,%rbp
    4fc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fc8:	90                   	nop
    4fc9:	5d                   	pop    %rbp
    4fca:	c3                   	ret
    4fcb:	90                   	nop

0000000000004fcc <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fcc:	55                   	push   %rbp
    4fcd:	48 89 e5             	mov    %rsp,%rbp
    4fd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fd4:	90                   	nop
    4fd5:	5d                   	pop    %rbp
    4fd6:	c3                   	ret

0000000000004fd7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4fd7:	55                   	push   %rbp
    4fd8:	48 89 e5             	mov    %rsp,%rbp
    4fdb:	53                   	push   %rbx
    4fdc:	48 83 ec 28          	sub    $0x28,%rsp
    4fe0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4fe4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    4fe8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4fec:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4ff0:	48 89 d6             	mov    %rdx,%rsi
    4ff3:	48 89 c7             	mov    %rax,%rdi
    4ff6:	e8 25 01 00 00       	call   5120 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    4ffb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4fff:	48 89 c7             	mov    %rax,%rdi
    5002:	e8 74 01 00 00       	call   517b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5007:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    500b:	0f 92 c3             	setb   %bl
    500e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5012:	48 89 c7             	mov    %rax,%rdi
    5015:	e8 5e fe ff ff       	call   4e78 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    501a:	84 db                	test   %bl,%bl
    501c:	74 0f                	je     502d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    501e:	48 8d 05 1b 1c 01 00 	lea    0x11c1b(%rip),%rax        # 16c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    5025:	48 89 c7             	mov    %rax,%rdi
    5028:	e8 43 f1 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    502d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5031:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5035:	c9                   	leave
    5036:	c3                   	ret
    5037:	90                   	nop

0000000000005038 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5038:	55                   	push   %rbp
    5039:	48 89 e5             	mov    %rsp,%rbp
    503c:	53                   	push   %rbx
    503d:	48 83 ec 28          	sub    $0x28,%rsp
    5041:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5045:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5049:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    504d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5051:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5055:	48 89 d6             	mov    %rdx,%rsi
    5058:	48 89 c7             	mov    %rax,%rdi
    505b:	e8 5e 01 00 00       	call   51be <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5060:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5064:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5068:	48 89 d6             	mov    %rdx,%rsi
    506b:	48 89 c7             	mov    %rax,%rdi
    506e:	e8 7d 01 00 00       	call   51f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5073:	eb 1a                	jmp    508f <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5075:	48 89 c3             	mov    %rax,%rbx
    5078:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    507c:	48 89 c7             	mov    %rax,%rdi
    507f:	e8 bc fd ff ff       	call   4e40 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    5084:	48 89 d8             	mov    %rbx,%rax
    5087:	48 89 c7             	mov    %rax,%rdi
    508a:	e8 21 f6 ff ff       	call   46b0 <_Unwind_Resume@plt>
    508f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5093:	c9                   	leave
    5094:	c3                   	ret
    5095:	90                   	nop

0000000000005096 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    5096:	55                   	push   %rbp
    5097:	48 89 e5             	mov    %rsp,%rbp
    509a:	48 83 ec 10          	sub    $0x10,%rsp
    509e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    50a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50aa:	48 89 c7             	mov    %rax,%rdi
    50ad:	e8 24 00 00 00       	call   50d6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50b2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    50b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50b9:	48 8b 00             	mov    (%rax),%rax
    50bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    50c0:	48 89 ce             	mov    %rcx,%rsi
    50c3:	48 89 c7             	mov    %rax,%rdi
    50c6:	e8 7b 01 00 00       	call   5246 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    50cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    50cf:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    50d3:	90                   	nop
    50d4:	c9                   	leave
    50d5:	c3                   	ret

00000000000050d6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    50d6:	55                   	push   %rbp
    50d7:	48 89 e5             	mov    %rsp,%rbp
    50da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    50de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50e2:	5d                   	pop    %rbp
    50e3:	c3                   	ret

00000000000050e4 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    50e4:	55                   	push   %rbp
    50e5:	48 89 e5             	mov    %rsp,%rbp
    50e8:	48 83 ec 20          	sub    $0x20,%rsp
    50ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    50f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    50f8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    50fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5100:	48 89 d6             	mov    %rdx,%rsi
    5103:	48 89 c7             	mov    %rax,%rdi
    5106:	e8 64 01 00 00       	call   526f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    510b:	90                   	nop
    510c:	c9                   	leave
    510d:	c3                   	ret

000000000000510e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    510e:	55                   	push   %rbp
    510f:	48 89 e5             	mov    %rsp,%rbp
    5112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    511a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    511e:	5d                   	pop    %rbp
    511f:	c3                   	ret

0000000000005120 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5120:	55                   	push   %rbp
    5121:	48 89 e5             	mov    %rsp,%rbp
    5124:	48 83 ec 10          	sub    $0x10,%rsp
    5128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    512c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5130:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5138:	48 89 d6             	mov    %rdx,%rsi
    513b:	48 89 c7             	mov    %rax,%rdi
    513e:	e8 53 01 00 00       	call   5296 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5143:	90                   	nop
    5144:	c9                   	leave
    5145:	c3                   	ret

0000000000005146 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5146:	55                   	push   %rbp
    5147:	48 89 e5             	mov    %rsp,%rbp
    514a:	48 83 ec 20          	sub    $0x20,%rsp
    514e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5152:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5156:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    515a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    515f:	74 17                	je     5178 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5165:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5169:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    516d:	48 89 ce             	mov    %rcx,%rsi
    5170:	48 89 c7             	mov    %rax,%rdi
    5173:	e8 2d 01 00 00       	call   52a5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5178:	90                   	nop
    5179:	c9                   	leave
    517a:	c3                   	ret

000000000000517b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    517b:	55                   	push   %rbp
    517c:	48 89 e5             	mov    %rsp,%rbp
    517f:	48 83 ec 20          	sub    $0x20,%rsp
    5183:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    5187:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    518e:	ff ff 0f 
    5191:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    5195:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5199:	48 89 c7             	mov    %rax,%rdi
    519c:	e8 32 01 00 00       	call   52d3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    51a1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    51a5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    51a9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51ad:	48 89 d6             	mov    %rdx,%rsi
    51b0:	48 89 c7             	mov    %rax,%rdi
    51b3:	e8 35 01 00 00       	call   52ed <_ZSt3minImERKT_S2_S2_>
    51b8:	48 8b 00             	mov    (%rax),%rax
      }
    51bb:	c9                   	leave
    51bc:	c3                   	ret
    51bd:	90                   	nop

00000000000051be <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    51be:	55                   	push   %rbp
    51bf:	48 89 e5             	mov    %rsp,%rbp
    51c2:	48 83 ec 10          	sub    $0x10,%rsp
    51c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    51ce:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51d6:	48 89 d6             	mov    %rdx,%rsi
    51d9:	48 89 c7             	mov    %rax,%rdi
    51dc:	e8 3f ff ff ff       	call   5120 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    51e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51e5:	48 89 c7             	mov    %rax,%rdi
    51e8:	e8 2b 01 00 00       	call   5318 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    51ed:	90                   	nop
    51ee:	c9                   	leave
    51ef:	c3                   	ret

00000000000051f0 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    51f0:	55                   	push   %rbp
    51f1:	48 89 e5             	mov    %rsp,%rbp
    51f4:	48 83 ec 10          	sub    $0x10,%rsp
    51f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5200:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5208:	48 89 d6             	mov    %rdx,%rsi
    520b:	48 89 c7             	mov    %rax,%rdi
    520e:	e8 33 01 00 00       	call   5346 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5213:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5217:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    521a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    521e:	48 8b 10             	mov    (%rax),%rdx
    5221:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5225:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    522d:	48 8b 00             	mov    (%rax),%rax
    5230:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5234:	48 c1 e2 03          	shl    $0x3,%rdx
    5238:	48 01 c2             	add    %rax,%rdx
    523b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    523f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5243:	90                   	nop
    5244:	c9                   	leave
    5245:	c3                   	ret

0000000000005246 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5246:	55                   	push   %rbp
    5247:	48 89 e5             	mov    %rsp,%rbp
    524a:	48 83 ec 20          	sub    $0x20,%rsp
    524e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5252:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5256:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    525a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    525e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5262:	48 89 d6             	mov    %rdx,%rsi
    5265:	48 89 c7             	mov    %rax,%rdi
    5268:	e8 0c 01 00 00       	call   5379 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    526d:	c9                   	leave
    526e:	c3                   	ret

000000000000526f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    526f:	55                   	push   %rbp
    5270:	48 89 e5             	mov    %rsp,%rbp
    5273:	48 83 ec 10          	sub    $0x10,%rsp
    5277:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    527b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    527f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5283:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5287:	48 89 d6             	mov    %rdx,%rsi
    528a:	48 89 c7             	mov    %rax,%rdi
    528d:	e8 10 01 00 00       	call   53a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    5292:	90                   	nop
    5293:	c9                   	leave
    5294:	c3                   	ret
    5295:	90                   	nop

0000000000005296 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    5296:	55                   	push   %rbp
    5297:	48 89 e5             	mov    %rsp,%rbp
    529a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    529e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52a2:	90                   	nop
    52a3:	5d                   	pop    %rbp
    52a4:	c3                   	ret

00000000000052a5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    52a5:	55                   	push   %rbp
    52a6:	48 89 e5             	mov    %rsp,%rbp
    52a9:	48 83 ec 20          	sub    $0x20,%rsp
    52ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52b5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    52b9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52bd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52c5:	48 89 ce             	mov    %rcx,%rsi
    52c8:	48 89 c7             	mov    %rax,%rdi
    52cb:	e8 e2 00 00 00       	call   53b2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    52d0:	90                   	nop
    52d1:	c9                   	leave
    52d2:	c3                   	ret

00000000000052d3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    52d3:	55                   	push   %rbp
    52d4:	48 89 e5             	mov    %rsp,%rbp
    52d7:	48 83 ec 10          	sub    $0x10,%rsp
    52db:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    52df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e3:	48 89 c7             	mov    %rax,%rdi
    52e6:	e8 f9 00 00 00       	call   53e4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    52eb:	c9                   	leave
    52ec:	c3                   	ret

00000000000052ed <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    52ed:	55                   	push   %rbp
    52ee:	48 89 e5             	mov    %rsp,%rbp
    52f1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52f5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    52f9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    52fd:	48 8b 10             	mov    (%rax),%rdx
    5300:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5304:	48 8b 00             	mov    (%rax),%rax
    5307:	48 39 c2             	cmp    %rax,%rdx
    530a:	73 06                	jae    5312 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    530c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5310:	eb 04                	jmp    5316 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5316:	5d                   	pop    %rbp
    5317:	c3                   	ret

0000000000005318 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5318:	55                   	push   %rbp
    5319:	48 89 e5             	mov    %rsp,%rbp
    531c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5324:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    532b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    532f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5336:	00 
    5337:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    533b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5342:	00 
	{ }
    5343:	90                   	nop
    5344:	5d                   	pop    %rbp
    5345:	c3                   	ret

0000000000005346 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5346:	55                   	push   %rbp
    5347:	48 89 e5             	mov    %rsp,%rbp
    534a:	48 83 ec 10          	sub    $0x10,%rsp
    534e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5352:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5356:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    535b:	74 15                	je     5372 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    535d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5361:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5365:	48 89 d6             	mov    %rdx,%rsi
    5368:	48 89 c7             	mov    %rax,%rdi
    536b:	e8 8e 00 00 00       	call   53fe <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    5370:	eb 05                	jmp    5377 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    5372:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5377:	c9                   	leave
    5378:	c3                   	ret

0000000000005379 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5379:	55                   	push   %rbp
    537a:	48 89 e5             	mov    %rsp,%rbp
    537d:	48 83 ec 20          	sub    $0x20,%rsp
    5381:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5385:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    5389:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    538d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5391:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5395:	48 89 d6             	mov    %rdx,%rsi
    5398:	48 89 c7             	mov    %rax,%rdi
    539b:	e8 88 00 00 00       	call   5428 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    53a0:	c9                   	leave
    53a1:	c3                   	ret

00000000000053a2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    53a2:	55                   	push   %rbp
    53a3:	48 89 e5             	mov    %rsp,%rbp
    53a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53ae:	90                   	nop
    53af:	5d                   	pop    %rbp
    53b0:	c3                   	ret
    53b1:	90                   	nop

00000000000053b2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    53b2:	55                   	push   %rbp
    53b3:	48 89 e5             	mov    %rsp,%rbp
    53b6:	48 83 ec 20          	sub    $0x20,%rsp
    53ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    53c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53ca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    53d1:	00 
    53d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53d6:	48 89 d6             	mov    %rdx,%rsi
    53d9:	48 89 c7             	mov    %rax,%rdi
    53dc:	e8 8f ef ff ff       	call   4370 <_ZdlPvm@plt>
      }
    53e1:	c9                   	leave
    53e2:	c3                   	ret
    53e3:	90                   	nop

00000000000053e4 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    53e4:	55                   	push   %rbp
    53e5:	48 89 e5             	mov    %rsp,%rbp
    53e8:	48 83 ec 10          	sub    $0x10,%rsp
    53ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    53f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    53f4:	48 89 c7             	mov    %rax,%rdi
    53f7:	e8 8a 00 00 00       	call   5486 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    53fc:	c9                   	leave
    53fd:	c3                   	ret

00000000000053fe <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    53fe:	55                   	push   %rbp
    53ff:	48 89 e5             	mov    %rsp,%rbp
    5402:	48 83 ec 10          	sub    $0x10,%rsp
    5406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    540a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    540e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5416:	ba 00 00 00 00       	mov    $0x0,%edx
    541b:	48 89 ce             	mov    %rcx,%rsi
    541e:	48 89 c7             	mov    %rax,%rdi
    5421:	e8 74 00 00 00       	call   549a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5426:	c9                   	leave
    5427:	c3                   	ret

0000000000005428 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5428:	55                   	push   %rbp
    5429:	48 89 e5             	mov    %rsp,%rbp
    542c:	48 83 ec 20          	sub    $0x20,%rsp
    5430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5434:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5438:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    543d:	74 40                	je     547f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    543f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5443:	48 89 c7             	mov    %rax,%rdi
    5446:	e8 b0 00 00 00       	call   54fb <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    544b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    544f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5453:	48 89 c7             	mov    %rax,%rdi
    5456:	e8 ae 00 00 00       	call   5509 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    545b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5460:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5464:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5468:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    546c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5470:	48 89 ce             	mov    %rcx,%rsi
    5473:	48 89 c7             	mov    %rax,%rdi
    5476:	e8 b5 00 00 00       	call   5530 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    547b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    547f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    5483:	c9                   	leave
    5484:	c3                   	ret
    5485:	90                   	nop

0000000000005486 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    5486:	55                   	push   %rbp
    5487:	48 89 e5             	mov    %rsp,%rbp
    548a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    548e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    5495:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    5498:	5d                   	pop    %rbp
    5499:	c3                   	ret

000000000000549a <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    549a:	55                   	push   %rbp
    549b:	48 89 e5             	mov    %rsp,%rbp
    549e:	48 83 ec 20          	sub    $0x20,%rsp
    54a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54b2:	48 89 c7             	mov    %rax,%rdi
    54b5:	e8 cc ff ff ff       	call   5486 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    54ba:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54be:	0f 92 c0             	setb   %al
    54c1:	0f b6 c0             	movzbl %al,%eax
    54c4:	48 85 c0             	test   %rax,%rax
    54c7:	0f 95 c0             	setne  %al
    54ca:	84 c0                	test   %al,%al
    54cc:	74 1a                	je     54e8 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    54ce:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    54d5:	ff ff 1f 
    54d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54dc:	73 05                	jae    54e3 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    54de:	e8 7d ed ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    54e3:	e8 f8 eb ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    54e8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    54ec:	48 c1 e0 03          	shl    $0x3,%rax
    54f0:	48 89 c7             	mov    %rax,%rdi
    54f3:	e8 68 ee ff ff       	call   4360 <_Znwm@plt>
    54f8:	90                   	nop
      }
    54f9:	c9                   	leave
    54fa:	c3                   	ret

00000000000054fb <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    54fb:	55                   	push   %rbp
    54fc:	48 89 e5             	mov    %rsp,%rbp
    54ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5503:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5507:	5d                   	pop    %rbp
    5508:	c3                   	ret

0000000000005509 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5509:	55                   	push   %rbp
    550a:	48 89 e5             	mov    %rsp,%rbp
    550d:	48 83 ec 10          	sub    $0x10,%rsp
    5511:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5519:	48 89 c6             	mov    %rax,%rsi
    551c:	bf 08 00 00 00       	mov    $0x8,%edi
    5521:	e8 fa f8 ff ff       	call   4e20 <_ZnwmPv>
    5526:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    552d:	90                   	nop
    552e:	c9                   	leave
    552f:	c3                   	ret

0000000000005530 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5530:	55                   	push   %rbp
    5531:	48 89 e5             	mov    %rsp,%rbp
    5534:	48 83 ec 20          	sub    $0x20,%rsp
    5538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    553c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5540:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5544:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5548:	48 89 c7             	mov    %rax,%rdi
    554b:	e8 24 00 00 00       	call   5574 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5550:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5554:	48 89 c7             	mov    %rax,%rdi
    5557:	e8 d6 f8 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    555c:	48 89 c1             	mov    %rax,%rcx
    555f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5563:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5567:	48 89 ce             	mov    %rcx,%rsi
    556a:	48 89 c7             	mov    %rax,%rdi
    556d:	e8 0d 00 00 00       	call   557f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5572:	c9                   	leave
    5573:	c3                   	ret

0000000000005574 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5574:	55                   	push   %rbp
    5575:	48 89 e5             	mov    %rsp,%rbp
    5578:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    557c:	90                   	nop
    557d:	5d                   	pop    %rbp
    557e:	c3                   	ret

000000000000557f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    557f:	55                   	push   %rbp
    5580:	48 89 e5             	mov    %rsp,%rbp
    5583:	48 83 ec 20          	sub    $0x20,%rsp
    5587:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    558b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    558f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    5593:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    5598:	75 06                	jne    55a0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    559a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    559e:	eb 3a                	jmp    55da <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    55a0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55a4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55ab:	00 
    55ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55b0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55bc:	48 89 ce             	mov    %rcx,%rsi
    55bf:	48 89 c7             	mov    %rax,%rdi
    55c2:	e8 15 00 00 00       	call   55dc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    55c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55cb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55d2:	00 
    55d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d7:	48 01 d0             	add    %rdx,%rax
    }
    55da:	c9                   	leave
    55db:	c3                   	ret

00000000000055dc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    55dc:	55                   	push   %rbp
    55dd:	48 89 e5             	mov    %rsp,%rbp
    55e0:	48 83 ec 20          	sub    $0x20,%rsp
    55e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    55f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    55f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55fc:	48 89 ce             	mov    %rcx,%rsi
    55ff:	48 89 c7             	mov    %rax,%rdi
    5602:	e8 03 00 00 00       	call   560a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5607:	90                   	nop
    5608:	c9                   	leave
    5609:	c3                   	ret

000000000000560a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    560a:	55                   	push   %rbp
    560b:	48 89 e5             	mov    %rsp,%rbp
    560e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5612:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5616:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    561a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    561e:	48 8b 00             	mov    (%rax),%rax
    5621:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5625:	eb 10                	jmp    5637 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    562b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    562f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5632:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5637:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    563b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    563f:	75 e6                	jne    5627 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5641:	90                   	nop
    5642:	90                   	nop
    5643:	5d                   	pop    %rbp
    5644:	c3                   	ret

0000000000005645 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5645:	55                   	push   %rbp
    5646:	48 89 e5             	mov    %rsp,%rbp
    5649:	48 83 ec 20          	sub    $0x20,%rsp
    564d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5650:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5653:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5657:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    565b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    565f:	be 00 00 00 00       	mov    $0x0,%esi
    5664:	bf 01 20 02 00       	mov    $0x22001,%edi
    5669:	e8 62 ec ff ff       	call   42d0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    566e:	be 00 00 00 00       	mov    $0x0,%esi
    5673:	bf 03 00 02 00       	mov    $0x20003,%edi
    5678:	e8 53 ec ff ff       	call   42d0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    567d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    5681:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5685:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5689:	8b 75 f8             	mov    -0x8(%rbp),%esi
    568c:	8b 45 fc             	mov    -0x4(%rbp),%eax
    568f:	49 89 f8             	mov    %rdi,%r8
    5692:	89 c7                	mov    %eax,%edi
    5694:	e8 47 ef ff ff       	call   45e0 <glfwCreateWindow@plt>
}
    5699:	c9                   	leave
    569a:	c3                   	ret

000000000000569b <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    569b:	55                   	push   %rbp
    569c:	48 89 e5             	mov    %rsp,%rbp
    569f:	41 54                	push   %r12
    56a1:	53                   	push   %rbx
    56a2:	48 83 ec 20          	sub    $0x20,%rsp
    56a6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    56aa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    56ae:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    56b2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    56b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56ba:	48 89 ce             	mov    %rcx,%rsi
    56bd:	48 89 c7             	mov    %rax,%rdi
    56c0:	e8 db ed ff ff       	call   44a0 <vkCreateInstance@plt>
    56c5:	85 c0                	test   %eax,%eax
    56c7:	0f 95 c0             	setne  %al
    56ca:	84 c0                	test   %al,%al
    56cc:	74 3b                	je     5709 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    56ce:	bf 10 00 00 00       	mov    $0x10,%edi
    56d3:	e8 88 ea ff ff       	call   4160 <__cxa_allocate_exception@plt>
    56d8:	48 89 c3             	mov    %rax,%rbx
    56db:	48 8d 05 6e 1b 01 00 	lea    0x11b6e(%rip),%rax        # 17250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    56e2:	48 89 c6             	mov    %rax,%rsi
    56e5:	48 89 df             	mov    %rbx,%rdi
    56e8:	e8 13 ea ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    56ed:	48 8b 05 b4 08 02 00 	mov    0x208b4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    56f4:	48 89 c2             	mov    %rax,%rdx
    56f7:	48 8d 05 42 06 02 00 	lea    0x20642(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    56fe:	48 89 c6             	mov    %rax,%rsi
    5701:	48 89 df             	mov    %rbx,%rdi
    5704:	e8 47 ef ff ff       	call   4650 <__cxa_throw@plt>
  }
  return instance;
    5709:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    570d:	eb 16                	jmp    5725 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    570f:	49 89 c4             	mov    %rax,%r12
    5712:	48 89 df             	mov    %rbx,%rdi
    5715:	e8 16 eb ff ff       	call   4230 <__cxa_free_exception@plt>
    571a:	4c 89 e0             	mov    %r12,%rax
    571d:	48 89 c7             	mov    %rax,%rdi
    5720:	e8 8b ef ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5725:	48 83 c4 20          	add    $0x20,%rsp
    5729:	5b                   	pop    %rbx
    572a:	41 5c                	pop    %r12
    572c:	5d                   	pop    %rbp
    572d:	c3                   	ret

000000000000572e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    572e:	55                   	push   %rbp
    572f:	48 89 e5             	mov    %rsp,%rbp
    5732:	41 54                	push   %r12
    5734:	53                   	push   %rbx
    5735:	48 83 ec 30          	sub    $0x30,%rsp
    5739:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    573d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5741:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5745:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5749:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    574d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5751:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5755:	48 89 c7             	mov    %rax,%rdi
    5758:	e8 53 ee ff ff       	call   45b0 <vkCreateDevice@plt>
    575d:	85 c0                	test   %eax,%eax
    575f:	0f 95 c0             	setne  %al
    5762:	84 c0                	test   %al,%al
    5764:	74 3b                	je     57a1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5766:	bf 10 00 00 00       	mov    $0x10,%edi
    576b:	e8 f0 e9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5770:	48 89 c3             	mov    %rax,%rbx
    5773:	48 8d 05 f6 1a 01 00 	lea    0x11af6(%rip),%rax        # 17270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    577a:	48 89 c6             	mov    %rax,%rsi
    577d:	48 89 df             	mov    %rbx,%rdi
    5780:	e8 7b e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5785:	48 8b 05 1c 08 02 00 	mov    0x2081c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    578c:	48 89 c2             	mov    %rax,%rdx
    578f:	48 8d 05 aa 05 02 00 	lea    0x205aa(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5796:	48 89 c6             	mov    %rax,%rsi
    5799:	48 89 df             	mov    %rbx,%rdi
    579c:	e8 af ee ff ff       	call   4650 <__cxa_throw@plt>
  }
  return device;
    57a1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57a5:	eb 16                	jmp    57bd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    57a7:	49 89 c4             	mov    %rax,%r12
    57aa:	48 89 df             	mov    %rbx,%rdi
    57ad:	e8 7e ea ff ff       	call   4230 <__cxa_free_exception@plt>
    57b2:	4c 89 e0             	mov    %r12,%rax
    57b5:	48 89 c7             	mov    %rax,%rdi
    57b8:	e8 f3 ee ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    57bd:	48 83 c4 30          	add    $0x30,%rsp
    57c1:	5b                   	pop    %rbx
    57c2:	41 5c                	pop    %r12
    57c4:	5d                   	pop    %rbp
    57c5:	c3                   	ret

00000000000057c6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    57c6:	55                   	push   %rbp
    57c7:	48 89 e5             	mov    %rsp,%rbp
    57ca:	41 54                	push   %r12
    57cc:	53                   	push   %rbx
    57cd:	48 83 ec 30          	sub    $0x30,%rsp
    57d1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57d5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    57d9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    57dd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    57e1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    57e5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    57e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    57ed:	48 89 c7             	mov    %rax,%rdi
    57f0:	e8 db ed ff ff       	call   45d0 <glfwCreateWindowSurface@plt>
    57f5:	85 c0                	test   %eax,%eax
    57f7:	0f 95 c0             	setne  %al
    57fa:	84 c0                	test   %al,%al
    57fc:	74 3b                	je     5839 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    57fe:	bf 10 00 00 00       	mov    $0x10,%edi
    5803:	e8 58 e9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5808:	48 89 c3             	mov    %rax,%rbx
    580b:	48 8d 05 86 1a 01 00 	lea    0x11a86(%rip),%rax        # 17298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5812:	48 89 c6             	mov    %rax,%rsi
    5815:	48 89 df             	mov    %rbx,%rdi
    5818:	e8 e3 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    581d:	48 8b 05 84 07 02 00 	mov    0x20784(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5824:	48 89 c2             	mov    %rax,%rdx
    5827:	48 8d 05 12 05 02 00 	lea    0x20512(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    582e:	48 89 c6             	mov    %rax,%rsi
    5831:	48 89 df             	mov    %rbx,%rdi
    5834:	e8 17 ee ff ff       	call   4650 <__cxa_throw@plt>
  }
  return surface;
    5839:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    583d:	eb 16                	jmp    5855 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    583f:	49 89 c4             	mov    %rax,%r12
    5842:	48 89 df             	mov    %rbx,%rdi
    5845:	e8 e6 e9 ff ff       	call   4230 <__cxa_free_exception@plt>
    584a:	4c 89 e0             	mov    %r12,%rax
    584d:	48 89 c7             	mov    %rax,%rdi
    5850:	e8 5b ee ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5855:	48 83 c4 30          	add    $0x30,%rsp
    5859:	5b                   	pop    %rbx
    585a:	41 5c                	pop    %r12
    585c:	5d                   	pop    %rbp
    585d:	c3                   	ret

000000000000585e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    585e:	55                   	push   %rbp
    585f:	48 89 e5             	mov    %rsp,%rbp
    5862:	41 54                	push   %r12
    5864:	53                   	push   %rbx
    5865:	48 83 ec 30          	sub    $0x30,%rsp
    5869:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    586d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5871:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5875:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    587c:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    587d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5881:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5885:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5889:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    588d:	48 89 c7             	mov    %rax,%rdi
    5890:	e8 db eb ff ff       	call   4470 <vkCreateSwapchainKHR@plt>
    5895:	85 c0                	test   %eax,%eax
    5897:	0f 95 c0             	setne  %al
    589a:	84 c0                	test   %al,%al
    589c:	74 3b                	je     58d9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    589e:	bf 10 00 00 00       	mov    $0x10,%edi
    58a3:	e8 b8 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    58a8:	48 89 c3             	mov    %rax,%rbx
    58ab:	48 8d 05 07 1a 01 00 	lea    0x11a07(%rip),%rax        # 172b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    58b2:	48 89 c6             	mov    %rax,%rsi
    58b5:	48 89 df             	mov    %rbx,%rdi
    58b8:	e8 43 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    58bd:	48 8b 05 e4 06 02 00 	mov    0x206e4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    58c4:	48 89 c2             	mov    %rax,%rdx
    58c7:	48 8d 05 72 04 02 00 	lea    0x20472(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    58ce:	48 89 c6             	mov    %rax,%rsi
    58d1:	48 89 df             	mov    %rbx,%rdi
    58d4:	e8 77 ed ff ff       	call   4650 <__cxa_throw@plt>
  }
  return swapchain;
    58d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58dd:	eb 16                	jmp    58f5 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    58df:	49 89 c4             	mov    %rax,%r12
    58e2:	48 89 df             	mov    %rbx,%rdi
    58e5:	e8 46 e9 ff ff       	call   4230 <__cxa_free_exception@plt>
    58ea:	4c 89 e0             	mov    %r12,%rax
    58ed:	48 89 c7             	mov    %rax,%rdi
    58f0:	e8 bb ed ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    58f5:	48 83 c4 30          	add    $0x30,%rsp
    58f9:	5b                   	pop    %rbx
    58fa:	41 5c                	pop    %r12
    58fc:	5d                   	pop    %rbp
    58fd:	c3                   	ret

00000000000058fe <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    58fe:	55                   	push   %rbp
    58ff:	48 89 e5             	mov    %rsp,%rbp
    5902:	41 54                	push   %r12
    5904:	53                   	push   %rbx
    5905:	48 83 ec 30          	sub    $0x30,%rsp
    5909:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    590d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5911:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5915:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5919:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    591d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5921:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5925:	48 89 c7             	mov    %rax,%rdi
    5928:	e8 73 ea ff ff       	call   43a0 <vkCreateImageView@plt>
    592d:	85 c0                	test   %eax,%eax
    592f:	0f 95 c0             	setne  %al
    5932:	84 c0                	test   %al,%al
    5934:	74 3b                	je     5971 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5936:	bf 10 00 00 00       	mov    $0x10,%edi
    593b:	e8 20 e8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5940:	48 89 c3             	mov    %rax,%rbx
    5943:	48 8d 05 8e 19 01 00 	lea    0x1198e(%rip),%rax        # 172d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    594a:	48 89 c6             	mov    %rax,%rsi
    594d:	48 89 df             	mov    %rbx,%rdi
    5950:	e8 ab e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5955:	48 8b 05 4c 06 02 00 	mov    0x2064c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    595c:	48 89 c2             	mov    %rax,%rdx
    595f:	48 8d 05 da 03 02 00 	lea    0x203da(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5966:	48 89 c6             	mov    %rax,%rsi
    5969:	48 89 df             	mov    %rbx,%rdi
    596c:	e8 df ec ff ff       	call   4650 <__cxa_throw@plt>
  }
  return imageView;
    5971:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5975:	eb 16                	jmp    598d <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5977:	49 89 c4             	mov    %rax,%r12
    597a:	48 89 df             	mov    %rbx,%rdi
    597d:	e8 ae e8 ff ff       	call   4230 <__cxa_free_exception@plt>
    5982:	4c 89 e0             	mov    %r12,%rax
    5985:	48 89 c7             	mov    %rax,%rdi
    5988:	e8 23 ed ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    598d:	48 83 c4 30          	add    $0x30,%rsp
    5991:	5b                   	pop    %rbx
    5992:	41 5c                	pop    %r12
    5994:	5d                   	pop    %rbp
    5995:	c3                   	ret

0000000000005996 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    5996:	55                   	push   %rbp
    5997:	48 89 e5             	mov    %rsp,%rbp
    599a:	41 54                	push   %r12
    599c:	53                   	push   %rbx
    599d:	48 83 ec 60          	sub    $0x60,%rsp
    59a1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    59a5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    59a9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    59ad:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59b1:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    59b5:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    59b9:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    59be:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    59c5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59c9:	48 89 c7             	mov    %rax,%rdi
    59cc:	e8 b7 04 00 00       	call   5e88 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    59d1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    59d5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59d9:	48 89 c7             	mov    %rax,%rdi
    59dc:	e8 c7 04 00 00       	call   5ea8 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    59e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    59e5:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    59ec:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    59ed:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    59f1:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    59f5:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    59f9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    59fd:	48 89 c7             	mov    %rax,%rdi
    5a00:	e8 6b e8 ff ff       	call   4270 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5a05:	85 c0                	test   %eax,%eax
    5a07:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a0a:	84 c0                	test   %al,%al
    5a0c:	74 3b                	je     5a49 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5a0e:	bf 10 00 00 00       	mov    $0x10,%edi
    5a13:	e8 48 e7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5a18:	48 89 c3             	mov    %rax,%rbx
    5a1b:	48 8d 05 d6 18 01 00 	lea    0x118d6(%rip),%rax        # 172f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5a22:	48 89 c6             	mov    %rax,%rsi
    5a25:	48 89 df             	mov    %rbx,%rdi
    5a28:	e8 d3 e6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5a2d:	48 8b 05 74 05 02 00 	mov    0x20574(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a34:	48 89 c2             	mov    %rax,%rdx
    5a37:	48 8d 05 02 03 02 00 	lea    0x20302(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a3e:	48 89 c6             	mov    %rax,%rsi
    5a41:	48 89 df             	mov    %rbx,%rdi
    5a44:	e8 07 ec ff ff       	call   4650 <__cxa_throw@plt>
  }
  return shaderModule;
    5a49:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a4d:	eb 16                	jmp    5a65 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a4f:	49 89 c4             	mov    %rax,%r12
    5a52:	48 89 df             	mov    %rbx,%rdi
    5a55:	e8 d6 e7 ff ff       	call   4230 <__cxa_free_exception@plt>
    5a5a:	4c 89 e0             	mov    %r12,%rax
    5a5d:	48 89 c7             	mov    %rax,%rdi
    5a60:	e8 4b ec ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5a65:	48 83 c4 60          	add    $0x60,%rsp
    5a69:	5b                   	pop    %rbx
    5a6a:	41 5c                	pop    %r12
    5a6c:	5d                   	pop    %rbp
    5a6d:	c3                   	ret

0000000000005a6e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5a6e:	55                   	push   %rbp
    5a6f:	48 89 e5             	mov    %rsp,%rbp
    5a72:	41 54                	push   %r12
    5a74:	53                   	push   %rbx
    5a75:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5a7c:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5a83:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5a8a:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5a91:	be 04 00 00 00       	mov    $0x4,%esi
    5a96:	bf 02 00 00 00       	mov    $0x2,%edi
    5a9b:	e8 d6 03 00 00       	call   5e76 <_ZStorSt13_Ios_OpenmodeS_>
    5aa0:	89 c2                	mov    %eax,%edx
    5aa2:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5aa9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ab0:	48 89 ce             	mov    %rcx,%rsi
    5ab3:	48 89 c7             	mov    %rax,%rdi
    5ab6:	e8 55 eb ff ff       	call   4610 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5abb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ac2:	48 89 c7             	mov    %rax,%rdi
    5ac5:	e8 36 eb ff ff       	call   4600 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5aca:	83 f0 01             	xor    $0x1,%eax
    5acd:	84 c0                	test   %al,%al
    5acf:	74 61                	je     5b32 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5ad1:	bf 10 00 00 00       	mov    $0x10,%edi
    5ad6:	e8 85 e6 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5adb:	48 89 c3             	mov    %rax,%rbx
    5ade:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5ae2:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5ae9:	48 8d 0d 28 18 01 00 	lea    0x11828(%rip),%rcx        # 17318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5af0:	48 89 ce             	mov    %rcx,%rsi
    5af3:	48 89 c7             	mov    %rax,%rdi
    5af6:	e8 d1 03 00 00       	call   5ecc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5afb:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5aff:	48 89 c6             	mov    %rax,%rsi
    5b02:	48 89 df             	mov    %rbx,%rdi
    5b05:	e8 16 eb ff ff       	call   4620 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5b0a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b0e:	48 89 c7             	mov    %rax,%rdi
    5b11:	e8 ba e6 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5b16:	48 8b 05 8b 04 02 00 	mov    0x2048b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b1d:	48 89 c2             	mov    %rax,%rdx
    5b20:	48 8d 05 19 02 02 00 	lea    0x20219(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b27:	48 89 c6             	mov    %rax,%rsi
    5b2a:	48 89 df             	mov    %rbx,%rdi
    5b2d:	e8 1e eb ff ff       	call   4650 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b32:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b39:	48 89 c7             	mov    %rax,%rdi
    5b3c:	e8 4f eb ff ff       	call   4690 <_ZNSi5tellgEv@plt>
    5b41:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b45:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b49:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b4d:	48 89 c7             	mov    %rax,%rdi
    5b50:	e8 79 04 00 00       	call   5fce <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b55:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b59:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b5d:	48 89 c7             	mov    %rax,%rdi
    5b60:	e8 5b eb ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    5b65:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5b69:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b6d:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5b74:	48 89 ce             	mov    %rcx,%rsi
    5b77:	48 89 c7             	mov    %rax,%rdi
    5b7a:	e8 61 04 00 00       	call   5fe0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5b7f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b83:	48 89 c7             	mov    %rax,%rdi
    5b86:	e8 75 e8 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5b8b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5b8f:	be 00 00 00 00       	mov    $0x0,%esi
    5b94:	48 89 c7             	mov    %rax,%rdi
    5b97:	e8 fe 04 00 00       	call   609a <_ZNSt4fposI11__mbstate_tEC1El>
    5b9c:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5ba0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5ba4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bab:	48 89 ce             	mov    %rcx,%rsi
    5bae:	48 89 c7             	mov    %rax,%rdi
    5bb1:	e8 2a e9 ff ff       	call   44e0 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5bb6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5bba:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5bc1:	48 89 c7             	mov    %rax,%rdi
    5bc4:	e8 01 05 00 00       	call   60ca <_ZNSt6vectorIcSaIcEE4dataEv>
    5bc9:	48 89 c1             	mov    %rax,%rcx
    5bcc:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bd3:	48 89 da             	mov    %rbx,%rdx
    5bd6:	48 89 ce             	mov    %rcx,%rsi
    5bd9:	48 89 c7             	mov    %rax,%rdi
    5bdc:	e8 ef e8 ff ff       	call   44d0 <_ZNSi4readEPcl@plt>
  file.close();
    5be1:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5be8:	48 89 c7             	mov    %rax,%rdi
    5beb:	e8 80 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5bf0:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5bf7:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5bfe:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5c05:	48 89 ce             	mov    %rcx,%rsi
    5c08:	48 89 c7             	mov    %rax,%rdi
    5c0b:	e8 86 fd ff ff       	call   5996 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5c10:	48 89 c3             	mov    %rax,%rbx
    5c13:	90                   	nop
}
    5c14:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c1b:	48 89 c7             	mov    %rax,%rdi
    5c1e:	e8 33 04 00 00       	call   6056 <_ZNSt6vectorIcSaIcEED1Ev>
    5c23:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c2a:	48 89 c7             	mov    %rax,%rdi
    5c2d:	e8 7e e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c32:	48 89 d8             	mov    %rbx,%rax
    5c35:	eb 63                	jmp    5c9a <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c37:	49 89 c4             	mov    %rax,%r12
    5c3a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c3e:	48 89 c7             	mov    %rax,%rdi
    5c41:	e8 8a e5 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c46:	eb 03                	jmp    5c4b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c48:	49 89 c4             	mov    %rax,%r12
    5c4b:	48 89 df             	mov    %rbx,%rdi
    5c4e:	e8 dd e5 ff ff       	call   4230 <__cxa_free_exception@plt>
    5c53:	4c 89 e3             	mov    %r12,%rbx
    5c56:	eb 28                	jmp    5c80 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c58:	48 89 c3             	mov    %rax,%rbx
    5c5b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c5f:	48 89 c7             	mov    %rax,%rdi
    5c62:	e8 99 e7 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    5c67:	eb 17                	jmp    5c80 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5c69:	48 89 c3             	mov    %rax,%rbx
    5c6c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c73:	48 89 c7             	mov    %rax,%rdi
    5c76:	e8 db 03 00 00       	call   6056 <_ZNSt6vectorIcSaIcEED1Ev>
    5c7b:	eb 03                	jmp    5c80 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5c7d:	48 89 c3             	mov    %rax,%rbx
    5c80:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c87:	48 89 c7             	mov    %rax,%rdi
    5c8a:	e8 21 e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5c8f:	48 89 d8             	mov    %rbx,%rax
    5c92:	48 89 c7             	mov    %rax,%rdi
    5c95:	e8 16 ea ff ff       	call   46b0 <_Unwind_Resume@plt>
    5c9a:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5ca1:	5b                   	pop    %rbx
    5ca2:	41 5c                	pop    %r12
    5ca4:	5d                   	pop    %rbp
    5ca5:	c3                   	ret

0000000000005ca6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5ca6:	55                   	push   %rbp
    5ca7:	48 89 e5             	mov    %rsp,%rbp
    5caa:	41 54                	push   %r12
    5cac:	53                   	push   %rbx
    5cad:	48 83 ec 30          	sub    $0x30,%rsp
    5cb1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cb5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5cb9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cbd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5cc1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5cc5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5cc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ccd:	48 89 c7             	mov    %rax,%rdi
    5cd0:	e8 cb e5 ff ff       	call   42a0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5cd5:	85 c0                	test   %eax,%eax
    5cd7:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cda:	84 c0                	test   %al,%al
    5cdc:	74 3b                	je     5d19 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5cde:	bf 10 00 00 00       	mov    $0x10,%edi
    5ce3:	e8 78 e4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5ce8:	48 89 c3             	mov    %rax,%rbx
    5ceb:	48 8d 05 36 16 01 00 	lea    0x11636(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5cf2:	48 89 c6             	mov    %rax,%rsi
    5cf5:	48 89 df             	mov    %rbx,%rdi
    5cf8:	e8 03 e4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5cfd:	48 8b 05 a4 02 02 00 	mov    0x202a4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d04:	48 89 c2             	mov    %rax,%rdx
    5d07:	48 8d 05 32 00 02 00 	lea    0x20032(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d0e:	48 89 c6             	mov    %rax,%rsi
    5d11:	48 89 df             	mov    %rbx,%rdi
    5d14:	e8 37 e9 ff ff       	call   4650 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5d19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d1d:	eb 16                	jmp    5d35 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d1f:	49 89 c4             	mov    %rax,%r12
    5d22:	48 89 df             	mov    %rbx,%rdi
    5d25:	e8 06 e5 ff ff       	call   4230 <__cxa_free_exception@plt>
    5d2a:	4c 89 e0             	mov    %r12,%rax
    5d2d:	48 89 c7             	mov    %rax,%rdi
    5d30:	e8 7b e9 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5d35:	48 83 c4 30          	add    $0x30,%rsp
    5d39:	5b                   	pop    %rbx
    5d3a:	41 5c                	pop    %r12
    5d3c:	5d                   	pop    %rbp
    5d3d:	c3                   	ret

0000000000005d3e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5d3e:	55                   	push   %rbp
    5d3f:	48 89 e5             	mov    %rsp,%rbp
    5d42:	41 54                	push   %r12
    5d44:	53                   	push   %rbx
    5d45:	48 83 ec 30          	sub    $0x30,%rsp
    5d49:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d4d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d51:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5d55:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d59:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d5d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5d61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d65:	48 89 c7             	mov    %rax,%rdi
    5d68:	e8 73 e4 ff ff       	call   41e0 <vkCreateRenderPass@plt>
    5d6d:	85 c0                	test   %eax,%eax
    5d6f:	0f 95 c0             	setne  %al
    5d72:	84 c0                	test   %al,%al
    5d74:	74 3b                	je     5db1 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5d76:	bf 10 00 00 00       	mov    $0x10,%edi
    5d7b:	e8 e0 e3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5d80:	48 89 c3             	mov    %rax,%rbx
    5d83:	48 8d 05 9e 15 01 00 	lea    0x1159e(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d8a:	48 89 c6             	mov    %rax,%rsi
    5d8d:	48 89 df             	mov    %rbx,%rdi
    5d90:	e8 6b e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5d95:	48 8b 05 0c 02 02 00 	mov    0x2020c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d9c:	48 89 c2             	mov    %rax,%rdx
    5d9f:	48 8d 05 9a ff 01 00 	lea    0x1ff9a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5da6:	48 89 c6             	mov    %rax,%rsi
    5da9:	48 89 df             	mov    %rbx,%rdi
    5dac:	e8 9f e8 ff ff       	call   4650 <__cxa_throw@plt>
  }
  return renderPass;
    5db1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5db5:	eb 16                	jmp    5dcd <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5db7:	49 89 c4             	mov    %rax,%r12
    5dba:	48 89 df             	mov    %rbx,%rdi
    5dbd:	e8 6e e4 ff ff       	call   4230 <__cxa_free_exception@plt>
    5dc2:	4c 89 e0             	mov    %r12,%rax
    5dc5:	48 89 c7             	mov    %rax,%rdi
    5dc8:	e8 e3 e8 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5dcd:	48 83 c4 30          	add    $0x30,%rsp
    5dd1:	5b                   	pop    %rbx
    5dd2:	41 5c                	pop    %r12
    5dd4:	5d                   	pop    %rbp
    5dd5:	c3                   	ret

0000000000005dd6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5dd6:	55                   	push   %rbp
    5dd7:	48 89 e5             	mov    %rsp,%rbp
    5dda:	41 54                	push   %r12
    5ddc:	53                   	push   %rbx
    5ddd:	48 83 ec 30          	sub    $0x30,%rsp
    5de1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5de5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5de9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5ded:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5df4:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5df5:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5df9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5dfd:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e01:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e05:	48 89 c7             	mov    %rax,%rdi
    5e08:	e8 23 e3 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5e0d:	85 c0                	test   %eax,%eax
    5e0f:	0f 95 c0             	setne  %al
    5e12:	84 c0                	test   %al,%al
    5e14:	74 3b                	je     5e51 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5e16:	bf 10 00 00 00       	mov    $0x10,%edi
    5e1b:	e8 40 e3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    5e20:	48 89 c3             	mov    %rax,%rbx
    5e23:	48 8d 05 26 15 01 00 	lea    0x11526(%rip),%rax        # 17350 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    5e2a:	48 89 c6             	mov    %rax,%rsi
    5e2d:	48 89 df             	mov    %rbx,%rdi
    5e30:	e8 cb e2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5e35:	48 8b 05 6c 01 02 00 	mov    0x2016c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e3c:	48 89 c2             	mov    %rax,%rdx
    5e3f:	48 8d 05 fa fe 01 00 	lea    0x1fefa(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e46:	48 89 c6             	mov    %rax,%rsi
    5e49:	48 89 df             	mov    %rbx,%rdi
    5e4c:	e8 ff e7 ff ff       	call   4650 <__cxa_throw@plt>
  }
  return commandPool;
    5e51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e55:	eb 16                	jmp    5e6d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5e57:	49 89 c4             	mov    %rax,%r12
    5e5a:	48 89 df             	mov    %rbx,%rdi
    5e5d:	e8 ce e3 ff ff       	call   4230 <__cxa_free_exception@plt>
    5e62:	4c 89 e0             	mov    %r12,%rax
    5e65:	48 89 c7             	mov    %rax,%rdi
    5e68:	e8 43 e8 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    5e6d:	48 83 c4 30          	add    $0x30,%rsp
    5e71:	5b                   	pop    %rbx
    5e72:	41 5c                	pop    %r12
    5e74:	5d                   	pop    %rbp
    5e75:	c3                   	ret

0000000000005e76 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5e76:	55                   	push   %rbp
    5e77:	48 89 e5             	mov    %rsp,%rbp
    5e7a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5e7d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5e80:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5e83:	0b 45 f8             	or     -0x8(%rbp),%eax
    5e86:	5d                   	pop    %rbp
    5e87:	c3                   	ret

0000000000005e88 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5e88:	55                   	push   %rbp
    5e89:	48 89 e5             	mov    %rsp,%rbp
    5e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5e90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e94:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5e9c:	48 8b 00             	mov    (%rax),%rax
    5e9f:	48 29 c2             	sub    %rax,%rdx
    5ea2:	48 89 d0             	mov    %rdx,%rax
    5ea5:	5d                   	pop    %rbp
    5ea6:	c3                   	ret
    5ea7:	90                   	nop

0000000000005ea8 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5ea8:	55                   	push   %rbp
    5ea9:	48 89 e5             	mov    %rsp,%rbp
    5eac:	48 83 ec 10          	sub    $0x10,%rsp
    5eb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5eb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb8:	48 8b 10             	mov    (%rax),%rdx
    5ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebf:	48 89 d6             	mov    %rdx,%rsi
    5ec2:	48 89 c7             	mov    %rax,%rdi
    5ec5:	e8 24 02 00 00       	call   60ee <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5eca:	c9                   	leave
    5ecb:	c3                   	ret

0000000000005ecc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5ecc:	55                   	push   %rbp
    5ecd:	48 89 e5             	mov    %rsp,%rbp
    5ed0:	53                   	push   %rbx
    5ed1:	48 83 ec 38          	sub    $0x38,%rsp
    5ed5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ed9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5edd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5ee1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5ee5:	48 89 c7             	mov    %rax,%rdi
    5ee8:	e8 5c eb ff ff       	call   4a49 <_ZNSt11char_traitsIcE6lengthEPKc>
    5eed:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5ef1:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5ef5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ef9:	48 89 d6             	mov    %rdx,%rsi
    5efc:	48 89 c7             	mov    %rax,%rdi
    5eff:	e8 ec e1 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5f04:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f08:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5f0c:	48 89 d6             	mov    %rdx,%rsi
    5f0f:	48 89 c7             	mov    %rax,%rdi
    5f12:	e8 e9 01 00 00       	call   6100 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5f17:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5f1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f1f:	48 89 d6             	mov    %rdx,%rsi
    5f22:	48 89 c7             	mov    %rax,%rdi
    5f25:	e8 36 e7 ff ff       	call   4660 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    5f2a:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f2e:	48 89 c7             	mov    %rax,%rdi
    5f31:	e8 ca e4 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    5f36:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f3a:	48 89 c7             	mov    %rax,%rdi
    5f3d:	e8 be e4 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    5f42:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5f46:	48 89 c7             	mov    %rax,%rdi
    5f49:	e8 c2 e2 ff ff       	call   4210 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    5f4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f52:	48 01 c2             	add    %rax,%rdx
    5f55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f59:	48 89 d6             	mov    %rdx,%rsi
    5f5c:	48 89 c7             	mov    %rax,%rdi
    5f5f:	e8 8c e6 ff ff       	call   45f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    5f64:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f68:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5f6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f70:	48 89 ce             	mov    %rcx,%rsi
    5f73:	48 89 c7             	mov    %rax,%rdi
    5f76:	e8 c5 e0 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    5f7b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f83:	48 89 d6             	mov    %rdx,%rsi
    5f86:	48 89 c7             	mov    %rax,%rdi
    5f89:	e8 92 e7 ff ff       	call   4720 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    5f8e:	eb 34                	jmp    5fc4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5f90:	48 89 c3             	mov    %rax,%rbx
    5f93:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f97:	48 89 c7             	mov    %rax,%rdi
    5f9a:	e8 61 e4 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    5f9f:	48 89 d8             	mov    %rbx,%rax
    5fa2:	48 89 c7             	mov    %rax,%rdi
    5fa5:	e8 06 e7 ff ff       	call   46b0 <_Unwind_Resume@plt>
    }
    5faa:	48 89 c3             	mov    %rax,%rbx
    5fad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fb1:	48 89 c7             	mov    %rax,%rdi
    5fb4:	e8 17 e2 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5fb9:	48 89 d8             	mov    %rbx,%rax
    5fbc:	48 89 c7             	mov    %rax,%rdi
    5fbf:	e8 ec e6 ff ff       	call   46b0 <_Unwind_Resume@plt>
    5fc4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fc8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fcc:	c9                   	leave
    5fcd:	c3                   	ret

0000000000005fce <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    5fce:	55                   	push   %rbp
    5fcf:	48 89 e5             	mov    %rsp,%rbp
    5fd2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5fda:	48 8b 00             	mov    (%rax),%rax
    5fdd:	5d                   	pop    %rbp
    5fde:	c3                   	ret
    5fdf:	90                   	nop

0000000000005fe0 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    5fe0:	55                   	push   %rbp
    5fe1:	48 89 e5             	mov    %rsp,%rbp
    5fe4:	53                   	push   %rbx
    5fe5:	48 83 ec 28          	sub    $0x28,%rsp
    5fe9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5fed:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5ff1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    5ff5:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5ff9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5ffd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6001:	48 89 d6             	mov    %rdx,%rsi
    6004:	48 89 c7             	mov    %rax,%rdi
    6007:	e8 1d 01 00 00       	call   6129 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    600c:	48 89 c1             	mov    %rax,%rcx
    600f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6013:	48 89 c2             	mov    %rax,%rdx
    6016:	48 89 ce             	mov    %rcx,%rsi
    6019:	48 89 df             	mov    %rbx,%rdi
    601c:	e8 85 01 00 00       	call   61a6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6021:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6025:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6029:	48 89 d6             	mov    %rdx,%rsi
    602c:	48 89 c7             	mov    %rax,%rdi
    602f:	e8 14 02 00 00       	call   6248 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6034:	eb 1a                	jmp    6050 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6036:	48 89 c3             	mov    %rax,%rbx
    6039:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    603d:	48 89 c7             	mov    %rax,%rdi
    6040:	e8 bf 01 00 00       	call   6204 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6045:	48 89 d8             	mov    %rbx,%rax
    6048:	48 89 c7             	mov    %rax,%rdi
    604b:	e8 60 e6 ff ff       	call   46b0 <_Unwind_Resume@plt>
    6050:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6054:	c9                   	leave
    6055:	c3                   	ret

0000000000006056 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6056:	55                   	push   %rbp
    6057:	48 89 e5             	mov    %rsp,%rbp
    605a:	48 83 ec 10          	sub    $0x10,%rsp
    605e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6062:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6066:	48 89 c7             	mov    %rax,%rdi
    6069:	e8 1a 02 00 00       	call   6288 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    606e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6075:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    607d:	48 8b 00             	mov    (%rax),%rax
    6080:	48 89 ce             	mov    %rcx,%rsi
    6083:	48 89 c7             	mov    %rax,%rdi
    6086:	e8 0b 02 00 00       	call   6296 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    608b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    608f:	48 89 c7             	mov    %rax,%rdi
    6092:	e8 6d 01 00 00       	call   6204 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6097:	90                   	nop
    6098:	c9                   	leave
    6099:	c3                   	ret

000000000000609a <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    609a:	55                   	push   %rbp
    609b:	48 89 e5             	mov    %rsp,%rbp
    609e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    60a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60ae:	48 89 10             	mov    %rdx,(%rax)
    60b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60b5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    60bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60c0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    60c7:	90                   	nop
    60c8:	5d                   	pop    %rbp
    60c9:	c3                   	ret

00000000000060ca <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    60ca:	55                   	push   %rbp
    60cb:	48 89 e5             	mov    %rsp,%rbp
    60ce:	48 83 ec 10          	sub    $0x10,%rsp
    60d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    60d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60da:	48 8b 10             	mov    (%rax),%rdx
    60dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e1:	48 89 d6             	mov    %rdx,%rsi
    60e4:	48 89 c7             	mov    %rax,%rdi
    60e7:	e8 02 00 00 00       	call   60ee <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    60ec:	c9                   	leave
    60ed:	c3                   	ret

00000000000060ee <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    60ee:	55                   	push   %rbp
    60ef:	48 89 e5             	mov    %rsp,%rbp
    60f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    60fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    60fe:	5d                   	pop    %rbp
    60ff:	c3                   	ret

0000000000006100 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6100:	55                   	push   %rbp
    6101:	48 89 e5             	mov    %rsp,%rbp
    6104:	48 83 ec 10          	sub    $0x10,%rsp
    6108:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    610c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6114:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6118:	48 89 d6             	mov    %rdx,%rsi
    611b:	48 89 c7             	mov    %rax,%rdi
    611e:	e8 a8 01 00 00       	call   62cb <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6123:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6127:	c9                   	leave
    6128:	c3                   	ret

0000000000006129 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6129:	55                   	push   %rbp
    612a:	48 89 e5             	mov    %rsp,%rbp
    612d:	53                   	push   %rbx
    612e:	48 83 ec 28          	sub    $0x28,%rsp
    6132:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6136:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    613a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    613e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6142:	48 89 d6             	mov    %rdx,%rsi
    6145:	48 89 c7             	mov    %rax,%rdi
    6148:	e8 53 e0 ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    614d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6151:	48 89 c7             	mov    %rax,%rdi
    6154:	e8 9b 01 00 00       	call   62f4 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6159:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    615d:	0f 92 c3             	setb   %bl
    6160:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6164:	48 89 c7             	mov    %rax,%rdi
    6167:	e8 94 e2 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    616c:	84 db                	test   %bl,%bl
    616e:	74 0f                	je     617f <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6170:	48 8d 05 f9 11 01 00 	lea    0x111f9(%rip),%rax        # 17370 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x128>
    6177:	48 89 c7             	mov    %rax,%rdi
    617a:	e8 f1 df ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    617f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    6183:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6187:	c9                   	leave
    6188:	c3                   	ret
    6189:	90                   	nop

000000000000618a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    618a:	55                   	push   %rbp
    618b:	48 89 e5             	mov    %rsp,%rbp
    618e:	48 83 ec 10          	sub    $0x10,%rsp
    6192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    619a:	48 89 c7             	mov    %rax,%rdi
    619d:	e8 be de ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    61a2:	90                   	nop
    61a3:	c9                   	leave
    61a4:	c3                   	ret
    61a5:	90                   	nop

00000000000061a6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    61a6:	55                   	push   %rbp
    61a7:	48 89 e5             	mov    %rsp,%rbp
    61aa:	53                   	push   %rbx
    61ab:	48 83 ec 28          	sub    $0x28,%rsp
    61af:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61b3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61b7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    61bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61bf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61c3:	48 89 d6             	mov    %rdx,%rsi
    61c6:	48 89 c7             	mov    %rax,%rdi
    61c9:	e8 68 01 00 00       	call   6336 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    61ce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61d6:	48 89 d6             	mov    %rdx,%rsi
    61d9:	48 89 c7             	mov    %rax,%rdi
    61dc:	e8 87 01 00 00       	call   6368 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    61e1:	eb 1a                	jmp    61fd <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    61e3:	48 89 c3             	mov    %rax,%rbx
    61e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61ea:	48 89 c7             	mov    %rax,%rdi
    61ed:	e8 98 ff ff ff       	call   618a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    61f2:	48 89 d8             	mov    %rbx,%rax
    61f5:	48 89 c7             	mov    %rax,%rdi
    61f8:	e8 b3 e4 ff ff       	call   46b0 <_Unwind_Resume@plt>
    61fd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6201:	c9                   	leave
    6202:	c3                   	ret
    6203:	90                   	nop

0000000000006204 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6204:	55                   	push   %rbp
    6205:	48 89 e5             	mov    %rsp,%rbp
    6208:	48 83 ec 10          	sub    $0x10,%rsp
    620c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6214:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6218:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    621c:	48 8b 00             	mov    (%rax),%rax
    621f:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6226:	48 8b 08             	mov    (%rax),%rcx
    6229:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    622d:	48 89 ce             	mov    %rcx,%rsi
    6230:	48 89 c7             	mov    %rax,%rdi
    6233:	e8 82 01 00 00       	call   63ba <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    6238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623c:	48 89 c7             	mov    %rax,%rdi
    623f:	e8 46 ff ff ff       	call   618a <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6244:	90                   	nop
    6245:	c9                   	leave
    6246:	c3                   	ret
    6247:	90                   	nop

0000000000006248 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6248:	55                   	push   %rbp
    6249:	48 89 e5             	mov    %rsp,%rbp
    624c:	48 83 ec 10          	sub    $0x10,%rsp
    6250:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6254:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625c:	48 89 c7             	mov    %rax,%rdi
    625f:	e8 24 00 00 00       	call   6288 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6264:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6267:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    626b:	48 8b 00             	mov    (%rax),%rax
    626e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6272:	48 89 ce             	mov    %rcx,%rsi
    6275:	48 89 c7             	mov    %rax,%rdi
    6278:	e8 72 01 00 00       	call   63ef <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    627d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6281:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    6285:	90                   	nop
    6286:	c9                   	leave
    6287:	c3                   	ret

0000000000006288 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    6288:	55                   	push   %rbp
    6289:	48 89 e5             	mov    %rsp,%rbp
    628c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    6290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6294:	5d                   	pop    %rbp
    6295:	c3                   	ret

0000000000006296 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    6296:	55                   	push   %rbp
    6297:	48 89 e5             	mov    %rsp,%rbp
    629a:	48 83 ec 20          	sub    $0x20,%rsp
    629e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    62aa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b2:	48 89 d6             	mov    %rdx,%rsi
    62b5:	48 89 c7             	mov    %rax,%rdi
    62b8:	e8 5b 01 00 00       	call   6418 <_ZSt8_DestroyIPcEvT_S1_>
    }
    62bd:	90                   	nop
    62be:	c9                   	leave
    62bf:	c3                   	ret

00000000000062c0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    62c0:	55                   	push   %rbp
    62c1:	48 89 e5             	mov    %rsp,%rbp
    62c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    62c8:	90                   	nop
    62c9:	5d                   	pop    %rbp
    62ca:	c3                   	ret

00000000000062cb <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    62cb:	55                   	push   %rbp
    62cc:	48 89 e5             	mov    %rsp,%rbp
    62cf:	48 83 ec 10          	sub    $0x10,%rsp
    62d3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62d7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    62db:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62e3:	48 89 d6             	mov    %rdx,%rsi
    62e6:	48 89 c7             	mov    %rax,%rdi
    62e9:	e8 b2 de ff ff       	call   41a0 <_ZNSaIcEC1ERKS_@plt>
    62ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62f2:	c9                   	leave
    62f3:	c3                   	ret

00000000000062f4 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    62f4:	55                   	push   %rbp
    62f5:	48 89 e5             	mov    %rsp,%rbp
    62f8:	48 83 ec 20          	sub    $0x20,%rsp
    62fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6300:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6307:	ff ff 7f 
    630a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    630e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6312:	48 89 c7             	mov    %rax,%rdi
    6315:	e8 52 01 00 00       	call   646c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    631a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    631e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6322:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6326:	48 89 d6             	mov    %rdx,%rsi
    6329:	48 89 c7             	mov    %rax,%rdi
    632c:	e8 bc ef ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    6331:	48 8b 00             	mov    (%rax),%rax
      }
    6334:	c9                   	leave
    6335:	c3                   	ret

0000000000006336 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6336:	55                   	push   %rbp
    6337:	48 89 e5             	mov    %rsp,%rbp
    633a:	48 83 ec 10          	sub    $0x10,%rsp
    633e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6342:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6346:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    634a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    634e:	48 89 d6             	mov    %rdx,%rsi
    6351:	48 89 c7             	mov    %rax,%rdi
    6354:	e8 37 e2 ff ff       	call   4590 <_ZNSaIcEC2ERKS_@plt>
    6359:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    635d:	48 89 c7             	mov    %rax,%rdi
    6360:	e8 21 01 00 00       	call   6486 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6365:	90                   	nop
    6366:	c9                   	leave
    6367:	c3                   	ret

0000000000006368 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6368:	55                   	push   %rbp
    6369:	48 89 e5             	mov    %rsp,%rbp
    636c:	48 83 ec 10          	sub    $0x10,%rsp
    6370:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6374:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6378:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    637c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6380:	48 89 d6             	mov    %rdx,%rsi
    6383:	48 89 c7             	mov    %rax,%rdi
    6386:	e8 29 01 00 00       	call   64b4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    638b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    638f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    6392:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6396:	48 8b 10             	mov    (%rax),%rdx
    6399:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    639d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    63a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63a5:	48 8b 10             	mov    (%rax),%rdx
    63a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63ac:	48 01 c2             	add    %rax,%rdx
    63af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63b7:	90                   	nop
    63b8:	c9                   	leave
    63b9:	c3                   	ret

00000000000063ba <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    63ba:	55                   	push   %rbp
    63bb:	48 89 e5             	mov    %rsp,%rbp
    63be:	48 83 ec 20          	sub    $0x20,%rsp
    63c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    63ce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    63d3:	74 17                	je     63ec <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    63d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    63e1:	48 89 ce             	mov    %rcx,%rsi
    63e4:	48 89 c7             	mov    %rax,%rdi
    63e7:	e8 52 00 00 00       	call   643e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    63ec:	90                   	nop
    63ed:	c9                   	leave
    63ee:	c3                   	ret

00000000000063ef <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    63ef:	55                   	push   %rbp
    63f0:	48 89 e5             	mov    %rsp,%rbp
    63f3:	48 83 ec 20          	sub    $0x20,%rsp
    63f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63fb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63ff:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6403:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    640b:	48 89 d6             	mov    %rdx,%rsi
    640e:	48 89 c7             	mov    %rax,%rdi
    6411:	e8 d1 00 00 00       	call   64e7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    6416:	c9                   	leave
    6417:	c3                   	ret

0000000000006418 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6418:	55                   	push   %rbp
    6419:	48 89 e5             	mov    %rsp,%rbp
    641c:	48 83 ec 10          	sub    $0x10,%rsp
    6420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6424:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6428:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    642c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6430:	48 89 d6             	mov    %rdx,%rsi
    6433:	48 89 c7             	mov    %rax,%rdi
    6436:	e8 d5 00 00 00       	call   6510 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    643b:	90                   	nop
    643c:	c9                   	leave
    643d:	c3                   	ret

000000000000643e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    643e:	55                   	push   %rbp
    643f:	48 89 e5             	mov    %rsp,%rbp
    6442:	48 83 ec 20          	sub    $0x20,%rsp
    6446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    644a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    644e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6452:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6456:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    645a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    645e:	48 89 ce             	mov    %rcx,%rsi
    6461:	48 89 c7             	mov    %rax,%rdi
    6464:	e8 c5 00 00 00       	call   652e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6469:	90                   	nop
    646a:	c9                   	leave
    646b:	c3                   	ret

000000000000646c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    646c:	55                   	push   %rbp
    646d:	48 89 e5             	mov    %rsp,%rbp
    6470:	48 83 ec 10          	sub    $0x10,%rsp
    6474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647c:	48 89 c7             	mov    %rax,%rdi
    647f:	e8 d4 00 00 00       	call   6558 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    6484:	c9                   	leave
    6485:	c3                   	ret

0000000000006486 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    6486:	55                   	push   %rbp
    6487:	48 89 e5             	mov    %rsp,%rbp
    648a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    648e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6492:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    6499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    649d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    64a4:	00 
    64a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64a9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    64b0:	00 
	{ }
    64b1:	90                   	nop
    64b2:	5d                   	pop    %rbp
    64b3:	c3                   	ret

00000000000064b4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    64b4:	55                   	push   %rbp
    64b5:	48 89 e5             	mov    %rsp,%rbp
    64b8:	48 83 ec 10          	sub    $0x10,%rsp
    64bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    64c4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64c9:	74 15                	je     64e0 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    64cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64cf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64d3:	48 89 d6             	mov    %rdx,%rsi
    64d6:	48 89 c7             	mov    %rax,%rdi
    64d9:	e8 94 00 00 00       	call   6572 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    64de:	eb 05                	jmp    64e5 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    64e0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    64e5:	c9                   	leave
    64e6:	c3                   	ret

00000000000064e7 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    64e7:	55                   	push   %rbp
    64e8:	48 89 e5             	mov    %rsp,%rbp
    64eb:	48 83 ec 20          	sub    $0x20,%rsp
    64ef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    64f3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    64f7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    64fb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    64ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6503:	48 89 d6             	mov    %rdx,%rsi
    6506:	48 89 c7             	mov    %rax,%rdi
    6509:	e8 8e 00 00 00       	call   659c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    650e:	c9                   	leave
    650f:	c3                   	ret

0000000000006510 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6510:	55                   	push   %rbp
    6511:	48 89 e5             	mov    %rsp,%rbp
    6514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6518:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    651c:	90                   	nop
    651d:	5d                   	pop    %rbp
    651e:	c3                   	ret

000000000000651f <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    651f:	55                   	push   %rbp
    6520:	48 89 e5             	mov    %rsp,%rbp
    6523:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6527:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    652b:	5d                   	pop    %rbp
    652c:	c3                   	ret
    652d:	90                   	nop

000000000000652e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    652e:	55                   	push   %rbp
    652f:	48 89 e5             	mov    %rsp,%rbp
    6532:	48 83 ec 20          	sub    $0x20,%rsp
    6536:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    653a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    653e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6542:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6546:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    654a:	48 89 d6             	mov    %rdx,%rsi
    654d:	48 89 c7             	mov    %rax,%rdi
    6550:	e8 1b de ff ff       	call   4370 <_ZdlPvm@plt>
      }
    6555:	c9                   	leave
    6556:	c3                   	ret
    6557:	90                   	nop

0000000000006558 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6558:	55                   	push   %rbp
    6559:	48 89 e5             	mov    %rsp,%rbp
    655c:	48 83 ec 10          	sub    $0x10,%rsp
    6560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6564:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6568:	48 89 c7             	mov    %rax,%rdi
    656b:	e8 8a 00 00 00       	call   65fa <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6570:	c9                   	leave
    6571:	c3                   	ret

0000000000006572 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6572:	55                   	push   %rbp
    6573:	48 89 e5             	mov    %rsp,%rbp
    6576:	48 83 ec 10          	sub    $0x10,%rsp
    657a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    657e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    6582:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    658a:	ba 00 00 00 00       	mov    $0x0,%edx
    658f:	48 89 ce             	mov    %rcx,%rsi
    6592:	48 89 c7             	mov    %rax,%rdi
    6595:	e8 74 00 00 00       	call   660e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    659a:	c9                   	leave
    659b:	c3                   	ret

000000000000659c <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    659c:	55                   	push   %rbp
    659d:	48 89 e5             	mov    %rsp,%rbp
    65a0:	48 83 ec 20          	sub    $0x20,%rsp
    65a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    65ac:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    65b1:	74 40                	je     65f3 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    65b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65b7:	48 89 c7             	mov    %rax,%rdi
    65ba:	e8 60 ff ff ff       	call   651f <_ZSt11__addressofIcEPT_RS0_>
    65bf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    65c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65c7:	48 89 c7             	mov    %rax,%rdi
    65ca:	e8 87 00 00 00       	call   6656 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    65cf:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    65d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65d8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    65dc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    65e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65e4:	48 89 ce             	mov    %rcx,%rsi
    65e7:	48 89 c7             	mov    %rax,%rdi
    65ea:	e8 8a 00 00 00       	call   6679 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    65ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    65f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    65f7:	c9                   	leave
    65f8:	c3                   	ret
    65f9:	90                   	nop

00000000000065fa <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    65fa:	55                   	push   %rbp
    65fb:	48 89 e5             	mov    %rsp,%rbp
    65fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6602:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6609:	ff ff 7f 
      }
    660c:	5d                   	pop    %rbp
    660d:	c3                   	ret

000000000000660e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    660e:	55                   	push   %rbp
    660f:	48 89 e5             	mov    %rsp,%rbp
    6612:	48 83 ec 20          	sub    $0x20,%rsp
    6616:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    661a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    661e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6626:	48 89 c7             	mov    %rax,%rdi
    6629:	e8 cc ff ff ff       	call   65fa <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    662e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6632:	0f 92 c0             	setb   %al
    6635:	0f b6 c0             	movzbl %al,%eax
    6638:	48 85 c0             	test   %rax,%rax
    663b:	0f 95 c0             	setne  %al
    663e:	84 c0                	test   %al,%al
    6640:	74 05                	je     6647 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6642:	e8 99 da ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6647:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    664b:	48 89 c7             	mov    %rax,%rdi
    664e:	e8 0d dd ff ff       	call   4360 <_Znwm@plt>
    6653:	90                   	nop
      }
    6654:	c9                   	leave
    6655:	c3                   	ret

0000000000006656 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6656:	55                   	push   %rbp
    6657:	48 89 e5             	mov    %rsp,%rbp
    665a:	48 83 ec 10          	sub    $0x10,%rsp
    665e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6662:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6666:	48 89 c6             	mov    %rax,%rsi
    6669:	bf 01 00 00 00       	mov    $0x1,%edi
    666e:	e8 ad e7 ff ff       	call   4e20 <_ZnwmPv>
    6673:	c6 00 00             	movb   $0x0,(%rax)
    }
    6676:	90                   	nop
    6677:	c9                   	leave
    6678:	c3                   	ret

0000000000006679 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6679:	55                   	push   %rbp
    667a:	48 89 e5             	mov    %rsp,%rbp
    667d:	48 83 ec 20          	sub    $0x20,%rsp
    6681:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6685:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6689:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    668d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6691:	48 89 c7             	mov    %rax,%rdi
    6694:	e8 27 fc ff ff       	call   62c0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    6699:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    669d:	48 89 c7             	mov    %rax,%rdi
    66a0:	e8 8d e7 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    66a5:	48 89 c1             	mov    %rax,%rcx
    66a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66ac:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66b0:	48 89 ce             	mov    %rcx,%rsi
    66b3:	48 89 c7             	mov    %rax,%rdi
    66b6:	e8 02 00 00 00       	call   66bd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    66bb:	c9                   	leave
    66bc:	c3                   	ret

00000000000066bd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    66bd:	55                   	push   %rbp
    66be:	48 89 e5             	mov    %rsp,%rbp
    66c1:	48 83 ec 20          	sub    $0x20,%rsp
    66c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66c9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66cd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    66d1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    66d6:	75 06                	jne    66de <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    66d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66dc:	eb 2a                	jmp    6708 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    66de:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    66e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66e6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    66ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66f2:	48 89 ce             	mov    %rcx,%rsi
    66f5:	48 89 c7             	mov    %rax,%rdi
    66f8:	e8 0d 00 00 00       	call   670a <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    66fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6701:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6705:	48 01 d0             	add    %rdx,%rax
    }
    6708:	c9                   	leave
    6709:	c3                   	ret

000000000000670a <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    670a:	55                   	push   %rbp
    670b:	48 89 e5             	mov    %rsp,%rbp
    670e:	48 83 ec 20          	sub    $0x20,%rsp
    6712:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6716:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    671a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    671e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6722:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6726:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    672a:	48 89 ce             	mov    %rcx,%rsi
    672d:	48 89 c7             	mov    %rax,%rdi
    6730:	e8 03 00 00 00       	call   6738 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6735:	90                   	nop
    6736:	c9                   	leave
    6737:	c3                   	ret

0000000000006738 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6738:	55                   	push   %rbp
    6739:	48 89 e5             	mov    %rsp,%rbp
    673c:	48 83 ec 30          	sub    $0x30,%rsp
    6740:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6744:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6748:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    674c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6750:	0f b6 00             	movzbl (%rax),%eax
    6753:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6756:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    675a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    675e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6762:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6767:	74 19                	je     6782 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6769:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    676d:	0f b6 c8             	movzbl %al,%ecx
    6770:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6774:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6778:	89 ce                	mov    %ecx,%esi
    677a:	48 89 c7             	mov    %rax,%rdi
    677d:	e8 0e da ff ff       	call   4190 <memset@plt>
    }
    6782:	90                   	nop
    6783:	c9                   	leave
    6784:	c3                   	ret

0000000000006785 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    6785:	55                   	push   %rbp
    6786:	48 89 e5             	mov    %rsp,%rbp
    6789:	48 83 ec 10          	sub    $0x10,%rsp
    678d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6791:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6795:	48 89 c7             	mov    %rax,%rdi
    6798:	e8 33 d9 ff ff       	call   40d0 <glfwDestroyWindow@plt>
    679d:	90                   	nop
    679e:	c9                   	leave
    679f:	c3                   	ret

00000000000067a0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    67a0:	55                   	push   %rbp
    67a1:	48 89 e5             	mov    %rsp,%rbp
    67a4:	48 83 ec 10          	sub    $0x10,%rsp
    67a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    67b0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b8:	48 89 d6             	mov    %rdx,%rsi
    67bb:	48 89 c7             	mov    %rax,%rdi
    67be:	e8 bd db ff ff       	call   4380 <vkDestroyInstance@plt>
}
    67c3:	90                   	nop
    67c4:	c9                   	leave
    67c5:	c3                   	ret

00000000000067c6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    67c6:	55                   	push   %rbp
    67c7:	48 89 e5             	mov    %rsp,%rbp
    67ca:	48 83 ec 10          	sub    $0x10,%rsp
    67ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    67d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67de:	48 89 d6             	mov    %rdx,%rsi
    67e1:	48 89 c7             	mov    %rax,%rdi
    67e4:	e8 a7 da ff ff       	call   4290 <vkDestroyDevice@plt>
}
    67e9:	90                   	nop
    67ea:	c9                   	leave
    67eb:	c3                   	ret

00000000000067ec <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    67ec:	55                   	push   %rbp
    67ed:	48 89 e5             	mov    %rsp,%rbp
    67f0:	48 83 ec 20          	sub    $0x20,%rsp
    67f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    67fc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6800:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6804:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6808:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    680c:	48 89 ce             	mov    %rcx,%rsi
    680f:	48 89 c7             	mov    %rax,%rdi
    6812:	e8 89 de ff ff       	call   46a0 <vkDestroySurfaceKHR@plt>
}
    6817:	90                   	nop
    6818:	c9                   	leave
    6819:	c3                   	ret

000000000000681a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    681a:	55                   	push   %rbp
    681b:	48 89 e5             	mov    %rsp,%rbp
    681e:	48 83 ec 20          	sub    $0x20,%rsp
    6822:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6826:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    682a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    682e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6832:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    683a:	48 89 ce             	mov    %rcx,%rsi
    683d:	48 89 c7             	mov    %rax,%rdi
    6840:	e8 7b d8 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    6845:	90                   	nop
    6846:	c9                   	leave
    6847:	c3                   	ret

0000000000006848 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6848:	55                   	push   %rbp
    6849:	48 89 e5             	mov    %rsp,%rbp
    684c:	48 83 ec 20          	sub    $0x20,%rsp
    6850:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6854:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6858:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    685c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6860:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6864:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6868:	48 89 ce             	mov    %rcx,%rsi
    686b:	48 89 c7             	mov    %rax,%rdi
    686e:	e8 5d de ff ff       	call   46d0 <vkDestroyImageView@plt>
}
    6873:	90                   	nop
    6874:	c9                   	leave
    6875:	c3                   	ret

0000000000006876 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6876:	55                   	push   %rbp
    6877:	48 89 e5             	mov    %rsp,%rbp
    687a:	48 83 ec 20          	sub    $0x20,%rsp
    687e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6882:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6886:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    688a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    688e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6892:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6896:	48 89 ce             	mov    %rcx,%rsi
    6899:	48 89 c7             	mov    %rax,%rdi
    689c:	e8 ef db ff ff       	call   4490 <vkDestroyShaderModule@plt>
}
    68a1:	90                   	nop
    68a2:	c9                   	leave
    68a3:	c3                   	ret

00000000000068a4 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    68a4:	55                   	push   %rbp
    68a5:	48 89 e5             	mov    %rsp,%rbp
    68a8:	48 83 ec 20          	sub    $0x20,%rsp
    68ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    68b8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68bc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68c4:	48 89 ce             	mov    %rcx,%rsi
    68c7:	48 89 c7             	mov    %rax,%rdi
    68ca:	e8 41 db ff ff       	call   4410 <vkDestroyPipeline@plt>
}
    68cf:	90                   	nop
    68d0:	c9                   	leave
    68d1:	c3                   	ret

00000000000068d2 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    68d2:	55                   	push   %rbp
    68d3:	48 89 e5             	mov    %rsp,%rbp
    68d6:	48 83 ec 40          	sub    $0x40,%rsp
    68da:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    68de:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    68e2:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    68e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    68ea:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    68ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68f2:	48 89 c7             	mov    %rax,%rdi
    68f5:	e8 96 00 00 00       	call   6990 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    68fa:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    68fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6902:	48 89 c7             	mov    %rax,%rdi
    6905:	e8 ac 00 00 00       	call   69b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    690a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    690e:	eb 36                	jmp    6946 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    6910:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6914:	48 89 c7             	mov    %rax,%rdi
    6917:	e8 1e 01 00 00       	call   6a3a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    691c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    6920:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6924:	48 8b 08             	mov    (%rax),%rcx
    6927:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    692b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    692f:	48 89 ce             	mov    %rcx,%rsi
    6932:	48 89 c7             	mov    %rax,%rdi
    6935:	e8 d6 da ff ff       	call   4410 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    693a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    693e:	48 89 c7             	mov    %rax,%rdi
    6941:	e8 d4 00 00 00       	call   6a1a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    6946:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    694a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    694e:	48 89 d6             	mov    %rdx,%rsi
    6951:	48 89 c7             	mov    %rax,%rdi
    6954:	e8 86 00 00 00       	call   69df <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    6959:	84 c0                	test   %al,%al
    695b:	75 b3                	jne    6910 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    695d:	90                   	nop
    695e:	90                   	nop
    695f:	c9                   	leave
    6960:	c3                   	ret

0000000000006961 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    6961:	55                   	push   %rbp
    6962:	48 89 e5             	mov    %rsp,%rbp
    6965:	48 83 ec 20          	sub    $0x20,%rsp
    6969:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    696d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6971:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    6975:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6979:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    697d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6981:	48 89 ce             	mov    %rcx,%rsi
    6984:	48 89 c7             	mov    %rax,%rdi
    6987:	e8 f4 db ff ff       	call   4580 <vkDestroyCommandPool@plt>
}
    698c:	90                   	nop
    698d:	c9                   	leave
    698e:	c3                   	ret
    698f:	90                   	nop

0000000000006990 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6990:	55                   	push   %rbp
    6991:	48 89 e5             	mov    %rsp,%rbp
    6994:	48 83 ec 20          	sub    $0x20,%rsp
    6998:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    699c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    69a4:	48 89 d6             	mov    %rdx,%rsi
    69a7:	48 89 c7             	mov    %rax,%rdi
    69aa:	e8 9d 00 00 00       	call   6a4c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    69af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69b3:	c9                   	leave
    69b4:	c3                   	ret
    69b5:	90                   	nop

00000000000069b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    69b6:	55                   	push   %rbp
    69b7:	48 89 e5             	mov    %rsp,%rbp
    69ba:	48 83 ec 20          	sub    $0x20,%rsp
    69be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    69c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69c6:	48 8d 50 08          	lea    0x8(%rax),%rdx
    69ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    69ce:	48 89 d6             	mov    %rdx,%rsi
    69d1:	48 89 c7             	mov    %rax,%rdi
    69d4:	e8 73 00 00 00       	call   6a4c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    69d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69dd:	c9                   	leave
    69de:	c3                   	ret

00000000000069df <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    69df:	55                   	push   %rbp
    69e0:	48 89 e5             	mov    %rsp,%rbp
    69e3:	53                   	push   %rbx
    69e4:	48 83 ec 18          	sub    $0x18,%rsp
    69e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    69ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    69f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    69f4:	48 89 c7             	mov    %rax,%rdi
    69f7:	e8 6e 00 00 00       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    69fc:	48 8b 18             	mov    (%rax),%rbx
    69ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a03:	48 89 c7             	mov    %rax,%rdi
    6a06:	e8 5f 00 00 00       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6a0b:	48 8b 00             	mov    (%rax),%rax
    6a0e:	48 39 c3             	cmp    %rax,%rbx
    6a11:	0f 95 c0             	setne  %al
    6a14:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a18:	c9                   	leave
    6a19:	c3                   	ret

0000000000006a1a <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6a1a:	55                   	push   %rbp
    6a1b:	48 89 e5             	mov    %rsp,%rbp
    6a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a26:	48 8b 00             	mov    (%rax),%rax
    6a29:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a31:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6a34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6a38:	5d                   	pop    %rbp
    6a39:	c3                   	ret

0000000000006a3a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6a3a:	55                   	push   %rbp
    6a3b:	48 89 e5             	mov    %rsp,%rbp
    6a3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6a42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a46:	48 8b 00             	mov    (%rax),%rax
    6a49:	5d                   	pop    %rbp
    6a4a:	c3                   	ret
    6a4b:	90                   	nop

0000000000006a4c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6a4c:	55                   	push   %rbp
    6a4d:	48 89 e5             	mov    %rsp,%rbp
    6a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6a58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6a5c:	48 8b 10             	mov    (%rax),%rdx
    6a5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a63:	48 89 10             	mov    %rdx,(%rax)
    6a66:	90                   	nop
    6a67:	5d                   	pop    %rbp
    6a68:	c3                   	ret
    6a69:	90                   	nop

0000000000006a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6a6a:	55                   	push   %rbp
    6a6b:	48 89 e5             	mov    %rsp,%rbp
    6a6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a76:	5d                   	pop    %rbp
    6a77:	c3                   	ret

0000000000006a78 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6a78:	55                   	push   %rbp
    6a79:	48 89 e5             	mov    %rsp,%rbp
    6a7c:	53                   	push   %rbx
    6a7d:	48 83 ec 28          	sub    $0x28,%rsp
    6a81:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6a85:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6a89:	be 00 00 00 00       	mov    $0x0,%esi
    6a8e:	48 89 c7             	mov    %rax,%rdi
    6a91:	e8 aa d9 ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6a96:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6a99:	89 c3                	mov    %eax,%ebx
    6a9b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6a9f:	48 89 c7             	mov    %rax,%rdi
    6aa2:	e8 47 11 00 00       	call   7bee <_ZNSaI17VkLayerPropertiesEC1Ev>
    6aa7:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6aab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6aaf:	48 89 de             	mov    %rbx,%rsi
    6ab2:	48 89 c7             	mov    %rax,%rdi
    6ab5:	e8 6c 11 00 00       	call   7c26 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6aba:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6abe:	48 89 c7             	mov    %rax,%rdi
    6ac1:	e8 44 11 00 00       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6ac6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6aca:	48 89 c7             	mov    %rax,%rdi
    6acd:	e8 0e 12 00 00       	call   7ce0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6ad2:	48 89 c2             	mov    %rax,%rdx
    6ad5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6ad9:	48 89 d6             	mov    %rdx,%rsi
    6adc:	48 89 c7             	mov    %rax,%rdi
    6adf:	e8 5c d9 ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6ae4:	eb 34                	jmp    6b1a <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6ae6:	48 89 c3             	mov    %rax,%rbx
    6ae9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6aed:	48 89 c7             	mov    %rax,%rdi
    6af0:	e8 15 11 00 00       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
    6af5:	48 89 d8             	mov    %rbx,%rax
    6af8:	48 89 c7             	mov    %rax,%rdi
    6afb:	e8 b0 db ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    6b00:	48 89 c3             	mov    %rax,%rbx
    6b03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b07:	48 89 c7             	mov    %rax,%rdi
    6b0a:	e8 8d 11 00 00       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6b0f:	48 89 d8             	mov    %rbx,%rax
    6b12:	48 89 c7             	mov    %rax,%rdi
    6b15:	e8 96 db ff ff       	call   46b0 <_Unwind_Resume@plt>
    6b1a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b1e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b22:	c9                   	leave
    6b23:	c3                   	ret

0000000000006b24 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6b24:	55                   	push   %rbp
    6b25:	48 89 e5             	mov    %rsp,%rbp
    6b28:	41 54                	push   %r12
    6b2a:	53                   	push   %rbx
    6b2b:	48 83 ec 20          	sub    $0x20,%rsp
    6b2f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6b33:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6b37:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6b3b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6b3f:	ba 00 00 00 00       	mov    $0x0,%edx
    6b44:	48 89 ce             	mov    %rcx,%rsi
    6b47:	48 89 c7             	mov    %rax,%rdi
    6b4a:	e8 61 d7 ff ff       	call   42b0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6b4f:	85 c0                	test   %eax,%eax
    6b51:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6b54:	84 c0                	test   %al,%al
    6b56:	74 3b                	je     6b93 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6b58:	bf 10 00 00 00       	mov    $0x10,%edi
    6b5d:	e8 fe d5 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6b62:	48 89 c3             	mov    %rax,%rbx
    6b65:	48 8d 05 ec 13 01 00 	lea    0x113ec(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6b6c:	48 89 c6             	mov    %rax,%rsi
    6b6f:	48 89 df             	mov    %rbx,%rdi
    6b72:	e8 89 d5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6b77:	48 8b 05 2a f4 01 00 	mov    0x1f42a(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6b7e:	48 89 c2             	mov    %rax,%rdx
    6b81:	48 8d 05 b8 f1 01 00 	lea    0x1f1b8(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6b88:	48 89 c6             	mov    %rax,%rsi
    6b8b:	48 89 df             	mov    %rbx,%rdi
    6b8e:	e8 bd da ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6b93:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6b96:	89 c3                	mov    %eax,%ebx
    6b98:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b9c:	48 89 c7             	mov    %rax,%rdi
    6b9f:	e8 b8 11 00 00       	call   7d5c <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6ba4:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6ba8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bac:	48 89 de             	mov    %rbx,%rsi
    6baf:	48 89 c7             	mov    %rax,%rdi
    6bb2:	e8 dd 11 00 00       	call   7d94 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6bb7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6bbb:	48 89 c7             	mov    %rax,%rdi
    6bbe:	e8 b5 11 00 00       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6bc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6bc7:	48 89 c7             	mov    %rax,%rdi
    6bca:	e8 7f 12 00 00       	call   7e4e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6bcf:	48 89 c2             	mov    %rax,%rdx
    6bd2:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6bd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6bda:	48 89 ce             	mov    %rcx,%rsi
    6bdd:	48 89 c7             	mov    %rax,%rdi
    6be0:	e8 cb d6 ff ff       	call   42b0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6be5:	85 c0                	test   %eax,%eax
    6be7:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6bea:	84 c0                	test   %al,%al
    6bec:	0f 84 95 00 00 00    	je     6c87 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6bf2:	bf 10 00 00 00       	mov    $0x10,%edi
    6bf7:	e8 64 d5 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6bfc:	48 89 c3             	mov    %rax,%rbx
    6bff:	48 8d 05 52 13 01 00 	lea    0x11352(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6c06:	48 89 c6             	mov    %rax,%rsi
    6c09:	48 89 df             	mov    %rbx,%rdi
    6c0c:	e8 ef d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6c11:	48 8b 05 90 f3 01 00 	mov    0x1f390(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c18:	48 89 c2             	mov    %rax,%rdx
    6c1b:	48 8d 05 1e f1 01 00 	lea    0x1f11e(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c22:	48 89 c6             	mov    %rax,%rsi
    6c25:	48 89 df             	mov    %rbx,%rdi
    6c28:	e8 23 da ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6c2d:	49 89 c4             	mov    %rax,%r12
    6c30:	48 89 df             	mov    %rbx,%rdi
    6c33:	e8 f8 d5 ff ff       	call   4230 <__cxa_free_exception@plt>
    6c38:	4c 89 e0             	mov    %r12,%rax
    6c3b:	48 89 c7             	mov    %rax,%rdi
    6c3e:	e8 6d da ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6c43:	48 89 c3             	mov    %rax,%rbx
    6c46:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c4a:	48 89 c7             	mov    %rax,%rdi
    6c4d:	e8 26 11 00 00       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6c52:	48 89 d8             	mov    %rbx,%rax
    6c55:	48 89 c7             	mov    %rax,%rdi
    6c58:	e8 53 da ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6c5d:	49 89 c4             	mov    %rax,%r12
    6c60:	48 89 df             	mov    %rbx,%rdi
    6c63:	e8 c8 d5 ff ff       	call   4230 <__cxa_free_exception@plt>
    6c68:	4c 89 e3             	mov    %r12,%rbx
    6c6b:	eb 03                	jmp    6c70 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6c6d:	48 89 c3             	mov    %rax,%rbx
    6c70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c74:	48 89 c7             	mov    %rax,%rdi
    6c77:	e8 8e 11 00 00       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6c7c:	48 89 d8             	mov    %rbx,%rax
    6c7f:	48 89 c7             	mov    %rax,%rdi
    6c82:	e8 29 da ff ff       	call   46b0 <_Unwind_Resume@plt>
  return instanceExtensions;
    6c87:	90                   	nop
}
    6c88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c8c:	48 83 c4 20          	add    $0x20,%rsp
    6c90:	5b                   	pop    %rbx
    6c91:	41 5c                	pop    %r12
    6c93:	5d                   	pop    %rbp
    6c94:	c3                   	ret

0000000000006c95 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6c95:	55                   	push   %rbp
    6c96:	48 89 e5             	mov    %rsp,%rbp
    6c99:	41 54                	push   %r12
    6c9b:	53                   	push   %rbx
    6c9c:	48 83 ec 30          	sub    $0x30,%rsp
    6ca0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ca4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6ca8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6cac:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6cb0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6cb4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6cb8:	b9 00 00 00 00       	mov    $0x0,%ecx
    6cbd:	48 89 c7             	mov    %rax,%rdi
    6cc0:	e8 9b d8 ff ff       	call   4560 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6cc5:	85 c0                	test   %eax,%eax
    6cc7:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6cca:	84 c0                	test   %al,%al
    6ccc:	74 3b                	je     6d09 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6cce:	bf 10 00 00 00       	mov    $0x10,%edi
    6cd3:	e8 88 d4 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6cd8:	48 89 c3             	mov    %rax,%rbx
    6cdb:	48 8d 05 9e 12 01 00 	lea    0x1129e(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6ce2:	48 89 c6             	mov    %rax,%rsi
    6ce5:	48 89 df             	mov    %rbx,%rdi
    6ce8:	e8 13 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6ced:	48 8b 05 b4 f2 01 00 	mov    0x1f2b4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6cf4:	48 89 c2             	mov    %rax,%rdx
    6cf7:	48 8d 05 42 f0 01 00 	lea    0x1f042(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6cfe:	48 89 c6             	mov    %rax,%rsi
    6d01:	48 89 df             	mov    %rbx,%rdi
    6d04:	e8 47 d9 ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6d09:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6d0c:	89 c3                	mov    %eax,%ebx
    6d0e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d12:	48 89 c7             	mov    %rax,%rdi
    6d15:	e8 42 10 00 00       	call   7d5c <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6d1a:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d22:	48 89 de             	mov    %rbx,%rsi
    6d25:	48 89 c7             	mov    %rax,%rdi
    6d28:	e8 67 10 00 00       	call   7d94 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6d2d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d31:	48 89 c7             	mov    %rax,%rdi
    6d34:	e8 3f 10 00 00       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6d39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d3d:	48 89 c7             	mov    %rax,%rdi
    6d40:	e8 09 11 00 00       	call   7e4e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6d45:	48 89 c1             	mov    %rax,%rcx
    6d48:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6d4c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6d50:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d54:	48 89 c7             	mov    %rax,%rdi
    6d57:	e8 04 d8 ff ff       	call   4560 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6d5c:	85 c0                	test   %eax,%eax
    6d5e:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6d61:	84 c0                	test   %al,%al
    6d63:	0f 84 95 00 00 00    	je     6dfe <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6d69:	bf 10 00 00 00       	mov    $0x10,%edi
    6d6e:	e8 ed d3 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6d73:	48 89 c3             	mov    %rax,%rbx
    6d76:	48 8d 05 03 12 01 00 	lea    0x11203(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6d7d:	48 89 c6             	mov    %rax,%rsi
    6d80:	48 89 df             	mov    %rbx,%rdi
    6d83:	e8 78 d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6d88:	48 8b 05 19 f2 01 00 	mov    0x1f219(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d8f:	48 89 c2             	mov    %rax,%rdx
    6d92:	48 8d 05 a7 ef 01 00 	lea    0x1efa7(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d99:	48 89 c6             	mov    %rax,%rsi
    6d9c:	48 89 df             	mov    %rbx,%rdi
    6d9f:	e8 ac d8 ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6da4:	49 89 c4             	mov    %rax,%r12
    6da7:	48 89 df             	mov    %rbx,%rdi
    6daa:	e8 81 d4 ff ff       	call   4230 <__cxa_free_exception@plt>
    6daf:	4c 89 e0             	mov    %r12,%rax
    6db2:	48 89 c7             	mov    %rax,%rdi
    6db5:	e8 f6 d8 ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6dba:	48 89 c3             	mov    %rax,%rbx
    6dbd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6dc1:	48 89 c7             	mov    %rax,%rdi
    6dc4:	e8 af 0f 00 00       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6dc9:	48 89 d8             	mov    %rbx,%rax
    6dcc:	48 89 c7             	mov    %rax,%rdi
    6dcf:	e8 dc d8 ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6dd4:	49 89 c4             	mov    %rax,%r12
    6dd7:	48 89 df             	mov    %rbx,%rdi
    6dda:	e8 51 d4 ff ff       	call   4230 <__cxa_free_exception@plt>
    6ddf:	4c 89 e3             	mov    %r12,%rbx
    6de2:	eb 03                	jmp    6de7 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6de4:	48 89 c3             	mov    %rax,%rbx
    6de7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6deb:	48 89 c7             	mov    %rax,%rdi
    6dee:	e8 17 10 00 00       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6df3:	48 89 d8             	mov    %rbx,%rax
    6df6:	48 89 c7             	mov    %rax,%rdi
    6df9:	e8 b2 d8 ff ff       	call   46b0 <_Unwind_Resume@plt>
  return deviceExtensions;
    6dfe:	90                   	nop
}
    6dff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e03:	48 83 c4 30          	add    $0x30,%rsp
    6e07:	5b                   	pop    %rbx
    6e08:	41 5c                	pop    %r12
    6e0a:	5d                   	pop    %rbp
    6e0b:	c3                   	ret

0000000000006e0c <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6e0c:	55                   	push   %rbp
    6e0d:	48 89 e5             	mov    %rsp,%rbp
    6e10:	53                   	push   %rbx
    6e11:	48 83 ec 38          	sub    $0x38,%rsp
    6e15:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6e19:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6e1d:	48 89 c7             	mov    %rax,%rdi
    6e20:	e8 2b d4 ff ff       	call   4250 <glfwGetRequiredInstanceExtensions@plt>
    6e25:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6e29:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6e2c:	89 c3                	mov    %eax,%ebx
    6e2e:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6e32:	48 89 c7             	mov    %rax,%rdi
    6e35:	e8 90 10 00 00       	call   7eca <_ZNSaIPKcEC1Ev>
    6e3a:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6e3e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e42:	48 89 de             	mov    %rbx,%rsi
    6e45:	48 89 c7             	mov    %rax,%rdi
    6e48:	e8 b5 10 00 00       	call   7f02 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6e4d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6e51:	48 89 c7             	mov    %rax,%rdi
    6e54:	e8 8d 10 00 00       	call   7ee6 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6e59:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6e60:	eb 2e                	jmp    6e90 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6e62:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6e65:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6e6c:	00 
    6e6d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6e71:	48 01 d0             	add    %rdx,%rax
    6e74:	48 8b 18             	mov    (%rax),%rbx
    6e77:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6e7a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6e7e:	48 89 d6             	mov    %rdx,%rsi
    6e81:	48 89 c7             	mov    %rax,%rdi
    6e84:	e8 ef 10 00 00       	call   7f78 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6e89:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6e8c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6e90:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6e93:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6e96:	72 ca                	jb     6e62 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6e98:	eb 1a                	jmp    6eb4 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6e9a:	48 89 c3             	mov    %rax,%rbx
    6e9d:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6ea1:	48 89 c7             	mov    %rax,%rdi
    6ea4:	e8 3d 10 00 00       	call   7ee6 <_ZNSaIPKcED1Ev>
    6ea9:	48 89 d8             	mov    %rbx,%rax
    6eac:	48 89 c7             	mov    %rax,%rdi
    6eaf:	e8 fc d7 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    6eb4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6eb8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6ebc:	c9                   	leave
    6ebd:	c3                   	ret

0000000000006ebe <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    6ebe:	55                   	push   %rbp
    6ebf:	48 89 e5             	mov    %rsp,%rbp
    6ec2:	53                   	push   %rbx
    6ec3:	48 83 ec 28          	sub    $0x28,%rsp
    6ec7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6ecb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6ecf:	be 00 00 00 00       	mov    $0x0,%esi
    6ed4:	48 89 c7             	mov    %rax,%rdi
    6ed7:	e8 64 d5 ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6edc:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6edf:	89 c3                	mov    %eax,%ebx
    6ee1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6ee5:	48 89 c7             	mov    %rax,%rdi
    6ee8:	e8 01 0d 00 00       	call   7bee <_ZNSaI17VkLayerPropertiesEC1Ev>
    6eed:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6ef1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ef5:	48 89 de             	mov    %rbx,%rsi
    6ef8:	48 89 c7             	mov    %rax,%rdi
    6efb:	e8 26 0d 00 00       	call   7c26 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6f00:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f04:	48 89 c7             	mov    %rax,%rdi
    6f07:	e8 fe 0c 00 00       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6f0c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f10:	48 89 c7             	mov    %rax,%rdi
    6f13:	e8 c8 0d 00 00       	call   7ce0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6f18:	48 89 c2             	mov    %rax,%rdx
    6f1b:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f1f:	48 89 d6             	mov    %rdx,%rsi
    6f22:	48 89 c7             	mov    %rax,%rdi
    6f25:	e8 16 d5 ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6f2a:	eb 34                	jmp    6f60 <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f2c:	48 89 c3             	mov    %rax,%rbx
    6f2f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f33:	48 89 c7             	mov    %rax,%rdi
    6f36:	e8 cf 0c 00 00       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
    6f3b:	48 89 d8             	mov    %rbx,%rax
    6f3e:	48 89 c7             	mov    %rax,%rdi
    6f41:	e8 6a d7 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    6f46:	48 89 c3             	mov    %rax,%rbx
    6f49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f4d:	48 89 c7             	mov    %rax,%rdi
    6f50:	e8 47 0d 00 00       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6f55:	48 89 d8             	mov    %rbx,%rax
    6f58:	48 89 c7             	mov    %rax,%rdi
    6f5b:	e8 50 d7 ff ff       	call   46b0 <_Unwind_Resume@plt>
    6f60:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f64:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f68:	c9                   	leave
    6f69:	c3                   	ret

0000000000006f6a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    6f6a:	55                   	push   %rbp
    6f6b:	48 89 e5             	mov    %rsp,%rbp
    6f6e:	41 54                	push   %r12
    6f70:	53                   	push   %rbx
    6f71:	48 83 ec 20          	sub    $0x20,%rsp
    6f75:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6f79:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    6f7d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6f81:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6f85:	ba 00 00 00 00       	mov    $0x0,%edx
    6f8a:	48 89 ce             	mov    %rcx,%rsi
    6f8d:	48 89 c7             	mov    %rax,%rdi
    6f90:	e8 eb d1 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    6f95:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6f98:	85 c0                	test   %eax,%eax
    6f9a:	75 3b                	jne    6fd7 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    6f9c:	bf 10 00 00 00       	mov    $0x10,%edi
    6fa1:	e8 ba d1 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    6fa6:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    6fa9:	48 8d 05 f8 0f 01 00 	lea    0x10ff8(%rip),%rax        # 17fa8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    6fb0:	48 89 c6             	mov    %rax,%rsi
    6fb3:	48 89 df             	mov    %rbx,%rdi
    6fb6:	e8 45 d1 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    6fbb:	48 8b 05 e6 ef 01 00 	mov    0x1efe6(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6fc2:	48 89 c2             	mov    %rax,%rdx
    6fc5:	48 8d 05 74 ed 01 00 	lea    0x1ed74(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6fcc:	48 89 c6             	mov    %rax,%rsi
    6fcf:	48 89 df             	mov    %rbx,%rdi
    6fd2:	e8 79 d6 ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    6fd7:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6fda:	89 c3                	mov    %eax,%ebx
    6fdc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fe0:	48 89 c7             	mov    %rax,%rdi
    6fe3:	e8 fe 0f 00 00       	call   7fe6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    6fe8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6fec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6ff0:	48 89 de             	mov    %rbx,%rsi
    6ff3:	48 89 c7             	mov    %rax,%rdi
    6ff6:	e8 23 10 00 00       	call   801e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    6ffb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6fff:	48 89 c7             	mov    %rax,%rdi
    7002:	e8 fb 0f 00 00       	call   8002 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7007:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    700b:	48 89 c7             	mov    %rax,%rdi
    700e:	e8 c5 10 00 00       	call   80d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    7013:	48 89 c2             	mov    %rax,%rdx
    7016:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    701a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    701e:	48 89 ce             	mov    %rcx,%rsi
    7021:	48 89 c7             	mov    %rax,%rdi
    7024:	e8 57 d1 ff ff       	call   4180 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    7029:	85 c0                	test   %eax,%eax
    702b:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    702e:	84 c0                	test   %al,%al
    7030:	0f 84 95 00 00 00    	je     70cb <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    7036:	bf 10 00 00 00       	mov    $0x10,%edi
    703b:	e8 20 d1 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7040:	48 89 c3             	mov    %rax,%rbx
    7043:	48 8d 05 96 0f 01 00 	lea    0x10f96(%rip),%rax        # 17fe0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    704a:	48 89 c6             	mov    %rax,%rsi
    704d:	48 89 df             	mov    %rbx,%rdi
    7050:	e8 ab d0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7055:	48 8b 05 4c ef 01 00 	mov    0x1ef4c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    705c:	48 89 c2             	mov    %rax,%rdx
    705f:	48 8d 05 da ec 01 00 	lea    0x1ecda(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7066:	48 89 c6             	mov    %rax,%rsi
    7069:	48 89 df             	mov    %rbx,%rdi
    706c:	e8 df d5 ff ff       	call   4650 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    7071:	49 89 c4             	mov    %rax,%r12
    7074:	48 89 df             	mov    %rbx,%rdi
    7077:	e8 b4 d1 ff ff       	call   4230 <__cxa_free_exception@plt>
    707c:	4c 89 e0             	mov    %r12,%rax
    707f:	48 89 c7             	mov    %rax,%rdi
    7082:	e8 29 d6 ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7087:	48 89 c3             	mov    %rax,%rbx
    708a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    708e:	48 89 c7             	mov    %rax,%rdi
    7091:	e8 6c 0f 00 00       	call   8002 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7096:	48 89 d8             	mov    %rbx,%rax
    7099:	48 89 c7             	mov    %rax,%rdi
    709c:	e8 0f d6 ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    70a1:	49 89 c4             	mov    %rax,%r12
    70a4:	48 89 df             	mov    %rbx,%rdi
    70a7:	e8 84 d1 ff ff       	call   4230 <__cxa_free_exception@plt>
    70ac:	4c 89 e3             	mov    %r12,%rbx
    70af:	eb 03                	jmp    70b4 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    70b1:	48 89 c3             	mov    %rax,%rbx
    70b4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70b8:	48 89 c7             	mov    %rax,%rdi
    70bb:	e8 d4 0f 00 00       	call   8094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    70c0:	48 89 d8             	mov    %rbx,%rax
    70c3:	48 89 c7             	mov    %rax,%rdi
    70c6:	e8 e5 d5 ff ff       	call   46b0 <_Unwind_Resume@plt>
  return physicalDevices;
    70cb:	90                   	nop
}
    70cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    70d0:	48 83 c4 20          	add    $0x20,%rsp
    70d4:	5b                   	pop    %rbx
    70d5:	41 5c                	pop    %r12
    70d7:	5d                   	pop    %rbp
    70d8:	c3                   	ret

00000000000070d9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    70d9:	55                   	push   %rbp
    70da:	48 89 e5             	mov    %rsp,%rbp
    70dd:	48 83 ec 10          	sub    $0x10,%rsp
    70e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    70e5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    70e9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    70ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    70f1:	48 89 d6             	mov    %rdx,%rsi
    70f4:	48 89 c7             	mov    %rax,%rdi
    70f7:	e8 14 d0 ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    70fc:	90                   	nop
}
    70fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7101:	c9                   	leave
    7102:	c3                   	ret

0000000000007103 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    7103:	55                   	push   %rbp
    7104:	48 89 e5             	mov    %rsp,%rbp
    7107:	48 83 ec 20          	sub    $0x20,%rsp
    710b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    710f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    7113:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7117:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    711b:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    7121:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7125:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7129:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    712d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7131:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    7135:	48 89 d6             	mov    %rdx,%rsi
    7138:	48 89 c7             	mov    %rax,%rdi
    713b:	e8 e0 d1 ff ff       	call   4320 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    7140:	90                   	nop
}
    7141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7145:	c9                   	leave
    7146:	c3                   	ret

0000000000007147 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7147:	55                   	push   %rbp
    7148:	48 89 e5             	mov    %rsp,%rbp
    714b:	53                   	push   %rbx
    714c:	48 83 ec 28          	sub    $0x28,%rsp
    7150:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7154:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    7158:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    715c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7160:	ba 00 00 00 00       	mov    $0x0,%edx
    7165:	48 89 ce             	mov    %rcx,%rsi
    7168:	48 89 c7             	mov    %rax,%rdi
    716b:	e8 d0 d0 ff ff       	call   4240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    7170:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7173:	89 c3                	mov    %eax,%ebx
    7175:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7179:	48 89 c7             	mov    %rax,%rdi
    717c:	e8 c9 0f 00 00       	call   814a <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    7181:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7189:	48 89 de             	mov    %rbx,%rsi
    718c:	48 89 c7             	mov    %rax,%rdi
    718f:	e8 ee 0f 00 00       	call   8182 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    7194:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7198:	48 89 c7             	mov    %rax,%rdi
    719b:	e8 c6 0f 00 00       	call   8166 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    71a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71a4:	48 89 c7             	mov    %rax,%rdi
    71a7:	e8 90 10 00 00       	call   823c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    71ac:	48 89 c2             	mov    %rax,%rdx
    71af:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    71b3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71b7:	48 89 ce             	mov    %rcx,%rsi
    71ba:	48 89 c7             	mov    %rax,%rdi
    71bd:	e8 7e d0 ff ff       	call   4240 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    71c2:	eb 34                	jmp    71f8 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    71c4:	48 89 c3             	mov    %rax,%rbx
    71c7:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71cb:	48 89 c7             	mov    %rax,%rdi
    71ce:	e8 93 0f 00 00       	call   8166 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    71d3:	48 89 d8             	mov    %rbx,%rax
    71d6:	48 89 c7             	mov    %rax,%rdi
    71d9:	e8 d2 d4 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    71de:	48 89 c3             	mov    %rax,%rbx
    71e1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71e5:	48 89 c7             	mov    %rax,%rdi
    71e8:	e8 0b 10 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    71ed:	48 89 d8             	mov    %rbx,%rax
    71f0:	48 89 c7             	mov    %rax,%rdi
    71f3:	e8 b8 d4 ff ff       	call   46b0 <_Unwind_Resume@plt>
    71f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    71fc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7200:	c9                   	leave
    7201:	c3                   	ret

0000000000007202 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7202:	55                   	push   %rbp
    7203:	48 89 e5             	mov    %rsp,%rbp
    7206:	53                   	push   %rbx
    7207:	48 83 ec 68          	sub    $0x68,%rsp
    720b:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    720f:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7213:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7217:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    721b:	48 89 d6             	mov    %rdx,%rsi
    721e:	48 89 c7             	mov    %rax,%rdi
    7221:	e8 21 ff ff ff       	call   7147 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    7226:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    722a:	48 89 c7             	mov    %rax,%rdi
    722d:	e8 86 10 00 00       	call   82b8 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7232:	48 89 c3             	mov    %rax,%rbx
    7235:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7239:	48 89 c7             	mov    %rax,%rdi
    723c:	e8 a5 10 00 00       	call   82e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7241:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7245:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7249:	48 89 de             	mov    %rbx,%rsi
    724c:	48 89 c7             	mov    %rax,%rdi
    724f:	e8 ca 10 00 00       	call   831e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7254:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7258:	48 89 c7             	mov    %rax,%rdi
    725b:	e8 a2 10 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7260:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7267:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7268:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    726c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7270:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7274:	48 89 c7             	mov    %rax,%rdi
    7277:	e8 5c 11 00 00       	call   83d8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    727c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7280:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7284:	48 89 c7             	mov    %rax,%rdi
    7287:	e8 72 11 00 00       	call   83fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    728c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7290:	eb 4e                	jmp    72e0 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    7292:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7296:	48 89 c7             	mov    %rax,%rdi
    7299:	e8 e4 11 00 00       	call   8482 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    729e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    72a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72a6:	8b 00                	mov    (%rax),%eax
    72a8:	83 e0 01             	and    $0x1,%eax
    72ab:	85 c0                	test   %eax,%eax
    72ad:	74 25                	je     72d4 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    72af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    72b3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    72b7:	48 89 d6             	mov    %rdx,%rsi
    72ba:	48 89 c7             	mov    %rax,%rdi
    72bd:	e8 d2 11 00 00       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    72c2:	48 89 c2             	mov    %rax,%rdx
    72c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    72c9:	48 89 c6             	mov    %rax,%rsi
    72cc:	48 89 d7             	mov    %rdx,%rdi
    72cf:	e8 ea 11 00 00       	call   84be <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    72d4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    72d8:	48 89 c7             	mov    %rax,%rdi
    72db:	e8 82 11 00 00       	call   8462 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    72e0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    72e4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    72e8:	48 89 d6             	mov    %rdx,%rsi
    72eb:	48 89 c7             	mov    %rax,%rdi
    72ee:	e8 34 11 00 00       	call   8427 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    72f3:	84 c0                	test   %al,%al
    72f5:	75 9b                	jne    7292 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    72f7:	90                   	nop
}
    72f8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72fc:	48 89 c7             	mov    %rax,%rdi
    72ff:	e8 f4 0e 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    7304:	eb 26                	jmp    732c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7306:	48 89 c3             	mov    %rax,%rbx
    7309:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    730d:	48 89 c7             	mov    %rax,%rdi
    7310:	e8 ed 0f 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7315:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7319:	48 89 c7             	mov    %rax,%rdi
    731c:	e8 d7 0e 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7321:	48 89 d8             	mov    %rbx,%rax
    7324:	48 89 c7             	mov    %rax,%rdi
    7327:	e8 84 d3 ff ff       	call   46b0 <_Unwind_Resume@plt>
    732c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7330:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7334:	c9                   	leave
    7335:	c3                   	ret

0000000000007336 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    7336:	55                   	push   %rbp
    7337:	48 89 e5             	mov    %rsp,%rbp
    733a:	53                   	push   %rbx
    733b:	48 83 ec 68          	sub    $0x68,%rsp
    733f:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    7343:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7347:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    734b:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    734f:	48 89 d6             	mov    %rdx,%rsi
    7352:	48 89 c7             	mov    %rax,%rdi
    7355:	e8 ed fd ff ff       	call   7147 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    735a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    735e:	48 89 c7             	mov    %rax,%rdi
    7361:	e8 52 0f 00 00       	call   82b8 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7366:	48 89 c3             	mov    %rax,%rbx
    7369:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    736d:	48 89 c7             	mov    %rax,%rdi
    7370:	e8 71 0f 00 00       	call   82e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7375:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7379:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    737d:	48 89 de             	mov    %rbx,%rsi
    7380:	48 89 c7             	mov    %rax,%rdi
    7383:	e8 96 0f 00 00       	call   831e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7388:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    738c:	48 89 c7             	mov    %rax,%rdi
    738f:	e8 6e 0f 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7394:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    739b:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    739c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73a0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    73a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73a8:	48 89 c7             	mov    %rax,%rdi
    73ab:	e8 28 10 00 00       	call   83d8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    73b0:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    73b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    73b8:	48 89 c7             	mov    %rax,%rdi
    73bb:	e8 3e 10 00 00       	call   83fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    73c0:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    73c4:	eb 53                	jmp    7419 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    73c6:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    73ca:	48 89 c7             	mov    %rax,%rdi
    73cd:	e8 b0 10 00 00       	call   8482 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    73d2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    73d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73da:	8b 00                	mov    (%rax),%eax
    73dc:	83 e0 02             	and    $0x2,%eax
    73df:	85 c0                	test   %eax,%eax
    73e1:	74 25                	je     7408 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    73e3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    73e7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73eb:	48 89 d6             	mov    %rdx,%rsi
    73ee:	48 89 c7             	mov    %rax,%rdi
    73f1:	e8 9e 10 00 00       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    73f6:	48 89 c2             	mov    %rax,%rdx
    73f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    73fd:	48 89 c6             	mov    %rax,%rsi
    7400:	48 89 d7             	mov    %rdx,%rdi
    7403:	e8 b6 10 00 00       	call   84be <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7408:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    740d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7411:	48 89 c7             	mov    %rax,%rdi
    7414:	e8 49 10 00 00       	call   8462 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7419:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    741d:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7421:	48 89 d6             	mov    %rdx,%rsi
    7424:	48 89 c7             	mov    %rax,%rdi
    7427:	e8 fb 0f 00 00       	call   8427 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    742c:	84 c0                	test   %al,%al
    742e:	75 96                	jne    73c6 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    7430:	90                   	nop
}
    7431:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7435:	48 89 c7             	mov    %rax,%rdi
    7438:	e8 bb 0d 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    743d:	eb 26                	jmp    7465 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    743f:	48 89 c3             	mov    %rax,%rbx
    7442:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7446:	48 89 c7             	mov    %rax,%rdi
    7449:	e8 b4 0e 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    744e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7452:	48 89 c7             	mov    %rax,%rdi
    7455:	e8 9e 0d 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    745a:	48 89 d8             	mov    %rbx,%rax
    745d:	48 89 c7             	mov    %rax,%rdi
    7460:	e8 4b d2 ff ff       	call   46b0 <_Unwind_Resume@plt>
    7465:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7469:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    746d:	c9                   	leave
    746e:	c3                   	ret

000000000000746f <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    746f:	55                   	push   %rbp
    7470:	48 89 e5             	mov    %rsp,%rbp
    7473:	53                   	push   %rbx
    7474:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    747b:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    747f:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    7483:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    748a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    748e:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    7492:	48 89 d6             	mov    %rdx,%rsi
    7495:	48 89 c7             	mov    %rax,%rdi
    7498:	e8 aa fc ff ff       	call   7147 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    749d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74a1:	48 89 c7             	mov    %rax,%rdi
    74a4:	e8 0f 0e 00 00       	call   82b8 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    74a9:	48 89 c3             	mov    %rax,%rbx
    74ac:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74b0:	48 89 c7             	mov    %rax,%rdi
    74b3:	e8 2e 0e 00 00       	call   82e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    74b8:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    74bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    74c0:	48 89 de             	mov    %rbx,%rsi
    74c3:	48 89 c7             	mov    %rax,%rdi
    74c6:	e8 53 0e 00 00       	call   831e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    74cb:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74cf:	48 89 c7             	mov    %rax,%rdi
    74d2:	e8 2b 0e 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    74d7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    74de:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74e2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    74e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    74ea:	48 89 c7             	mov    %rax,%rdi
    74ed:	e8 e6 0e 00 00       	call   83d8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    74f2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    74f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    74fa:	48 89 c7             	mov    %rax,%rdi
    74fd:	e8 fc 0e 00 00       	call   83fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7502:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7506:	eb 6c                	jmp    7574 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    7508:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    750c:	48 89 c7             	mov    %rax,%rdi
    750f:	e8 6e 0f 00 00       	call   8482 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7514:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    7518:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    751f:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    7523:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    752a:	8b 75 ec             	mov    -0x14(%rbp),%esi
    752d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    7531:	48 89 c7             	mov    %rax,%rdi
    7534:	e8 a7 ce ff ff       	call   43e0 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    7539:	8b 45 9c             	mov    -0x64(%rbp),%eax
    753c:	85 c0                	test   %eax,%eax
    753e:	74 24                	je     7564 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    7540:	8b 55 ec             	mov    -0x14(%rbp),%edx
    7543:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7547:	48 89 d6             	mov    %rdx,%rsi
    754a:	48 89 c7             	mov    %rax,%rdi
    754d:	e8 42 0f 00 00       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7552:	48 89 c2             	mov    %rax,%rdx
    7555:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7559:	48 89 c6             	mov    %rax,%rsi
    755c:	48 89 d7             	mov    %rdx,%rdi
    755f:	e8 5a 0f 00 00       	call   84be <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7564:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7568:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    756c:	48 89 c7             	mov    %rax,%rdi
    756f:	e8 ee 0e 00 00       	call   8462 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7574:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7578:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    757c:	48 89 d6             	mov    %rdx,%rsi
    757f:	48 89 c7             	mov    %rax,%rdi
    7582:	e8 a0 0e 00 00       	call   8427 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7587:	84 c0                	test   %al,%al
    7589:	0f 85 79 ff ff ff    	jne    7508 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    758f:	90                   	nop
}
    7590:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7594:	48 89 c7             	mov    %rax,%rdi
    7597:	e8 5c 0c 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    759c:	eb 37                	jmp    75d5 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    759e:	48 89 c3             	mov    %rax,%rbx
    75a1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    75a5:	48 89 c7             	mov    %rax,%rdi
    75a8:	e8 55 0d 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    75ad:	eb 0f                	jmp    75be <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    75af:	48 89 c3             	mov    %rax,%rbx
    75b2:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75b6:	48 89 c7             	mov    %rax,%rdi
    75b9:	e8 d6 0d 00 00       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    75be:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    75c2:	48 89 c7             	mov    %rax,%rdi
    75c5:	e8 2e 0c 00 00       	call   81f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    75ca:	48 89 d8             	mov    %rbx,%rax
    75cd:	48 89 c7             	mov    %rax,%rdi
    75d0:	e8 db d0 ff ff       	call   46b0 <_Unwind_Resume@plt>
    75d5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75d9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    75dd:	c9                   	leave
    75de:	c3                   	ret

00000000000075df <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    75df:	55                   	push   %rbp
    75e0:	48 89 e5             	mov    %rsp,%rbp
    75e3:	41 54                	push   %r12
    75e5:	53                   	push   %rbx
    75e6:	48 83 ec 20          	sub    $0x20,%rsp
    75ea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    75ee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    75f2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    75f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    75fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    75fe:	0f 11 00             	movups %xmm0,(%rax)
    7601:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7605:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7609:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    760e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7612:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7616:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    761a:	48 89 ce             	mov    %rcx,%rsi
    761d:	48 89 c7             	mov    %rax,%rdi
    7620:	e8 bb cc ff ff       	call   42e0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    7625:	85 c0                	test   %eax,%eax
    7627:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    762a:	84 c0                	test   %al,%al
    762c:	74 51                	je     767f <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    762e:	bf 10 00 00 00       	mov    $0x10,%edi
    7633:	e8 28 cb ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7638:	48 89 c3             	mov    %rax,%rbx
    763b:	48 8d 05 c6 09 01 00 	lea    0x109c6(%rip),%rax        # 18008 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    7642:	48 89 c6             	mov    %rax,%rsi
    7645:	48 89 df             	mov    %rbx,%rdi
    7648:	e8 b3 ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    764d:	48 8b 05 54 e9 01 00 	mov    0x1e954(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7654:	48 89 c2             	mov    %rax,%rdx
    7657:	48 8d 05 e2 e6 01 00 	lea    0x1e6e2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    765e:	48 89 c6             	mov    %rax,%rsi
    7661:	48 89 df             	mov    %rbx,%rdi
    7664:	e8 e7 cf ff ff       	call   4650 <__cxa_throw@plt>
    7669:	49 89 c4             	mov    %rax,%r12
    766c:	48 89 df             	mov    %rbx,%rdi
    766f:	e8 bc cb ff ff       	call   4230 <__cxa_free_exception@plt>
    7674:	4c 89 e0             	mov    %r12,%rax
    7677:	48 89 c7             	mov    %rax,%rdi
    767a:	e8 31 d0 ff ff       	call   46b0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    767f:	90                   	nop
}
    7680:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7684:	48 83 c4 20          	add    $0x20,%rsp
    7688:	5b                   	pop    %rbx
    7689:	41 5c                	pop    %r12
    768b:	5d                   	pop    %rbp
    768c:	c3                   	ret

000000000000768d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    768d:	55                   	push   %rbp
    768e:	48 89 e5             	mov    %rsp,%rbp
    7691:	41 54                	push   %r12
    7693:	53                   	push   %rbx
    7694:	48 83 ec 30          	sub    $0x30,%rsp
    7698:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    769c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    76a0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    76a4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    76a8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    76ac:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    76b0:	b9 00 00 00 00       	mov    $0x0,%ecx
    76b5:	48 89 c7             	mov    %rax,%rdi
    76b8:	e8 33 ce ff ff       	call   44f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    76bd:	85 c0                	test   %eax,%eax
    76bf:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    76c2:	84 c0                	test   %al,%al
    76c4:	74 3b                	je     7701 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    76c6:	bf 10 00 00 00       	mov    $0x10,%edi
    76cb:	e8 90 ca ff ff       	call   4160 <__cxa_allocate_exception@plt>
    76d0:	48 89 c3             	mov    %rax,%rbx
    76d3:	48 8d 05 56 09 01 00 	lea    0x10956(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    76da:	48 89 c6             	mov    %rax,%rsi
    76dd:	48 89 df             	mov    %rbx,%rdi
    76e0:	e8 1b ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    76e5:	48 8b 05 bc e8 01 00 	mov    0x1e8bc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76ec:	48 89 c2             	mov    %rax,%rdx
    76ef:	48 8d 05 4a e6 01 00 	lea    0x1e64a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    76f6:	48 89 c6             	mov    %rax,%rsi
    76f9:	48 89 df             	mov    %rbx,%rdi
    76fc:	e8 4f cf ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    7701:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7704:	89 c3                	mov    %eax,%ebx
    7706:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    770a:	48 89 c7             	mov    %rax,%rdi
    770d:	e8 84 0e 00 00       	call   8596 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    7712:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7716:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    771a:	48 89 de             	mov    %rbx,%rsi
    771d:	48 89 c7             	mov    %rax,%rdi
    7720:	e8 a9 0e 00 00       	call   85ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    7725:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7729:	48 89 c7             	mov    %rax,%rdi
    772c:	e8 81 0e 00 00       	call   85b2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7731:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7735:	48 89 c7             	mov    %rax,%rdi
    7738:	e8 4b 0f 00 00       	call   8688 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    773d:	48 89 c1             	mov    %rax,%rcx
    7740:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7744:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7748:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    774c:	48 89 c7             	mov    %rax,%rdi
    774f:	e8 9c cd ff ff       	call   44f0 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    7754:	85 c0                	test   %eax,%eax
    7756:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    7759:	84 c0                	test   %al,%al
    775b:	0f 84 95 00 00 00    	je     77f6 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    7761:	bf 10 00 00 00       	mov    $0x10,%edi
    7766:	e8 f5 c9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    776b:	48 89 c3             	mov    %rax,%rbx
    776e:	48 8d 05 bb 08 01 00 	lea    0x108bb(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7775:	48 89 c6             	mov    %rax,%rsi
    7778:	48 89 df             	mov    %rbx,%rdi
    777b:	e8 80 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7780:	48 8b 05 21 e8 01 00 	mov    0x1e821(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7787:	48 89 c2             	mov    %rax,%rdx
    778a:	48 8d 05 af e5 01 00 	lea    0x1e5af(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7791:	48 89 c6             	mov    %rax,%rsi
    7794:	48 89 df             	mov    %rbx,%rdi
    7797:	e8 b4 ce ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    779c:	49 89 c4             	mov    %rax,%r12
    779f:	48 89 df             	mov    %rbx,%rdi
    77a2:	e8 89 ca ff ff       	call   4230 <__cxa_free_exception@plt>
    77a7:	4c 89 e0             	mov    %r12,%rax
    77aa:	48 89 c7             	mov    %rax,%rdi
    77ad:	e8 fe ce ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    77b2:	48 89 c3             	mov    %rax,%rbx
    77b5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    77b9:	48 89 c7             	mov    %rax,%rdi
    77bc:	e8 f1 0d 00 00       	call   85b2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    77c1:	48 89 d8             	mov    %rbx,%rax
    77c4:	48 89 c7             	mov    %rax,%rdi
    77c7:	e8 e4 ce ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    77cc:	49 89 c4             	mov    %rax,%r12
    77cf:	48 89 df             	mov    %rbx,%rdi
    77d2:	e8 59 ca ff ff       	call   4230 <__cxa_free_exception@plt>
    77d7:	4c 89 e3             	mov    %r12,%rbx
    77da:	eb 03                	jmp    77df <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    77dc:	48 89 c3             	mov    %rax,%rbx
    77df:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77e3:	48 89 c7             	mov    %rax,%rdi
    77e6:	e8 59 0e 00 00       	call   8644 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    77eb:	48 89 d8             	mov    %rbx,%rax
    77ee:	48 89 c7             	mov    %rax,%rdi
    77f1:	e8 ba ce ff ff       	call   46b0 <_Unwind_Resume@plt>
  return surfaceFormats;
    77f6:	90                   	nop
}
    77f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77fb:	48 83 c4 30          	add    $0x30,%rsp
    77ff:	5b                   	pop    %rbx
    7800:	41 5c                	pop    %r12
    7802:	5d                   	pop    %rbp
    7803:	c3                   	ret

0000000000007804 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7804:	55                   	push   %rbp
    7805:	48 89 e5             	mov    %rsp,%rbp
    7808:	41 54                	push   %r12
    780a:	53                   	push   %rbx
    780b:	48 83 ec 30          	sub    $0x30,%rsp
    780f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7813:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7817:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    781b:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    781f:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7823:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7827:	b9 00 00 00 00       	mov    $0x0,%ecx
    782c:	48 89 c7             	mov    %rax,%rdi
    782f:	e8 cc cc ff ff       	call   4500 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7834:	85 c0                	test   %eax,%eax
    7836:	0f 95 c0             	setne  %al
    7839:	84 c0                	test   %al,%al
    783b:	74 3b                	je     7878 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    783d:	bf 10 00 00 00       	mov    $0x10,%edi
    7842:	e8 19 c9 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7847:	48 89 c3             	mov    %rax,%rbx
    784a:	48 8d 05 07 08 01 00 	lea    0x10807(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7851:	48 89 c6             	mov    %rax,%rsi
    7854:	48 89 df             	mov    %rbx,%rdi
    7857:	e8 a4 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    785c:	48 8b 05 45 e7 01 00 	mov    0x1e745(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7863:	48 89 c2             	mov    %rax,%rdx
    7866:	48 8d 05 d3 e4 01 00 	lea    0x1e4d3(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    786d:	48 89 c6             	mov    %rax,%rsi
    7870:	48 89 df             	mov    %rbx,%rdi
    7873:	e8 d8 cd ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7878:	8b 45 e8             	mov    -0x18(%rbp),%eax
    787b:	89 c3                	mov    %eax,%ebx
    787d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7881:	48 89 c7             	mov    %rax,%rdi
    7884:	e8 71 0e 00 00       	call   86fa <_ZNSaI16VkPresentModeKHREC1Ev>
    7889:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    788d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7891:	48 89 de             	mov    %rbx,%rsi
    7894:	48 89 c7             	mov    %rax,%rdi
    7897:	e8 96 0e 00 00       	call   8732 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    789c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    78a0:	48 89 c7             	mov    %rax,%rdi
    78a3:	e8 6e 0e 00 00       	call   8716 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    78a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    78ac:	48 89 c7             	mov    %rax,%rdi
    78af:	e8 38 0f 00 00       	call   87ec <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    78b4:	48 89 c1             	mov    %rax,%rcx
    78b7:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    78bb:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    78bf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78c3:	48 89 c7             	mov    %rax,%rdi
    78c6:	e8 35 cc ff ff       	call   4500 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    78cb:	85 c0                	test   %eax,%eax
    78cd:	0f 95 c0             	setne  %al
    78d0:	84 c0                	test   %al,%al
    78d2:	0f 84 95 00 00 00    	je     796d <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    78d8:	bf 10 00 00 00       	mov    $0x10,%edi
    78dd:	e8 7e c8 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    78e2:	48 89 c3             	mov    %rax,%rbx
    78e5:	48 8d 05 6c 07 01 00 	lea    0x1076c(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    78ec:	48 89 c6             	mov    %rax,%rsi
    78ef:	48 89 df             	mov    %rbx,%rdi
    78f2:	e8 09 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    78f7:	48 8b 05 aa e6 01 00 	mov    0x1e6aa(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    78fe:	48 89 c2             	mov    %rax,%rdx
    7901:	48 8d 05 38 e4 01 00 	lea    0x1e438(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7908:	48 89 c6             	mov    %rax,%rsi
    790b:	48 89 df             	mov    %rbx,%rdi
    790e:	e8 3d cd ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7913:	49 89 c4             	mov    %rax,%r12
    7916:	48 89 df             	mov    %rbx,%rdi
    7919:	e8 12 c9 ff ff       	call   4230 <__cxa_free_exception@plt>
    791e:	4c 89 e0             	mov    %r12,%rax
    7921:	48 89 c7             	mov    %rax,%rdi
    7924:	e8 87 cd ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    7929:	48 89 c3             	mov    %rax,%rbx
    792c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7930:	48 89 c7             	mov    %rax,%rdi
    7933:	e8 de 0d 00 00       	call   8716 <_ZNSaI16VkPresentModeKHRED1Ev>
    7938:	48 89 d8             	mov    %rbx,%rax
    793b:	48 89 c7             	mov    %rax,%rdi
    793e:	e8 6d cd ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    7943:	49 89 c4             	mov    %rax,%r12
    7946:	48 89 df             	mov    %rbx,%rdi
    7949:	e8 e2 c8 ff ff       	call   4230 <__cxa_free_exception@plt>
    794e:	4c 89 e3             	mov    %r12,%rbx
    7951:	eb 03                	jmp    7956 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    7953:	48 89 c3             	mov    %rax,%rbx
    7956:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    795a:	48 89 c7             	mov    %rax,%rdi
    795d:	e8 46 0e 00 00       	call   87a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    7962:	48 89 d8             	mov    %rbx,%rax
    7965:	48 89 c7             	mov    %rax,%rdi
    7968:	e8 43 cd ff ff       	call   46b0 <_Unwind_Resume@plt>
  return presentModes;
    796d:	90                   	nop
}
    796e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7972:	48 83 c4 30          	add    $0x30,%rsp
    7976:	5b                   	pop    %rbx
    7977:	41 5c                	pop    %r12
    7979:	5d                   	pop    %rbp
    797a:	c3                   	ret

000000000000797b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    797b:	55                   	push   %rbp
    797c:	48 89 e5             	mov    %rsp,%rbp
    797f:	41 54                	push   %r12
    7981:	53                   	push   %rbx
    7982:	48 83 ec 30          	sub    $0x30,%rsp
    7986:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    798a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    798e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7992:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7996:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    799a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    799e:	b9 00 00 00 00       	mov    $0x0,%ecx
    79a3:	48 89 c7             	mov    %rax,%rdi
    79a6:	e8 05 c8 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    79ab:	85 c0                	test   %eax,%eax
    79ad:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    79b0:	84 c0                	test   %al,%al
    79b2:	74 3b                	je     79ef <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    79b4:	bf 10 00 00 00       	mov    $0x10,%edi
    79b9:	e8 a2 c7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    79be:	48 89 c3             	mov    %rax,%rbx
    79c1:	48 8d 05 c0 06 01 00 	lea    0x106c0(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    79c8:	48 89 c6             	mov    %rax,%rsi
    79cb:	48 89 df             	mov    %rbx,%rdi
    79ce:	e8 2d c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    79d3:	48 8b 05 ce e5 01 00 	mov    0x1e5ce(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    79da:	48 89 c2             	mov    %rax,%rdx
    79dd:	48 8d 05 5c e3 01 00 	lea    0x1e35c(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    79e4:	48 89 c6             	mov    %rax,%rsi
    79e7:	48 89 df             	mov    %rbx,%rdi
    79ea:	e8 61 cc ff ff       	call   4650 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    79ef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    79f2:	89 c3                	mov    %eax,%ebx
    79f4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79f8:	48 89 c7             	mov    %rax,%rdi
    79fb:	e8 5e 0e 00 00       	call   885e <_ZNSaIP9VkImage_TEC1Ev>
    7a00:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7a04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a08:	48 89 de             	mov    %rbx,%rsi
    7a0b:	48 89 c7             	mov    %rax,%rdi
    7a0e:	e8 83 0e 00 00       	call   8896 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7a13:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a17:	48 89 c7             	mov    %rax,%rdi
    7a1a:	e8 5b 0e 00 00       	call   887a <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a23:	48 89 c7             	mov    %rax,%rdi
    7a26:	e8 25 0f 00 00       	call   8950 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7a2b:	48 89 c1             	mov    %rax,%rcx
    7a2e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a32:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a36:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a3a:	48 89 c7             	mov    %rax,%rdi
    7a3d:	e8 6e c7 ff ff       	call   41b0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7a42:	85 c0                	test   %eax,%eax
    7a44:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a47:	84 c0                	test   %al,%al
    7a49:	0f 84 95 00 00 00    	je     7ae4 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7a4f:	bf 10 00 00 00       	mov    $0x10,%edi
    7a54:	e8 07 c7 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    7a59:	48 89 c3             	mov    %rax,%rbx
    7a5c:	48 8d 05 25 06 01 00 	lea    0x10625(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7a63:	48 89 c6             	mov    %rax,%rsi
    7a66:	48 89 df             	mov    %rbx,%rdi
    7a69:	e8 92 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7a6e:	48 8b 05 33 e5 01 00 	mov    0x1e533(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a75:	48 89 c2             	mov    %rax,%rdx
    7a78:	48 8d 05 c1 e2 01 00 	lea    0x1e2c1(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a7f:	48 89 c6             	mov    %rax,%rsi
    7a82:	48 89 df             	mov    %rbx,%rdi
    7a85:	e8 c6 cb ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7a8a:	49 89 c4             	mov    %rax,%r12
    7a8d:	48 89 df             	mov    %rbx,%rdi
    7a90:	e8 9b c7 ff ff       	call   4230 <__cxa_free_exception@plt>
    7a95:	4c 89 e0             	mov    %r12,%rax
    7a98:	48 89 c7             	mov    %rax,%rdi
    7a9b:	e8 10 cc ff ff       	call   46b0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7aa0:	48 89 c3             	mov    %rax,%rbx
    7aa3:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7aa7:	48 89 c7             	mov    %rax,%rdi
    7aaa:	e8 cb 0d 00 00       	call   887a <_ZNSaIP9VkImage_TED1Ev>
    7aaf:	48 89 d8             	mov    %rbx,%rax
    7ab2:	48 89 c7             	mov    %rax,%rdi
    7ab5:	e8 f6 cb ff ff       	call   46b0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7aba:	49 89 c4             	mov    %rax,%r12
    7abd:	48 89 df             	mov    %rbx,%rdi
    7ac0:	e8 6b c7 ff ff       	call   4230 <__cxa_free_exception@plt>
    7ac5:	4c 89 e3             	mov    %r12,%rbx
    7ac8:	eb 03                	jmp    7acd <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7aca:	48 89 c3             	mov    %rax,%rbx
    7acd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ad1:	48 89 c7             	mov    %rax,%rdi
    7ad4:	e8 33 0e 00 00       	call   890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7ad9:	48 89 d8             	mov    %rbx,%rax
    7adc:	48 89 c7             	mov    %rax,%rdi
    7adf:	e8 cc cb ff ff       	call   46b0 <_Unwind_Resume@plt>
  return swapchainImages;
    7ae4:	90                   	nop
}
    7ae5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7ae9:	48 83 c4 30          	add    $0x30,%rsp
    7aed:	5b                   	pop    %rbx
    7aee:	41 5c                	pop    %r12
    7af0:	5d                   	pop    %rbp
    7af1:	c3                   	ret

0000000000007af2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7af2:	55                   	push   %rbp
    7af3:	48 89 e5             	mov    %rsp,%rbp
    7af6:	48 83 ec 10          	sub    $0x10,%rsp
    7afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b02:	48 89 c7             	mov    %rax,%rdi
    7b05:	e8 00 01 00 00       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
    7b0a:	90                   	nop
    7b0b:	c9                   	leave
    7b0c:	c3                   	ret
    7b0d:	90                   	nop

0000000000007b0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7b0e:	55                   	push   %rbp
    7b0f:	48 89 e5             	mov    %rsp,%rbp
    7b12:	48 83 ec 10          	sub    $0x10,%rsp
    7b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b1e:	48 89 c7             	mov    %rax,%rdi
    7b21:	e8 52 02 00 00       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7b26:	90                   	nop
    7b27:	c9                   	leave
    7b28:	c3                   	ret
    7b29:	90                   	nop

0000000000007b2a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7b2a:	55                   	push   %rbp
    7b2b:	48 89 e5             	mov    %rsp,%rbp
    7b2e:	48 83 ec 10          	sub    $0x10,%rsp
    7b32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b3a:	48 89 c7             	mov    %rax,%rdi
    7b3d:	e8 a4 03 00 00       	call   7ee6 <_ZNSaIPKcED1Ev>
    7b42:	90                   	nop
    7b43:	c9                   	leave
    7b44:	c3                   	ret
    7b45:	90                   	nop

0000000000007b46 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7b46:	55                   	push   %rbp
    7b47:	48 89 e5             	mov    %rsp,%rbp
    7b4a:	48 83 ec 10          	sub    $0x10,%rsp
    7b4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b56:	48 89 c7             	mov    %rax,%rdi
    7b59:	e8 a4 04 00 00       	call   8002 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7b5e:	90                   	nop
    7b5f:	c9                   	leave
    7b60:	c3                   	ret
    7b61:	90                   	nop

0000000000007b62 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7b62:	55                   	push   %rbp
    7b63:	48 89 e5             	mov    %rsp,%rbp
    7b66:	48 83 ec 10          	sub    $0x10,%rsp
    7b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b72:	48 89 c7             	mov    %rax,%rdi
    7b75:	e8 ec 05 00 00       	call   8166 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7b7a:	90                   	nop
    7b7b:	c9                   	leave
    7b7c:	c3                   	ret
    7b7d:	90                   	nop

0000000000007b7e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7b7e:	55                   	push   %rbp
    7b7f:	48 89 e5             	mov    %rsp,%rbp
    7b82:	48 83 ec 10          	sub    $0x10,%rsp
    7b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b8e:	48 89 c7             	mov    %rax,%rdi
    7b91:	e8 6c 07 00 00       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7b96:	90                   	nop
    7b97:	c9                   	leave
    7b98:	c3                   	ret
    7b99:	90                   	nop

0000000000007b9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7b9a:	55                   	push   %rbp
    7b9b:	48 89 e5             	mov    %rsp,%rbp
    7b9e:	48 83 ec 10          	sub    $0x10,%rsp
    7ba2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ba6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7baa:	48 89 c7             	mov    %rax,%rdi
    7bad:	e8 00 0a 00 00       	call   85b2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7bb2:	90                   	nop
    7bb3:	c9                   	leave
    7bb4:	c3                   	ret
    7bb5:	90                   	nop

0000000000007bb6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7bb6:	55                   	push   %rbp
    7bb7:	48 89 e5             	mov    %rsp,%rbp
    7bba:	48 83 ec 10          	sub    $0x10,%rsp
    7bbe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bc2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bc6:	48 89 c7             	mov    %rax,%rdi
    7bc9:	e8 48 0b 00 00       	call   8716 <_ZNSaI16VkPresentModeKHRED1Ev>
    7bce:	90                   	nop
    7bcf:	c9                   	leave
    7bd0:	c3                   	ret
    7bd1:	90                   	nop

0000000000007bd2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7bd2:	55                   	push   %rbp
    7bd3:	48 89 e5             	mov    %rsp,%rbp
    7bd6:	48 83 ec 10          	sub    $0x10,%rsp
    7bda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7be2:	48 89 c7             	mov    %rax,%rdi
    7be5:	e8 90 0c 00 00       	call   887a <_ZNSaIP9VkImage_TED1Ev>
    7bea:	90                   	nop
    7beb:	c9                   	leave
    7bec:	c3                   	ret
    7bed:	90                   	nop

0000000000007bee <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7bee:	55                   	push   %rbp
    7bef:	48 89 e5             	mov    %rsp,%rbp
    7bf2:	48 83 ec 10          	sub    $0x10,%rsp
    7bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bfe:	48 89 c7             	mov    %rax,%rdi
    7c01:	e8 bc 0d 00 00       	call   89c2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7c06:	90                   	nop
    7c07:	c9                   	leave
    7c08:	c3                   	ret
    7c09:	90                   	nop

0000000000007c0a <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7c0a:	55                   	push   %rbp
    7c0b:	48 89 e5             	mov    %rsp,%rbp
    7c0e:	48 83 ec 10          	sub    $0x10,%rsp
    7c12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c1a:	48 89 c7             	mov    %rax,%rdi
    7c1d:	e8 ac 0d 00 00       	call   89ce <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7c22:	90                   	nop
    7c23:	c9                   	leave
    7c24:	c3                   	ret
    7c25:	90                   	nop

0000000000007c26 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7c26:	55                   	push   %rbp
    7c27:	48 89 e5             	mov    %rsp,%rbp
    7c2a:	53                   	push   %rbx
    7c2b:	48 83 ec 28          	sub    $0x28,%rsp
    7c2f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7c33:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7c37:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7c3b:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7c3f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7c43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7c47:	48 89 d6             	mov    %rdx,%rsi
    7c4a:	48 89 c7             	mov    %rax,%rdi
    7c4d:	e8 87 0d 00 00       	call   89d9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7c52:	48 89 c1             	mov    %rax,%rcx
    7c55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7c59:	48 89 c2             	mov    %rax,%rdx
    7c5c:	48 89 ce             	mov    %rcx,%rsi
    7c5f:	48 89 df             	mov    %rbx,%rdi
    7c62:	e8 d3 0d 00 00       	call   8a3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7c67:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7c6b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c6f:	48 89 d6             	mov    %rdx,%rsi
    7c72:	48 89 c7             	mov    %rax,%rdi
    7c75:	e8 1e 0e 00 00       	call   8a98 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7c7a:	eb 1a                	jmp    7c96 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7c7c:	48 89 c3             	mov    %rax,%rbx
    7c7f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7c83:	48 89 c7             	mov    %rax,%rdi
    7c86:	e8 79 00 00 00       	call   7d04 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7c8b:	48 89 d8             	mov    %rbx,%rax
    7c8e:	48 89 c7             	mov    %rax,%rdi
    7c91:	e8 1a ca ff ff       	call   46b0 <_Unwind_Resume@plt>
    7c96:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7c9a:	c9                   	leave
    7c9b:	c3                   	ret

0000000000007c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7c9c:	55                   	push   %rbp
    7c9d:	48 89 e5             	mov    %rsp,%rbp
    7ca0:	48 83 ec 10          	sub    $0x10,%rsp
    7ca4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cac:	48 89 c7             	mov    %rax,%rdi
    7caf:	e8 24 0e 00 00       	call   8ad8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7cb4:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cbb:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7cbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cc3:	48 8b 00             	mov    (%rax),%rax
    7cc6:	48 89 ce             	mov    %rcx,%rsi
    7cc9:	48 89 c7             	mov    %rax,%rdi
    7ccc:	e8 15 0e 00 00       	call   8ae6 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7cd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cd5:	48 89 c7             	mov    %rax,%rdi
    7cd8:	e8 27 00 00 00       	call   7d04 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7cdd:	90                   	nop
    7cde:	c9                   	leave
    7cdf:	c3                   	ret

0000000000007ce0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7ce0:	55                   	push   %rbp
    7ce1:	48 89 e5             	mov    %rsp,%rbp
    7ce4:	48 83 ec 10          	sub    $0x10,%rsp
    7ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf0:	48 8b 10             	mov    (%rax),%rdx
    7cf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7cf7:	48 89 d6             	mov    %rdx,%rsi
    7cfa:	48 89 c7             	mov    %rax,%rdi
    7cfd:	e8 0e 0e 00 00       	call   8b10 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7d02:	c9                   	leave
    7d03:	c3                   	ret

0000000000007d04 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7d04:	55                   	push   %rbp
    7d05:	48 89 e5             	mov    %rsp,%rbp
    7d08:	48 83 ec 10          	sub    $0x10,%rsp
    7d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7d10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d14:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d1c:	48 8b 00             	mov    (%rax),%rax
    7d1f:	48 29 c2             	sub    %rax,%rdx
    7d22:	48 c1 fa 03          	sar    $0x3,%rdx
    7d26:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7d2d:	fc c0 0f 
    7d30:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7d34:	48 89 c2             	mov    %rax,%rdx
    7d37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d3b:	48 8b 08             	mov    (%rax),%rcx
    7d3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d42:	48 89 ce             	mov    %rcx,%rsi
    7d45:	48 89 c7             	mov    %rax,%rdi
    7d48:	e8 fb 0d 00 00       	call   8b48 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d51:	48 89 c7             	mov    %rax,%rdi
    7d54:	e8 99 fd ff ff       	call   7af2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7d59:	90                   	nop
    7d5a:	c9                   	leave
    7d5b:	c3                   	ret

0000000000007d5c <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7d5c:	55                   	push   %rbp
    7d5d:	48 89 e5             	mov    %rsp,%rbp
    7d60:	48 83 ec 10          	sub    $0x10,%rsp
    7d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d6c:	48 89 c7             	mov    %rax,%rdi
    7d6f:	e8 0a 0e 00 00       	call   8b7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7d74:	90                   	nop
    7d75:	c9                   	leave
    7d76:	c3                   	ret
    7d77:	90                   	nop

0000000000007d78 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7d78:	55                   	push   %rbp
    7d79:	48 89 e5             	mov    %rsp,%rbp
    7d7c:	48 83 ec 10          	sub    $0x10,%rsp
    7d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7d84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d88:	48 89 c7             	mov    %rax,%rdi
    7d8b:	e8 fa 0d 00 00       	call   8b8a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7d90:	90                   	nop
    7d91:	c9                   	leave
    7d92:	c3                   	ret
    7d93:	90                   	nop

0000000000007d94 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7d94:	55                   	push   %rbp
    7d95:	48 89 e5             	mov    %rsp,%rbp
    7d98:	53                   	push   %rbx
    7d99:	48 83 ec 28          	sub    $0x28,%rsp
    7d9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7da1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7da5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7da9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7dad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7db1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7db5:	48 89 d6             	mov    %rdx,%rsi
    7db8:	48 89 c7             	mov    %rax,%rdi
    7dbb:	e8 d5 0d 00 00       	call   8b95 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7dc0:	48 89 c1             	mov    %rax,%rcx
    7dc3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7dc7:	48 89 c2             	mov    %rax,%rdx
    7dca:	48 89 ce             	mov    %rcx,%rsi
    7dcd:	48 89 df             	mov    %rbx,%rdi
    7dd0:	e8 21 0e 00 00       	call   8bf6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7dd5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7dd9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ddd:	48 89 d6             	mov    %rdx,%rsi
    7de0:	48 89 c7             	mov    %rax,%rdi
    7de3:	e8 6c 0e 00 00       	call   8c54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7de8:	eb 1a                	jmp    7e04 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7dea:	48 89 c3             	mov    %rax,%rbx
    7ded:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7df1:	48 89 c7             	mov    %rax,%rdi
    7df4:	e8 79 00 00 00       	call   7e72 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7df9:	48 89 d8             	mov    %rbx,%rax
    7dfc:	48 89 c7             	mov    %rax,%rdi
    7dff:	e8 ac c8 ff ff       	call   46b0 <_Unwind_Resume@plt>
    7e04:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e08:	c9                   	leave
    7e09:	c3                   	ret

0000000000007e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7e0a:	55                   	push   %rbp
    7e0b:	48 89 e5             	mov    %rsp,%rbp
    7e0e:	48 83 ec 10          	sub    $0x10,%rsp
    7e12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7e16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e1a:	48 89 c7             	mov    %rax,%rdi
    7e1d:	e8 72 0e 00 00       	call   8c94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7e22:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7e25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e29:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7e2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e31:	48 8b 00             	mov    (%rax),%rax
    7e34:	48 89 ce             	mov    %rcx,%rsi
    7e37:	48 89 c7             	mov    %rax,%rdi
    7e3a:	e8 63 0e 00 00       	call   8ca2 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7e3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e43:	48 89 c7             	mov    %rax,%rdi
    7e46:	e8 27 00 00 00       	call   7e72 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7e4b:	90                   	nop
    7e4c:	c9                   	leave
    7e4d:	c3                   	ret

0000000000007e4e <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7e4e:	55                   	push   %rbp
    7e4f:	48 89 e5             	mov    %rsp,%rbp
    7e52:	48 83 ec 10          	sub    $0x10,%rsp
    7e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e5e:	48 8b 10             	mov    (%rax),%rdx
    7e61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e65:	48 89 d6             	mov    %rdx,%rsi
    7e68:	48 89 c7             	mov    %rax,%rdi
    7e6b:	e8 5c 0e 00 00       	call   8ccc <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7e70:	c9                   	leave
    7e71:	c3                   	ret

0000000000007e72 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7e72:	55                   	push   %rbp
    7e73:	48 89 e5             	mov    %rsp,%rbp
    7e76:	48 83 ec 10          	sub    $0x10,%rsp
    7e7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7e7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e82:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e8a:	48 8b 00             	mov    (%rax),%rax
    7e8d:	48 29 c2             	sub    %rax,%rdx
    7e90:	48 c1 fa 02          	sar    $0x2,%rdx
    7e94:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7e9b:	fc c0 0f 
    7e9e:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7ea2:	48 89 c2             	mov    %rax,%rdx
    7ea5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea9:	48 8b 08             	mov    (%rax),%rcx
    7eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eb0:	48 89 ce             	mov    %rcx,%rsi
    7eb3:	48 89 c7             	mov    %rax,%rdi
    7eb6:	e8 49 0e 00 00       	call   8d04 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ebf:	48 89 c7             	mov    %rax,%rdi
    7ec2:	e8 47 fc ff ff       	call   7b0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    7ec7:	90                   	nop
    7ec8:	c9                   	leave
    7ec9:	c3                   	ret

0000000000007eca <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7eca:	55                   	push   %rbp
    7ecb:	48 89 e5             	mov    %rsp,%rbp
    7ece:	48 83 ec 10          	sub    $0x10,%rsp
    7ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eda:	48 89 c7             	mov    %rax,%rdi
    7edd:	e8 58 0e 00 00       	call   8d3a <_ZNSt15__new_allocatorIPKcEC1Ev>
    7ee2:	90                   	nop
    7ee3:	c9                   	leave
    7ee4:	c3                   	ret
    7ee5:	90                   	nop

0000000000007ee6 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7ee6:	55                   	push   %rbp
    7ee7:	48 89 e5             	mov    %rsp,%rbp
    7eea:	48 83 ec 10          	sub    $0x10,%rsp
    7eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ef6:	48 89 c7             	mov    %rax,%rdi
    7ef9:	e8 48 0e 00 00       	call   8d46 <_ZNSt15__new_allocatorIPKcED1Ev>
    7efe:	90                   	nop
    7eff:	c9                   	leave
    7f00:	c3                   	ret
    7f01:	90                   	nop

0000000000007f02 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7f02:	55                   	push   %rbp
    7f03:	48 89 e5             	mov    %rsp,%rbp
    7f06:	53                   	push   %rbx
    7f07:	48 83 ec 28          	sub    $0x28,%rsp
    7f0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f13:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f17:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f1b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f23:	48 89 d6             	mov    %rdx,%rsi
    7f26:	48 89 c7             	mov    %rax,%rdi
    7f29:	e8 23 0e 00 00       	call   8d51 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    7f2e:	48 89 c1             	mov    %rax,%rcx
    7f31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7f35:	48 89 c2             	mov    %rax,%rdx
    7f38:	48 89 ce             	mov    %rcx,%rsi
    7f3b:	48 89 df             	mov    %rbx,%rdi
    7f3e:	e8 6f 0e 00 00       	call   8db2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7f43:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f4b:	48 89 d6             	mov    %rdx,%rsi
    7f4e:	48 89 c7             	mov    %rax,%rdi
    7f51:	e8 ba 0e 00 00       	call   8e10 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    7f56:	eb 1a                	jmp    7f72 <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    7f58:	48 89 c3             	mov    %rax,%rbx
    7f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7f5f:	48 89 c7             	mov    %rax,%rdi
    7f62:	e8 31 00 00 00       	call   7f98 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    7f67:	48 89 d8             	mov    %rbx,%rax
    7f6a:	48 89 c7             	mov    %rax,%rdi
    7f6d:	e8 3e c7 ff ff       	call   46b0 <_Unwind_Resume@plt>
    7f72:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7f76:	c9                   	leave
    7f77:	c3                   	ret

0000000000007f78 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7f78:	55                   	push   %rbp
    7f79:	48 89 e5             	mov    %rsp,%rbp
    7f7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f80:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    7f84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f88:	48 8b 00             	mov    (%rax),%rax
    7f8b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    7f8f:	48 c1 e2 03          	shl    $0x3,%rdx
    7f93:	48 01 d0             	add    %rdx,%rax
      }
    7f96:	5d                   	pop    %rbp
    7f97:	c3                   	ret

0000000000007f98 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7f98:	55                   	push   %rbp
    7f99:	48 89 e5             	mov    %rsp,%rbp
    7f9c:	48 83 ec 10          	sub    $0x10,%rsp
    7fa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7fa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fa8:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7fac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fb0:	48 8b 00             	mov    (%rax),%rax
    7fb3:	48 29 c2             	sub    %rax,%rdx
    7fb6:	48 89 d0             	mov    %rdx,%rax
    7fb9:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    7fbd:	48 89 c2             	mov    %rax,%rdx
    7fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fc4:	48 8b 08             	mov    (%rax),%rcx
    7fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fcb:	48 89 ce             	mov    %rcx,%rsi
    7fce:	48 89 c7             	mov    %rax,%rdi
    7fd1:	e8 ae 0e 00 00       	call   8e84 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    7fd6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7fda:	48 89 c7             	mov    %rax,%rdi
    7fdd:	e8 48 fb ff ff       	call   7b2a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    7fe2:	90                   	nop
    7fe3:	c9                   	leave
    7fe4:	c3                   	ret
    7fe5:	90                   	nop

0000000000007fe6 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7fe6:	55                   	push   %rbp
    7fe7:	48 89 e5             	mov    %rsp,%rbp
    7fea:	48 83 ec 10          	sub    $0x10,%rsp
    7fee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ff6:	48 89 c7             	mov    %rax,%rdi
    7ff9:	e8 bc 0e 00 00       	call   8eba <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    7ffe:	90                   	nop
    7fff:	c9                   	leave
    8000:	c3                   	ret
    8001:	90                   	nop

0000000000008002 <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8002:	55                   	push   %rbp
    8003:	48 89 e5             	mov    %rsp,%rbp
    8006:	48 83 ec 10          	sub    $0x10,%rsp
    800a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    800e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8012:	48 89 c7             	mov    %rax,%rdi
    8015:	e8 ac 0e 00 00       	call   8ec6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    801a:	90                   	nop
    801b:	c9                   	leave
    801c:	c3                   	ret
    801d:	90                   	nop

000000000000801e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    801e:	55                   	push   %rbp
    801f:	48 89 e5             	mov    %rsp,%rbp
    8022:	53                   	push   %rbx
    8023:	48 83 ec 28          	sub    $0x28,%rsp
    8027:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    802b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    802f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8033:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8037:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    803b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    803f:	48 89 d6             	mov    %rdx,%rsi
    8042:	48 89 c7             	mov    %rax,%rdi
    8045:	e8 87 0e 00 00       	call   8ed1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    804a:	48 89 c1             	mov    %rax,%rcx
    804d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8051:	48 89 c2             	mov    %rax,%rdx
    8054:	48 89 ce             	mov    %rcx,%rsi
    8057:	48 89 df             	mov    %rbx,%rdi
    805a:	e8 d3 0e 00 00       	call   8f32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    805f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8063:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8067:	48 89 d6             	mov    %rdx,%rsi
    806a:	48 89 c7             	mov    %rax,%rdi
    806d:	e8 1e 0f 00 00       	call   8f90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    8072:	eb 1a                	jmp    808e <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    8074:	48 89 c3             	mov    %rax,%rbx
    8077:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    807b:	48 89 c7             	mov    %rax,%rdi
    807e:	e8 79 00 00 00       	call   80fc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8083:	48 89 d8             	mov    %rbx,%rax
    8086:	48 89 c7             	mov    %rax,%rdi
    8089:	e8 22 c6 ff ff       	call   46b0 <_Unwind_Resume@plt>
    808e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8092:	c9                   	leave
    8093:	c3                   	ret

0000000000008094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8094:	55                   	push   %rbp
    8095:	48 89 e5             	mov    %rsp,%rbp
    8098:	48 83 ec 10          	sub    $0x10,%rsp
    809c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    80a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80a4:	48 89 c7             	mov    %rax,%rdi
    80a7:	e8 24 0f 00 00       	call   8fd0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    80ac:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    80af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80b3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    80b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80bb:	48 8b 00             	mov    (%rax),%rax
    80be:	48 89 ce             	mov    %rcx,%rsi
    80c1:	48 89 c7             	mov    %rax,%rdi
    80c4:	e8 15 0f 00 00       	call   8fde <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    80c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80cd:	48 89 c7             	mov    %rax,%rdi
    80d0:	e8 27 00 00 00       	call   80fc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    80d5:	90                   	nop
    80d6:	c9                   	leave
    80d7:	c3                   	ret

00000000000080d8 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    80d8:	55                   	push   %rbp
    80d9:	48 89 e5             	mov    %rsp,%rbp
    80dc:	48 83 ec 10          	sub    $0x10,%rsp
    80e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    80e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80e8:	48 8b 10             	mov    (%rax),%rdx
    80eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    80ef:	48 89 d6             	mov    %rdx,%rsi
    80f2:	48 89 c7             	mov    %rax,%rdi
    80f5:	e8 0e 0f 00 00       	call   9008 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    80fa:	c9                   	leave
    80fb:	c3                   	ret

00000000000080fc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    80fc:	55                   	push   %rbp
    80fd:	48 89 e5             	mov    %rsp,%rbp
    8100:	48 83 ec 10          	sub    $0x10,%rsp
    8104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    810c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8114:	48 8b 00             	mov    (%rax),%rax
    8117:	48 29 c2             	sub    %rax,%rdx
    811a:	48 89 d0             	mov    %rdx,%rax
    811d:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8121:	48 89 c2             	mov    %rax,%rdx
    8124:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8128:	48 8b 08             	mov    (%rax),%rcx
    812b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812f:	48 89 ce             	mov    %rcx,%rsi
    8132:	48 89 c7             	mov    %rax,%rdi
    8135:	e8 06 0f 00 00       	call   9040 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    813a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    813e:	48 89 c7             	mov    %rax,%rdi
    8141:	e8 00 fa ff ff       	call   7b46 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8146:	90                   	nop
    8147:	c9                   	leave
    8148:	c3                   	ret
    8149:	90                   	nop

000000000000814a <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    814a:	55                   	push   %rbp
    814b:	48 89 e5             	mov    %rsp,%rbp
    814e:	48 83 ec 10          	sub    $0x10,%rsp
    8152:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    815a:	48 89 c7             	mov    %rax,%rdi
    815d:	e8 14 0f 00 00       	call   9076 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    8162:	90                   	nop
    8163:	c9                   	leave
    8164:	c3                   	ret
    8165:	90                   	nop

0000000000008166 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8166:	55                   	push   %rbp
    8167:	48 89 e5             	mov    %rsp,%rbp
    816a:	48 83 ec 10          	sub    $0x10,%rsp
    816e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8172:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8176:	48 89 c7             	mov    %rax,%rdi
    8179:	e8 04 0f 00 00       	call   9082 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    817e:	90                   	nop
    817f:	c9                   	leave
    8180:	c3                   	ret
    8181:	90                   	nop

0000000000008182 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8182:	55                   	push   %rbp
    8183:	48 89 e5             	mov    %rsp,%rbp
    8186:	53                   	push   %rbx
    8187:	48 83 ec 28          	sub    $0x28,%rsp
    818b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    818f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8193:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8197:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    819b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    819f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    81a3:	48 89 d6             	mov    %rdx,%rsi
    81a6:	48 89 c7             	mov    %rax,%rdi
    81a9:	e8 df 0e 00 00       	call   908d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    81ae:	48 89 c1             	mov    %rax,%rcx
    81b1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    81b5:	48 89 c2             	mov    %rax,%rdx
    81b8:	48 89 ce             	mov    %rcx,%rsi
    81bb:	48 89 df             	mov    %rbx,%rdi
    81be:	e8 2b 0f 00 00       	call   90ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    81c3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    81c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81cb:	48 89 d6             	mov    %rdx,%rsi
    81ce:	48 89 c7             	mov    %rax,%rdi
    81d1:	e8 76 0f 00 00       	call   914c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    81d6:	eb 1a                	jmp    81f2 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    81d8:	48 89 c3             	mov    %rax,%rbx
    81db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    81df:	48 89 c7             	mov    %rax,%rdi
    81e2:	e8 79 00 00 00       	call   8260 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    81e7:	48 89 d8             	mov    %rbx,%rax
    81ea:	48 89 c7             	mov    %rax,%rdi
    81ed:	e8 be c4 ff ff       	call   46b0 <_Unwind_Resume@plt>
    81f2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    81f6:	c9                   	leave
    81f7:	c3                   	ret

00000000000081f8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    81f8:	55                   	push   %rbp
    81f9:	48 89 e5             	mov    %rsp,%rbp
    81fc:	48 83 ec 10          	sub    $0x10,%rsp
    8200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8204:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8208:	48 89 c7             	mov    %rax,%rdi
    820b:	e8 7c 0f 00 00       	call   918c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8210:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8213:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8217:	48 8b 48 08          	mov    0x8(%rax),%rcx
    821b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    821f:	48 8b 00             	mov    (%rax),%rax
    8222:	48 89 ce             	mov    %rcx,%rsi
    8225:	48 89 c7             	mov    %rax,%rdi
    8228:	e8 6d 0f 00 00       	call   919a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    822d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8231:	48 89 c7             	mov    %rax,%rdi
    8234:	e8 27 00 00 00       	call   8260 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8239:	90                   	nop
    823a:	c9                   	leave
    823b:	c3                   	ret

000000000000823c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    823c:	55                   	push   %rbp
    823d:	48 89 e5             	mov    %rsp,%rbp
    8240:	48 83 ec 10          	sub    $0x10,%rsp
    8244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    824c:	48 8b 10             	mov    (%rax),%rdx
    824f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8253:	48 89 d6             	mov    %rdx,%rsi
    8256:	48 89 c7             	mov    %rax,%rdi
    8259:	e8 66 0f 00 00       	call   91c4 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    825e:	c9                   	leave
    825f:	c3                   	ret

0000000000008260 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8260:	55                   	push   %rbp
    8261:	48 89 e5             	mov    %rsp,%rbp
    8264:	48 83 ec 10          	sub    $0x10,%rsp
    8268:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    826c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8270:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8278:	48 8b 00             	mov    (%rax),%rax
    827b:	48 29 c2             	sub    %rax,%rdx
    827e:	48 c1 fa 03          	sar    $0x3,%rdx
    8282:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8289:	aa aa aa 
    828c:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    8290:	48 89 c2             	mov    %rax,%rdx
    8293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8297:	48 8b 08             	mov    (%rax),%rcx
    829a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829e:	48 89 ce             	mov    %rcx,%rsi
    82a1:	48 89 c7             	mov    %rax,%rdi
    82a4:	e8 53 0f 00 00       	call   91fc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    82a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ad:	48 89 c7             	mov    %rax,%rdi
    82b0:	e8 ad f8 ff ff       	call   7b62 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    82b5:	90                   	nop
    82b6:	c9                   	leave
    82b7:	c3                   	ret

00000000000082b8 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    82b8:	55                   	push   %rbp
    82b9:	48 89 e5             	mov    %rsp,%rbp
    82bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    82c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    82c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82cc:	48 8b 00             	mov    (%rax),%rax
    82cf:	48 29 c2             	sub    %rax,%rdx
    82d2:	48 c1 fa 03          	sar    $0x3,%rdx
    82d6:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    82dd:	aa aa aa 
    82e0:	48 0f af c2          	imul   %rdx,%rax
    82e4:	5d                   	pop    %rbp
    82e5:	c3                   	ret

00000000000082e6 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    82e6:	55                   	push   %rbp
    82e7:	48 89 e5             	mov    %rsp,%rbp
    82ea:	48 83 ec 10          	sub    $0x10,%rsp
    82ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    82f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f6:	48 89 c7             	mov    %rax,%rdi
    82f9:	e8 34 0f 00 00       	call   9232 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    82fe:	90                   	nop
    82ff:	c9                   	leave
    8300:	c3                   	ret
    8301:	90                   	nop

0000000000008302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8302:	55                   	push   %rbp
    8303:	48 89 e5             	mov    %rsp,%rbp
    8306:	48 83 ec 10          	sub    $0x10,%rsp
    830a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    830e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8312:	48 89 c7             	mov    %rax,%rdi
    8315:	e8 24 0f 00 00       	call   923e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    831a:	90                   	nop
    831b:	c9                   	leave
    831c:	c3                   	ret
    831d:	90                   	nop

000000000000831e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    831e:	55                   	push   %rbp
    831f:	48 89 e5             	mov    %rsp,%rbp
    8322:	53                   	push   %rbx
    8323:	48 83 ec 28          	sub    $0x28,%rsp
    8327:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    832b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    832f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8333:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8337:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    833b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    833f:	48 89 d6             	mov    %rdx,%rsi
    8342:	48 89 c7             	mov    %rax,%rdi
    8345:	e8 ff 0e 00 00       	call   9249 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    834a:	48 89 c1             	mov    %rax,%rcx
    834d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8351:	48 89 c2             	mov    %rax,%rdx
    8354:	48 89 ce             	mov    %rcx,%rsi
    8357:	48 89 df             	mov    %rbx,%rdi
    835a:	e8 4b 0f 00 00       	call   92aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    835f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8363:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8367:	48 89 d6             	mov    %rdx,%rsi
    836a:	48 89 c7             	mov    %rax,%rdi
    836d:	e8 96 0f 00 00       	call   9308 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    8372:	eb 1a                	jmp    838e <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    8374:	48 89 c3             	mov    %rax,%rbx
    8377:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    837b:	48 89 c7             	mov    %rax,%rdi
    837e:	e8 bb 01 00 00       	call   853e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8383:	48 89 d8             	mov    %rbx,%rax
    8386:	48 89 c7             	mov    %rax,%rdi
    8389:	e8 22 c3 ff ff       	call   46b0 <_Unwind_Resume@plt>
    838e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8392:	c9                   	leave
    8393:	c3                   	ret

0000000000008394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8394:	55                   	push   %rbp
    8395:	48 89 e5             	mov    %rsp,%rbp
    8398:	48 83 ec 10          	sub    $0x10,%rsp
    839c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    83a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83a4:	48 89 c7             	mov    %rax,%rdi
    83a7:	e8 9c 0f 00 00       	call   9348 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    83ac:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    83af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83b3:	48 8b 48 08          	mov    0x8(%rax),%rcx
    83b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83bb:	48 8b 00             	mov    (%rax),%rax
    83be:	48 89 ce             	mov    %rcx,%rsi
    83c1:	48 89 c7             	mov    %rax,%rdi
    83c4:	e8 8d 0f 00 00       	call   9356 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    83c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83cd:	48 89 c7             	mov    %rax,%rdi
    83d0:	e8 69 01 00 00       	call   853e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    83d5:	90                   	nop
    83d6:	c9                   	leave
    83d7:	c3                   	ret

00000000000083d8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    83d8:	55                   	push   %rbp
    83d9:	48 89 e5             	mov    %rsp,%rbp
    83dc:	48 83 ec 20          	sub    $0x20,%rsp
    83e0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    83e4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    83e8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    83ec:	48 89 d6             	mov    %rdx,%rsi
    83ef:	48 89 c7             	mov    %rax,%rdi
    83f2:	e8 89 0f 00 00       	call   9380 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    83f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    83fb:	c9                   	leave
    83fc:	c3                   	ret
    83fd:	90                   	nop

00000000000083fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    83fe:	55                   	push   %rbp
    83ff:	48 89 e5             	mov    %rsp,%rbp
    8402:	48 83 ec 20          	sub    $0x20,%rsp
    8406:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    840a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    840e:	48 8d 50 08          	lea    0x8(%rax),%rdx
    8412:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8416:	48 89 d6             	mov    %rdx,%rsi
    8419:	48 89 c7             	mov    %rax,%rdi
    841c:	e8 5f 0f 00 00       	call   9380 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8421:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8425:	c9                   	leave
    8426:	c3                   	ret

0000000000008427 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    8427:	55                   	push   %rbp
    8428:	48 89 e5             	mov    %rsp,%rbp
    842b:	53                   	push   %rbx
    842c:	48 83 ec 18          	sub    $0x18,%rsp
    8430:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8434:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    8438:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    843c:	48 89 c7             	mov    %rax,%rdi
    843f:	e8 5a 0f 00 00       	call   939e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8444:	48 8b 18             	mov    (%rax),%rbx
    8447:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    844b:	48 89 c7             	mov    %rax,%rdi
    844e:	e8 4b 0f 00 00       	call   939e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    8453:	48 8b 00             	mov    (%rax),%rax
    8456:	48 39 c3             	cmp    %rax,%rbx
    8459:	0f 95 c0             	setne  %al
    845c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8460:	c9                   	leave
    8461:	c3                   	ret

0000000000008462 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    8462:	55                   	push   %rbp
    8463:	48 89 e5             	mov    %rsp,%rbp
    8466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    846a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    846e:	48 8b 00             	mov    (%rax),%rax
    8471:	48 8d 50 18          	lea    0x18(%rax),%rdx
    8475:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8479:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    847c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    8480:	5d                   	pop    %rbp
    8481:	c3                   	ret

0000000000008482 <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    8482:	55                   	push   %rbp
    8483:	48 89 e5             	mov    %rsp,%rbp
    8486:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    848a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    848e:	48 8b 00             	mov    (%rax),%rax
    8491:	5d                   	pop    %rbp
    8492:	c3                   	ret
    8493:	90                   	nop

0000000000008494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8494:	55                   	push   %rbp
    8495:	48 89 e5             	mov    %rsp,%rbp
    8498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    849c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    84a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a4:	48 8b 08             	mov    (%rax),%rcx
    84a7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    84ab:	48 89 d0             	mov    %rdx,%rax
    84ae:	48 c1 e0 03          	shl    $0x3,%rax
    84b2:	48 29 d0             	sub    %rdx,%rax
    84b5:	48 c1 e0 02          	shl    $0x2,%rax
    84b9:	48 01 c8             	add    %rcx,%rax
      }
    84bc:	5d                   	pop    %rbp
    84bd:	c3                   	ret

00000000000084be <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    84be:	55                   	push   %rbp
    84bf:	48 89 e5             	mov    %rsp,%rbp
    84c2:	53                   	push   %rbx
    84c3:	48 83 ec 18          	sub    $0x18,%rsp
    84c7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84cb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    84cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84d3:	48 89 c7             	mov    %rax,%rdi
    84d6:	e8 d1 0e 00 00       	call   93ac <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    84db:	84 c0                	test   %al,%al
    84dd:	74 36                	je     8515 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    84df:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84e3:	48 89 c7             	mov    %rax,%rdi
    84e6:	e8 17 0f 00 00       	call   9402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    84eb:	48 89 c3             	mov    %rax,%rbx
    84ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84f2:	48 89 c7             	mov    %rax,%rdi
    84f5:	e8 c4 0e 00 00       	call   93be <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    84fa:	48 89 c1             	mov    %rax,%rcx
    84fd:	48 8b 03             	mov    (%rbx),%rax
    8500:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8504:	48 89 01             	mov    %rax,(%rcx)
    8507:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    850b:	48 8b 43 10          	mov    0x10(%rbx),%rax
    850f:	48 89 41 10          	mov    %rax,0x10(%rcx)
    8513:	eb 1e                	jmp    8533 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8519:	48 89 c7             	mov    %rax,%rdi
    851c:	e8 e1 0e 00 00       	call   9402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8521:	48 89 c2             	mov    %rax,%rdx
    8524:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8528:	48 89 d6             	mov    %rdx,%rsi
    852b:	48 89 c7             	mov    %rax,%rdi
    852e:	e8 dd 0e 00 00       	call   9410 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    8533:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    8537:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    853b:	c9                   	leave
    853c:	c3                   	ret
    853d:	90                   	nop

000000000000853e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    853e:	55                   	push   %rbp
    853f:	48 89 e5             	mov    %rsp,%rbp
    8542:	48 83 ec 10          	sub    $0x10,%rsp
    8546:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    854a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    854e:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8552:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8556:	48 8b 00             	mov    (%rax),%rax
    8559:	48 29 c2             	sub    %rax,%rdx
    855c:	48 c1 fa 02          	sar    $0x2,%rdx
    8560:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    8567:	db b6 6d 
    856a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    856e:	48 89 c2             	mov    %rax,%rdx
    8571:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8575:	48 8b 08             	mov    (%rax),%rcx
    8578:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    857c:	48 89 ce             	mov    %rcx,%rsi
    857f:	48 89 c7             	mov    %rax,%rdi
    8582:	e8 e3 0e 00 00       	call   946a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8587:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    858b:	48 89 c7             	mov    %rax,%rdi
    858e:	e8 eb f5 ff ff       	call   7b7e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    8593:	90                   	nop
    8594:	c9                   	leave
    8595:	c3                   	ret

0000000000008596 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8596:	55                   	push   %rbp
    8597:	48 89 e5             	mov    %rsp,%rbp
    859a:	48 83 ec 10          	sub    $0x10,%rsp
    859e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85a6:	48 89 c7             	mov    %rax,%rdi
    85a9:	e8 f2 0e 00 00       	call   94a0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    85ae:	90                   	nop
    85af:	c9                   	leave
    85b0:	c3                   	ret
    85b1:	90                   	nop

00000000000085b2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    85b2:	55                   	push   %rbp
    85b3:	48 89 e5             	mov    %rsp,%rbp
    85b6:	48 83 ec 10          	sub    $0x10,%rsp
    85ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    85be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85c2:	48 89 c7             	mov    %rax,%rdi
    85c5:	e8 e2 0e 00 00       	call   94ac <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    85ca:	90                   	nop
    85cb:	c9                   	leave
    85cc:	c3                   	ret
    85cd:	90                   	nop

00000000000085ce <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    85ce:	55                   	push   %rbp
    85cf:	48 89 e5             	mov    %rsp,%rbp
    85d2:	53                   	push   %rbx
    85d3:	48 83 ec 28          	sub    $0x28,%rsp
    85d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    85db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    85df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    85e3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    85e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    85eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    85ef:	48 89 d6             	mov    %rdx,%rsi
    85f2:	48 89 c7             	mov    %rax,%rdi
    85f5:	e8 bd 0e 00 00       	call   94b7 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    85fa:	48 89 c1             	mov    %rax,%rcx
    85fd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8601:	48 89 c2             	mov    %rax,%rdx
    8604:	48 89 ce             	mov    %rcx,%rsi
    8607:	48 89 df             	mov    %rbx,%rdi
    860a:	e8 09 0f 00 00       	call   9518 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    860f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8617:	48 89 d6             	mov    %rdx,%rsi
    861a:	48 89 c7             	mov    %rax,%rdi
    861d:	e8 54 0f 00 00       	call   9576 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    8622:	eb 1a                	jmp    863e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    8624:	48 89 c3             	mov    %rax,%rbx
    8627:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    862b:	48 89 c7             	mov    %rax,%rdi
    862e:	e8 79 00 00 00       	call   86ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8633:	48 89 d8             	mov    %rbx,%rax
    8636:	48 89 c7             	mov    %rax,%rdi
    8639:	e8 72 c0 ff ff       	call   46b0 <_Unwind_Resume@plt>
    863e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8642:	c9                   	leave
    8643:	c3                   	ret

0000000000008644 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8644:	55                   	push   %rbp
    8645:	48 89 e5             	mov    %rsp,%rbp
    8648:	48 83 ec 10          	sub    $0x10,%rsp
    864c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8650:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8654:	48 89 c7             	mov    %rax,%rdi
    8657:	e8 5a 0f 00 00       	call   95b6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    865c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    865f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8663:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    866b:	48 8b 00             	mov    (%rax),%rax
    866e:	48 89 ce             	mov    %rcx,%rsi
    8671:	48 89 c7             	mov    %rax,%rdi
    8674:	e8 4b 0f 00 00       	call   95c4 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    8679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    867d:	48 89 c7             	mov    %rax,%rdi
    8680:	e8 27 00 00 00       	call   86ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8685:	90                   	nop
    8686:	c9                   	leave
    8687:	c3                   	ret

0000000000008688 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8688:	55                   	push   %rbp
    8689:	48 89 e5             	mov    %rsp,%rbp
    868c:	48 83 ec 10          	sub    $0x10,%rsp
    8690:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8694:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8698:	48 8b 10             	mov    (%rax),%rdx
    869b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    869f:	48 89 d6             	mov    %rdx,%rsi
    86a2:	48 89 c7             	mov    %rax,%rdi
    86a5:	e8 44 0f 00 00       	call   95ee <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    86aa:	c9                   	leave
    86ab:	c3                   	ret

00000000000086ac <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    86ac:	55                   	push   %rbp
    86ad:	48 89 e5             	mov    %rsp,%rbp
    86b0:	48 83 ec 10          	sub    $0x10,%rsp
    86b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    86b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86bc:	48 8b 50 10          	mov    0x10(%rax),%rdx
    86c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86c4:	48 8b 00             	mov    (%rax),%rax
    86c7:	48 29 c2             	sub    %rax,%rdx
    86ca:	48 89 d0             	mov    %rdx,%rax
    86cd:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    86d1:	48 89 c2             	mov    %rax,%rdx
    86d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d8:	48 8b 08             	mov    (%rax),%rcx
    86db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86df:	48 89 ce             	mov    %rcx,%rsi
    86e2:	48 89 c7             	mov    %rax,%rdi
    86e5:	e8 3c 0f 00 00       	call   9626 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    86ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86ee:	48 89 c7             	mov    %rax,%rdi
    86f1:	e8 a4 f4 ff ff       	call   7b9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    86f6:	90                   	nop
    86f7:	c9                   	leave
    86f8:	c3                   	ret
    86f9:	90                   	nop

00000000000086fa <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    86fa:	55                   	push   %rbp
    86fb:	48 89 e5             	mov    %rsp,%rbp
    86fe:	48 83 ec 10          	sub    $0x10,%rsp
    8702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    870a:	48 89 c7             	mov    %rax,%rdi
    870d:	e8 4a 0f 00 00       	call   965c <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    8712:	90                   	nop
    8713:	c9                   	leave
    8714:	c3                   	ret
    8715:	90                   	nop

0000000000008716 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8716:	55                   	push   %rbp
    8717:	48 89 e5             	mov    %rsp,%rbp
    871a:	48 83 ec 10          	sub    $0x10,%rsp
    871e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8726:	48 89 c7             	mov    %rax,%rdi
    8729:	e8 3a 0f 00 00       	call   9668 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    872e:	90                   	nop
    872f:	c9                   	leave
    8730:	c3                   	ret
    8731:	90                   	nop

0000000000008732 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8732:	55                   	push   %rbp
    8733:	48 89 e5             	mov    %rsp,%rbp
    8736:	53                   	push   %rbx
    8737:	48 83 ec 28          	sub    $0x28,%rsp
    873b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    873f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8743:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8747:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    874b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    874f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8753:	48 89 d6             	mov    %rdx,%rsi
    8756:	48 89 c7             	mov    %rax,%rdi
    8759:	e8 15 0f 00 00       	call   9673 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    875e:	48 89 c1             	mov    %rax,%rcx
    8761:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8765:	48 89 c2             	mov    %rax,%rdx
    8768:	48 89 ce             	mov    %rcx,%rsi
    876b:	48 89 df             	mov    %rbx,%rdi
    876e:	e8 61 0f 00 00       	call   96d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    8773:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8777:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    877b:	48 89 d6             	mov    %rdx,%rsi
    877e:	48 89 c7             	mov    %rax,%rdi
    8781:	e8 ac 0f 00 00       	call   9732 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8786:	eb 1a                	jmp    87a2 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8788:	48 89 c3             	mov    %rax,%rbx
    878b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    878f:	48 89 c7             	mov    %rax,%rdi
    8792:	e8 79 00 00 00       	call   8810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8797:	48 89 d8             	mov    %rbx,%rax
    879a:	48 89 c7             	mov    %rax,%rdi
    879d:	e8 0e bf ff ff       	call   46b0 <_Unwind_Resume@plt>
    87a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    87a6:	c9                   	leave
    87a7:	c3                   	ret

00000000000087a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    87a8:	55                   	push   %rbp
    87a9:	48 89 e5             	mov    %rsp,%rbp
    87ac:	48 83 ec 10          	sub    $0x10,%rsp
    87b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    87b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87b8:	48 89 c7             	mov    %rax,%rdi
    87bb:	e8 b2 0f 00 00       	call   9772 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    87c0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    87c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87c7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    87cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87cf:	48 8b 00             	mov    (%rax),%rax
    87d2:	48 89 ce             	mov    %rcx,%rsi
    87d5:	48 89 c7             	mov    %rax,%rdi
    87d8:	e8 a3 0f 00 00       	call   9780 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    87dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87e1:	48 89 c7             	mov    %rax,%rdi
    87e4:	e8 27 00 00 00       	call   8810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    87e9:	90                   	nop
    87ea:	c9                   	leave
    87eb:	c3                   	ret

00000000000087ec <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    87ec:	55                   	push   %rbp
    87ed:	48 89 e5             	mov    %rsp,%rbp
    87f0:	48 83 ec 10          	sub    $0x10,%rsp
    87f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    87f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87fc:	48 8b 10             	mov    (%rax),%rdx
    87ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8803:	48 89 d6             	mov    %rdx,%rsi
    8806:	48 89 c7             	mov    %rax,%rdi
    8809:	e8 9c 0f 00 00       	call   97aa <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    880e:	c9                   	leave
    880f:	c3                   	ret

0000000000008810 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8810:	55                   	push   %rbp
    8811:	48 89 e5             	mov    %rsp,%rbp
    8814:	48 83 ec 10          	sub    $0x10,%rsp
    8818:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    881c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8820:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8824:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8828:	48 8b 00             	mov    (%rax),%rax
    882b:	48 29 c2             	sub    %rax,%rdx
    882e:	48 89 d0             	mov    %rdx,%rax
    8831:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    8835:	48 89 c2             	mov    %rax,%rdx
    8838:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    883c:	48 8b 08             	mov    (%rax),%rcx
    883f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8843:	48 89 ce             	mov    %rcx,%rsi
    8846:	48 89 c7             	mov    %rax,%rdi
    8849:	e8 94 0f 00 00       	call   97e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    884e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8852:	48 89 c7             	mov    %rax,%rdi
    8855:	e8 5c f3 ff ff       	call   7bb6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    885a:	90                   	nop
    885b:	c9                   	leave
    885c:	c3                   	ret
    885d:	90                   	nop

000000000000885e <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    885e:	55                   	push   %rbp
    885f:	48 89 e5             	mov    %rsp,%rbp
    8862:	48 83 ec 10          	sub    $0x10,%rsp
    8866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    886a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    886e:	48 89 c7             	mov    %rax,%rdi
    8871:	e8 a2 0f 00 00       	call   9818 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    8876:	90                   	nop
    8877:	c9                   	leave
    8878:	c3                   	ret
    8879:	90                   	nop

000000000000887a <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    887a:	55                   	push   %rbp
    887b:	48 89 e5             	mov    %rsp,%rbp
    887e:	48 83 ec 10          	sub    $0x10,%rsp
    8882:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    888a:	48 89 c7             	mov    %rax,%rdi
    888d:	e8 92 0f 00 00       	call   9824 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    8892:	90                   	nop
    8893:	c9                   	leave
    8894:	c3                   	ret
    8895:	90                   	nop

0000000000008896 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8896:	55                   	push   %rbp
    8897:	48 89 e5             	mov    %rsp,%rbp
    889a:	53                   	push   %rbx
    889b:	48 83 ec 28          	sub    $0x28,%rsp
    889f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    88a3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    88a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    88ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    88af:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    88b3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    88b7:	48 89 d6             	mov    %rdx,%rsi
    88ba:	48 89 c7             	mov    %rax,%rdi
    88bd:	e8 6d 0f 00 00       	call   982f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    88c2:	48 89 c1             	mov    %rax,%rcx
    88c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    88c9:	48 89 c2             	mov    %rax,%rdx
    88cc:	48 89 ce             	mov    %rcx,%rsi
    88cf:	48 89 df             	mov    %rbx,%rdi
    88d2:	e8 b9 0f 00 00       	call   9890 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    88d7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    88db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88df:	48 89 d6             	mov    %rdx,%rsi
    88e2:	48 89 c7             	mov    %rax,%rdi
    88e5:	e8 04 10 00 00       	call   98ee <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    88ea:	eb 1a                	jmp    8906 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    88ec:	48 89 c3             	mov    %rax,%rbx
    88ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    88f3:	48 89 c7             	mov    %rax,%rdi
    88f6:	e8 79 00 00 00       	call   8974 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    88fb:	48 89 d8             	mov    %rbx,%rax
    88fe:	48 89 c7             	mov    %rax,%rdi
    8901:	e8 aa bd ff ff       	call   46b0 <_Unwind_Resume@plt>
    8906:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    890a:	c9                   	leave
    890b:	c3                   	ret

000000000000890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    890c:	55                   	push   %rbp
    890d:	48 89 e5             	mov    %rsp,%rbp
    8910:	48 83 ec 10          	sub    $0x10,%rsp
    8914:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8918:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    891c:	48 89 c7             	mov    %rax,%rdi
    891f:	e8 0a 10 00 00       	call   992e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8924:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    8927:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    892b:	48 8b 48 08          	mov    0x8(%rax),%rcx
    892f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8933:	48 8b 00             	mov    (%rax),%rax
    8936:	48 89 ce             	mov    %rcx,%rsi
    8939:	48 89 c7             	mov    %rax,%rdi
    893c:	e8 fb 0f 00 00       	call   993c <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    8941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8945:	48 89 c7             	mov    %rax,%rdi
    8948:	e8 27 00 00 00       	call   8974 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    894d:	90                   	nop
    894e:	c9                   	leave
    894f:	c3                   	ret

0000000000008950 <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8950:	55                   	push   %rbp
    8951:	48 89 e5             	mov    %rsp,%rbp
    8954:	48 83 ec 10          	sub    $0x10,%rsp
    8958:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    895c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8960:	48 8b 10             	mov    (%rax),%rdx
    8963:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8967:	48 89 d6             	mov    %rdx,%rsi
    896a:	48 89 c7             	mov    %rax,%rdi
    896d:	e8 f4 0f 00 00       	call   9966 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8972:	c9                   	leave
    8973:	c3                   	ret

0000000000008974 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8974:	55                   	push   %rbp
    8975:	48 89 e5             	mov    %rsp,%rbp
    8978:	48 83 ec 10          	sub    $0x10,%rsp
    897c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8980:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8984:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8988:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    898c:	48 8b 00             	mov    (%rax),%rax
    898f:	48 29 c2             	sub    %rax,%rdx
    8992:	48 89 d0             	mov    %rdx,%rax
    8995:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8999:	48 89 c2             	mov    %rax,%rdx
    899c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a0:	48 8b 08             	mov    (%rax),%rcx
    89a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a7:	48 89 ce             	mov    %rcx,%rsi
    89aa:	48 89 c7             	mov    %rax,%rdi
    89ad:	e8 ec 0f 00 00       	call   999e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    89b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89b6:	48 89 c7             	mov    %rax,%rdi
    89b9:	e8 14 f2 ff ff       	call   7bd2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    89be:	90                   	nop
    89bf:	c9                   	leave
    89c0:	c3                   	ret
    89c1:	90                   	nop

00000000000089c2 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    89c2:	55                   	push   %rbp
    89c3:	48 89 e5             	mov    %rsp,%rbp
    89c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89ca:	90                   	nop
    89cb:	5d                   	pop    %rbp
    89cc:	c3                   	ret
    89cd:	90                   	nop

00000000000089ce <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    89ce:	55                   	push   %rbp
    89cf:	48 89 e5             	mov    %rsp,%rbp
    89d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    89d6:	90                   	nop
    89d7:	5d                   	pop    %rbp
    89d8:	c3                   	ret

00000000000089d9 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    89d9:	55                   	push   %rbp
    89da:	48 89 e5             	mov    %rsp,%rbp
    89dd:	53                   	push   %rbx
    89de:	48 83 ec 28          	sub    $0x28,%rsp
    89e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    89e6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    89ea:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    89ee:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    89f2:	48 89 d6             	mov    %rdx,%rsi
    89f5:	48 89 c7             	mov    %rax,%rdi
    89f8:	e8 25 01 00 00       	call   8b22 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    89fd:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a01:	48 89 c7             	mov    %rax,%rdi
    8a04:	e8 ca 0f 00 00       	call   99d3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8a09:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8a0d:	0f 92 c3             	setb   %bl
    8a10:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a14:	48 89 c7             	mov    %rax,%rdi
    8a17:	e8 ee f1 ff ff       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
    8a1c:	84 db                	test   %bl,%bl
    8a1e:	74 0f                	je     8a2f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8a20:	48 8d 05 81 f6 00 00 	lea    0xf681(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8a27:	48 89 c7             	mov    %rax,%rdi
    8a2a:	e8 41 b7 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8a2f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8a33:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a37:	c9                   	leave
    8a38:	c3                   	ret
    8a39:	90                   	nop

0000000000008a3a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8a3a:	55                   	push   %rbp
    8a3b:	48 89 e5             	mov    %rsp,%rbp
    8a3e:	53                   	push   %rbx
    8a3f:	48 83 ec 28          	sub    $0x28,%rsp
    8a43:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8a47:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8a4b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8a4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a53:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8a57:	48 89 d6             	mov    %rdx,%rsi
    8a5a:	48 89 c7             	mov    %rax,%rdi
    8a5d:	e8 b4 0f 00 00       	call   9a16 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8a62:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8a66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a6a:	48 89 d6             	mov    %rdx,%rsi
    8a6d:	48 89 c7             	mov    %rax,%rdi
    8a70:	e8 d3 0f 00 00       	call   9a48 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8a75:	eb 1a                	jmp    8a91 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8a77:	48 89 c3             	mov    %rax,%rbx
    8a7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8a7e:	48 89 c7             	mov    %rax,%rdi
    8a81:	e8 6c f0 ff ff       	call   7af2 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8a86:	48 89 d8             	mov    %rbx,%rax
    8a89:	48 89 c7             	mov    %rax,%rdi
    8a8c:	e8 1f bc ff ff       	call   46b0 <_Unwind_Resume@plt>
    8a91:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8a95:	c9                   	leave
    8a96:	c3                   	ret
    8a97:	90                   	nop

0000000000008a98 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8a98:	55                   	push   %rbp
    8a99:	48 89 e5             	mov    %rsp,%rbp
    8a9c:	48 83 ec 10          	sub    $0x10,%rsp
    8aa0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8aa4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8aa8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8aac:	48 89 c7             	mov    %rax,%rdi
    8aaf:	e8 24 00 00 00       	call   8ad8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8ab4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8abb:	48 8b 00             	mov    (%rax),%rax
    8abe:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8ac2:	48 89 ce             	mov    %rcx,%rsi
    8ac5:	48 89 c7             	mov    %rax,%rdi
    8ac8:	e8 dc 0f 00 00       	call   9aa9 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8acd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8ad1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8ad5:	90                   	nop
    8ad6:	c9                   	leave
    8ad7:	c3                   	ret

0000000000008ad8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8ad8:	55                   	push   %rbp
    8ad9:	48 89 e5             	mov    %rsp,%rbp
    8adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ae4:	5d                   	pop    %rbp
    8ae5:	c3                   	ret

0000000000008ae6 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8ae6:	55                   	push   %rbp
    8ae7:	48 89 e5             	mov    %rsp,%rbp
    8aea:	48 83 ec 20          	sub    $0x20,%rsp
    8aee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8af2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8af6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8afa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b02:	48 89 d6             	mov    %rdx,%rsi
    8b05:	48 89 c7             	mov    %rax,%rdi
    8b08:	e8 c5 0f 00 00       	call   9ad2 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8b0d:	90                   	nop
    8b0e:	c9                   	leave
    8b0f:	c3                   	ret

0000000000008b10 <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8b10:	55                   	push   %rbp
    8b11:	48 89 e5             	mov    %rsp,%rbp
    8b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8b1c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b20:	5d                   	pop    %rbp
    8b21:	c3                   	ret

0000000000008b22 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8b22:	55                   	push   %rbp
    8b23:	48 89 e5             	mov    %rsp,%rbp
    8b26:	48 83 ec 10          	sub    $0x10,%rsp
    8b2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8b32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b3a:	48 89 d6             	mov    %rdx,%rsi
    8b3d:	48 89 c7             	mov    %rax,%rdi
    8b40:	e8 b3 0f 00 00       	call   9af8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8b45:	90                   	nop
    8b46:	c9                   	leave
    8b47:	c3                   	ret

0000000000008b48 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8b48:	55                   	push   %rbp
    8b49:	48 89 e5             	mov    %rsp,%rbp
    8b4c:	48 83 ec 20          	sub    $0x20,%rsp
    8b50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b58:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8b5c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8b61:	74 17                	je     8b7a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8b63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b67:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8b6b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b6f:	48 89 ce             	mov    %rcx,%rsi
    8b72:	48 89 c7             	mov    %rax,%rdi
    8b75:	e8 8d 0f 00 00       	call   9b07 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8b7a:	90                   	nop
    8b7b:	c9                   	leave
    8b7c:	c3                   	ret
    8b7d:	90                   	nop

0000000000008b7e <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b7e:	55                   	push   %rbp
    8b7f:	48 89 e5             	mov    %rsp,%rbp
    8b82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b86:	90                   	nop
    8b87:	5d                   	pop    %rbp
    8b88:	c3                   	ret
    8b89:	90                   	nop

0000000000008b8a <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8b8a:	55                   	push   %rbp
    8b8b:	48 89 e5             	mov    %rsp,%rbp
    8b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b92:	90                   	nop
    8b93:	5d                   	pop    %rbp
    8b94:	c3                   	ret

0000000000008b95 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8b95:	55                   	push   %rbp
    8b96:	48 89 e5             	mov    %rsp,%rbp
    8b99:	53                   	push   %rbx
    8b9a:	48 83 ec 28          	sub    $0x28,%rsp
    8b9e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8ba2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8ba6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8baa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8bae:	48 89 d6             	mov    %rdx,%rsi
    8bb1:	48 89 c7             	mov    %rax,%rdi
    8bb4:	e8 25 01 00 00       	call   8cde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8bb9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8bbd:	48 89 c7             	mov    %rax,%rdi
    8bc0:	e8 70 0f 00 00       	call   9b35 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8bc5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8bc9:	0f 92 c3             	setb   %bl
    8bcc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8bd0:	48 89 c7             	mov    %rax,%rdi
    8bd3:	e8 a0 f1 ff ff       	call   7d78 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8bd8:	84 db                	test   %bl,%bl
    8bda:	74 0f                	je     8beb <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8bdc:	48 8d 05 c5 f4 00 00 	lea    0xf4c5(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8be3:	48 89 c7             	mov    %rax,%rdi
    8be6:	e8 85 b5 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8beb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8bef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8bf3:	c9                   	leave
    8bf4:	c3                   	ret
    8bf5:	90                   	nop

0000000000008bf6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8bf6:	55                   	push   %rbp
    8bf7:	48 89 e5             	mov    %rsp,%rbp
    8bfa:	53                   	push   %rbx
    8bfb:	48 83 ec 28          	sub    $0x28,%rsp
    8bff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c03:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c07:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8c0b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c0f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c13:	48 89 d6             	mov    %rdx,%rsi
    8c16:	48 89 c7             	mov    %rax,%rdi
    8c19:	e8 5a 0f 00 00       	call   9b78 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8c1e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c26:	48 89 d6             	mov    %rdx,%rsi
    8c29:	48 89 c7             	mov    %rax,%rdi
    8c2c:	e8 79 0f 00 00       	call   9baa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8c31:	eb 1a                	jmp    8c4d <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8c33:	48 89 c3             	mov    %rax,%rbx
    8c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c3a:	48 89 c7             	mov    %rax,%rdi
    8c3d:	e8 cc ee ff ff       	call   7b0e <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8c42:	48 89 d8             	mov    %rbx,%rax
    8c45:	48 89 c7             	mov    %rax,%rdi
    8c48:	e8 63 ba ff ff       	call   46b0 <_Unwind_Resume@plt>
    8c4d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c51:	c9                   	leave
    8c52:	c3                   	ret
    8c53:	90                   	nop

0000000000008c54 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8c54:	55                   	push   %rbp
    8c55:	48 89 e5             	mov    %rsp,%rbp
    8c58:	48 83 ec 10          	sub    $0x10,%rsp
    8c5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c60:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c68:	48 89 c7             	mov    %rax,%rdi
    8c6b:	e8 24 00 00 00       	call   8c94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8c70:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8c73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8c77:	48 8b 00             	mov    (%rax),%rax
    8c7a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8c7e:	48 89 ce             	mov    %rcx,%rsi
    8c81:	48 89 c7             	mov    %rax,%rdi
    8c84:	e8 82 0f 00 00       	call   9c0b <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8c89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c8d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8c91:	90                   	nop
    8c92:	c9                   	leave
    8c93:	c3                   	ret

0000000000008c94 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8c94:	55                   	push   %rbp
    8c95:	48 89 e5             	mov    %rsp,%rbp
    8c98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8c9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ca0:	5d                   	pop    %rbp
    8ca1:	c3                   	ret

0000000000008ca2 <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8ca2:	55                   	push   %rbp
    8ca3:	48 89 e5             	mov    %rsp,%rbp
    8ca6:	48 83 ec 20          	sub    $0x20,%rsp
    8caa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8cb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8cb6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8cba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cbe:	48 89 d6             	mov    %rdx,%rsi
    8cc1:	48 89 c7             	mov    %rax,%rdi
    8cc4:	e8 6b 0f 00 00       	call   9c34 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8cc9:	90                   	nop
    8cca:	c9                   	leave
    8ccb:	c3                   	ret

0000000000008ccc <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8ccc:	55                   	push   %rbp
    8ccd:	48 89 e5             	mov    %rsp,%rbp
    8cd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8cd8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8cdc:	5d                   	pop    %rbp
    8cdd:	c3                   	ret

0000000000008cde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8cde:	55                   	push   %rbp
    8cdf:	48 89 e5             	mov    %rsp,%rbp
    8ce2:	48 83 ec 10          	sub    $0x10,%rsp
    8ce6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8cee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf6:	48 89 d6             	mov    %rdx,%rsi
    8cf9:	48 89 c7             	mov    %rax,%rdi
    8cfc:	e8 59 0f 00 00       	call   9c5a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8d01:	90                   	nop
    8d02:	c9                   	leave
    8d03:	c3                   	ret

0000000000008d04 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8d04:	55                   	push   %rbp
    8d05:	48 89 e5             	mov    %rsp,%rbp
    8d08:	48 83 ec 20          	sub    $0x20,%rsp
    8d0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d14:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8d18:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d1d:	74 17                	je     8d36 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8d1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d23:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8d27:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8d2b:	48 89 ce             	mov    %rcx,%rsi
    8d2e:	48 89 c7             	mov    %rax,%rdi
    8d31:	e8 33 0f 00 00       	call   9c69 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8d36:	90                   	nop
    8d37:	c9                   	leave
    8d38:	c3                   	ret
    8d39:	90                   	nop

0000000000008d3a <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8d3a:	55                   	push   %rbp
    8d3b:	48 89 e5             	mov    %rsp,%rbp
    8d3e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d42:	90                   	nop
    8d43:	5d                   	pop    %rbp
    8d44:	c3                   	ret
    8d45:	90                   	nop

0000000000008d46 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8d46:	55                   	push   %rbp
    8d47:	48 89 e5             	mov    %rsp,%rbp
    8d4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d4e:	90                   	nop
    8d4f:	5d                   	pop    %rbp
    8d50:	c3                   	ret

0000000000008d51 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8d51:	55                   	push   %rbp
    8d52:	48 89 e5             	mov    %rsp,%rbp
    8d55:	53                   	push   %rbx
    8d56:	48 83 ec 28          	sub    $0x28,%rsp
    8d5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8d5e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8d62:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8d66:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d6a:	48 89 d6             	mov    %rdx,%rsi
    8d6d:	48 89 c7             	mov    %rax,%rdi
    8d70:	e8 e9 00 00 00       	call   8e5e <_ZNSaIPKcEC1ERKS1_>
    8d75:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d79:	48 89 c7             	mov    %rax,%rdi
    8d7c:	e8 16 0f 00 00       	call   9c97 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8d81:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8d85:	0f 92 c3             	setb   %bl
    8d88:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8d8c:	48 89 c7             	mov    %rax,%rdi
    8d8f:	e8 52 f1 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    8d94:	84 db                	test   %bl,%bl
    8d96:	74 0f                	je     8da7 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8d98:	48 8d 05 09 f3 00 00 	lea    0xf309(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8d9f:	48 89 c7             	mov    %rax,%rdi
    8da2:	e8 c9 b3 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8da7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8dab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8daf:	c9                   	leave
    8db0:	c3                   	ret
    8db1:	90                   	nop

0000000000008db2 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8db2:	55                   	push   %rbp
    8db3:	48 89 e5             	mov    %rsp,%rbp
    8db6:	53                   	push   %rbx
    8db7:	48 83 ec 28          	sub    $0x28,%rsp
    8dbb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8dbf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8dc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8dc7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8dcb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8dcf:	48 89 d6             	mov    %rdx,%rsi
    8dd2:	48 89 c7             	mov    %rax,%rdi
    8dd5:	e8 00 0f 00 00       	call   9cda <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8dda:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8dde:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8de2:	48 89 d6             	mov    %rdx,%rsi
    8de5:	48 89 c7             	mov    %rax,%rdi
    8de8:	e8 1f 0f 00 00       	call   9d0c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8ded:	eb 1a                	jmp    8e09 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8def:	48 89 c3             	mov    %rax,%rbx
    8df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8df6:	48 89 c7             	mov    %rax,%rdi
    8df9:	e8 2c ed ff ff       	call   7b2a <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8dfe:	48 89 d8             	mov    %rbx,%rax
    8e01:	48 89 c7             	mov    %rax,%rdi
    8e04:	e8 a7 b8 ff ff       	call   46b0 <_Unwind_Resume@plt>
    8e09:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e0d:	c9                   	leave
    8e0e:	c3                   	ret
    8e0f:	90                   	nop

0000000000008e10 <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8e10:	55                   	push   %rbp
    8e11:	48 89 e5             	mov    %rsp,%rbp
    8e14:	48 83 ec 10          	sub    $0x10,%rsp
    8e18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e24:	48 89 c7             	mov    %rax,%rdi
    8e27:	e8 24 00 00 00       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8e2c:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e33:	48 8b 00             	mov    (%rax),%rax
    8e36:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8e3a:	48 89 ce             	mov    %rcx,%rsi
    8e3d:	48 89 c7             	mov    %rax,%rdi
    8e40:	e8 1d 0f 00 00       	call   9d62 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8e45:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8e49:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8e4d:	90                   	nop
    8e4e:	c9                   	leave
    8e4f:	c3                   	ret

0000000000008e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8e50:	55                   	push   %rbp
    8e51:	48 89 e5             	mov    %rsp,%rbp
    8e54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8e58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e5c:	5d                   	pop    %rbp
    8e5d:	c3                   	ret

0000000000008e5e <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8e5e:	55                   	push   %rbp
    8e5f:	48 89 e5             	mov    %rsp,%rbp
    8e62:	48 83 ec 10          	sub    $0x10,%rsp
    8e66:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e6a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8e6e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8e72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8e76:	48 89 d6             	mov    %rdx,%rsi
    8e79:	48 89 c7             	mov    %rax,%rdi
    8e7c:	e8 0b 0f 00 00       	call   9d8c <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8e81:	90                   	nop
    8e82:	c9                   	leave
    8e83:	c3                   	ret

0000000000008e84 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8e84:	55                   	push   %rbp
    8e85:	48 89 e5             	mov    %rsp,%rbp
    8e88:	48 83 ec 20          	sub    $0x20,%rsp
    8e8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8e94:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8e98:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8e9d:	74 17                	je     8eb6 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8e9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8ea7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8eab:	48 89 ce             	mov    %rcx,%rsi
    8eae:	48 89 c7             	mov    %rax,%rdi
    8eb1:	e8 e5 0e 00 00       	call   9d9b <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    8eb6:	90                   	nop
    8eb7:	c9                   	leave
    8eb8:	c3                   	ret
    8eb9:	90                   	nop

0000000000008eba <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8eba:	55                   	push   %rbp
    8ebb:	48 89 e5             	mov    %rsp,%rbp
    8ebe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ec2:	90                   	nop
    8ec3:	5d                   	pop    %rbp
    8ec4:	c3                   	ret
    8ec5:	90                   	nop

0000000000008ec6 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8ec6:	55                   	push   %rbp
    8ec7:	48 89 e5             	mov    %rsp,%rbp
    8eca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ece:	90                   	nop
    8ecf:	5d                   	pop    %rbp
    8ed0:	c3                   	ret

0000000000008ed1 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8ed1:	55                   	push   %rbp
    8ed2:	48 89 e5             	mov    %rsp,%rbp
    8ed5:	53                   	push   %rbx
    8ed6:	48 83 ec 28          	sub    $0x28,%rsp
    8eda:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8ede:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8ee2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8ee6:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8eea:	48 89 d6             	mov    %rdx,%rsi
    8eed:	48 89 c7             	mov    %rax,%rdi
    8ef0:	e8 25 01 00 00       	call   901a <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    8ef5:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8ef9:	48 89 c7             	mov    %rax,%rdi
    8efc:	e8 c8 0e 00 00       	call   9dc9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    8f01:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8f05:	0f 92 c3             	setb   %bl
    8f08:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f0c:	48 89 c7             	mov    %rax,%rdi
    8f0f:	e8 ee f0 ff ff       	call   8002 <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8f14:	84 db                	test   %bl,%bl
    8f16:	74 0f                	je     8f27 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8f18:	48 8d 05 89 f1 00 00 	lea    0xf189(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f1f:	48 89 c7             	mov    %rax,%rdi
    8f22:	e8 49 b2 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8f27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8f2b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f2f:	c9                   	leave
    8f30:	c3                   	ret
    8f31:	90                   	nop

0000000000008f32 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8f32:	55                   	push   %rbp
    8f33:	48 89 e5             	mov    %rsp,%rbp
    8f36:	53                   	push   %rbx
    8f37:	48 83 ec 28          	sub    $0x28,%rsp
    8f3b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8f3f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8f43:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8f47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f4b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8f4f:	48 89 d6             	mov    %rdx,%rsi
    8f52:	48 89 c7             	mov    %rax,%rdi
    8f55:	e8 b2 0e 00 00       	call   9e0c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8f5a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8f5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f62:	48 89 d6             	mov    %rdx,%rsi
    8f65:	48 89 c7             	mov    %rax,%rdi
    8f68:	e8 d1 0e 00 00       	call   9e3e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    8f6d:	eb 1a                	jmp    8f89 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    8f6f:	48 89 c3             	mov    %rax,%rbx
    8f72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8f76:	48 89 c7             	mov    %rax,%rdi
    8f79:	e8 c8 eb ff ff       	call   7b46 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8f7e:	48 89 d8             	mov    %rbx,%rax
    8f81:	48 89 c7             	mov    %rax,%rdi
    8f84:	e8 27 b7 ff ff       	call   46b0 <_Unwind_Resume@plt>
    8f89:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8f8d:	c9                   	leave
    8f8e:	c3                   	ret
    8f8f:	90                   	nop

0000000000008f90 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8f90:	55                   	push   %rbp
    8f91:	48 89 e5             	mov    %rsp,%rbp
    8f94:	48 83 ec 10          	sub    $0x10,%rsp
    8f98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8fa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fa4:	48 89 c7             	mov    %rax,%rdi
    8fa7:	e8 24 00 00 00       	call   8fd0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8fac:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fb3:	48 8b 00             	mov    (%rax),%rax
    8fb6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8fba:	48 89 ce             	mov    %rcx,%rsi
    8fbd:	48 89 c7             	mov    %rax,%rdi
    8fc0:	e8 cf 0e 00 00       	call   9e94 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8fc5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8fc9:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8fcd:	90                   	nop
    8fce:	c9                   	leave
    8fcf:	c3                   	ret

0000000000008fd0 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8fd0:	55                   	push   %rbp
    8fd1:	48 89 e5             	mov    %rsp,%rbp
    8fd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8fdc:	5d                   	pop    %rbp
    8fdd:	c3                   	ret

0000000000008fde <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8fde:	55                   	push   %rbp
    8fdf:	48 89 e5             	mov    %rsp,%rbp
    8fe2:	48 83 ec 20          	sub    $0x20,%rsp
    8fe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8fea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8fee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8ff2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ffa:	48 89 d6             	mov    %rdx,%rsi
    8ffd:	48 89 c7             	mov    %rax,%rdi
    9000:	e8 b8 0e 00 00       	call   9ebd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9005:	90                   	nop
    9006:	c9                   	leave
    9007:	c3                   	ret

0000000000009008 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9008:	55                   	push   %rbp
    9009:	48 89 e5             	mov    %rsp,%rbp
    900c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9010:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9014:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9018:	5d                   	pop    %rbp
    9019:	c3                   	ret

000000000000901a <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    901a:	55                   	push   %rbp
    901b:	48 89 e5             	mov    %rsp,%rbp
    901e:	48 83 ec 10          	sub    $0x10,%rsp
    9022:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9026:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    902a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    902e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9032:	48 89 d6             	mov    %rdx,%rsi
    9035:	48 89 c7             	mov    %rax,%rdi
    9038:	e8 a7 0e 00 00       	call   9ee4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    903d:	90                   	nop
    903e:	c9                   	leave
    903f:	c3                   	ret

0000000000009040 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9040:	55                   	push   %rbp
    9041:	48 89 e5             	mov    %rsp,%rbp
    9044:	48 83 ec 20          	sub    $0x20,%rsp
    9048:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    904c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9050:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9054:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9059:	74 17                	je     9072 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    905b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    905f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9063:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9067:	48 89 ce             	mov    %rcx,%rsi
    906a:	48 89 c7             	mov    %rax,%rdi
    906d:	e8 81 0e 00 00       	call   9ef3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    9072:	90                   	nop
    9073:	c9                   	leave
    9074:	c3                   	ret
    9075:	90                   	nop

0000000000009076 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9076:	55                   	push   %rbp
    9077:	48 89 e5             	mov    %rsp,%rbp
    907a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    907e:	90                   	nop
    907f:	5d                   	pop    %rbp
    9080:	c3                   	ret
    9081:	90                   	nop

0000000000009082 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9082:	55                   	push   %rbp
    9083:	48 89 e5             	mov    %rsp,%rbp
    9086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    908a:	90                   	nop
    908b:	5d                   	pop    %rbp
    908c:	c3                   	ret

000000000000908d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    908d:	55                   	push   %rbp
    908e:	48 89 e5             	mov    %rsp,%rbp
    9091:	53                   	push   %rbx
    9092:	48 83 ec 28          	sub    $0x28,%rsp
    9096:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    909a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    909e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    90a2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90a6:	48 89 d6             	mov    %rdx,%rsi
    90a9:	48 89 c7             	mov    %rax,%rdi
    90ac:	e8 25 01 00 00       	call   91d6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    90b1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90b5:	48 89 c7             	mov    %rax,%rdi
    90b8:	e8 64 0e 00 00       	call   9f21 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    90bd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    90c1:	0f 92 c3             	setb   %bl
    90c4:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    90c8:	48 89 c7             	mov    %rax,%rdi
    90cb:	e8 96 f0 ff ff       	call   8166 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    90d0:	84 db                	test   %bl,%bl
    90d2:	74 0f                	je     90e3 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    90d4:	48 8d 05 cd ef 00 00 	lea    0xefcd(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    90db:	48 89 c7             	mov    %rax,%rdi
    90de:	e8 8d b0 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    90e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    90e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    90eb:	c9                   	leave
    90ec:	c3                   	ret
    90ed:	90                   	nop

00000000000090ee <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    90ee:	55                   	push   %rbp
    90ef:	48 89 e5             	mov    %rsp,%rbp
    90f2:	53                   	push   %rbx
    90f3:	48 83 ec 28          	sub    $0x28,%rsp
    90f7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    90fb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    90ff:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9103:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9107:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    910b:	48 89 d6             	mov    %rdx,%rsi
    910e:	48 89 c7             	mov    %rax,%rdi
    9111:	e8 4e 0e 00 00       	call   9f64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9116:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    911a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    911e:	48 89 d6             	mov    %rdx,%rsi
    9121:	48 89 c7             	mov    %rax,%rdi
    9124:	e8 6d 0e 00 00       	call   9f96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    9129:	eb 1a                	jmp    9145 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    912b:	48 89 c3             	mov    %rax,%rbx
    912e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9132:	48 89 c7             	mov    %rax,%rdi
    9135:	e8 28 ea ff ff       	call   7b62 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    913a:	48 89 d8             	mov    %rbx,%rax
    913d:	48 89 c7             	mov    %rax,%rdi
    9140:	e8 6b b5 ff ff       	call   46b0 <_Unwind_Resume@plt>
    9145:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9149:	c9                   	leave
    914a:	c3                   	ret
    914b:	90                   	nop

000000000000914c <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    914c:	55                   	push   %rbp
    914d:	48 89 e5             	mov    %rsp,%rbp
    9150:	48 83 ec 10          	sub    $0x10,%rsp
    9154:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9158:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    915c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9160:	48 89 c7             	mov    %rax,%rdi
    9163:	e8 24 00 00 00       	call   918c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    9168:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    916b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    916f:	48 8b 00             	mov    (%rax),%rax
    9172:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9176:	48 89 ce             	mov    %rcx,%rsi
    9179:	48 89 c7             	mov    %rax,%rdi
    917c:	e8 75 0e 00 00       	call   9ff6 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9181:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9185:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9189:	90                   	nop
    918a:	c9                   	leave
    918b:	c3                   	ret

000000000000918c <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    918c:	55                   	push   %rbp
    918d:	48 89 e5             	mov    %rsp,%rbp
    9190:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9194:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9198:	5d                   	pop    %rbp
    9199:	c3                   	ret

000000000000919a <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    919a:	55                   	push   %rbp
    919b:	48 89 e5             	mov    %rsp,%rbp
    919e:	48 83 ec 20          	sub    $0x20,%rsp
    91a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    91aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    91ae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91b6:	48 89 d6             	mov    %rdx,%rsi
    91b9:	48 89 c7             	mov    %rax,%rdi
    91bc:	e8 5e 0e 00 00       	call   a01f <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    91c1:	90                   	nop
    91c2:	c9                   	leave
    91c3:	c3                   	ret

00000000000091c4 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    91c4:	55                   	push   %rbp
    91c5:	48 89 e5             	mov    %rsp,%rbp
    91c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    91d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    91d4:	5d                   	pop    %rbp
    91d5:	c3                   	ret

00000000000091d6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    91d6:	55                   	push   %rbp
    91d7:	48 89 e5             	mov    %rsp,%rbp
    91da:	48 83 ec 10          	sub    $0x10,%rsp
    91de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    91e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    91ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91ee:	48 89 d6             	mov    %rdx,%rsi
    91f1:	48 89 c7             	mov    %rax,%rdi
    91f4:	e8 4d 0e 00 00       	call   a046 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    91f9:	90                   	nop
    91fa:	c9                   	leave
    91fb:	c3                   	ret

00000000000091fc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    91fc:	55                   	push   %rbp
    91fd:	48 89 e5             	mov    %rsp,%rbp
    9200:	48 83 ec 20          	sub    $0x20,%rsp
    9204:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9208:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    920c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9210:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9215:	74 17                	je     922e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9217:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    921b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    921f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9223:	48 89 ce             	mov    %rcx,%rsi
    9226:	48 89 c7             	mov    %rax,%rdi
    9229:	e8 27 0e 00 00       	call   a055 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    922e:	90                   	nop
    922f:	c9                   	leave
    9230:	c3                   	ret
    9231:	90                   	nop

0000000000009232 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9232:	55                   	push   %rbp
    9233:	48 89 e5             	mov    %rsp,%rbp
    9236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    923a:	90                   	nop
    923b:	5d                   	pop    %rbp
    923c:	c3                   	ret
    923d:	90                   	nop

000000000000923e <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    923e:	55                   	push   %rbp
    923f:	48 89 e5             	mov    %rsp,%rbp
    9242:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9246:	90                   	nop
    9247:	5d                   	pop    %rbp
    9248:	c3                   	ret

0000000000009249 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9249:	55                   	push   %rbp
    924a:	48 89 e5             	mov    %rsp,%rbp
    924d:	53                   	push   %rbx
    924e:	48 83 ec 28          	sub    $0x28,%rsp
    9252:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9256:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    925a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    925e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9262:	48 89 d6             	mov    %rdx,%rsi
    9265:	48 89 c7             	mov    %rax,%rdi
    9268:	e8 d7 01 00 00       	call   9444 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    926d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9271:	48 89 c7             	mov    %rax,%rdi
    9274:	e8 0a 0e 00 00       	call   a083 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    9279:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    927d:	0f 92 c3             	setb   %bl
    9280:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9284:	48 89 c7             	mov    %rax,%rdi
    9287:	e8 76 f0 ff ff       	call   8302 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    928c:	84 db                	test   %bl,%bl
    928e:	74 0f                	je     929f <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    9290:	48 8d 05 11 ee 00 00 	lea    0xee11(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9297:	48 89 c7             	mov    %rax,%rdi
    929a:	e8 d1 ae ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    929f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    92a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    92a7:	c9                   	leave
    92a8:	c3                   	ret
    92a9:	90                   	nop

00000000000092aa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    92aa:	55                   	push   %rbp
    92ab:	48 89 e5             	mov    %rsp,%rbp
    92ae:	53                   	push   %rbx
    92af:	48 83 ec 28          	sub    $0x28,%rsp
    92b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    92b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    92bb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    92bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    92c7:	48 89 d6             	mov    %rdx,%rsi
    92ca:	48 89 c7             	mov    %rax,%rdi
    92cd:	e8 f4 0d 00 00       	call   a0c6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    92d2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    92d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92da:	48 89 d6             	mov    %rdx,%rsi
    92dd:	48 89 c7             	mov    %rax,%rdi
    92e0:	e8 13 0e 00 00       	call   a0f8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    92e5:	eb 1a                	jmp    9301 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    92e7:	48 89 c3             	mov    %rax,%rbx
    92ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    92ee:	48 89 c7             	mov    %rax,%rdi
    92f1:	e8 88 e8 ff ff       	call   7b7e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    92f6:	48 89 d8             	mov    %rbx,%rax
    92f9:	48 89 c7             	mov    %rax,%rdi
    92fc:	e8 af b3 ff ff       	call   46b0 <_Unwind_Resume@plt>
    9301:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9305:	c9                   	leave
    9306:	c3                   	ret
    9307:	90                   	nop

0000000000009308 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9308:	55                   	push   %rbp
    9309:	48 89 e5             	mov    %rsp,%rbp
    930c:	48 83 ec 10          	sub    $0x10,%rsp
    9310:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9314:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9318:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    931c:	48 89 c7             	mov    %rax,%rdi
    931f:	e8 24 00 00 00       	call   9348 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    9324:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    932b:	48 8b 00             	mov    (%rax),%rax
    932e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9332:	48 89 ce             	mov    %rcx,%rsi
    9335:	48 89 c7             	mov    %rax,%rdi
    9338:	e8 1c 0e 00 00       	call   a159 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    933d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9341:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9345:	90                   	nop
    9346:	c9                   	leave
    9347:	c3                   	ret

0000000000009348 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9348:	55                   	push   %rbp
    9349:	48 89 e5             	mov    %rsp,%rbp
    934c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9350:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9354:	5d                   	pop    %rbp
    9355:	c3                   	ret

0000000000009356 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9356:	55                   	push   %rbp
    9357:	48 89 e5             	mov    %rsp,%rbp
    935a:	48 83 ec 20          	sub    $0x20,%rsp
    935e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9362:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9366:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    936a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    936e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9372:	48 89 d6             	mov    %rdx,%rsi
    9375:	48 89 c7             	mov    %rax,%rdi
    9378:	e8 05 0e 00 00       	call   a182 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    937d:	90                   	nop
    937e:	c9                   	leave
    937f:	c3                   	ret

0000000000009380 <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    9380:	55                   	push   %rbp
    9381:	48 89 e5             	mov    %rsp,%rbp
    9384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9388:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    938c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9390:	48 8b 10             	mov    (%rax),%rdx
    9393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9397:	48 89 10             	mov    %rdx,(%rax)
    939a:	90                   	nop
    939b:	5d                   	pop    %rbp
    939c:	c3                   	ret
    939d:	90                   	nop

000000000000939e <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    939e:	55                   	push   %rbp
    939f:	48 89 e5             	mov    %rsp,%rbp
    93a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    93a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93aa:	5d                   	pop    %rbp
    93ab:	c3                   	ret

00000000000093ac <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    93ac:	55                   	push   %rbp
    93ad:	48 89 e5             	mov    %rsp,%rbp
    93b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    93b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93b8:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    93bc:	5d                   	pop    %rbp
    93bd:	c3                   	ret

00000000000093be <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    93be:	55                   	push   %rbp
    93bf:	48 89 e5             	mov    %rsp,%rbp
    93c2:	48 83 ec 10          	sub    $0x10,%rsp
    93c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    93ca:	e8 6f b6 ff ff       	call   4a3e <_ZSt23__is_constant_evaluatedv>
    93cf:	84 c0                	test   %al,%al
    93d1:	74 1a                	je     93ed <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    93d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d7:	48 89 c7             	mov    %rax,%rdi
    93da:	e8 cd ff ff ff       	call   93ac <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    93df:	83 f0 01             	xor    $0x1,%eax
    93e2:	84 c0                	test   %al,%al
    93e4:	74 07                	je     93ed <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    93e6:	b8 01 00 00 00       	mov    $0x1,%eax
    93eb:	eb 05                	jmp    93f2 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    93ed:	b8 00 00 00 00       	mov    $0x0,%eax
    93f2:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    93f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93f8:	48 89 c7             	mov    %rax,%rdi
    93fb:	e8 a8 0d 00 00       	call   a1a8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    9400:	c9                   	leave
    9401:	c3                   	ret

0000000000009402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    9402:	55                   	push   %rbp
    9403:	48 89 e5             	mov    %rsp,%rbp
    9406:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    940a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    940e:	5d                   	pop    %rbp
    940f:	c3                   	ret

0000000000009410 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    9410:	55                   	push   %rbp
    9411:	48 89 e5             	mov    %rsp,%rbp
    9414:	53                   	push   %rbx
    9415:	48 83 ec 18          	sub    $0x18,%rsp
    9419:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    941d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    9421:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    9425:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    9429:	48 89 c7             	mov    %rax,%rdi
    942c:	e8 d1 ff ff ff       	call   9402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    9431:	48 89 c6             	mov    %rax,%rsi
    9434:	48 89 df             	mov    %rbx,%rdi
    9437:	e8 7a 0d 00 00       	call   a1b6 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    943c:	90                   	nop
    943d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9441:	c9                   	leave
    9442:	c3                   	ret
    9443:	90                   	nop

0000000000009444 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9444:	55                   	push   %rbp
    9445:	48 89 e5             	mov    %rsp,%rbp
    9448:	48 83 ec 10          	sub    $0x10,%rsp
    944c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9450:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9454:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    945c:	48 89 d6             	mov    %rdx,%rsi
    945f:	48 89 c7             	mov    %rax,%rdi
    9462:	e8 95 0d 00 00       	call   a1fc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    9467:	90                   	nop
    9468:	c9                   	leave
    9469:	c3                   	ret

000000000000946a <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    946a:	55                   	push   %rbp
    946b:	48 89 e5             	mov    %rsp,%rbp
    946e:	48 83 ec 20          	sub    $0x20,%rsp
    9472:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9476:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    947a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    947e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9483:	74 17                	je     949c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9489:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    948d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9491:	48 89 ce             	mov    %rcx,%rsi
    9494:	48 89 c7             	mov    %rax,%rdi
    9497:	e8 6f 0d 00 00       	call   a20b <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    949c:	90                   	nop
    949d:	c9                   	leave
    949e:	c3                   	ret
    949f:	90                   	nop

00000000000094a0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    94a0:	55                   	push   %rbp
    94a1:	48 89 e5             	mov    %rsp,%rbp
    94a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94a8:	90                   	nop
    94a9:	5d                   	pop    %rbp
    94aa:	c3                   	ret
    94ab:	90                   	nop

00000000000094ac <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    94ac:	55                   	push   %rbp
    94ad:	48 89 e5             	mov    %rsp,%rbp
    94b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94b4:	90                   	nop
    94b5:	5d                   	pop    %rbp
    94b6:	c3                   	ret

00000000000094b7 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    94b7:	55                   	push   %rbp
    94b8:	48 89 e5             	mov    %rsp,%rbp
    94bb:	53                   	push   %rbx
    94bc:	48 83 ec 28          	sub    $0x28,%rsp
    94c0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    94c4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    94c8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    94cc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94d0:	48 89 d6             	mov    %rdx,%rsi
    94d3:	48 89 c7             	mov    %rax,%rdi
    94d6:	e8 25 01 00 00       	call   9600 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    94db:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94df:	48 89 c7             	mov    %rax,%rdi
    94e2:	e8 52 0d 00 00       	call   a239 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    94e7:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    94eb:	0f 92 c3             	setb   %bl
    94ee:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    94f2:	48 89 c7             	mov    %rax,%rdi
    94f5:	e8 b8 f0 ff ff       	call   85b2 <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    94fa:	84 db                	test   %bl,%bl
    94fc:	74 0f                	je     950d <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    94fe:	48 8d 05 a3 eb 00 00 	lea    0xeba3(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9505:	48 89 c7             	mov    %rax,%rdi
    9508:	e8 63 ac ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    950d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9511:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9515:	c9                   	leave
    9516:	c3                   	ret
    9517:	90                   	nop

0000000000009518 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9518:	55                   	push   %rbp
    9519:	48 89 e5             	mov    %rsp,%rbp
    951c:	53                   	push   %rbx
    951d:	48 83 ec 28          	sub    $0x28,%rsp
    9521:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9525:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9529:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    952d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9531:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9535:	48 89 d6             	mov    %rdx,%rsi
    9538:	48 89 c7             	mov    %rax,%rdi
    953b:	e8 3c 0d 00 00       	call   a27c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9540:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9544:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9548:	48 89 d6             	mov    %rdx,%rsi
    954b:	48 89 c7             	mov    %rax,%rdi
    954e:	e8 5b 0d 00 00       	call   a2ae <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    9553:	eb 1a                	jmp    956f <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    9555:	48 89 c3             	mov    %rax,%rbx
    9558:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    955c:	48 89 c7             	mov    %rax,%rdi
    955f:	e8 36 e6 ff ff       	call   7b9a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    9564:	48 89 d8             	mov    %rbx,%rax
    9567:	48 89 c7             	mov    %rax,%rdi
    956a:	e8 41 b1 ff ff       	call   46b0 <_Unwind_Resume@plt>
    956f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9573:	c9                   	leave
    9574:	c3                   	ret
    9575:	90                   	nop

0000000000009576 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9576:	55                   	push   %rbp
    9577:	48 89 e5             	mov    %rsp,%rbp
    957a:	48 83 ec 10          	sub    $0x10,%rsp
    957e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9582:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    958a:	48 89 c7             	mov    %rax,%rdi
    958d:	e8 24 00 00 00       	call   95b6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    9592:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9595:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9599:	48 8b 00             	mov    (%rax),%rax
    959c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    95a0:	48 89 ce             	mov    %rcx,%rsi
    95a3:	48 89 c7             	mov    %rax,%rdi
    95a6:	e8 59 0d 00 00       	call   a304 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    95ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    95af:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    95b3:	90                   	nop
    95b4:	c9                   	leave
    95b5:	c3                   	ret

00000000000095b6 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    95b6:	55                   	push   %rbp
    95b7:	48 89 e5             	mov    %rsp,%rbp
    95ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    95be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95c2:	5d                   	pop    %rbp
    95c3:	c3                   	ret

00000000000095c4 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    95c4:	55                   	push   %rbp
    95c5:	48 89 e5             	mov    %rsp,%rbp
    95c8:	48 83 ec 20          	sub    $0x20,%rsp
    95cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    95d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    95d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    95dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    95e0:	48 89 d6             	mov    %rdx,%rsi
    95e3:	48 89 c7             	mov    %rax,%rdi
    95e6:	e8 42 0d 00 00       	call   a32d <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    95eb:	90                   	nop
    95ec:	c9                   	leave
    95ed:	c3                   	ret

00000000000095ee <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    95ee:	55                   	push   %rbp
    95ef:	48 89 e5             	mov    %rsp,%rbp
    95f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95f6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    95fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    95fe:	5d                   	pop    %rbp
    95ff:	c3                   	ret

0000000000009600 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9600:	55                   	push   %rbp
    9601:	48 89 e5             	mov    %rsp,%rbp
    9604:	48 83 ec 10          	sub    $0x10,%rsp
    9608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    960c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9610:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9614:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9618:	48 89 d6             	mov    %rdx,%rsi
    961b:	48 89 c7             	mov    %rax,%rdi
    961e:	e8 31 0d 00 00       	call   a354 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    9623:	90                   	nop
    9624:	c9                   	leave
    9625:	c3                   	ret

0000000000009626 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9626:	55                   	push   %rbp
    9627:	48 89 e5             	mov    %rsp,%rbp
    962a:	48 83 ec 20          	sub    $0x20,%rsp
    962e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9632:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9636:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    963a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    963f:	74 17                	je     9658 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9641:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9645:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9649:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    964d:	48 89 ce             	mov    %rcx,%rsi
    9650:	48 89 c7             	mov    %rax,%rdi
    9653:	e8 0b 0d 00 00       	call   a363 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    9658:	90                   	nop
    9659:	c9                   	leave
    965a:	c3                   	ret
    965b:	90                   	nop

000000000000965c <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    965c:	55                   	push   %rbp
    965d:	48 89 e5             	mov    %rsp,%rbp
    9660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9664:	90                   	nop
    9665:	5d                   	pop    %rbp
    9666:	c3                   	ret
    9667:	90                   	nop

0000000000009668 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9668:	55                   	push   %rbp
    9669:	48 89 e5             	mov    %rsp,%rbp
    966c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9670:	90                   	nop
    9671:	5d                   	pop    %rbp
    9672:	c3                   	ret

0000000000009673 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9673:	55                   	push   %rbp
    9674:	48 89 e5             	mov    %rsp,%rbp
    9677:	53                   	push   %rbx
    9678:	48 83 ec 28          	sub    $0x28,%rsp
    967c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9680:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9684:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9688:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    968c:	48 89 d6             	mov    %rdx,%rsi
    968f:	48 89 c7             	mov    %rax,%rdi
    9692:	e8 25 01 00 00       	call   97bc <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9697:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    969b:	48 89 c7             	mov    %rax,%rdi
    969e:	e8 ee 0c 00 00       	call   a391 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    96a3:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    96a7:	0f 92 c3             	setb   %bl
    96aa:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    96ae:	48 89 c7             	mov    %rax,%rdi
    96b1:	e8 60 f0 ff ff       	call   8716 <_ZNSaI16VkPresentModeKHRED1Ev>
    96b6:	84 db                	test   %bl,%bl
    96b8:	74 0f                	je     96c9 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    96ba:	48 8d 05 e7 e9 00 00 	lea    0xe9e7(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    96c1:	48 89 c7             	mov    %rax,%rdi
    96c4:	e8 a7 aa ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    96c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    96cd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    96d1:	c9                   	leave
    96d2:	c3                   	ret
    96d3:	90                   	nop

00000000000096d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    96d4:	55                   	push   %rbp
    96d5:	48 89 e5             	mov    %rsp,%rbp
    96d8:	53                   	push   %rbx
    96d9:	48 83 ec 28          	sub    $0x28,%rsp
    96dd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    96e1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    96e5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    96e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    96ed:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    96f1:	48 89 d6             	mov    %rdx,%rsi
    96f4:	48 89 c7             	mov    %rax,%rdi
    96f7:	e8 d8 0c 00 00       	call   a3d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    96fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9700:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9704:	48 89 d6             	mov    %rdx,%rsi
    9707:	48 89 c7             	mov    %rax,%rdi
    970a:	e8 f7 0c 00 00       	call   a406 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    970f:	eb 1a                	jmp    972b <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    9711:	48 89 c3             	mov    %rax,%rbx
    9714:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9718:	48 89 c7             	mov    %rax,%rdi
    971b:	e8 96 e4 ff ff       	call   7bb6 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    9720:	48 89 d8             	mov    %rbx,%rax
    9723:	48 89 c7             	mov    %rax,%rdi
    9726:	e8 85 af ff ff       	call   46b0 <_Unwind_Resume@plt>
    972b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    972f:	c9                   	leave
    9730:	c3                   	ret
    9731:	90                   	nop

0000000000009732 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9732:	55                   	push   %rbp
    9733:	48 89 e5             	mov    %rsp,%rbp
    9736:	48 83 ec 10          	sub    $0x10,%rsp
    973a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    973e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9742:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9746:	48 89 c7             	mov    %rax,%rdi
    9749:	e8 24 00 00 00       	call   9772 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    974e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9751:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9755:	48 8b 00             	mov    (%rax),%rax
    9758:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    975c:	48 89 ce             	mov    %rcx,%rsi
    975f:	48 89 c7             	mov    %rax,%rdi
    9762:	e8 f5 0c 00 00       	call   a45c <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9767:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    976b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    976f:	90                   	nop
    9770:	c9                   	leave
    9771:	c3                   	ret

0000000000009772 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9772:	55                   	push   %rbp
    9773:	48 89 e5             	mov    %rsp,%rbp
    9776:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    977a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    977e:	5d                   	pop    %rbp
    977f:	c3                   	ret

0000000000009780 <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9780:	55                   	push   %rbp
    9781:	48 89 e5             	mov    %rsp,%rbp
    9784:	48 83 ec 20          	sub    $0x20,%rsp
    9788:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    978c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9790:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9794:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9798:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    979c:	48 89 d6             	mov    %rdx,%rsi
    979f:	48 89 c7             	mov    %rax,%rdi
    97a2:	e8 de 0c 00 00       	call   a485 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    97a7:	90                   	nop
    97a8:	c9                   	leave
    97a9:	c3                   	ret

00000000000097aa <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    97aa:	55                   	push   %rbp
    97ab:	48 89 e5             	mov    %rsp,%rbp
    97ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    97b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    97ba:	5d                   	pop    %rbp
    97bb:	c3                   	ret

00000000000097bc <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    97bc:	55                   	push   %rbp
    97bd:	48 89 e5             	mov    %rsp,%rbp
    97c0:	48 83 ec 10          	sub    $0x10,%rsp
    97c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    97cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    97d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d4:	48 89 d6             	mov    %rdx,%rsi
    97d7:	48 89 c7             	mov    %rax,%rdi
    97da:	e8 cd 0c 00 00       	call   a4ac <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    97df:	90                   	nop
    97e0:	c9                   	leave
    97e1:	c3                   	ret

00000000000097e2 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    97e2:	55                   	push   %rbp
    97e3:	48 89 e5             	mov    %rsp,%rbp
    97e6:	48 83 ec 20          	sub    $0x20,%rsp
    97ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    97f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    97f6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    97fb:	74 17                	je     9814 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    97fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9801:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9805:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9809:	48 89 ce             	mov    %rcx,%rsi
    980c:	48 89 c7             	mov    %rax,%rdi
    980f:	e8 a7 0c 00 00       	call   a4bb <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9814:	90                   	nop
    9815:	c9                   	leave
    9816:	c3                   	ret
    9817:	90                   	nop

0000000000009818 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9818:	55                   	push   %rbp
    9819:	48 89 e5             	mov    %rsp,%rbp
    981c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9820:	90                   	nop
    9821:	5d                   	pop    %rbp
    9822:	c3                   	ret
    9823:	90                   	nop

0000000000009824 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9824:	55                   	push   %rbp
    9825:	48 89 e5             	mov    %rsp,%rbp
    9828:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    982c:	90                   	nop
    982d:	5d                   	pop    %rbp
    982e:	c3                   	ret

000000000000982f <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    982f:	55                   	push   %rbp
    9830:	48 89 e5             	mov    %rsp,%rbp
    9833:	53                   	push   %rbx
    9834:	48 83 ec 28          	sub    $0x28,%rsp
    9838:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    983c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9840:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9844:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9848:	48 89 d6             	mov    %rdx,%rsi
    984b:	48 89 c7             	mov    %rax,%rdi
    984e:	e8 25 01 00 00       	call   9978 <_ZNSaIP9VkImage_TEC1ERKS1_>
    9853:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9857:	48 89 c7             	mov    %rax,%rdi
    985a:	e8 8a 0c 00 00       	call   a4e9 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    985f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9863:	0f 92 c3             	setb   %bl
    9866:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    986a:	48 89 c7             	mov    %rax,%rdi
    986d:	e8 08 f0 ff ff       	call   887a <_ZNSaIP9VkImage_TED1Ev>
    9872:	84 db                	test   %bl,%bl
    9874:	74 0f                	je     9885 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    9876:	48 8d 05 2b e8 00 00 	lea    0xe82b(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    987d:	48 89 c7             	mov    %rax,%rdi
    9880:	e8 eb a8 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9885:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9889:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    988d:	c9                   	leave
    988e:	c3                   	ret
    988f:	90                   	nop

0000000000009890 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9890:	55                   	push   %rbp
    9891:	48 89 e5             	mov    %rsp,%rbp
    9894:	53                   	push   %rbx
    9895:	48 83 ec 28          	sub    $0x28,%rsp
    9899:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    989d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    98a1:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    98a5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98a9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    98ad:	48 89 d6             	mov    %rdx,%rsi
    98b0:	48 89 c7             	mov    %rax,%rdi
    98b3:	e8 74 0c 00 00       	call   a52c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    98b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    98bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98c0:	48 89 d6             	mov    %rdx,%rsi
    98c3:	48 89 c7             	mov    %rax,%rdi
    98c6:	e8 93 0c 00 00       	call   a55e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    98cb:	eb 1a                	jmp    98e7 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    98cd:	48 89 c3             	mov    %rax,%rbx
    98d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    98d4:	48 89 c7             	mov    %rax,%rdi
    98d7:	e8 f6 e2 ff ff       	call   7bd2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    98dc:	48 89 d8             	mov    %rbx,%rax
    98df:	48 89 c7             	mov    %rax,%rdi
    98e2:	e8 c9 ad ff ff       	call   46b0 <_Unwind_Resume@plt>
    98e7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    98eb:	c9                   	leave
    98ec:	c3                   	ret
    98ed:	90                   	nop

00000000000098ee <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    98ee:	55                   	push   %rbp
    98ef:	48 89 e5             	mov    %rsp,%rbp
    98f2:	48 83 ec 10          	sub    $0x10,%rsp
    98f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    98fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9902:	48 89 c7             	mov    %rax,%rdi
    9905:	e8 24 00 00 00       	call   992e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    990a:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    990d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9911:	48 8b 00             	mov    (%rax),%rax
    9914:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9918:	48 89 ce             	mov    %rcx,%rsi
    991b:	48 89 c7             	mov    %rax,%rdi
    991e:	e8 91 0c 00 00       	call   a5b4 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9923:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9927:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    992b:	90                   	nop
    992c:	c9                   	leave
    992d:	c3                   	ret

000000000000992e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    992e:	55                   	push   %rbp
    992f:	48 89 e5             	mov    %rsp,%rbp
    9932:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9936:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    993a:	5d                   	pop    %rbp
    993b:	c3                   	ret

000000000000993c <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    993c:	55                   	push   %rbp
    993d:	48 89 e5             	mov    %rsp,%rbp
    9940:	48 83 ec 20          	sub    $0x20,%rsp
    9944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    994c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9950:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9958:	48 89 d6             	mov    %rdx,%rsi
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 7a 0c 00 00       	call   a5dd <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    9963:	90                   	nop
    9964:	c9                   	leave
    9965:	c3                   	ret

0000000000009966 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9966:	55                   	push   %rbp
    9967:	48 89 e5             	mov    %rsp,%rbp
    996a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    996e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9972:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9976:	5d                   	pop    %rbp
    9977:	c3                   	ret

0000000000009978 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9978:	55                   	push   %rbp
    9979:	48 89 e5             	mov    %rsp,%rbp
    997c:	48 83 ec 10          	sub    $0x10,%rsp
    9980:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9984:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9988:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    998c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9990:	48 89 d6             	mov    %rdx,%rsi
    9993:	48 89 c7             	mov    %rax,%rdi
    9996:	e8 69 0c 00 00       	call   a604 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    999b:	90                   	nop
    999c:	c9                   	leave
    999d:	c3                   	ret

000000000000999e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    999e:	55                   	push   %rbp
    999f:	48 89 e5             	mov    %rsp,%rbp
    99a2:	48 83 ec 20          	sub    $0x20,%rsp
    99a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99aa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99ae:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    99b2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    99b7:	74 17                	je     99d0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    99b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99bd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    99c1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    99c5:	48 89 ce             	mov    %rcx,%rsi
    99c8:	48 89 c7             	mov    %rax,%rdi
    99cb:	e8 43 0c 00 00       	call   a613 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    99d0:	90                   	nop
    99d1:	c9                   	leave
    99d2:	c3                   	ret

00000000000099d3 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    99d3:	55                   	push   %rbp
    99d4:	48 89 e5             	mov    %rsp,%rbp
    99d7:	48 83 ec 20          	sub    $0x20,%rsp
    99db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    99df:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    99e6:	03 3f 00 
    99e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    99ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    99f1:	48 89 c7             	mov    %rax,%rdi
    99f4:	e8 48 0c 00 00       	call   a641 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    99f9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    99fd:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9a01:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a05:	48 89 d6             	mov    %rdx,%rsi
    9a08:	48 89 c7             	mov    %rax,%rdi
    9a0b:	e8 dd b8 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    9a10:	48 8b 00             	mov    (%rax),%rax
      }
    9a13:	c9                   	leave
    9a14:	c3                   	ret
    9a15:	90                   	nop

0000000000009a16 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9a16:	55                   	push   %rbp
    9a17:	48 89 e5             	mov    %rsp,%rbp
    9a1a:	48 83 ec 10          	sub    $0x10,%rsp
    9a1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9a26:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a2a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a2e:	48 89 d6             	mov    %rdx,%rsi
    9a31:	48 89 c7             	mov    %rax,%rdi
    9a34:	e8 e9 f0 ff ff       	call   8b22 <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a3d:	48 89 c7             	mov    %rax,%rdi
    9a40:	e8 17 0c 00 00       	call   a65c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9a45:	90                   	nop
    9a46:	c9                   	leave
    9a47:	c3                   	ret

0000000000009a48 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9a48:	55                   	push   %rbp
    9a49:	48 89 e5             	mov    %rsp,%rbp
    9a4c:	48 83 ec 10          	sub    $0x10,%rsp
    9a50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a54:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9a58:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a60:	48 89 d6             	mov    %rdx,%rsi
    9a63:	48 89 c7             	mov    %rax,%rdi
    9a66:	e8 1f 0c 00 00       	call   a68a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9a6b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9a6f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9a72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a76:	48 8b 10             	mov    (%rax),%rdx
    9a79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a7d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a85:	48 8b 08             	mov    (%rax),%rcx
    9a88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a8c:	48 89 d0             	mov    %rdx,%rax
    9a8f:	48 c1 e0 06          	shl    $0x6,%rax
    9a93:	48 01 d0             	add    %rdx,%rax
    9a96:	48 c1 e0 03          	shl    $0x3,%rax
    9a9a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aa2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9aa6:	90                   	nop
    9aa7:	c9                   	leave
    9aa8:	c3                   	ret

0000000000009aa9 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9aa9:	55                   	push   %rbp
    9aaa:	48 89 e5             	mov    %rsp,%rbp
    9aad:	48 83 ec 20          	sub    $0x20,%rsp
    9ab1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ab5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ab9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9abd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ac1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ac5:	48 89 d6             	mov    %rdx,%rsi
    9ac8:	48 89 c7             	mov    %rax,%rdi
    9acb:	e8 ed 0b 00 00       	call   a6bd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9ad0:	c9                   	leave
    9ad1:	c3                   	ret

0000000000009ad2 <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9ad2:	55                   	push   %rbp
    9ad3:	48 89 e5             	mov    %rsp,%rbp
    9ad6:	48 83 ec 10          	sub    $0x10,%rsp
    9ada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ade:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9ae2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aea:	48 89 d6             	mov    %rdx,%rsi
    9aed:	48 89 c7             	mov    %rax,%rdi
    9af0:	e8 f1 0b 00 00       	call   a6e6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9af5:	90                   	nop
    9af6:	c9                   	leave
    9af7:	c3                   	ret

0000000000009af8 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9af8:	55                   	push   %rbp
    9af9:	48 89 e5             	mov    %rsp,%rbp
    9afc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b04:	90                   	nop
    9b05:	5d                   	pop    %rbp
    9b06:	c3                   	ret

0000000000009b07 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9b07:	55                   	push   %rbp
    9b08:	48 89 e5             	mov    %rsp,%rbp
    9b0b:	48 83 ec 20          	sub    $0x20,%rsp
    9b0f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b13:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b17:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9b1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b1f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b27:	48 89 ce             	mov    %rcx,%rsi
    9b2a:	48 89 c7             	mov    %rax,%rdi
    9b2d:	e8 c4 0b 00 00       	call   a6f6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9b32:	90                   	nop
    9b33:	c9                   	leave
    9b34:	c3                   	ret

0000000000009b35 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9b35:	55                   	push   %rbp
    9b36:	48 89 e5             	mov    %rsp,%rbp
    9b39:	48 83 ec 20          	sub    $0x20,%rsp
    9b3d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9b41:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9b48:	07 7e 00 
    9b4b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9b4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9b53:	48 89 c7             	mov    %rax,%rdi
    9b56:	e8 d5 0b 00 00       	call   a730 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9b5b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9b5f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9b63:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9b67:	48 89 d6             	mov    %rdx,%rsi
    9b6a:	48 89 c7             	mov    %rax,%rdi
    9b6d:	e8 7b b7 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    9b72:	48 8b 00             	mov    (%rax),%rax
      }
    9b75:	c9                   	leave
    9b76:	c3                   	ret
    9b77:	90                   	nop

0000000000009b78 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9b78:	55                   	push   %rbp
    9b79:	48 89 e5             	mov    %rsp,%rbp
    9b7c:	48 83 ec 10          	sub    $0x10,%rsp
    9b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9b88:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b90:	48 89 d6             	mov    %rdx,%rsi
    9b93:	48 89 c7             	mov    %rax,%rdi
    9b96:	e8 43 f1 ff ff       	call   8cde <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b9f:	48 89 c7             	mov    %rax,%rdi
    9ba2:	e8 a3 0b 00 00       	call   a74a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9ba7:	90                   	nop
    9ba8:	c9                   	leave
    9ba9:	c3                   	ret

0000000000009baa <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9baa:	55                   	push   %rbp
    9bab:	48 89 e5             	mov    %rsp,%rbp
    9bae:	48 83 ec 10          	sub    $0x10,%rsp
    9bb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9bb6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9bba:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bc2:	48 89 d6             	mov    %rdx,%rsi
    9bc5:	48 89 c7             	mov    %rax,%rdi
    9bc8:	e8 ab 0b 00 00       	call   a778 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9bcd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9bd1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9bd4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bd8:	48 8b 10             	mov    (%rax),%rdx
    9bdb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9bdf:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9be3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9be7:	48 8b 08             	mov    (%rax),%rcx
    9bea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9bee:	48 89 d0             	mov    %rdx,%rax
    9bf1:	48 c1 e0 06          	shl    $0x6,%rax
    9bf5:	48 01 d0             	add    %rdx,%rax
    9bf8:	48 c1 e0 02          	shl    $0x2,%rax
    9bfc:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9c00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c04:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9c08:	90                   	nop
    9c09:	c9                   	leave
    9c0a:	c3                   	ret

0000000000009c0b <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c0b:	55                   	push   %rbp
    9c0c:	48 89 e5             	mov    %rsp,%rbp
    9c0f:	48 83 ec 20          	sub    $0x20,%rsp
    9c13:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c17:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c1b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c1f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c27:	48 89 d6             	mov    %rdx,%rsi
    9c2a:	48 89 c7             	mov    %rax,%rdi
    9c2d:	e8 79 0b 00 00       	call   a7ab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9c32:	c9                   	leave
    9c33:	c3                   	ret

0000000000009c34 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9c34:	55                   	push   %rbp
    9c35:	48 89 e5             	mov    %rsp,%rbp
    9c38:	48 83 ec 10          	sub    $0x10,%rsp
    9c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9c44:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c4c:	48 89 d6             	mov    %rdx,%rsi
    9c4f:	48 89 c7             	mov    %rax,%rdi
    9c52:	e8 7d 0b 00 00       	call   a7d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9c57:	90                   	nop
    9c58:	c9                   	leave
    9c59:	c3                   	ret

0000000000009c5a <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9c5a:	55                   	push   %rbp
    9c5b:	48 89 e5             	mov    %rsp,%rbp
    9c5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c66:	90                   	nop
    9c67:	5d                   	pop    %rbp
    9c68:	c3                   	ret

0000000000009c69 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9c69:	55                   	push   %rbp
    9c6a:	48 89 e5             	mov    %rsp,%rbp
    9c6d:	48 83 ec 20          	sub    $0x20,%rsp
    9c71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c79:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9c7d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9c81:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9c85:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c89:	48 89 ce             	mov    %rcx,%rsi
    9c8c:	48 89 c7             	mov    %rax,%rdi
    9c8f:	e8 50 0b 00 00       	call   a7e4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9c94:	90                   	nop
    9c95:	c9                   	leave
    9c96:	c3                   	ret

0000000000009c97 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9c97:	55                   	push   %rbp
    9c98:	48 89 e5             	mov    %rsp,%rbp
    9c9b:	48 83 ec 20          	sub    $0x20,%rsp
    9c9f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9ca3:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9caa:	ff ff 0f 
    9cad:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9cb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9cb5:	48 89 c7             	mov    %rax,%rdi
    9cb8:	e8 61 0b 00 00       	call   a81e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9cbd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9cc1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9cc5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9cc9:	48 89 d6             	mov    %rdx,%rsi
    9ccc:	48 89 c7             	mov    %rax,%rdi
    9ccf:	e8 19 b6 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    9cd4:	48 8b 00             	mov    (%rax),%rax
      }
    9cd7:	c9                   	leave
    9cd8:	c3                   	ret
    9cd9:	90                   	nop

0000000000009cda <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9cda:	55                   	push   %rbp
    9cdb:	48 89 e5             	mov    %rsp,%rbp
    9cde:	48 83 ec 10          	sub    $0x10,%rsp
    9ce2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ce6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cf2:	48 89 d6             	mov    %rdx,%rsi
    9cf5:	48 89 c7             	mov    %rax,%rdi
    9cf8:	e8 61 f1 ff ff       	call   8e5e <_ZNSaIPKcEC1ERKS1_>
    9cfd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d01:	48 89 c7             	mov    %rax,%rdi
    9d04:	e8 2f 0b 00 00       	call   a838 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9d09:	90                   	nop
    9d0a:	c9                   	leave
    9d0b:	c3                   	ret

0000000000009d0c <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d0c:	55                   	push   %rbp
    9d0d:	48 89 e5             	mov    %rsp,%rbp
    9d10:	48 83 ec 10          	sub    $0x10,%rsp
    9d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d24:	48 89 d6             	mov    %rdx,%rsi
    9d27:	48 89 c7             	mov    %rax,%rdi
    9d2a:	e8 37 0b 00 00       	call   a866 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9d2f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9d33:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d3a:	48 8b 10             	mov    (%rax),%rdx
    9d3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d41:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9d45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d49:	48 8b 00             	mov    (%rax),%rax
    9d4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d50:	48 c1 e2 03          	shl    $0x3,%rdx
    9d54:	48 01 c2             	add    %rax,%rdx
    9d57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d5b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9d5f:	90                   	nop
    9d60:	c9                   	leave
    9d61:	c3                   	ret

0000000000009d62 <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9d62:	55                   	push   %rbp
    9d63:	48 89 e5             	mov    %rsp,%rbp
    9d66:	48 83 ec 20          	sub    $0x20,%rsp
    9d6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9d76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7e:	48 89 d6             	mov    %rdx,%rsi
    9d81:	48 89 c7             	mov    %rax,%rdi
    9d84:	e8 10 0b 00 00       	call   a899 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9d89:	c9                   	leave
    9d8a:	c3                   	ret
    9d8b:	90                   	nop

0000000000009d8c <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9d8c:	55                   	push   %rbp
    9d8d:	48 89 e5             	mov    %rsp,%rbp
    9d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9d98:	90                   	nop
    9d99:	5d                   	pop    %rbp
    9d9a:	c3                   	ret

0000000000009d9b <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9d9b:	55                   	push   %rbp
    9d9c:	48 89 e5             	mov    %rsp,%rbp
    9d9f:	48 83 ec 20          	sub    $0x20,%rsp
    9da3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9da7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dab:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9daf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9db3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9db7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dbb:	48 89 ce             	mov    %rcx,%rsi
    9dbe:	48 89 c7             	mov    %rax,%rdi
    9dc1:	e8 fc 0a 00 00       	call   a8c2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9dc6:	90                   	nop
    9dc7:	c9                   	leave
    9dc8:	c3                   	ret

0000000000009dc9 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9dc9:	55                   	push   %rbp
    9dca:	48 89 e5             	mov    %rsp,%rbp
    9dcd:	48 83 ec 20          	sub    $0x20,%rsp
    9dd1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9dd5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9ddc:	ff ff 0f 
    9ddf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9de3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9de7:	48 89 c7             	mov    %rax,%rdi
    9dea:	e8 04 0b 00 00       	call   a8f3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9def:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9df3:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9df7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9dfb:	48 89 d6             	mov    %rdx,%rsi
    9dfe:	48 89 c7             	mov    %rax,%rdi
    9e01:	e8 e7 b4 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    9e06:	48 8b 00             	mov    (%rax),%rax
      }
    9e09:	c9                   	leave
    9e0a:	c3                   	ret
    9e0b:	90                   	nop

0000000000009e0c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e0c:	55                   	push   %rbp
    9e0d:	48 89 e5             	mov    %rsp,%rbp
    9e10:	48 83 ec 10          	sub    $0x10,%rsp
    9e14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e18:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e1c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e24:	48 89 d6             	mov    %rdx,%rsi
    9e27:	48 89 c7             	mov    %rax,%rdi
    9e2a:	e8 eb f1 ff ff       	call   901a <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9e2f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e33:	48 89 c7             	mov    %rax,%rdi
    9e36:	e8 d3 0a 00 00       	call   a90e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9e3b:	90                   	nop
    9e3c:	c9                   	leave
    9e3d:	c3                   	ret

0000000000009e3e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9e3e:	55                   	push   %rbp
    9e3f:	48 89 e5             	mov    %rsp,%rbp
    9e42:	48 83 ec 10          	sub    $0x10,%rsp
    9e46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e4a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9e4e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e56:	48 89 d6             	mov    %rdx,%rsi
    9e59:	48 89 c7             	mov    %rax,%rdi
    9e5c:	e8 db 0a 00 00       	call   a93c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9e61:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9e65:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9e68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e6c:	48 8b 10             	mov    (%rax),%rdx
    9e6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e73:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9e77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e7b:	48 8b 00             	mov    (%rax),%rax
    9e7e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e82:	48 c1 e2 03          	shl    $0x3,%rdx
    9e86:	48 01 c2             	add    %rax,%rdx
    9e89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e8d:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9e91:	90                   	nop
    9e92:	c9                   	leave
    9e93:	c3                   	ret

0000000000009e94 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9e94:	55                   	push   %rbp
    9e95:	48 89 e5             	mov    %rsp,%rbp
    9e98:	48 83 ec 20          	sub    $0x20,%rsp
    9e9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ea0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ea4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9ea8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9eac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eb0:	48 89 d6             	mov    %rdx,%rsi
    9eb3:	48 89 c7             	mov    %rax,%rdi
    9eb6:	e8 b4 0a 00 00       	call   a96f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    9ebb:	c9                   	leave
    9ebc:	c3                   	ret

0000000000009ebd <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9ebd:	55                   	push   %rbp
    9ebe:	48 89 e5             	mov    %rsp,%rbp
    9ec1:	48 83 ec 10          	sub    $0x10,%rsp
    9ec5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ec9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9ecd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ed1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed5:	48 89 d6             	mov    %rdx,%rsi
    9ed8:	48 89 c7             	mov    %rax,%rdi
    9edb:	e8 b8 0a 00 00       	call   a998 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    9ee0:	90                   	nop
    9ee1:	c9                   	leave
    9ee2:	c3                   	ret
    9ee3:	90                   	nop

0000000000009ee4 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    9ee4:	55                   	push   %rbp
    9ee5:	48 89 e5             	mov    %rsp,%rbp
    9ee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ef0:	90                   	nop
    9ef1:	5d                   	pop    %rbp
    9ef2:	c3                   	ret

0000000000009ef3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9ef3:	55                   	push   %rbp
    9ef4:	48 89 e5             	mov    %rsp,%rbp
    9ef7:	48 83 ec 20          	sub    $0x20,%rsp
    9efb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9eff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f03:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f07:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f0b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f13:	48 89 ce             	mov    %rcx,%rsi
    9f16:	48 89 c7             	mov    %rax,%rdi
    9f19:	e8 8a 0a 00 00       	call   a9a8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    9f1e:	90                   	nop
    9f1f:	c9                   	leave
    9f20:	c3                   	ret

0000000000009f21 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f21:	55                   	push   %rbp
    9f22:	48 89 e5             	mov    %rsp,%rbp
    9f25:	48 83 ec 20          	sub    $0x20,%rsp
    9f29:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9f2d:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    9f34:	55 55 05 
    9f37:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9f3b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9f3f:	48 89 c7             	mov    %rax,%rdi
    9f42:	e8 92 0a 00 00       	call   a9d9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    9f47:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9f4b:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9f4f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9f53:	48 89 d6             	mov    %rdx,%rsi
    9f56:	48 89 c7             	mov    %rax,%rdi
    9f59:	e8 8f b3 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    9f5e:	48 8b 00             	mov    (%rax),%rax
      }
    9f61:	c9                   	leave
    9f62:	c3                   	ret
    9f63:	90                   	nop

0000000000009f64 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9f64:	55                   	push   %rbp
    9f65:	48 89 e5             	mov    %rsp,%rbp
    9f68:	48 83 ec 10          	sub    $0x10,%rsp
    9f6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9f74:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f7c:	48 89 d6             	mov    %rdx,%rsi
    9f7f:	48 89 c7             	mov    %rax,%rdi
    9f82:	e8 4f f2 ff ff       	call   91d6 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    9f87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8b:	48 89 c7             	mov    %rax,%rdi
    9f8e:	e8 61 0a 00 00       	call   a9f4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9f93:	90                   	nop
    9f94:	c9                   	leave
    9f95:	c3                   	ret

0000000000009f96 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9f96:	55                   	push   %rbp
    9f97:	48 89 e5             	mov    %rsp,%rbp
    9f9a:	48 83 ec 10          	sub    $0x10,%rsp
    9f9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fa2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9fa6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9faa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fae:	48 89 d6             	mov    %rdx,%rsi
    9fb1:	48 89 c7             	mov    %rax,%rdi
    9fb4:	e8 69 0a 00 00       	call   aa22 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    9fb9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9fbd:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9fc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fc4:	48 8b 10             	mov    (%rax),%rdx
    9fc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fcb:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9fcf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fd3:	48 8b 08             	mov    (%rax),%rcx
    9fd6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9fda:	48 89 d0             	mov    %rdx,%rax
    9fdd:	48 01 c0             	add    %rax,%rax
    9fe0:	48 01 d0             	add    %rdx,%rax
    9fe3:	48 c1 e0 03          	shl    $0x3,%rax
    9fe7:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9feb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9fef:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ff3:	90                   	nop
    9ff4:	c9                   	leave
    9ff5:	c3                   	ret

0000000000009ff6 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9ff6:	55                   	push   %rbp
    9ff7:	48 89 e5             	mov    %rsp,%rbp
    9ffa:	48 83 ec 20          	sub    $0x20,%rsp
    9ffe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a002:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a006:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a00a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a00e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a012:	48 89 d6             	mov    %rdx,%rsi
    a015:	48 89 c7             	mov    %rax,%rdi
    a018:	e8 38 0a 00 00       	call   aa55 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a01d:	c9                   	leave
    a01e:	c3                   	ret

000000000000a01f <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a01f:	55                   	push   %rbp
    a020:	48 89 e5             	mov    %rsp,%rbp
    a023:	48 83 ec 10          	sub    $0x10,%rsp
    a027:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a02b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a02f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a033:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a037:	48 89 d6             	mov    %rdx,%rsi
    a03a:	48 89 c7             	mov    %rax,%rdi
    a03d:	e8 3c 0a 00 00       	call   aa7e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a042:	90                   	nop
    a043:	c9                   	leave
    a044:	c3                   	ret
    a045:	90                   	nop

000000000000a046 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a046:	55                   	push   %rbp
    a047:	48 89 e5             	mov    %rsp,%rbp
    a04a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a04e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a052:	90                   	nop
    a053:	5d                   	pop    %rbp
    a054:	c3                   	ret

000000000000a055 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a055:	55                   	push   %rbp
    a056:	48 89 e5             	mov    %rsp,%rbp
    a059:	48 83 ec 20          	sub    $0x20,%rsp
    a05d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a061:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a065:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a069:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a06d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a071:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a075:	48 89 ce             	mov    %rcx,%rsi
    a078:	48 89 c7             	mov    %rax,%rdi
    a07b:	e8 0e 0a 00 00       	call   aa8e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a080:	90                   	nop
    a081:	c9                   	leave
    a082:	c3                   	ret

000000000000a083 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a083:	55                   	push   %rbp
    a084:	48 89 e5             	mov    %rsp,%rbp
    a087:	48 83 ec 20          	sub    $0x20,%rsp
    a08b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a08f:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a096:	49 92 04 
    a099:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a09d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a0a1:	48 89 c7             	mov    %rax,%rdi
    a0a4:	e8 1e 0a 00 00       	call   aac7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a0a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a0ad:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a0b1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a0b5:	48 89 d6             	mov    %rdx,%rsi
    a0b8:	48 89 c7             	mov    %rax,%rdi
    a0bb:	e8 2d b2 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    a0c0:	48 8b 00             	mov    (%rax),%rax
      }
    a0c3:	c9                   	leave
    a0c4:	c3                   	ret
    a0c5:	90                   	nop

000000000000a0c6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a0c6:	55                   	push   %rbp
    a0c7:	48 89 e5             	mov    %rsp,%rbp
    a0ca:	48 83 ec 10          	sub    $0x10,%rsp
    a0ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a0d6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0de:	48 89 d6             	mov    %rdx,%rsi
    a0e1:	48 89 c7             	mov    %rax,%rdi
    a0e4:	e8 5b f3 ff ff       	call   9444 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a0e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0ed:	48 89 c7             	mov    %rax,%rdi
    a0f0:	e8 ed 09 00 00       	call   aae2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a0f5:	90                   	nop
    a0f6:	c9                   	leave
    a0f7:	c3                   	ret

000000000000a0f8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a0f8:	55                   	push   %rbp
    a0f9:	48 89 e5             	mov    %rsp,%rbp
    a0fc:	48 83 ec 10          	sub    $0x10,%rsp
    a100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a104:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a108:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a110:	48 89 d6             	mov    %rdx,%rsi
    a113:	48 89 c7             	mov    %rax,%rdi
    a116:	e8 f5 09 00 00       	call   ab10 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a11b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a11f:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a122:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a126:	48 8b 10             	mov    (%rax),%rdx
    a129:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a12d:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a135:	48 8b 08             	mov    (%rax),%rcx
    a138:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a13c:	48 89 d0             	mov    %rdx,%rax
    a13f:	48 c1 e0 03          	shl    $0x3,%rax
    a143:	48 29 d0             	sub    %rdx,%rax
    a146:	48 c1 e0 02          	shl    $0x2,%rax
    a14a:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a14e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a152:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a156:	90                   	nop
    a157:	c9                   	leave
    a158:	c3                   	ret

000000000000a159 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a159:	55                   	push   %rbp
    a15a:	48 89 e5             	mov    %rsp,%rbp
    a15d:	48 83 ec 20          	sub    $0x20,%rsp
    a161:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a165:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a169:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a16d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a171:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a175:	48 89 d6             	mov    %rdx,%rsi
    a178:	48 89 c7             	mov    %rax,%rdi
    a17b:	e8 c3 09 00 00       	call   ab43 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a180:	c9                   	leave
    a181:	c3                   	ret

000000000000a182 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a182:	55                   	push   %rbp
    a183:	48 89 e5             	mov    %rsp,%rbp
    a186:	48 83 ec 10          	sub    $0x10,%rsp
    a18a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a18e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a192:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a19a:	48 89 d6             	mov    %rdx,%rsi
    a19d:	48 89 c7             	mov    %rax,%rdi
    a1a0:	e8 c7 09 00 00       	call   ab6c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a1a5:	90                   	nop
    a1a6:	c9                   	leave
    a1a7:	c3                   	ret

000000000000a1a8 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a1a8:	55                   	push   %rbp
    a1a9:	48 89 e5             	mov    %rsp,%rbp
    a1ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a1b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b4:	5d                   	pop    %rbp
    a1b5:	c3                   	ret

000000000000a1b6 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a1b6:	55                   	push   %rbp
    a1b7:	48 89 e5             	mov    %rsp,%rbp
    a1ba:	53                   	push   %rbx
    a1bb:	48 83 ec 18          	sub    $0x18,%rsp
    a1bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a1c3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a1c7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a1cb:	48 89 c7             	mov    %rax,%rdi
    a1ce:	e8 2f f2 ff ff       	call   9402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a1d3:	48 89 c3             	mov    %rax,%rbx
    a1d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1da:	48 89 c7             	mov    %rax,%rdi
    a1dd:	e8 99 09 00 00       	call   ab7b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a1e2:	48 89 de             	mov    %rbx,%rsi
    a1e5:	48 89 c7             	mov    %rax,%rdi
    a1e8:	e8 9c 09 00 00       	call   ab89 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a1ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a1f1:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a1f5:	90                   	nop
    a1f6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a1fa:	c9                   	leave
    a1fb:	c3                   	ret

000000000000a1fc <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a1fc:	55                   	push   %rbp
    a1fd:	48 89 e5             	mov    %rsp,%rbp
    a200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a204:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a208:	90                   	nop
    a209:	5d                   	pop    %rbp
    a20a:	c3                   	ret

000000000000a20b <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a20b:	55                   	push   %rbp
    a20c:	48 89 e5             	mov    %rsp,%rbp
    a20f:	48 83 ec 20          	sub    $0x20,%rsp
    a213:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a217:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a21b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a21f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a223:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a227:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a22b:	48 89 ce             	mov    %rcx,%rsi
    a22e:	48 89 c7             	mov    %rax,%rdi
    a231:	e8 a4 09 00 00       	call   abda <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a236:	90                   	nop
    a237:	c9                   	leave
    a238:	c3                   	ret

000000000000a239 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a239:	55                   	push   %rbp
    a23a:	48 89 e5             	mov    %rsp,%rbp
    a23d:	48 83 ec 20          	sub    $0x20,%rsp
    a241:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a245:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a24c:	ff ff 0f 
    a24f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a253:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a257:	48 89 c7             	mov    %rax,%rdi
    a25a:	e8 b5 09 00 00       	call   ac14 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a25f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a263:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a267:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a26b:	48 89 d6             	mov    %rdx,%rsi
    a26e:	48 89 c7             	mov    %rax,%rdi
    a271:	e8 77 b0 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    a276:	48 8b 00             	mov    (%rax),%rax
      }
    a279:	c9                   	leave
    a27a:	c3                   	ret
    a27b:	90                   	nop

000000000000a27c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a27c:	55                   	push   %rbp
    a27d:	48 89 e5             	mov    %rsp,%rbp
    a280:	48 83 ec 10          	sub    $0x10,%rsp
    a284:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a288:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a28c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a290:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a294:	48 89 d6             	mov    %rdx,%rsi
    a297:	48 89 c7             	mov    %rax,%rdi
    a29a:	e8 61 f3 ff ff       	call   9600 <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a29f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a3:	48 89 c7             	mov    %rax,%rdi
    a2a6:	e8 83 09 00 00       	call   ac2e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a2ab:	90                   	nop
    a2ac:	c9                   	leave
    a2ad:	c3                   	ret

000000000000a2ae <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a2ae:	55                   	push   %rbp
    a2af:	48 89 e5             	mov    %rsp,%rbp
    a2b2:	48 83 ec 10          	sub    $0x10,%rsp
    a2b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a2ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a2be:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2c6:	48 89 d6             	mov    %rdx,%rsi
    a2c9:	48 89 c7             	mov    %rax,%rdi
    a2cc:	e8 8b 09 00 00       	call   ac5c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a2d1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a2d5:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a2d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2dc:	48 8b 10             	mov    (%rax),%rdx
    a2df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2e3:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a2e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2eb:	48 8b 00             	mov    (%rax),%rax
    a2ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a2f2:	48 c1 e2 03          	shl    $0x3,%rdx
    a2f6:	48 01 c2             	add    %rax,%rdx
    a2f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2fd:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a301:	90                   	nop
    a302:	c9                   	leave
    a303:	c3                   	ret

000000000000a304 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a304:	55                   	push   %rbp
    a305:	48 89 e5             	mov    %rsp,%rbp
    a308:	48 83 ec 20          	sub    $0x20,%rsp
    a30c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a310:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a314:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a318:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a31c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a320:	48 89 d6             	mov    %rdx,%rsi
    a323:	48 89 c7             	mov    %rax,%rdi
    a326:	e8 64 09 00 00       	call   ac8f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a32b:	c9                   	leave
    a32c:	c3                   	ret

000000000000a32d <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a32d:	55                   	push   %rbp
    a32e:	48 89 e5             	mov    %rsp,%rbp
    a331:	48 83 ec 10          	sub    $0x10,%rsp
    a335:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a339:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a33d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a341:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a345:	48 89 d6             	mov    %rdx,%rsi
    a348:	48 89 c7             	mov    %rax,%rdi
    a34b:	e8 68 09 00 00       	call   acb8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a350:	90                   	nop
    a351:	c9                   	leave
    a352:	c3                   	ret
    a353:	90                   	nop

000000000000a354 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a354:	55                   	push   %rbp
    a355:	48 89 e5             	mov    %rsp,%rbp
    a358:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a35c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a360:	90                   	nop
    a361:	5d                   	pop    %rbp
    a362:	c3                   	ret

000000000000a363 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a363:	55                   	push   %rbp
    a364:	48 89 e5             	mov    %rsp,%rbp
    a367:	48 83 ec 20          	sub    $0x20,%rsp
    a36b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a36f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a373:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a377:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a37b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a37f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a383:	48 89 ce             	mov    %rcx,%rsi
    a386:	48 89 c7             	mov    %rax,%rdi
    a389:	e8 3a 09 00 00       	call   acc8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a38e:	90                   	nop
    a38f:	c9                   	leave
    a390:	c3                   	ret

000000000000a391 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a391:	55                   	push   %rbp
    a392:	48 89 e5             	mov    %rsp,%rbp
    a395:	48 83 ec 20          	sub    $0x20,%rsp
    a399:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a39d:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a3a4:	ff ff 1f 
    a3a7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a3ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a3af:	48 89 c7             	mov    %rax,%rdi
    a3b2:	e8 42 09 00 00       	call   acf9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a3b7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a3bb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a3bf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a3c3:	48 89 d6             	mov    %rdx,%rsi
    a3c6:	48 89 c7             	mov    %rax,%rdi
    a3c9:	e8 1f af ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    a3ce:	48 8b 00             	mov    (%rax),%rax
      }
    a3d1:	c9                   	leave
    a3d2:	c3                   	ret
    a3d3:	90                   	nop

000000000000a3d4 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a3d4:	55                   	push   %rbp
    a3d5:	48 89 e5             	mov    %rsp,%rbp
    a3d8:	48 83 ec 10          	sub    $0x10,%rsp
    a3dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a3e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ec:	48 89 d6             	mov    %rdx,%rsi
    a3ef:	48 89 c7             	mov    %rax,%rdi
    a3f2:	e8 c5 f3 ff ff       	call   97bc <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a3f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3fb:	48 89 c7             	mov    %rax,%rdi
    a3fe:	e8 11 09 00 00       	call   ad14 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a403:	90                   	nop
    a404:	c9                   	leave
    a405:	c3                   	ret

000000000000a406 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a406:	55                   	push   %rbp
    a407:	48 89 e5             	mov    %rsp,%rbp
    a40a:	48 83 ec 10          	sub    $0x10,%rsp
    a40e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a416:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a41a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a41e:	48 89 d6             	mov    %rdx,%rsi
    a421:	48 89 c7             	mov    %rax,%rdi
    a424:	e8 19 09 00 00       	call   ad42 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a429:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a42d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a434:	48 8b 10             	mov    (%rax),%rdx
    a437:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a43b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a43f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a443:	48 8b 00             	mov    (%rax),%rax
    a446:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a44a:	48 c1 e2 02          	shl    $0x2,%rdx
    a44e:	48 01 c2             	add    %rax,%rdx
    a451:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a455:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a459:	90                   	nop
    a45a:	c9                   	leave
    a45b:	c3                   	ret

000000000000a45c <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a45c:	55                   	push   %rbp
    a45d:	48 89 e5             	mov    %rsp,%rbp
    a460:	48 83 ec 20          	sub    $0x20,%rsp
    a464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a468:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a46c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a470:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a474:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a478:	48 89 d6             	mov    %rdx,%rsi
    a47b:	48 89 c7             	mov    %rax,%rdi
    a47e:	e8 f2 08 00 00       	call   ad75 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a483:	c9                   	leave
    a484:	c3                   	ret

000000000000a485 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a485:	55                   	push   %rbp
    a486:	48 89 e5             	mov    %rsp,%rbp
    a489:	48 83 ec 10          	sub    $0x10,%rsp
    a48d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a491:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a495:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a499:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49d:	48 89 d6             	mov    %rdx,%rsi
    a4a0:	48 89 c7             	mov    %rax,%rdi
    a4a3:	e8 f6 08 00 00       	call   ad9e <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a4a8:	90                   	nop
    a4a9:	c9                   	leave
    a4aa:	c3                   	ret
    a4ab:	90                   	nop

000000000000a4ac <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a4ac:	55                   	push   %rbp
    a4ad:	48 89 e5             	mov    %rsp,%rbp
    a4b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4b8:	90                   	nop
    a4b9:	5d                   	pop    %rbp
    a4ba:	c3                   	ret

000000000000a4bb <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a4bb:	55                   	push   %rbp
    a4bc:	48 89 e5             	mov    %rsp,%rbp
    a4bf:	48 83 ec 20          	sub    $0x20,%rsp
    a4c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4c7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4cb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a4cf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a4d3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a4d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4db:	48 89 ce             	mov    %rcx,%rsi
    a4de:	48 89 c7             	mov    %rax,%rdi
    a4e1:	e8 c8 08 00 00       	call   adae <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a4e6:	90                   	nop
    a4e7:	c9                   	leave
    a4e8:	c3                   	ret

000000000000a4e9 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a4e9:	55                   	push   %rbp
    a4ea:	48 89 e5             	mov    %rsp,%rbp
    a4ed:	48 83 ec 20          	sub    $0x20,%rsp
    a4f1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a4f5:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a4fc:	ff ff 0f 
    a4ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a503:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a507:	48 89 c7             	mov    %rax,%rdi
    a50a:	e8 d0 08 00 00       	call   addf <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a50f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a513:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a517:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a51b:	48 89 d6             	mov    %rdx,%rsi
    a51e:	48 89 c7             	mov    %rax,%rdi
    a521:	e8 c7 ad ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    a526:	48 8b 00             	mov    (%rax),%rax
      }
    a529:	c9                   	leave
    a52a:	c3                   	ret
    a52b:	90                   	nop

000000000000a52c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a52c:	55                   	push   %rbp
    a52d:	48 89 e5             	mov    %rsp,%rbp
    a530:	48 83 ec 10          	sub    $0x10,%rsp
    a534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a53c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a540:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a544:	48 89 d6             	mov    %rdx,%rsi
    a547:	48 89 c7             	mov    %rax,%rdi
    a54a:	e8 29 f4 ff ff       	call   9978 <_ZNSaIP9VkImage_TEC1ERKS1_>
    a54f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a553:	48 89 c7             	mov    %rax,%rdi
    a556:	e8 9f 08 00 00       	call   adfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a55b:	90                   	nop
    a55c:	c9                   	leave
    a55d:	c3                   	ret

000000000000a55e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a55e:	55                   	push   %rbp
    a55f:	48 89 e5             	mov    %rsp,%rbp
    a562:	48 83 ec 10          	sub    $0x10,%rsp
    a566:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a56a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a56e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a572:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a576:	48 89 d6             	mov    %rdx,%rsi
    a579:	48 89 c7             	mov    %rax,%rdi
    a57c:	e8 a7 08 00 00       	call   ae28 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a581:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a585:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a588:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a58c:	48 8b 10             	mov    (%rax),%rdx
    a58f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a593:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a597:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a59b:	48 8b 00             	mov    (%rax),%rax
    a59e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5a2:	48 c1 e2 03          	shl    $0x3,%rdx
    a5a6:	48 01 c2             	add    %rax,%rdx
    a5a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a5b1:	90                   	nop
    a5b2:	c9                   	leave
    a5b3:	c3                   	ret

000000000000a5b4 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a5b4:	55                   	push   %rbp
    a5b5:	48 89 e5             	mov    %rsp,%rbp
    a5b8:	48 83 ec 20          	sub    $0x20,%rsp
    a5bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a5c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a5c8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5d0:	48 89 d6             	mov    %rdx,%rsi
    a5d3:	48 89 c7             	mov    %rax,%rdi
    a5d6:	e8 80 08 00 00       	call   ae5b <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a5db:	c9                   	leave
    a5dc:	c3                   	ret

000000000000a5dd <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a5dd:	55                   	push   %rbp
    a5de:	48 89 e5             	mov    %rsp,%rbp
    a5e1:	48 83 ec 10          	sub    $0x10,%rsp
    a5e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a5ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f5:	48 89 d6             	mov    %rdx,%rsi
    a5f8:	48 89 c7             	mov    %rax,%rdi
    a5fb:	e8 84 08 00 00       	call   ae84 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a600:	90                   	nop
    a601:	c9                   	leave
    a602:	c3                   	ret
    a603:	90                   	nop

000000000000a604 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a604:	55                   	push   %rbp
    a605:	48 89 e5             	mov    %rsp,%rbp
    a608:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a60c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a610:	90                   	nop
    a611:	5d                   	pop    %rbp
    a612:	c3                   	ret

000000000000a613 <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a613:	55                   	push   %rbp
    a614:	48 89 e5             	mov    %rsp,%rbp
    a617:	48 83 ec 20          	sub    $0x20,%rsp
    a61b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a61f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a623:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a627:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a62b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a62f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a633:	48 89 ce             	mov    %rcx,%rsi
    a636:	48 89 c7             	mov    %rax,%rdi
    a639:	e8 56 08 00 00       	call   ae94 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a63e:	90                   	nop
    a63f:	c9                   	leave
    a640:	c3                   	ret

000000000000a641 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a641:	55                   	push   %rbp
    a642:	48 89 e5             	mov    %rsp,%rbp
    a645:	48 83 ec 10          	sub    $0x10,%rsp
    a649:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a64d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a651:	48 89 c7             	mov    %rax,%rdi
    a654:	e8 6d 08 00 00       	call   aec6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a659:	c9                   	leave
    a65a:	c3                   	ret
    a65b:	90                   	nop

000000000000a65c <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a65c:	55                   	push   %rbp
    a65d:	48 89 e5             	mov    %rsp,%rbp
    a660:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a664:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a668:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a66f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a673:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a67a:	00 
    a67b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a67f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a686:	00 
	{ }
    a687:	90                   	nop
    a688:	5d                   	pop    %rbp
    a689:	c3                   	ret

000000000000a68a <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a68a:	55                   	push   %rbp
    a68b:	48 89 e5             	mov    %rsp,%rbp
    a68e:	48 83 ec 10          	sub    $0x10,%rsp
    a692:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a696:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a69a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a69f:	74 15                	je     a6b6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a6a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a6a9:	48 89 d6             	mov    %rdx,%rsi
    a6ac:	48 89 c7             	mov    %rax,%rdi
    a6af:	e8 2c 08 00 00       	call   aee0 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a6b4:	eb 05                	jmp    a6bb <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a6b6:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a6bb:	c9                   	leave
    a6bc:	c3                   	ret

000000000000a6bd <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a6bd:	55                   	push   %rbp
    a6be:	48 89 e5             	mov    %rsp,%rbp
    a6c1:	48 83 ec 20          	sub    $0x20,%rsp
    a6c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a6c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a6cd:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a6d1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a6d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a6d9:	48 89 d6             	mov    %rdx,%rsi
    a6dc:	48 89 c7             	mov    %rax,%rdi
    a6df:	e8 26 08 00 00       	call   af0a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a6e4:	c9                   	leave
    a6e5:	c3                   	ret

000000000000a6e6 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a6e6:	55                   	push   %rbp
    a6e7:	48 89 e5             	mov    %rsp,%rbp
    a6ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a6ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a6f2:	90                   	nop
    a6f3:	5d                   	pop    %rbp
    a6f4:	c3                   	ret
    a6f5:	90                   	nop

000000000000a6f6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a6f6:	55                   	push   %rbp
    a6f7:	48 89 e5             	mov    %rsp,%rbp
    a6fa:	48 83 ec 20          	sub    $0x20,%rsp
    a6fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a702:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a706:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a70a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a70e:	48 89 d0             	mov    %rdx,%rax
    a711:	48 c1 e0 06          	shl    $0x6,%rax
    a715:	48 01 d0             	add    %rdx,%rax
    a718:	48 c1 e0 03          	shl    $0x3,%rax
    a71c:	48 89 c2             	mov    %rax,%rdx
    a71f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a723:	48 89 d6             	mov    %rdx,%rsi
    a726:	48 89 c7             	mov    %rax,%rdi
    a729:	e8 42 9c ff ff       	call   4370 <_ZdlPvm@plt>
      }
    a72e:	c9                   	leave
    a72f:	c3                   	ret

000000000000a730 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a730:	55                   	push   %rbp
    a731:	48 89 e5             	mov    %rsp,%rbp
    a734:	48 83 ec 10          	sub    $0x10,%rsp
    a738:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a73c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a740:	48 89 c7             	mov    %rax,%rdi
    a743:	e8 22 08 00 00       	call   af6a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a748:	c9                   	leave
    a749:	c3                   	ret

000000000000a74a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a74a:	55                   	push   %rbp
    a74b:	48 89 e5             	mov    %rsp,%rbp
    a74e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a752:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a756:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a75d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a761:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a768:	00 
    a769:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a76d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a774:	00 
	{ }
    a775:	90                   	nop
    a776:	5d                   	pop    %rbp
    a777:	c3                   	ret

000000000000a778 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a778:	55                   	push   %rbp
    a779:	48 89 e5             	mov    %rsp,%rbp
    a77c:	48 83 ec 10          	sub    $0x10,%rsp
    a780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a788:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a78d:	74 15                	je     a7a4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a78f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a793:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a797:	48 89 d6             	mov    %rdx,%rsi
    a79a:	48 89 c7             	mov    %rax,%rdi
    a79d:	e8 e2 07 00 00       	call   af84 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a7a2:	eb 05                	jmp    a7a9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a7a4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a7a9:	c9                   	leave
    a7aa:	c3                   	ret

000000000000a7ab <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a7ab:	55                   	push   %rbp
    a7ac:	48 89 e5             	mov    %rsp,%rbp
    a7af:	48 83 ec 20          	sub    $0x20,%rsp
    a7b3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a7b7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a7bb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a7bf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a7c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a7c7:	48 89 d6             	mov    %rdx,%rsi
    a7ca:	48 89 c7             	mov    %rax,%rdi
    a7cd:	e8 dc 07 00 00       	call   afae <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a7d2:	c9                   	leave
    a7d3:	c3                   	ret

000000000000a7d4 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a7d4:	55                   	push   %rbp
    a7d5:	48 89 e5             	mov    %rsp,%rbp
    a7d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7e0:	90                   	nop
    a7e1:	5d                   	pop    %rbp
    a7e2:	c3                   	ret
    a7e3:	90                   	nop

000000000000a7e4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a7e4:	55                   	push   %rbp
    a7e5:	48 89 e5             	mov    %rsp,%rbp
    a7e8:	48 83 ec 20          	sub    $0x20,%rsp
    a7ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a7f0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a7f4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a7f8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a7fc:	48 89 d0             	mov    %rdx,%rax
    a7ff:	48 c1 e0 06          	shl    $0x6,%rax
    a803:	48 01 d0             	add    %rdx,%rax
    a806:	48 c1 e0 02          	shl    $0x2,%rax
    a80a:	48 89 c2             	mov    %rax,%rdx
    a80d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a811:	48 89 d6             	mov    %rdx,%rsi
    a814:	48 89 c7             	mov    %rax,%rdi
    a817:	e8 54 9b ff ff       	call   4370 <_ZdlPvm@plt>
      }
    a81c:	c9                   	leave
    a81d:	c3                   	ret

000000000000a81e <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a81e:	55                   	push   %rbp
    a81f:	48 89 e5             	mov    %rsp,%rbp
    a822:	48 83 ec 10          	sub    $0x10,%rsp
    a826:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a82a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a82e:	48 89 c7             	mov    %rax,%rdi
    a831:	e8 d8 07 00 00       	call   b00e <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a836:	c9                   	leave
    a837:	c3                   	ret

000000000000a838 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a838:	55                   	push   %rbp
    a839:	48 89 e5             	mov    %rsp,%rbp
    a83c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a840:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a844:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a84b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a84f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a856:	00 
    a857:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a85b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a862:	00 
	{ }
    a863:	90                   	nop
    a864:	5d                   	pop    %rbp
    a865:	c3                   	ret

000000000000a866 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a866:	55                   	push   %rbp
    a867:	48 89 e5             	mov    %rsp,%rbp
    a86a:	48 83 ec 10          	sub    $0x10,%rsp
    a86e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a872:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a876:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a87b:	74 15                	je     a892 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a87d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a881:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a885:	48 89 d6             	mov    %rdx,%rsi
    a888:	48 89 c7             	mov    %rax,%rdi
    a88b:	e8 98 07 00 00       	call   b028 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a890:	eb 05                	jmp    a897 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a892:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a897:	c9                   	leave
    a898:	c3                   	ret

000000000000a899 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a899:	55                   	push   %rbp
    a89a:	48 89 e5             	mov    %rsp,%rbp
    a89d:	48 83 ec 20          	sub    $0x20,%rsp
    a8a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a8a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a8a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a8ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a8b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8b5:	48 89 d6             	mov    %rdx,%rsi
    a8b8:	48 89 c7             	mov    %rax,%rdi
    a8bb:	e8 92 07 00 00       	call   b052 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    a8c0:	c9                   	leave
    a8c1:	c3                   	ret

000000000000a8c2 <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a8c2:	55                   	push   %rbp
    a8c3:	48 89 e5             	mov    %rsp,%rbp
    a8c6:	48 83 ec 20          	sub    $0x20,%rsp
    a8ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ce:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a8d2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a8d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a8da:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a8e1:	00 
    a8e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a8e6:	48 89 d6             	mov    %rdx,%rsi
    a8e9:	48 89 c7             	mov    %rax,%rdi
    a8ec:	e8 7f 9a ff ff       	call   4370 <_ZdlPvm@plt>
      }
    a8f1:	c9                   	leave
    a8f2:	c3                   	ret

000000000000a8f3 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a8f3:	55                   	push   %rbp
    a8f4:	48 89 e5             	mov    %rsp,%rbp
    a8f7:	48 83 ec 10          	sub    $0x10,%rsp
    a8fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a903:	48 89 c7             	mov    %rax,%rdi
    a906:	e8 a5 07 00 00       	call   b0b0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    a90b:	c9                   	leave
    a90c:	c3                   	ret
    a90d:	90                   	nop

000000000000a90e <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a90e:	55                   	push   %rbp
    a90f:	48 89 e5             	mov    %rsp,%rbp
    a912:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a916:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a91a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a921:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a925:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a92c:	00 
    a92d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a931:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a938:	00 
	{ }
    a939:	90                   	nop
    a93a:	5d                   	pop    %rbp
    a93b:	c3                   	ret

000000000000a93c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a93c:	55                   	push   %rbp
    a93d:	48 89 e5             	mov    %rsp,%rbp
    a940:	48 83 ec 10          	sub    $0x10,%rsp
    a944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a94c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a951:	74 15                	je     a968 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    a953:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a957:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a95b:	48 89 d6             	mov    %rdx,%rsi
    a95e:	48 89 c7             	mov    %rax,%rdi
    a961:	e8 64 07 00 00       	call   b0ca <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    a966:	eb 05                	jmp    a96d <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    a968:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a96d:	c9                   	leave
    a96e:	c3                   	ret

000000000000a96f <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a96f:	55                   	push   %rbp
    a970:	48 89 e5             	mov    %rsp,%rbp
    a973:	48 83 ec 20          	sub    $0x20,%rsp
    a977:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a97b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a97f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a983:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a987:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a98b:	48 89 d6             	mov    %rdx,%rsi
    a98e:	48 89 c7             	mov    %rax,%rdi
    a991:	e8 5e 07 00 00       	call   b0f4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    a996:	c9                   	leave
    a997:	c3                   	ret

000000000000a998 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    a998:	55                   	push   %rbp
    a999:	48 89 e5             	mov    %rsp,%rbp
    a99c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9a4:	90                   	nop
    a9a5:	5d                   	pop    %rbp
    a9a6:	c3                   	ret
    a9a7:	90                   	nop

000000000000a9a8 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a9a8:	55                   	push   %rbp
    a9a9:	48 89 e5             	mov    %rsp,%rbp
    a9ac:	48 83 ec 20          	sub    $0x20,%rsp
    a9b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a9b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a9bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a9c0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a9c7:	00 
    a9c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a9cc:	48 89 d6             	mov    %rdx,%rsi
    a9cf:	48 89 c7             	mov    %rax,%rdi
    a9d2:	e8 99 99 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    a9d7:	c9                   	leave
    a9d8:	c3                   	ret

000000000000a9d9 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a9d9:	55                   	push   %rbp
    a9da:	48 89 e5             	mov    %rsp,%rbp
    a9dd:	48 83 ec 10          	sub    $0x10,%rsp
    a9e1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a9e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9e9:	48 89 c7             	mov    %rax,%rdi
    a9ec:	e8 61 07 00 00       	call   b152 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    a9f1:	c9                   	leave
    a9f2:	c3                   	ret
    a9f3:	90                   	nop

000000000000a9f4 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a9f4:	55                   	push   %rbp
    a9f5:	48 89 e5             	mov    %rsp,%rbp
    a9f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a9fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa00:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa0b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa12:	00 
    aa13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa17:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa1e:	00 
	{ }
    aa1f:	90                   	nop
    aa20:	5d                   	pop    %rbp
    aa21:	c3                   	ret

000000000000aa22 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa22:	55                   	push   %rbp
    aa23:	48 89 e5             	mov    %rsp,%rbp
    aa26:	48 83 ec 10          	sub    $0x10,%rsp
    aa2a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa2e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aa32:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aa37:	74 15                	je     aa4e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    aa39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa3d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aa41:	48 89 d6             	mov    %rdx,%rsi
    aa44:	48 89 c7             	mov    %rax,%rdi
    aa47:	e8 20 07 00 00       	call   b16c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    aa4c:	eb 05                	jmp    aa53 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    aa4e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aa53:	c9                   	leave
    aa54:	c3                   	ret

000000000000aa55 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aa55:	55                   	push   %rbp
    aa56:	48 89 e5             	mov    %rsp,%rbp
    aa59:	48 83 ec 20          	sub    $0x20,%rsp
    aa5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aa61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aa65:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aa69:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa71:	48 89 d6             	mov    %rdx,%rsi
    aa74:	48 89 c7             	mov    %rax,%rdi
    aa77:	e8 1a 07 00 00       	call   b196 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    aa7c:	c9                   	leave
    aa7d:	c3                   	ret

000000000000aa7e <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    aa7e:	55                   	push   %rbp
    aa7f:	48 89 e5             	mov    %rsp,%rbp
    aa82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa86:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa8a:	90                   	nop
    aa8b:	5d                   	pop    %rbp
    aa8c:	c3                   	ret
    aa8d:	90                   	nop

000000000000aa8e <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa8e:	55                   	push   %rbp
    aa8f:	48 89 e5             	mov    %rsp,%rbp
    aa92:	48 83 ec 20          	sub    $0x20,%rsp
    aa96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aaa2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    aaa6:	48 89 d0             	mov    %rdx,%rax
    aaa9:	48 01 c0             	add    %rax,%rax
    aaac:	48 01 d0             	add    %rdx,%rax
    aaaf:	48 c1 e0 03          	shl    $0x3,%rax
    aab3:	48 89 c2             	mov    %rax,%rdx
    aab6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aaba:	48 89 d6             	mov    %rdx,%rsi
    aabd:	48 89 c7             	mov    %rax,%rdi
    aac0:	e8 ab 98 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    aac5:	c9                   	leave
    aac6:	c3                   	ret

000000000000aac7 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aac7:	55                   	push   %rbp
    aac8:	48 89 e5             	mov    %rsp,%rbp
    aacb:	48 83 ec 10          	sub    $0x10,%rsp
    aacf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aad3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aad7:	48 89 c7             	mov    %rax,%rdi
    aada:	e8 15 07 00 00       	call   b1f4 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    aadf:	c9                   	leave
    aae0:	c3                   	ret
    aae1:	90                   	nop

000000000000aae2 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aae2:	55                   	push   %rbp
    aae3:	48 89 e5             	mov    %rsp,%rbp
    aae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aaea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaee:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aaf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aaf9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab00:	00 
    ab01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab05:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab0c:	00 
	{ }
    ab0d:	90                   	nop
    ab0e:	5d                   	pop    %rbp
    ab0f:	c3                   	ret

000000000000ab10 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab10:	55                   	push   %rbp
    ab11:	48 89 e5             	mov    %rsp,%rbp
    ab14:	48 83 ec 10          	sub    $0x10,%rsp
    ab18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab20:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ab25:	74 15                	je     ab3c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    ab27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab2b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ab2f:	48 89 d6             	mov    %rdx,%rsi
    ab32:	48 89 c7             	mov    %rax,%rdi
    ab35:	e8 d4 06 00 00       	call   b20e <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    ab3a:	eb 05                	jmp    ab41 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    ab3c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ab41:	c9                   	leave
    ab42:	c3                   	ret

000000000000ab43 <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ab43:	55                   	push   %rbp
    ab44:	48 89 e5             	mov    %rsp,%rbp
    ab47:	48 83 ec 20          	sub    $0x20,%rsp
    ab4b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab4f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ab53:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ab57:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ab5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab5f:	48 89 d6             	mov    %rdx,%rsi
    ab62:	48 89 c7             	mov    %rax,%rdi
    ab65:	e8 ce 06 00 00       	call   b238 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    ab6a:	c9                   	leave
    ab6b:	c3                   	ret

000000000000ab6c <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    ab6c:	55                   	push   %rbp
    ab6d:	48 89 e5             	mov    %rsp,%rbp
    ab70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab74:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab78:	90                   	nop
    ab79:	5d                   	pop    %rbp
    ab7a:	c3                   	ret

000000000000ab7b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ab7b:	55                   	push   %rbp
    ab7c:	48 89 e5             	mov    %rsp,%rbp
    ab7f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ab83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab87:	5d                   	pop    %rbp
    ab88:	c3                   	ret

000000000000ab89 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ab89:	55                   	push   %rbp
    ab8a:	48 89 e5             	mov    %rsp,%rbp
    ab8d:	53                   	push   %rbx
    ab8e:	48 83 ec 18          	sub    $0x18,%rsp
    ab92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ab96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ab9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ab9e:	48 89 c6             	mov    %rax,%rsi
    aba1:	bf 18 00 00 00       	mov    $0x18,%edi
    aba6:	e8 75 a2 ff ff       	call   4e20 <_ZnwmPv>
    abab:	48 89 c3             	mov    %rax,%rbx
    abae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    abb2:	48 89 c7             	mov    %rax,%rdi
    abb5:	e8 48 e8 ff ff       	call   9402 <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    abba:	48 89 c1             	mov    %rax,%rcx
    abbd:	48 8b 01             	mov    (%rcx),%rax
    abc0:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    abc4:	48 89 03             	mov    %rax,(%rbx)
    abc7:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    abcb:	48 8b 41 10          	mov    0x10(%rcx),%rax
    abcf:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    abd3:	90                   	nop
    abd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    abd8:	c9                   	leave
    abd9:	c3                   	ret

000000000000abda <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    abda:	55                   	push   %rbp
    abdb:	48 89 e5             	mov    %rsp,%rbp
    abde:	48 83 ec 20          	sub    $0x20,%rsp
    abe2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abe6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    abee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    abf2:	48 89 d0             	mov    %rdx,%rax
    abf5:	48 c1 e0 03          	shl    $0x3,%rax
    abf9:	48 29 d0             	sub    %rdx,%rax
    abfc:	48 c1 e0 02          	shl    $0x2,%rax
    ac00:	48 89 c2             	mov    %rax,%rdx
    ac03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac07:	48 89 d6             	mov    %rdx,%rsi
    ac0a:	48 89 c7             	mov    %rax,%rdi
    ac0d:	e8 5e 97 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    ac12:	c9                   	leave
    ac13:	c3                   	ret

000000000000ac14 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac14:	55                   	push   %rbp
    ac15:	48 89 e5             	mov    %rsp,%rbp
    ac18:	48 83 ec 10          	sub    $0x10,%rsp
    ac1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac24:	48 89 c7             	mov    %rax,%rdi
    ac27:	e8 52 06 00 00       	call   b27e <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    ac2c:	c9                   	leave
    ac2d:	c3                   	ret

000000000000ac2e <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ac2e:	55                   	push   %rbp
    ac2f:	48 89 e5             	mov    %rsp,%rbp
    ac32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ac36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac3a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ac41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac45:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ac4c:	00 
    ac4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac51:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ac58:	00 
	{ }
    ac59:	90                   	nop
    ac5a:	5d                   	pop    %rbp
    ac5b:	c3                   	ret

000000000000ac5c <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ac5c:	55                   	push   %rbp
    ac5d:	48 89 e5             	mov    %rsp,%rbp
    ac60:	48 83 ec 10          	sub    $0x10,%rsp
    ac64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ac6c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ac71:	74 15                	je     ac88 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    ac73:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac77:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ac7b:	48 89 d6             	mov    %rdx,%rsi
    ac7e:	48 89 c7             	mov    %rax,%rdi
    ac81:	e8 12 06 00 00       	call   b298 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ac86:	eb 05                	jmp    ac8d <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    ac88:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ac8d:	c9                   	leave
    ac8e:	c3                   	ret

000000000000ac8f <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ac8f:	55                   	push   %rbp
    ac90:	48 89 e5             	mov    %rsp,%rbp
    ac93:	48 83 ec 20          	sub    $0x20,%rsp
    ac97:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac9b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ac9f:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aca3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aca7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    acab:	48 89 d6             	mov    %rdx,%rsi
    acae:	48 89 c7             	mov    %rax,%rdi
    acb1:	e8 0c 06 00 00       	call   b2c2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    acb6:	c9                   	leave
    acb7:	c3                   	ret

000000000000acb8 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    acb8:	55                   	push   %rbp
    acb9:	48 89 e5             	mov    %rsp,%rbp
    acbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acc0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acc4:	90                   	nop
    acc5:	5d                   	pop    %rbp
    acc6:	c3                   	ret
    acc7:	90                   	nop

000000000000acc8 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    acc8:	55                   	push   %rbp
    acc9:	48 89 e5             	mov    %rsp,%rbp
    accc:	48 83 ec 20          	sub    $0x20,%rsp
    acd0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    acd4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    acd8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    acdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ace0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ace7:	00 
    ace8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    acec:	48 89 d6             	mov    %rdx,%rsi
    acef:	48 89 c7             	mov    %rax,%rdi
    acf2:	e8 79 96 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    acf7:	c9                   	leave
    acf8:	c3                   	ret

000000000000acf9 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    acf9:	55                   	push   %rbp
    acfa:	48 89 e5             	mov    %rsp,%rbp
    acfd:	48 83 ec 10          	sub    $0x10,%rsp
    ad01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad09:	48 89 c7             	mov    %rax,%rdi
    ad0c:	e8 0f 06 00 00       	call   b320 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    ad11:	c9                   	leave
    ad12:	c3                   	ret
    ad13:	90                   	nop

000000000000ad14 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad14:	55                   	push   %rbp
    ad15:	48 89 e5             	mov    %rsp,%rbp
    ad18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad20:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ad27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad2b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ad32:	00 
    ad33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad37:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ad3e:	00 
	{ }
    ad3f:	90                   	nop
    ad40:	5d                   	pop    %rbp
    ad41:	c3                   	ret

000000000000ad42 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ad42:	55                   	push   %rbp
    ad43:	48 89 e5             	mov    %rsp,%rbp
    ad46:	48 83 ec 10          	sub    $0x10,%rsp
    ad4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ad52:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ad57:	74 15                	je     ad6e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    ad59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad5d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ad61:	48 89 d6             	mov    %rdx,%rsi
    ad64:	48 89 c7             	mov    %rax,%rdi
    ad67:	e8 ce 05 00 00       	call   b33a <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    ad6c:	eb 05                	jmp    ad73 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    ad6e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ad73:	c9                   	leave
    ad74:	c3                   	ret

000000000000ad75 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ad75:	55                   	push   %rbp
    ad76:	48 89 e5             	mov    %rsp,%rbp
    ad79:	48 83 ec 20          	sub    $0x20,%rsp
    ad7d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad81:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad85:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad89:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad8d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad91:	48 89 d6             	mov    %rdx,%rsi
    ad94:	48 89 c7             	mov    %rax,%rdi
    ad97:	e8 c8 05 00 00       	call   b364 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    ad9c:	c9                   	leave
    ad9d:	c3                   	ret

000000000000ad9e <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    ad9e:	55                   	push   %rbp
    ad9f:	48 89 e5             	mov    %rsp,%rbp
    ada2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ada6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    adaa:	90                   	nop
    adab:	5d                   	pop    %rbp
    adac:	c3                   	ret
    adad:	90                   	nop

000000000000adae <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    adae:	55                   	push   %rbp
    adaf:	48 89 e5             	mov    %rsp,%rbp
    adb2:	48 83 ec 20          	sub    $0x20,%rsp
    adb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    adbe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    adc2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    adc6:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    adcd:	00 
    adce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    add2:	48 89 d6             	mov    %rdx,%rsi
    add5:	48 89 c7             	mov    %rax,%rdi
    add8:	e8 93 95 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    addd:	c9                   	leave
    adde:	c3                   	ret

000000000000addf <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    addf:	55                   	push   %rbp
    ade0:	48 89 e5             	mov    %rsp,%rbp
    ade3:	48 83 ec 10          	sub    $0x10,%rsp
    ade7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    adeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adef:	48 89 c7             	mov    %rax,%rdi
    adf2:	e8 cb 05 00 00       	call   b3c2 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    adf7:	c9                   	leave
    adf8:	c3                   	ret
    adf9:	90                   	nop

000000000000adfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    adfa:	55                   	push   %rbp
    adfb:	48 89 e5             	mov    %rsp,%rbp
    adfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae06:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae0d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae11:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae18:	00 
    ae19:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae1d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ae24:	00 
	{ }
    ae25:	90                   	nop
    ae26:	5d                   	pop    %rbp
    ae27:	c3                   	ret

000000000000ae28 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ae28:	55                   	push   %rbp
    ae29:	48 89 e5             	mov    %rsp,%rbp
    ae2c:	48 83 ec 10          	sub    $0x10,%rsp
    ae30:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae34:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ae38:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    ae3d:	74 15                	je     ae54 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    ae3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae43:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ae47:	48 89 d6             	mov    %rdx,%rsi
    ae4a:	48 89 c7             	mov    %rax,%rdi
    ae4d:	e8 8a 05 00 00       	call   b3dc <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    ae52:	eb 05                	jmp    ae59 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    ae54:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ae59:	c9                   	leave
    ae5a:	c3                   	ret

000000000000ae5b <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ae5b:	55                   	push   %rbp
    ae5c:	48 89 e5             	mov    %rsp,%rbp
    ae5f:	48 83 ec 20          	sub    $0x20,%rsp
    ae63:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ae67:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae6b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae6f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae77:	48 89 d6             	mov    %rdx,%rsi
    ae7a:	48 89 c7             	mov    %rax,%rdi
    ae7d:	e8 84 05 00 00       	call   b406 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    ae82:	c9                   	leave
    ae83:	c3                   	ret

000000000000ae84 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    ae84:	55                   	push   %rbp
    ae85:	48 89 e5             	mov    %rsp,%rbp
    ae88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae90:	90                   	nop
    ae91:	5d                   	pop    %rbp
    ae92:	c3                   	ret
    ae93:	90                   	nop

000000000000ae94 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae94:	55                   	push   %rbp
    ae95:	48 89 e5             	mov    %rsp,%rbp
    ae98:	48 83 ec 20          	sub    $0x20,%rsp
    ae9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aea0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aea4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aeac:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aeb3:	00 
    aeb4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aeb8:	48 89 d6             	mov    %rdx,%rsi
    aebb:	48 89 c7             	mov    %rax,%rdi
    aebe:	e8 ad 94 ff ff       	call   4370 <_ZdlPvm@plt>
      }
    aec3:	c9                   	leave
    aec4:	c3                   	ret
    aec5:	90                   	nop

000000000000aec6 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    aec6:	55                   	push   %rbp
    aec7:	48 89 e5             	mov    %rsp,%rbp
    aeca:	48 83 ec 10          	sub    $0x10,%rsp
    aece:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    aed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aed6:	48 89 c7             	mov    %rax,%rdi
    aed9:	e8 86 05 00 00       	call   b464 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    aede:	c9                   	leave
    aedf:	c3                   	ret

000000000000aee0 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    aee0:	55                   	push   %rbp
    aee1:	48 89 e5             	mov    %rsp,%rbp
    aee4:	48 83 ec 10          	sub    $0x10,%rsp
    aee8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    aef0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    aef4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aef8:	ba 00 00 00 00       	mov    $0x0,%edx
    aefd:	48 89 ce             	mov    %rcx,%rsi
    af00:	48 89 c7             	mov    %rax,%rdi
    af03:	e8 70 05 00 00       	call   b478 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    af08:	c9                   	leave
    af09:	c3                   	ret

000000000000af0a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    af0a:	55                   	push   %rbp
    af0b:	48 89 e5             	mov    %rsp,%rbp
    af0e:	48 83 ec 20          	sub    $0x20,%rsp
    af12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af16:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    af1a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    af1f:	74 43                	je     af64 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    af21:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af25:	48 89 c7             	mov    %rax,%rdi
    af28:	e8 b6 05 00 00       	call   b4e3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    af2d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    af31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af35:	48 89 c7             	mov    %rax,%rdi
    af38:	e8 b4 05 00 00       	call   b4f1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    af3d:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    af44:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    af45:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    af49:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    af4d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    af51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af55:	48 89 ce             	mov    %rcx,%rsi
    af58:	48 89 c7             	mov    %rax,%rdi
    af5b:	e8 eb 05 00 00       	call   b54b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    af60:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    af64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    af68:	c9                   	leave
    af69:	c3                   	ret

000000000000af6a <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    af6a:	55                   	push   %rbp
    af6b:	48 89 e5             	mov    %rsp,%rbp
    af6e:	48 83 ec 10          	sub    $0x10,%rsp
    af72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    af76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af7a:	48 89 c7             	mov    %rax,%rdi
    af7d:	e8 0e 06 00 00       	call   b590 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    af82:	c9                   	leave
    af83:	c3                   	ret

000000000000af84 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    af84:	55                   	push   %rbp
    af85:	48 89 e5             	mov    %rsp,%rbp
    af88:	48 83 ec 10          	sub    $0x10,%rsp
    af8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af90:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    af94:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af9c:	ba 00 00 00 00       	mov    $0x0,%edx
    afa1:	48 89 ce             	mov    %rcx,%rsi
    afa4:	48 89 c7             	mov    %rax,%rdi
    afa7:	e8 f8 05 00 00       	call   b5a4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    afac:	c9                   	leave
    afad:	c3                   	ret

000000000000afae <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    afae:	55                   	push   %rbp
    afaf:	48 89 e5             	mov    %rsp,%rbp
    afb2:	48 83 ec 20          	sub    $0x20,%rsp
    afb6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    afba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    afbe:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    afc3:	74 43                	je     b008 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    afc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afc9:	48 89 c7             	mov    %rax,%rdi
    afcc:	e8 3e 06 00 00       	call   b60f <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    afd1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    afd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afd9:	48 89 c7             	mov    %rax,%rdi
    afdc:	e8 3c 06 00 00       	call   b61d <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    afe1:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    afe8:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    afe9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afed:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    aff1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    aff5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aff9:	48 89 ce             	mov    %rcx,%rsi
    affc:	48 89 c7             	mov    %rax,%rdi
    afff:	e8 73 06 00 00       	call   b677 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b004:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b008:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b00c:	c9                   	leave
    b00d:	c3                   	ret

000000000000b00e <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b00e:	55                   	push   %rbp
    b00f:	48 89 e5             	mov    %rsp,%rbp
    b012:	48 83 ec 10          	sub    $0x10,%rsp
    b016:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b01a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b01e:	48 89 c7             	mov    %rax,%rdi
    b021:	e8 96 06 00 00       	call   b6bc <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b026:	c9                   	leave
    b027:	c3                   	ret

000000000000b028 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b028:	55                   	push   %rbp
    b029:	48 89 e5             	mov    %rsp,%rbp
    b02c:	48 83 ec 10          	sub    $0x10,%rsp
    b030:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b034:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b038:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b040:	ba 00 00 00 00       	mov    $0x0,%edx
    b045:	48 89 ce             	mov    %rcx,%rsi
    b048:	48 89 c7             	mov    %rax,%rdi
    b04b:	e8 80 06 00 00       	call   b6d0 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b050:	c9                   	leave
    b051:	c3                   	ret

000000000000b052 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b052:	55                   	push   %rbp
    b053:	48 89 e5             	mov    %rsp,%rbp
    b056:	48 83 ec 20          	sub    $0x20,%rsp
    b05a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b05e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b062:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b067:	74 40                	je     b0a9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b069:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b06d:	48 89 c7             	mov    %rax,%rdi
    b070:	e8 bc 06 00 00       	call   b731 <_ZSt11__addressofIPKcEPT_RS2_>
    b075:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b079:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b07d:	48 89 c7             	mov    %rax,%rdi
    b080:	e8 ba 06 00 00       	call   b73f <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b085:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b08a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b08e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b092:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b09a:	48 89 ce             	mov    %rcx,%rsi
    b09d:	48 89 c7             	mov    %rax,%rdi
    b0a0:	e8 c1 06 00 00       	call   b766 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b0a5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b0a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b0ad:	c9                   	leave
    b0ae:	c3                   	ret
    b0af:	90                   	nop

000000000000b0b0 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b0b0:	55                   	push   %rbp
    b0b1:	48 89 e5             	mov    %rsp,%rbp
    b0b4:	48 83 ec 10          	sub    $0x10,%rsp
    b0b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b0bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0c0:	48 89 c7             	mov    %rax,%rdi
    b0c3:	e8 e2 06 00 00       	call   b7aa <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b0c8:	c9                   	leave
    b0c9:	c3                   	ret

000000000000b0ca <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b0ca:	55                   	push   %rbp
    b0cb:	48 89 e5             	mov    %rsp,%rbp
    b0ce:	48 83 ec 10          	sub    $0x10,%rsp
    b0d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0da:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0e2:	ba 00 00 00 00       	mov    $0x0,%edx
    b0e7:	48 89 ce             	mov    %rcx,%rsi
    b0ea:	48 89 c7             	mov    %rax,%rdi
    b0ed:	e8 cc 06 00 00       	call   b7be <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b0f2:	c9                   	leave
    b0f3:	c3                   	ret

000000000000b0f4 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b0f4:	55                   	push   %rbp
    b0f5:	48 89 e5             	mov    %rsp,%rbp
    b0f8:	48 83 ec 20          	sub    $0x20,%rsp
    b0fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b100:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b104:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b109:	74 40                	je     b14b <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b10b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b10f:	48 89 c7             	mov    %rax,%rdi
    b112:	e8 08 07 00 00       	call   b81f <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b117:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b11b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b11f:	48 89 c7             	mov    %rax,%rdi
    b122:	e8 06 07 00 00       	call   b82d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b127:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b12c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b130:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b134:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b13c:	48 89 ce             	mov    %rcx,%rsi
    b13f:	48 89 c7             	mov    %rax,%rdi
    b142:	e8 0d 07 00 00       	call   b854 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b147:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b14b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b14f:	c9                   	leave
    b150:	c3                   	ret
    b151:	90                   	nop

000000000000b152 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b152:	55                   	push   %rbp
    b153:	48 89 e5             	mov    %rsp,%rbp
    b156:	48 83 ec 10          	sub    $0x10,%rsp
    b15a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b15e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b162:	48 89 c7             	mov    %rax,%rdi
    b165:	e8 2e 07 00 00       	call   b898 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b16a:	c9                   	leave
    b16b:	c3                   	ret

000000000000b16c <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b16c:	55                   	push   %rbp
    b16d:	48 89 e5             	mov    %rsp,%rbp
    b170:	48 83 ec 10          	sub    $0x10,%rsp
    b174:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b178:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b17c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b184:	ba 00 00 00 00       	mov    $0x0,%edx
    b189:	48 89 ce             	mov    %rcx,%rsi
    b18c:	48 89 c7             	mov    %rax,%rdi
    b18f:	e8 18 07 00 00       	call   b8ac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b194:	c9                   	leave
    b195:	c3                   	ret

000000000000b196 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b196:	55                   	push   %rbp
    b197:	48 89 e5             	mov    %rsp,%rbp
    b19a:	48 83 ec 20          	sub    $0x20,%rsp
    b19e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b1a2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b1a6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b1ab:	74 40                	je     b1ed <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b1ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1b1:	48 89 c7             	mov    %rax,%rdi
    b1b4:	e8 c2 f9 ff ff       	call   ab7b <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b1b9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b1bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1c1:	48 89 c7             	mov    %rax,%rdi
    b1c4:	e8 4d 07 00 00       	call   b916 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b1c9:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b1ce:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1d2:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1d6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1de:	48 89 ce             	mov    %rcx,%rsi
    b1e1:	48 89 c7             	mov    %rax,%rdi
    b1e4:	e8 76 07 00 00       	call   b95f <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b1e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b1ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b1f1:	c9                   	leave
    b1f2:	c3                   	ret
    b1f3:	90                   	nop

000000000000b1f4 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b1f4:	55                   	push   %rbp
    b1f5:	48 89 e5             	mov    %rsp,%rbp
    b1f8:	48 83 ec 10          	sub    $0x10,%rsp
    b1fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b204:	48 89 c7             	mov    %rax,%rdi
    b207:	e8 98 07 00 00       	call   b9a4 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b20c:	c9                   	leave
    b20d:	c3                   	ret

000000000000b20e <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b20e:	55                   	push   %rbp
    b20f:	48 89 e5             	mov    %rsp,%rbp
    b212:	48 83 ec 10          	sub    $0x10,%rsp
    b216:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b21a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b21e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b226:	ba 00 00 00 00       	mov    $0x0,%edx
    b22b:	48 89 ce             	mov    %rcx,%rsi
    b22e:	48 89 c7             	mov    %rax,%rdi
    b231:	e8 82 07 00 00       	call   b9b8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b236:	c9                   	leave
    b237:	c3                   	ret

000000000000b238 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b238:	55                   	push   %rbp
    b239:	48 89 e5             	mov    %rsp,%rbp
    b23c:	48 83 ec 20          	sub    $0x20,%rsp
    b240:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b244:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b24c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b250:	eb 1e                	jmp    b270 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b252:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b256:	48 89 c7             	mov    %rax,%rdi
    b259:	e8 c5 07 00 00       	call   ba23 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b25e:	48 89 c7             	mov    %rax,%rdi
    b261:	e8 cb 07 00 00       	call   ba31 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b266:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b26b:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b270:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b275:	75 db                	jne    b252 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b277:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b27b:	c9                   	leave
    b27c:	c3                   	ret
    b27d:	90                   	nop

000000000000b27e <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b27e:	55                   	push   %rbp
    b27f:	48 89 e5             	mov    %rsp,%rbp
    b282:	48 83 ec 10          	sub    $0x10,%rsp
    b286:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b28a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b28e:	48 89 c7             	mov    %rax,%rdi
    b291:	e8 c4 07 00 00       	call   ba5a <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b296:	c9                   	leave
    b297:	c3                   	ret

000000000000b298 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b298:	55                   	push   %rbp
    b299:	48 89 e5             	mov    %rsp,%rbp
    b29c:	48 83 ec 10          	sub    $0x10,%rsp
    b2a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b2a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b2a8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b2ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2b0:	ba 00 00 00 00       	mov    $0x0,%edx
    b2b5:	48 89 ce             	mov    %rcx,%rsi
    b2b8:	48 89 c7             	mov    %rax,%rdi
    b2bb:	e8 ae 07 00 00       	call   ba6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b2c0:	c9                   	leave
    b2c1:	c3                   	ret

000000000000b2c2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2c2:	55                   	push   %rbp
    b2c3:	48 89 e5             	mov    %rsp,%rbp
    b2c6:	48 83 ec 20          	sub    $0x20,%rsp
    b2ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2ce:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b2d2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b2d7:	74 40                	je     b319 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b2d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2dd:	48 89 c7             	mov    %rax,%rdi
    b2e0:	e8 ea 07 00 00       	call   bacf <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b2e5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b2e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2ed:	48 89 c7             	mov    %rax,%rdi
    b2f0:	e8 e8 07 00 00       	call   badd <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b2f5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b2fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b2fe:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b302:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b306:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b30a:	48 89 ce             	mov    %rcx,%rsi
    b30d:	48 89 c7             	mov    %rax,%rdi
    b310:	e8 f5 07 00 00       	call   bb0a <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b315:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b319:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b31d:	c9                   	leave
    b31e:	c3                   	ret
    b31f:	90                   	nop

000000000000b320 <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b320:	55                   	push   %rbp
    b321:	48 89 e5             	mov    %rsp,%rbp
    b324:	48 83 ec 10          	sub    $0x10,%rsp
    b328:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b32c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b330:	48 89 c7             	mov    %rax,%rdi
    b333:	e8 16 08 00 00       	call   bb4e <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b338:	c9                   	leave
    b339:	c3                   	ret

000000000000b33a <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b33a:	55                   	push   %rbp
    b33b:	48 89 e5             	mov    %rsp,%rbp
    b33e:	48 83 ec 10          	sub    $0x10,%rsp
    b342:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b346:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b34a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b34e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b352:	ba 00 00 00 00       	mov    $0x0,%edx
    b357:	48 89 ce             	mov    %rcx,%rsi
    b35a:	48 89 c7             	mov    %rax,%rdi
    b35d:	e8 00 08 00 00       	call   bb62 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b362:	c9                   	leave
    b363:	c3                   	ret

000000000000b364 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b364:	55                   	push   %rbp
    b365:	48 89 e5             	mov    %rsp,%rbp
    b368:	48 83 ec 20          	sub    $0x20,%rsp
    b36c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b370:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b374:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b379:	74 40                	je     b3bb <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b37b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b37f:	48 89 c7             	mov    %rax,%rdi
    b382:	e8 3c 08 00 00       	call   bbc3 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b387:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b38b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b38f:	48 89 c7             	mov    %rax,%rdi
    b392:	e8 3a 08 00 00       	call   bbd1 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b397:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b39c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b3a0:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b3a4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b3a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3ac:	48 89 ce             	mov    %rcx,%rsi
    b3af:	48 89 c7             	mov    %rax,%rdi
    b3b2:	e8 40 08 00 00       	call   bbf7 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b3b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b3bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b3bf:	c9                   	leave
    b3c0:	c3                   	ret
    b3c1:	90                   	nop

000000000000b3c2 <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b3c2:	55                   	push   %rbp
    b3c3:	48 89 e5             	mov    %rsp,%rbp
    b3c6:	48 83 ec 10          	sub    $0x10,%rsp
    b3ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b3ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3d2:	48 89 c7             	mov    %rax,%rdi
    b3d5:	e8 62 08 00 00       	call   bc3c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b3da:	c9                   	leave
    b3db:	c3                   	ret

000000000000b3dc <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b3dc:	55                   	push   %rbp
    b3dd:	48 89 e5             	mov    %rsp,%rbp
    b3e0:	48 83 ec 10          	sub    $0x10,%rsp
    b3e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3ec:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3f4:	ba 00 00 00 00       	mov    $0x0,%edx
    b3f9:	48 89 ce             	mov    %rcx,%rsi
    b3fc:	48 89 c7             	mov    %rax,%rdi
    b3ff:	e8 4c 08 00 00       	call   bc50 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b404:	c9                   	leave
    b405:	c3                   	ret

000000000000b406 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b406:	55                   	push   %rbp
    b407:	48 89 e5             	mov    %rsp,%rbp
    b40a:	48 83 ec 20          	sub    $0x20,%rsp
    b40e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b412:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b416:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b41b:	74 40                	je     b45d <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b41d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b421:	48 89 c7             	mov    %rax,%rdi
    b424:	e8 88 08 00 00       	call   bcb1 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b429:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b42d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b431:	48 89 c7             	mov    %rax,%rdi
    b434:	e8 86 08 00 00       	call   bcbf <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b439:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b43e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b442:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b446:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b44a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b44e:	48 89 ce             	mov    %rcx,%rsi
    b451:	48 89 c7             	mov    %rax,%rdi
    b454:	e8 8d 08 00 00       	call   bce6 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b459:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b45d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b461:	c9                   	leave
    b462:	c3                   	ret
    b463:	90                   	nop

000000000000b464 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b464:	55                   	push   %rbp
    b465:	48 89 e5             	mov    %rsp,%rbp
    b468:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b46c:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b473:	03 3f 00 
      }
    b476:	5d                   	pop    %rbp
    b477:	c3                   	ret

000000000000b478 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b478:	55                   	push   %rbp
    b479:	48 89 e5             	mov    %rsp,%rbp
    b47c:	48 83 ec 20          	sub    $0x20,%rsp
    b480:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b484:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b488:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b48c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b490:	48 89 c7             	mov    %rax,%rdi
    b493:	e8 cc ff ff ff       	call   b464 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b498:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b49c:	0f 92 c0             	setb   %al
    b49f:	0f b6 c0             	movzbl %al,%eax
    b4a2:	48 85 c0             	test   %rax,%rax
    b4a5:	0f 95 c0             	setne  %al
    b4a8:	84 c0                	test   %al,%al
    b4aa:	74 1a                	je     b4c6 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b4ac:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b4b3:	07 7e 00 
    b4b6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b4ba:	73 05                	jae    b4c1 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b4bc:	e8 9f 8d ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b4c1:	e8 1a 8c ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b4c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b4ca:	48 89 d0             	mov    %rdx,%rax
    b4cd:	48 c1 e0 06          	shl    $0x6,%rax
    b4d1:	48 01 d0             	add    %rdx,%rax
    b4d4:	48 c1 e0 03          	shl    $0x3,%rax
    b4d8:	48 89 c7             	mov    %rax,%rdi
    b4db:	e8 80 8e ff ff       	call   4360 <_Znwm@plt>
    b4e0:	90                   	nop
      }
    b4e1:	c9                   	leave
    b4e2:	c3                   	ret

000000000000b4e3 <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b4e3:	55                   	push   %rbp
    b4e4:	48 89 e5             	mov    %rsp,%rbp
    b4e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b4eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4ef:	5d                   	pop    %rbp
    b4f0:	c3                   	ret

000000000000b4f1 <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b4f1:	55                   	push   %rbp
    b4f2:	48 89 e5             	mov    %rsp,%rbp
    b4f5:	48 83 ec 10          	sub    $0x10,%rsp
    b4f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b4fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b501:	48 89 c6             	mov    %rax,%rsi
    b504:	bf 08 02 00 00       	mov    $0x208,%edi
    b509:	e8 12 99 ff ff       	call   4e20 <_ZnwmPv>
    b50e:	b9 08 02 00 00       	mov    $0x208,%ecx
    b513:	be 00 00 00 00       	mov    $0x0,%esi
    b518:	48 89 30             	mov    %rsi,(%rax)
    b51b:	89 ca                	mov    %ecx,%edx
    b51d:	48 01 c2             	add    %rax,%rdx
    b520:	48 83 c2 08          	add    $0x8,%rdx
    b524:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b528:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b52c:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b530:	48 29 d0             	sub    %rdx,%rax
    b533:	01 c1                	add    %eax,%ecx
    b535:	83 e1 f8             	and    $0xfffffff8,%ecx
    b538:	89 c8                	mov    %ecx,%eax
    b53a:	c1 e8 03             	shr    $0x3,%eax
    b53d:	89 c1                	mov    %eax,%ecx
    b53f:	48 89 d7             	mov    %rdx,%rdi
    b542:	48 89 f0             	mov    %rsi,%rax
    b545:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b548:	90                   	nop
    b549:	c9                   	leave
    b54a:	c3                   	ret

000000000000b54b <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b54b:	55                   	push   %rbp
    b54c:	48 89 e5             	mov    %rsp,%rbp
    b54f:	48 83 ec 20          	sub    $0x20,%rsp
    b553:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b557:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b55b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b55f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b563:	48 89 c7             	mov    %rax,%rdi
    b566:	e8 bf 07 00 00       	call   bd2a <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b56b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b56f:	48 89 c7             	mov    %rax,%rdi
    b572:	e8 bb 98 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    b577:	48 89 c1             	mov    %rax,%rcx
    b57a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b57e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b582:	48 89 ce             	mov    %rcx,%rsi
    b585:	48 89 c7             	mov    %rax,%rdi
    b588:	e8 a8 07 00 00       	call   bd35 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b58d:	c9                   	leave
    b58e:	c3                   	ret
    b58f:	90                   	nop

000000000000b590 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b590:	55                   	push   %rbp
    b591:	48 89 e5             	mov    %rsp,%rbp
    b594:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b598:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b59f:	07 7e 00 
      }
    b5a2:	5d                   	pop    %rbp
    b5a3:	c3                   	ret

000000000000b5a4 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b5a4:	55                   	push   %rbp
    b5a5:	48 89 e5             	mov    %rsp,%rbp
    b5a8:	48 83 ec 20          	sub    $0x20,%rsp
    b5ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5b4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b5b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5bc:	48 89 c7             	mov    %rax,%rdi
    b5bf:	e8 cc ff ff ff       	call   b590 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b5c4:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b5c8:	0f 92 c0             	setb   %al
    b5cb:	0f b6 c0             	movzbl %al,%eax
    b5ce:	48 85 c0             	test   %rax,%rax
    b5d1:	0f 95 c0             	setne  %al
    b5d4:	84 c0                	test   %al,%al
    b5d6:	74 1a                	je     b5f2 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b5d8:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b5df:	0f fc 00 
    b5e2:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b5e6:	73 05                	jae    b5ed <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b5e8:	e8 73 8c ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b5ed:	e8 ee 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b5f2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b5f6:	48 89 d0             	mov    %rdx,%rax
    b5f9:	48 c1 e0 06          	shl    $0x6,%rax
    b5fd:	48 01 d0             	add    %rdx,%rax
    b600:	48 c1 e0 02          	shl    $0x2,%rax
    b604:	48 89 c7             	mov    %rax,%rdi
    b607:	e8 54 8d ff ff       	call   4360 <_Znwm@plt>
    b60c:	90                   	nop
      }
    b60d:	c9                   	leave
    b60e:	c3                   	ret

000000000000b60f <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b60f:	55                   	push   %rbp
    b610:	48 89 e5             	mov    %rsp,%rbp
    b613:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b61b:	5d                   	pop    %rbp
    b61c:	c3                   	ret

000000000000b61d <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b61d:	55                   	push   %rbp
    b61e:	48 89 e5             	mov    %rsp,%rbp
    b621:	48 83 ec 10          	sub    $0x10,%rsp
    b625:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b62d:	48 89 c6             	mov    %rax,%rsi
    b630:	bf 04 01 00 00       	mov    $0x104,%edi
    b635:	e8 e6 97 ff ff       	call   4e20 <_ZnwmPv>
    b63a:	b9 04 01 00 00       	mov    $0x104,%ecx
    b63f:	be 00 00 00 00       	mov    $0x0,%esi
    b644:	48 89 30             	mov    %rsi,(%rax)
    b647:	89 ca                	mov    %ecx,%edx
    b649:	48 01 c2             	add    %rax,%rdx
    b64c:	48 83 c2 08          	add    $0x8,%rdx
    b650:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b654:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b658:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b65c:	48 29 d0             	sub    %rdx,%rax
    b65f:	01 c1                	add    %eax,%ecx
    b661:	83 e1 f8             	and    $0xfffffff8,%ecx
    b664:	89 c8                	mov    %ecx,%eax
    b666:	c1 e8 03             	shr    $0x3,%eax
    b669:	89 c1                	mov    %eax,%ecx
    b66b:	48 89 d7             	mov    %rdx,%rdi
    b66e:	48 89 f0             	mov    %rsi,%rax
    b671:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b674:	90                   	nop
    b675:	c9                   	leave
    b676:	c3                   	ret

000000000000b677 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b677:	55                   	push   %rbp
    b678:	48 89 e5             	mov    %rsp,%rbp
    b67b:	48 83 ec 20          	sub    $0x20,%rsp
    b67f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b683:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b687:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b68b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b68f:	48 89 c7             	mov    %rax,%rdi
    b692:	e8 0d 07 00 00       	call   bda4 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b697:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b69b:	48 89 c7             	mov    %rax,%rdi
    b69e:	e8 8f 97 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    b6a3:	48 89 c1             	mov    %rax,%rcx
    b6a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b6ae:	48 89 ce             	mov    %rcx,%rsi
    b6b1:	48 89 c7             	mov    %rax,%rdi
    b6b4:	e8 f6 06 00 00       	call   bdaf <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b6b9:	c9                   	leave
    b6ba:	c3                   	ret
    b6bb:	90                   	nop

000000000000b6bc <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b6bc:	55                   	push   %rbp
    b6bd:	48 89 e5             	mov    %rsp,%rbp
    b6c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b6c4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b6cb:	ff ff 0f 
      }
    b6ce:	5d                   	pop    %rbp
    b6cf:	c3                   	ret

000000000000b6d0 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b6d0:	55                   	push   %rbp
    b6d1:	48 89 e5             	mov    %rsp,%rbp
    b6d4:	48 83 ec 20          	sub    $0x20,%rsp
    b6d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b6e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b6e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6e8:	48 89 c7             	mov    %rax,%rdi
    b6eb:	e8 cc ff ff ff       	call   b6bc <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b6f0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b6f4:	0f 92 c0             	setb   %al
    b6f7:	0f b6 c0             	movzbl %al,%eax
    b6fa:	48 85 c0             	test   %rax,%rax
    b6fd:	0f 95 c0             	setne  %al
    b700:	84 c0                	test   %al,%al
    b702:	74 1a                	je     b71e <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b704:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b70b:	ff ff 1f 
    b70e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b712:	73 05                	jae    b719 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b714:	e8 47 8b ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b719:	e8 c2 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b71e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b722:	48 c1 e0 03          	shl    $0x3,%rax
    b726:	48 89 c7             	mov    %rax,%rdi
    b729:	e8 32 8c ff ff       	call   4360 <_Znwm@plt>
    b72e:	90                   	nop
      }
    b72f:	c9                   	leave
    b730:	c3                   	ret

000000000000b731 <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b731:	55                   	push   %rbp
    b732:	48 89 e5             	mov    %rsp,%rbp
    b735:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b73d:	5d                   	pop    %rbp
    b73e:	c3                   	ret

000000000000b73f <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b73f:	55                   	push   %rbp
    b740:	48 89 e5             	mov    %rsp,%rbp
    b743:	48 83 ec 10          	sub    $0x10,%rsp
    b747:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b74b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b74f:	48 89 c6             	mov    %rax,%rsi
    b752:	bf 08 00 00 00       	mov    $0x8,%edi
    b757:	e8 c4 96 ff ff       	call   4e20 <_ZnwmPv>
    b75c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b763:	90                   	nop
    b764:	c9                   	leave
    b765:	c3                   	ret

000000000000b766 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b766:	55                   	push   %rbp
    b767:	48 89 e5             	mov    %rsp,%rbp
    b76a:	48 83 ec 20          	sub    $0x20,%rsp
    b76e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b772:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b776:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b77a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b77e:	48 89 c7             	mov    %rax,%rdi
    b781:	e8 98 06 00 00       	call   be1e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b786:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b78a:	48 89 c7             	mov    %rax,%rdi
    b78d:	e8 a0 96 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    b792:	48 89 c1             	mov    %rax,%rcx
    b795:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b799:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b79d:	48 89 ce             	mov    %rcx,%rsi
    b7a0:	48 89 c7             	mov    %rax,%rdi
    b7a3:	e8 81 06 00 00       	call   be29 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b7a8:	c9                   	leave
    b7a9:	c3                   	ret

000000000000b7aa <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b7aa:	55                   	push   %rbp
    b7ab:	48 89 e5             	mov    %rsp,%rbp
    b7ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b7b2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b7b9:	ff ff 0f 
      }
    b7bc:	5d                   	pop    %rbp
    b7bd:	c3                   	ret

000000000000b7be <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b7be:	55                   	push   %rbp
    b7bf:	48 89 e5             	mov    %rsp,%rbp
    b7c2:	48 83 ec 20          	sub    $0x20,%rsp
    b7c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7ce:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b7d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7d6:	48 89 c7             	mov    %rax,%rdi
    b7d9:	e8 cc ff ff ff       	call   b7aa <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b7de:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b7e2:	0f 92 c0             	setb   %al
    b7e5:	0f b6 c0             	movzbl %al,%eax
    b7e8:	48 85 c0             	test   %rax,%rax
    b7eb:	0f 95 c0             	setne  %al
    b7ee:	84 c0                	test   %al,%al
    b7f0:	74 1a                	je     b80c <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b7f2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b7f9:	ff ff 1f 
    b7fc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b800:	73 05                	jae    b807 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b802:	e8 59 8a ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b807:	e8 d4 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b80c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b810:	48 c1 e0 03          	shl    $0x3,%rax
    b814:	48 89 c7             	mov    %rax,%rdi
    b817:	e8 44 8b ff ff       	call   4360 <_Znwm@plt>
    b81c:	90                   	nop
      }
    b81d:	c9                   	leave
    b81e:	c3                   	ret

000000000000b81f <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b81f:	55                   	push   %rbp
    b820:	48 89 e5             	mov    %rsp,%rbp
    b823:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b827:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b82b:	5d                   	pop    %rbp
    b82c:	c3                   	ret

000000000000b82d <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b82d:	55                   	push   %rbp
    b82e:	48 89 e5             	mov    %rsp,%rbp
    b831:	48 83 ec 10          	sub    $0x10,%rsp
    b835:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b839:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b83d:	48 89 c6             	mov    %rax,%rsi
    b840:	bf 08 00 00 00       	mov    $0x8,%edi
    b845:	e8 d6 95 ff ff       	call   4e20 <_ZnwmPv>
    b84a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b851:	90                   	nop
    b852:	c9                   	leave
    b853:	c3                   	ret

000000000000b854 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b854:	55                   	push   %rbp
    b855:	48 89 e5             	mov    %rsp,%rbp
    b858:	48 83 ec 20          	sub    $0x20,%rsp
    b85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b864:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b868:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b86c:	48 89 c7             	mov    %rax,%rdi
    b86f:	e8 12 06 00 00       	call   be86 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b874:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b878:	48 89 c7             	mov    %rax,%rdi
    b87b:	e8 b2 95 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    b880:	48 89 c1             	mov    %rax,%rcx
    b883:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b887:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b88b:	48 89 ce             	mov    %rcx,%rsi
    b88e:	48 89 c7             	mov    %rax,%rdi
    b891:	e8 fb 05 00 00       	call   be91 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b896:	c9                   	leave
    b897:	c3                   	ret

000000000000b898 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b898:	55                   	push   %rbp
    b899:	48 89 e5             	mov    %rsp,%rbp
    b89c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b8a0:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    b8a7:	55 55 05 
      }
    b8aa:	5d                   	pop    %rbp
    b8ab:	c3                   	ret

000000000000b8ac <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b8ac:	55                   	push   %rbp
    b8ad:	48 89 e5             	mov    %rsp,%rbp
    b8b0:	48 83 ec 20          	sub    $0x20,%rsp
    b8b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8b8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8bc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b8c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8c4:	48 89 c7             	mov    %rax,%rdi
    b8c7:	e8 cc ff ff ff       	call   b898 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b8cc:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b8d0:	0f 92 c0             	setb   %al
    b8d3:	0f b6 c0             	movzbl %al,%eax
    b8d6:	48 85 c0             	test   %rax,%rax
    b8d9:	0f 95 c0             	setne  %al
    b8dc:	84 c0                	test   %al,%al
    b8de:	74 1a                	je     b8fa <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b8e0:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    b8e7:	aa aa 0a 
    b8ea:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b8ee:	73 05                	jae    b8f5 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b8f0:	e8 6b 89 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b8f5:	e8 e6 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b8fa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b8fe:	48 89 d0             	mov    %rdx,%rax
    b901:	48 01 c0             	add    %rax,%rax
    b904:	48 01 d0             	add    %rdx,%rax
    b907:	48 c1 e0 03          	shl    $0x3,%rax
    b90b:	48 89 c7             	mov    %rax,%rdi
    b90e:	e8 4d 8a ff ff       	call   4360 <_Znwm@plt>
    b913:	90                   	nop
      }
    b914:	c9                   	leave
    b915:	c3                   	ret

000000000000b916 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b916:	55                   	push   %rbp
    b917:	48 89 e5             	mov    %rsp,%rbp
    b91a:	48 83 ec 10          	sub    $0x10,%rsp
    b91e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b922:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b926:	48 89 c6             	mov    %rax,%rsi
    b929:	bf 18 00 00 00       	mov    $0x18,%edi
    b92e:	e8 ed 94 ff ff       	call   4e20 <_ZnwmPv>
    b933:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b939:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    b940:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    b947:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    b94e:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    b955:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    b95c:	90                   	nop
    b95d:	c9                   	leave
    b95e:	c3                   	ret

000000000000b95f <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b95f:	55                   	push   %rbp
    b960:	48 89 e5             	mov    %rsp,%rbp
    b963:	48 83 ec 20          	sub    $0x20,%rsp
    b967:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b96b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b96f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b973:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b977:	48 89 c7             	mov    %rax,%rdi
    b97a:	e8 6f 05 00 00       	call   beee <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b97f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b983:	48 89 c7             	mov    %rax,%rdi
    b986:	e8 a7 94 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    b98b:	48 89 c1             	mov    %rax,%rcx
    b98e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b992:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b996:	48 89 ce             	mov    %rcx,%rsi
    b999:	48 89 c7             	mov    %rax,%rdi
    b99c:	e8 58 05 00 00       	call   bef9 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b9a1:	c9                   	leave
    b9a2:	c3                   	ret
    b9a3:	90                   	nop

000000000000b9a4 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b9a4:	55                   	push   %rbp
    b9a5:	48 89 e5             	mov    %rsp,%rbp
    b9a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b9ac:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    b9b3:	49 92 04 
      }
    b9b6:	5d                   	pop    %rbp
    b9b7:	c3                   	ret

000000000000b9b8 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b9b8:	55                   	push   %rbp
    b9b9:	48 89 e5             	mov    %rsp,%rbp
    b9bc:	48 83 ec 20          	sub    $0x20,%rsp
    b9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b9cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9d0:	48 89 c7             	mov    %rax,%rdi
    b9d3:	e8 cc ff ff ff       	call   b9a4 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b9d8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9dc:	0f 92 c0             	setb   %al
    b9df:	0f b6 c0             	movzbl %al,%eax
    b9e2:	48 85 c0             	test   %rax,%rax
    b9e5:	0f 95 c0             	setne  %al
    b9e8:	84 c0                	test   %al,%al
    b9ea:	74 1a                	je     ba06 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b9ec:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    b9f3:	92 24 09 
    b9f6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b9fa:	73 05                	jae    ba01 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b9fc:	e8 5f 88 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba01:	e8 da 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba0a:	48 89 d0             	mov    %rdx,%rax
    ba0d:	48 c1 e0 03          	shl    $0x3,%rax
    ba11:	48 29 d0             	sub    %rdx,%rax
    ba14:	48 c1 e0 02          	shl    $0x2,%rax
    ba18:	48 89 c7             	mov    %rax,%rdi
    ba1b:	e8 40 89 ff ff       	call   4360 <_Znwm@plt>
    ba20:	90                   	nop
      }
    ba21:	c9                   	leave
    ba22:	c3                   	ret

000000000000ba23 <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ba23:	55                   	push   %rbp
    ba24:	48 89 e5             	mov    %rsp,%rbp
    ba27:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    ba2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba2f:	5d                   	pop    %rbp
    ba30:	c3                   	ret

000000000000ba31 <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ba31:	55                   	push   %rbp
    ba32:	48 89 e5             	mov    %rsp,%rbp
    ba35:	48 83 ec 10          	sub    $0x10,%rsp
    ba39:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ba3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba41:	48 89 c6             	mov    %rax,%rsi
    ba44:	bf 1c 00 00 00       	mov    $0x1c,%edi
    ba49:	e8 d2 93 ff ff       	call   4e20 <_ZnwmPv>
    ba4e:	48 89 c7             	mov    %rax,%rdi
    ba51:	e8 6c 05 00 00       	call   bfc2 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    ba56:	90                   	nop
    ba57:	c9                   	leave
    ba58:	c3                   	ret
    ba59:	90                   	nop

000000000000ba5a <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba5a:	55                   	push   %rbp
    ba5b:	48 89 e5             	mov    %rsp,%rbp
    ba5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba62:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    ba69:	ff ff 0f 
      }
    ba6c:	5d                   	pop    %rbp
    ba6d:	c3                   	ret

000000000000ba6e <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba6e:	55                   	push   %rbp
    ba6f:	48 89 e5             	mov    %rsp,%rbp
    ba72:	48 83 ec 20          	sub    $0x20,%rsp
    ba76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba7a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba7e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba86:	48 89 c7             	mov    %rax,%rdi
    ba89:	e8 cc ff ff ff       	call   ba5a <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    ba8e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba92:	0f 92 c0             	setb   %al
    ba95:	0f b6 c0             	movzbl %al,%eax
    ba98:	48 85 c0             	test   %rax,%rax
    ba9b:	0f 95 c0             	setne  %al
    ba9e:	84 c0                	test   %al,%al
    baa0:	74 1a                	je     babc <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    baa2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    baa9:	ff ff 1f 
    baac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bab0:	73 05                	jae    bab7 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bab2:	e8 a9 87 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bab7:	e8 24 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    babc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bac0:	48 c1 e0 03          	shl    $0x3,%rax
    bac4:	48 89 c7             	mov    %rax,%rdi
    bac7:	e8 94 88 ff ff       	call   4360 <_Znwm@plt>
    bacc:	90                   	nop
      }
    bacd:	c9                   	leave
    bace:	c3                   	ret

000000000000bacf <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bacf:	55                   	push   %rbp
    bad0:	48 89 e5             	mov    %rsp,%rbp
    bad3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    badb:	5d                   	pop    %rbp
    badc:	c3                   	ret

000000000000badd <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    badd:	55                   	push   %rbp
    bade:	48 89 e5             	mov    %rsp,%rbp
    bae1:	48 83 ec 10          	sub    $0x10,%rsp
    bae5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bae9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baed:	48 89 c6             	mov    %rax,%rsi
    baf0:	bf 08 00 00 00       	mov    $0x8,%edi
    baf5:	e8 26 93 ff ff       	call   4e20 <_ZnwmPv>
    bafa:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bb00:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bb07:	90                   	nop
    bb08:	c9                   	leave
    bb09:	c3                   	ret

000000000000bb0a <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb0a:	55                   	push   %rbp
    bb0b:	48 89 e5             	mov    %rsp,%rbp
    bb0e:	48 83 ec 20          	sub    $0x20,%rsp
    bb12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb1e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb22:	48 89 c7             	mov    %rax,%rdi
    bb25:	e8 b3 04 00 00       	call   bfdd <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bb2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb2e:	48 89 c7             	mov    %rax,%rdi
    bb31:	e8 fc 92 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    bb36:	48 89 c1             	mov    %rax,%rcx
    bb39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb3d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bb41:	48 89 ce             	mov    %rcx,%rsi
    bb44:	48 89 c7             	mov    %rax,%rdi
    bb47:	e8 9c 04 00 00       	call   bfe8 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bb4c:	c9                   	leave
    bb4d:	c3                   	ret

000000000000bb4e <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bb4e:	55                   	push   %rbp
    bb4f:	48 89 e5             	mov    %rsp,%rbp
    bb52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bb56:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bb5d:	ff ff 1f 
      }
    bb60:	5d                   	pop    %rbp
    bb61:	c3                   	ret

000000000000bb62 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bb62:	55                   	push   %rbp
    bb63:	48 89 e5             	mov    %rsp,%rbp
    bb66:	48 83 ec 20          	sub    $0x20,%rsp
    bb6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bb76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb7a:	48 89 c7             	mov    %rax,%rdi
    bb7d:	e8 cc ff ff ff       	call   bb4e <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    bb82:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb86:	0f 92 c0             	setb   %al
    bb89:	0f b6 c0             	movzbl %al,%eax
    bb8c:	48 85 c0             	test   %rax,%rax
    bb8f:	0f 95 c0             	setne  %al
    bb92:	84 c0                	test   %al,%al
    bb94:	74 1a                	je     bbb0 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb96:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    bb9d:	ff ff 3f 
    bba0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bba4:	73 05                	jae    bbab <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bba6:	e8 b5 86 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bbab:	e8 30 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bbb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbb4:	48 c1 e0 02          	shl    $0x2,%rax
    bbb8:	48 89 c7             	mov    %rax,%rdi
    bbbb:	e8 a0 87 ff ff       	call   4360 <_Znwm@plt>
    bbc0:	90                   	nop
      }
    bbc1:	c9                   	leave
    bbc2:	c3                   	ret

000000000000bbc3 <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bbc3:	55                   	push   %rbp
    bbc4:	48 89 e5             	mov    %rsp,%rbp
    bbc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bbcb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbcf:	5d                   	pop    %rbp
    bbd0:	c3                   	ret

000000000000bbd1 <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bbd1:	55                   	push   %rbp
    bbd2:	48 89 e5             	mov    %rsp,%rbp
    bbd5:	48 83 ec 10          	sub    $0x10,%rsp
    bbd9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bbdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbe1:	48 89 c6             	mov    %rax,%rsi
    bbe4:	bf 04 00 00 00       	mov    $0x4,%edi
    bbe9:	e8 32 92 ff ff       	call   4e20 <_ZnwmPv>
    bbee:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bbf4:	90                   	nop
    bbf5:	c9                   	leave
    bbf6:	c3                   	ret

000000000000bbf7 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bbf7:	55                   	push   %rbp
    bbf8:	48 89 e5             	mov    %rsp,%rbp
    bbfb:	48 83 ec 20          	sub    $0x20,%rsp
    bbff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc03:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc07:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc0b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc0f:	48 89 c7             	mov    %rax,%rdi
    bc12:	e8 2e 04 00 00       	call   c045 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc17:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc1b:	48 89 c7             	mov    %rax,%rdi
    bc1e:	e8 0f 92 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    bc23:	48 89 c1             	mov    %rax,%rcx
    bc26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc2a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bc2e:	48 89 ce             	mov    %rcx,%rsi
    bc31:	48 89 c7             	mov    %rax,%rdi
    bc34:	e8 17 04 00 00       	call   c050 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bc39:	c9                   	leave
    bc3a:	c3                   	ret
    bc3b:	90                   	nop

000000000000bc3c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bc3c:	55                   	push   %rbp
    bc3d:	48 89 e5             	mov    %rsp,%rbp
    bc40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bc44:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bc4b:	ff ff 0f 
      }
    bc4e:	5d                   	pop    %rbp
    bc4f:	c3                   	ret

000000000000bc50 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bc50:	55                   	push   %rbp
    bc51:	48 89 e5             	mov    %rsp,%rbp
    bc54:	48 83 ec 20          	sub    $0x20,%rsp
    bc58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc5c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc60:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bc64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc68:	48 89 c7             	mov    %rax,%rdi
    bc6b:	e8 cc ff ff ff       	call   bc3c <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bc70:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc74:	0f 92 c0             	setb   %al
    bc77:	0f b6 c0             	movzbl %al,%eax
    bc7a:	48 85 c0             	test   %rax,%rax
    bc7d:	0f 95 c0             	setne  %al
    bc80:	84 c0                	test   %al,%al
    bc82:	74 1a                	je     bc9e <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc84:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bc8b:	ff ff 1f 
    bc8e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc92:	73 05                	jae    bc99 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc94:	e8 c7 85 ff ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc99:	e8 42 84 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc9e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bca2:	48 c1 e0 03          	shl    $0x3,%rax
    bca6:	48 89 c7             	mov    %rax,%rdi
    bca9:	e8 b2 86 ff ff       	call   4360 <_Znwm@plt>
    bcae:	90                   	nop
      }
    bcaf:	c9                   	leave
    bcb0:	c3                   	ret

000000000000bcb1 <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bcb1:	55                   	push   %rbp
    bcb2:	48 89 e5             	mov    %rsp,%rbp
    bcb5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bcb9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bcbd:	5d                   	pop    %rbp
    bcbe:	c3                   	ret

000000000000bcbf <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bcbf:	55                   	push   %rbp
    bcc0:	48 89 e5             	mov    %rsp,%rbp
    bcc3:	48 83 ec 10          	sub    $0x10,%rsp
    bcc7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bccb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bccf:	48 89 c6             	mov    %rax,%rsi
    bcd2:	bf 08 00 00 00       	mov    $0x8,%edi
    bcd7:	e8 44 91 ff ff       	call   4e20 <_ZnwmPv>
    bcdc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bce3:	90                   	nop
    bce4:	c9                   	leave
    bce5:	c3                   	ret

000000000000bce6 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bce6:	55                   	push   %rbp
    bce7:	48 89 e5             	mov    %rsp,%rbp
    bcea:	48 83 ec 20          	sub    $0x20,%rsp
    bcee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcf2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcf6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bcfa:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bcfe:	48 89 c7             	mov    %rax,%rdi
    bd01:	e8 a7 03 00 00       	call   c0ad <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd0a:	48 89 c7             	mov    %rax,%rdi
    bd0d:	e8 20 91 ff ff       	call   4e32 <_ZSt17__size_to_integerm>
    bd12:	48 89 c1             	mov    %rax,%rcx
    bd15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd19:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd1d:	48 89 ce             	mov    %rcx,%rsi
    bd20:	48 89 c7             	mov    %rax,%rdi
    bd23:	e8 90 03 00 00       	call   c0b8 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bd28:	c9                   	leave
    bd29:	c3                   	ret

000000000000bd2a <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bd2a:	55                   	push   %rbp
    bd2b:	48 89 e5             	mov    %rsp,%rbp
    bd2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bd32:	90                   	nop
    bd33:	5d                   	pop    %rbp
    bd34:	c3                   	ret

000000000000bd35 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bd35:	55                   	push   %rbp
    bd36:	48 89 e5             	mov    %rsp,%rbp
    bd39:	48 83 ec 20          	sub    $0x20,%rsp
    bd3d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd41:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd45:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bd49:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bd4e:	75 06                	jne    bd56 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bd50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd54:	eb 4c                	jmp    bda2 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bd56:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd5a:	48 89 d0             	mov    %rdx,%rax
    bd5d:	48 c1 e0 06          	shl    $0x6,%rax
    bd61:	48 01 d0             	add    %rdx,%rax
    bd64:	48 c1 e0 03          	shl    $0x3,%rax
    bd68:	48 89 c2             	mov    %rax,%rdx
    bd6b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd6f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bd73:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd7b:	48 89 ce             	mov    %rcx,%rsi
    bd7e:	48 89 c7             	mov    %rax,%rdi
    bd81:	e8 8f 03 00 00       	call   c115 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bd86:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bd8a:	48 89 d0             	mov    %rdx,%rax
    bd8d:	48 c1 e0 06          	shl    $0x6,%rax
    bd91:	48 01 d0             	add    %rdx,%rax
    bd94:	48 c1 e0 03          	shl    $0x3,%rax
    bd98:	48 89 c2             	mov    %rax,%rdx
    bd9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd9f:	48 01 d0             	add    %rdx,%rax
    }
    bda2:	c9                   	leave
    bda3:	c3                   	ret

000000000000bda4 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bda4:	55                   	push   %rbp
    bda5:	48 89 e5             	mov    %rsp,%rbp
    bda8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bdac:	90                   	nop
    bdad:	5d                   	pop    %rbp
    bdae:	c3                   	ret

000000000000bdaf <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bdaf:	55                   	push   %rbp
    bdb0:	48 89 e5             	mov    %rsp,%rbp
    bdb3:	48 83 ec 20          	sub    $0x20,%rsp
    bdb7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdbb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdbf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bdc3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bdc8:	75 06                	jne    bdd0 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bdca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdce:	eb 4c                	jmp    be1c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bdd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdd4:	48 89 d0             	mov    %rdx,%rax
    bdd7:	48 c1 e0 06          	shl    $0x6,%rax
    bddb:	48 01 d0             	add    %rdx,%rax
    bdde:	48 c1 e0 02          	shl    $0x2,%rax
    bde2:	48 89 c2             	mov    %rax,%rdx
    bde5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bde9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bdf1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdf5:	48 89 ce             	mov    %rcx,%rsi
    bdf8:	48 89 c7             	mov    %rax,%rdi
    bdfb:	e8 43 03 00 00       	call   c143 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    be00:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be04:	48 89 d0             	mov    %rdx,%rax
    be07:	48 c1 e0 06          	shl    $0x6,%rax
    be0b:	48 01 d0             	add    %rdx,%rax
    be0e:	48 c1 e0 02          	shl    $0x2,%rax
    be12:	48 89 c2             	mov    %rax,%rdx
    be15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be19:	48 01 d0             	add    %rdx,%rax
    }
    be1c:	c9                   	leave
    be1d:	c3                   	ret

000000000000be1e <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    be1e:	55                   	push   %rbp
    be1f:	48 89 e5             	mov    %rsp,%rbp
    be22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be26:	90                   	nop
    be27:	5d                   	pop    %rbp
    be28:	c3                   	ret

000000000000be29 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be29:	55                   	push   %rbp
    be2a:	48 89 e5             	mov    %rsp,%rbp
    be2d:	48 83 ec 20          	sub    $0x20,%rsp
    be31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be35:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be39:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    be3d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be42:	75 06                	jne    be4a <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    be44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be48:	eb 3a                	jmp    be84 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    be4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be4e:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    be55:	00 
    be56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be5a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    be5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be66:	48 89 ce             	mov    %rcx,%rsi
    be69:	48 89 c7             	mov    %rax,%rdi
    be6c:	e8 00 03 00 00       	call   c171 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    be71:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    be75:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    be7c:	00 
    be7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be81:	48 01 d0             	add    %rdx,%rax
    }
    be84:	c9                   	leave
    be85:	c3                   	ret

000000000000be86 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    be86:	55                   	push   %rbp
    be87:	48 89 e5             	mov    %rsp,%rbp
    be8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be8e:	90                   	nop
    be8f:	5d                   	pop    %rbp
    be90:	c3                   	ret

000000000000be91 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be91:	55                   	push   %rbp
    be92:	48 89 e5             	mov    %rsp,%rbp
    be95:	48 83 ec 20          	sub    $0x20,%rsp
    be99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be9d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bea1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bea5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    beaa:	75 06                	jne    beb2 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    beac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    beb0:	eb 3a                	jmp    beec <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    beb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    beb6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bebd:	00 
    bebe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec2:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bec6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    beca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bece:	48 89 ce             	mov    %rcx,%rsi
    bed1:	48 89 c7             	mov    %rax,%rdi
    bed4:	e8 c6 02 00 00       	call   c19f <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    bed9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bedd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bee4:	00 
    bee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee9:	48 01 d0             	add    %rdx,%rax
    }
    beec:	c9                   	leave
    beed:	c3                   	ret

000000000000beee <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    beee:	55                   	push   %rbp
    beef:	48 89 e5             	mov    %rsp,%rbp
    bef2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bef6:	90                   	nop
    bef7:	5d                   	pop    %rbp
    bef8:	c3                   	ret

000000000000bef9 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bef9:	55                   	push   %rbp
    befa:	48 89 e5             	mov    %rsp,%rbp
    befd:	48 83 ec 20          	sub    $0x20,%rsp
    bf01:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf05:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf09:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf0d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf12:	75 06                	jne    bf1a <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf14:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf18:	eb 4a                	jmp    bf64 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    bf1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf1e:	48 89 d0             	mov    %rdx,%rax
    bf21:	48 01 c0             	add    %rax,%rax
    bf24:	48 01 d0             	add    %rdx,%rax
    bf27:	48 c1 e0 03          	shl    $0x3,%rax
    bf2b:	48 89 c2             	mov    %rax,%rdx
    bf2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf32:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf36:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3e:	48 89 ce             	mov    %rcx,%rsi
    bf41:	48 89 c7             	mov    %rax,%rdi
    bf44:	e8 84 02 00 00       	call   c1cd <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bf49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf4d:	48 89 d0             	mov    %rdx,%rax
    bf50:	48 01 c0             	add    %rax,%rax
    bf53:	48 01 d0             	add    %rdx,%rax
    bf56:	48 c1 e0 03          	shl    $0x3,%rax
    bf5a:	48 89 c2             	mov    %rax,%rdx
    bf5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf61:	48 01 d0             	add    %rdx,%rax
    }
    bf64:	c9                   	leave
    bf65:	c3                   	ret

000000000000bf66 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    bf66:	55                   	push   %rbp
    bf67:	48 89 e5             	mov    %rsp,%rbp
    bf6a:	48 83 ec 10          	sub    $0x10,%rsp
    bf6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf76:	48 89 c7             	mov    %rax,%rdi
    bf79:	e8 7e 02 00 00       	call   c1fc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    bf7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf82:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    bf86:	90                   	nop
    bf87:	c9                   	leave
    bf88:	c3                   	ret
    bf89:	90                   	nop

000000000000bf8a <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    bf8a:	55                   	push   %rbp
    bf8b:	48 89 e5             	mov    %rsp,%rbp
    bf8e:	48 83 ec 10          	sub    $0x10,%rsp
    bf92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf9a:	48 89 c7             	mov    %rax,%rdi
    bf9d:	e8 c4 ff ff ff       	call   bf66 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    bfa2:	90                   	nop
    bfa3:	c9                   	leave
    bfa4:	c3                   	ret
    bfa5:	90                   	nop

000000000000bfa6 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    bfa6:	55                   	push   %rbp
    bfa7:	48 89 e5             	mov    %rsp,%rbp
    bfaa:	48 83 ec 10          	sub    $0x10,%rsp
    bfae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfb6:	48 89 c7             	mov    %rax,%rdi
    bfb9:	e8 cc ff ff ff       	call   bf8a <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    bfbe:	90                   	nop
    bfbf:	c9                   	leave
    bfc0:	c3                   	ret
    bfc1:	90                   	nop

000000000000bfc2 <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    bfc2:	55                   	push   %rbp
    bfc3:	48 89 e5             	mov    %rsp,%rbp
    bfc6:	48 83 ec 10          	sub    $0x10,%rsp
    bfca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfd2:	48 89 c7             	mov    %rax,%rdi
    bfd5:	e8 cc ff ff ff       	call   bfa6 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    bfda:	90                   	nop
    bfdb:	c9                   	leave
    bfdc:	c3                   	ret

000000000000bfdd <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bfdd:	55                   	push   %rbp
    bfde:	48 89 e5             	mov    %rsp,%rbp
    bfe1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bfe5:	90                   	nop
    bfe6:	5d                   	pop    %rbp
    bfe7:	c3                   	ret

000000000000bfe8 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bfe8:	55                   	push   %rbp
    bfe9:	48 89 e5             	mov    %rsp,%rbp
    bfec:	48 83 ec 20          	sub    $0x20,%rsp
    bff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bff4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bff8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bffc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c001:	75 06                	jne    c009 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c007:	eb 3a                	jmp    c043 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c009:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c00d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c014:	00 
    c015:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c019:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c01d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c021:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c025:	48 89 ce             	mov    %rcx,%rsi
    c028:	48 89 c7             	mov    %rax,%rdi
    c02b:	e8 d7 01 00 00       	call   c207 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c030:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c034:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c03b:	00 
    c03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c040:	48 01 d0             	add    %rdx,%rax
    }
    c043:	c9                   	leave
    c044:	c3                   	ret

000000000000c045 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c045:	55                   	push   %rbp
    c046:	48 89 e5             	mov    %rsp,%rbp
    c049:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c04d:	90                   	nop
    c04e:	5d                   	pop    %rbp
    c04f:	c3                   	ret

000000000000c050 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c050:	55                   	push   %rbp
    c051:	48 89 e5             	mov    %rsp,%rbp
    c054:	48 83 ec 20          	sub    $0x20,%rsp
    c058:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c05c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c060:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c064:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c069:	75 06                	jne    c071 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c06b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c06f:	eb 3a                	jmp    c0ab <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c071:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c075:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c07c:	00 
    c07d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c081:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c085:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c08d:	48 89 ce             	mov    %rcx,%rsi
    c090:	48 89 c7             	mov    %rax,%rdi
    c093:	e8 9d 01 00 00       	call   c235 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c098:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c09c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c0a3:	00 
    c0a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a8:	48 01 d0             	add    %rdx,%rax
    }
    c0ab:	c9                   	leave
    c0ac:	c3                   	ret

000000000000c0ad <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c0ad:	55                   	push   %rbp
    c0ae:	48 89 e5             	mov    %rsp,%rbp
    c0b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c0b5:	90                   	nop
    c0b6:	5d                   	pop    %rbp
    c0b7:	c3                   	ret

000000000000c0b8 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c0b8:	55                   	push   %rbp
    c0b9:	48 89 e5             	mov    %rsp,%rbp
    c0bc:	48 83 ec 20          	sub    $0x20,%rsp
    c0c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c0cc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c0d1:	75 06                	jne    c0d9 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c0d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0d7:	eb 3a                	jmp    c113 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c0d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0dd:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c0e4:	00 
    c0e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0e9:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c0ed:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c0f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0f5:	48 89 ce             	mov    %rcx,%rsi
    c0f8:	48 89 c7             	mov    %rax,%rdi
    c0fb:	e8 63 01 00 00       	call   c263 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c100:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c104:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c10b:	00 
    c10c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c110:	48 01 d0             	add    %rdx,%rax
    }
    c113:	c9                   	leave
    c114:	c3                   	ret

000000000000c115 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c115:	55                   	push   %rbp
    c116:	48 89 e5             	mov    %rsp,%rbp
    c119:	48 83 ec 20          	sub    $0x20,%rsp
    c11d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c121:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c125:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c129:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c12d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c131:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c135:	48 89 ce             	mov    %rcx,%rsi
    c138:	48 89 c7             	mov    %rax,%rdi
    c13b:	e8 51 01 00 00       	call   c291 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c140:	90                   	nop
    c141:	c9                   	leave
    c142:	c3                   	ret

000000000000c143 <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c143:	55                   	push   %rbp
    c144:	48 89 e5             	mov    %rsp,%rbp
    c147:	48 83 ec 20          	sub    $0x20,%rsp
    c14b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c14f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c153:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c157:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c15b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c15f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c163:	48 89 ce             	mov    %rcx,%rsi
    c166:	48 89 c7             	mov    %rax,%rdi
    c169:	e8 9b 01 00 00       	call   c309 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c16e:	90                   	nop
    c16f:	c9                   	leave
    c170:	c3                   	ret

000000000000c171 <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c171:	55                   	push   %rbp
    c172:	48 89 e5             	mov    %rsp,%rbp
    c175:	48 83 ec 20          	sub    $0x20,%rsp
    c179:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c17d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c181:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c185:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c189:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c18d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c191:	48 89 ce             	mov    %rcx,%rsi
    c194:	48 89 c7             	mov    %rax,%rdi
    c197:	e8 e5 01 00 00       	call   c381 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c19c:	90                   	nop
    c19d:	c9                   	leave
    c19e:	c3                   	ret

000000000000c19f <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c19f:	55                   	push   %rbp
    c1a0:	48 89 e5             	mov    %rsp,%rbp
    c1a3:	48 83 ec 20          	sub    $0x20,%rsp
    c1a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1b3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1b7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1bf:	48 89 ce             	mov    %rcx,%rsi
    c1c2:	48 89 c7             	mov    %rax,%rdi
    c1c5:	e8 f2 01 00 00       	call   c3bc <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c1ca:	90                   	nop
    c1cb:	c9                   	leave
    c1cc:	c3                   	ret

000000000000c1cd <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c1cd:	55                   	push   %rbp
    c1ce:	48 89 e5             	mov    %rsp,%rbp
    c1d1:	48 83 ec 20          	sub    $0x20,%rsp
    c1d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1e5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1ed:	48 89 ce             	mov    %rcx,%rsi
    c1f0:	48 89 c7             	mov    %rax,%rdi
    c1f3:	e8 ff 01 00 00       	call   c3f7 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c1f8:	90                   	nop
    c1f9:	c9                   	leave
    c1fa:	c3                   	ret
    c1fb:	90                   	nop

000000000000c1fc <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c1fc:	55                   	push   %rbp
    c1fd:	48 89 e5             	mov    %rsp,%rbp
    c200:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c204:	90                   	nop
    c205:	5d                   	pop    %rbp
    c206:	c3                   	ret

000000000000c207 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c207:	55                   	push   %rbp
    c208:	48 89 e5             	mov    %rsp,%rbp
    c20b:	48 83 ec 20          	sub    $0x20,%rsp
    c20f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c213:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c217:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c21b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c21f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c223:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c227:	48 89 ce             	mov    %rcx,%rsi
    c22a:	48 89 c7             	mov    %rax,%rdi
    c22d:	e8 08 02 00 00       	call   c43a <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c232:	90                   	nop
    c233:	c9                   	leave
    c234:	c3                   	ret

000000000000c235 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c235:	55                   	push   %rbp
    c236:	48 89 e5             	mov    %rsp,%rbp
    c239:	48 83 ec 20          	sub    $0x20,%rsp
    c23d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c241:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c245:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c249:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c24d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c255:	48 89 ce             	mov    %rcx,%rsi
    c258:	48 89 c7             	mov    %rax,%rdi
    c25b:	e8 0d 02 00 00       	call   c46d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c260:	90                   	nop
    c261:	c9                   	leave
    c262:	c3                   	ret

000000000000c263 <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c263:	55                   	push   %rbp
    c264:	48 89 e5             	mov    %rsp,%rbp
    c267:	48 83 ec 20          	sub    $0x20,%rsp
    c26b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c26f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c273:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c277:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c27b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c27f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c283:	48 89 ce             	mov    %rcx,%rsi
    c286:	48 89 c7             	mov    %rax,%rdi
    c289:	e8 10 02 00 00       	call   c49e <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c28e:	90                   	nop
    c28f:	c9                   	leave
    c290:	c3                   	ret

000000000000c291 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c291:	55                   	push   %rbp
    c292:	48 89 e5             	mov    %rsp,%rbp
    c295:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c299:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c29d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c2a1:	eb 58                	jmp    c2fb <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c2a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2ab:	b9 08 02 00 00       	mov    $0x208,%ecx
    c2b0:	48 8b 32             	mov    (%rdx),%rsi
    c2b3:	48 89 30             	mov    %rsi,(%rax)
    c2b6:	89 ce                	mov    %ecx,%esi
    c2b8:	48 01 c6             	add    %rax,%rsi
    c2bb:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c2bf:	89 ce                	mov    %ecx,%esi
    c2c1:	48 01 d6             	add    %rdx,%rsi
    c2c4:	48 83 c6 08          	add    $0x8,%rsi
    c2c8:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c2cc:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c2d0:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c2d4:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c2d8:	48 29 f8             	sub    %rdi,%rax
    c2db:	48 29 c2             	sub    %rax,%rdx
    c2de:	01 c1                	add    %eax,%ecx
    c2e0:	83 e1 f8             	and    $0xfffffff8,%ecx
    c2e3:	89 c8                	mov    %ecx,%eax
    c2e5:	c1 e8 03             	shr    $0x3,%eax
    c2e8:	89 c0                	mov    %eax,%eax
    c2ea:	48 89 d6             	mov    %rdx,%rsi
    c2ed:	48 89 c1             	mov    %rax,%rcx
    c2f0:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c2f3:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c2fa:	00 
    c2fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ff:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c303:	75 9e                	jne    c2a3 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c305:	90                   	nop
    c306:	90                   	nop
    c307:	5d                   	pop    %rbp
    c308:	c3                   	ret

000000000000c309 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c309:	55                   	push   %rbp
    c30a:	48 89 e5             	mov    %rsp,%rbp
    c30d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c311:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c315:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c319:	eb 58                	jmp    c373 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c31b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c31f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c323:	b9 04 01 00 00       	mov    $0x104,%ecx
    c328:	48 8b 32             	mov    (%rdx),%rsi
    c32b:	48 89 30             	mov    %rsi,(%rax)
    c32e:	89 ce                	mov    %ecx,%esi
    c330:	48 01 c6             	add    %rax,%rsi
    c333:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c337:	89 ce                	mov    %ecx,%esi
    c339:	48 01 d6             	add    %rdx,%rsi
    c33c:	48 83 c6 08          	add    $0x8,%rsi
    c340:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c344:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c348:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c34c:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c350:	48 29 f8             	sub    %rdi,%rax
    c353:	48 29 c2             	sub    %rax,%rdx
    c356:	01 c1                	add    %eax,%ecx
    c358:	83 e1 f8             	and    $0xfffffff8,%ecx
    c35b:	89 c8                	mov    %ecx,%eax
    c35d:	c1 e8 03             	shr    $0x3,%eax
    c360:	89 c0                	mov    %eax,%eax
    c362:	48 89 d6             	mov    %rdx,%rsi
    c365:	48 89 c1             	mov    %rax,%rcx
    c368:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c36b:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c372:	00 
    c373:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c377:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c37b:	75 9e                	jne    c31b <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c37d:	90                   	nop
    c37e:	90                   	nop
    c37f:	5d                   	pop    %rbp
    c380:	c3                   	ret

000000000000c381 <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c381:	55                   	push   %rbp
    c382:	48 89 e5             	mov    %rsp,%rbp
    c385:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c389:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c38d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c391:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c395:	48 8b 00             	mov    (%rax),%rax
    c398:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c39c:	eb 10                	jmp    c3ae <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c39e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c3a6:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c3a9:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c3ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3b2:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c3b6:	75 e6                	jne    c39e <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c3b8:	90                   	nop
    c3b9:	90                   	nop
    c3ba:	5d                   	pop    %rbp
    c3bb:	c3                   	ret

000000000000c3bc <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3bc:	55                   	push   %rbp
    c3bd:	48 89 e5             	mov    %rsp,%rbp
    c3c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c3c4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c3c8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c3cc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c3d0:	48 8b 00             	mov    (%rax),%rax
    c3d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c3d7:	eb 10                	jmp    c3e9 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c3d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3dd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c3e1:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c3e4:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c3e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c3ed:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c3f1:	75 e6                	jne    c3d9 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c3f3:	90                   	nop
    c3f4:	90                   	nop
    c3f5:	5d                   	pop    %rbp
    c3f6:	c3                   	ret

000000000000c3f7 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3f7:	55                   	push   %rbp
    c3f8:	48 89 e5             	mov    %rsp,%rbp
    c3fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c3ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c403:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c407:	eb 23                	jmp    c42c <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c409:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c40d:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c411:	48 8b 06             	mov    (%rsi),%rax
    c414:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c418:	48 89 01             	mov    %rax,(%rcx)
    c41b:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c41f:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c423:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c427:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c42c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c430:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c434:	75 d3                	jne    c409 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c436:	90                   	nop
    c437:	90                   	nop
    c438:	5d                   	pop    %rbp
    c439:	c3                   	ret

000000000000c43a <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c43a:	55                   	push   %rbp
    c43b:	48 89 e5             	mov    %rsp,%rbp
    c43e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c442:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c446:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c44a:	eb 13                	jmp    c45f <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c44c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c450:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c454:	48 8b 12             	mov    (%rdx),%rdx
    c457:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c45a:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c45f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c463:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c467:	75 e3                	jne    c44c <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c469:	90                   	nop
    c46a:	90                   	nop
    c46b:	5d                   	pop    %rbp
    c46c:	c3                   	ret

000000000000c46d <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c46d:	55                   	push   %rbp
    c46e:	48 89 e5             	mov    %rsp,%rbp
    c471:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c475:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c479:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c47d:	eb 11                	jmp    c490 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c47f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c483:	8b 10                	mov    (%rax),%edx
    c485:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c489:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c48b:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c494:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c498:	75 e5                	jne    c47f <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c49a:	90                   	nop
    c49b:	90                   	nop
    c49c:	5d                   	pop    %rbp
    c49d:	c3                   	ret

000000000000c49e <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c49e:	55                   	push   %rbp
    c49f:	48 89 e5             	mov    %rsp,%rbp
    c4a2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c4a6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c4aa:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c4ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c4b2:	48 8b 00             	mov    (%rax),%rax
    c4b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c4b9:	eb 10                	jmp    c4cb <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c4bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4bf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c4c3:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c4c6:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c4cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4cf:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c4d3:	75 e6                	jne    c4bb <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c4d5:	90                   	nop
    c4d6:	90                   	nop
    c4d7:	5d                   	pop    %rbp
    c4d8:	c3                   	ret

000000000000c4d9 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c4d9:	55                   	push   %rbp
    c4da:	48 89 e5             	mov    %rsp,%rbp
    c4dd:	53                   	push   %rbx
    c4de:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c4e2:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c4e6:	be 00 00 00 00       	mov    $0x0,%esi
    c4eb:	48 89 c7             	mov    %rax,%rdi
    c4ee:	e8 4d 7f ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c4f3:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c4f6:	89 c3                	mov    %eax,%ebx
    c4f8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c4fc:	48 89 c7             	mov    %rax,%rdi
    c4ff:	e8 ea b6 ff ff       	call   7bee <_ZNSaI17VkLayerPropertiesEC1Ev>
    c504:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c508:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c50c:	48 89 de             	mov    %rbx,%rsi
    c50f:	48 89 c7             	mov    %rax,%rdi
    c512:	e8 0f b7 ff ff       	call   7c26 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c517:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c51b:	48 89 c7             	mov    %rax,%rdi
    c51e:	e8 e7 b6 ff ff       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c523:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c527:	48 89 c7             	mov    %rax,%rdi
    c52a:	e8 b1 b7 ff ff       	call   7ce0 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c52f:	48 89 c2             	mov    %rax,%rdx
    c532:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c536:	48 89 d6             	mov    %rdx,%rsi
    c539:	48 89 c7             	mov    %rax,%rdi
    c53c:	e8 ff 7e ff ff       	call   4440 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c541:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c545:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c549:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c54d:	48 89 c7             	mov    %rax,%rdi
    c550:	e8 63 04 00 00       	call   c9b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c555:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c559:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c55d:	48 89 c7             	mov    %rax,%rdi
    c560:	e8 79 04 00 00       	call   c9de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c565:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c569:	eb 5b                	jmp    c5c6 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c56b:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c56f:	48 89 c7             	mov    %rax,%rdi
    c572:	e8 ef 04 00 00       	call   ca66 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c577:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c57b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c57f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c583:	48 89 d6             	mov    %rdx,%rsi
    c586:	48 89 c7             	mov    %rax,%rdi
    c589:	e8 f8 03 00 00       	call   c986 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c58e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c592:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c596:	48 8b 3d 03 97 01 00 	mov    0x19703(%rip),%rdi        # 25ca0 <_ZN3vkh19validationLayerNameE>
    c59d:	48 8b 35 04 97 01 00 	mov    0x19704(%rip),%rsi        # 25ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c5a4:	48 89 d1             	mov    %rdx,%rcx
    c5a7:	48 89 c2             	mov    %rax,%rdx
    c5aa:	e8 da 04 00 00       	call   ca89 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c5af:	84 c0                	test   %al,%al
    c5b1:	74 07                	je     c5ba <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c5b3:	bb 01 00 00 00       	mov    $0x1,%ebx
    c5b8:	eb 28                	jmp    c5e2 <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c5ba:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c5be:	48 89 c7             	mov    %rax,%rdi
    c5c1:	e8 7c 04 00 00       	call   ca42 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c5c6:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c5ca:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c5ce:	48 89 d6             	mov    %rdx,%rsi
    c5d1:	48 89 c7             	mov    %rax,%rdi
    c5d4:	e8 2e 04 00 00       	call   ca07 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c5d9:	84 c0                	test   %al,%al
    c5db:	75 8e                	jne    c56b <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c5dd:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c5e2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c5e6:	48 89 c7             	mov    %rax,%rdi
    c5e9:	e8 ae b6 ff ff       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c5ee:	89 d8                	mov    %ebx,%eax
    c5f0:	eb 34                	jmp    c626 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c5f2:	48 89 c3             	mov    %rax,%rbx
    c5f5:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c5f9:	48 89 c7             	mov    %rax,%rdi
    c5fc:	e8 09 b6 ff ff       	call   7c0a <_ZNSaI17VkLayerPropertiesED1Ev>
    c601:	48 89 d8             	mov    %rbx,%rax
    c604:	48 89 c7             	mov    %rax,%rdi
    c607:	e8 a4 80 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    c60c:	48 89 c3             	mov    %rax,%rbx
    c60f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c613:	48 89 c7             	mov    %rax,%rdi
    c616:	e8 81 b6 ff ff       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c61b:	48 89 d8             	mov    %rbx,%rax
    c61e:	48 89 c7             	mov    %rax,%rdi
    c621:	e8 8a 80 ff ff       	call   46b0 <_Unwind_Resume@plt>
    c626:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c62a:	c9                   	leave
    c62b:	c3                   	ret

000000000000c62c <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c62c:	55                   	push   %rbp
    c62d:	48 89 e5             	mov    %rsp,%rbp
    c630:	48 83 ec 20          	sub    $0x20,%rsp
    c634:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c637:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c63a:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c63e:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c642:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c645:	83 f8 01             	cmp    $0x1,%eax
    c648:	7e 3c                	jle    c686 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c64a:	be 0a 00 00 00       	mov    $0xa,%esi
    c64f:	48 8d 05 8a 9e 01 00 	lea    0x19e8a(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    c656:	48 89 c7             	mov    %rax,%rdi
    c659:	e8 02 7e ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c65e:	48 89 c2             	mov    %rax,%rdx
    c661:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c665:	48 8b 40 28          	mov    0x28(%rax),%rax
    c669:	48 89 c6             	mov    %rax,%rsi
    c66c:	48 89 d7             	mov    %rdx,%rdi
    c66f:	e8 dc 7c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c674:	48 8b 15 1d 99 01 00 	mov    0x1991d(%rip),%rdx        # 25f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c67b:	48 89 d6             	mov    %rdx,%rsi
    c67e:	48 89 c7             	mov    %rax,%rdi
    c681:	e8 3a 7d ff ff       	call   43c0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c686:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c68b:	c9                   	leave
    c68c:	c3                   	ret

000000000000c68d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c68d:	55                   	push   %rbp
    c68e:	48 89 e5             	mov    %rsp,%rbp
    c691:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c699:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c69d:	0f 11 00             	movups %xmm0,(%rax)
    c6a0:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c6a4:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c6a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6ac:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c6b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6b6:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c6bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6c1:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c6c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6cc:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c62c <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c6d3:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c6d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c6db:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c6e2:	00 
}
    c6e3:	90                   	nop
    c6e4:	5d                   	pop    %rbp
    c6e5:	c3                   	ret

000000000000c6e6 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c6e6:	55                   	push   %rbp
    c6e7:	48 89 e5             	mov    %rsp,%rbp
    c6ea:	48 83 ec 30          	sub    $0x30,%rsp
    c6ee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c6f2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c6f6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c6fa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c6fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c702:	48 8d 15 cf bf 00 00 	lea    0xbfcf(%rip),%rdx        # 186d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c709:	48 89 d6             	mov    %rdx,%rsi
    c70c:	48 89 c7             	mov    %rax,%rdi
    c70f:	e8 1c 7c ff ff       	call   4330 <vkGetInstanceProcAddr@plt>
    c714:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c718:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c71d:	75 07                	jne    c726 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c71f:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c724:	eb 1b                	jmp    c741 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c726:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c72a:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c72e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c732:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c736:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c73a:	48 89 c7             	mov    %rax,%rdi
    c73d:	41 ff d0             	call   *%r8
    c740:	90                   	nop
}
    c741:	c9                   	leave
    c742:	c3                   	ret

000000000000c743 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c743:	55                   	push   %rbp
    c744:	48 89 e5             	mov    %rsp,%rbp
    c747:	41 54                	push   %r12
    c749:	53                   	push   %rbx
    c74a:	48 83 ec 50          	sub    $0x50,%rsp
    c74e:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c752:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c756:	48 89 c7             	mov    %rax,%rdi
    c759:	e8 2f ff ff ff       	call   c68d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c75e:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c765:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c766:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c76a:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c76e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c772:	48 89 d1             	mov    %rdx,%rcx
    c775:	ba 00 00 00 00       	mov    $0x0,%edx
    c77a:	48 89 c7             	mov    %rax,%rdi
    c77d:	e8 64 ff ff ff       	call   c6e6 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c782:	85 c0                	test   %eax,%eax
    c784:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c787:	84 c0                	test   %al,%al
    c789:	74 3b                	je     c7c6 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c78b:	bf 10 00 00 00       	mov    $0x10,%edi
    c790:	e8 cb 79 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    c795:	48 89 c3             	mov    %rax,%rbx
    c798:	48 8d 05 59 bf 00 00 	lea    0xbf59(%rip),%rax        # 186f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c79f:	48 89 c6             	mov    %rax,%rsi
    c7a2:	48 89 df             	mov    %rbx,%rdi
    c7a5:	e8 56 79 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c7aa:	48 8b 05 f7 97 01 00 	mov    0x197f7(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c7b1:	48 89 c2             	mov    %rax,%rdx
    c7b4:	48 8d 05 85 95 01 00 	lea    0x19585(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c7bb:	48 89 c6             	mov    %rax,%rsi
    c7be:	48 89 df             	mov    %rbx,%rdi
    c7c1:	e8 8a 7e ff ff       	call   4650 <__cxa_throw@plt>
  }
  return debugMessenger;
    c7c6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c7ca:	eb 16                	jmp    c7e2 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c7cc:	49 89 c4             	mov    %rax,%r12
    c7cf:	48 89 df             	mov    %rbx,%rdi
    c7d2:	e8 59 7a ff ff       	call   4230 <__cxa_free_exception@plt>
    c7d7:	4c 89 e0             	mov    %r12,%rax
    c7da:	48 89 c7             	mov    %rax,%rdi
    c7dd:	e8 ce 7e ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    c7e2:	48 83 c4 50          	add    $0x50,%rsp
    c7e6:	5b                   	pop    %rbx
    c7e7:	41 5c                	pop    %r12
    c7e9:	5d                   	pop    %rbp
    c7ea:	c3                   	ret

000000000000c7eb <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c7eb:	55                   	push   %rbp
    c7ec:	48 89 e5             	mov    %rsp,%rbp
    c7ef:	48 83 ec 30          	sub    $0x30,%rsp
    c7f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c7f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c7fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c7ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c803:	48 8d 15 0e bf 00 00 	lea    0xbf0e(%rip),%rdx        # 18718 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c80a:	48 89 d6             	mov    %rdx,%rsi
    c80d:	48 89 c7             	mov    %rax,%rdi
    c810:	e8 1b 7b ff ff       	call   4330 <vkGetInstanceProcAddr@plt>
    c815:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c819:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c81e:	74 19                	je     c839 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c820:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c824:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c828:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c82c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c830:	48 89 ce             	mov    %rcx,%rsi
    c833:	48 89 c7             	mov    %rax,%rdi
    c836:	41 ff d0             	call   *%r8
  }
}
    c839:	90                   	nop
    c83a:	c9                   	leave
    c83b:	c3                   	ret

000000000000c83c <_Z41__static_initialization_and_destruction_0ii>:

    c83c:	55                   	push   %rbp
    c83d:	48 89 e5             	mov    %rsp,%rbp
    c840:	48 83 ec 10          	sub    $0x10,%rsp
    c844:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c847:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c84a:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c84e:	75 3b                	jne    c88b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c850:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c857:	75 32                	jne    c88b <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c859:	48 8d 05 92 9d 01 00 	lea    0x19d92(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c860:	48 89 c7             	mov    %rax,%rdi
    c863:	e8 58 7d ff ff       	call   45c0 <_ZNSt8ios_base4InitC1Ev@plt>
    c868:	48 8d 05 21 9b 01 00 	lea    0x19b21(%rip),%rax        # 26390 <__dso_handle>
    c86f:	48 89 c2             	mov    %rax,%rdx
    c872:	48 8d 05 79 9d 01 00 	lea    0x19d79(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c879:	48 89 c6             	mov    %rax,%rsi
    c87c:	48 8b 05 45 97 01 00 	mov    0x19745(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c883:	48 89 c7             	mov    %rax,%rdi
    c886:	e8 65 7a ff ff       	call   42f0 <__cxa_atexit@plt>
    c88b:	90                   	nop
    c88c:	c9                   	leave
    c88d:	c3                   	ret

000000000000c88e <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c88e:	55                   	push   %rbp
    c88f:	48 89 e5             	mov    %rsp,%rbp
    c892:	be ff ff 00 00       	mov    $0xffff,%esi
    c897:	bf 01 00 00 00       	mov    $0x1,%edi
    c89c:	e8 9b ff ff ff       	call   c83c <_Z41__static_initialization_and_destruction_0ii>
    c8a1:	5d                   	pop    %rbp
    c8a2:	c3                   	ret

000000000000c8a3 <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    c8a3:	55                   	push   %rbp
    c8a4:	48 89 e5             	mov    %rsp,%rbp
    c8a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c8ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    c8af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c8b3:	0f b6 00             	movzbl (%rax),%eax
    c8b6:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    c8b8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c8bc:	0f b6 00             	movzbl (%rax),%eax
    c8bf:	38 c2                	cmp    %al,%dl
    c8c1:	0f 92 c0             	setb   %al
      }
    c8c4:	5d                   	pop    %rbp
    c8c5:	c3                   	ret

000000000000c8c6 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    c8c6:	55                   	push   %rbp
    c8c7:	48 89 e5             	mov    %rsp,%rbp
    c8ca:	48 83 ec 30          	sub    $0x30,%rsp
    c8ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c8d2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c8d6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    c8da:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    c8df:	75 0a                	jne    c8eb <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    c8e1:	b8 00 00 00 00       	mov    $0x0,%eax
    c8e6:	e9 99 00 00 00       	jmp    c984 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    c8eb:	e8 4e 81 ff ff       	call   4a3e <_ZSt23__is_constant_evaluatedv>
    c8f0:	84 c0                	test   %al,%al
    c8f2:	74 78                	je     c96c <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    c8f4:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c8fb:	00 
    c8fc:	eb 5d                	jmp    c95b <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    c8fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c906:	48 01 c2             	add    %rax,%rdx
    c909:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c90d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c911:	48 01 c8             	add    %rcx,%rax
    c914:	48 89 d6             	mov    %rdx,%rsi
    c917:	48 89 c7             	mov    %rax,%rdi
    c91a:	e8 84 ff ff ff       	call   c8a3 <_ZNSt11char_traitsIcE2ltERKcS2_>
    c91f:	84 c0                	test   %al,%al
    c921:	74 07                	je     c92a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    c923:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c928:	eb 5a                	jmp    c984 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    c92a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c92e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c932:	48 01 c2             	add    %rax,%rdx
    c935:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c939:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c93d:	48 01 c8             	add    %rcx,%rax
    c940:	48 89 d6             	mov    %rdx,%rsi
    c943:	48 89 c7             	mov    %rax,%rdi
    c946:	e8 58 ff ff ff       	call   c8a3 <_ZNSt11char_traitsIcE2ltERKcS2_>
    c94b:	84 c0                	test   %al,%al
    c94d:	74 07                	je     c956 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    c94f:	b8 01 00 00 00       	mov    $0x1,%eax
    c954:	eb 2e                	jmp    c984 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    c956:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    c95b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c95f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c963:	72 99                	jb     c8fe <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    c965:	b8 00 00 00 00       	mov    $0x0,%eax
    c96a:	eb 18                	jmp    c984 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    c96c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c970:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c974:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c978:	48 89 ce             	mov    %rcx,%rsi
    c97b:	48 89 c7             	mov    %rax,%rdi
    c97e:	e8 cd 77 ff ff       	call   4150 <memcmp@plt>
    c983:	90                   	nop
      }
    c984:	c9                   	leave
    c985:	c3                   	ret

000000000000c986 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    c986:	55                   	push   %rbp
    c987:	48 89 e5             	mov    %rsp,%rbp
    c98a:	48 83 ec 10          	sub    $0x10,%rsp
    c98e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c992:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    c996:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c99a:	48 89 c7             	mov    %rax,%rdi
    c99d:	e8 a7 80 ff ff       	call   4a49 <_ZNSt11char_traitsIcE6lengthEPKc>
    c9a2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c9a6:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    c9a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ad:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    c9b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    c9b5:	90                   	nop
    c9b6:	c9                   	leave
    c9b7:	c3                   	ret

000000000000c9b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    c9b8:	55                   	push   %rbp
    c9b9:	48 89 e5             	mov    %rsp,%rbp
    c9bc:	48 83 ec 20          	sub    $0x20,%rsp
    c9c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    c9c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c9c8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c9cc:	48 89 d6             	mov    %rdx,%rsi
    c9cf:	48 89 c7             	mov    %rax,%rdi
    c9d2:	e8 27 01 00 00       	call   cafe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    c9d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9db:	c9                   	leave
    c9dc:	c3                   	ret
    c9dd:	90                   	nop

000000000000c9de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    c9de:	55                   	push   %rbp
    c9df:	48 89 e5             	mov    %rsp,%rbp
    c9e2:	48 83 ec 20          	sub    $0x20,%rsp
    c9e6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    c9ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9ee:	48 8d 50 08          	lea    0x8(%rax),%rdx
    c9f2:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    c9f6:	48 89 d6             	mov    %rdx,%rsi
    c9f9:	48 89 c7             	mov    %rax,%rdi
    c9fc:	e8 fd 00 00 00       	call   cafe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ca01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca05:	c9                   	leave
    ca06:	c3                   	ret

000000000000ca07 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ca07:	55                   	push   %rbp
    ca08:	48 89 e5             	mov    %rsp,%rbp
    ca0b:	53                   	push   %rbx
    ca0c:	48 83 ec 18          	sub    $0x18,%rsp
    ca10:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca14:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ca18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca1c:	48 89 c7             	mov    %rax,%rdi
    ca1f:	e8 f8 00 00 00       	call   cb1c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ca24:	48 8b 18             	mov    (%rax),%rbx
    ca27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ca2b:	48 89 c7             	mov    %rax,%rdi
    ca2e:	e8 e9 00 00 00       	call   cb1c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    ca33:	48 8b 00             	mov    (%rax),%rax
    ca36:	48 39 c3             	cmp    %rax,%rbx
    ca39:	0f 95 c0             	setne  %al
    ca3c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ca40:	c9                   	leave
    ca41:	c3                   	ret

000000000000ca42 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    ca42:	55                   	push   %rbp
    ca43:	48 89 e5             	mov    %rsp,%rbp
    ca46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    ca4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca4e:	48 8b 00             	mov    (%rax),%rax
    ca51:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    ca58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca5c:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    ca5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    ca63:	5d                   	pop    %rbp
    ca64:	c3                   	ret
    ca65:	90                   	nop

000000000000ca66 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    ca66:	55                   	push   %rbp
    ca67:	48 89 e5             	mov    %rsp,%rbp
    ca6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    ca6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca72:	48 8b 00             	mov    (%rax),%rax
    ca75:	5d                   	pop    %rbp
    ca76:	c3                   	ret
    ca77:	90                   	nop

000000000000ca78 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    ca78:	55                   	push   %rbp
    ca79:	48 89 e5             	mov    %rsp,%rbp
    ca7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    ca80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca84:	48 8b 00             	mov    (%rax),%rax
    ca87:	5d                   	pop    %rbp
    ca88:	c3                   	ret

000000000000ca89 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    ca89:	55                   	push   %rbp
    ca8a:	48 89 e5             	mov    %rsp,%rbp
    ca8d:	53                   	push   %rbx
    ca8e:	48 83 ec 28          	sub    $0x28,%rsp
    ca92:	48 89 f0             	mov    %rsi,%rax
    ca95:	49 89 f8             	mov    %rdi,%r8
    ca98:	4c 89 c6             	mov    %r8,%rsi
    ca9b:	4c 89 cf             	mov    %r9,%rdi
    ca9e:	48 89 c7             	mov    %rax,%rdi
    caa1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    caa5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    caa9:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    caad:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cab1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cab5:	48 89 c7             	mov    %rax,%rdi
    cab8:	e8 bb ff ff ff       	call   ca78 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cabd:	48 89 c3             	mov    %rax,%rbx
    cac0:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cac4:	48 89 c7             	mov    %rax,%rdi
    cac7:	e8 ac ff ff ff       	call   ca78 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cacc:	48 39 c3             	cmp    %rax,%rbx
    cacf:	75 22                	jne    caf3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cad1:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cad5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cad9:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cadd:	48 89 ce             	mov    %rcx,%rsi
    cae0:	48 89 c7             	mov    %rax,%rdi
    cae3:	e8 42 00 00 00       	call   cb2a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cae8:	85 c0                	test   %eax,%eax
    caea:	75 07                	jne    caf3 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    caec:	b8 01 00 00 00       	mov    $0x1,%eax
    caf1:	eb 05                	jmp    caf8 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    caf3:	b8 00 00 00 00       	mov    $0x0,%eax
    caf8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cafc:	c9                   	leave
    cafd:	c3                   	ret

000000000000cafe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cafe:	55                   	push   %rbp
    caff:	48 89 e5             	mov    %rsp,%rbp
    cb02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb06:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cb0a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb0e:	48 8b 10             	mov    (%rax),%rdx
    cb11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb15:	48 89 10             	mov    %rdx,(%rax)
    cb18:	90                   	nop
    cb19:	5d                   	pop    %rbp
    cb1a:	c3                   	ret
    cb1b:	90                   	nop

000000000000cb1c <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cb1c:	55                   	push   %rbp
    cb1d:	48 89 e5             	mov    %rsp,%rbp
    cb20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cb24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb28:	5d                   	pop    %rbp
    cb29:	c3                   	ret

000000000000cb2a <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cb2a:	55                   	push   %rbp
    cb2b:	48 89 e5             	mov    %rsp,%rbp
    cb2e:	48 83 ec 30          	sub    $0x30,%rsp
    cb32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb36:	48 89 d1             	mov    %rdx,%rcx
    cb39:	48 89 f0             	mov    %rsi,%rax
    cb3c:	48 89 fa             	mov    %rdi,%rdx
    cb3f:	48 89 ca             	mov    %rcx,%rdx
    cb42:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cb46:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    cb4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb4e:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    cb52:	48 89 d6             	mov    %rdx,%rsi
    cb55:	48 89 c7             	mov    %rax,%rdi
    cb58:	e8 90 87 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
    cb5d:	48 8b 00             	mov    (%rax),%rax
    cb60:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    cb64:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cb68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb6c:	48 8b 40 08          	mov    0x8(%rax),%rax
    cb70:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cb74:	48 89 ce             	mov    %rcx,%rsi
    cb77:	48 89 c7             	mov    %rax,%rdi
    cb7a:	e8 47 fd ff ff       	call   c8c6 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    cb7f:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    cb82:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cb86:	75 19                	jne    cba1 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    cb88:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cb8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cb90:	48 8b 00             	mov    (%rax),%rax
    cb93:	48 89 d6             	mov    %rdx,%rsi
    cb96:	48 89 c7             	mov    %rax,%rdi
    cb99:	e8 08 00 00 00       	call   cba6 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    cb9e:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    cba1:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    cba4:	c9                   	leave
    cba5:	c3                   	ret

000000000000cba6 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    cba6:	55                   	push   %rbp
    cba7:	48 89 e5             	mov    %rsp,%rbp
    cbaa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbae:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    cbb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbb6:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    cbba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    cbbe:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cbc3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cbc7:	7c 07                	jl     cbd0 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    cbc9:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    cbce:	eb 1b                	jmp    cbeb <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    cbd0:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cbd7:	ff ff ff 
    cbda:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cbde:	7f 07                	jg     cbe7 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    cbe0:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cbe5:	eb 04                	jmp    cbeb <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    cbe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cbeb:	5d                   	pop    %rbp
    cbec:	c3                   	ret

000000000000cbed <_Z41__static_initialization_and_destruction_0ii>:
 */
void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator);

} /* namespace vkh */
    cbed:	55                   	push   %rbp
    cbee:	48 89 e5             	mov    %rsp,%rbp
    cbf1:	48 83 ec 10          	sub    $0x10,%rsp
    cbf5:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cbf8:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cbfb:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cbff:	75 3b                	jne    cc3c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc01:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cc08:	75 32                	jne    cc3c <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc0a:	48 8d 05 e2 99 01 00 	lea    0x199e2(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cc11:	48 89 c7             	mov    %rax,%rdi
    cc14:	e8 a7 79 ff ff       	call   45c0 <_ZNSt8ios_base4InitC1Ev@plt>
    cc19:	48 8d 05 70 97 01 00 	lea    0x19770(%rip),%rax        # 26390 <__dso_handle>
    cc20:	48 89 c2             	mov    %rax,%rdx
    cc23:	48 8d 05 c9 99 01 00 	lea    0x199c9(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cc2a:	48 89 c6             	mov    %rax,%rsi
    cc2d:	48 8b 05 94 93 01 00 	mov    0x19394(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    cc34:	48 89 c7             	mov    %rax,%rdi
    cc37:	e8 b4 76 ff ff       	call   42f0 <__cxa_atexit@plt>
    cc3c:	90                   	nop
    cc3d:	c9                   	leave
    cc3e:	c3                   	ret

000000000000cc3f <_GLOBAL__sub_I_vkh.cpp>:
    cc3f:	55                   	push   %rbp
    cc40:	48 89 e5             	mov    %rsp,%rbp
    cc43:	be ff ff 00 00       	mov    $0xffff,%esi
    cc48:	bf 01 00 00 00       	mov    $0x1,%edi
    cc4d:	e8 9b ff ff ff       	call   cbed <_Z41__static_initialization_and_destruction_0ii>
    cc52:	5d                   	pop    %rbp
    cc53:	c3                   	ret

000000000000cc54 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    cc54:	55                   	push   %rbp
    cc55:	48 89 e5             	mov    %rsp,%rbp
    cc58:	48 83 ec 10          	sub    $0x10,%rsp
    cc5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    cc60:	e8 eb 77 ff ff       	call   4450 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cc65:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cc6b:	b9 00 00 00 00       	mov    $0x0,%ecx
    cc70:	48 8d 05 c9 c6 00 00 	lea    0xc6c9(%rip),%rax        # 19340 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cc77:	48 89 c2             	mov    %rax,%rdx
    cc7a:	be 58 02 00 00       	mov    $0x258,%esi
    cc7f:	bf 20 03 00 00       	mov    $0x320,%edi
    cc84:	e8 bc 89 ff ff       	call   5645 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cc89:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cc8d:	48 89 02             	mov    %rax,(%rdx)
}
    cc90:	90                   	nop
    cc91:	c9                   	leave
    cc92:	c3                   	ret
    cc93:	90                   	nop

000000000000cc94 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cc94:	55                   	push   %rbp
    cc95:	48 89 e5             	mov    %rsp,%rbp
    cc98:	53                   	push   %rbx
    cc99:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    cca0:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    cca7:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ccab:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    ccaf:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    ccb3:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    ccb7:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    ccbe:	48 8d 05 7b c6 00 00 	lea    0xc67b(%rip),%rax        # 19340 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ccc5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    ccc9:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    ccd0:	48 8d 05 7c c6 00 00 	lea    0xc67c(%rip),%rax        # 19353 <_ZN6__pstl9execution2v1L5unseqE+0x14>
    ccd7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    ccdb:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    cce2:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    cce9:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cced:	48 89 c7             	mov    %rax,%rdi
    ccf0:	e8 17 a1 ff ff       	call   6e0c <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    ccf5:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ccf9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ccfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd01:	48 89 c7             	mov    %rax,%rdi
    cd04:	e8 57 35 00 00       	call   10260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cd09:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cd10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd14:	48 89 c7             	mov    %rax,%rdi
    cd17:	e8 6a 35 00 00       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    cd1c:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cd23:	eb 3c                	jmp    cd61 <_ZN9VulkanApp14createInstanceEv+0xcd>
    cd25:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cd2c:	48 89 c7             	mov    %rax,%rdi
    cd2f:	e8 d6 35 00 00       	call   1030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    cd34:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    cd38:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cd3f:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cd43:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cd47:	48 89 c6             	mov    %rax,%rsi
    cd4a:	48 89 d7             	mov    %rdx,%rdi
    cd4d:	e8 ca 35 00 00       	call   1031c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    cd52:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cd59:	48 89 c7             	mov    %rax,%rdi
    cd5c:	e8 89 35 00 00       	call   102ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cd61:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    cd68:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cd6f:	48 89 d6             	mov    %rdx,%rsi
    cd72:	48 89 c7             	mov    %rax,%rdi
    cd75:	e8 35 35 00 00       	call   102af <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cd7a:	84 c0                	test   %al,%al
    cd7c:	75 a7                	jne    cd25 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cd7e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cd82:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    cd89:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    cd90:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    cd94:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cd9b:	48 89 c7             	mov    %rax,%rdi
    cd9e:	e8 ea f8 ff ff       	call   c68d <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    cda3:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    cdaa:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    cdad:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cdb4:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    cdbb:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    cdbf:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    cdc6:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cdcd:	48 83 c0 28          	add    $0x28,%rax
    cdd1:	48 89 c7             	mov    %rax,%rdi
    cdd4:	e8 e7 35 00 00       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    cdd9:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    cddf:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cde6:	48 83 c0 28          	add    $0x28,%rax
    cdea:	48 89 c7             	mov    %rax,%rdi
    cded:	e8 f2 35 00 00       	call   103e4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    cdf2:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    cdf9:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce00:	48 83 c0 10          	add    $0x10,%rax
    ce04:	48 89 c7             	mov    %rax,%rdi
    ce07:	e8 b4 35 00 00       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    ce0c:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    ce12:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce19:	48 83 c0 10          	add    $0x10,%rax
    ce1d:	48 89 c7             	mov    %rax,%rdi
    ce20:	e8 e3 35 00 00       	call   10408 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    ce25:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    ce2c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ce33:	be 00 00 00 00       	mov    $0x0,%esi
    ce38:	48 89 c7             	mov    %rax,%rdi
    ce3b:	e8 5b 88 ff ff       	call   569b <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    ce40:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    ce47:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    ce4b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce4f:	48 89 c7             	mov    %rax,%rdi
    ce52:	e8 c5 33 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ce57:	eb 1a                	jmp    ce73 <_ZN9VulkanApp14createInstanceEv+0x1df>
    ce59:	48 89 c3             	mov    %rax,%rbx
    ce5c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    ce60:	48 89 c7             	mov    %rax,%rdi
    ce63:	e8 b4 33 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ce68:	48 89 d8             	mov    %rbx,%rax
    ce6b:	48 89 c7             	mov    %rax,%rdi
    ce6e:	e8 3d 78 ff ff       	call   46b0 <_Unwind_Resume@plt>
    ce73:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ce77:	c9                   	leave
    ce78:	c3                   	ret
    ce79:	90                   	nop

000000000000ce7a <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    ce7a:	55                   	push   %rbp
    ce7b:	48 89 e5             	mov    %rsp,%rbp
    ce7e:	41 54                	push   %r12
    ce80:	53                   	push   %rbx
    ce81:	48 83 ec 10          	sub    $0x10,%rsp
    ce85:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    ce89:	e8 4b f6 ff ff       	call   c4d9 <_ZN3vkh27checkValidationLayerSupportEv>
    ce8e:	0f b6 c0             	movzbl %al,%eax
    ce91:	85 c0                	test   %eax,%eax
    ce93:	0f 94 c0             	sete   %al
    ce96:	84 c0                	test   %al,%al
    ce98:	74 3b                	je     ced5 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    ce9a:	bf 10 00 00 00       	mov    $0x10,%edi
    ce9f:	e8 bc 72 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    cea4:	48 89 c3             	mov    %rax,%rbx
    cea7:	48 8d 05 b2 c4 00 00 	lea    0xc4b2(%rip),%rax        # 19360 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    ceae:	48 89 c6             	mov    %rax,%rsi
    ceb1:	48 89 df             	mov    %rbx,%rdi
    ceb4:	e8 47 72 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    ceb9:	48 8b 05 e8 90 01 00 	mov    0x190e8(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cec0:	48 89 c2             	mov    %rax,%rdx
    cec3:	48 8d 05 76 8e 01 00 	lea    0x18e76(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    ceca:	48 89 c6             	mov    %rax,%rsi
    cecd:	48 89 df             	mov    %rbx,%rdi
    ced0:	e8 7b 77 ff ff       	call   4650 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    ced5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ced9:	48 8b 40 08          	mov    0x8(%rax),%rax
    cedd:	48 89 c7             	mov    %rax,%rdi
    cee0:	e8 5e f8 ff ff       	call   c743 <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    cee5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cee9:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    ceed:	eb 16                	jmp    cf05 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    ceef:	49 89 c4             	mov    %rax,%r12
    cef2:	48 89 df             	mov    %rbx,%rdi
    cef5:	e8 36 73 ff ff       	call   4230 <__cxa_free_exception@plt>
    cefa:	4c 89 e0             	mov    %r12,%rax
    cefd:	48 89 c7             	mov    %rax,%rdi
    cf00:	e8 ab 77 ff ff       	call   46b0 <_Unwind_Resume@plt>
}
    cf05:	48 83 c4 10          	add    $0x10,%rsp
    cf09:	5b                   	pop    %rbx
    cf0a:	41 5c                	pop    %r12
    cf0c:	5d                   	pop    %rbp
    cf0d:	c3                   	ret

000000000000cf0e <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    cf0e:	55                   	push   %rbp
    cf0f:	48 89 e5             	mov    %rsp,%rbp
    cf12:	48 83 ec 10          	sub    $0x10,%rsp
    cf16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    cf1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf1e:	48 8b 08             	mov    (%rax),%rcx
    cf21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf25:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf29:	ba 00 00 00 00       	mov    $0x0,%edx
    cf2e:	48 89 ce             	mov    %rcx,%rsi
    cf31:	48 89 c7             	mov    %rax,%rdi
    cf34:	e8 8d 88 ff ff       	call   57c6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    cf39:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cf3d:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    cf41:	90                   	nop
    cf42:	c9                   	leave
    cf43:	c3                   	ret

000000000000cf44 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    cf44:	55                   	push   %rbp
    cf45:	48 89 e5             	mov    %rsp,%rbp
    cf48:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    cf4f:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    cf56:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    cf5d:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    cf64:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    cf6b:	48 89 d6             	mov    %rdx,%rsi
    cf6e:	48 89 c7             	mov    %rax,%rdi
    cf71:	e8 63 a1 ff ff       	call   70d9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    cf76:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    cf7c:	83 f8 02             	cmp    $0x2,%eax
    cf7f:	0f 94 c0             	sete   %al
}
    cf82:	c9                   	leave
    cf83:	c3                   	ret

000000000000cf84 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    cf84:	55                   	push   %rbp
    cf85:	48 89 e5             	mov    %rsp,%rbp
    cf88:	53                   	push   %rbx
    cf89:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    cf90:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    cf97:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    cf9e:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    cfa5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    cfa9:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    cfb0:	48 89 d6             	mov    %rdx,%rsi
    cfb3:	48 89 c7             	mov    %rax,%rdi
    cfb6:	e8 47 a2 ff ff       	call   7202 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    cfbb:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    cfbf:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    cfc6:	48 89 d6             	mov    %rdx,%rsi
    cfc9:	48 89 c7             	mov    %rax,%rdi
    cfcc:	e8 65 a3 ff ff       	call   7336 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    cfd1:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    cfd8:	48 8b 50 48          	mov    0x48(%rax),%rdx
    cfdc:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    cfe3:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    cfea:	48 89 ce             	mov    %rcx,%rsi
    cfed:	48 89 c7             	mov    %rax,%rdi
    cff0:	e8 7a a4 ff ff       	call   746f <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    cff5:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    cffc:	00 
    cffd:	e9 c5 00 00 00       	jmp    d0c7 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d002:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d006:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d00a:	48 89 d6             	mov    %rdx,%rsi
    d00d:	48 89 c7             	mov    %rax,%rdi
    d010:	e8 7f b4 ff ff       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d015:	48 89 c7             	mov    %rax,%rdi
    d018:	e8 3d 34 00 00       	call   1045a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d01d:	84 c0                	test   %al,%al
    d01f:	74 48                	je     d069 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d021:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d025:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d029:	48 89 d6             	mov    %rdx,%rsi
    d02c:	48 89 c7             	mov    %rax,%rdi
    d02f:	e8 60 b4 ff ff       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d034:	48 89 c7             	mov    %rax,%rdi
    d037:	e8 1e 34 00 00       	call   1045a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d03c:	84 c0                	test   %al,%al
    d03e:	74 29                	je     d069 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d040:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d044:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d04b:	48 89 d6             	mov    %rdx,%rsi
    d04e:	48 89 c7             	mov    %rax,%rdi
    d051:	e8 3e b4 ff ff       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d056:	48 89 c7             	mov    %rax,%rdi
    d059:	e8 fc 33 00 00       	call   1045a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d05e:	84 c0                	test   %al,%al
    d060:	74 07                	je     d069 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d062:	b8 01 00 00 00       	mov    $0x1,%eax
    d067:	eb 05                	jmp    d06e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d069:	b8 00 00 00 00       	mov    $0x0,%eax
    d06e:	84 c0                	test   %al,%al
    d070:	74 50                	je     d0c2 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d076:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d079:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d07d:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d081:	48 89 d6             	mov    %rdx,%rsi
    d084:	48 89 c7             	mov    %rax,%rdi
    d087:	e8 08 b4 ff ff       	call   8494 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d08c:	48 89 c7             	mov    %rax,%rdi
    d08f:	e8 e0 33 00 00       	call   10474 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d094:	48 89 c2             	mov    %rax,%rdx
    d097:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d09b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d09f:	48 89 ce             	mov    %rcx,%rsi
    d0a2:	48 89 c7             	mov    %rax,%rdi
    d0a5:	e8 fc 33 00 00       	call   104a6 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d0aa:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d0ae:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d0b5:	48 89 d6             	mov    %rdx,%rsi
    d0b8:	48 89 c7             	mov    %rax,%rdi
    d0bb:	e8 3c 34 00 00       	call   104fc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d0c0:	eb 2f                	jmp    d0f1 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d0c2:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d0c7:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d0cb:	48 89 c7             	mov    %rax,%rdi
    d0ce:	e8 59 33 00 00       	call   1042c <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d0d3:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d0d7:	0f 92 c0             	setb   %al
    d0da:	84 c0                	test   %al,%al
    d0dc:	0f 85 20 ff ff ff    	jne    d002 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d0e2:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d0e9:	48 89 c7             	mov    %rax,%rdi
    d0ec:	e8 43 2e 00 00       	call   ff34 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d0f1:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d0f8:	48 89 c7             	mov    %rax,%rdi
    d0fb:	e8 94 b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d100:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d104:	48 89 c7             	mov    %rax,%rdi
    d107:	e8 88 b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d10c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d110:	48 89 c7             	mov    %rax,%rdi
    d113:	e8 7c b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d118:	eb 3f                	jmp    d159 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d11a:	48 89 c3             	mov    %rax,%rbx
    d11d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d124:	48 89 c7             	mov    %rax,%rdi
    d127:	e8 68 b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d12c:	eb 03                	jmp    d131 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d12e:	48 89 c3             	mov    %rax,%rbx
    d131:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d135:	48 89 c7             	mov    %rax,%rdi
    d138:	e8 57 b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d13d:	eb 03                	jmp    d142 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d13f:	48 89 c3             	mov    %rax,%rbx
    d142:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d146:	48 89 c7             	mov    %rax,%rdi
    d149:	e8 46 b2 ff ff       	call   8394 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d14e:	48 89 d8             	mov    %rbx,%rax
    d151:	48 89 c7             	mov    %rax,%rdi
    d154:	e8 57 75 ff ff       	call   46b0 <_Unwind_Resume@plt>
    d159:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d160:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d164:	c9                   	leave
    d165:	c3                   	ret

000000000000d166 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d166:	55                   	push   %rbp
    d167:	48 89 e5             	mov    %rsp,%rbp
    d16a:	41 54                	push   %r12
    d16c:	53                   	push   %rbx
    d16d:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d174:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d17b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d182:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d186:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d18a:	48 89 d6             	mov    %rdx,%rsi
    d18d:	48 89 c7             	mov    %rax,%rdi
    d190:	e8 d5 9d ff ff       	call   6f6a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d195:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d19c:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d19d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d1a1:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d1a5:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d1a9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d1ad:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d1b1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d1b5:	48 89 c7             	mov    %rax,%rdi
    d1b8:	e8 73 33 00 00       	call   10530 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d1bd:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d1c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d1c8:	48 89 c7             	mov    %rax,%rdi
    d1cb:	e8 86 33 00 00       	call   10556 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d1d0:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d1d7:	e9 dd 00 00 00       	jmp    d2b9 <_ZN9VulkanApp12createDeviceEv+0x153>
    d1dc:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d1e3:	48 89 c7             	mov    %rax,%rdi
    d1e6:	e8 ef 33 00 00       	call   105da <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d1eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d1ef:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d1f3:	48 8b 10             	mov    (%rax),%rdx
    d1f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d1fd:	48 89 d6             	mov    %rdx,%rsi
    d200:	48 89 c7             	mov    %rax,%rdi
    d203:	e8 3c fd ff ff       	call   cf44 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d208:	84 c0                	test   %al,%al
    d20a:	74 41                	je     d24d <_ZN9VulkanApp12createDeviceEv+0xe7>
    d20c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d210:	48 8b 10             	mov    (%rax),%rdx
    d213:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d21a:	48 89 d6             	mov    %rdx,%rsi
    d21d:	48 89 c7             	mov    %rax,%rdi
    d220:	e8 f9 02 00 00       	call   d51e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d225:	84 c0                	test   %al,%al
    d227:	74 24                	je     d24d <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d229:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d22d:	48 8b 10             	mov    (%rax),%rdx
    d230:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d237:	48 89 d6             	mov    %rdx,%rsi
    d23a:	48 89 c7             	mov    %rax,%rdi
    d23d:	e8 16 06 00 00       	call   d858 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d242:	84 c0                	test   %al,%al
    d244:	74 07                	je     d24d <_ZN9VulkanApp12createDeviceEv+0xe7>
    d246:	b8 01 00 00 00       	mov    $0x1,%eax
    d24b:	eb 05                	jmp    d252 <_ZN9VulkanApp12createDeviceEv+0xec>
    d24d:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d252:	84 c0                	test   %al,%al
    d254:	74 54                	je     d2aa <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d256:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d25a:	48 8b 10             	mov    (%rax),%rdx
    d25d:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d264:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d26b:	48 89 ce             	mov    %rcx,%rsi
    d26e:	48 89 c7             	mov    %rax,%rdi
    d271:	e8 0e fd ff ff       	call   cf84 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d276:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d27d:	48 89 c7             	mov    %rax,%rdi
    d280:	e8 67 33 00 00       	call   105ec <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d285:	84 c0                	test   %al,%al
    d287:	74 21                	je     d2aa <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d289:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d290:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d294:	48 89 d6             	mov    %rdx,%rsi
    d297:	48 89 c7             	mov    %rax,%rdi
    d29a:	e8 e7 2c 00 00       	call   ff86 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d29f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d2a3:	48 8b 00             	mov    (%rax),%rax
    d2a6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d2aa:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d2b1:	48 89 c7             	mov    %rax,%rdi
    d2b4:	e8 01 33 00 00       	call   105ba <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d2b9:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d2c0:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d2c7:	48 89 d6             	mov    %rdx,%rsi
    d2ca:	48 89 c7             	mov    %rax,%rdi
    d2cd:	e8 ad 32 00 00       	call   1057f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d2d2:	84 c0                	test   %al,%al
    d2d4:	0f 85 02 ff ff ff    	jne    d1dc <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d2da:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d2df:	75 3b                	jne    d31c <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d2e1:	bf 10 00 00 00       	mov    $0x10,%edi
    d2e6:	e8 75 6e ff ff       	call   4160 <__cxa_allocate_exception@plt>
    d2eb:	48 89 c3             	mov    %rax,%rbx
    d2ee:	48 8d 05 93 c0 00 00 	lea    0xc093(%rip),%rax        # 19388 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d2f5:	48 89 c6             	mov    %rax,%rsi
    d2f8:	48 89 df             	mov    %rbx,%rdi
    d2fb:	e8 00 6e ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d300:	48 8b 05 a1 8c 01 00 	mov    0x18ca1(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d307:	48 89 c2             	mov    %rax,%rdx
    d30a:	48 8d 05 2f 8a 01 00 	lea    0x18a2f(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d311:	48 89 c6             	mov    %rax,%rsi
    d314:	48 89 df             	mov    %rbx,%rdi
    d317:	e8 34 73 ff ff       	call   4650 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d31c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d320:	48 89 c7             	mov    %rax,%rdi
    d323:	e8 88 2c 00 00       	call   ffb0 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d328:	8b 00                	mov    (%rax),%eax
    d32a:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d32d:	f3 0f 10 05 7b c4 00 	movss  0xc47b(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    d334:	00 
    d335:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d33a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d33e:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d345:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d34c:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d351:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d358:	00 00 00 
  queueInfo.pNext = nullptr;
    d35b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d362:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d366:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d369:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d36f:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d376:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d379:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d37d:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d381:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d388:	b8 00 00 00 00       	mov    $0x0,%eax
    d38d:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d392:	48 89 d7             	mov    %rdx,%rdi
    d395:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d398:	48 89 fa             	mov    %rdi,%rdx
    d39b:	89 02                	mov    %eax,(%rdx)
    d39d:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d3a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d3a5:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d3ac:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d3b3:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d3ba:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d3c1:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d3c8:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d3c9:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d3d0:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d3d3:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d3da:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d3de:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d3e5:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d3e8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d3ef:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d3f6:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d3fd:	48 05 88 00 00 00    	add    $0x88,%rax
    d403:	48 89 c7             	mov    %rax,%rdi
    d406:	e8 b5 2f 00 00       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d40b:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d411:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d418:	48 05 88 00 00 00    	add    $0x88,%rax
    d41e:	48 89 c7             	mov    %rax,%rdi
    d421:	e8 e2 2f 00 00       	call   10408 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d426:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d42d:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d434:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d43b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d442:	48 83 c0 28          	add    $0x28,%rax
    d446:	48 89 c7             	mov    %rax,%rdi
    d449:	e8 72 2f 00 00       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d44e:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d454:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d45b:	48 83 c0 28          	add    $0x28,%rax
    d45f:	48 89 c7             	mov    %rax,%rdi
    d462:	e8 7d 2f 00 00       	call   103e4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d467:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d46e:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d475:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d479:	ba 00 00 00 00       	mov    $0x0,%edx
    d47e:	48 89 ce             	mov    %rcx,%rsi
    d481:	48 89 c7             	mov    %rax,%rdi
    d484:	e8 a5 82 ff ff       	call   572e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d489:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d490:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d494:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d49b:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d49f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4a6:	48 8b 40 50          	mov    0x50(%rax),%rax
    d4aa:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d4ad:	48 89 d1             	mov    %rdx,%rcx
    d4b0:	ba 00 00 00 00       	mov    $0x0,%edx
    d4b5:	48 89 c7             	mov    %rax,%rdi
    d4b8:	e8 63 70 ff ff       	call   4520 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d4bd:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4c4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d4c8:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d4cc:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4d3:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d4d6:	89 50 68             	mov    %edx,0x68(%rax)
}
    d4d9:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d4dd:	48 89 c7             	mov    %rax,%rdi
    d4e0:	e8 af ab ff ff       	call   8094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d4e5:	eb 2a                	jmp    d511 <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d4e7:	49 89 c4             	mov    %rax,%r12
    d4ea:	48 89 df             	mov    %rbx,%rdi
    d4ed:	e8 3e 6d ff ff       	call   4230 <__cxa_free_exception@plt>
    d4f2:	4c 89 e3             	mov    %r12,%rbx
    d4f5:	eb 03                	jmp    d4fa <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d4f7:	48 89 c3             	mov    %rax,%rbx
    d4fa:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d4fe:	48 89 c7             	mov    %rax,%rdi
    d501:	e8 8e ab ff ff       	call   8094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d506:	48 89 d8             	mov    %rbx,%rax
    d509:	48 89 c7             	mov    %rax,%rdi
    d50c:	e8 9f 71 ff ff       	call   46b0 <_Unwind_Resume@plt>
    d511:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d518:	5b                   	pop    %rbx
    d519:	41 5c                	pop    %r12
    d51b:	5d                   	pop    %rbp
    d51c:	c3                   	ret
    d51d:	90                   	nop

000000000000d51e <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d51e:	55                   	push   %rbp
    d51f:	48 89 e5             	mov    %rsp,%rbp
    d522:	53                   	push   %rbx
    d523:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d52a:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d531:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d538:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d53f:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d546:	ba 00 00 00 00       	mov    $0x0,%edx
    d54b:	48 89 ce             	mov    %rcx,%rsi
    d54e:	48 89 c7             	mov    %rax,%rdi
    d551:	e8 3f 97 ff ff       	call   6c95 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d556:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d55d:	48 89 c7             	mov    %rax,%rdi
    d560:	e8 c7 2a 00 00       	call   1002c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d565:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d56c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d570:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d574:	48 89 c7             	mov    %rax,%rdi
    d577:	e8 86 31 00 00       	call   10702 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d57c:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d583:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d587:	48 89 c7             	mov    %rax,%rdi
    d58a:	e8 99 31 00 00       	call   10728 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d58f:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d596:	e9 8c 00 00 00       	jmp    d627 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d59b:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d5a2:	48 89 c7             	mov    %rax,%rdi
    d5a5:	e8 06 32 00 00       	call   107b0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d5aa:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d5ae:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d5b5:	48 89 c7             	mov    %rax,%rdi
    d5b8:	e8 03 71 ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    d5bd:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d5c1:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d5c8:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d5cf:	48 89 ce             	mov    %rcx,%rsi
    d5d2:	48 89 c7             	mov    %rax,%rdi
    d5d5:	e8 26 75 ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d5da:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d5e1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d5e8:	48 89 d6             	mov    %rdx,%rsi
    d5eb:	48 89 c7             	mov    %rax,%rdi
    d5ee:	e8 cf 31 00 00       	call   107c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d5f3:	8b 10                	mov    (%rax),%edx
    d5f5:	83 c2 01             	add    $0x1,%edx
    d5f8:	89 10                	mov    %edx,(%rax)
    d5fa:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d601:	48 89 c7             	mov    %rax,%rdi
    d604:	e8 c7 6b ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d609:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d610:	48 89 c7             	mov    %rax,%rdi
    d613:	e8 e8 6d ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d618:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d61f:	48 89 c7             	mov    %rax,%rdi
    d622:	e8 65 31 00 00       	call   1078c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d627:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d62e:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d635:	48 89 d6             	mov    %rdx,%rsi
    d638:	48 89 c7             	mov    %rax,%rdi
    d63b:	e8 11 31 00 00       	call   10751 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d640:	84 c0                	test   %al,%al
    d642:	0f 85 53 ff ff ff    	jne    d59b <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d648:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d64f:	48 05 88 00 00 00    	add    $0x88,%rax
    d655:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d659:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d65d:	48 89 c7             	mov    %rax,%rdi
    d660:	e8 fb 2b 00 00       	call   10260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d665:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d66c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d670:	48 89 c7             	mov    %rax,%rdi
    d673:	e8 0e 2c 00 00       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d678:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d67f:	e9 ed 00 00 00       	jmp    d771 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d684:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d68b:	48 89 c7             	mov    %rax,%rdi
    d68e:	e8 77 2c 00 00       	call   1030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d693:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d697:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d69b:	48 89 c7             	mov    %rax,%rdi
    d69e:	e8 1d 70 ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    d6a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d6a7:	48 8b 08             	mov    (%rax),%rcx
    d6aa:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d6ae:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d6b5:	48 89 ce             	mov    %rcx,%rsi
    d6b8:	48 89 c7             	mov    %rax,%rdi
    d6bb:	e8 40 74 ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d6c0:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d6c7:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d6ce:	48 89 d6             	mov    %rdx,%rsi
    d6d1:	48 89 c7             	mov    %rax,%rdi
    d6d4:	e8 e9 30 00 00       	call   107c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d6d9:	8b 10                	mov    (%rax),%edx
    d6db:	83 c2 01             	add    $0x1,%edx
    d6de:	89 10                	mov    %edx,(%rax)
    d6e0:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d6e7:	48 89 c7             	mov    %rax,%rdi
    d6ea:	e8 e1 6a ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d6ef:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d6f3:	48 89 c7             	mov    %rax,%rdi
    d6f6:	e8 05 6d ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d6fb:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d6ff:	48 89 c7             	mov    %rax,%rdi
    d702:	e8 b9 6f ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    d707:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d70b:	48 8b 08             	mov    (%rax),%rcx
    d70e:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d712:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d716:	48 89 ce             	mov    %rcx,%rsi
    d719:	48 89 c7             	mov    %rax,%rdi
    d71c:	e8 df 73 ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d721:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d725:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d72c:	48 89 d6             	mov    %rdx,%rsi
    d72f:	48 89 c7             	mov    %rax,%rdi
    d732:	e8 8b 30 00 00       	call   107c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d737:	8b 00                	mov    (%rax),%eax
    d739:	83 f8 01             	cmp    $0x1,%eax
    d73c:	0f 96 c3             	setbe  %bl
    d73f:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d743:	48 89 c7             	mov    %rax,%rdi
    d746:	e8 85 6a ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d74b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d74f:	48 89 c7             	mov    %rax,%rdi
    d752:	e8 a9 6c ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    d757:	84 db                	test   %bl,%bl
    d759:	74 07                	je     d762 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d75b:	bb 00 00 00 00       	mov    $0x0,%ebx
    d760:	eb 35                	jmp    d797 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d762:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d769:	48 89 c7             	mov    %rax,%rdi
    d76c:	e8 79 2b 00 00       	call   102ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d771:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d778:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d77f:	48 89 d6             	mov    %rdx,%rsi
    d782:	48 89 c7             	mov    %rax,%rdi
    d785:	e8 25 2b 00 00       	call   102af <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d78a:	84 c0                	test   %al,%al
    d78c:	0f 85 f2 fe ff ff    	jne    d684 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d792:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d797:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d79e:	48 89 c7             	mov    %rax,%rdi
    d7a1:	e8 a2 28 00 00       	call   10048 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d7a6:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d7ad:	48 89 c7             	mov    %rax,%rdi
    d7b0:	e8 55 a6 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d7b5:	89 d8                	mov    %ebx,%eax
    d7b7:	e9 96 00 00 00       	jmp    d852 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d7bc:	48 89 c3             	mov    %rax,%rbx
    d7bf:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d7c6:	48 89 c7             	mov    %rax,%rdi
    d7c9:	e8 02 6a ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d7ce:	eb 03                	jmp    d7d3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d7d0:	48 89 c3             	mov    %rax,%rbx
    d7d3:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d7da:	48 89 c7             	mov    %rax,%rdi
    d7dd:	e8 1e 6c ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    d7e2:	eb 45                	jmp    d829 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d7e4:	48 89 c3             	mov    %rax,%rbx
    d7e7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d7ee:	48 89 c7             	mov    %rax,%rdi
    d7f1:	e8 da 69 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d7f6:	eb 03                	jmp    d7fb <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d7f8:	48 89 c3             	mov    %rax,%rbx
    d7fb:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d7ff:	48 89 c7             	mov    %rax,%rdi
    d802:	e8 f9 6b ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    d807:	eb 20                	jmp    d829 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d809:	48 89 c3             	mov    %rax,%rbx
    d80c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d810:	48 89 c7             	mov    %rax,%rdi
    d813:	e8 b8 69 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d818:	eb 03                	jmp    d81d <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d81a:	48 89 c3             	mov    %rax,%rbx
    d81d:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d821:	48 89 c7             	mov    %rax,%rdi
    d824:	e8 d7 6b ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
}
    d829:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d830:	48 89 c7             	mov    %rax,%rdi
    d833:	e8 10 28 00 00       	call   10048 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d838:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d83f:	48 89 c7             	mov    %rax,%rdi
    d842:	e8 c3 a5 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d847:	48 89 d8             	mov    %rbx,%rax
    d84a:	48 89 c7             	mov    %rax,%rdi
    d84d:	e8 5e 6e ff ff       	call   46b0 <_Unwind_Resume@plt>
    d852:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d856:	c9                   	leave
    d857:	c3                   	ret

000000000000d858 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d858:	55                   	push   %rbp
    d859:	48 89 e5             	mov    %rsp,%rbp
    d85c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d860:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d864:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d869:	5d                   	pop    %rbp
    d86a:	c3                   	ret
    d86b:	90                   	nop

000000000000d86c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d86c:	55                   	push   %rbp
    d86d:	48 89 e5             	mov    %rsp,%rbp
    d870:	41 54                	push   %r12
    d872:	53                   	push   %rbx
    d873:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d87a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d881:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d888:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d88f:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d893:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d89a:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d89e:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d8a2:	48 89 ce             	mov    %rcx,%rsi
    d8a5:	48 89 c7             	mov    %rax,%rdi
    d8a8:	e8 32 9d ff ff       	call   75df <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    d8ad:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8b4:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d8b8:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8bf:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d8c3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d8ca:	48 89 ce             	mov    %rcx,%rsi
    d8cd:	48 89 c7             	mov    %rax,%rdi
    d8d0:	e8 b8 9d ff ff       	call   768d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    d8d5:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8dc:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d8e0:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d8e7:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d8eb:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d8f2:	48 89 ce             	mov    %rcx,%rsi
    d8f5:	48 89 c7             	mov    %rax,%rdi
    d8f8:	e8 07 9f ff ff       	call   7804 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    d8fd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d904:	48 89 c6             	mov    %rax,%rsi
    d907:	b8 00 00 00 00       	mov    $0x0,%eax
    d90c:	ba 0d 00 00 00       	mov    $0xd,%edx
    d911:	48 89 f7             	mov    %rsi,%rdi
    d914:	48 89 d1             	mov    %rdx,%rcx
    d917:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    d91a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d921:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    d927:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d92e:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d935:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    d936:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d93d:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d941:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d948:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    d94c:	8b 45 80             	mov    -0x80(%rbp),%eax
    d94f:	83 c0 01             	add    $0x1,%eax
    d952:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    d955:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d958:	85 c0                	test   %eax,%eax
    d95a:	74 0e                	je     d96a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    d95c:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    d95f:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    d962:	73 06                	jae    d96a <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    d964:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d967:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    d96a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d971:	8b 55 ec             	mov    -0x14(%rbp),%edx
    d974:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    d977:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d97e:	48 89 c7             	mov    %rax,%rdi
    d981:	e8 40 2f 00 00       	call   108c6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    d986:	84 c0                	test   %al,%al
    d988:	74 3b                	je     d9c5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    d98a:	bf 10 00 00 00       	mov    $0x10,%edi
    d98f:	e8 cc 67 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    d994:	48 89 c3             	mov    %rax,%rbx
    d997:	48 8d 05 0e ba 00 00 	lea    0xba0e(%rip),%rax        # 193ac <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    d99e:	48 89 c6             	mov    %rax,%rsi
    d9a1:	48 89 df             	mov    %rbx,%rdi
    d9a4:	e8 57 67 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d9a9:	48 8b 05 f8 85 01 00 	mov    0x185f8(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d9b0:	48 89 c2             	mov    %rax,%rdx
    d9b3:	48 8d 05 86 83 01 00 	lea    0x18386(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d9ba:	48 89 c6             	mov    %rax,%rsi
    d9bd:	48 89 df             	mov    %rbx,%rdi
    d9c0:	e8 8b 6c ff ff       	call   4650 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    d9c5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d9cc:	be 00 00 00 00       	mov    $0x0,%esi
    d9d1:	48 89 c7             	mov    %rax,%rdi
    d9d4:	e8 2f 2f 00 00       	call   10908 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    d9d9:	8b 10                	mov    (%rax),%edx
    d9db:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9e2:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    d9e5:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d9ec:	be 00 00 00 00       	mov    $0x0,%esi
    d9f1:	48 89 c7             	mov    %rax,%rdi
    d9f4:	e8 0f 2f 00 00       	call   10908 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    d9f9:	8b 50 04             	mov    0x4(%rax),%edx
    d9fc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da03:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    da06:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da0d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    da11:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da15:	48 89 c7             	mov    %rax,%rdi
    da18:	e8 0b 2f 00 00       	call   10928 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    da1d:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    da24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da28:	48 89 c7             	mov    %rax,%rdi
    da2b:	e8 1e 2f 00 00       	call   1094e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    da30:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    da37:	eb 5b                	jmp    da94 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    da39:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    da40:	48 89 c7             	mov    %rax,%rdi
    da43:	e8 8a 2f 00 00       	call   109d2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    da48:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    da4c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    da50:	8b 00                	mov    (%rax),%eax
    da52:	83 f8 2b             	cmp    $0x2b,%eax
    da55:	75 2e                	jne    da85 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    da57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    da5b:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    da5e:	85 c0                	test   %eax,%eax
    da60:	75 23                	jne    da85 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    da62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    da66:	8b 10                	mov    (%rax),%edx
    da68:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da6f:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    da72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    da76:	8b 50 04             	mov    0x4(%rax),%edx
    da79:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da80:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    da83:	eb 2c                	jmp    dab1 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    da85:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    da8c:	48 89 c7             	mov    %rax,%rdi
    da8f:	e8 1e 2f 00 00       	call   109b2 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    da94:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    da9b:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    daa2:	48 89 d6             	mov    %rdx,%rsi
    daa5:	48 89 c7             	mov    %rax,%rdi
    daa8:	e8 ca 2e 00 00       	call   10977 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    daad:	84 c0                	test   %al,%al
    daaf:	75 88                	jne    da39 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    dab1:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dab8:	8b 50 24             	mov    0x24(%rax),%edx
    dabb:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    dac2:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    dac5:	8b 45 88             	mov    -0x78(%rbp),%eax
    dac8:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    dacb:	8b 45 8c             	mov    -0x74(%rbp),%eax
    dace:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    dad1:	8b 45 98             	mov    -0x68(%rbp),%eax
    dad4:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    dad7:	73 06                	jae    dadf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    dad9:	8b 45 98             	mov    -0x68(%rbp),%eax
    dadc:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    dadf:	8b 45 9c             	mov    -0x64(%rbp),%eax
    dae2:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    dae5:	73 06                	jae    daed <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    dae7:	8b 45 9c             	mov    -0x64(%rbp),%eax
    daea:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    daed:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    daf4:	8b 55 e8             	mov    -0x18(%rbp),%edx
    daf7:	89 50 2c             	mov    %edx,0x2c(%rax)
    dafa:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db01:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    db04:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    db07:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db0e:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    db15:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    db19:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    db1d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db24:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    db2b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db32:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    db39:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    db40:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    db47:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    db4b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db4f:	48 89 c7             	mov    %rax,%rdi
    db52:	e8 8d 2e 00 00       	call   109e4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    db57:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    db5e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    db62:	48 89 c7             	mov    %rax,%rdi
    db65:	e8 a0 2e 00 00       	call   10a0a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    db6a:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    db71:	eb 3c                	jmp    dbaf <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    db73:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    db7a:	48 89 c7             	mov    %rax,%rdi
    db7d:	e8 0c 2f 00 00       	call   10a8e <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    db82:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    db86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    db8a:	8b 00                	mov    (%rax),%eax
    db8c:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    db8f:	75 0f                	jne    dba0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    db91:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db98:	8b 55 cc             	mov    -0x34(%rbp),%edx
    db9b:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    db9e:	eb 2c                	jmp    dbcc <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    dba0:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dba7:	48 89 c7             	mov    %rax,%rdi
    dbaa:	e8 bf 2e 00 00       	call   10a6e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    dbaf:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    dbb6:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dbbd:	48 89 d6             	mov    %rdx,%rsi
    dbc0:	48 89 c7             	mov    %rax,%rdi
    dbc3:	e8 6b 2e 00 00       	call   10a33 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dbc8:	84 c0                	test   %al,%al
    dbca:	75 a7                	jne    db73 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    dbcc:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbd3:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dbda:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbe1:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    dbe8:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbef:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dbf6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbfd:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    dc04:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    dc05:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    dc08:	83 e0 01             	and    $0x1,%eax
    dc0b:	85 c0                	test   %eax,%eax
    dc0d:	74 1e                	je     dc2d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dc0f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc16:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dc1d:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dc20:	83 e0 01             	and    $0x1,%eax
    dc23:	85 c0                	test   %eax,%eax
    dc25:	0f 84 9b 00 00 00    	je     dcc6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dc2b:	eb 3b                	jmp    dc68 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dc2d:	bf 10 00 00 00       	mov    $0x10,%edi
    dc32:	e8 29 65 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    dc37:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dc3a:	48 8d 05 8f b7 00 00 	lea    0xb78f(%rip),%rax        # 193d0 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dc41:	48 89 c6             	mov    %rax,%rsi
    dc44:	48 89 df             	mov    %rbx,%rdi
    dc47:	e8 b4 64 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dc4c:	48 8b 05 55 83 01 00 	mov    0x18355(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dc53:	48 89 c2             	mov    %rax,%rdx
    dc56:	48 8d 05 e3 80 01 00 	lea    0x180e3(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dc5d:	48 89 c6             	mov    %rax,%rsi
    dc60:	48 89 df             	mov    %rbx,%rdi
    dc63:	e8 e8 69 ff ff       	call   4650 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    dc68:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc6f:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    dc76:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc7d:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    dc84:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc8b:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dc92:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    dc93:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc9a:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    dca1:	00 

  return swapchainCreateInfo;
    dca2:	90                   	nop
}
    dca3:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dcaa:	48 89 c7             	mov    %rax,%rdi
    dcad:	e8 f6 aa ff ff       	call   87a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dcb2:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dcb9:	48 89 c7             	mov    %rax,%rdi
    dcbc:	e8 83 a9 ff ff       	call   8644 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    dcc1:	e9 9c 00 00 00       	jmp    dd62 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dcc6:	bf 10 00 00 00       	mov    $0x10,%edi
    dccb:	e8 90 64 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    dcd0:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dcd3:	48 8d 05 2e b7 00 00 	lea    0xb72e(%rip),%rax        # 19408 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    dcda:	48 89 c6             	mov    %rax,%rsi
    dcdd:	48 89 df             	mov    %rbx,%rdi
    dce0:	e8 1b 64 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dce5:	48 8b 05 bc 82 01 00 	mov    0x182bc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dcec:	48 89 c2             	mov    %rax,%rdx
    dcef:	48 8d 05 4a 80 01 00 	lea    0x1804a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dcf6:	48 89 c6             	mov    %rax,%rsi
    dcf9:	48 89 df             	mov    %rbx,%rdi
    dcfc:	e8 4f 69 ff ff       	call   4650 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    dd01:	49 89 c4             	mov    %rax,%r12
    dd04:	48 89 df             	mov    %rbx,%rdi
    dd07:	e8 24 65 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd0c:	4c 89 e3             	mov    %r12,%rbx
    dd0f:	eb 23                	jmp    dd34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dd11:	49 89 c4             	mov    %rax,%r12
    dd14:	48 89 df             	mov    %rbx,%rdi
    dd17:	e8 14 65 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd1c:	4c 89 e3             	mov    %r12,%rbx
    dd1f:	eb 13                	jmp    dd34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd21:	49 89 c4             	mov    %rax,%r12
    dd24:	48 89 df             	mov    %rbx,%rdi
    dd27:	e8 04 65 ff ff       	call   4230 <__cxa_free_exception@plt>
    dd2c:	4c 89 e3             	mov    %r12,%rbx
    dd2f:	eb 03                	jmp    dd34 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    dd31:	48 89 c3             	mov    %rax,%rbx
    dd34:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dd3b:	48 89 c7             	mov    %rax,%rdi
    dd3e:	e8 65 aa ff ff       	call   87a8 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dd43:	eb 03                	jmp    dd48 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    dd45:	48 89 c3             	mov    %rax,%rbx
    dd48:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd4f:	48 89 c7             	mov    %rax,%rdi
    dd52:	e8 ed a8 ff ff       	call   8644 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    dd57:	48 89 d8             	mov    %rbx,%rax
    dd5a:	48 89 c7             	mov    %rax,%rdi
    dd5d:	e8 4e 69 ff ff       	call   46b0 <_Unwind_Resume@plt>
    dd62:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd69:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    dd70:	5b                   	pop    %rbx
    dd71:	41 5c                	pop    %r12
    dd73:	5d                   	pop    %rbp
    dd74:	c3                   	ret
    dd75:	90                   	nop

000000000000dd76 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    dd76:	55                   	push   %rbp
    dd77:	48 89 e5             	mov    %rsp,%rbp
    dd7a:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    dd7e:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    dd82:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    dd86:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    dd8a:	48 89 d6             	mov    %rdx,%rsi
    dd8d:	48 89 c7             	mov    %rax,%rdi
    dd90:	e8 d7 fa ff ff       	call   d86c <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    dd95:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    dd99:	48 8b 40 50          	mov    0x50(%rax),%rax
    dd9d:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    dda1:	ba 00 00 00 00       	mov    $0x0,%edx
    dda6:	48 89 ce             	mov    %rcx,%rsi
    dda9:	48 89 c7             	mov    %rax,%rdi
    ddac:	e8 ad 7a ff ff       	call   585e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    ddb1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    ddb5:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    ddb9:	90                   	nop
    ddba:	c9                   	leave
    ddbb:	c3                   	ret

000000000000ddbc <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    ddbc:	55                   	push   %rbp
    ddbd:	48 89 e5             	mov    %rsp,%rbp
    ddc0:	53                   	push   %rbx
    ddc1:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    ddc8:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    ddcf:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ddd6:	48 8b 50 70          	mov    0x70(%rax),%rdx
    ddda:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dde1:	48 8b 48 50          	mov    0x50(%rax),%rcx
    dde5:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    dde9:	48 89 ce             	mov    %rcx,%rsi
    ddec:	48 89 c7             	mov    %rax,%rdi
    ddef:	e8 87 9b ff ff       	call   797b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    ddf4:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    ddfb:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    de02:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de06:	48 89 c6             	mov    %rax,%rsi
    de09:	48 89 d7             	mov    %rdx,%rdi
    de0c:	e8 8f 2c 00 00       	call   10aa0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    de11:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de15:	48 89 c7             	mov    %rax,%rdi
    de18:	e8 ef aa ff ff       	call   890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    de1d:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de24:	48 05 b8 00 00 00    	add    $0xb8,%rax
    de2a:	48 89 c7             	mov    %rax,%rdi
    de2d:	e8 a6 2c 00 00       	call   10ad8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    de32:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    de36:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de3d:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    de44:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    de48:	48 89 c6             	mov    %rax,%rsi
    de4b:	48 89 d7             	mov    %rdx,%rdi
    de4e:	e8 a9 2c 00 00       	call   10afc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    de53:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    de5a:	00 
    de5b:	e9 f1 00 00 00       	jmp    df51 <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    de60:	66 0f ef c0          	pxor   %xmm0,%xmm0
    de64:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    de6b:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    de6f:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    de73:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    de77:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    de7b:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    de82:	00 00 00 
    imageViewInfo.pNext = nullptr;
    de85:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    de8c:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    de90:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de97:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    de9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dea2:	48 89 c6             	mov    %rax,%rsi
    dea5:	48 89 d7             	mov    %rdx,%rdi
    dea8:	e8 d5 2c 00 00       	call   10b82 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    dead:	48 8b 00             	mov    (%rax),%rax
    deb0:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    deb4:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    debb:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dec2:	8b 40 78             	mov    0x78(%rax),%eax
    dec5:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    dec8:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    decf:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    ded6:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    dedd:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    dee4:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    deeb:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    def2:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    def9:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    df00:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    df07:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df0e:	48 8b 40 50          	mov    0x50(%rax),%rax
    df12:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    df19:	ba 00 00 00 00       	mov    $0x0,%edx
    df1e:	48 89 ce             	mov    %rcx,%rsi
    df21:	48 89 c7             	mov    %rax,%rdi
    df24:	e8 d5 79 ff ff       	call   58fe <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    df29:	48 89 c3             	mov    %rax,%rbx
    df2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df33:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    df3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df3e:	48 89 c6             	mov    %rax,%rsi
    df41:	48 89 d7             	mov    %rdx,%rdi
    df44:	e8 59 2c 00 00       	call   10ba2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    df49:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    df4c:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    df51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df55:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    df59:	0f 82 01 ff ff ff    	jb     de60 <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    df5f:	90                   	nop
    df60:	90                   	nop
    df61:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    df65:	c9                   	leave
    df66:	c3                   	ret
    df67:	90                   	nop

000000000000df68 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    df68:	55                   	push   %rbp
    df69:	48 89 e5             	mov    %rsp,%rbp
    df6c:	41 55                	push   %r13
    df6e:	41 54                	push   %r12
    df70:	53                   	push   %rbx
    df71:	48 81 ec 08 04 00 00 	sub    $0x408,%rsp
    df78:	48 89 bd e8 fb ff ff 	mov    %rdi,-0x418(%rbp)
  std::vector<Shader> shaderModules{1};
    df7f:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    df86:	48 89 c7             	mov    %rax,%rdi
    df89:	e8 34 2c 00 00       	call   10bc2 <_ZNSaI6ShaderEC1Ev>
    df8e:	48 8d 95 5f ff ff ff 	lea    -0xa1(%rbp),%rdx
    df95:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    df9c:	be 01 00 00 00       	mov    $0x1,%esi
    dfa1:	48 89 c7             	mov    %rax,%rdi
    dfa4:	e8 51 2c 00 00       	call   10bfa <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_>
    dfa9:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    dfb0:	48 89 c7             	mov    %rax,%rdi
    dfb3:	e8 26 2c 00 00       	call   10bde <_ZNSaI6ShaderED1Ev>
  shaderModules[0].vertex =
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    dfb8:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    dfbc:	48 89 c7             	mov    %rax,%rdi
    dfbf:	e8 fc 66 ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    dfc4:	48 8d 55 8f          	lea    -0x71(%rbp),%rdx
    dfc8:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dfcf:	48 8d 0d 6a b4 00 00 	lea    0xb46a(%rip),%rcx        # 19440 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    dfd6:	48 89 ce             	mov    %rcx,%rsi
    dfd9:	48 89 c7             	mov    %rax,%rdi
    dfdc:	e8 1f 6b ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    dfe1:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    dfe8:	48 8b 40 50          	mov    0x50(%rax),%rax
    dfec:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx
    dff3:	ba 00 00 00 00       	mov    $0x0,%edx
    dff8:	48 89 ce             	mov    %rcx,%rsi
    dffb:	48 89 c7             	mov    %rax,%rdi
    dffe:	e8 6b 7a ff ff       	call   5a6e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e003:	48 89 c3             	mov    %rax,%rbx
  shaderModules[0].vertex =
    e006:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e00d:	be 00 00 00 00       	mov    $0x0,%esi
    e012:	48 89 c7             	mov    %rax,%rdi
    e015:	e8 9a 2c 00 00       	call   10cb4 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e01a:	48 89 18             	mov    %rbx,(%rax)
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e01d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e024:	48 89 c7             	mov    %rax,%rdi
    e027:	e8 a4 61 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e02c:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    e030:	48 89 c7             	mov    %rax,%rdi
    e033:	e8 c8 63 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
  shaderModules[0].fragment =
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e038:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e03c:	48 89 c7             	mov    %rax,%rdi
    e03f:	e8 7c 66 ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    e044:	48 8d 55 b3          	lea    -0x4d(%rbp),%rdx
    e048:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e04c:	48 8d 0d 0d b4 00 00 	lea    0xb40d(%rip),%rcx        # 19460 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e053:	48 89 ce             	mov    %rcx,%rsi
    e056:	48 89 c7             	mov    %rax,%rdi
    e059:	e8 a2 6a ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e05e:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e065:	48 8b 40 50          	mov    0x50(%rax),%rax
    e069:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    e06d:	ba 00 00 00 00       	mov    $0x0,%edx
    e072:	48 89 ce             	mov    %rcx,%rsi
    e075:	48 89 c7             	mov    %rax,%rdi
    e078:	e8 f1 79 ff ff       	call   5a6e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
    e07d:	48 89 c3             	mov    %rax,%rbx
  shaderModules[0].fragment =
    e080:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e087:	be 00 00 00 00       	mov    $0x0,%esi
    e08c:	48 89 c7             	mov    %rax,%rdi
    e08f:	e8 20 2c 00 00       	call   10cb4 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e094:	48 89 58 08          	mov    %rbx,0x8(%rax)
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e098:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e09c:	48 89 c7             	mov    %rax,%rdi
    e09f:	e8 2c 61 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e0a4:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e0a8:	48 89 c7             	mov    %rax,%rdi
    e0ab:	e8 50 63 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo> graphicsPipelineCreateInfos{};
  for (size_t i = 0; i < shaderModules.size(); ++i) {
    e0b0:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    e0b7:	00 
    e0b8:	e9 00 07 00 00       	jmp    e7bd <_ZN9VulkanApp22createGraphicsPipelineEv+0x855>
    /*  */
    VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e0bd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e0c1:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e0c8:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
    e0cf:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    vertShaderStageInfo.sType =
    e0d6:	c7 85 50 fc ff ff 12 	movl   $0x12,-0x3b0(%rbp)
    e0dd:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e0e0:	c7 85 64 fc ff ff 01 	movl   $0x1,-0x39c(%rbp)
    e0e7:	00 00 00 
    vertShaderStageInfo.module = shaderModules[i].vertex;
    e0ea:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e0ee:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e0f5:	48 89 d6             	mov    %rdx,%rsi
    e0f8:	48 89 c7             	mov    %rax,%rdi
    e0fb:	e8 b4 2b 00 00       	call   10cb4 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e100:	48 8b 00             	mov    (%rax),%rax
    e103:	48 89 85 68 fc ff ff 	mov    %rax,-0x398(%rbp)
    vertShaderStageInfo.pName = "main";
    e10a:	48 8d 05 6f b3 00 00 	lea    0xb36f(%rip),%rax        # 19480 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e111:	48 89 85 70 fc ff ff 	mov    %rax,-0x390(%rbp)
    vertShaderStageInfo.pSpecializationInfo = nullptr;
    e118:	48 c7 85 78 fc ff ff 	movq   $0x0,-0x388(%rbp)
    e11f:	00 00 00 00 

    VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e123:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e127:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e12e:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e135:	0f 29 85 a0 fc ff ff 	movaps %xmm0,-0x360(%rbp)
    fragShaderStageInfo.sType =
    e13c:	c7 85 80 fc ff ff 12 	movl   $0x12,-0x380(%rbp)
    e143:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
    fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e146:	c7 85 94 fc ff ff 10 	movl   $0x10,-0x36c(%rbp)
    e14d:	00 00 00 
    fragShaderStageInfo.module = shaderModules[i].vertex;
    e150:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e154:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e15b:	48 89 d6             	mov    %rdx,%rsi
    e15e:	48 89 c7             	mov    %rax,%rdi
    e161:	e8 4e 2b 00 00       	call   10cb4 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>
    e166:	48 8b 00             	mov    (%rax),%rax
    e169:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
    fragShaderStageInfo.pName = "main";
    e170:	48 8d 05 09 b3 00 00 	lea    0xb309(%rip),%rax        # 19480 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e177:	48 89 85 a0 fc ff ff 	mov    %rax,-0x360(%rbp)
    fragShaderStageInfo.pSpecializationInfo = nullptr;
    e17e:	48 c7 85 a8 fc ff ff 	movq   $0x0,-0x358(%rbp)
    e185:	00 00 00 00 

    VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                      fragShaderStageInfo};
    e189:	48 8b 85 50 fc ff ff 	mov    -0x3b0(%rbp),%rax
    e190:	48 8b 95 58 fc ff ff 	mov    -0x3a8(%rbp),%rdx
    e197:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e19e:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e1a5:	48 8b 85 60 fc ff ff 	mov    -0x3a0(%rbp),%rax
    e1ac:	48 8b 95 68 fc ff ff 	mov    -0x398(%rbp),%rdx
    e1b3:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e1ba:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e1c1:	48 8b 85 70 fc ff ff 	mov    -0x390(%rbp),%rax
    e1c8:	48 8b 95 78 fc ff ff 	mov    -0x388(%rbp),%rdx
    e1cf:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e1d6:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e1dd:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
    e1e4:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
    e1eb:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e1f2:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e1f9:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
    e200:	48 8b 95 98 fc ff ff 	mov    -0x368(%rbp),%rdx
    e207:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e20e:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e215:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
    e21c:	48 8b 95 a8 fc ff ff 	mov    -0x358(%rbp),%rdx
    e223:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e22a:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

    /*  */
    VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e231:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e235:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e23c:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
    e243:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    vertInputInfo.sType =
    e24a:	c7 85 b0 fc ff ff 13 	movl   $0x13,-0x350(%rbp)
    e251:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
    vertInputInfo.vertexBindingDescriptionCount = 0;
    e254:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e25b:	00 00 00 
    vertInputInfo.pVertexBindingDescriptions = nullptr;
    e25e:	48 c7 85 c8 fc ff ff 	movq   $0x0,-0x338(%rbp)
    e265:	00 00 00 00 
    vertInputInfo.vertexAttributeDescriptionCount = 0;
    e269:	c7 85 d0 fc ff ff 00 	movl   $0x0,-0x330(%rbp)
    e270:	00 00 00 
    vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e273:	48 c7 85 d8 fc ff ff 	movq   $0x0,-0x328(%rbp)
    e27a:	00 00 00 00 

    /*  */
    VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e27e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e282:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e289:	0f 29 85 00 fc ff ff 	movaps %xmm0,-0x400(%rbp)
    inputAssemblyInfo.sType =
    e290:	c7 85 f0 fb ff ff 14 	movl   $0x14,-0x410(%rbp)
    e297:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
    inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e29a:	c7 85 04 fc ff ff 03 	movl   $0x3,-0x3fc(%rbp)
    e2a1:	00 00 00 
    inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e2a4:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e2ab:	00 00 00 

    /*  */
    VkViewport viewport{};
    e2ae:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2b2:	0f 29 85 20 ff ff ff 	movaps %xmm0,-0xe0(%rbp)
    e2b9:	66 0f d6 85 30 ff ff 	movq   %xmm0,-0xd0(%rbp)
    e2c0:	ff 
    viewport.x = 0.0f;
    e2c1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2c5:	f3 0f 11 85 20 ff ff 	movss  %xmm0,-0xe0(%rbp)
    e2cc:	ff 
    viewport.y = 0.0f;
    e2cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2d1:	f3 0f 11 85 24 ff ff 	movss  %xmm0,-0xdc(%rbp)
    e2d8:	ff 
    viewport.width = static_cast<float>(swapchain.extent.width);
    e2d9:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e2e0:	8b 40 7c             	mov    0x7c(%rax),%eax
    e2e3:	89 c0                	mov    %eax,%eax
    e2e5:	48 85 c0             	test   %rax,%rax
    e2e8:	78 0b                	js     e2f5 <_ZN9VulkanApp22createGraphicsPipelineEv+0x38d>
    e2ea:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2ee:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e2f3:	eb 19                	jmp    e30e <_ZN9VulkanApp22createGraphicsPipelineEv+0x3a6>
    e2f5:	48 89 c2             	mov    %rax,%rdx
    e2f8:	48 d1 ea             	shr    %rdx
    e2fb:	83 e0 01             	and    $0x1,%eax
    e2fe:	48 09 c2             	or     %rax,%rdx
    e301:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e305:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e30a:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e30e:	f3 0f 11 85 28 ff ff 	movss  %xmm0,-0xd8(%rbp)
    e315:	ff 
    viewport.height = static_cast<float>(swapchain.extent.height);
    e316:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e31d:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e323:	89 c0                	mov    %eax,%eax
    e325:	48 85 c0             	test   %rax,%rax
    e328:	78 0b                	js     e335 <_ZN9VulkanApp22createGraphicsPipelineEv+0x3cd>
    e32a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e32e:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e333:	eb 19                	jmp    e34e <_ZN9VulkanApp22createGraphicsPipelineEv+0x3e6>
    e335:	48 89 c2             	mov    %rax,%rdx
    e338:	48 d1 ea             	shr    %rdx
    e33b:	83 e0 01             	and    $0x1,%eax
    e33e:	48 09 c2             	or     %rax,%rdx
    e341:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e345:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e34a:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e34e:	f3 0f 11 85 2c ff ff 	movss  %xmm0,-0xd4(%rbp)
    e355:	ff 
    viewport.minDepth = 0.0f;
    e356:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e35a:	f3 0f 11 85 30 ff ff 	movss  %xmm0,-0xd0(%rbp)
    e361:	ff 
    viewport.maxDepth = 1.0f;
    e362:	f3 0f 10 05 46 b4 00 	movss  0xb446(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e369:	00 
    e36a:	f3 0f 11 85 34 ff ff 	movss  %xmm0,-0xcc(%rbp)
    e371:	ff 

    VkRect2D scissor{};
    e372:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
    e379:	00 00 00 00 
    e37d:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
    e384:	00 00 00 00 
    scissor.offset = {0, 0};
    e388:	c7 85 10 ff ff ff 00 	movl   $0x0,-0xf0(%rbp)
    e38f:	00 00 00 
    e392:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%rbp)
    e399:	00 00 00 
    scissor.extent = swapchain.extent;
    e39c:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e3a3:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e3a7:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)

    VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e3ae:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3b2:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e3b9:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
    e3c0:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    viewportStateInfo.sType =
    e3c7:	c7 85 e0 fc ff ff 16 	movl   $0x16,-0x320(%rbp)
    e3ce:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
    viewportStateInfo.viewportCount = 1;
    e3d1:	c7 85 f4 fc ff ff 01 	movl   $0x1,-0x30c(%rbp)
    e3d8:	00 00 00 
    viewportStateInfo.pViewports = &viewport;
    e3db:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e3e2:	48 89 85 f8 fc ff ff 	mov    %rax,-0x308(%rbp)
    viewportStateInfo.scissorCount = 1;
    e3e9:	c7 85 00 fd ff ff 01 	movl   $0x1,-0x300(%rbp)
    e3f0:	00 00 00 
    viewportStateInfo.pScissors = &scissor;
    e3f3:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
    e3fa:	48 89 85 08 fd ff ff 	mov    %rax,-0x2f8(%rbp)

    /*  */
    VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e401:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e405:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
    e40c:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e413:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e41a:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
    rastStateInfo.sType =
    e421:	c7 85 b0 fd ff ff 17 	movl   $0x17,-0x250(%rbp)
    e428:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
    rastStateInfo.pNext = nullptr;
    e42b:	48 c7 85 b8 fd ff ff 	movq   $0x0,-0x248(%rbp)
    e432:	00 00 00 00 
    rastStateInfo.depthClampEnable = VK_FALSE;
    e436:	c7 85 c4 fd ff ff 00 	movl   $0x0,-0x23c(%rbp)
    e43d:	00 00 00 
    rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e440:	c7 85 c8 fd ff ff 00 	movl   $0x0,-0x238(%rbp)
    e447:	00 00 00 
    rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e44a:	c7 85 cc fd ff ff 00 	movl   $0x0,-0x234(%rbp)
    e451:	00 00 00 
    rastStateInfo.lineWidth = 1.0f;
    e454:	f3 0f 10 05 54 b3 00 	movss  0xb354(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e45b:	00 
    e45c:	f3 0f 11 85 e8 fd ff 	movss  %xmm0,-0x218(%rbp)
    e463:	ff 
    rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e464:	c7 85 d0 fd ff ff 02 	movl   $0x2,-0x230(%rbp)
    e46b:	00 00 00 
    rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e46e:	c7 85 d4 fd ff ff 01 	movl   $0x1,-0x22c(%rbp)
    e475:	00 00 00 
    rastStateInfo.depthBiasEnable = VK_FALSE;
    e478:	c7 85 d8 fd ff ff 00 	movl   $0x0,-0x228(%rbp)
    e47f:	00 00 00 
    rastStateInfo.depthBiasConstantFactor = 0.0f;
    e482:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e486:	f3 0f 11 85 dc fd ff 	movss  %xmm0,-0x224(%rbp)
    e48d:	ff 
    rastStateInfo.depthBiasClamp = 0.0f;
    e48e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e492:	f3 0f 11 85 e0 fd ff 	movss  %xmm0,-0x220(%rbp)
    e499:	ff 
    rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e49a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e49e:	f3 0f 11 85 e4 fd ff 	movss  %xmm0,-0x21c(%rbp)
    e4a5:	ff 

    /*  */
    VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e4a6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4aa:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e4b1:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e4b8:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
    multisampleStateInfo.sType =
    e4bf:	c7 85 10 fd ff ff 18 	movl   $0x18,-0x2f0(%rbp)
    e4c6:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
    multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e4c9:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e4d0:	00 00 00 
    multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e4d3:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e4da:	00 00 00 
    multisampleStateInfo.minSampleShading = 1.0f;
    e4dd:	f3 0f 10 05 cb b2 00 	movss  0xb2cb(%rip),%xmm0        # 197b0 <_ZN6__pstl9execution2v1L5unseqE+0x471>
    e4e4:	00 
    e4e5:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e4ec:	ff 
    multisampleStateInfo.pSampleMask = nullptr;
    e4ed:	48 c7 85 30 fd ff ff 	movq   $0x0,-0x2d0(%rbp)
    e4f4:	00 00 00 00 
    multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e4f8:	c7 85 38 fd ff ff 00 	movl   $0x0,-0x2c8(%rbp)
    e4ff:	00 00 00 
    multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e502:	c7 85 3c fd ff ff 00 	movl   $0x0,-0x2c4(%rbp)
    e509:	00 00 00 

    /* Depth and stencil testing */

    /* Color blending */
    VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e50c:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e510:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e517:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    colorBlendAttachment.colorWriteMask =
    e51e:	c7 85 2c fc ff ff 0f 	movl   $0xf,-0x3d4(%rbp)
    e525:	00 00 00 
        VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
        VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
    colorBlendAttachment.blendEnable = VK_TRUE;
    e528:	c7 85 10 fc ff ff 01 	movl   $0x1,-0x3f0(%rbp)
    e52f:	00 00 00 
    colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e532:	c7 85 14 fc ff ff 06 	movl   $0x6,-0x3ec(%rbp)
    e539:	00 00 00 
    colorBlendAttachment.dstColorBlendFactor =
    e53c:	c7 85 18 fc ff ff 07 	movl   $0x7,-0x3e8(%rbp)
    e543:	00 00 00 
        VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
    colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e546:	c7 85 1c fc ff ff 00 	movl   $0x0,-0x3e4(%rbp)
    e54d:	00 00 00 
    colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e550:	c7 85 20 fc ff ff 01 	movl   $0x1,-0x3e0(%rbp)
    e557:	00 00 00 
    colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e55a:	c7 85 24 fc ff ff 00 	movl   $0x0,-0x3dc(%rbp)
    e561:	00 00 00 
    colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e564:	c7 85 28 fc ff ff 00 	movl   $0x0,-0x3d8(%rbp)
    e56b:	00 00 00 

    VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e56e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e572:	0f 29 85 70 fd ff ff 	movaps %xmm0,-0x290(%rbp)
    e579:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e580:	0f 29 85 90 fd ff ff 	movaps %xmm0,-0x270(%rbp)
    e587:	66 0f d6 85 a0 fd ff 	movq   %xmm0,-0x260(%rbp)
    e58e:	ff 
    colorBlendState.sType =
    e58f:	c7 85 70 fd ff ff 1a 	movl   $0x1a,-0x290(%rbp)
    e596:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
    colorBlendState.logicOpEnable = VK_FALSE;
    e599:	c7 85 84 fd ff ff 00 	movl   $0x0,-0x27c(%rbp)
    e5a0:	00 00 00 
    colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e5a3:	c7 85 88 fd ff ff 03 	movl   $0x3,-0x278(%rbp)
    e5aa:	00 00 00 
    colorBlendState.attachmentCount = 1;
    e5ad:	c7 85 8c fd ff ff 01 	movl   $0x1,-0x274(%rbp)
    e5b4:	00 00 00 
    colorBlendState.pAttachments = &colorBlendAttachment;
    e5b7:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e5be:	48 89 85 90 fd ff ff 	mov    %rax,-0x270(%rbp)
    colorBlendState.blendConstants[0] = 0.0f;
    e5c5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5c9:	f3 0f 11 85 98 fd ff 	movss  %xmm0,-0x268(%rbp)
    e5d0:	ff 
    colorBlendState.blendConstants[1] = 0.0f;
    e5d1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5d5:	f3 0f 11 85 9c fd ff 	movss  %xmm0,-0x264(%rbp)
    e5dc:	ff 
    colorBlendState.blendConstants[2] = 0.0f;
    e5dd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5e1:	f3 0f 11 85 a0 fd ff 	movss  %xmm0,-0x260(%rbp)
    e5e8:	ff 
    colorBlendState.blendConstants[3] = 0.0f;
    e5e9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5ed:	f3 0f 11 85 a4 fd ff 	movss  %xmm0,-0x25c(%rbp)
    e5f4:	ff 

    /* Dynamic state */
    std::vector<VkDynamicState> dynamicStates = {VK_DYNAMIC_STATE_VIEWPORT,
                                                 VK_DYNAMIC_STATE_LINE_WIDTH};
    e5f5:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    e5fc:	c7 45 b8 02 00 00 00 	movl   $0x2,-0x48(%rbp)
    e603:	48 8d 45 b4          	lea    -0x4c(%rbp),%rax
    e607:	49 89 c4             	mov    %rax,%r12
    e60a:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    e610:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e614:	48 89 c7             	mov    %rax,%rdi
    e617:	e8 dc 26 00 00       	call   10cf8 <_ZNSaI14VkDynamicStateEC1Ev>
    e61c:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    e620:	4c 89 e6             	mov    %r12,%rsi
    e623:	4c 89 ef             	mov    %r13,%rdi
    e626:	4c 89 e1             	mov    %r12,%rcx
    e629:	4c 89 eb             	mov    %r13,%rbx
    e62c:	48 89 df             	mov    %rbx,%rdi
    e62f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e636:	48 89 d1             	mov    %rdx,%rcx
    e639:	48 89 fa             	mov    %rdi,%rdx
    e63c:	48 89 c7             	mov    %rax,%rdi
    e63f:	e8 ec 26 00 00       	call   10d30 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    e644:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e648:	48 89 c7             	mov    %rax,%rdi
    e64b:	e8 c4 26 00 00       	call   10d14 <_ZNSaI14VkDynamicStateED1Ev>

    VkPipelineDynamicStateCreateInfo dynamicStateInfo{};
    e650:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e654:	0f 29 85 30 fc ff ff 	movaps %xmm0,-0x3d0(%rbp)
    e65b:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    dynamicStateInfo.sType =
    e662:	c7 85 30 fc ff ff 1b 	movl   $0x1b,-0x3d0(%rbp)
    e669:	00 00 00 
        VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO;
    dynamicStateInfo.dynamicStateCount =
        static_cast<uint32_t>(dynamicStates.size());
    e66c:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e673:	48 89 c7             	mov    %rax,%rdi
    e676:	e8 81 27 00 00       	call   10dfc <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>
    dynamicStateInfo.dynamicStateCount =
    e67b:	89 85 44 fc ff ff    	mov    %eax,-0x3bc(%rbp)
    dynamicStateInfo.pDynamicStates = dynamicStates.data();
    e681:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e688:	48 89 c7             	mov    %rax,%rdi
    e68b:	e8 90 27 00 00       	call   10e20 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>
    e690:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)

    /* Pipeline layout */
    VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e697:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e69b:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e6a2:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e6a9:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
    pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e6b0:	c7 85 40 fd ff ff 1e 	movl   $0x1e,-0x2c0(%rbp)
    e6b7:	00 00 00 
    pipelineLayoutInfo.setLayoutCount = 0;
    e6ba:	c7 85 54 fd ff ff 00 	movl   $0x0,-0x2ac(%rbp)
    e6c1:	00 00 00 
    pipelineLayoutInfo.pSetLayouts = nullptr;
    e6c4:	48 c7 85 58 fd ff ff 	movq   $0x0,-0x2a8(%rbp)
    e6cb:	00 00 00 00 
    pipelineLayoutInfo.pushConstantRangeCount = 0;
    e6cf:	c7 85 60 fd ff ff 00 	movl   $0x0,-0x2a0(%rbp)
    e6d6:	00 00 00 
    pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e6d9:	48 c7 85 68 fd ff ff 	movq   $0x0,-0x298(%rbp)
    e6e0:	00 00 00 00 

    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    e6e4:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e6eb:	48 8d 90 e8 00 00 00 	lea    0xe8(%rax),%rdx
    e6f2:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e6f9:	48 8b 40 50          	mov    0x50(%rax),%rax
    e6fd:	48 8d b5 40 fd ff ff 	lea    -0x2c0(%rbp),%rsi
    e704:	48 89 d1             	mov    %rdx,%rcx
    e707:	ba 00 00 00 00       	mov    $0x0,%edx
    e70c:	48 89 c7             	mov    %rax,%rdi
    e70f:	e8 8c 5b ff ff       	call   42a0 <vkCreatePipelineLayout@plt>
                               &pipelineLayout) != VK_SUCCESS) {
    e714:	85 c0                	test   %eax,%eax
    e716:	0f 95 c0             	setne  %al
    if (vkCreatePipelineLayout(device, &pipelineLayoutInfo, nullptr,
    e719:	84 c0                	test   %al,%al
    e71b:	74 3b                	je     e758 <_ZN9VulkanApp22createGraphicsPipelineEv+0x7f0>
      throw std::runtime_error("Failed to create pipeline layout.");
    e71d:	bf 10 00 00 00       	mov    $0x10,%edi
    e722:	e8 39 5a ff ff       	call   4160 <__cxa_allocate_exception@plt>
    e727:	48 89 c3             	mov    %rax,%rbx
    e72a:	48 8d 05 57 ad 00 00 	lea    0xad57(%rip),%rax        # 19488 <_ZN6__pstl9execution2v1L5unseqE+0x149>
    e731:	48 89 c6             	mov    %rax,%rsi
    e734:	48 89 df             	mov    %rbx,%rdi
    e737:	e8 c4 59 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    e73c:	48 8b 05 65 78 01 00 	mov    0x17865(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    e743:	48 89 c2             	mov    %rax,%rdx
    e746:	48 8d 05 f3 75 01 00 	lea    0x175f3(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    e74d:	48 89 c6             	mov    %rax,%rsi
    e750:	48 89 df             	mov    %rbx,%rdi
    e753:	e8 f8 5e ff ff       	call   4650 <__cxa_throw@plt>
    }

    /* Populate graphics pipeline create info */
    VkGraphicsPipelineCreateInfo graphicsPipelineInfo{};
    e758:	48 8d 95 50 fe ff ff 	lea    -0x1b0(%rbp),%rdx
    e75f:	b8 00 00 00 00       	mov    $0x0,%eax
    e764:	b9 12 00 00 00       	mov    $0x12,%ecx
    e769:	48 89 d7             	mov    %rdx,%rdi
    e76c:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    graphicsPipelineInfo.sType =
    e76f:	c7 85 50 fe ff ff 1c 	movl   $0x1c,-0x1b0(%rbp)
    e776:	00 00 00 
        VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    graphicsPipelineInfo.pNext = nullptr;
    e779:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
    e780:	00 00 00 00 

    /* Create a graphics pipeline */
    graphicsPipelines.push_back({});
    e784:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e78b:	48 8d 90 d0 00 00 00 	lea    0xd0(%rax),%rdx
    e792:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    e799:	00 
    e79a:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e79e:	48 89 c6             	mov    %rax,%rsi
    e7a1:	48 89 d7             	mov    %rdx,%rdi
    e7a4:	e8 9b 26 00 00       	call   10e44 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE9push_backEOS1_>
  }
    e7a9:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e7b0:	48 89 c7             	mov    %rax,%rdi
    e7b3:	e8 00 26 00 00       	call   10db8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
  for (size_t i = 0; i < shaderModules.size(); ++i) {
    e7b8:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)
    e7bd:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e7c4:	48 89 c7             	mov    %rax,%rdi
    e7c7:	e8 08 25 00 00       	call   10cd4 <_ZNKSt6vectorI6ShaderSaIS0_EE4sizeEv>
    e7cc:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)
    e7d0:	0f 92 c0             	setb   %al
    e7d3:	84 c0                	test   %al,%al
    e7d5:	0f 85 e2 f8 ff ff    	jne    e0bd <_ZN9VulkanApp22createGraphicsPipelineEv+0x155>

  for (auto &shaderModule : shaderModules) {
    e7db:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e7e2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    e7e6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e7ea:	48 89 c7             	mov    %rax,%rdi
    e7ed:	e8 84 26 00 00       	call   10e76 <_ZNSt6vectorI6ShaderSaIS0_EE5beginEv>
    e7f2:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    e7f9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    e7fd:	48 89 c7             	mov    %rax,%rdi
    e800:	e8 97 26 00 00       	call   10e9c <_ZNSt6vectorI6ShaderSaIS0_EE3endEv>
    e805:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    e80c:	eb 67                	jmp    e875 <_ZN9VulkanApp22createGraphicsPipelineEv+0x90d>
    e80e:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e815:	48 89 c7             	mov    %rax,%rdi
    e818:	e8 03 27 00 00       	call   10f20 <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEdeEv>
    e81d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    vkh::destroyShaderModule(device, shaderModule.vertex);
    e821:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e825:	48 8b 08             	mov    (%rax),%rcx
    e828:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e82f:	48 8b 40 50          	mov    0x50(%rax),%rax
    e833:	ba 00 00 00 00       	mov    $0x0,%edx
    e838:	48 89 ce             	mov    %rcx,%rsi
    e83b:	48 89 c7             	mov    %rax,%rdi
    e83e:	e8 33 80 ff ff       	call   6876 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
    vkh::destroyShaderModule(device, shaderModule.fragment);
    e843:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    e847:	48 8b 48 08          	mov    0x8(%rax),%rcx
    e84b:	48 8b 85 e8 fb ff ff 	mov    -0x418(%rbp),%rax
    e852:	48 8b 40 50          	mov    0x50(%rax),%rax
    e856:	ba 00 00 00 00       	mov    $0x0,%edx
    e85b:	48 89 ce             	mov    %rcx,%rsi
    e85e:	48 89 c7             	mov    %rax,%rdi
    e861:	e8 10 80 ff ff       	call   6876 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  for (auto &shaderModule : shaderModules) {
    e866:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e86d:	48 89 c7             	mov    %rax,%rdi
    e870:	e8 8b 26 00 00       	call   10f00 <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEppEv>
    e875:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    e87c:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    e883:	48 89 d6             	mov    %rdx,%rsi
    e886:	48 89 c7             	mov    %rax,%rdi
    e889:	e8 37 26 00 00       	call   10ec5 <_ZN9__gnu_cxxneIP6ShaderSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    e88e:	84 c0                	test   %al,%al
    e890:	0f 85 78 ff ff ff    	jne    e80e <_ZN9VulkanApp22createGraphicsPipelineEv+0x8a6>
  }
}
    e896:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e89d:	48 89 c7             	mov    %rax,%rdi
    e8a0:	e8 cb 23 00 00       	call   10c70 <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>
    e8a5:	e9 b6 00 00 00       	jmp    e960 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9f8>
  std::vector<Shader> shaderModules{1};
    e8aa:	48 89 c3             	mov    %rax,%rbx
    e8ad:	48 8d 85 5f ff ff ff 	lea    -0xa1(%rbp),%rax
    e8b4:	48 89 c7             	mov    %rax,%rdi
    e8b7:	e8 22 23 00 00       	call   10bde <_ZNSaI6ShaderED1Ev>
    e8bc:	48 89 d8             	mov    %rbx,%rax
    e8bf:	48 89 c7             	mov    %rax,%rdi
    e8c2:	e8 e9 5d ff ff       	call   46b0 <_Unwind_Resume@plt>
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e8c7:	48 89 c3             	mov    %rax,%rbx
    e8ca:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    e8d1:	48 89 c7             	mov    %rax,%rdi
    e8d4:	e8 f7 58 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e8d9:	eb 03                	jmp    e8de <_ZN9VulkanApp22createGraphicsPipelineEv+0x976>
    e8db:	48 89 c3             	mov    %rax,%rbx
    e8de:	48 8d 45 8f          	lea    -0x71(%rbp),%rax
    e8e2:	48 89 c7             	mov    %rax,%rdi
    e8e5:	e8 16 5b ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    e8ea:	eb 5a                	jmp    e946 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e8ec:	48 89 c3             	mov    %rax,%rbx
    e8ef:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    e8f3:	48 89 c7             	mov    %rax,%rdi
    e8f6:	e8 d5 58 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e8fb:	eb 03                	jmp    e900 <_ZN9VulkanApp22createGraphicsPipelineEv+0x998>
    e8fd:	48 89 c3             	mov    %rax,%rbx
    e900:	48 8d 45 b3          	lea    -0x4d(%rbp),%rax
    e904:	48 89 c7             	mov    %rax,%rdi
    e907:	e8 f4 5a ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    e90c:	eb 38                	jmp    e946 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
                                                 VK_DYNAMIC_STATE_LINE_WIDTH};
    e90e:	48 89 c3             	mov    %rax,%rbx
    e911:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e915:	48 89 c7             	mov    %rax,%rdi
    e918:	e8 f7 23 00 00       	call   10d14 <_ZNSaI14VkDynamicStateED1Ev>
    e91d:	eb 27                	jmp    e946 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
      throw std::runtime_error("Failed to create pipeline layout.");
    e91f:	49 89 c4             	mov    %rax,%r12
    e922:	48 89 df             	mov    %rbx,%rdi
    e925:	e8 06 59 ff ff       	call   4230 <__cxa_free_exception@plt>
    e92a:	4c 89 e3             	mov    %r12,%rbx
    e92d:	eb 03                	jmp    e932 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9ca>
  }
    e92f:	48 89 c3             	mov    %rax,%rbx
    e932:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e939:	48 89 c7             	mov    %rax,%rdi
    e93c:	e8 77 24 00 00       	call   10db8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>
    e941:	eb 03                	jmp    e946 <_ZN9VulkanApp22createGraphicsPipelineEv+0x9de>
}
    e943:	48 89 c3             	mov    %rax,%rbx
    e946:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    e94d:	48 89 c7             	mov    %rax,%rdi
    e950:	e8 1b 23 00 00       	call   10c70 <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>
    e955:	48 89 d8             	mov    %rbx,%rax
    e958:	48 89 c7             	mov    %rax,%rdi
    e95b:	e8 50 5d ff ff       	call   46b0 <_Unwind_Resume@plt>
    e960:	48 81 c4 08 04 00 00 	add    $0x408,%rsp
    e967:	5b                   	pop    %rbx
    e968:	41 5c                	pop    %r12
    e96a:	41 5d                	pop    %r13
    e96c:	5d                   	pop    %rbp
    e96d:	c3                   	ret

000000000000e96e <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    e96e:	55                   	push   %rbp
    e96f:	48 89 e5             	mov    %rsp,%rbp
    e972:	48 83 ec 30          	sub    $0x30,%rsp
    e976:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    e97a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e97e:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    e982:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    e987:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    e98e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    e995:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    e996:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    e99d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9a1:	8b 40 68             	mov    0x68(%rax),%eax
    e9a4:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    e9a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    e9ab:	48 8b 40 50          	mov    0x50(%rax),%rax
    e9af:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    e9b3:	ba 00 00 00 00       	mov    $0x0,%edx
    e9b8:	48 89 ce             	mov    %rcx,%rsi
    e9bb:	48 89 c7             	mov    %rax,%rdi
    e9be:	e8 13 74 ff ff       	call   5dd6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    e9c3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    e9c7:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)
}
    e9ce:	90                   	nop
    e9cf:	c9                   	leave
    e9d0:	c3                   	ret
    e9d1:	90                   	nop

000000000000e9d2 <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    e9d2:	55                   	push   %rbp
    e9d3:	48 89 e5             	mov    %rsp,%rbp
    e9d6:	41 57                	push   %r15
    e9d8:	41 56                	push   %r14
    e9da:	41 55                	push   %r13
    e9dc:	41 54                	push   %r12
    e9de:	53                   	push   %rbx
    e9df:	48 83 ec 38          	sub    $0x38,%rsp
    e9e3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    e9e7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    e9eb:	48 8d 58 10          	lea    0x10(%rax),%rbx
    e9ef:	48 8d 05 b4 aa 00 00 	lea    0xaab4(%rip),%rax        # 194aa <_ZN6__pstl9execution2v1L5unseqE+0x16b>
    e9f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    e9fa:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    e9fe:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ea02:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    ea09:	00 
    ea0a:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ea0e:	48 89 c7             	mov    %rax,%rdi
    ea11:	e8 b4 94 ff ff       	call   7eca <_ZNSaIPKcEC1Ev>
    ea16:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ea1a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    ea1e:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    ea22:	49 89 f0             	mov    %rsi,%r8
    ea25:	49 89 f9             	mov    %rdi,%r9
    ea28:	48 89 fa             	mov    %rdi,%rdx
    ea2b:	48 89 c1             	mov    %rax,%rcx
    ea2e:	4c 89 c6             	mov    %r8,%rsi
    ea31:	48 89 df             	mov    %rbx,%rdi
    ea34:	e8 5b 17 00 00       	call   10194 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ea39:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ea3d:	48 89 c7             	mov    %rax,%rdi
    ea40:	e8 a1 94 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    ea45:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ea49:	48 8d 58 28          	lea    0x28(%rax),%rbx
    ea4d:	4c 8d 35 8c 72 01 00 	lea    0x1728c(%rip),%r14        # 25ce0 <C.95.0>
    ea54:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    ea5a:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ea5e:	48 89 c7             	mov    %rax,%rdi
    ea61:	e8 64 94 ff ff       	call   7eca <_ZNSaIPKcEC1Ev>
    ea66:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ea6a:	4d 89 f0             	mov    %r14,%r8
    ea6d:	4d 89 f9             	mov    %r15,%r9
    ea70:	4c 89 f6             	mov    %r14,%rsi
    ea73:	4c 89 ff             	mov    %r15,%rdi
    ea76:	48 89 fa             	mov    %rdi,%rdx
    ea79:	48 89 c1             	mov    %rax,%rcx
    ea7c:	4c 89 c6             	mov    %r8,%rsi
    ea7f:	48 89 df             	mov    %rbx,%rdi
    ea82:	e8 0d 17 00 00       	call   10194 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ea87:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ea8b:	48 89 c7             	mov    %rax,%rdi
    ea8e:	e8 53 94 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    ea93:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ea97:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    ea9e:	4c 8d 25 4b 72 01 00 	lea    0x1724b(%rip),%r12        # 25cf0 <C.96.1>
    eaa5:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    eaab:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eaaf:	48 89 c7             	mov    %rax,%rdi
    eab2:	e8 13 94 ff ff       	call   7eca <_ZNSaIPKcEC1Ev>
    eab7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eabb:	4d 89 e0             	mov    %r12,%r8
    eabe:	4d 89 e9             	mov    %r13,%r9
    eac1:	4c 89 e6             	mov    %r12,%rsi
    eac4:	4c 89 ef             	mov    %r13,%rdi
    eac7:	48 89 fa             	mov    %rdi,%rdx
    eaca:	48 89 c1             	mov    %rax,%rcx
    eacd:	4c 89 c6             	mov    %r8,%rsi
    ead0:	48 89 df             	mov    %rbx,%rdi
    ead3:	e8 bc 16 00 00       	call   10194 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ead8:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    eadc:	48 89 c7             	mov    %rax,%rdi
    eadf:	e8 02 94 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    eae4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eae8:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eaee:	48 89 c7             	mov    %rax,%rdi
    eaf1:	e8 a6 15 00 00       	call   1009c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    eaf6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eafa:	48 05 b8 00 00 00    	add    $0xb8,%rax
    eb00:	48 89 c7             	mov    %rax,%rdi
    eb03:	e8 cc 15 00 00       	call   100d4 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    eb08:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb0c:	48 05 d0 00 00 00    	add    $0xd0,%rax
    eb12:	48 89 c7             	mov    %rax,%rdi
    eb15:	e8 0e 16 00 00       	call   10128 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1Ev>
  createWindow();
    eb1a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb1e:	48 89 c7             	mov    %rax,%rdi
    eb21:	e8 2e e1 ff ff       	call   cc54 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    eb26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb2a:	48 89 c7             	mov    %rax,%rdi
    eb2d:	e8 62 e1 ff ff       	call   cc94 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    eb32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb36:	48 89 c7             	mov    %rax,%rdi
    eb39:	e8 3c e3 ff ff       	call   ce7a <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    eb3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb42:	48 89 c7             	mov    %rax,%rdi
    eb45:	e8 c4 e3 ff ff       	call   cf0e <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    eb4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb4e:	48 89 c7             	mov    %rax,%rdi
    eb51:	e8 10 e6 ff ff       	call   d166 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    eb56:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb5a:	48 89 c7             	mov    %rax,%rdi
    eb5d:	e8 14 f2 ff ff       	call   dd76 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    eb62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb66:	48 89 c7             	mov    %rax,%rdi
    eb69:	e8 4e f2 ff ff       	call   ddbc <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    eb6e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb72:	48 89 c7             	mov    %rax,%rdi
    eb75:	e8 ee f3 ff ff       	call   df68 <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    eb7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    eb7e:	48 89 c7             	mov    %rax,%rdi
    eb81:	e8 e8 fd ff ff       	call   e96e <_ZN9VulkanApp17createCommandPoolEv>
}
    eb86:	e9 b2 00 00 00       	jmp    ec3d <_ZN9VulkanAppC1Ev+0x26b>
VulkanApp::VulkanApp() {
    eb8b:	48 89 c3             	mov    %rax,%rbx
    eb8e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    eb92:	48 89 c7             	mov    %rax,%rdi
    eb95:	e8 4c 93 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    eb9a:	48 89 d8             	mov    %rbx,%rax
    eb9d:	48 89 c7             	mov    %rax,%rdi
    eba0:	e8 0b 5b ff ff       	call   46b0 <_Unwind_Resume@plt>
    eba5:	48 89 c3             	mov    %rax,%rbx
    eba8:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ebac:	48 89 c7             	mov    %rax,%rdi
    ebaf:	e8 32 93 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    ebb4:	eb 6c                	jmp    ec22 <_ZN9VulkanAppC1Ev+0x250>
    ebb6:	48 89 c3             	mov    %rax,%rbx
    ebb9:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ebbd:	48 89 c7             	mov    %rax,%rdi
    ebc0:	e8 21 93 ff ff       	call   7ee6 <_ZNSaIPKcED1Ev>
    ebc5:	eb 4b                	jmp    ec12 <_ZN9VulkanAppC1Ev+0x240>
}
    ebc7:	48 89 c3             	mov    %rax,%rbx
    ebca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebce:	48 05 d0 00 00 00    	add    $0xd0,%rax
    ebd4:	48 89 c7             	mov    %rax,%rdi
    ebd7:	e8 e6 24 00 00       	call   110c2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
    ebdc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebe0:	48 05 b8 00 00 00    	add    $0xb8,%rax
    ebe6:	48 89 c7             	mov    %rax,%rdi
    ebe9:	e8 1e 9d ff ff       	call   890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    ebee:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ebf2:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ebf8:	48 89 c7             	mov    %rax,%rdi
    ebfb:	e8 c4 23 00 00       	call   10fc4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ec00:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec04:	48 05 88 00 00 00    	add    $0x88,%rax
    ec0a:	48 89 c7             	mov    %rax,%rdi
    ec0d:	e8 0a 16 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    ec12:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec16:	48 83 c0 28          	add    $0x28,%rax
}
    ec1a:	48 89 c7             	mov    %rax,%rdi
    ec1d:	e8 fa 15 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ec22:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec26:	48 83 c0 10          	add    $0x10,%rax
    ec2a:	48 89 c7             	mov    %rax,%rdi
    ec2d:	e8 ea 15 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ec32:	48 89 d8             	mov    %rbx,%rax
    ec35:	48 89 c7             	mov    %rax,%rdi
    ec38:	e8 73 5a ff ff       	call   46b0 <_Unwind_Resume@plt>
    ec3d:	48 83 c4 38          	add    $0x38,%rsp
    ec41:	5b                   	pop    %rbx
    ec42:	41 5c                	pop    %r12
    ec44:	41 5d                	pop    %r13
    ec46:	41 5e                	pop    %r14
    ec48:	41 5f                	pop    %r15
    ec4a:	5d                   	pop    %rbp
    ec4b:	c3                   	ret

000000000000ec4c <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ec4c:	55                   	push   %rbp
    ec4d:	48 89 e5             	mov    %rsp,%rbp
    ec50:	48 83 ec 30          	sub    $0x30,%rsp
    ec54:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    ec58:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec5c:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    ec63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec67:	48 8b 40 50          	mov    0x50(%rax),%rax
    ec6b:	ba 00 00 00 00       	mov    $0x0,%edx
    ec70:	48 89 ce             	mov    %rcx,%rsi
    ec73:	48 89 c7             	mov    %rax,%rdi
    ec76:	e8 e6 7c ff ff       	call   6961 <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  vkDestroyPipelineLayout(device, pipelineLayout, nullptr);
    ec7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec7f:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    ec86:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ec8a:	48 8b 40 50          	mov    0x50(%rax),%rax
    ec8e:	ba 00 00 00 00       	mov    $0x0,%edx
    ec93:	48 89 ce             	mov    %rcx,%rsi
    ec96:	48 89 c7             	mov    %rax,%rdi
    ec99:	e8 22 58 ff ff       	call   44c0 <vkDestroyPipelineLayout@plt>

  for (auto &imageView : imageViews) {
    ec9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eca2:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eca8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    ecac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecb0:	48 89 c7             	mov    %rax,%rdi
    ecb3:	e8 4e 24 00 00       	call   11106 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    ecb8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ecbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ecc0:	48 89 c7             	mov    %rax,%rdi
    ecc3:	e8 64 24 00 00       	call   1112c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    ecc8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    eccc:	eb 3b                	jmp    ed09 <_ZN9VulkanAppD1Ev+0xbd>
    ecce:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ecd2:	48 89 c7             	mov    %rax,%rdi
    ecd5:	e8 d6 24 00 00       	call   111b0 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    ecda:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    ecde:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ece2:	48 8b 08             	mov    (%rax),%rcx
    ece5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ece9:	48 8b 40 50          	mov    0x50(%rax),%rax
    eced:	ba 00 00 00 00       	mov    $0x0,%edx
    ecf2:	48 89 ce             	mov    %rcx,%rsi
    ecf5:	48 89 c7             	mov    %rax,%rdi
    ecf8:	e8 4b 7b ff ff       	call   6848 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ecfd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ed01:	48 89 c7             	mov    %rax,%rdi
    ed04:	e8 87 24 00 00       	call   11190 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    ed09:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ed0d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ed11:	48 89 d6             	mov    %rdx,%rsi
    ed14:	48 89 c7             	mov    %rax,%rdi
    ed17:	e8 39 24 00 00       	call   11155 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ed1c:	84 c0                	test   %al,%al
    ed1e:	75 ae                	jne    ecce <_ZN9VulkanAppD1Ev+0x82>
  }
  vkh::destroySwapchain(device, swapchain.self);
    ed20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed24:	48 8b 48 70          	mov    0x70(%rax),%rcx
    ed28:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed2c:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed30:	ba 00 00 00 00       	mov    $0x0,%edx
    ed35:	48 89 ce             	mov    %rcx,%rsi
    ed38:	48 89 c7             	mov    %rax,%rdi
    ed3b:	e8 da 7a ff ff       	call   681a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    ed40:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed44:	48 8b 40 50          	mov    0x50(%rax),%rax
    ed48:	be 00 00 00 00       	mov    $0x0,%esi
    ed4d:	48 89 c7             	mov    %rax,%rdi
    ed50:	e8 71 7a ff ff       	call   67c6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    ed55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed59:	48 8b 48 40          	mov    0x40(%rax),%rcx
    ed5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed61:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed65:	ba 00 00 00 00       	mov    $0x0,%edx
    ed6a:	48 89 ce             	mov    %rcx,%rsi
    ed6d:	48 89 c7             	mov    %rax,%rdi
    ed70:	e8 76 da ff ff       	call   c7eb <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    ed75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed79:	48 8b 48 48          	mov    0x48(%rax),%rcx
    ed7d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed81:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed85:	ba 00 00 00 00       	mov    $0x0,%edx
    ed8a:	48 89 ce             	mov    %rcx,%rsi
    ed8d:	48 89 c7             	mov    %rax,%rdi
    ed90:	e8 57 7a ff ff       	call   67ec <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    ed95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ed99:	48 8b 40 08          	mov    0x8(%rax),%rax
    ed9d:	be 00 00 00 00       	mov    $0x0,%esi
    eda2:	48 89 c7             	mov    %rax,%rdi
    eda5:	e8 f6 79 ff ff       	call   67a0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    edaa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edae:	48 8b 00             	mov    (%rax),%rax
    edb1:	48 89 c7             	mov    %rax,%rdi
    edb4:	e8 cc 79 ff ff       	call   6785 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    edb9:	e8 d2 55 ff ff       	call   4390 <glfwTerminate@plt>
}
    edbe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edc2:	48 05 d0 00 00 00    	add    $0xd0,%rax
    edc8:	48 89 c7             	mov    %rax,%rdi
    edcb:	e8 f2 22 00 00       	call   110c2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
    edd0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edd4:	48 05 b8 00 00 00    	add    $0xb8,%rax
    edda:	48 89 c7             	mov    %rax,%rdi
    eddd:	e8 2a 9b ff ff       	call   890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    ede2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ede6:	48 05 a0 00 00 00    	add    $0xa0,%rax
    edec:	48 89 c7             	mov    %rax,%rdi
    edef:	e8 d0 21 00 00       	call   10fc4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    edf4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    edf8:	48 05 88 00 00 00    	add    $0x88,%rax
    edfe:	48 89 c7             	mov    %rax,%rdi
    ee01:	e8 16 14 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    ee06:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee0a:	48 83 c0 28          	add    $0x28,%rax
}
    ee0e:	48 89 c7             	mov    %rax,%rdi
    ee11:	e8 06 14 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee16:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee1a:	48 83 c0 10          	add    $0x10,%rax
    ee1e:	48 89 c7             	mov    %rax,%rdi
    ee21:	e8 f6 13 00 00       	call   1021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee26:	90                   	nop
    ee27:	c9                   	leave
    ee28:	c3                   	ret
    ee29:	90                   	nop

000000000000ee2a <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    ee2a:	55                   	push   %rbp
    ee2b:	48 89 e5             	mov    %rsp,%rbp
    ee2e:	53                   	push   %rbx
    ee2f:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    ee36:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    ee3d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ee41:	48 89 c7             	mov    %rax,%rdi
    ee44:	e8 79 23 00 00       	call   111c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    ee49:	f2 0f 10 05 67 a9 00 	movsd  0xa967(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    ee50:	00 
    ee51:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    ee56:	e9 a1 00 00 00       	jmp    eefc <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    ee5b:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ee5f:	48 89 c7             	mov    %rax,%rdi
    ee62:	e8 5b 23 00 00       	call   111c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    ee67:	e8 d4 54 ff ff       	call   4340 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    ee6c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ee70:	48 89 c7             	mov    %rax,%rdi
    ee73:	e8 cc 12 00 00       	call   10144 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    ee78:	66 0f ef c0          	pxor   %xmm0,%xmm0
    ee7c:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    ee81:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    ee86:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    ee8b:	66 0f 2f 05 25 a9 00 	comisd 0xa925(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    ee92:	00 
    ee93:	72 5b                	jb     eef0 <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    ee95:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ee99:	48 89 c7             	mov    %rax,%rdi
    ee9c:	e8 a3 12 00 00       	call   10144 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    eea1:	66 0f ef c9          	pxor   %xmm1,%xmm1
    eea5:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    eeaa:	f2 0f 10 05 06 a9 00 	movsd  0xa906(%rip),%xmm0        # 197b8 <_ZN6__pstl9execution2v1L5unseqE+0x479>
    eeb1:	00 
    eeb2:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    eeb6:	66 48 0f 7e c0       	movq   %xmm0,%rax
    eebb:	66 48 0f 6e c0       	movq   %rax,%xmm0
    eec0:	48 8d 05 f9 74 01 00 	lea    0x174f9(%rip),%rax        # 263c0 <_ZSt4cout@GLIBCXX_3.4>
    eec7:	48 89 c7             	mov    %rax,%rdi
    eeca:	e8 41 58 ff ff       	call   4710 <_ZNSolsEd@plt>
    eecf:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    eed2:	48 8d 05 e4 a5 00 00 	lea    0xa5e4(%rip),%rax        # 194bd <_ZN6__pstl9execution2v1L5unseqE+0x17e>
    eed9:	48 89 c6             	mov    %rax,%rsi
    eedc:	48 89 d7             	mov    %rdx,%rdi
    eedf:	e8 6c 54 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    eee4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    eee8:	48 89 c7             	mov    %rax,%rdi
    eeeb:	e8 e2 23 00 00       	call   112d2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    eef0:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    eef4:	48 89 c7             	mov    %rax,%rdi
    eef7:	e8 3c 23 00 00       	call   11238 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    eefc:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ef03:	48 8b 00             	mov    (%rax),%rax
    ef06:	48 89 c7             	mov    %rax,%rdi
    ef09:	e8 f2 57 ff ff       	call   4700 <glfwWindowShouldClose@plt>
    ef0e:	85 c0                	test   %eax,%eax
    ef10:	0f 94 c0             	sete   %al
    ef13:	84 c0                	test   %al,%al
    ef15:	0f 85 40 ff ff ff    	jne    ee5b <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    ef1b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    ef22:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef26:	48 89 c7             	mov    %rax,%rdi
    ef29:	e8 72 51 ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    ef2e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef32:	48 89 c7             	mov    %rax,%rdi
    ef35:	e8 fe 22 00 00       	call   11238 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ef3a:	eb 2b                	jmp    ef67 <_ZN9VulkanApp3runEv+0x13d>
  }
    ef3c:	48 89 c3             	mov    %rax,%rbx
    ef3f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    ef43:	48 89 c7             	mov    %rax,%rdi
    ef46:	e8 ed 22 00 00       	call   11238 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ef4b:	eb 03                	jmp    ef50 <_ZN9VulkanApp3runEv+0x126>
}
    ef4d:	48 89 c3             	mov    %rax,%rbx
    ef50:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ef54:	48 89 c7             	mov    %rax,%rdi
    ef57:	e8 dc 22 00 00       	call   11238 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    ef5c:	48 89 d8             	mov    %rbx,%rax
    ef5f:	48 89 c7             	mov    %rax,%rdi
    ef62:	e8 49 57 ff ff       	call   46b0 <_Unwind_Resume@plt>
    ef67:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ef6b:	c9                   	leave
    ef6c:	c3                   	ret
    ef6d:	90                   	nop

000000000000ef6e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    ef6e:	55                   	push   %rbp
    ef6f:	48 89 e5             	mov    %rsp,%rbp
    ef72:	41 54                	push   %r12
    ef74:	53                   	push   %rbx
    ef75:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    ef7c:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    ef83:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    ef8a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ef91:	48 89 c7             	mov    %rax,%rdi
    ef94:	e8 e7 54 ff ff       	call   4480 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    ef99:	be 10 00 00 00       	mov    $0x10,%esi
    ef9e:	bf 08 00 00 00       	mov    $0x8,%edi
    efa3:	e8 ce 6e ff ff       	call   5e76 <_ZStorSt13_Ios_OpenmodeS_>
    efa8:	89 c2                	mov    %eax,%edx
    efaa:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    efb1:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    efb8:	48 89 ce             	mov    %rcx,%rsi
    efbb:	48 89 c7             	mov    %rax,%rdi
    efbe:	e8 8d 55 ff ff       	call   4550 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    efc3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    efca:	48 89 c7             	mov    %rax,%rdi
    efcd:	e8 9e 56 ff ff       	call   4670 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    efd2:	83 f0 01             	xor    $0x1,%eax
    efd5:	84 c0                	test   %al,%al
    efd7:	0f 84 97 00 00 00    	je     f074 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    efdd:	bf 10 00 00 00       	mov    $0x10,%edi
    efe2:	e8 79 51 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    efe7:	48 89 c3             	mov    %rax,%rbx
    efea:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    eff1:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    eff8:	48 8d 0d c4 a4 00 00 	lea    0xa4c4(%rip),%rcx        # 194c3 <_ZN6__pstl9execution2v1L5unseqE+0x184>
    efff:	48 89 ce             	mov    %rcx,%rsi
    f002:	48 89 c7             	mov    %rax,%rdi
    f005:	e8 c2 6e ff ff       	call   5ecc <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f00a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f011:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f018:	ba 0a 00 00 00       	mov    $0xa,%edx
    f01d:	48 89 ce             	mov    %rcx,%rsi
    f020:	48 89 c7             	mov    %rax,%rdi
    f023:	e8 ca 22 00 00       	call   112f2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f028:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f02f:	48 89 c6             	mov    %rax,%rsi
    f032:	48 89 df             	mov    %rbx,%rdi
    f035:	e8 e6 55 ff ff       	call   4620 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f03a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f041:	48 89 c7             	mov    %rax,%rdi
    f044:	e8 87 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f049:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f050:	48 89 c7             	mov    %rax,%rdi
    f053:	e8 78 51 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f058:	48 8b 05 49 6f 01 00 	mov    0x16f49(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f05f:	48 89 c2             	mov    %rax,%rdx
    f062:	48 8d 05 d7 6c 01 00 	lea    0x16cd7(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f069:	48 89 c6             	mov    %rax,%rsi
    f06c:	48 89 df             	mov    %rbx,%rdi
    f06f:	e8 dc 55 ff ff       	call   4650 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f074:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f07b:	48 83 c0 10          	add    $0x10,%rax
    f07f:	48 8d 15 4d a4 00 00 	lea    0xa44d(%rip),%rdx        # 194d3 <_ZN6__pstl9execution2v1L5unseqE+0x194>
    f086:	48 89 d6             	mov    %rdx,%rsi
    f089:	48 89 c7             	mov    %rax,%rdi
    f08c:	e8 bf 52 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f091:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f098:	48 83 c0 10          	add    $0x10,%rax
    f09c:	48 8d 15 49 a4 00 00 	lea    0xa449(%rip),%rdx        # 194ec <_ZN6__pstl9execution2v1L5unseqE+0x1ad>
    f0a3:	48 89 d6             	mov    %rdx,%rsi
    f0a6:	48 89 c7             	mov    %rax,%rdi
    f0a9:	e8 a2 52 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f0ae:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f0b5:	be 00 00 00 00       	mov    $0x0,%esi
    f0ba:	48 89 c7             	mov    %rax,%rdi
    f0bd:	e8 62 7a ff ff       	call   6b24 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    f0c2:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f0c9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f0cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0d1:	48 89 c7             	mov    %rax,%rdi
    f0d4:	e8 29 16 00 00       	call   10702 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f0d9:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    f0e0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f0e4:	48 89 c7             	mov    %rax,%rdi
    f0e7:	e8 3c 16 00 00       	call   10728 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f0ec:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    f0f3:	eb 64                	jmp    f159 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    f0f5:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f0fc:	48 89 c7             	mov    %rax,%rdi
    f0ff:	e8 ac 16 00 00       	call   107b0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f104:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    f10b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f112:	48 83 c0 10          	add    $0x10,%rax
    f116:	48 8d 15 e0 a3 00 00 	lea    0xa3e0(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f11d:	48 89 d6             	mov    %rdx,%rsi
    f120:	48 89 c7             	mov    %rax,%rdi
    f123:	e8 28 52 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f128:	48 89 c2             	mov    %rax,%rdx
    f12b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f132:	48 89 c6             	mov    %rax,%rsi
    f135:	48 89 d7             	mov    %rdx,%rdi
    f138:	e8 13 52 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f13d:	be 0a 00 00 00       	mov    $0xa,%esi
    f142:	48 89 c7             	mov    %rax,%rdi
    f145:	e8 16 53 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    f14a:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f151:	48 89 c7             	mov    %rax,%rdi
    f154:	e8 33 16 00 00       	call   1078c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f159:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    f160:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f167:	48 89 d6             	mov    %rdx,%rsi
    f16a:	48 89 c7             	mov    %rax,%rdi
    f16d:	e8 df 15 00 00       	call   10751 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f172:	84 c0                	test   %al,%al
    f174:	0f 85 7b ff ff ff    	jne    f0f5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    f17a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f181:	48 83 c0 10          	add    $0x10,%rax
    f185:	48 8d 15 74 a3 00 00 	lea    0xa374(%rip),%rdx        # 19500 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    f18c:	48 89 d6             	mov    %rdx,%rsi
    f18f:	48 89 c7             	mov    %rax,%rdi
    f192:	e8 b9 51 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    f197:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f19e:	48 83 c0 10          	add    $0x10,%rax
    f1a2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f1a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f1aa:	48 89 c7             	mov    %rax,%rdi
    f1ad:	e8 ae 10 00 00       	call   10260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f1b2:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    f1b9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f1bd:	48 89 c7             	mov    %rax,%rdi
    f1c0:	e8 c1 10 00 00       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f1c5:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    f1cc:	eb 67                	jmp    f235 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    f1ce:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f1d5:	48 89 c7             	mov    %rax,%rdi
    f1d8:	e8 2d 11 00 00       	call   1030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f1dd:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    f1e4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f1eb:	48 83 c0 10          	add    $0x10,%rax
    f1ef:	48 8d 15 07 a3 00 00 	lea    0xa307(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f1f6:	48 89 d6             	mov    %rdx,%rsi
    f1f9:	48 89 c7             	mov    %rax,%rdi
    f1fc:	e8 4f 51 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f201:	48 89 c2             	mov    %rax,%rdx
    f204:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f20b:	48 8b 00             	mov    (%rax),%rax
    f20e:	48 89 c6             	mov    %rax,%rsi
    f211:	48 89 d7             	mov    %rdx,%rdi
    f214:	e8 37 51 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f219:	be 0a 00 00 00       	mov    $0xa,%esi
    f21e:	48 89 c7             	mov    %rax,%rdi
    f221:	e8 3a 52 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    f226:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f22d:	48 89 c7             	mov    %rax,%rdi
    f230:	e8 b5 10 00 00       	call   102ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f235:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    f23c:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f243:	48 89 d6             	mov    %rdx,%rsi
    f246:	48 89 c7             	mov    %rax,%rdi
    f249:	e8 61 10 00 00       	call   102af <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f24e:	84 c0                	test   %al,%al
    f250:	0f 85 78 ff ff ff    	jne    f1ce <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    f256:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f25d:	48 83 c0 10          	add    $0x10,%rax
    f261:	be 0a 00 00 00       	mov    $0xa,%esi
    f266:	48 89 c7             	mov    %rax,%rdi
    f269:	e8 f2 51 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    f26e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f275:	48 83 c0 10          	add    $0x10,%rax
    f279:	48 8d 15 90 a2 00 00 	lea    0xa290(%rip),%rdx        # 19510 <_ZN6__pstl9execution2v1L5unseqE+0x1d1>
    f280:	48 89 d6             	mov    %rdx,%rsi
    f283:	48 89 c7             	mov    %rax,%rdi
    f286:	e8 c5 50 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    f28b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f292:	48 83 c0 10          	add    $0x10,%rax
    f296:	48 8d 15 88 a2 00 00 	lea    0xa288(%rip),%rdx        # 19525 <_ZN6__pstl9execution2v1L5unseqE+0x1e6>
    f29d:	48 89 d6             	mov    %rdx,%rsi
    f2a0:	48 89 c7             	mov    %rax,%rdi
    f2a3:	e8 a8 50 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    f2a8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f2af:	48 89 c7             	mov    %rax,%rdi
    f2b2:	e8 07 7c ff ff       	call   6ebe <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    f2b7:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f2be:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f2c2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2c6:	48 89 c7             	mov    %rax,%rdi
    f2c9:	e8 ea d6 ff ff       	call   c9b8 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f2ce:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    f2d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f2d9:	48 89 c7             	mov    %rax,%rdi
    f2dc:	e8 fd d6 ff ff       	call   c9de <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f2e1:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    f2e8:	eb 5e                	jmp    f348 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    f2ea:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f2f1:	48 89 c7             	mov    %rax,%rdi
    f2f4:	e8 6d d7 ff ff       	call   ca66 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f2f9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    f2fd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f304:	48 83 c0 10          	add    $0x10,%rax
    f308:	48 8d 15 ee a1 00 00 	lea    0xa1ee(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f30f:	48 89 d6             	mov    %rdx,%rsi
    f312:	48 89 c7             	mov    %rax,%rdi
    f315:	e8 36 50 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f31a:	48 89 c2             	mov    %rax,%rdx
    f31d:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f321:	48 89 c6             	mov    %rax,%rsi
    f324:	48 89 d7             	mov    %rdx,%rdi
    f327:	e8 24 50 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f32c:	be 0a 00 00 00       	mov    $0xa,%esi
    f331:	48 89 c7             	mov    %rax,%rdi
    f334:	e8 27 51 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    f339:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f340:	48 89 c7             	mov    %rax,%rdi
    f343:	e8 fa d6 ff ff       	call   ca42 <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f348:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    f34f:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f356:	48 89 d6             	mov    %rdx,%rsi
    f359:	48 89 c7             	mov    %rax,%rdi
    f35c:	e8 a6 d6 ff ff       	call   ca07 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f361:	84 c0                	test   %al,%al
    f363:	75 85                	jne    f2ea <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    f365:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f36c:	48 83 c0 10          	add    $0x10,%rax
    f370:	48 8d 15 bf a1 00 00 	lea    0xa1bf(%rip),%rdx        # 19536 <_ZN6__pstl9execution2v1L5unseqE+0x1f7>
    f377:	48 89 d6             	mov    %rdx,%rsi
    f37a:	48 89 c7             	mov    %rax,%rdi
    f37d:	e8 ce 4f ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    f382:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f389:	48 83 c0 28          	add    $0x28,%rax
    f38d:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f391:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f395:	48 89 c7             	mov    %rax,%rdi
    f398:	e8 9f 1f 00 00       	call   1133c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f39d:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    f3a4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f3a8:	48 89 c7             	mov    %rax,%rdi
    f3ab:	e8 b2 1f 00 00       	call   11362 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f3b0:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    f3b7:	eb 61                	jmp    f41a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    f3b9:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f3c0:	48 89 c7             	mov    %rax,%rdi
    f3c3:	e8 1e 20 00 00       	call   113e6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f3c8:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    f3cc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f3d3:	48 83 c0 10          	add    $0x10,%rax
    f3d7:	48 8d 15 1f a1 00 00 	lea    0xa11f(%rip),%rdx        # 194fd <_ZN6__pstl9execution2v1L5unseqE+0x1be>
    f3de:	48 89 d6             	mov    %rdx,%rsi
    f3e1:	48 89 c7             	mov    %rax,%rdi
    f3e4:	e8 67 4f ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f3e9:	48 89 c2             	mov    %rax,%rdx
    f3ec:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f3f0:	48 8b 00             	mov    (%rax),%rax
    f3f3:	48 89 c6             	mov    %rax,%rsi
    f3f6:	48 89 d7             	mov    %rdx,%rdi
    f3f9:	e8 52 4f ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f3fe:	be 0a 00 00 00       	mov    $0xa,%esi
    f403:	48 89 c7             	mov    %rax,%rdi
    f406:	e8 55 50 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    f40b:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f412:	48 89 c7             	mov    %rax,%rdi
    f415:	e8 ac 1f 00 00       	call   113c6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f41a:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    f421:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f428:	48 89 d6             	mov    %rdx,%rsi
    f42b:	48 89 c7             	mov    %rax,%rdi
    f42e:	e8 58 1f 00 00       	call   1138b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f433:	84 c0                	test   %al,%al
    f435:	75 82                	jne    f3b9 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    f437:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f43e:	48 83 c0 10          	add    $0x10,%rax
    f442:	be 0a 00 00 00       	mov    $0xa,%esi
    f447:	48 89 c7             	mov    %rax,%rdi
    f44a:	e8 11 50 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    f44f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f456:	48 83 c0 10          	add    $0x10,%rax
    f45a:	48 8d 15 e5 a0 00 00 	lea    0xa0e5(%rip),%rdx        # 19546 <_ZN6__pstl9execution2v1L5unseqE+0x207>
    f461:	48 89 d6             	mov    %rdx,%rsi
    f464:	48 89 c7             	mov    %rax,%rdi
    f467:	e8 e4 4e ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    f46c:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f473:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f477:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f47e:	48 89 d6             	mov    %rdx,%rsi
    f481:	48 89 c7             	mov    %rax,%rdi
    f484:	e8 e1 7a ff ff       	call   6f6a <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    f489:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f490:	48 8b 50 58          	mov    0x58(%rax),%rdx
    f494:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    f49b:	48 89 d6             	mov    %rdx,%rsi
    f49e:	48 89 c7             	mov    %rax,%rdi
    f4a1:	e8 33 7c ff ff       	call   70d9 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    f4a6:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    f4ad:	00 
  size_t selectedDeviceIndex = 0;
    f4ae:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f4b5:	00 
  for (const auto &physDev : physicalDeviceList) {
    f4b6:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f4bd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f4c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4c5:	48 89 c7             	mov    %rax,%rdi
    f4c8:	e8 63 10 00 00       	call   10530 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    f4cd:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    f4d4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f4d8:	48 89 c7             	mov    %rax,%rdi
    f4db:	e8 76 10 00 00       	call   10556 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    f4e0:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    f4e7:	e9 c7 06 00 00       	jmp    fbb3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    f4ec:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    f4f3:	48 89 c7             	mov    %rax,%rdi
    f4f6:	e8 df 10 00 00       	call   105da <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    f4fb:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    f4ff:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f506:	48 89 c7             	mov    %rax,%rdi
    f509:	e8 b2 51 ff ff       	call   46c0 <_ZNSaIcEC1Ev@plt>
    f50e:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f515:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f51c:	48 8d 0d 39 a0 00 00 	lea    0xa039(%rip),%rcx        # 1955c <_ZN6__pstl9execution2v1L5unseqE+0x21d>
    f523:	48 89 ce             	mov    %rcx,%rsi
    f526:	48 89 c7             	mov    %rax,%rdi
    f529:	e8 d2 55 ff ff       	call   4b00 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f52e:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f535:	48 89 c7             	mov    %rax,%rdi
    f538:	e8 c3 4e ff ff       	call   4400 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    f53d:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    f544:	b8 00 00 00 00       	mov    $0x0,%eax
    f549:	b9 0e 00 00 00       	mov    $0xe,%ecx
    f54e:	48 89 d7             	mov    %rdx,%rdi
    f551:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    f554:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    f55b:	00 00 00 
    vk11Props.pNext = nullptr;
    f55e:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    f565:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    f569:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    f570:	b8 00 00 00 00       	mov    $0x0,%eax
    f575:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    f57a:	48 89 d7             	mov    %rdx,%rdi
    f57d:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    f580:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    f587:	00 00 00 
    vk12Props.pNext = &vk11Props;
    f58a:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    f591:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    f598:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f59f:	b8 00 00 00 00       	mov    $0x0,%eax
    f5a4:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    f5a9:	48 89 d7             	mov    %rdx,%rdi
    f5ac:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    f5af:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    f5b6:	00 00 00 
    vk13Props.pNext = &vk12Props;
    f5b9:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f5c0:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    f5c7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f5cb:	48 8b 08             	mov    (%rax),%rcx
    f5ce:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f5d5:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f5dc:	48 89 ce             	mov    %rcx,%rsi
    f5df:	48 89 c7             	mov    %rax,%rdi
    f5e2:	e8 1c 7b ff ff       	call   7103 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    f5e7:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    f5ed:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    f5f3:	39 c2                	cmp    %eax,%edx
    f5f5:	75 08                	jne    f5ff <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    f5f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f5fb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    f5ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f603:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f607:	75 19                	jne    f622 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    f609:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f610:	48 8d 15 46 9f 00 00 	lea    0x9f46(%rip),%rdx        # 1955d <_ZN6__pstl9execution2v1L5unseqE+0x21e>
    f617:	48 89 d6             	mov    %rdx,%rsi
    f61a:	48 89 c7             	mov    %rax,%rdi
    f61d:	e8 1e 4f ff ff       	call   4540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    f622:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f629:	48 83 c0 10          	add    $0x10,%rax
    f62d:	48 8d 15 35 9f 00 00 	lea    0x9f35(%rip),%rdx        # 19569 <_ZN6__pstl9execution2v1L5unseqE+0x22a>
    f634:	48 89 d6             	mov    %rdx,%rsi
    f637:	48 89 c7             	mov    %rax,%rdi
    f63a:	e8 11 4d ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f63f:	48 89 c2             	mov    %rax,%rdx
    f642:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f646:	48 89 c6             	mov    %rax,%rsi
    f649:	48 89 d7             	mov    %rdx,%rdi
    f64c:	e8 3f 4a ff ff       	call   4090 <_ZNSolsEm@plt>
    f651:	48 89 c2             	mov    %rax,%rdx
    f654:	48 8d 05 12 9f 00 00 	lea    0x9f12(%rip),%rax        # 1956d <_ZN6__pstl9execution2v1L5unseqE+0x22e>
    f65b:	48 89 c6             	mov    %rax,%rsi
    f65e:	48 89 d7             	mov    %rdx,%rdi
    f661:	e8 ea 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f666:	48 89 c2             	mov    %rax,%rdx
    f669:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f66d:	48 89 c6             	mov    %rax,%rsi
    f670:	48 89 d7             	mov    %rdx,%rdi
    f673:	e8 18 4a ff ff       	call   4090 <_ZNSolsEm@plt>
    f678:	48 89 c2             	mov    %rax,%rdx
    f67b:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f682:	48 89 c6             	mov    %rax,%rsi
    f685:	48 89 d7             	mov    %rdx,%rdi
    f688:	e8 73 4c ff ff       	call   4300 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    f68d:	48 89 c2             	mov    %rax,%rdx
    f690:	48 8d 05 df 9e 00 00 	lea    0x9edf(%rip),%rax        # 19576 <_ZN6__pstl9execution2v1L5unseqE+0x237>
    f697:	48 89 c6             	mov    %rax,%rsi
    f69a:	48 89 d7             	mov    %rdx,%rdi
    f69d:	e8 ae 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    f6a2:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f6a9:	48 83 c0 10          	add    $0x10,%rax
    f6ad:	48 8d 15 c5 9e 00 00 	lea    0x9ec5(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    f6b4:	48 89 d6             	mov    %rdx,%rsi
    f6b7:	48 89 c7             	mov    %rax,%rdi
    f6ba:	e8 91 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f6bf:	48 89 c2             	mov    %rax,%rdx
    f6c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f6c6:	48 89 c6             	mov    %rax,%rsi
    f6c9:	48 89 d7             	mov    %rdx,%rdi
    f6cc:	e8 bf 49 ff ff       	call   4090 <_ZNSolsEm@plt>
    f6d1:	48 89 c2             	mov    %rax,%rdx
    f6d4:	48 8d 05 a3 9e 00 00 	lea    0x9ea3(%rip),%rax        # 1957e <_ZN6__pstl9execution2v1L5unseqE+0x23f>
    f6db:	48 89 c6             	mov    %rax,%rsi
    f6de:	48 89 d7             	mov    %rdx,%rdi
    f6e1:	e8 6a 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    f6e6:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f6ed:	48 83 c0 10          	add    $0x10,%rax
    f6f1:	48 8d 15 9d 9e 00 00 	lea    0x9e9d(%rip),%rdx        # 19595 <_ZN6__pstl9execution2v1L5unseqE+0x256>
    f6f8:	48 89 d6             	mov    %rdx,%rsi
    f6fb:	48 89 c7             	mov    %rax,%rdi
    f6fe:	e8 4d 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f703:	48 89 c2             	mov    %rax,%rdx
    f706:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    f70c:	89 c6                	mov    %eax,%esi
    f70e:	48 89 d7             	mov    %rdx,%rdi
    f711:	e8 1a 4e ff ff       	call   4530 <_ZNSolsEj@plt>
    f716:	be 0a 00 00 00       	mov    $0xa,%esi
    f71b:	48 89 c7             	mov    %rax,%rdi
    f71e:	e8 3d 4d ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    f723:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f72a:	48 83 c0 10          	add    $0x10,%rax
    f72e:	48 8d 15 6f 9e 00 00 	lea    0x9e6f(%rip),%rdx        # 195a4 <_ZN6__pstl9execution2v1L5unseqE+0x265>
    f735:	48 89 d6             	mov    %rdx,%rsi
    f738:	48 89 c7             	mov    %rax,%rdi
    f73b:	e8 10 4c ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f740:	48 89 c2             	mov    %rax,%rdx
    f743:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f74a:	48 83 c0 24          	add    $0x24,%rax
    f74e:	48 89 c6             	mov    %rax,%rsi
    f751:	48 89 d7             	mov    %rdx,%rdi
    f754:	e8 f7 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f759:	be 0a 00 00 00       	mov    $0xa,%esi
    f75e:	48 89 c7             	mov    %rax,%rdi
    f761:	e8 fa 4c ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    f766:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f76d:	48 83 c0 10          	add    $0x10,%rax
    f771:	48 8d 15 3d 9e 00 00 	lea    0x9e3d(%rip),%rdx        # 195b5 <_ZN6__pstl9execution2v1L5unseqE+0x276>
    f778:	48 89 d6             	mov    %rdx,%rsi
    f77b:	48 89 c7             	mov    %rax,%rdi
    f77e:	e8 cd 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    f783:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    f789:	83 f8 04             	cmp    $0x4,%eax
    f78c:	0f 84 80 00 00 00    	je     f812 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    f792:	83 f8 04             	cmp    $0x4,%eax
    f795:	0f 8f 96 00 00 00    	jg     f831 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f79b:	83 f8 03             	cmp    $0x3,%eax
    f79e:	74 53                	je     f7f3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    f7a0:	83 f8 03             	cmp    $0x3,%eax
    f7a3:	0f 8f 88 00 00 00    	jg     f831 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f7a9:	83 f8 01             	cmp    $0x1,%eax
    f7ac:	74 07                	je     f7b5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    f7ae:	83 f8 02             	cmp    $0x2,%eax
    f7b1:	74 21                	je     f7d4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    f7b3:	eb 7c                	jmp    f831 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    f7b5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f7bc:	48 83 c0 10          	add    $0x10,%rax
    f7c0:	48 8d 15 ff 9d 00 00 	lea    0x9dff(%rip),%rdx        # 195c6 <_ZN6__pstl9execution2v1L5unseqE+0x287>
    f7c7:	48 89 d6             	mov    %rdx,%rsi
    f7ca:	48 89 c7             	mov    %rax,%rdi
    f7cd:	e8 7e 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f7d2:	eb 7b                	jmp    f84f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    f7d4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f7db:	48 83 c0 10          	add    $0x10,%rax
    f7df:	48 8d 15 f0 9d 00 00 	lea    0x9df0(%rip),%rdx        # 195d6 <_ZN6__pstl9execution2v1L5unseqE+0x297>
    f7e6:	48 89 d6             	mov    %rdx,%rsi
    f7e9:	48 89 c7             	mov    %rax,%rdi
    f7ec:	e8 5f 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f7f1:	eb 5c                	jmp    f84f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    f7f3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f7fa:	48 83 c0 10          	add    $0x10,%rax
    f7fe:	48 8d 15 df 9d 00 00 	lea    0x9ddf(%rip),%rdx        # 195e4 <_ZN6__pstl9execution2v1L5unseqE+0x2a5>
    f805:	48 89 d6             	mov    %rdx,%rsi
    f808:	48 89 c7             	mov    %rax,%rdi
    f80b:	e8 40 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f810:	eb 3d                	jmp    f84f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    f812:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f819:	48 83 c0 10          	add    $0x10,%rax
    f81d:	48 8d 15 cd 9d 00 00 	lea    0x9dcd(%rip),%rdx        # 195f1 <_ZN6__pstl9execution2v1L5unseqE+0x2b2>
    f824:	48 89 d6             	mov    %rdx,%rsi
    f827:	48 89 c7             	mov    %rax,%rdi
    f82a:	e8 21 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f82f:	eb 1e                	jmp    f84f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    f831:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f838:	48 83 c0 10          	add    $0x10,%rax
    f83c:	48 8d 15 b3 9d 00 00 	lea    0x9db3(%rip),%rdx        # 195f6 <_ZN6__pstl9execution2v1L5unseqE+0x2b7>
    f843:	48 89 d6             	mov    %rdx,%rsi
    f846:	48 89 c7             	mov    %rax,%rdi
    f849:	e8 02 4b ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    f84e:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    f84f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f856:	48 83 c0 10          	add    $0x10,%rax
    f85a:	48 8d 15 9c 9d 00 00 	lea    0x9d9c(%rip),%rdx        # 195fd <_ZN6__pstl9execution2v1L5unseqE+0x2be>
    f861:	48 89 d6             	mov    %rdx,%rsi
    f864:	48 89 c7             	mov    %rax,%rdi
    f867:	e8 e4 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f86c:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    f872:	89 d6                	mov    %edx,%esi
    f874:	48 89 c7             	mov    %rax,%rdi
    f877:	e8 04 4e ff ff       	call   4680 <_ZNSolsEi@plt>
    f87c:	be 0a 00 00 00       	mov    $0xa,%esi
    f881:	48 89 c7             	mov    %rax,%rdi
    f884:	e8 d7 4b ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    f889:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f890:	48 83 c0 10          	add    $0x10,%rax
    f894:	48 8d 15 71 9d 00 00 	lea    0x9d71(%rip),%rdx        # 1960c <_ZN6__pstl9execution2v1L5unseqE+0x2cd>
    f89b:	48 89 d6             	mov    %rdx,%rsi
    f89e:	48 89 c7             	mov    %rax,%rdi
    f8a1:	e8 aa 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8a6:	48 89 c2             	mov    %rax,%rdx
    f8a9:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f8b0:	48 83 c0 14          	add    $0x14,%rax
    f8b4:	48 89 c6             	mov    %rax,%rsi
    f8b7:	48 89 d7             	mov    %rdx,%rdi
    f8ba:	e8 91 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8bf:	be 0a 00 00 00       	mov    $0xa,%esi
    f8c4:	48 89 c7             	mov    %rax,%rdi
    f8c7:	e8 94 4b ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    f8cc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8d3:	48 83 c0 10          	add    $0x10,%rax
    f8d7:	48 8d 15 3f 9d 00 00 	lea    0x9d3f(%rip),%rdx        # 1961d <_ZN6__pstl9execution2v1L5unseqE+0x2de>
    f8de:	48 89 d6             	mov    %rdx,%rsi
    f8e1:	48 89 c7             	mov    %rax,%rdi
    f8e4:	e8 67 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8e9:	48 89 c2             	mov    %rax,%rdx
    f8ec:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f8f3:	48 05 14 01 00 00    	add    $0x114,%rax
    f8f9:	48 89 c6             	mov    %rax,%rsi
    f8fc:	48 89 d7             	mov    %rdx,%rdi
    f8ff:	e8 4c 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f904:	be 0a 00 00 00       	mov    $0xa,%esi
    f909:	48 89 c7             	mov    %rax,%rdi
    f90c:	e8 4f 4b ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    f911:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f918:	48 83 c0 10          	add    $0x10,%rax
    f91c:	48 8d 15 15 9d 00 00 	lea    0x9d15(%rip),%rdx        # 19638 <_ZN6__pstl9execution2v1L5unseqE+0x2f9>
    f923:	48 89 d6             	mov    %rdx,%rsi
    f926:	48 89 c7             	mov    %rax,%rdi
    f929:	e8 22 4a ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f92e:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    f931:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    f938:	48 89 c6             	mov    %rax,%rsi
    f93b:	48 89 d7             	mov    %rdx,%rdi
    f93e:	e8 4d 47 ff ff       	call   4090 <_ZNSolsEm@plt>
    f943:	be 0a 00 00 00       	mov    $0xa,%esi
    f948:	48 89 c7             	mov    %rax,%rdi
    f94b:	e8 10 4b ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    f950:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f957:	48 83 c0 10          	add    $0x10,%rax
    f95b:	48 8d 15 17 9c 00 00 	lea    0x9c17(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    f962:	48 89 d6             	mov    %rdx,%rsi
    f965:	48 89 c7             	mov    %rax,%rdi
    f968:	e8 e3 49 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f96d:	48 89 c2             	mov    %rax,%rdx
    f970:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f974:	48 89 c6             	mov    %rax,%rsi
    f977:	48 89 d7             	mov    %rdx,%rdi
    f97a:	e8 11 47 ff ff       	call   4090 <_ZNSolsEm@plt>
    f97f:	48 89 c2             	mov    %rax,%rdx
    f982:	48 8d 05 d7 9c 00 00 	lea    0x9cd7(%rip),%rax        # 19660 <_ZN6__pstl9execution2v1L5unseqE+0x321>
    f989:	48 89 c6             	mov    %rax,%rsi
    f98c:	48 89 d7             	mov    %rdx,%rdi
    f98f:	e8 bc 49 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    f994:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f998:	48 8b 08             	mov    (%rax),%rcx
    f99b:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    f9a2:	ba 00 00 00 00       	mov    $0x0,%edx
    f9a7:	48 89 ce             	mov    %rcx,%rsi
    f9aa:	48 89 c7             	mov    %rax,%rdi
    f9ad:	e8 e3 72 ff ff       	call   6c95 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    f9b2:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    f9b9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    f9bd:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f9c1:	48 89 c7             	mov    %rax,%rdi
    f9c4:	e8 39 0d 00 00       	call   10702 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f9c9:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    f9d0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    f9d4:	48 89 c7             	mov    %rax,%rdi
    f9d7:	e8 4c 0d 00 00       	call   10728 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f9dc:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    f9e3:	eb 5e                	jmp    fa43 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    f9e5:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    f9ec:	48 89 c7             	mov    %rax,%rdi
    f9ef:	e8 bc 0d 00 00       	call   107b0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f9f4:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    f9f8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9ff:	48 83 c0 10          	add    $0x10,%rax
    fa03:	48 8d 15 77 9c 00 00 	lea    0x9c77(%rip),%rdx        # 19681 <_ZN6__pstl9execution2v1L5unseqE+0x342>
    fa0a:	48 89 d6             	mov    %rdx,%rsi
    fa0d:	48 89 c7             	mov    %rax,%rdi
    fa10:	e8 3b 49 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa15:	48 89 c2             	mov    %rax,%rdx
    fa18:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    fa1c:	48 89 c6             	mov    %rax,%rsi
    fa1f:	48 89 d7             	mov    %rdx,%rdi
    fa22:	e8 29 49 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa27:	be 0a 00 00 00       	mov    $0xa,%esi
    fa2c:	48 89 c7             	mov    %rax,%rdi
    fa2f:	e8 2c 4a ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    fa34:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fa3b:	48 89 c7             	mov    %rax,%rdi
    fa3e:	e8 49 0d 00 00       	call   1078c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    fa43:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    fa4a:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fa51:	48 89 d6             	mov    %rdx,%rsi
    fa54:	48 89 c7             	mov    %rax,%rdi
    fa57:	e8 f5 0c 00 00       	call   10751 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fa5c:	84 c0                	test   %al,%al
    fa5e:	75 85                	jne    f9e5 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    fa60:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fa64:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fa68:	0f 85 fb 00 00 00    	jne    fb69 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    fa6e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa75:	48 83 c0 10          	add    $0x10,%rax
    fa79:	48 8d 15 f9 9a 00 00 	lea    0x9af9(%rip),%rdx        # 19579 <_ZN6__pstl9execution2v1L5unseqE+0x23a>
    fa80:	48 89 d6             	mov    %rdx,%rsi
    fa83:	48 89 c7             	mov    %rax,%rdi
    fa86:	e8 c5 48 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fa8b:	48 89 c2             	mov    %rax,%rdx
    fa8e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fa92:	48 89 c6             	mov    %rax,%rsi
    fa95:	48 89 d7             	mov    %rdx,%rdi
    fa98:	e8 f3 45 ff ff       	call   4090 <_ZNSolsEm@plt>
    fa9d:	48 89 c2             	mov    %rax,%rdx
    faa0:	48 8d 05 e1 9b 00 00 	lea    0x9be1(%rip),%rax        # 19688 <_ZN6__pstl9execution2v1L5unseqE+0x349>
    faa7:	48 89 c6             	mov    %rax,%rsi
    faaa:	48 89 d7             	mov    %rdx,%rdi
    faad:	e8 9e 48 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    fab2:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fab9:	48 05 88 00 00 00    	add    $0x88,%rax
    fabf:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fac3:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fac7:	48 89 c7             	mov    %rax,%rdi
    faca:	e8 91 07 00 00       	call   10260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    facf:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    fad6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fada:	48 89 c7             	mov    %rax,%rdi
    fadd:	e8 a4 07 00 00       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fae2:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    fae9:	eb 61                	jmp    fb4c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    faeb:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    faf2:	48 89 c7             	mov    %rax,%rdi
    faf5:	e8 10 08 00 00       	call   1030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fafa:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    fafe:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb05:	48 83 c0 10          	add    $0x10,%rax
    fb09:	48 8d 15 71 9b 00 00 	lea    0x9b71(%rip),%rdx        # 19681 <_ZN6__pstl9execution2v1L5unseqE+0x342>
    fb10:	48 89 d6             	mov    %rdx,%rsi
    fb13:	48 89 c7             	mov    %rax,%rdi
    fb16:	e8 35 48 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb1b:	48 89 c2             	mov    %rax,%rdx
    fb1e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fb22:	48 8b 00             	mov    (%rax),%rax
    fb25:	48 89 c6             	mov    %rax,%rsi
    fb28:	48 89 d7             	mov    %rdx,%rdi
    fb2b:	e8 20 48 ff ff       	call   4350 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb30:	be 0a 00 00 00       	mov    $0xa,%esi
    fb35:	48 89 c7             	mov    %rax,%rdi
    fb38:	e8 23 49 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    fb3d:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fb44:	48 89 c7             	mov    %rax,%rdi
    fb47:	e8 9e 07 00 00       	call   102ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fb4c:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    fb53:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fb5a:	48 89 d6             	mov    %rdx,%rsi
    fb5d:	48 89 c7             	mov    %rax,%rdi
    fb60:	e8 4a 07 00 00       	call   102af <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fb65:	84 c0                	test   %al,%al
    fb67:	75 82                	jne    faeb <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    fb69:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb70:	48 83 c0 10          	add    $0x10,%rax
    fb74:	be 0a 00 00 00       	mov    $0xa,%esi
    fb79:	48 89 c7             	mov    %rax,%rdi
    fb7c:	e8 df 48 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    fb81:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    fb86:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fb8d:	48 89 c7             	mov    %rax,%rdi
    fb90:	e8 75 82 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fb95:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fb9c:	48 89 c7             	mov    %rax,%rdi
    fb9f:	e8 2c 46 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    fba4:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fbab:	48 89 c7             	mov    %rax,%rdi
    fbae:	e8 07 0a 00 00       	call   105ba <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    fbb3:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    fbba:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fbc1:	48 89 d6             	mov    %rdx,%rsi
    fbc4:	48 89 c7             	mov    %rax,%rdi
    fbc7:	e8 b3 09 00 00       	call   1057f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fbcc:	84 c0                	test   %al,%al
    fbce:	0f 85 18 f9 ff ff    	jne    f4ec <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    fbd4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fbdb:	48 83 c0 10          	add    $0x10,%rax
    fbdf:	be 0a 00 00 00       	mov    $0xa,%esi
    fbe4:	48 89 c7             	mov    %rax,%rdi
    fbe7:	e8 74 48 ff ff       	call   4460 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fbec:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fbf3:	48 89 c7             	mov    %rax,%rdi
    fbf6:	e8 99 84 ff ff       	call   8094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    fbfb:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fc02:	48 89 c7             	mov    %rax,%rdi
    fc05:	e8 92 80 ff ff       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    fc0a:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fc11:	48 89 c7             	mov    %rax,%rdi
    fc14:	e8 f1 81 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fc19:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc20:	48 89 c7             	mov    %rax,%rdi
    fc23:	e8 58 44 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    fc28:	e9 cd 00 00 00       	jmp    fcfa <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    fc2d:	49 89 c4             	mov    %rax,%r12
    fc30:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fc37:	48 89 c7             	mov    %rax,%rdi
    fc3a:	e8 91 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fc3f:	eb 03                	jmp    fc44 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    fc41:	49 89 c4             	mov    %rax,%r12
    fc44:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fc4b:	48 89 c7             	mov    %rax,%rdi
    fc4e:	e8 7d 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fc53:	eb 03                	jmp    fc58 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    fc55:	49 89 c4             	mov    %rax,%r12
    fc58:	48 89 df             	mov    %rbx,%rdi
    fc5b:	e8 d0 45 ff ff       	call   4230 <__cxa_free_exception@plt>
    fc60:	4c 89 e3             	mov    %r12,%rbx
    fc63:	eb 7b                	jmp    fce0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    fc65:	48 89 c3             	mov    %rax,%rbx
    fc68:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fc6f:	48 89 c7             	mov    %rax,%rdi
    fc72:	e8 89 47 ff ff       	call   4400 <_ZNSaIcED1Ev@plt>
    fc77:	eb 2b                	jmp    fca4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    fc79:	48 89 c3             	mov    %rax,%rbx
    fc7c:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fc83:	48 89 c7             	mov    %rax,%rdi
    fc86:	e8 7f 81 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fc8b:	eb 03                	jmp    fc90 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    fc8d:	48 89 c3             	mov    %rax,%rbx
    fc90:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fc97:	48 89 c7             	mov    %rax,%rdi
    fc9a:	e8 31 45 ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fc9f:	eb 03                	jmp    fca4 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    fca1:	48 89 c3             	mov    %rax,%rbx
    fca4:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fcab:	48 89 c7             	mov    %rax,%rdi
    fcae:	e8 e1 83 ff ff       	call   8094 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    fcb3:	eb 03                	jmp    fcb8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    fcb5:	48 89 c3             	mov    %rax,%rbx
    fcb8:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fcbf:	48 89 c7             	mov    %rax,%rdi
    fcc2:	e8 d5 7f ff ff       	call   7c9c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    fcc7:	eb 03                	jmp    fccc <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    fcc9:	48 89 c3             	mov    %rax,%rbx
    fccc:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fcd3:	48 89 c7             	mov    %rax,%rdi
    fcd6:	e8 2f 81 ff ff       	call   7e0a <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fcdb:	eb 03                	jmp    fce0 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    fcdd:	48 89 c3             	mov    %rax,%rbx
    fce0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fce7:	48 89 c7             	mov    %rax,%rdi
    fcea:	e8 91 43 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    fcef:	48 89 d8             	mov    %rbx,%rax
    fcf2:	48 89 c7             	mov    %rax,%rdi
    fcf5:	e8 b6 49 ff ff       	call   46b0 <_Unwind_Resume@plt>
    fcfa:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    fd01:	5b                   	pop    %rbx
    fd02:	41 5c                	pop    %r12
    fd04:	5d                   	pop    %rbp
    fd05:	c3                   	ret

000000000000fd06 <_Z41__static_initialization_and_destruction_0ii>:
    fd06:	55                   	push   %rbp
    fd07:	48 89 e5             	mov    %rsp,%rbp
    fd0a:	48 83 ec 10          	sub    $0x10,%rsp
    fd0e:	89 7d fc             	mov    %edi,-0x4(%rbp)
    fd11:	89 75 f8             	mov    %esi,-0x8(%rbp)
    fd14:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    fd18:	75 3b                	jne    fd55 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fd1a:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    fd21:	75 32                	jne    fd55 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    fd23:	48 8d 05 ca 68 01 00 	lea    0x168ca(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    fd2a:	48 89 c7             	mov    %rax,%rdi
    fd2d:	e8 8e 48 ff ff       	call   45c0 <_ZNSt8ios_base4InitC1Ev@plt>
    fd32:	48 8d 05 57 66 01 00 	lea    0x16657(%rip),%rax        # 26390 <__dso_handle>
    fd39:	48 89 c2             	mov    %rax,%rdx
    fd3c:	48 8d 05 b1 68 01 00 	lea    0x168b1(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    fd43:	48 89 c6             	mov    %rax,%rsi
    fd46:	48 8b 05 7b 62 01 00 	mov    0x1627b(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    fd4d:	48 89 c7             	mov    %rax,%rdi
    fd50:	e8 9b 45 ff ff       	call   42f0 <__cxa_atexit@plt>
    fd55:	90                   	nop
    fd56:	c9                   	leave
    fd57:	c3                   	ret

000000000000fd58 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    fd58:	55                   	push   %rbp
    fd59:	48 89 e5             	mov    %rsp,%rbp
    fd5c:	be ff ff 00 00       	mov    $0xffff,%esi
    fd61:	bf 01 00 00 00       	mov    $0x1,%edi
    fd66:	e8 9b ff ff ff       	call   fd06 <_Z41__static_initialization_and_destruction_0ii>
    fd6b:	5d                   	pop    %rbp
    fd6c:	c3                   	ret
    fd6d:	90                   	nop

000000000000fd6e <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    fd6e:	55                   	push   %rbp
    fd6f:	48 89 e5             	mov    %rsp,%rbp
    fd72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd76:	48 8d 15 93 5f 01 00 	lea    0x15f93(%rip),%rdx        # 25d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    fd7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fd81:	48 89 10             	mov    %rdx,(%rax)
    fd84:	90                   	nop
    fd85:	5d                   	pop    %rbp
    fd86:	c3                   	ret

000000000000fd87 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    fd87:	55                   	push   %rbp
    fd88:	48 89 e5             	mov    %rsp,%rbp
    fd8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fd8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    fd93:	90                   	nop
    fd94:	5d                   	pop    %rbp
    fd95:	c3                   	ret

000000000000fd96 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    fd96:	55                   	push   %rbp
    fd97:	48 89 e5             	mov    %rsp,%rbp
    fd9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    fd9e:	48 8d 05 83 95 00 00 	lea    0x9583(%rip),%rax        # 19328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    fda5:	5d                   	pop    %rbp
    fda6:	c3                   	ret
    fda7:	90                   	nop

000000000000fda8 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    fda8:	55                   	push   %rbp
    fda9:	48 89 e5             	mov    %rsp,%rbp
    fdac:	48 83 ec 10          	sub    $0x10,%rsp
    fdb0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fdb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdb8:	48 89 c7             	mov    %rax,%rdi
    fdbb:	e8 ae ff ff ff       	call   fd6e <_ZNSt9exceptionC1Ev>
    fdc0:	48 8d 15 f9 5e 01 00 	lea    0x15ef9(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
    fdc7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fdcb:	48 89 10             	mov    %rdx,(%rax)
    fdce:	90                   	nop
    fdcf:	c9                   	leave
    fdd0:	c3                   	ret

000000000000fdd1 <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
    fdd1:	55                   	push   %rbp
    fdd2:	48 89 e5             	mov    %rsp,%rbp
    fdd5:	53                   	push   %rbx
    fdd6:	48 83 ec 08          	sub    $0x8,%rsp
    fdda:	bf 08 00 00 00       	mov    $0x8,%edi
    fddf:	e8 7c 43 ff ff       	call   4160 <__cxa_allocate_exception@plt>
    fde4:	48 89 c3             	mov    %rax,%rbx
    fde7:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    fdee:	48 89 df             	mov    %rbx,%rdi
    fdf1:	e8 b2 ff ff ff       	call   fda8 <_ZNSt19bad_optional_accessC1Ev>
    fdf6:	48 8d 05 93 5c 00 00 	lea    0x5c93(%rip),%rax        # 15a90 <_ZNSt19bad_optional_accessD1Ev>
    fdfd:	48 89 c2             	mov    %rax,%rdx
    fe00:	48 8d 05 51 5f 01 00 	lea    0x15f51(%rip),%rax        # 25d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
    fe07:	48 89 c6             	mov    %rax,%rsi
    fe0a:	48 89 df             	mov    %rbx,%rdi
    fe0d:	e8 3e 48 ff ff       	call   4650 <__cxa_throw@plt>

000000000000fe12 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
    fe12:	55                   	push   %rbp
    fe13:	48 89 e5             	mov    %rsp,%rbp
    fe16:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
    fe1a:	e8 3a 00 00 00       	call   fe59 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
    fe1f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    fe23:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
    fe27:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
    fe2b:	48 89 d6             	mov    %rdx,%rsi
    fe2e:	48 89 c7             	mov    %rax,%rdi
    fe31:	e8 06 00 00 00       	call   fe3c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
    fe36:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe3a:	c9                   	leave
    fe3b:	c3                   	ret

000000000000fe3c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
    fe3c:	55                   	push   %rbp
    fe3d:	48 89 e5             	mov    %rsp,%rbp
    fe40:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fe44:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
    fe48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    fe4c:	48 8b 10             	mov    (%rax),%rdx
    fe4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe53:	48 89 10             	mov    %rdx,(%rax)
    fe56:	90                   	nop
    fe57:	5d                   	pop    %rbp
    fe58:	c3                   	ret

000000000000fe59 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
    fe59:	55                   	push   %rbp
    fe5a:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
    fe5d:	b8 00 00 00 00       	mov    $0x0,%eax
    fe62:	5d                   	pop    %rbp
    fe63:	c3                   	ret

000000000000fe64 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
    fe64:	55                   	push   %rbp
    fe65:	48 89 e5             	mov    %rsp,%rbp
    fe68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
    fe6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe70:	48 8b 00             	mov    (%rax),%rax
    fe73:	5d                   	pop    %rbp
    fe74:	c3                   	ret
    fe75:	90                   	nop

000000000000fe76 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
    fe76:	55                   	push   %rbp
    fe77:	48 89 e5             	mov    %rsp,%rbp
    fe7a:	48 83 ec 10          	sub    $0x10,%rsp
    fe7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
    fe82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe86:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
    fe8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fe90:	48 89 c7             	mov    %rax,%rdi
    fe93:	e8 04 00 00 00       	call   fe9c <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
    fe98:	90                   	nop
    fe99:	c9                   	leave
    fe9a:	c3                   	ret
    fe9b:	90                   	nop

000000000000fe9c <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
    fe9c:	55                   	push   %rbp
    fe9d:	48 89 e5             	mov    %rsp,%rbp
    fea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
    fea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fea8:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    feaf:	00 
      _M_header._M_left = &_M_header;
    feb0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    feb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    feb8:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
    febc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    fec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fec4:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
    fec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fecc:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    fed3:	00 
    }
    fed4:	90                   	nop
    fed5:	5d                   	pop    %rbp
    fed6:	c3                   	ret
    fed7:	90                   	nop

000000000000fed8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
    fed8:	55                   	push   %rbp
    fed9:	48 89 e5             	mov    %rsp,%rbp
    fedc:	48 83 ec 10          	sub    $0x10,%rsp
    fee0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    fee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fee8:	48 89 c7             	mov    %rax,%rdi
    feeb:	e8 60 00 00 00       	call   ff50 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
    fef0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fef4:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
    fef8:	90                   	nop
    fef9:	c9                   	leave
    fefa:	c3                   	ret
    fefb:	90                   	nop

000000000000fefc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
    fefc:	55                   	push   %rbp
    fefd:	48 89 e5             	mov    %rsp,%rbp
    ff00:	48 83 ec 10          	sub    $0x10,%rsp
    ff04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff0c:	48 89 c7             	mov    %rax,%rdi
    ff0f:	e8 c4 ff ff ff       	call   fed8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
    ff14:	90                   	nop
    ff15:	c9                   	leave
    ff16:	c3                   	ret
    ff17:	90                   	nop

000000000000ff18 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    ff18:	55                   	push   %rbp
    ff19:	48 89 e5             	mov    %rsp,%rbp
    ff1c:	48 83 ec 10          	sub    $0x10,%rsp
    ff20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff28:	48 89 c7             	mov    %rax,%rdi
    ff2b:	e8 cc ff ff ff       	call   fefc <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
    ff30:	90                   	nop
    ff31:	c9                   	leave
    ff32:	c3                   	ret
    ff33:	90                   	nop

000000000000ff34 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
    ff34:	55                   	push   %rbp
    ff35:	48 89 e5             	mov    %rsp,%rbp
    ff38:	48 83 ec 10          	sub    $0x10,%rsp
    ff3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff44:	48 89 c7             	mov    %rax,%rdi
    ff47:	e8 cc ff ff ff       	call   ff18 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
    ff4c:	90                   	nop
    ff4d:	c9                   	leave
    ff4e:	c3                   	ret
    ff4f:	90                   	nop

000000000000ff50 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    ff50:	55                   	push   %rbp
    ff51:	48 89 e5             	mov    %rsp,%rbp
    ff54:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff58:	90                   	nop
    ff59:	5d                   	pop    %rbp
    ff5a:	c3                   	ret
    ff5b:	90                   	nop

000000000000ff5c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
    ff5c:	55                   	push   %rbp
    ff5d:	48 89 e5             	mov    %rsp,%rbp
    ff60:	48 83 ec 10          	sub    $0x10,%rsp
    ff64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ff6c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff74:	48 89 d6             	mov    %rdx,%rsi
    ff77:	48 89 c7             	mov    %rax,%rdi
    ff7a:	e8 87 06 00 00       	call   10606 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
    ff7f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff83:	c9                   	leave
    ff84:	c3                   	ret
    ff85:	90                   	nop

000000000000ff86 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
    ff86:	55                   	push   %rbp
    ff87:	48 89 e5             	mov    %rsp,%rbp
    ff8a:	48 83 ec 10          	sub    $0x10,%rsp
    ff8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ff92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ff96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ff9a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ff9e:	48 89 d6             	mov    %rdx,%rsi
    ffa1:	48 89 c7             	mov    %rax,%rdi
    ffa4:	e8 b3 ff ff ff       	call   ff5c <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
    ffa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffad:	c9                   	leave
    ffae:	c3                   	ret
    ffaf:	90                   	nop

000000000000ffb0 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
    ffb0:	55                   	push   %rbp
    ffb1:	48 89 e5             	mov    %rsp,%rbp
    ffb4:	48 83 ec 10          	sub    $0x10,%rsp
    ffb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
    ffbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffc0:	48 89 c7             	mov    %rax,%rdi
    ffc3:	e8 1a 00 00 00       	call   ffe2 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
    ffc8:	84 c0                	test   %al,%al
    ffca:	74 0e                	je     ffda <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
    ffcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffd0:	48 89 c7             	mov    %rax,%rdi
    ffd3:	e8 58 06 00 00       	call   10630 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
    ffd8:	eb 05                	jmp    ffdf <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
    ffda:	e8 f2 fd ff ff       	call   fdd1 <_ZSt27__throw_bad_optional_accessv>
      }
    ffdf:	c9                   	leave
    ffe0:	c3                   	ret
    ffe1:	90                   	nop

000000000000ffe2 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    ffe2:	55                   	push   %rbp
    ffe3:	48 89 e5             	mov    %rsp,%rbp
    ffe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    ffea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffee:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
    fff2:	5d                   	pop    %rbp
    fff3:	c3                   	ret

000000000000fff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
    fff4:	55                   	push   %rbp
    fff5:	48 89 e5             	mov    %rsp,%rbp
    fff8:	48 83 ec 10          	sub    $0x10,%rsp
    fffc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10004:	48 89 c7             	mov    %rax,%rdi
   10007:	e8 a0 06 00 00       	call   106ac <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   1000c:	90                   	nop
   1000d:	c9                   	leave
   1000e:	c3                   	ret
   1000f:	90                   	nop

0000000000010010 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   10010:	55                   	push   %rbp
   10011:	48 89 e5             	mov    %rsp,%rbp
   10014:	48 83 ec 10          	sub    $0x10,%rsp
   10018:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1001c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10020:	48 89 c7             	mov    %rax,%rdi
   10023:	e8 4c 06 00 00       	call   10674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   10028:	90                   	nop
   10029:	c9                   	leave
   1002a:	c3                   	ret
   1002b:	90                   	nop

000000000001002c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   1002c:	55                   	push   %rbp
   1002d:	48 89 e5             	mov    %rsp,%rbp
   10030:	48 83 ec 10          	sub    $0x10,%rsp
   10034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1003c:	48 89 c7             	mov    %rax,%rdi
   1003f:	e8 cc ff ff ff       	call   10010 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   10044:	90                   	nop
   10045:	c9                   	leave
   10046:	c3                   	ret
   10047:	90                   	nop

0000000000010048 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   10048:	55                   	push   %rbp
   10049:	48 89 e5             	mov    %rsp,%rbp
   1004c:	48 83 ec 10          	sub    $0x10,%rsp
   10050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10058:	48 89 c7             	mov    %rax,%rdi
   1005b:	e8 68 06 00 00       	call   106c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   10060:	90                   	nop
   10061:	c9                   	leave
   10062:	c3                   	ret
   10063:	90                   	nop

0000000000010064 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   10064:	55                   	push   %rbp
   10065:	48 89 e5             	mov    %rsp,%rbp
   10068:	48 83 ec 10          	sub    $0x10,%rsp
   1006c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10070:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10074:	48 89 c7             	mov    %rax,%rdi
   10077:	e8 de 0e 00 00       	call   10f5a <_ZNSaIP13VkImageView_TED1Ev>
   1007c:	90                   	nop
   1007d:	c9                   	leave
   1007e:	c3                   	ret
   1007f:	90                   	nop

0000000000010080 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   10080:	55                   	push   %rbp
   10081:	48 89 e5             	mov    %rsp,%rbp
   10084:	48 83 ec 10          	sub    $0x10,%rsp
   10088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1008c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10090:	48 89 c7             	mov    %rax,%rdi
   10093:	e8 9a 0e 00 00       	call   10f32 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   10098:	90                   	nop
   10099:	c9                   	leave
   1009a:	c3                   	ret
   1009b:	90                   	nop

000000000001009c <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   1009c:	55                   	push   %rbp
   1009d:	48 89 e5             	mov    %rsp,%rbp
   100a0:	48 83 ec 10          	sub    $0x10,%rsp
   100a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100ac:	48 89 c7             	mov    %rax,%rdi
   100af:	e8 cc ff ff ff       	call   10080 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   100b4:	90                   	nop
   100b5:	c9                   	leave
   100b6:	c3                   	ret
   100b7:	90                   	nop

00000000000100b8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   100b8:	55                   	push   %rbp
   100b9:	48 89 e5             	mov    %rsp,%rbp
   100bc:	48 83 ec 10          	sub    $0x10,%rsp
   100c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100c8:	48 89 c7             	mov    %rax,%rdi
   100cb:	e8 38 0f 00 00       	call   11008 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   100d0:	90                   	nop
   100d1:	c9                   	leave
   100d2:	c3                   	ret
   100d3:	90                   	nop

00000000000100d4 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   100d4:	55                   	push   %rbp
   100d5:	48 89 e5             	mov    %rsp,%rbp
   100d8:	48 83 ec 10          	sub    $0x10,%rsp
   100dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e4:	48 89 c7             	mov    %rax,%rdi
   100e7:	e8 cc ff ff ff       	call   100b8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   100ec:	90                   	nop
   100ed:	c9                   	leave
   100ee:	c3                   	ret
   100ef:	90                   	nop

00000000000100f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   100f0:	55                   	push   %rbp
   100f1:	48 89 e5             	mov    %rsp,%rbp
   100f4:	48 83 ec 10          	sub    $0x10,%rsp
   100f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   100fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10100:	48 89 c7             	mov    %rax,%rdi
   10103:	e8 50 0f 00 00       	call   11058 <_ZNSaIP12VkPipeline_TED1Ev>
   10108:	90                   	nop
   10109:	c9                   	leave
   1010a:	c3                   	ret
   1010b:	90                   	nop

000000000001010c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   1010c:	55                   	push   %rbp
   1010d:	48 89 e5             	mov    %rsp,%rbp
   10110:	48 83 ec 10          	sub    $0x10,%rsp
   10114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10118:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1011c:	48 89 c7             	mov    %rax,%rdi
   1011f:	e8 0c 0f 00 00       	call   11030 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1Ev>
   10124:	90                   	nop
   10125:	c9                   	leave
   10126:	c3                   	ret
   10127:	90                   	nop

0000000000010128 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1Ev>:
      vector() = default;
   10128:	55                   	push   %rbp
   10129:	48 89 e5             	mov    %rsp,%rbp
   1012c:	48 83 ec 10          	sub    $0x10,%rsp
   10130:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10134:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10138:	48 89 c7             	mov    %rax,%rdi
   1013b:	e8 cc ff ff ff       	call   1010c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1Ev>
   10140:	90                   	nop
   10141:	c9                   	leave
   10142:	c3                   	ret
   10143:	90                   	nop

0000000000010144 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   10144:	55                   	push   %rbp
   10145:	48 89 e5             	mov    %rsp,%rbp
   10148:	53                   	push   %rbx
   10149:	48 83 ec 38          	sub    $0x38,%rsp
   1014d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   10151:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   10155:	e8 b6 43 ff ff       	call   4510 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1015a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1015e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10162:	48 89 de             	mov    %rbx,%rsi
   10165:	48 89 c7             	mov    %rax,%rdi
   10168:	e8 f3 10 00 00       	call   11260 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   1016d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   10171:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10175:	48 89 c7             	mov    %rax,%rdi
   10178:	e8 28 11 00 00       	call   112a5 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   1017d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   10181:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   10185:	48 89 c7             	mov    %rax,%rdi
   10188:	e8 33 11 00 00       	call   112c0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   1018d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10191:	c9                   	leave
   10192:	c3                   	ret
   10193:	90                   	nop

0000000000010194 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   10194:	55                   	push   %rbp
   10195:	48 89 e5             	mov    %rsp,%rbp
   10198:	53                   	push   %rbx
   10199:	48 83 ec 38          	sub    $0x38,%rsp
   1019d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   101a1:	48 89 f0             	mov    %rsi,%rax
   101a4:	48 89 d6             	mov    %rdx,%rsi
   101a7:	48 89 f2             	mov    %rsi,%rdx
   101aa:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   101ae:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   101b2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   101b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101ba:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   101be:	48 89 d6             	mov    %rdx,%rsi
   101c1:	48 89 c7             	mov    %rax,%rdi
   101c4:	e8 3d 12 00 00       	call   11406 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   101c9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   101cd:	48 89 c7             	mov    %rax,%rdi
   101d0:	e8 69 12 00 00       	call   1143e <_ZNKSt16initializer_listIPKcE3endEv>
   101d5:	48 89 c3             	mov    %rax,%rbx
   101d8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   101dc:	48 89 c7             	mov    %rax,%rdi
   101df:	e8 48 12 00 00       	call   1142c <_ZNKSt16initializer_listIPKcE5beginEv>
   101e4:	48 89 c1             	mov    %rax,%rcx
   101e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   101eb:	48 89 da             	mov    %rbx,%rdx
   101ee:	48 89 ce             	mov    %rcx,%rsi
   101f1:	48 89 c7             	mov    %rax,%rdi
   101f4:	e8 ab 12 00 00       	call   114a4 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   101f9:	eb 1a                	jmp    10215 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   101fb:	48 89 c3             	mov    %rax,%rbx
   101fe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10202:	48 89 c7             	mov    %rax,%rdi
   10205:	e8 8e 7d ff ff       	call   7f98 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   1020a:	48 89 d8             	mov    %rbx,%rax
   1020d:	48 89 c7             	mov    %rax,%rdi
   10210:	e8 9b 44 ff ff       	call   46b0 <_Unwind_Resume@plt>
   10215:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10219:	c9                   	leave
   1021a:	c3                   	ret
   1021b:	90                   	nop

000000000001021c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1021c:	55                   	push   %rbp
   1021d:	48 89 e5             	mov    %rsp,%rbp
   10220:	48 83 ec 10          	sub    $0x10,%rsp
   10224:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10228:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1022c:	48 89 c7             	mov    %rax,%rdi
   1022f:	e8 1c 8c ff ff       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10234:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1023b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1023f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10243:	48 8b 00             	mov    (%rax),%rax
   10246:	48 89 ce             	mov    %rcx,%rsi
   10249:	48 89 c7             	mov    %rax,%rdi
   1024c:	e8 02 13 00 00       	call   11553 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   10251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10255:	48 89 c7             	mov    %rax,%rdi
   10258:	e8 3b 7d ff ff       	call   7f98 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   1025d:	90                   	nop
   1025e:	c9                   	leave
   1025f:	c3                   	ret

0000000000010260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10260:	55                   	push   %rbp
   10261:	48 89 e5             	mov    %rsp,%rbp
   10264:	48 83 ec 20          	sub    $0x20,%rsp
   10268:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1026c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10270:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10274:	48 89 d6             	mov    %rdx,%rsi
   10277:	48 89 c7             	mov    %rax,%rdi
   1027a:	e8 ff 12 00 00       	call   1157e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1027f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10283:	c9                   	leave
   10284:	c3                   	ret
   10285:	90                   	nop

0000000000010286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10286:	55                   	push   %rbp
   10287:	48 89 e5             	mov    %rsp,%rbp
   1028a:	48 83 ec 20          	sub    $0x20,%rsp
   1028e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10292:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10296:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1029a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1029e:	48 89 d6             	mov    %rdx,%rsi
   102a1:	48 89 c7             	mov    %rax,%rdi
   102a4:	e8 d5 12 00 00       	call   1157e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   102a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ad:	c9                   	leave
   102ae:	c3                   	ret

00000000000102af <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   102af:	55                   	push   %rbp
   102b0:	48 89 e5             	mov    %rsp,%rbp
   102b3:	53                   	push   %rbx
   102b4:	48 83 ec 18          	sub    $0x18,%rsp
   102b8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   102bc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   102c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   102c4:	48 89 c7             	mov    %rax,%rdi
   102c7:	e8 d0 12 00 00       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   102cc:	48 8b 18             	mov    (%rax),%rbx
   102cf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   102d3:	48 89 c7             	mov    %rax,%rdi
   102d6:	e8 c1 12 00 00       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   102db:	48 8b 00             	mov    (%rax),%rax
   102de:	48 39 c3             	cmp    %rax,%rbx
   102e1:	0f 95 c0             	setne  %al
   102e4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   102e8:	c9                   	leave
   102e9:	c3                   	ret

00000000000102ea <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   102ea:	55                   	push   %rbp
   102eb:	48 89 e5             	mov    %rsp,%rbp
   102ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   102f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102f6:	48 8b 00             	mov    (%rax),%rax
   102f9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   102fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10301:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10304:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10308:	5d                   	pop    %rbp
   10309:	c3                   	ret

000000000001030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1030a:	55                   	push   %rbp
   1030b:	48 89 e5             	mov    %rsp,%rbp
   1030e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10312:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10316:	48 8b 00             	mov    (%rax),%rax
   10319:	5d                   	pop    %rbp
   1031a:	c3                   	ret
   1031b:	90                   	nop

000000000001031c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   1031c:	55                   	push   %rbp
   1031d:	48 89 e5             	mov    %rsp,%rbp
   10320:	53                   	push   %rbx
   10321:	48 83 ec 18          	sub    $0x18,%rsp
   10325:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10329:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1032d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10331:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10339:	48 8b 40 10          	mov    0x10(%rax),%rax
   1033d:	48 39 c2             	cmp    %rax,%rdx
   10340:	74 3c                	je     1037e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10342:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10346:	48 89 c7             	mov    %rax,%rdi
   10349:	e8 5c 12 00 00       	call   115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1034e:	48 89 c2             	mov    %rax,%rdx
   10351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10355:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10359:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1035d:	48 89 ce             	mov    %rcx,%rsi
   10360:	48 89 c7             	mov    %rax,%rdi
   10363:	e8 50 12 00 00       	call   115b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   10368:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1036c:	48 8b 40 08          	mov    0x8(%rax),%rax
   10370:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10374:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10378:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1037c:	eb 30                	jmp    103ae <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   1037e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10382:	48 89 c7             	mov    %rax,%rdi
   10385:	e8 20 12 00 00       	call   115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1038a:	48 89 c3             	mov    %rax,%rbx
   1038d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10391:	48 89 c7             	mov    %rax,%rdi
   10394:	e8 ed fe ff ff       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   10399:	48 89 c1             	mov    %rax,%rcx
   1039c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103a0:	48 89 da             	mov    %rbx,%rdx
   103a3:	48 89 ce             	mov    %rcx,%rsi
   103a6:	48 89 c7             	mov    %rax,%rdi
   103a9:	e8 44 12 00 00       	call   115f2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   103ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   103b2:	48 89 c7             	mov    %rax,%rdi
   103b5:	e8 ca 13 00 00       	call   11784 <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   103ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   103be:	c9                   	leave
   103bf:	c3                   	ret

00000000000103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   103c0:	55                   	push   %rbp
   103c1:	48 89 e5             	mov    %rsp,%rbp
   103c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   103c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103cc:	48 8b 50 08          	mov    0x8(%rax),%rdx
   103d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103d4:	48 8b 00             	mov    (%rax),%rax
   103d7:	48 29 c2             	sub    %rax,%rdx
   103da:	48 89 d0             	mov    %rdx,%rax
   103dd:	48 c1 f8 03          	sar    $0x3,%rax
   103e1:	5d                   	pop    %rbp
   103e2:	c3                   	ret
   103e3:	90                   	nop

00000000000103e4 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   103e4:	55                   	push   %rbp
   103e5:	48 89 e5             	mov    %rsp,%rbp
   103e8:	48 83 ec 10          	sub    $0x10,%rsp
   103ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   103f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103f4:	48 8b 10             	mov    (%rax),%rdx
   103f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   103fb:	48 89 d6             	mov    %rdx,%rsi
   103fe:	48 89 c7             	mov    %rax,%rdi
   10401:	e8 be 13 00 00       	call   117c4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10406:	c9                   	leave
   10407:	c3                   	ret

0000000000010408 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10408:	55                   	push   %rbp
   10409:	48 89 e5             	mov    %rsp,%rbp
   1040c:	48 83 ec 10          	sub    $0x10,%rsp
   10410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10418:	48 8b 10             	mov    (%rax),%rdx
   1041b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1041f:	48 89 d6             	mov    %rdx,%rsi
   10422:	48 89 c7             	mov    %rax,%rdi
   10425:	e8 9a 13 00 00       	call   117c4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1042a:	c9                   	leave
   1042b:	c3                   	ret

000000000001042c <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1042c:	55                   	push   %rbp
   1042d:	48 89 e5             	mov    %rsp,%rbp
   10430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10438:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1043c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10440:	48 8b 00             	mov    (%rax),%rax
   10443:	48 29 c2             	sub    %rax,%rdx
   10446:	48 c1 fa 02          	sar    $0x2,%rdx
   1044a:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   10451:	db b6 6d 
   10454:	48 0f af c2          	imul   %rdx,%rax
   10458:	5d                   	pop    %rbp
   10459:	c3                   	ret

000000000001045a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   1045a:	55                   	push   %rbp
   1045b:	48 89 e5             	mov    %rsp,%rbp
   1045e:	48 83 ec 10          	sub    $0x10,%rsp
   10462:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10466:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1046a:	48 89 c7             	mov    %rax,%rdi
   1046d:	e8 3a 8f ff ff       	call   93ac <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10472:	c9                   	leave
   10473:	c3                   	ret

0000000000010474 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   10474:	55                   	push   %rbp
   10475:	48 89 e5             	mov    %rsp,%rbp
   10478:	48 83 ec 10          	sub    $0x10,%rsp
   1047c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   10480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10484:	48 89 c7             	mov    %rax,%rdi
   10487:	e8 20 8f ff ff       	call   93ac <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   1048c:	84 c0                	test   %al,%al
   1048e:	74 0e                	je     1049e <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   10490:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10494:	48 89 c7             	mov    %rax,%rdi
   10497:	e8 22 8f ff ff       	call   93be <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   1049c:	eb 05                	jmp    104a3 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   1049e:	e8 2e f9 ff ff       	call   fdd1 <_ZSt27__throw_bad_optional_accessv>
      }
   104a3:	c9                   	leave
   104a4:	c3                   	ret
   104a5:	90                   	nop

00000000000104a6 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   104a6:	55                   	push   %rbp
   104a7:	48 89 e5             	mov    %rsp,%rbp
   104aa:	48 83 ec 20          	sub    $0x20,%rsp
   104ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   104b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   104b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   104ba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   104be:	48 89 c7             	mov    %rax,%rdi
   104c1:	e8 10 13 00 00       	call   117d6 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   104c6:	8b 10                	mov    (%rax),%edx
   104c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104cc:	89 10                	mov    %edx,(%rax)
   104ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104d2:	48 89 c7             	mov    %rax,%rdi
   104d5:	e8 0a 13 00 00       	call   117e4 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   104da:	48 89 c1             	mov    %rax,%rcx
   104dd:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   104e1:	48 8b 01             	mov    (%rcx),%rax
   104e4:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   104e8:	48 89 46 04          	mov    %rax,0x4(%rsi)
   104ec:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   104f0:	48 8b 41 10          	mov    0x10(%rcx),%rax
   104f4:	48 89 46 14          	mov    %rax,0x14(%rsi)
   104f8:	90                   	nop
   104f9:	c9                   	leave
   104fa:	c3                   	ret
   104fb:	90                   	nop

00000000000104fc <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   104fc:	55                   	push   %rbp
   104fd:	48 89 e5             	mov    %rsp,%rbp
   10500:	53                   	push   %rbx
   10501:	48 83 ec 18          	sub    $0x18,%rsp
   10505:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10509:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   1050d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10515:	48 89 c7             	mov    %rax,%rdi
   10518:	e8 d5 12 00 00       	call   117f2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1051d:	48 89 c6             	mov    %rax,%rsi
   10520:	48 89 df             	mov    %rbx,%rdi
   10523:	e8 fe 12 00 00       	call   11826 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10528:	90                   	nop
   10529:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1052d:	c9                   	leave
   1052e:	c3                   	ret
   1052f:	90                   	nop

0000000000010530 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10530:	55                   	push   %rbp
   10531:	48 89 e5             	mov    %rsp,%rbp
   10534:	48 83 ec 20          	sub    $0x20,%rsp
   10538:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1053c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10540:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10544:	48 89 d6             	mov    %rdx,%rsi
   10547:	48 89 c7             	mov    %rax,%rdi
   1054a:	e8 0b 13 00 00       	call   1185a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1054f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10553:	c9                   	leave
   10554:	c3                   	ret
   10555:	90                   	nop

0000000000010556 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10556:	55                   	push   %rbp
   10557:	48 89 e5             	mov    %rsp,%rbp
   1055a:	48 83 ec 20          	sub    $0x20,%rsp
   1055e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10562:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10566:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1056a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1056e:	48 89 d6             	mov    %rdx,%rsi
   10571:	48 89 c7             	mov    %rax,%rdi
   10574:	e8 e1 12 00 00       	call   1185a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1057d:	c9                   	leave
   1057e:	c3                   	ret

000000000001057f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1057f:	55                   	push   %rbp
   10580:	48 89 e5             	mov    %rsp,%rbp
   10583:	53                   	push   %rbx
   10584:	48 83 ec 18          	sub    $0x18,%rsp
   10588:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1058c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10590:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10594:	48 89 c7             	mov    %rax,%rdi
   10597:	e8 dc 12 00 00       	call   11878 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1059c:	48 8b 18             	mov    (%rax),%rbx
   1059f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105a3:	48 89 c7             	mov    %rax,%rdi
   105a6:	e8 cd 12 00 00       	call   11878 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   105ab:	48 8b 00             	mov    (%rax),%rax
   105ae:	48 39 c3             	cmp    %rax,%rbx
   105b1:	0f 95 c0             	setne  %al
   105b4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   105b8:	c9                   	leave
   105b9:	c3                   	ret

00000000000105ba <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   105ba:	55                   	push   %rbp
   105bb:	48 89 e5             	mov    %rsp,%rbp
   105be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   105c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105c6:	48 8b 00             	mov    (%rax),%rax
   105c9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   105cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105d1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   105d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   105d8:	5d                   	pop    %rbp
   105d9:	c3                   	ret

00000000000105da <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   105da:	55                   	push   %rbp
   105db:	48 89 e5             	mov    %rsp,%rbp
   105de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   105e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105e6:	48 8b 00             	mov    (%rax),%rax
   105e9:	5d                   	pop    %rbp
   105ea:	c3                   	ret
   105eb:	90                   	nop

00000000000105ec <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   105ec:	55                   	push   %rbp
   105ed:	48 89 e5             	mov    %rsp,%rbp
   105f0:	48 83 ec 10          	sub    $0x10,%rsp
   105f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   105f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105fc:	48 89 c7             	mov    %rax,%rdi
   105ff:	e8 de f9 ff ff       	call   ffe2 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10604:	c9                   	leave
   10605:	c3                   	ret

0000000000010606 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10606:	55                   	push   %rbp
   10607:	48 89 e5             	mov    %rsp,%rbp
   1060a:	48 83 ec 10          	sub    $0x10,%rsp
   1060e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10616:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1061a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1061e:	48 89 d6             	mov    %rdx,%rsi
   10621:	48 89 c7             	mov    %rax,%rdi
   10624:	e8 5d 12 00 00       	call   11886 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10629:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1062d:	c9                   	leave
   1062e:	c3                   	ret
   1062f:	90                   	nop

0000000000010630 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   10630:	55                   	push   %rbp
   10631:	48 89 e5             	mov    %rsp,%rbp
   10634:	48 83 ec 10          	sub    $0x10,%rsp
   10638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   1063c:	e8 fd 43 ff ff       	call   4a3e <_ZSt23__is_constant_evaluatedv>
   10641:	84 c0                	test   %al,%al
   10643:	74 1a                	je     1065f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10645:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10649:	48 89 c7             	mov    %rax,%rdi
   1064c:	e8 91 f9 ff ff       	call   ffe2 <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10651:	83 f0 01             	xor    $0x1,%eax
   10654:	84 c0                	test   %al,%al
   10656:	74 07                	je     1065f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10658:	b8 01 00 00 00       	mov    $0x1,%eax
   1065d:	eb 05                	jmp    10664 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   1065f:	b8 00 00 00 00       	mov    $0x0,%eax
   10664:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   10666:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1066a:	48 89 c7             	mov    %rax,%rdi
   1066d:	e8 a6 12 00 00       	call   11918 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   10672:	c9                   	leave
   10673:	c3                   	ret

0000000000010674 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   10674:	55                   	push   %rbp
   10675:	48 89 e5             	mov    %rsp,%rbp
   10678:	48 83 ec 10          	sub    $0x10,%rsp
   1067c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   10680:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10684:	48 89 c7             	mov    %rax,%rdi
   10687:	e8 9a 12 00 00       	call   11926 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1068c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10690:	48 89 c7             	mov    %rax,%rdi
   10693:	e8 aa 12 00 00       	call   11942 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   10698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1069c:	48 83 c0 08          	add    $0x8,%rax
   106a0:	48 89 c7             	mov    %rax,%rdi
   106a3:	e8 ce f7 ff ff       	call   fe76 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   106a8:	90                   	nop
   106a9:	c9                   	leave
   106aa:	c3                   	ret
   106ab:	90                   	nop

00000000000106ac <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   106ac:	55                   	push   %rbp
   106ad:	48 89 e5             	mov    %rsp,%rbp
   106b0:	48 83 ec 10          	sub    $0x10,%rsp
   106b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106bc:	48 89 c7             	mov    %rax,%rdi
   106bf:	e8 8a 12 00 00       	call   1194e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   106c4:	90                   	nop
   106c5:	c9                   	leave
   106c6:	c3                   	ret
   106c7:	90                   	nop

00000000000106c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   106c8:	55                   	push   %rbp
   106c9:	48 89 e5             	mov    %rsp,%rbp
   106cc:	48 83 ec 10          	sub    $0x10,%rsp
   106d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   106d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106d8:	48 89 c7             	mov    %rax,%rdi
   106db:	e8 e0 12 00 00       	call   119c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   106e0:	48 89 c2             	mov    %rax,%rdx
   106e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106e7:	48 89 d6             	mov    %rdx,%rsi
   106ea:	48 89 c7             	mov    %rax,%rdi
   106ed:	e8 68 12 00 00       	call   1195a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   106f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106f6:	48 89 c7             	mov    %rax,%rdi
   106f9:	e8 f6 f8 ff ff       	call   fff4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   106fe:	90                   	nop
   106ff:	c9                   	leave
   10700:	c3                   	ret
   10701:	90                   	nop

0000000000010702 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10702:	55                   	push   %rbp
   10703:	48 89 e5             	mov    %rsp,%rbp
   10706:	48 83 ec 20          	sub    $0x20,%rsp
   1070a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1070e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10712:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10716:	48 89 d6             	mov    %rdx,%rsi
   10719:	48 89 c7             	mov    %rax,%rdi
   1071c:	e8 b9 12 00 00       	call   119da <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10725:	c9                   	leave
   10726:	c3                   	ret
   10727:	90                   	nop

0000000000010728 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10728:	55                   	push   %rbp
   10729:	48 89 e5             	mov    %rsp,%rbp
   1072c:	48 83 ec 20          	sub    $0x20,%rsp
   10730:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10734:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10738:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1073c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10740:	48 89 d6             	mov    %rdx,%rsi
   10743:	48 89 c7             	mov    %rax,%rdi
   10746:	e8 8f 12 00 00       	call   119da <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1074b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1074f:	c9                   	leave
   10750:	c3                   	ret

0000000000010751 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10751:	55                   	push   %rbp
   10752:	48 89 e5             	mov    %rsp,%rbp
   10755:	53                   	push   %rbx
   10756:	48 83 ec 18          	sub    $0x18,%rsp
   1075a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1075e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10766:	48 89 c7             	mov    %rax,%rdi
   10769:	e8 8a 12 00 00       	call   119f8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   1076e:	48 8b 18             	mov    (%rax),%rbx
   10771:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10775:	48 89 c7             	mov    %rax,%rdi
   10778:	e8 7b 12 00 00       	call   119f8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   1077d:	48 8b 00             	mov    (%rax),%rax
   10780:	48 39 c3             	cmp    %rax,%rbx
   10783:	0f 95 c0             	setne  %al
   10786:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1078a:	c9                   	leave
   1078b:	c3                   	ret

000000000001078c <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1078c:	55                   	push   %rbp
   1078d:	48 89 e5             	mov    %rsp,%rbp
   10790:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10798:	48 8b 00             	mov    (%rax),%rax
   1079b:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   107a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107a6:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   107a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   107ad:	5d                   	pop    %rbp
   107ae:	c3                   	ret
   107af:	90                   	nop

00000000000107b0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   107b0:	55                   	push   %rbp
   107b1:	48 89 e5             	mov    %rsp,%rbp
   107b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   107b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107bc:	48 8b 00             	mov    (%rax),%rax
   107bf:	5d                   	pop    %rbp
   107c0:	c3                   	ret
   107c1:	90                   	nop

00000000000107c2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   107c2:	55                   	push   %rbp
   107c3:	48 89 e5             	mov    %rsp,%rbp
   107c6:	53                   	push   %rbx
   107c7:	48 83 ec 48          	sub    $0x48,%rsp
   107cb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   107cf:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   107d3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   107d7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   107db:	48 89 d6             	mov    %rdx,%rsi
   107de:	48 89 c7             	mov    %rax,%rdi
   107e1:	e8 20 12 00 00       	call   11a06 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   107e6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   107ea:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   107ee:	48 89 c7             	mov    %rax,%rdi
   107f1:	e8 36 12 00 00       	call   11a2c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   107f6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   107fa:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   107fe:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10802:	48 89 d6             	mov    %rdx,%rsi
   10805:	48 89 c7             	mov    %rax,%rdi
   10808:	e8 39 12 00 00       	call   11a46 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   1080d:	84 c0                	test   %al,%al
   1080f:	75 32                	jne    10843 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   10811:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10815:	48 89 c7             	mov    %rax,%rdi
   10818:	e8 4b 12 00 00       	call   11a68 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   1081d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10821:	48 89 c7             	mov    %rax,%rdi
   10824:	e8 5b 12 00 00       	call   11a84 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10829:	48 89 c2             	mov    %rax,%rdx
   1082c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10830:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   10834:	48 89 ce             	mov    %rcx,%rsi
   10837:	48 89 c7             	mov    %rax,%rdi
   1083a:	e8 63 12 00 00       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1083f:	84 c0                	test   %al,%al
   10841:	74 07                	je     1084a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   10843:	b8 01 00 00 00       	mov    $0x1,%eax
   10848:	eb 05                	jmp    1084f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   1084a:	b8 00 00 00 00       	mov    $0x0,%eax
   1084f:	84 c0                	test   %al,%al
   10851:	74 5d                	je     108b0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10853:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   10857:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   1085b:	48 89 c7             	mov    %rax,%rdi
   1085e:	e8 94 0b 00 00       	call   113f7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   10863:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10866:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1086a:	48 89 d6             	mov    %rdx,%rsi
   1086d:	48 89 c7             	mov    %rax,%rdi
   10870:	e8 56 12 00 00       	call   11acb <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   10875:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10879:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   1087d:	48 89 d6             	mov    %rdx,%rsi
   10880:	48 89 c7             	mov    %rax,%rdi
   10883:	e8 78 12 00 00       	call   11b00 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   10888:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   1088c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10890:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10894:	49 89 c8             	mov    %rcx,%r8
   10897:	48 89 d1             	mov    %rdx,%rcx
   1089a:	48 8d 15 1f 8f 00 00 	lea    0x8f1f(%rip),%rdx        # 197c0 <_ZSt19piecewise_construct>
   108a1:	48 89 c6             	mov    %rax,%rsi
   108a4:	48 89 df             	mov    %rbx,%rdi
   108a7:	e8 72 12 00 00       	call   11b1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   108ac:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   108b0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   108b4:	48 89 c7             	mov    %rax,%rdi
   108b7:	e8 c8 11 00 00       	call   11a84 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   108bc:	48 83 c0 20          	add    $0x20,%rax
      }
   108c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   108c4:	c9                   	leave
   108c5:	c3                   	ret

00000000000108c6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   108c6:	55                   	push   %rbp
   108c7:	48 89 e5             	mov    %rsp,%rbp
   108ca:	48 83 ec 20          	sub    $0x20,%rsp
   108ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   108d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108d6:	48 89 c7             	mov    %rax,%rdi
   108d9:	e8 62 13 00 00       	call   11c40 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   108de:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   108e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   108e6:	48 89 c7             	mov    %rax,%rdi
   108e9:	e8 2c 13 00 00       	call   11c1a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   108ee:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   108f2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   108f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   108fa:	48 89 d6             	mov    %rdx,%rsi
   108fd:	48 89 c7             	mov    %rax,%rdi
   10900:	e8 64 13 00 00       	call   11c69 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10905:	c9                   	leave
   10906:	c3                   	ret
   10907:	90                   	nop

0000000000010908 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10908:	55                   	push   %rbp
   10909:	48 89 e5             	mov    %rsp,%rbp
   1090c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10910:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10918:	48 8b 00             	mov    (%rax),%rax
   1091b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1091f:	48 c1 e2 03          	shl    $0x3,%rdx
   10923:	48 01 d0             	add    %rdx,%rax
      }
   10926:	5d                   	pop    %rbp
   10927:	c3                   	ret

0000000000010928 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10928:	55                   	push   %rbp
   10929:	48 89 e5             	mov    %rsp,%rbp
   1092c:	48 83 ec 20          	sub    $0x20,%rsp
   10930:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10938:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1093c:	48 89 d6             	mov    %rdx,%rsi
   1093f:	48 89 c7             	mov    %rax,%rdi
   10942:	e8 5d 13 00 00       	call   11ca4 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10947:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1094b:	c9                   	leave
   1094c:	c3                   	ret
   1094d:	90                   	nop

000000000001094e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1094e:	55                   	push   %rbp
   1094f:	48 89 e5             	mov    %rsp,%rbp
   10952:	48 83 ec 20          	sub    $0x20,%rsp
   10956:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   1095a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1095e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10962:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10966:	48 89 d6             	mov    %rdx,%rsi
   10969:	48 89 c7             	mov    %rax,%rdi
   1096c:	e8 33 13 00 00       	call   11ca4 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10971:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10975:	c9                   	leave
   10976:	c3                   	ret

0000000000010977 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10977:	55                   	push   %rbp
   10978:	48 89 e5             	mov    %rsp,%rbp
   1097b:	53                   	push   %rbx
   1097c:	48 83 ec 18          	sub    $0x18,%rsp
   10980:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10984:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1098c:	48 89 c7             	mov    %rax,%rdi
   1098f:	e8 2e 13 00 00       	call   11cc2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10994:	48 8b 18             	mov    (%rax),%rbx
   10997:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1099b:	48 89 c7             	mov    %rax,%rdi
   1099e:	e8 1f 13 00 00       	call   11cc2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   109a3:	48 8b 00             	mov    (%rax),%rax
   109a6:	48 39 c3             	cmp    %rax,%rbx
   109a9:	0f 95 c0             	setne  %al
   109ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   109b0:	c9                   	leave
   109b1:	c3                   	ret

00000000000109b2 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   109b2:	55                   	push   %rbp
   109b3:	48 89 e5             	mov    %rsp,%rbp
   109b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   109ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109be:	48 8b 00             	mov    (%rax),%rax
   109c1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   109c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109c9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   109cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   109d0:	5d                   	pop    %rbp
   109d1:	c3                   	ret

00000000000109d2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   109d2:	55                   	push   %rbp
   109d3:	48 89 e5             	mov    %rsp,%rbp
   109d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   109da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109de:	48 8b 00             	mov    (%rax),%rax
   109e1:	5d                   	pop    %rbp
   109e2:	c3                   	ret
   109e3:	90                   	nop

00000000000109e4 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   109e4:	55                   	push   %rbp
   109e5:	48 89 e5             	mov    %rsp,%rbp
   109e8:	48 83 ec 20          	sub    $0x20,%rsp
   109ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   109f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   109f4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   109f8:	48 89 d6             	mov    %rdx,%rsi
   109fb:	48 89 c7             	mov    %rax,%rdi
   109fe:	e8 cd 12 00 00       	call   11cd0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a03:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a07:	c9                   	leave
   10a08:	c3                   	ret
   10a09:	90                   	nop

0000000000010a0a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10a0a:	55                   	push   %rbp
   10a0b:	48 89 e5             	mov    %rsp,%rbp
   10a0e:	48 83 ec 20          	sub    $0x20,%rsp
   10a12:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10a16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a1a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10a1e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10a22:	48 89 d6             	mov    %rdx,%rsi
   10a25:	48 89 c7             	mov    %rax,%rdi
   10a28:	e8 a3 12 00 00       	call   11cd0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10a2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a31:	c9                   	leave
   10a32:	c3                   	ret

0000000000010a33 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10a33:	55                   	push   %rbp
   10a34:	48 89 e5             	mov    %rsp,%rbp
   10a37:	53                   	push   %rbx
   10a38:	48 83 ec 18          	sub    $0x18,%rsp
   10a3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10a40:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10a44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10a48:	48 89 c7             	mov    %rax,%rdi
   10a4b:	e8 9e 12 00 00       	call   11cee <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10a50:	48 8b 18             	mov    (%rax),%rbx
   10a53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10a57:	48 89 c7             	mov    %rax,%rdi
   10a5a:	e8 8f 12 00 00       	call   11cee <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10a5f:	48 8b 00             	mov    (%rax),%rax
   10a62:	48 39 c3             	cmp    %rax,%rbx
   10a65:	0f 95 c0             	setne  %al
   10a68:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10a6c:	c9                   	leave
   10a6d:	c3                   	ret

0000000000010a6e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10a6e:	55                   	push   %rbp
   10a6f:	48 89 e5             	mov    %rsp,%rbp
   10a72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10a76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a7a:	48 8b 00             	mov    (%rax),%rax
   10a7d:	48 8d 50 04          	lea    0x4(%rax),%rdx
   10a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a85:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10a8c:	5d                   	pop    %rbp
   10a8d:	c3                   	ret

0000000000010a8e <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10a8e:	55                   	push   %rbp
   10a8f:	48 89 e5             	mov    %rsp,%rbp
   10a92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10a9a:	48 8b 00             	mov    (%rax),%rax
   10a9d:	5d                   	pop    %rbp
   10a9e:	c3                   	ret
   10a9f:	90                   	nop

0000000000010aa0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   10aa0:	55                   	push   %rbp
   10aa1:	48 89 e5             	mov    %rsp,%rbp
   10aa4:	48 83 ec 20          	sub    $0x20,%rsp
   10aa8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10aac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   10ab0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   10ab4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ab8:	48 89 c7             	mov    %rax,%rdi
   10abb:	e8 3c 12 00 00       	call   11cfc <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   10ac0:	48 89 c2             	mov    %rax,%rdx
   10ac3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ac7:	48 89 d6             	mov    %rdx,%rsi
   10aca:	48 89 c7             	mov    %rax,%rdi
   10acd:	e8 38 12 00 00       	call   11d0a <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   10ad2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10ad6:	c9                   	leave
   10ad7:	c3                   	ret

0000000000010ad8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10ad8:	55                   	push   %rbp
   10ad9:	48 89 e5             	mov    %rsp,%rbp
   10adc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10ae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ae4:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10ae8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10aec:	48 8b 00             	mov    (%rax),%rax
   10aef:	48 29 c2             	sub    %rax,%rdx
   10af2:	48 89 d0             	mov    %rdx,%rax
   10af5:	48 c1 f8 03          	sar    $0x3,%rax
   10af9:	5d                   	pop    %rbp
   10afa:	c3                   	ret
   10afb:	90                   	nop

0000000000010afc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   10afc:	55                   	push   %rbp
   10afd:	48 89 e5             	mov    %rsp,%rbp
   10b00:	48 83 ec 10          	sub    $0x10,%rsp
   10b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   10b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b10:	48 89 c7             	mov    %rax,%rdi
   10b13:	e8 94 12 00 00       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10b18:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10b1c:	0f 92 c0             	setb   %al
   10b1f:	84 c0                	test   %al,%al
   10b21:	74 24                	je     10b47 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   10b23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b27:	48 89 c7             	mov    %rax,%rdi
   10b2a:	e8 7d 12 00 00       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10b2f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b33:	48 29 c2             	sub    %rax,%rdx
   10b36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b3a:	48 89 d6             	mov    %rdx,%rsi
   10b3d:	48 89 c7             	mov    %rax,%rdi
   10b40:	e8 8b 12 00 00       	call   11dd0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   10b45:	eb 38                	jmp    10b7f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   10b47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b4b:	48 89 c7             	mov    %rax,%rdi
   10b4e:	e8 59 12 00 00       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10b53:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   10b57:	0f 92 c0             	setb   %al
   10b5a:	84 c0                	test   %al,%al
   10b5c:	74 21                	je     10b7f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   10b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b62:	48 8b 00             	mov    (%rax),%rax
   10b65:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b69:	48 c1 e2 03          	shl    $0x3,%rdx
   10b6d:	48 01 c2             	add    %rax,%rdx
   10b70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b74:	48 89 d6             	mov    %rdx,%rsi
   10b77:	48 89 c7             	mov    %rax,%rdi
   10b7a:	e8 5b 14 00 00       	call   11fda <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   10b7f:	90                   	nop
   10b80:	c9                   	leave
   10b81:	c3                   	ret

0000000000010b82 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10b82:	55                   	push   %rbp
   10b83:	48 89 e5             	mov    %rsp,%rbp
   10b86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b92:	48 8b 00             	mov    (%rax),%rax
   10b95:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b99:	48 c1 e2 03          	shl    $0x3,%rdx
   10b9d:	48 01 d0             	add    %rdx,%rax
      }
   10ba0:	5d                   	pop    %rbp
   10ba1:	c3                   	ret

0000000000010ba2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10ba2:	55                   	push   %rbp
   10ba3:	48 89 e5             	mov    %rsp,%rbp
   10ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10baa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10bae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bb2:	48 8b 00             	mov    (%rax),%rax
   10bb5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10bb9:	48 c1 e2 03          	shl    $0x3,%rdx
   10bbd:	48 01 d0             	add    %rdx,%rax
      }
   10bc0:	5d                   	pop    %rbp
   10bc1:	c3                   	ret

0000000000010bc2 <_ZNSaI6ShaderEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10bc2:	55                   	push   %rbp
   10bc3:	48 89 e5             	mov    %rsp,%rbp
   10bc6:	48 83 ec 10          	sub    $0x10,%rsp
   10bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bd2:	48 89 c7             	mov    %rax,%rdi
   10bd5:	e8 60 14 00 00       	call   1203a <_ZNSt15__new_allocatorI6ShaderEC1Ev>
   10bda:	90                   	nop
   10bdb:	c9                   	leave
   10bdc:	c3                   	ret
   10bdd:	90                   	nop

0000000000010bde <_ZNSaI6ShaderED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10bde:	55                   	push   %rbp
   10bdf:	48 89 e5             	mov    %rsp,%rbp
   10be2:	48 83 ec 10          	sub    $0x10,%rsp
   10be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bee:	48 89 c7             	mov    %rax,%rdi
   10bf1:	e8 50 14 00 00       	call   12046 <_ZNSt15__new_allocatorI6ShaderED1Ev>
   10bf6:	90                   	nop
   10bf7:	c9                   	leave
   10bf8:	c3                   	ret
   10bf9:	90                   	nop

0000000000010bfa <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   10bfa:	55                   	push   %rbp
   10bfb:	48 89 e5             	mov    %rsp,%rbp
   10bfe:	53                   	push   %rbx
   10bff:	48 83 ec 28          	sub    $0x28,%rsp
   10c03:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c07:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   10c0b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   10c0f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10c13:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   10c17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c1b:	48 89 d6             	mov    %rdx,%rsi
   10c1e:	48 89 c7             	mov    %rax,%rdi
   10c21:	e8 2b 14 00 00       	call   12051 <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_>
   10c26:	48 89 c1             	mov    %rax,%rcx
   10c29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10c2d:	48 89 c2             	mov    %rax,%rdx
   10c30:	48 89 ce             	mov    %rcx,%rsi
   10c33:	48 89 df             	mov    %rbx,%rdi
   10c36:	e8 93 14 00 00       	call   120ce <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
   10c3b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   10c3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c43:	48 89 d6             	mov    %rdx,%rsi
   10c46:	48 89 c7             	mov    %rax,%rdi
   10c49:	e8 2c 15 00 00       	call   1217a <_ZNSt6vectorI6ShaderSaIS0_EE21_M_default_initializeEm>
   10c4e:	eb 1a                	jmp    10c6a <_ZNSt6vectorI6ShaderSaIS0_EEC1EmRKS1_+0x70>
   10c50:	48 89 c3             	mov    %rax,%rbx
   10c53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c57:	48 89 c7             	mov    %rax,%rdi
   10c5a:	e8 cd 14 00 00       	call   1212c <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>
   10c5f:	48 89 d8             	mov    %rbx,%rax
   10c62:	48 89 c7             	mov    %rax,%rdi
   10c65:	e8 46 3a ff ff       	call   46b0 <_Unwind_Resume@plt>
   10c6a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c6e:	c9                   	leave
   10c6f:	c3                   	ret

0000000000010c70 <_ZNSt6vectorI6ShaderSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10c70:	55                   	push   %rbp
   10c71:	48 89 e5             	mov    %rsp,%rbp
   10c74:	48 83 ec 10          	sub    $0x10,%rsp
   10c78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c80:	48 89 c7             	mov    %rax,%rdi
   10c83:	e8 32 15 00 00       	call   121ba <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>
   10c88:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10c8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c8f:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10c93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c97:	48 8b 00             	mov    (%rax),%rax
   10c9a:	48 89 ce             	mov    %rcx,%rsi
   10c9d:	48 89 c7             	mov    %rax,%rdi
   10ca0:	e8 23 15 00 00       	call   121c8 <_ZSt8_DestroyIP6ShaderS0_EvT_S2_RSaIT0_E>
      }
   10ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ca9:	48 89 c7             	mov    %rax,%rdi
   10cac:	e8 7b 14 00 00       	call   1212c <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>
   10cb1:	90                   	nop
   10cb2:	c9                   	leave
   10cb3:	c3                   	ret

0000000000010cb4 <_ZNSt6vectorI6ShaderSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10cb4:	55                   	push   %rbp
   10cb5:	48 89 e5             	mov    %rsp,%rbp
   10cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10cc0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cc4:	48 8b 00             	mov    (%rax),%rax
   10cc7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10ccb:	48 c1 e2 04          	shl    $0x4,%rdx
   10ccf:	48 01 d0             	add    %rdx,%rax
      }
   10cd2:	5d                   	pop    %rbp
   10cd3:	c3                   	ret

0000000000010cd4 <_ZNKSt6vectorI6ShaderSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10cd4:	55                   	push   %rbp
   10cd5:	48 89 e5             	mov    %rsp,%rbp
   10cd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10cdc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ce0:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10ce4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ce8:	48 8b 00             	mov    (%rax),%rax
   10ceb:	48 29 c2             	sub    %rax,%rdx
   10cee:	48 89 d0             	mov    %rdx,%rax
   10cf1:	48 c1 f8 04          	sar    $0x4,%rax
   10cf5:	5d                   	pop    %rbp
   10cf6:	c3                   	ret
   10cf7:	90                   	nop

0000000000010cf8 <_ZNSaI14VkDynamicStateEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10cf8:	55                   	push   %rbp
   10cf9:	48 89 e5             	mov    %rsp,%rbp
   10cfc:	48 83 ec 10          	sub    $0x10,%rsp
   10d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d08:	48 89 c7             	mov    %rax,%rdi
   10d0b:	e8 e2 14 00 00       	call   121f2 <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>
   10d10:	90                   	nop
   10d11:	c9                   	leave
   10d12:	c3                   	ret
   10d13:	90                   	nop

0000000000010d14 <_ZNSaI14VkDynamicStateED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10d14:	55                   	push   %rbp
   10d15:	48 89 e5             	mov    %rsp,%rbp
   10d18:	48 83 ec 10          	sub    $0x10,%rsp
   10d1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d24:	48 89 c7             	mov    %rax,%rdi
   10d27:	e8 d2 14 00 00       	call   121fe <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>
   10d2c:	90                   	nop
   10d2d:	c9                   	leave
   10d2e:	c3                   	ret
   10d2f:	90                   	nop

0000000000010d30 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   10d30:	55                   	push   %rbp
   10d31:	48 89 e5             	mov    %rsp,%rbp
   10d34:	53                   	push   %rbx
   10d35:	48 83 ec 38          	sub    $0x38,%rsp
   10d39:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10d3d:	48 89 f0             	mov    %rsi,%rax
   10d40:	48 89 d6             	mov    %rdx,%rsi
   10d43:	48 89 f2             	mov    %rsi,%rdx
   10d46:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10d4a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10d4e:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10d52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d56:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10d5a:	48 89 d6             	mov    %rdx,%rsi
   10d5d:	48 89 c7             	mov    %rax,%rdi
   10d60:	e8 c1 14 00 00       	call   12226 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   10d65:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10d69:	48 89 c7             	mov    %rax,%rdi
   10d6c:	e8 3b 15 00 00       	call   122ac <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>
   10d71:	48 89 c3             	mov    %rax,%rbx
   10d74:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10d78:	48 89 c7             	mov    %rax,%rdi
   10d7b:	e8 1a 15 00 00       	call   1229a <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   10d80:	48 89 c1             	mov    %rax,%rcx
   10d83:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d87:	48 89 da             	mov    %rbx,%rdx
   10d8a:	48 89 ce             	mov    %rcx,%rsi
   10d8d:	48 89 c7             	mov    %rax,%rdi
   10d90:	e8 7d 15 00 00       	call   12312 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   10d95:	eb 1a                	jmp    10db1 <_ZNSt6vectorI14VkDynamicStateSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   10d97:	48 89 c3             	mov    %rax,%rbx
   10d9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10d9e:	48 89 c7             	mov    %rax,%rdi
   10da1:	e8 a6 14 00 00       	call   1224c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
   10da6:	48 89 d8             	mov    %rbx,%rax
   10da9:	48 89 c7             	mov    %rax,%rdi
   10dac:	e8 ff 38 ff ff       	call   46b0 <_Unwind_Resume@plt>
   10db1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10db5:	c9                   	leave
   10db6:	c3                   	ret
   10db7:	90                   	nop

0000000000010db8 <_ZNSt6vectorI14VkDynamicStateSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10db8:	55                   	push   %rbp
   10db9:	48 89 e5             	mov    %rsp,%rbp
   10dbc:	48 83 ec 10          	sub    $0x10,%rsp
   10dc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10dc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dc8:	48 89 c7             	mov    %rax,%rdi
   10dcb:	e8 f2 15 00 00       	call   123c2 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   10dd0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dd7:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10ddb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ddf:	48 8b 00             	mov    (%rax),%rax
   10de2:	48 89 ce             	mov    %rcx,%rsi
   10de5:	48 89 c7             	mov    %rax,%rdi
   10de8:	e8 e3 15 00 00       	call   123d0 <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>
      }
   10ded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df1:	48 89 c7             	mov    %rax,%rdi
   10df4:	e8 53 14 00 00       	call   1224c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>
   10df9:	90                   	nop
   10dfa:	c9                   	leave
   10dfb:	c3                   	ret

0000000000010dfc <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10dfc:	55                   	push   %rbp
   10dfd:	48 89 e5             	mov    %rsp,%rbp
   10e00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10e04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e08:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10e0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e10:	48 8b 00             	mov    (%rax),%rax
   10e13:	48 29 c2             	sub    %rax,%rdx
   10e16:	48 89 d0             	mov    %rdx,%rax
   10e19:	48 c1 f8 02          	sar    $0x2,%rax
   10e1d:	5d                   	pop    %rbp
   10e1e:	c3                   	ret
   10e1f:	90                   	nop

0000000000010e20 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10e20:	55                   	push   %rbp
   10e21:	48 89 e5             	mov    %rsp,%rbp
   10e24:	48 83 ec 10          	sub    $0x10,%rsp
   10e28:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10e2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e30:	48 8b 10             	mov    (%rax),%rdx
   10e33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e37:	48 89 d6             	mov    %rdx,%rsi
   10e3a:	48 89 c7             	mov    %rax,%rdi
   10e3d:	e8 b8 15 00 00       	call   123fa <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   10e42:	c9                   	leave
   10e43:	c3                   	ret

0000000000010e44 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE9push_backEOS1_>:
      push_back(value_type&& __x)
   10e44:	55                   	push   %rbp
   10e45:	48 89 e5             	mov    %rsp,%rbp
   10e48:	48 83 ec 10          	sub    $0x10,%rsp
   10e4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { emplace_back(std::move(__x)); }
   10e54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10e58:	48 89 c7             	mov    %rax,%rdi
   10e5b:	e8 ac 15 00 00       	call   1240c <_ZSt4moveIRP12VkPipeline_TEONSt16remove_referenceIT_E4typeEOS4_>
   10e60:	48 89 c2             	mov    %rax,%rdx
   10e63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e67:	48 89 d6             	mov    %rdx,%rsi
   10e6a:	48 89 c7             	mov    %rax,%rdi
   10e6d:	e8 a8 15 00 00       	call   1241a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>
   10e72:	90                   	nop
   10e73:	c9                   	leave
   10e74:	c3                   	ret
   10e75:	90                   	nop

0000000000010e76 <_ZNSt6vectorI6ShaderSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10e76:	55                   	push   %rbp
   10e77:	48 89 e5             	mov    %rsp,%rbp
   10e7a:	48 83 ec 20          	sub    $0x20,%rsp
   10e7e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10e82:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10e86:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10e8a:	48 89 d6             	mov    %rdx,%rsi
   10e8d:	48 89 c7             	mov    %rax,%rdi
   10e90:	e8 29 16 00 00       	call   124be <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10e95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e99:	c9                   	leave
   10e9a:	c3                   	ret
   10e9b:	90                   	nop

0000000000010e9c <_ZNSt6vectorI6ShaderSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10e9c:	55                   	push   %rbp
   10e9d:	48 89 e5             	mov    %rsp,%rbp
   10ea0:	48 83 ec 20          	sub    $0x20,%rsp
   10ea4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10ea8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10eac:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10eb0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10eb4:	48 89 d6             	mov    %rdx,%rsi
   10eb7:	48 89 c7             	mov    %rax,%rdi
   10eba:	e8 ff 15 00 00       	call   124be <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10ebf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ec3:	c9                   	leave
   10ec4:	c3                   	ret

0000000000010ec5 <_ZN9__gnu_cxxneIP6ShaderSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10ec5:	55                   	push   %rbp
   10ec6:	48 89 e5             	mov    %rsp,%rbp
   10ec9:	53                   	push   %rbx
   10eca:	48 83 ec 18          	sub    $0x18,%rsp
   10ece:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ed2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10ed6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10eda:	48 89 c7             	mov    %rax,%rdi
   10edd:	e8 fa 15 00 00       	call   124dc <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>
   10ee2:	48 8b 18             	mov    (%rax),%rbx
   10ee5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10ee9:	48 89 c7             	mov    %rax,%rdi
   10eec:	e8 eb 15 00 00       	call   124dc <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>
   10ef1:	48 8b 00             	mov    (%rax),%rax
   10ef4:	48 39 c3             	cmp    %rax,%rbx
   10ef7:	0f 95 c0             	setne  %al
   10efa:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10efe:	c9                   	leave
   10eff:	c3                   	ret

0000000000010f00 <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10f00:	55                   	push   %rbp
   10f01:	48 89 e5             	mov    %rsp,%rbp
   10f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10f08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f0c:	48 8b 00             	mov    (%rax),%rax
   10f0f:	48 8d 50 10          	lea    0x10(%rax),%rdx
   10f13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f17:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10f1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10f1e:	5d                   	pop    %rbp
   10f1f:	c3                   	ret

0000000000010f20 <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10f20:	55                   	push   %rbp
   10f21:	48 89 e5             	mov    %rsp,%rbp
   10f24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f2c:	48 8b 00             	mov    (%rax),%rax
   10f2f:	5d                   	pop    %rbp
   10f30:	c3                   	ret
   10f31:	90                   	nop

0000000000010f32 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   10f32:	55                   	push   %rbp
   10f33:	48 89 e5             	mov    %rsp,%rbp
   10f36:	48 83 ec 10          	sub    $0x10,%rsp
   10f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   10f3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f42:	48 89 c7             	mov    %rax,%rdi
   10f45:	e8 a0 15 00 00       	call   124ea <_ZNSaIP13VkImageView_TEC1Ev>
   10f4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f4e:	48 89 c7             	mov    %rax,%rdi
   10f51:	e8 b0 15 00 00       	call   12506 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   10f56:	90                   	nop
   10f57:	c9                   	leave
   10f58:	c3                   	ret
   10f59:	90                   	nop

0000000000010f5a <_ZNSaIP13VkImageView_TED1Ev>:
   10f5a:	55                   	push   %rbp
   10f5b:	48 89 e5             	mov    %rsp,%rbp
   10f5e:	48 83 ec 10          	sub    $0x10,%rsp
   10f62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10f66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f6a:	48 89 c7             	mov    %rax,%rdi
   10f6d:	e8 c2 15 00 00       	call   12534 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   10f72:	90                   	nop
   10f73:	c9                   	leave
   10f74:	c3                   	ret
   10f75:	90                   	nop

0000000000010f76 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   10f76:	55                   	push   %rbp
   10f77:	48 89 e5             	mov    %rsp,%rbp
   10f7a:	48 83 ec 10          	sub    $0x10,%rsp
   10f7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   10f82:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f86:	48 8b 50 10          	mov    0x10(%rax),%rdx
   10f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10f8e:	48 8b 00             	mov    (%rax),%rax
   10f91:	48 29 c2             	sub    %rax,%rdx
   10f94:	48 89 d0             	mov    %rdx,%rax
   10f97:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   10f9b:	48 89 c2             	mov    %rax,%rdx
   10f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa2:	48 8b 08             	mov    (%rax),%rcx
   10fa5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fa9:	48 89 ce             	mov    %rcx,%rsi
   10fac:	48 89 c7             	mov    %rax,%rdi
   10faf:	e8 8c 15 00 00       	call   12540 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   10fb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fb8:	48 89 c7             	mov    %rax,%rdi
   10fbb:	e8 a4 f0 ff ff       	call   10064 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   10fc0:	90                   	nop
   10fc1:	c9                   	leave
   10fc2:	c3                   	ret
   10fc3:	90                   	nop

0000000000010fc4 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10fc4:	55                   	push   %rbp
   10fc5:	48 89 e5             	mov    %rsp,%rbp
   10fc8:	48 83 ec 10          	sub    $0x10,%rsp
   10fcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fd4:	48 89 c7             	mov    %rax,%rdi
   10fd7:	e8 9a 15 00 00       	call   12576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   10fdc:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10fdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10fe3:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10fe7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10feb:	48 8b 00             	mov    (%rax),%rax
   10fee:	48 89 ce             	mov    %rcx,%rsi
   10ff1:	48 89 c7             	mov    %rax,%rdi
   10ff4:	e8 8b 15 00 00       	call   12584 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   10ff9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ffd:	48 89 c7             	mov    %rax,%rdi
   11000:	e8 71 ff ff ff       	call   10f76 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11005:	90                   	nop
   11006:	c9                   	leave
   11007:	c3                   	ret

0000000000011008 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11008:	55                   	push   %rbp
   11009:	48 89 e5             	mov    %rsp,%rbp
   1100c:	48 83 ec 10          	sub    $0x10,%rsp
   11010:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11018:	48 89 c7             	mov    %rax,%rdi
   1101b:	e8 3e 78 ff ff       	call   885e <_ZNSaIP9VkImage_TEC1Ev>
   11020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11024:	48 89 c7             	mov    %rax,%rdi
   11027:	e8 ce 9d ff ff       	call   adfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1102c:	90                   	nop
   1102d:	c9                   	leave
   1102e:	c3                   	ret
   1102f:	90                   	nop

0000000000011030 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11030:	55                   	push   %rbp
   11031:	48 89 e5             	mov    %rsp,%rbp
   11034:	48 83 ec 10          	sub    $0x10,%rsp
   11038:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1103c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11040:	48 89 c7             	mov    %rax,%rdi
   11043:	e8 66 15 00 00       	call   125ae <_ZNSaIP12VkPipeline_TEC1Ev>
   11048:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1104c:	48 89 c7             	mov    %rax,%rdi
   1104f:	e8 76 15 00 00       	call   125ca <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   11054:	90                   	nop
   11055:	c9                   	leave
   11056:	c3                   	ret
   11057:	90                   	nop

0000000000011058 <_ZNSaIP12VkPipeline_TED1Ev>:
   11058:	55                   	push   %rbp
   11059:	48 89 e5             	mov    %rsp,%rbp
   1105c:	48 83 ec 10          	sub    $0x10,%rsp
   11060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11068:	48 89 c7             	mov    %rax,%rdi
   1106b:	e8 88 15 00 00       	call   125f8 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   11070:	90                   	nop
   11071:	c9                   	leave
   11072:	c3                   	ret
   11073:	90                   	nop

0000000000011074 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   11074:	55                   	push   %rbp
   11075:	48 89 e5             	mov    %rsp,%rbp
   11078:	48 83 ec 10          	sub    $0x10,%rsp
   1107c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   11080:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11084:	48 8b 50 10          	mov    0x10(%rax),%rdx
   11088:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1108c:	48 8b 00             	mov    (%rax),%rax
   1108f:	48 29 c2             	sub    %rax,%rdx
   11092:	48 89 d0             	mov    %rdx,%rax
   11095:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   11099:	48 89 c2             	mov    %rax,%rdx
   1109c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110a0:	48 8b 08             	mov    (%rax),%rcx
   110a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110a7:	48 89 ce             	mov    %rcx,%rsi
   110aa:	48 89 c7             	mov    %rax,%rdi
   110ad:	e8 52 15 00 00       	call   12604 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   110b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110b6:	48 89 c7             	mov    %rax,%rdi
   110b9:	e8 32 f0 ff ff       	call   100f0 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   110be:	90                   	nop
   110bf:	c9                   	leave
   110c0:	c3                   	ret
   110c1:	90                   	nop

00000000000110c2 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   110c2:	55                   	push   %rbp
   110c3:	48 89 e5             	mov    %rsp,%rbp
   110c6:	48 83 ec 10          	sub    $0x10,%rsp
   110ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   110ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110d2:	48 89 c7             	mov    %rax,%rdi
   110d5:	e8 60 15 00 00       	call   1263a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   110da:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   110dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110e1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   110e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110e9:	48 8b 00             	mov    (%rax),%rax
   110ec:	48 89 ce             	mov    %rcx,%rsi
   110ef:	48 89 c7             	mov    %rax,%rdi
   110f2:	e8 51 15 00 00       	call   12648 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   110f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110fb:	48 89 c7             	mov    %rax,%rdi
   110fe:	e8 71 ff ff ff       	call   11074 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   11103:	90                   	nop
   11104:	c9                   	leave
   11105:	c3                   	ret

0000000000011106 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11106:	55                   	push   %rbp
   11107:	48 89 e5             	mov    %rsp,%rbp
   1110a:	48 83 ec 20          	sub    $0x20,%rsp
   1110e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   11112:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11116:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1111a:	48 89 d6             	mov    %rdx,%rsi
   1111d:	48 89 c7             	mov    %rax,%rdi
   11120:	e8 4d 15 00 00       	call   12672 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   11125:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11129:	c9                   	leave
   1112a:	c3                   	ret
   1112b:	90                   	nop

000000000001112c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   1112c:	55                   	push   %rbp
   1112d:	48 89 e5             	mov    %rsp,%rbp
   11130:	48 83 ec 20          	sub    $0x20,%rsp
   11134:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   11138:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1113c:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11140:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11144:	48 89 d6             	mov    %rdx,%rsi
   11147:	48 89 c7             	mov    %rax,%rdi
   1114a:	e8 23 15 00 00       	call   12672 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1114f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11153:	c9                   	leave
   11154:	c3                   	ret

0000000000011155 <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11155:	55                   	push   %rbp
   11156:	48 89 e5             	mov    %rsp,%rbp
   11159:	53                   	push   %rbx
   1115a:	48 83 ec 18          	sub    $0x18,%rsp
   1115e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11162:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11166:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1116a:	48 89 c7             	mov    %rax,%rdi
   1116d:	e8 1e 15 00 00       	call   12690 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11172:	48 8b 18             	mov    (%rax),%rbx
   11175:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11179:	48 89 c7             	mov    %rax,%rdi
   1117c:	e8 0f 15 00 00       	call   12690 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   11181:	48 8b 00             	mov    (%rax),%rax
   11184:	48 39 c3             	cmp    %rax,%rbx
   11187:	0f 95 c0             	setne  %al
   1118a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1118e:	c9                   	leave
   1118f:	c3                   	ret

0000000000011190 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11190:	55                   	push   %rbp
   11191:	48 89 e5             	mov    %rsp,%rbp
   11194:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1119c:	48 8b 00             	mov    (%rax),%rax
   1119f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   111a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111a7:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   111aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   111ae:	5d                   	pop    %rbp
   111af:	c3                   	ret

00000000000111b0 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   111b0:	55                   	push   %rbp
   111b1:	48 89 e5             	mov    %rsp,%rbp
   111b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   111b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111bc:	48 8b 00             	mov    (%rax),%rax
   111bf:	5d                   	pop    %rbp
   111c0:	c3                   	ret
   111c1:	90                   	nop

00000000000111c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   111c2:	55                   	push   %rbp
   111c3:	48 89 e5             	mov    %rsp,%rbp
   111c6:	53                   	push   %rbx
   111c7:	48 83 ec 18          	sub    $0x18,%rsp
   111cb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   111cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111d3:	48 89 c7             	mov    %rax,%rdi
   111d6:	e8 c3 14 00 00       	call   1269e <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   111db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111df:	48 83 c0 08          	add    $0x8,%rax
   111e3:	48 89 c7             	mov    %rax,%rdi
   111e6:	e8 85 33 ff ff       	call   4570 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   111eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111ef:	48 83 c0 08          	add    $0x8,%rax
   111f3:	48 8d 15 e0 84 00 00 	lea    0x84e0(%rip),%rdx        # 196da <_ZN6__pstl9execution2v1L5unseqE+0x39b>
   111fa:	48 89 d6             	mov    %rdx,%rsi
   111fd:	48 89 c7             	mov    %rax,%rdi
   11200:	e8 3b 33 ff ff       	call   4540 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   11205:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11209:	e8 02 33 ff ff       	call   4510 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1120e:	48 89 03             	mov    %rax,(%rbx)
  }
   11211:	eb 1e                	jmp    11231 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   11213:	48 89 c3             	mov    %rax,%rbx
   11216:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1121a:	48 83 c0 08          	add    $0x8,%rax
   1121e:	48 89 c7             	mov    %rax,%rdi
   11221:	e8 aa 2f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   11226:	48 89 d8             	mov    %rbx,%rax
   11229:	48 89 c7             	mov    %rax,%rdi
   1122c:	e8 7f 34 ff ff       	call   46b0 <_Unwind_Resume@plt>
   11231:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11235:	c9                   	leave
   11236:	c3                   	ret
   11237:	90                   	nop

0000000000011238 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   11238:	55                   	push   %rbp
   11239:	48 89 e5             	mov    %rsp,%rbp
   1123c:	48 83 ec 20          	sub    $0x20,%rsp
   11240:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   11244:	e8 c7 32 ff ff       	call   4510 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11249:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   1124d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11251:	48 83 c0 08          	add    $0x8,%rax
   11255:	48 89 c7             	mov    %rax,%rdi
   11258:	e8 73 2f ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   1125d:	90                   	nop
   1125e:	c9                   	leave
   1125f:	c3                   	ret

0000000000011260 <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   11260:	55                   	push   %rbp
   11261:	48 89 e5             	mov    %rsp,%rbp
   11264:	48 83 ec 20          	sub    $0x20,%rsp
   11268:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1126c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   11270:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11274:	48 89 c7             	mov    %rax,%rdi
   11277:	e8 42 14 00 00       	call   126be <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   1127c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   11280:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11284:	48 89 c7             	mov    %rax,%rdi
   11287:	e8 32 14 00 00       	call   126be <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   1128c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11290:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   11294:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11298:	48 89 d6             	mov    %rdx,%rsi
   1129b:	48 89 c7             	mov    %rax,%rdi
   1129e:	e8 2c 14 00 00       	call   126cf <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   112a3:	c9                   	leave
   112a4:	c3                   	ret

00000000000112a5 <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   112a5:	55                   	push   %rbp
   112a6:	48 89 e5             	mov    %rsp,%rbp
   112a9:	48 83 ec 10          	sub    $0x10,%rsp
   112ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   112b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112b5:	48 89 c7             	mov    %rax,%rdi
   112b8:	e8 7b 14 00 00       	call   12738 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   112bd:	c9                   	leave
   112be:	c3                   	ret
   112bf:	90                   	nop

00000000000112c0 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   112c0:	55                   	push   %rbp
   112c1:	48 89 e5             	mov    %rsp,%rbp
   112c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   112c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   112cc:	48 8b 00             	mov    (%rax),%rax
   112cf:	5d                   	pop    %rbp
   112d0:	c3                   	ret
   112d1:	90                   	nop

00000000000112d2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   112d2:	55                   	push   %rbp
   112d3:	48 89 e5             	mov    %rsp,%rbp
   112d6:	53                   	push   %rbx
   112d7:	48 83 ec 18          	sub    $0x18,%rsp
   112db:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   112df:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   112e3:	e8 28 32 ff ff       	call   4510 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   112e8:	48 89 03             	mov    %rax,(%rbx)
   112eb:	90                   	nop
   112ec:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   112f0:	c9                   	leave
   112f1:	c3                   	ret

00000000000112f2 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   112f2:	55                   	push   %rbp
   112f3:	48 89 e5             	mov    %rsp,%rbp
   112f6:	48 83 ec 20          	sub    $0x20,%rsp
   112fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   112fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11302:	89 d0                	mov    %edx,%eax
   11304:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   11307:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   1130b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1130f:	be 01 00 00 00       	mov    $0x1,%esi
   11314:	48 89 c7             	mov    %rax,%rdi
   11317:	e8 d4 30 ff ff       	call   43f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   1131c:	48 89 c7             	mov    %rax,%rdi
   1131f:	e8 d3 00 00 00       	call   113f7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   11324:	48 89 c2             	mov    %rax,%rdx
   11327:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1132b:	48 89 d6             	mov    %rdx,%rsi
   1132e:	48 89 c7             	mov    %rax,%rdi
   11331:	e8 8a 2e ff ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   11336:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1133a:	c9                   	leave
   1133b:	c3                   	ret

000000000001133c <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   1133c:	55                   	push   %rbp
   1133d:	48 89 e5             	mov    %rsp,%rbp
   11340:	48 83 ec 20          	sub    $0x20,%rsp
   11344:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11348:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1134c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11350:	48 89 d6             	mov    %rdx,%rsi
   11353:	48 89 c7             	mov    %rax,%rdi
   11356:	e8 37 14 00 00       	call   12792 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   1135b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1135f:	c9                   	leave
   11360:	c3                   	ret
   11361:	90                   	nop

0000000000011362 <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11362:	55                   	push   %rbp
   11363:	48 89 e5             	mov    %rsp,%rbp
   11366:	48 83 ec 20          	sub    $0x20,%rsp
   1136a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   1136e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11372:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11376:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1137a:	48 89 d6             	mov    %rdx,%rsi
   1137d:	48 89 c7             	mov    %rax,%rdi
   11380:	e8 0d 14 00 00       	call   12792 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   11385:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11389:	c9                   	leave
   1138a:	c3                   	ret

000000000001138b <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1138b:	55                   	push   %rbp
   1138c:	48 89 e5             	mov    %rsp,%rbp
   1138f:	53                   	push   %rbx
   11390:	48 83 ec 18          	sub    $0x18,%rsp
   11394:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11398:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   1139c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113a0:	48 89 c7             	mov    %rax,%rdi
   113a3:	e8 08 14 00 00       	call   127b0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   113a8:	48 8b 18             	mov    (%rax),%rbx
   113ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   113af:	48 89 c7             	mov    %rax,%rdi
   113b2:	e8 f9 13 00 00       	call   127b0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   113b7:	48 8b 00             	mov    (%rax),%rax
   113ba:	48 39 c3             	cmp    %rax,%rbx
   113bd:	0f 95 c0             	setne  %al
   113c0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   113c4:	c9                   	leave
   113c5:	c3                   	ret

00000000000113c6 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   113c6:	55                   	push   %rbp
   113c7:	48 89 e5             	mov    %rsp,%rbp
   113ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   113ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113d2:	48 8b 00             	mov    (%rax),%rax
   113d5:	48 8d 50 08          	lea    0x8(%rax),%rdx
   113d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113dd:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   113e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   113e4:	5d                   	pop    %rbp
   113e5:	c3                   	ret

00000000000113e6 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   113e6:	55                   	push   %rbp
   113e7:	48 89 e5             	mov    %rsp,%rbp
   113ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   113ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113f2:	48 8b 00             	mov    (%rax),%rax
   113f5:	5d                   	pop    %rbp
   113f6:	c3                   	ret

00000000000113f7 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   113f7:	55                   	push   %rbp
   113f8:	48 89 e5             	mov    %rsp,%rbp
   113fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   113ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11403:	5d                   	pop    %rbp
   11404:	c3                   	ret
   11405:	90                   	nop

0000000000011406 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11406:	55                   	push   %rbp
   11407:	48 89 e5             	mov    %rsp,%rbp
   1140a:	48 83 ec 10          	sub    $0x10,%rsp
   1140e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11412:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   11416:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1141a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1141e:	48 89 d6             	mov    %rdx,%rsi
   11421:	48 89 c7             	mov    %rax,%rdi
   11424:	e8 b1 88 ff ff       	call   9cda <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   11429:	90                   	nop
   1142a:	c9                   	leave
   1142b:	c3                   	ret

000000000001142c <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   1142c:	55                   	push   %rbp
   1142d:	48 89 e5             	mov    %rsp,%rbp
   11430:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11434:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11438:	48 8b 00             	mov    (%rax),%rax
   1143b:	5d                   	pop    %rbp
   1143c:	c3                   	ret
   1143d:	90                   	nop

000000000001143e <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   1143e:	55                   	push   %rbp
   1143f:	48 89 e5             	mov    %rsp,%rbp
   11442:	53                   	push   %rbx
   11443:	48 83 ec 18          	sub    $0x18,%rsp
   11447:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1144b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1144f:	48 89 c7             	mov    %rax,%rdi
   11452:	e8 d5 ff ff ff       	call   1142c <_ZNKSt16initializer_listIPKcE5beginEv>
   11457:	48 89 c3             	mov    %rax,%rbx
   1145a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1145e:	48 89 c7             	mov    %rax,%rdi
   11461:	e8 58 13 00 00       	call   127be <_ZNKSt16initializer_listIPKcE4sizeEv>
   11466:	48 c1 e0 03          	shl    $0x3,%rax
   1146a:	48 01 d8             	add    %rbx,%rax
   1146d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11471:	c9                   	leave
   11472:	c3                   	ret

0000000000011473 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   11473:	55                   	push   %rbp
   11474:	48 89 e5             	mov    %rsp,%rbp
   11477:	48 83 ec 10          	sub    $0x10,%rsp
   1147b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1147f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   11483:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11487:	48 89 c7             	mov    %rax,%rdi
   1148a:	e8 41 13 00 00       	call   127d0 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   1148f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11493:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11497:	48 89 d6             	mov    %rdx,%rsi
   1149a:	48 89 c7             	mov    %rax,%rdi
   1149d:	e8 39 13 00 00       	call   127db <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   114a2:	c9                   	leave
   114a3:	c3                   	ret

00000000000114a4 <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   114a4:	55                   	push   %rbp
   114a5:	48 89 e5             	mov    %rsp,%rbp
   114a8:	53                   	push   %rbx
   114a9:	48 83 ec 38          	sub    $0x38,%rsp
   114ad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   114b1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   114b5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   114b9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   114bd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   114c1:	48 89 d6             	mov    %rdx,%rsi
   114c4:	48 89 c7             	mov    %rax,%rdi
   114c7:	e8 a7 ff ff ff       	call   11473 <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   114cc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   114d0:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   114d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   114d8:	48 89 c7             	mov    %rax,%rdi
   114db:	e8 70 79 ff ff       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   114e0:	48 89 c2             	mov    %rax,%rdx
   114e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114e7:	48 89 d6             	mov    %rdx,%rsi
   114ea:	48 89 c7             	mov    %rax,%rdi
   114ed:	e8 5f 78 ff ff       	call   8d51 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   114f2:	48 89 c6             	mov    %rax,%rsi
   114f5:	48 89 df             	mov    %rbx,%rdi
   114f8:	e8 69 93 ff ff       	call   a866 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   114fd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11501:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   11504:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11508:	48 8b 00             	mov    (%rax),%rax
   1150b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1150f:	48 c1 e2 03          	shl    $0x3,%rdx
   11513:	48 01 c2             	add    %rax,%rdx
   11516:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1151a:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1151e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11522:	48 89 c7             	mov    %rax,%rdi
   11525:	e8 26 79 ff ff       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1152a:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1152d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11531:	48 8b 10             	mov    (%rax),%rdx
   11534:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   11538:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1153c:	48 89 c7             	mov    %rax,%rdi
   1153f:	e8 b1 12 00 00       	call   127f5 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   11544:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11548:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   1154c:	90                   	nop
   1154d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11551:	c9                   	leave
   11552:	c3                   	ret

0000000000011553 <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   11553:	55                   	push   %rbp
   11554:	48 89 e5             	mov    %rsp,%rbp
   11557:	48 83 ec 20          	sub    $0x20,%rsp
   1155b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1155f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11563:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   11567:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1156b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1156f:	48 89 d6             	mov    %rdx,%rsi
   11572:	48 89 c7             	mov    %rax,%rdi
   11575:	e8 ac 12 00 00       	call   12826 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   1157a:	90                   	nop
   1157b:	c9                   	leave
   1157c:	c3                   	ret
   1157d:	90                   	nop

000000000001157e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1157e:	55                   	push   %rbp
   1157f:	48 89 e5             	mov    %rsp,%rbp
   11582:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11586:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1158a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1158e:	48 8b 10             	mov    (%rax),%rdx
   11591:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11595:	48 89 10             	mov    %rdx,(%rax)
   11598:	90                   	nop
   11599:	5d                   	pop    %rbp
   1159a:	c3                   	ret
   1159b:	90                   	nop

000000000001159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1159c:	55                   	push   %rbp
   1159d:	48 89 e5             	mov    %rsp,%rbp
   115a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   115a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115a8:	5d                   	pop    %rbp
   115a9:	c3                   	ret

00000000000115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   115aa:	55                   	push   %rbp
   115ab:	48 89 e5             	mov    %rsp,%rbp
   115ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   115b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115b6:	5d                   	pop    %rbp
   115b7:	c3                   	ret

00000000000115b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   115b8:	55                   	push   %rbp
   115b9:	48 89 e5             	mov    %rsp,%rbp
   115bc:	48 83 ec 20          	sub    $0x20,%rsp
   115c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   115cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   115d0:	48 89 c7             	mov    %rax,%rdi
   115d3:	e8 d2 ff ff ff       	call   115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   115d8:	48 89 c2             	mov    %rax,%rdx
   115db:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   115df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115e3:	48 89 ce             	mov    %rcx,%rsi
   115e6:	48 89 c7             	mov    %rax,%rdi
   115e9:	e8 5e 12 00 00       	call   1284c <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   115ee:	90                   	nop
   115ef:	c9                   	leave
   115f0:	c3                   	ret
   115f1:	90                   	nop

00000000000115f2 <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   115f2:	55                   	push   %rbp
   115f3:	48 89 e5             	mov    %rsp,%rbp
   115f6:	53                   	push   %rbx
   115f7:	48 83 ec 68          	sub    $0x68,%rsp
   115fb:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   115ff:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   11603:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11607:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1160b:	48 8d 15 cc 80 00 00 	lea    0x80cc(%rip),%rdx        # 196de <_ZN6__pstl9execution2v1L5unseqE+0x39f>
   11612:	be 01 00 00 00       	mov    $0x1,%esi
   11617:	48 89 c7             	mov    %rax,%rdi
   1161a:	e8 6f 12 00 00       	call   1288e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   1161f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   11623:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11627:	48 8b 00             	mov    (%rax),%rax
   1162a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1162e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11632:	48 8b 40 08          	mov    0x8(%rax),%rax
   11636:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   1163a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1163e:	48 89 c7             	mov    %rax,%rdi
   11641:	e8 1a ec ff ff       	call   10260 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   11646:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   1164a:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1164e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11652:	48 89 d6             	mov    %rdx,%rsi
   11655:	48 89 c7             	mov    %rax,%rdi
   11658:	e8 f9 12 00 00       	call   12956 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   1165d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   11661:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11665:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11669:	48 89 d6             	mov    %rdx,%rsi
   1166c:	48 89 c7             	mov    %rax,%rdi
   1166f:	e8 f2 91 ff ff       	call   a866 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11674:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   11678:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1167c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   11680:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11684:	48 89 c7             	mov    %rax,%rdi
   11687:	e8 1e ff ff ff       	call   115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1168c:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   1168f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11693:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   1169a:	00 
	  _Alloc_traits::construct(this->_M_impl,
   1169b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1169f:	48 01 c1             	add    %rax,%rcx
   116a2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116a6:	48 89 ce             	mov    %rcx,%rsi
   116a9:	48 89 c7             	mov    %rax,%rdi
   116ac:	e8 07 ff ff ff       	call   115b8 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   116b1:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   116b8:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   116b9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116bd:	48 89 c7             	mov    %rax,%rdi
   116c0:	e8 8b 77 ff ff       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   116c5:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   116c8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   116cc:	48 89 c7             	mov    %rax,%rdi
   116cf:	e8 c8 fe ff ff       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   116d4:	48 8b 30             	mov    (%rax),%rsi
   116d7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   116db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   116df:	48 89 d9             	mov    %rbx,%rcx
   116e2:	48 89 c7             	mov    %rax,%rdi
   116e5:	e8 ae 12 00 00       	call   12998 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   116ea:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   116ee:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   116f3:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116f7:	48 89 c7             	mov    %rax,%rdi
   116fa:	e8 51 77 ff ff       	call   8e50 <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   116ff:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   11702:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11706:	48 89 c7             	mov    %rax,%rdi
   11709:	e8 8e fe ff ff       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1170e:	48 8b 00             	mov    (%rax),%rax
   11711:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11715:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   11719:	48 89 d9             	mov    %rbx,%rcx
   1171c:	48 89 c7             	mov    %rax,%rdi
   1171f:	e8 74 12 00 00       	call   12998 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11724:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   11728:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   1172c:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   11730:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   11734:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   11738:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   1173c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   11740:	48 89 ce             	mov    %rcx,%rsi
   11743:	48 89 c7             	mov    %rax,%rdi
   11746:	e8 39 77 ff ff       	call   8e84 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   1174b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1174f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11753:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   11756:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1175a:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1175e:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   11762:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11766:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1176d:	00 
   1176e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11772:	48 01 c2             	add    %rax,%rdx
   11775:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11779:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   1177d:	90                   	nop
   1177e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11782:	c9                   	leave
   11783:	c3                   	ret

0000000000011784 <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   11784:	55                   	push   %rbp
   11785:	48 89 e5             	mov    %rsp,%rbp
   11788:	48 83 ec 20          	sub    $0x20,%rsp
   1178c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   11790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11794:	48 89 c7             	mov    %rax,%rdi
   11797:	e8 ea ea ff ff       	call   10286 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   1179c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   117a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   117a4:	be 01 00 00 00       	mov    $0x1,%esi
   117a9:	48 89 c7             	mov    %rax,%rdi
   117ac:	e8 19 12 00 00       	call   129ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   117b1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   117b5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   117b9:	48 89 c7             	mov    %rax,%rdi
   117bc:	e8 49 eb ff ff       	call   1030a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   117c1:	c9                   	leave
   117c2:	c3                   	ret
   117c3:	90                   	nop

00000000000117c4 <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   117c4:	55                   	push   %rbp
   117c5:	48 89 e5             	mov    %rsp,%rbp
   117c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   117cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   117d0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   117d4:	5d                   	pop    %rbp
   117d5:	c3                   	ret

00000000000117d6 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   117d6:	55                   	push   %rbp
   117d7:	48 89 e5             	mov    %rsp,%rbp
   117da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   117de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117e2:	5d                   	pop    %rbp
   117e3:	c3                   	ret

00000000000117e4 <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   117e4:	55                   	push   %rbp
   117e5:	48 89 e5             	mov    %rsp,%rbp
   117e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   117ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117f0:	5d                   	pop    %rbp
   117f1:	c3                   	ret

00000000000117f2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   117f2:	55                   	push   %rbp
   117f3:	48 89 e5             	mov    %rsp,%rbp
   117f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   117fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   117fe:	5d                   	pop    %rbp
   117ff:	c3                   	ret

0000000000011800 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   11800:	55                   	push   %rbp
   11801:	48 89 e5             	mov    %rsp,%rbp
   11804:	48 83 ec 20          	sub    $0x20,%rsp
   11808:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1180c:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   11810:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11814:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11818:	48 89 d6             	mov    %rdx,%rsi
   1181b:	48 89 c7             	mov    %rax,%rdi
   1181e:	e8 e9 11 00 00       	call   12a0c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   11823:	90                   	nop
   11824:	c9                   	leave
   11825:	c3                   	ret

0000000000011826 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   11826:	55                   	push   %rbp
   11827:	48 89 e5             	mov    %rsp,%rbp
   1182a:	53                   	push   %rbx
   1182b:	48 83 ec 18          	sub    $0x18,%rsp
   1182f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11833:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   11837:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1183b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1183f:	48 89 c7             	mov    %rax,%rdi
   11842:	e8 ab ff ff ff       	call   117f2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   11847:	48 89 c6             	mov    %rax,%rsi
   1184a:	48 89 df             	mov    %rbx,%rdi
   1184d:	e8 ae ff ff ff       	call   11800 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   11852:	90                   	nop
   11853:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11857:	c9                   	leave
   11858:	c3                   	ret
   11859:	90                   	nop

000000000001185a <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1185a:	55                   	push   %rbp
   1185b:	48 89 e5             	mov    %rsp,%rbp
   1185e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11862:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11866:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1186a:	48 8b 10             	mov    (%rax),%rdx
   1186d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11871:	48 89 10             	mov    %rdx,(%rax)
   11874:	90                   	nop
   11875:	5d                   	pop    %rbp
   11876:	c3                   	ret
   11877:	90                   	nop

0000000000011878 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11878:	55                   	push   %rbp
   11879:	48 89 e5             	mov    %rsp,%rbp
   1187c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11880:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11884:	5d                   	pop    %rbp
   11885:	c3                   	ret

0000000000011886 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   11886:	55                   	push   %rbp
   11887:	48 89 e5             	mov    %rsp,%rbp
   1188a:	53                   	push   %rbx
   1188b:	48 83 ec 18          	sub    $0x18,%rsp
   1188f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11893:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   11897:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1189b:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1189f:	84 c0                	test   %al,%al
   118a1:	74 35                	je     118d8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   118a3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118a7:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   118ab:	84 c0                	test   %al,%al
   118ad:	74 29                	je     118d8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   118af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118b3:	48 89 c7             	mov    %rax,%rdi
   118b6:	e8 8d 11 00 00       	call   12a48 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   118bb:	48 89 c3             	mov    %rax,%rbx
   118be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118c2:	48 89 c7             	mov    %rax,%rdi
   118c5:	e8 4e 00 00 00       	call   11918 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   118ca:	48 89 de             	mov    %rbx,%rsi
   118cd:	48 89 c7             	mov    %rax,%rdi
   118d0:	e8 81 11 00 00       	call   12a56 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   118d5:	90                   	nop
      }
   118d6:	eb 38                	jmp    11910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   118d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118dc:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   118e0:	84 c0                	test   %al,%al
   118e2:	74 20                	je     11904 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   118e4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118e8:	48 89 c7             	mov    %rax,%rdi
   118eb:	e8 58 11 00 00       	call   12a48 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   118f0:	48 89 c2             	mov    %rax,%rdx
   118f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   118f7:	48 89 d6             	mov    %rdx,%rsi
   118fa:	48 89 c7             	mov    %rax,%rdi
   118fd:	e8 92 11 00 00       	call   12a94 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   11902:	eb 0c                	jmp    11910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   11904:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11908:	48 89 c7             	mov    %rax,%rdi
   1190b:	e8 ca 11 00 00       	call   12ada <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   11910:	90                   	nop
   11911:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11915:	c9                   	leave
   11916:	c3                   	ret
   11917:	90                   	nop

0000000000011918 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   11918:	55                   	push   %rbp
   11919:	48 89 e5             	mov    %rsp,%rbp
   1191c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   11920:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11924:	5d                   	pop    %rbp
   11925:	c3                   	ret

0000000000011926 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   11926:	55                   	push   %rbp
   11927:	48 89 e5             	mov    %rsp,%rbp
   1192a:	48 83 ec 10          	sub    $0x10,%rsp
   1192e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11932:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11936:	48 89 c7             	mov    %rax,%rdi
   11939:	e8 c4 11 00 00       	call   12b02 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   1193e:	90                   	nop
   1193f:	c9                   	leave
   11940:	c3                   	ret
   11941:	90                   	nop

0000000000011942 <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   11942:	55                   	push   %rbp
   11943:	48 89 e5             	mov    %rsp,%rbp
   11946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   1194a:	90                   	nop
   1194b:	5d                   	pop    %rbp
   1194c:	c3                   	ret
   1194d:	90                   	nop

000000000001194e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1194e:	55                   	push   %rbp
   1194f:	48 89 e5             	mov    %rsp,%rbp
   11952:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11956:	90                   	nop
   11957:	5d                   	pop    %rbp
   11958:	c3                   	ret
   11959:	90                   	nop

000000000001195a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   1195a:	55                   	push   %rbp
   1195b:	48 89 e5             	mov    %rsp,%rbp
   1195e:	48 83 ec 20          	sub    $0x20,%rsp
   11962:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11966:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   1196a:	eb 49                	jmp    119b5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   1196c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11970:	48 89 c7             	mov    %rax,%rdi
   11973:	e8 95 11 00 00       	call   12b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   11978:	48 89 c2             	mov    %rax,%rdx
   1197b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1197f:	48 89 d6             	mov    %rdx,%rsi
   11982:	48 89 c7             	mov    %rax,%rdi
   11985:	e8 d0 ff ff ff       	call   1195a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   1198a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1198e:	48 89 c7             	mov    %rax,%rdi
   11991:	e8 89 11 00 00       	call   12b1f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   11996:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   1199a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1199e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   119a2:	48 89 d6             	mov    %rdx,%rsi
   119a5:	48 89 c7             	mov    %rax,%rdi
   119a8:	e8 85 11 00 00       	call   12b32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   119ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119b1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   119b5:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   119ba:	75 b0                	jne    1196c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   119bc:	90                   	nop
   119bd:	90                   	nop
   119be:	c9                   	leave
   119bf:	c3                   	ret

00000000000119c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   119c0:	55                   	push   %rbp
   119c1:	48 89 e5             	mov    %rsp,%rbp
   119c4:	48 83 ec 10          	sub    $0x10,%rsp
   119c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   119cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119d0:	48 89 c7             	mov    %rax,%rdi
   119d3:	e8 94 11 00 00       	call   12b6c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   119d8:	c9                   	leave
   119d9:	c3                   	ret

00000000000119da <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   119da:	55                   	push   %rbp
   119db:	48 89 e5             	mov    %rsp,%rbp
   119de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   119e6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   119ea:	48 8b 10             	mov    (%rax),%rdx
   119ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119f1:	48 89 10             	mov    %rdx,(%rax)
   119f4:	90                   	nop
   119f5:	5d                   	pop    %rbp
   119f6:	c3                   	ret
   119f7:	90                   	nop

00000000000119f8 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   119f8:	55                   	push   %rbp
   119f9:	48 89 e5             	mov    %rsp,%rbp
   119fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11a00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a04:	5d                   	pop    %rbp
   11a05:	c3                   	ret

0000000000011a06 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   11a06:	55                   	push   %rbp
   11a07:	48 89 e5             	mov    %rsp,%rbp
   11a0a:	48 83 ec 10          	sub    $0x10,%rsp
   11a0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   11a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a1a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11a1e:	48 89 d6             	mov    %rdx,%rsi
   11a21:	48 89 c7             	mov    %rax,%rdi
   11a24:	e8 55 11 00 00       	call   12b7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   11a29:	c9                   	leave
   11a2a:	c3                   	ret
   11a2b:	90                   	nop

0000000000011a2c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11a2c:	55                   	push   %rbp
   11a2d:	48 89 e5             	mov    %rsp,%rbp
   11a30:	48 83 ec 10          	sub    $0x10,%rsp
   11a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   11a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a3c:	48 89 c7             	mov    %rax,%rdi
   11a3f:	e8 86 11 00 00       	call   12bca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   11a44:	c9                   	leave
   11a45:	c3                   	ret

0000000000011a46 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   11a46:	55                   	push   %rbp
   11a47:	48 89 e5             	mov    %rsp,%rbp
   11a4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a4e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   11a52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a56:	48 8b 10             	mov    (%rax),%rdx
   11a59:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a5d:	48 8b 00             	mov    (%rax),%rax
   11a60:	48 39 c2             	cmp    %rax,%rdx
   11a63:	0f 94 c0             	sete   %al
   11a66:	5d                   	pop    %rbp
   11a67:	c3                   	ret

0000000000011a68 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   11a68:	55                   	push   %rbp
   11a69:	48 89 e5             	mov    %rsp,%rbp
   11a6c:	48 83 ec 10          	sub    $0x10,%rsp
   11a70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   11a74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a78:	48 89 c7             	mov    %rax,%rdi
   11a7b:	e8 74 11 00 00       	call   12bf4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   11a80:	90                   	nop
   11a81:	c9                   	leave
   11a82:	c3                   	ret
   11a83:	90                   	nop

0000000000011a84 <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11a84:	55                   	push   %rbp
   11a85:	48 89 e5             	mov    %rsp,%rbp
   11a88:	48 83 ec 10          	sub    $0x10,%rsp
   11a8c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   11a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a94:	48 8b 00             	mov    (%rax),%rax
   11a97:	48 89 c7             	mov    %rax,%rdi
   11a9a:	e8 61 11 00 00       	call   12c00 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   11a9f:	c9                   	leave
   11aa0:	c3                   	ret
   11aa1:	90                   	nop

0000000000011aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   11aa2:	55                   	push   %rbp
   11aa3:	48 89 e5             	mov    %rsp,%rbp
   11aa6:	48 83 ec 20          	sub    $0x20,%rsp
   11aaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11aae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11ab2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   11ab6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11aba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11abe:	48 89 d6             	mov    %rdx,%rsi
   11ac1:	48 89 c7             	mov    %rax,%rdi
   11ac4:	e8 55 11 00 00       	call   12c1e <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   11ac9:	c9                   	leave
   11aca:	c3                   	ret

0000000000011acb <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   11acb:	55                   	push   %rbp
   11acc:	48 89 e5             	mov    %rsp,%rbp
   11acf:	48 83 ec 10          	sub    $0x10,%rsp
   11ad3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ad7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   11adb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11adf:	48 89 c7             	mov    %rax,%rdi
   11ae2:	e8 5f 11 00 00       	call   12c46 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   11ae7:	48 89 c2             	mov    %rax,%rdx
   11aea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aee:	48 89 d6             	mov    %rdx,%rsi
   11af1:	48 89 c7             	mov    %rax,%rdi
   11af4:	e8 5b 11 00 00       	call   12c54 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   11af9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11afd:	c9                   	leave
   11afe:	c3                   	ret
   11aff:	90                   	nop

0000000000011b00 <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   11b00:	55                   	push   %rbp
   11b01:	48 89 e5             	mov    %rsp,%rbp
   11b04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   11b0c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b10:	48 8b 10             	mov    (%rax),%rdx
   11b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b17:	48 89 10             	mov    %rdx,(%rax)
   11b1a:	90                   	nop
   11b1b:	5d                   	pop    %rbp
   11b1c:	c3                   	ret
   11b1d:	90                   	nop

0000000000011b1e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11b1e:	55                   	push   %rbp
   11b1f:	48 89 e5             	mov    %rsp,%rbp
   11b22:	41 54                	push   %r12
   11b24:	53                   	push   %rbx
   11b25:	48 83 ec 60          	sub    $0x60,%rsp
   11b29:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11b2d:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11b31:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11b35:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   11b39:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   11b3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11b41:	48 89 c7             	mov    %rax,%rdi
   11b44:	e8 5a 11 00 00       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11b49:	49 89 c4             	mov    %rax,%r12
   11b4c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11b50:	48 89 c7             	mov    %rax,%rdi
   11b53:	e8 3d 11 00 00       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11b58:	48 89 c3             	mov    %rax,%rbx
   11b5b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11b5f:	48 89 c7             	mov    %rax,%rdi
   11b62:	e8 20 11 00 00       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11b67:	48 89 c2             	mov    %rax,%rdx
   11b6a:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   11b6e:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11b72:	4d 89 e0             	mov    %r12,%r8
   11b75:	48 89 d9             	mov    %rbx,%rcx
   11b78:	48 89 c7             	mov    %rax,%rdi
   11b7b:	e8 32 11 00 00       	call   12cb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   11b80:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11b84:	48 89 c7             	mov    %rax,%rdi
   11b87:	e8 26 16 00 00       	call   131b2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   11b8c:	48 89 c2             	mov    %rax,%rdx
   11b8f:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   11b93:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11b97:	48 89 ce             	mov    %rcx,%rsi
   11b9a:	48 89 c7             	mov    %rax,%rdi
   11b9d:	e8 c2 11 00 00       	call   12d64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   11ba2:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11ba6:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   11baa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11bae:	48 85 c0             	test   %rax,%rax
   11bb1:	74 1c                	je     11bcf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   11bb3:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11bb7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11bbb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bbf:	48 89 ce             	mov    %rcx,%rsi
   11bc2:	48 89 c7             	mov    %rax,%rdi
   11bc5:	e8 06 16 00 00       	call   131d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   11bca:	48 89 c3             	mov    %rax,%rbx
   11bcd:	eb 17                	jmp    11be6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   11bcf:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11bd3:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11bd7:	48 89 d6             	mov    %rdx,%rsi
   11bda:	48 89 c7             	mov    %rax,%rdi
   11bdd:	e8 44 16 00 00       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   11be2:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   11be6:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bea:	48 89 c7             	mov    %rax,%rdi
   11bed:	e8 3c 11 00 00       	call   12d2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11bf2:	48 89 d8             	mov    %rbx,%rax
   11bf5:	eb 1a                	jmp    11c11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   11bf7:	48 89 c3             	mov    %rax,%rbx
   11bfa:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bfe:	48 89 c7             	mov    %rax,%rdi
   11c01:	e8 28 11 00 00       	call   12d2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11c06:	48 89 d8             	mov    %rbx,%rax
   11c09:	48 89 c7             	mov    %rax,%rdi
   11c0c:	e8 9f 2a ff ff       	call   46b0 <_Unwind_Resume@plt>
   11c11:	48 83 c4 60          	add    $0x60,%rsp
   11c15:	5b                   	pop    %rbx
   11c16:	41 5c                	pop    %r12
   11c18:	5d                   	pop    %rbp
   11c19:	c3                   	ret

0000000000011c1a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11c1a:	55                   	push   %rbp
   11c1b:	48 89 e5             	mov    %rsp,%rbp
   11c1e:	48 83 ec 20          	sub    $0x20,%rsp
   11c22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11c26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11c2a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c2e:	48 89 d6             	mov    %rdx,%rsi
   11c31:	48 89 c7             	mov    %rax,%rdi
   11c34:	e8 07 16 00 00       	call   13240 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11c39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c3d:	c9                   	leave
   11c3e:	c3                   	ret
   11c3f:	90                   	nop

0000000000011c40 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11c40:	55                   	push   %rbp
   11c41:	48 89 e5             	mov    %rsp,%rbp
   11c44:	48 83 ec 20          	sub    $0x20,%rsp
   11c48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11c4c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c50:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11c54:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11c58:	48 89 d6             	mov    %rdx,%rsi
   11c5b:	48 89 c7             	mov    %rax,%rdi
   11c5e:	e8 dd 15 00 00       	call   13240 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11c63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11c67:	c9                   	leave
   11c68:	c3                   	ret

0000000000011c69 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   11c69:	55                   	push   %rbp
   11c6a:	48 89 e5             	mov    %rsp,%rbp
   11c6d:	53                   	push   %rbx
   11c6e:	48 83 ec 18          	sub    $0x18,%rsp
   11c72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11c76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   11c7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11c7e:	48 89 c7             	mov    %rax,%rdi
   11c81:	e8 d8 15 00 00       	call   1325e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11c86:	48 8b 18             	mov    (%rax),%rbx
   11c89:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11c8d:	48 89 c7             	mov    %rax,%rdi
   11c90:	e8 c9 15 00 00       	call   1325e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11c95:	48 8b 00             	mov    (%rax),%rax
   11c98:	48 39 c3             	cmp    %rax,%rbx
   11c9b:	0f 94 c0             	sete   %al
   11c9e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11ca2:	c9                   	leave
   11ca3:	c3                   	ret

0000000000011ca4 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11ca4:	55                   	push   %rbp
   11ca5:	48 89 e5             	mov    %rsp,%rbp
   11ca8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11cb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11cb4:	48 8b 10             	mov    (%rax),%rdx
   11cb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cbb:	48 89 10             	mov    %rdx,(%rax)
   11cbe:	90                   	nop
   11cbf:	5d                   	pop    %rbp
   11cc0:	c3                   	ret
   11cc1:	90                   	nop

0000000000011cc2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11cc2:	55                   	push   %rbp
   11cc3:	48 89 e5             	mov    %rsp,%rbp
   11cc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11cca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cce:	5d                   	pop    %rbp
   11ccf:	c3                   	ret

0000000000011cd0 <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11cd0:	55                   	push   %rbp
   11cd1:	48 89 e5             	mov    %rsp,%rbp
   11cd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11cd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11cdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11ce0:	48 8b 10             	mov    (%rax),%rdx
   11ce3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ce7:	48 89 10             	mov    %rdx,(%rax)
   11cea:	90                   	nop
   11ceb:	5d                   	pop    %rbp
   11cec:	c3                   	ret
   11ced:	90                   	nop

0000000000011cee <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11cee:	55                   	push   %rbp
   11cef:	48 89 e5             	mov    %rsp,%rbp
   11cf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11cf6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cfa:	5d                   	pop    %rbp
   11cfb:	c3                   	ret

0000000000011cfc <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   11cfc:	55                   	push   %rbp
   11cfd:	48 89 e5             	mov    %rsp,%rbp
   11d00:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11d04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d08:	5d                   	pop    %rbp
   11d09:	c3                   	ret

0000000000011d0a <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   11d0a:	55                   	push   %rbp
   11d0b:	48 89 e5             	mov    %rsp,%rbp
   11d0e:	53                   	push   %rbx
   11d0f:	48 83 ec 38          	sub    $0x38,%rsp
   11d13:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11d17:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   11d1b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11d1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11d23:	48 89 d6             	mov    %rdx,%rsi
   11d26:	48 89 c7             	mov    %rax,%rdi
   11d29:	e8 3e 15 00 00       	call   1326c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   11d2e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   11d32:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d36:	48 89 d6             	mov    %rdx,%rsi
   11d39:	48 89 c7             	mov    %rax,%rdi
   11d3c:	e8 5f 15 00 00       	call   132a0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   11d41:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11d45:	48 89 c7             	mov    %rax,%rdi
   11d48:	e8 2d 6b ff ff       	call   887a <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   11d4d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11d51:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11d55:	48 89 d6             	mov    %rdx,%rsi
   11d58:	48 89 c7             	mov    %rax,%rdi
   11d5b:	e8 66 15 00 00       	call   132c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   11d60:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11d64:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d68:	48 89 d6             	mov    %rdx,%rsi
   11d6b:	48 89 c7             	mov    %rax,%rdi
   11d6e:	e8 53 15 00 00       	call   132c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   11d73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11d77:	48 89 c7             	mov    %rax,%rdi
   11d7a:	e8 af 7b ff ff       	call   992e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11d7f:	48 89 c3             	mov    %rax,%rbx
   11d82:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11d86:	48 89 c7             	mov    %rax,%rdi
   11d89:	e8 a0 7b ff ff       	call   992e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11d8e:	48 89 de             	mov    %rbx,%rsi
   11d91:	48 89 c7             	mov    %rax,%rdi
   11d94:	e8 85 15 00 00       	call   1331e <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   11d99:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11d9d:	48 89 c7             	mov    %rax,%rdi
   11da0:	e8 67 6b ff ff       	call   890c <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   11da5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11da9:	c9                   	leave
   11daa:	c3                   	ret
   11dab:	90                   	nop

0000000000011dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11dac:	55                   	push   %rbp
   11dad:	48 89 e5             	mov    %rsp,%rbp
   11db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11db8:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11dbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11dc0:	48 8b 00             	mov    (%rax),%rax
   11dc3:	48 29 c2             	sub    %rax,%rdx
   11dc6:	48 89 d0             	mov    %rdx,%rax
   11dc9:	48 c1 f8 03          	sar    $0x3,%rax
   11dcd:	5d                   	pop    %rbp
   11dce:	c3                   	ret
   11dcf:	90                   	nop

0000000000011dd0 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   11dd0:	55                   	push   %rbp
   11dd1:	48 89 e5             	mov    %rsp,%rbp
   11dd4:	53                   	push   %rbx
   11dd5:	48 83 ec 38          	sub    $0x38,%rsp
   11dd9:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11ddd:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   11de1:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11de6:	0f 84 e7 01 00 00    	je     11fd3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   11dec:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11df0:	48 89 c7             	mov    %rax,%rdi
   11df3:	e8 b4 ff ff ff       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11df8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11dfc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e00:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   11e04:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e08:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e0c:	48 29 c2             	sub    %rax,%rdx
   11e0f:	48 89 d0             	mov    %rdx,%rax
   11e12:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11e16:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   11e1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e1e:	48 89 c7             	mov    %rax,%rdi
   11e21:	e8 18 15 00 00       	call   1333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11e26:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11e2a:	72 16                	jb     11e42 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   11e2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e30:	48 89 c7             	mov    %rax,%rdi
   11e33:	e8 06 15 00 00       	call   1333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11e38:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11e3c:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   11e40:	73 07                	jae    11e49 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   11e42:	b8 01 00 00 00       	mov    $0x1,%eax
   11e47:	eb 05                	jmp    11e4e <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   11e49:	b8 00 00 00 00       	mov    $0x0,%eax
   11e4e:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   11e50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11e54:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   11e58:	72 33                	jb     11e8d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   11e5a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e5e:	48 89 c7             	mov    %rax,%rdi
   11e61:	e8 10 07 00 00       	call   12576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11e66:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   11e69:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e6d:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e71:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11e75:	48 89 ce             	mov    %rcx,%rsi
   11e78:	48 89 c7             	mov    %rax,%rdi
   11e7b:	e8 e0 14 00 00       	call   13360 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   11e80:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11e84:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   11e88:	e9 46 01 00 00       	jmp    11fd3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   11e8d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11e91:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e95:	48 8d 15 5c 78 00 00 	lea    0x785c(%rip),%rdx        # 196f8 <_ZN6__pstl9execution2v1L5unseqE+0x3b9>
   11e9c:	48 89 ce             	mov    %rcx,%rsi
   11e9f:	48 89 c7             	mov    %rax,%rdi
   11ea2:	e8 e3 14 00 00       	call   1338a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   11ea7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   11eab:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11eaf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11eb3:	48 89 d6             	mov    %rdx,%rsi
   11eb6:	48 89 c7             	mov    %rax,%rdi
   11eb9:	e8 94 15 00 00       	call   13452 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   11ebe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   11ec2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ec6:	48 89 c7             	mov    %rax,%rdi
   11ec9:	e8 a8 06 00 00       	call   12576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11ece:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   11ed1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11ed5:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11edc:	00 
   11edd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ee1:	48 01 c1             	add    %rax,%rcx
   11ee4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11ee8:	48 89 c6             	mov    %rax,%rsi
   11eeb:	48 89 cf             	mov    %rcx,%rdi
   11eee:	e8 6d 14 00 00       	call   13360 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   11ef3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ef7:	48 89 c7             	mov    %rax,%rdi
   11efa:	e8 77 06 00 00       	call   12576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11eff:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   11f02:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f06:	48 8b 70 08          	mov    0x8(%rax),%rsi
   11f0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f0e:	48 8b 00             	mov    (%rax),%rax
   11f11:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11f15:	48 89 c7             	mov    %rax,%rdi
   11f18:	e8 68 15 00 00       	call   13485 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   11f1d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   11f21:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f25:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   11f29:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f2d:	48 8b 12             	mov    (%rdx),%rdx
   11f30:	48 29 d1             	sub    %rdx,%rcx
   11f33:	48 c1 f9 03          	sar    $0x3,%rcx
   11f37:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   11f3a:	48 89 d6             	mov    %rdx,%rsi
   11f3d:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f41:	48 8b 0a             	mov    (%rdx),%rcx
   11f44:	48 89 f2             	mov    %rsi,%rdx
   11f47:	48 89 ce             	mov    %rcx,%rsi
   11f4a:	48 89 c7             	mov    %rax,%rdi
   11f4d:	e8 ee 05 00 00       	call   12540 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   11f52:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f56:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11f5a:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   11f5d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11f61:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11f65:	48 01 d0             	add    %rdx,%rax
   11f68:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11f6f:	00 
   11f70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f74:	48 01 c2             	add    %rax,%rdx
   11f77:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f7b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   11f7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11f83:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11f8a:	00 
   11f8b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f8f:	48 01 c2             	add    %rax,%rdx
   11f92:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f96:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   11f9a:	eb 37                	jmp    11fd3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   11f9c:	48 89 c7             	mov    %rax,%rdi
   11f9f:	e8 7c 21 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   11fa4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fa8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11fac:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   11fb0:	48 89 ce             	mov    %rcx,%rsi
   11fb3:	48 89 c7             	mov    %rax,%rdi
   11fb6:	e8 85 05 00 00       	call   12540 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   11fbb:	e8 e0 25 ff ff       	call   45a0 <__cxa_rethrow@plt>
		  __catch(...)
   11fc0:	48 89 c3             	mov    %rax,%rbx
   11fc3:	e8 78 26 ff ff       	call   4640 <__cxa_end_catch@plt>
   11fc8:	48 89 d8             	mov    %rbx,%rax
   11fcb:	48 89 c7             	mov    %rax,%rdi
   11fce:	e8 dd 26 ff ff       	call   46b0 <_Unwind_Resume@plt>
    }
   11fd3:	90                   	nop
   11fd4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11fd8:	c9                   	leave
   11fd9:	c3                   	ret

0000000000011fda <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   11fda:	55                   	push   %rbp
   11fdb:	48 89 e5             	mov    %rsp,%rbp
   11fde:	48 83 ec 20          	sub    $0x20,%rsp
   11fe2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11fe6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   11fea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11fee:	48 8b 40 08          	mov    0x8(%rax),%rax
   11ff2:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   11ff6:	48 c1 f8 03          	sar    $0x3,%rax
   11ffa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   11ffe:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   12003:	74 32                	je     12037 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   12005:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12009:	48 89 c7             	mov    %rax,%rdi
   1200c:	e8 65 05 00 00       	call   12576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   12011:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   12014:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12018:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1201c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12020:	48 89 ce             	mov    %rcx,%rsi
   12023:	48 89 c7             	mov    %rax,%rdi
   12026:	e8 59 05 00 00       	call   12584 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   1202b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1202f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12033:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   12037:	90                   	nop
   12038:	c9                   	leave
   12039:	c3                   	ret

000000000001203a <_ZNSt15__new_allocatorI6ShaderEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   1203a:	55                   	push   %rbp
   1203b:	48 89 e5             	mov    %rsp,%rbp
   1203e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12042:	90                   	nop
   12043:	5d                   	pop    %rbp
   12044:	c3                   	ret
   12045:	90                   	nop

0000000000012046 <_ZNSt15__new_allocatorI6ShaderED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12046:	55                   	push   %rbp
   12047:	48 89 e5             	mov    %rsp,%rbp
   1204a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1204e:	90                   	nop
   1204f:	5d                   	pop    %rbp
   12050:	c3                   	ret

0000000000012051 <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   12051:	55                   	push   %rbp
   12052:	48 89 e5             	mov    %rsp,%rbp
   12055:	53                   	push   %rbx
   12056:	48 83 ec 28          	sub    $0x28,%rsp
   1205a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1205e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   12062:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   12066:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1206a:	48 89 d6             	mov    %rdx,%rsi
   1206d:	48 89 c7             	mov    %rax,%rdi
   12070:	e8 85 14 00 00       	call   134fa <_ZNSaI6ShaderEC1ERKS0_>
   12075:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   12079:	48 89 c7             	mov    %rax,%rdi
   1207c:	e8 36 14 00 00       	call   134b7 <_ZNSt6vectorI6ShaderSaIS0_EE11_S_max_sizeERKS1_>
   12081:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   12085:	0f 92 c3             	setb   %bl
   12088:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1208c:	48 89 c7             	mov    %rax,%rdi
   1208f:	e8 4a eb ff ff       	call   10bde <_ZNSaI6ShaderED1Ev>
   12094:	84 db                	test   %bl,%bl
   12096:	74 0f                	je     120a7 <_ZNSt6vectorI6ShaderSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   12098:	48 8d 05 79 76 00 00 	lea    0x7679(%rip),%rax        # 19718 <_ZN6__pstl9execution2v1L5unseqE+0x3d9>
   1209f:	48 89 c7             	mov    %rax,%rdi
   120a2:	e8 c9 20 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   120a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   120ab:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   120af:	c9                   	leave
   120b0:	c3                   	ret
   120b1:	90                   	nop

00000000000120b2 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   120b2:	55                   	push   %rbp
   120b3:	48 89 e5             	mov    %rsp,%rbp
   120b6:	48 83 ec 10          	sub    $0x10,%rsp
   120ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120c2:	48 89 c7             	mov    %rax,%rdi
   120c5:	e8 14 eb ff ff       	call   10bde <_ZNSaI6ShaderED1Ev>
   120ca:	90                   	nop
   120cb:	c9                   	leave
   120cc:	c3                   	ret
   120cd:	90                   	nop

00000000000120ce <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   120ce:	55                   	push   %rbp
   120cf:	48 89 e5             	mov    %rsp,%rbp
   120d2:	53                   	push   %rbx
   120d3:	48 83 ec 28          	sub    $0x28,%rsp
   120d7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   120db:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   120df:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   120e3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120e7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   120eb:	48 89 d6             	mov    %rdx,%rsi
   120ee:	48 89 c7             	mov    %rax,%rdi
   120f1:	e8 2a 14 00 00       	call   13520 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
   120f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   120fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120fe:	48 89 d6             	mov    %rdx,%rsi
   12101:	48 89 c7             	mov    %rax,%rdi
   12104:	e8 49 14 00 00       	call   13552 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_M_create_storageEm>
   12109:	eb 1a                	jmp    12125 <_ZNSt12_Vector_baseI6ShaderSaIS0_EEC1EmRKS1_+0x57>
   1210b:	48 89 c3             	mov    %rax,%rbx
   1210e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12112:	48 89 c7             	mov    %rax,%rdi
   12115:	e8 98 ff ff ff       	call   120b2 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>
   1211a:	48 89 d8             	mov    %rbx,%rax
   1211d:	48 89 c7             	mov    %rax,%rdi
   12120:	e8 8b 25 ff ff       	call   46b0 <_Unwind_Resume@plt>
   12125:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12129:	c9                   	leave
   1212a:	c3                   	ret
   1212b:	90                   	nop

000000000001212c <_ZNSt12_Vector_baseI6ShaderSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1212c:	55                   	push   %rbp
   1212d:	48 89 e5             	mov    %rsp,%rbp
   12130:	48 83 ec 10          	sub    $0x10,%rsp
   12134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1213c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12140:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12144:	48 8b 00             	mov    (%rax),%rax
   12147:	48 29 c2             	sub    %rax,%rdx
   1214a:	48 89 d0             	mov    %rdx,%rax
   1214d:	48 c1 f8 04          	sar    $0x4,%rax
	_M_deallocate(_M_impl._M_start,
   12151:	48 89 c2             	mov    %rax,%rdx
   12154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12158:	48 8b 08             	mov    (%rax),%rcx
   1215b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1215f:	48 89 ce             	mov    %rcx,%rsi
   12162:	48 89 c7             	mov    %rax,%rdi
   12165:	e8 3e 14 00 00       	call   135a8 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m>
      }
   1216a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216e:	48 89 c7             	mov    %rax,%rdi
   12171:	e8 3c ff ff ff       	call   120b2 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implD1Ev>
   12176:	90                   	nop
   12177:	c9                   	leave
   12178:	c3                   	ret
   12179:	90                   	nop

000000000001217a <_ZNSt6vectorI6ShaderSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   1217a:	55                   	push   %rbp
   1217b:	48 89 e5             	mov    %rsp,%rbp
   1217e:	48 83 ec 10          	sub    $0x10,%rsp
   12182:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12186:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   1218a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1218e:	48 89 c7             	mov    %rax,%rdi
   12191:	e8 24 00 00 00       	call   121ba <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>
   12196:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   12199:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1219d:	48 8b 00             	mov    (%rax),%rax
   121a0:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   121a4:	48 89 ce             	mov    %rcx,%rsi
   121a7:	48 89 c7             	mov    %rax,%rdi
   121aa:	e8 2e 14 00 00       	call   135dd <_ZSt27__uninitialized_default_n_aIP6ShadermS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   121af:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   121b3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   121b7:	90                   	nop
   121b8:	c9                   	leave
   121b9:	c3                   	ret

00000000000121ba <_ZNSt12_Vector_baseI6ShaderSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   121ba:	55                   	push   %rbp
   121bb:	48 89 e5             	mov    %rsp,%rbp
   121be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   121c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121c6:	5d                   	pop    %rbp
   121c7:	c3                   	ret

00000000000121c8 <_ZSt8_DestroyIP6ShaderS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   121c8:	55                   	push   %rbp
   121c9:	48 89 e5             	mov    %rsp,%rbp
   121cc:	48 83 ec 20          	sub    $0x20,%rsp
   121d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   121d8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   121dc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   121e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121e4:	48 89 d6             	mov    %rdx,%rsi
   121e7:	48 89 c7             	mov    %rax,%rdi
   121ea:	e8 17 14 00 00       	call   13606 <_ZSt8_DestroyIP6ShaderEvT_S2_>
    }
   121ef:	90                   	nop
   121f0:	c9                   	leave
   121f1:	c3                   	ret

00000000000121f2 <_ZNSt15__new_allocatorI14VkDynamicStateEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   121f2:	55                   	push   %rbp
   121f3:	48 89 e5             	mov    %rsp,%rbp
   121f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121fa:	90                   	nop
   121fb:	5d                   	pop    %rbp
   121fc:	c3                   	ret
   121fd:	90                   	nop

00000000000121fe <_ZNSt15__new_allocatorI14VkDynamicStateED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   121fe:	55                   	push   %rbp
   121ff:	48 89 e5             	mov    %rsp,%rbp
   12202:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12206:	90                   	nop
   12207:	5d                   	pop    %rbp
   12208:	c3                   	ret
   12209:	90                   	nop

000000000001220a <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1220a:	55                   	push   %rbp
   1220b:	48 89 e5             	mov    %rsp,%rbp
   1220e:	48 83 ec 10          	sub    $0x10,%rsp
   12212:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1221a:	48 89 c7             	mov    %rax,%rdi
   1221d:	e8 f2 ea ff ff       	call   10d14 <_ZNSaI14VkDynamicStateED1Ev>
   12222:	90                   	nop
   12223:	c9                   	leave
   12224:	c3                   	ret
   12225:	90                   	nop

0000000000012226 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   12226:	55                   	push   %rbp
   12227:	48 89 e5             	mov    %rsp,%rbp
   1222a:	48 83 ec 10          	sub    $0x10,%rsp
   1222e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12232:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   12236:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1223a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1223e:	48 89 d6             	mov    %rdx,%rsi
   12241:	48 89 c7             	mov    %rax,%rdi
   12244:	e8 e3 13 00 00       	call   1362c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>
   12249:	90                   	nop
   1224a:	c9                   	leave
   1224b:	c3                   	ret

000000000001224c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1224c:	55                   	push   %rbp
   1224d:	48 89 e5             	mov    %rsp,%rbp
   12250:	48 83 ec 10          	sub    $0x10,%rsp
   12254:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   12258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1225c:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12260:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12264:	48 8b 00             	mov    (%rax),%rax
   12267:	48 29 c2             	sub    %rax,%rdx
   1226a:	48 89 d0             	mov    %rdx,%rax
   1226d:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
   12271:	48 89 c2             	mov    %rax,%rdx
   12274:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12278:	48 8b 08             	mov    (%rax),%rcx
   1227b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1227f:	48 89 ce             	mov    %rcx,%rsi
   12282:	48 89 c7             	mov    %rax,%rdi
   12285:	e8 d4 13 00 00       	call   1365e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>
      }
   1228a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1228e:	48 89 c7             	mov    %rax,%rdi
   12291:	e8 74 ff ff ff       	call   1220a <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implD1Ev>
   12296:	90                   	nop
   12297:	c9                   	leave
   12298:	c3                   	ret
   12299:	90                   	nop

000000000001229a <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>:
      begin() const noexcept { return _M_array; }
   1229a:	55                   	push   %rbp
   1229b:	48 89 e5             	mov    %rsp,%rbp
   1229e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122a6:	48 8b 00             	mov    (%rax),%rax
   122a9:	5d                   	pop    %rbp
   122aa:	c3                   	ret
   122ab:	90                   	nop

00000000000122ac <_ZNKSt16initializer_listI14VkDynamicStateE3endEv>:
      end() const noexcept { return begin() + size(); }
   122ac:	55                   	push   %rbp
   122ad:	48 89 e5             	mov    %rsp,%rbp
   122b0:	53                   	push   %rbx
   122b1:	48 83 ec 18          	sub    $0x18,%rsp
   122b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   122b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122bd:	48 89 c7             	mov    %rax,%rdi
   122c0:	e8 d5 ff ff ff       	call   1229a <_ZNKSt16initializer_listI14VkDynamicStateE5beginEv>
   122c5:	48 89 c3             	mov    %rax,%rbx
   122c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   122cc:	48 89 c7             	mov    %rax,%rdi
   122cf:	e8 c0 13 00 00       	call   13694 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>
   122d4:	48 c1 e0 02          	shl    $0x2,%rax
   122d8:	48 01 d8             	add    %rbx,%rax
   122db:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122df:	c9                   	leave
   122e0:	c3                   	ret

00000000000122e1 <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   122e1:	55                   	push   %rbp
   122e2:	48 89 e5             	mov    %rsp,%rbp
   122e5:	48 83 ec 10          	sub    $0x10,%rsp
   122e9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122ed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   122f1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   122f5:	48 89 c7             	mov    %rax,%rdi
   122f8:	e8 a9 13 00 00       	call   136a6 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   122fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12301:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12305:	48 89 d6             	mov    %rdx,%rsi
   12308:	48 89 c7             	mov    %rax,%rdi
   1230b:	e8 a1 13 00 00       	call   136b1 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   12310:	c9                   	leave
   12311:	c3                   	ret

0000000000012312 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   12312:	55                   	push   %rbp
   12313:	48 89 e5             	mov    %rsp,%rbp
   12316:	53                   	push   %rbx
   12317:	48 83 ec 38          	sub    $0x38,%rsp
   1231b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1231f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12323:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   12327:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1232b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1232f:	48 89 d6             	mov    %rdx,%rsi
   12332:	48 89 c7             	mov    %rax,%rdi
   12335:	e8 a7 ff ff ff       	call   122e1 <_ZSt8distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   1233a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1233e:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   12342:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12346:	48 89 c7             	mov    %rax,%rdi
   12349:	e8 74 00 00 00       	call   123c2 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   1234e:	48 89 c2             	mov    %rax,%rdx
   12351:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12355:	48 89 d6             	mov    %rdx,%rsi
   12358:	48 89 c7             	mov    %rax,%rdi
   1235b:	e8 6b 13 00 00       	call   136cb <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>
   12360:	48 89 c6             	mov    %rax,%rsi
   12363:	48 89 df             	mov    %rbx,%rdi
   12366:	e8 c1 13 00 00       	call   1372c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>
   1236b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1236f:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   12372:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12376:	48 8b 00             	mov    (%rax),%rax
   12379:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1237d:	48 c1 e2 02          	shl    $0x2,%rdx
   12381:	48 01 c2             	add    %rax,%rdx
   12384:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12388:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   1238c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12390:	48 89 c7             	mov    %rax,%rdi
   12393:	e8 2a 00 00 00       	call   123c2 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>
   12398:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   1239b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1239f:	48 8b 10             	mov    (%rax),%rdx
   123a2:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   123a6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   123aa:	48 89 c7             	mov    %rax,%rdi
   123ad:	e8 ad 13 00 00       	call   1375f <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   123b2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   123b6:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   123ba:	90                   	nop
   123bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   123bf:	c9                   	leave
   123c0:	c3                   	ret
   123c1:	90                   	nop

00000000000123c2 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   123c2:	55                   	push   %rbp
   123c3:	48 89 e5             	mov    %rsp,%rbp
   123c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   123ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123ce:	5d                   	pop    %rbp
   123cf:	c3                   	ret

00000000000123d0 <_ZSt8_DestroyIP14VkDynamicStateS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   123d0:	55                   	push   %rbp
   123d1:	48 89 e5             	mov    %rsp,%rbp
   123d4:	48 83 ec 20          	sub    $0x20,%rsp
   123d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   123dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   123e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   123e4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   123e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123ec:	48 89 d6             	mov    %rdx,%rsi
   123ef:	48 89 c7             	mov    %rax,%rdi
   123f2:	e8 99 13 00 00       	call   13790 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>
    }
   123f7:	90                   	nop
   123f8:	c9                   	leave
   123f9:	c3                   	ret

00000000000123fa <_ZNKSt6vectorI14VkDynamicStateSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   123fa:	55                   	push   %rbp
   123fb:	48 89 e5             	mov    %rsp,%rbp
   123fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12402:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   12406:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1240a:	5d                   	pop    %rbp
   1240b:	c3                   	ret

000000000001240c <_ZSt4moveIRP12VkPipeline_TEONSt16remove_referenceIT_E4typeEOS4_>:
    move(_Tp&& __t) noexcept
   1240c:	55                   	push   %rbp
   1240d:	48 89 e5             	mov    %rsp,%rbp
   12410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   12414:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12418:	5d                   	pop    %rbp
   12419:	c3                   	ret

000000000001241a <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_>:
      vector<_Tp, _Alloc>::
   1241a:	55                   	push   %rbp
   1241b:	48 89 e5             	mov    %rsp,%rbp
   1241e:	53                   	push   %rbx
   1241f:	48 83 ec 18          	sub    $0x18,%rsp
   12423:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12427:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1242b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1242f:	48 8b 50 08          	mov    0x8(%rax),%rdx
   12433:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12437:	48 8b 40 10          	mov    0x10(%rax),%rax
   1243b:	48 39 c2             	cmp    %rax,%rdx
   1243e:	74 3c                	je     1247c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x62>
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   12440:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12444:	48 89 c7             	mov    %rax,%rdi
   12447:	e8 6a 13 00 00       	call   137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   1244c:	48 89 c2             	mov    %rax,%rdx
   1244f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12453:	48 8b 48 08          	mov    0x8(%rax),%rcx
   12457:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1245b:	48 89 ce             	mov    %rcx,%rsi
   1245e:	48 89 c7             	mov    %rax,%rdi
   12461:	e8 5e 13 00 00       	call   137c4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	    ++this->_M_impl._M_finish;
   12466:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1246a:	48 8b 40 08          	mov    0x8(%rax),%rax
   1246e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12472:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12476:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1247a:	eb 30                	jmp    124ac <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE12emplace_backIJS1_EEERS1_DpOT_+0x92>
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   1247c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12480:	48 89 c7             	mov    %rax,%rdi
   12483:	e8 2e 13 00 00       	call   137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   12488:	48 89 c3             	mov    %rax,%rbx
   1248b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1248f:	48 89 c7             	mov    %rax,%rdi
   12492:	e8 1f 45 ff ff       	call   69b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
   12497:	48 89 c1             	mov    %rax,%rcx
   1249a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1249e:	48 89 da             	mov    %rbx,%rdx
   124a1:	48 89 ce             	mov    %rcx,%rsi
   124a4:	48 89 c7             	mov    %rax,%rdi
   124a7:	e8 52 13 00 00       	call   137fe <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
	return back();
   124ac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   124b0:	48 89 c7             	mov    %rax,%rdi
   124b3:	e8 d8 14 00 00       	call   13990 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4backEv>
      }
   124b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   124bc:	c9                   	leave
   124bd:	c3                   	ret

00000000000124be <_ZN9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   124be:	55                   	push   %rbp
   124bf:	48 89 e5             	mov    %rsp,%rbp
   124c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   124ca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   124ce:	48 8b 10             	mov    (%rax),%rdx
   124d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124d5:	48 89 10             	mov    %rdx,(%rax)
   124d8:	90                   	nop
   124d9:	5d                   	pop    %rbp
   124da:	c3                   	ret
   124db:	90                   	nop

00000000000124dc <_ZNK9__gnu_cxx17__normal_iteratorIP6ShaderSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   124dc:	55                   	push   %rbp
   124dd:	48 89 e5             	mov    %rsp,%rbp
   124e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   124e4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124e8:	5d                   	pop    %rbp
   124e9:	c3                   	ret

00000000000124ea <_ZNSaIP13VkImageView_TEC1Ev>:
   124ea:	55                   	push   %rbp
   124eb:	48 89 e5             	mov    %rsp,%rbp
   124ee:	48 83 ec 10          	sub    $0x10,%rsp
   124f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124fa:	48 89 c7             	mov    %rax,%rdi
   124fd:	e8 ce 14 00 00       	call   139d0 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   12502:	90                   	nop
   12503:	c9                   	leave
   12504:	c3                   	ret
   12505:	90                   	nop

0000000000012506 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   12506:	55                   	push   %rbp
   12507:	48 89 e5             	mov    %rsp,%rbp
   1250a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1250e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12512:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   12519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1251d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   12524:	00 
   12525:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12529:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   12530:	00 
	{ }
   12531:	90                   	nop
   12532:	5d                   	pop    %rbp
   12533:	c3                   	ret

0000000000012534 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
   12534:	55                   	push   %rbp
   12535:	48 89 e5             	mov    %rsp,%rbp
   12538:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1253c:	90                   	nop
   1253d:	5d                   	pop    %rbp
   1253e:	c3                   	ret
   1253f:	90                   	nop

0000000000012540 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   12540:	55                   	push   %rbp
   12541:	48 89 e5             	mov    %rsp,%rbp
   12544:	48 83 ec 20          	sub    $0x20,%rsp
   12548:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1254c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12550:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   12554:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12559:	74 17                	je     12572 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1255b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1255f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12563:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12567:	48 89 ce             	mov    %rcx,%rsi
   1256a:	48 89 c7             	mov    %rax,%rdi
   1256d:	e8 69 14 00 00       	call   139db <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   12572:	90                   	nop
   12573:	c9                   	leave
   12574:	c3                   	ret
   12575:	90                   	nop

0000000000012576 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12576:	55                   	push   %rbp
   12577:	48 89 e5             	mov    %rsp,%rbp
   1257a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1257e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12582:	5d                   	pop    %rbp
   12583:	c3                   	ret

0000000000012584 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12584:	55                   	push   %rbp
   12585:	48 89 e5             	mov    %rsp,%rbp
   12588:	48 83 ec 20          	sub    $0x20,%rsp
   1258c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12590:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12594:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12598:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1259c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125a0:	48 89 d6             	mov    %rdx,%rsi
   125a3:	48 89 c7             	mov    %rax,%rdi
   125a6:	e8 5e 14 00 00       	call   13a09 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   125ab:	90                   	nop
   125ac:	c9                   	leave
   125ad:	c3                   	ret

00000000000125ae <_ZNSaIP12VkPipeline_TEC1Ev>:
   125ae:	55                   	push   %rbp
   125af:	48 89 e5             	mov    %rsp,%rbp
   125b2:	48 83 ec 10          	sub    $0x10,%rsp
   125b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   125ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125be:	48 89 c7             	mov    %rax,%rdi
   125c1:	e8 6a 14 00 00       	call   13a30 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   125c6:	90                   	nop
   125c7:	c9                   	leave
   125c8:	c3                   	ret
   125c9:	90                   	nop

00000000000125ca <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   125ca:	55                   	push   %rbp
   125cb:	48 89 e5             	mov    %rsp,%rbp
   125ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   125d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125d6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   125dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   125e8:	00 
   125e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125ed:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   125f4:	00 
	{ }
   125f5:	90                   	nop
   125f6:	5d                   	pop    %rbp
   125f7:	c3                   	ret

00000000000125f8 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
   125f8:	55                   	push   %rbp
   125f9:	48 89 e5             	mov    %rsp,%rbp
   125fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12600:	90                   	nop
   12601:	5d                   	pop    %rbp
   12602:	c3                   	ret
   12603:	90                   	nop

0000000000012604 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   12604:	55                   	push   %rbp
   12605:	48 89 e5             	mov    %rsp,%rbp
   12608:	48 83 ec 20          	sub    $0x20,%rsp
   1260c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12610:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12614:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   12618:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1261d:	74 17                	je     12636 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   1261f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12623:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12627:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1262b:	48 89 ce             	mov    %rcx,%rsi
   1262e:	48 89 c7             	mov    %rax,%rdi
   12631:	e8 05 14 00 00       	call   13a3b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   12636:	90                   	nop
   12637:	c9                   	leave
   12638:	c3                   	ret
   12639:	90                   	nop

000000000001263a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   1263a:	55                   	push   %rbp
   1263b:	48 89 e5             	mov    %rsp,%rbp
   1263e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12646:	5d                   	pop    %rbp
   12647:	c3                   	ret

0000000000012648 <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12648:	55                   	push   %rbp
   12649:	48 89 e5             	mov    %rsp,%rbp
   1264c:	48 83 ec 20          	sub    $0x20,%rsp
   12650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12654:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12658:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   1265c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12660:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12664:	48 89 d6             	mov    %rdx,%rsi
   12667:	48 89 c7             	mov    %rax,%rdi
   1266a:	e8 fa 13 00 00       	call   13a69 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   1266f:	90                   	nop
   12670:	c9                   	leave
   12671:	c3                   	ret

0000000000012672 <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12672:	55                   	push   %rbp
   12673:	48 89 e5             	mov    %rsp,%rbp
   12676:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1267a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1267e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12682:	48 8b 10             	mov    (%rax),%rdx
   12685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12689:	48 89 10             	mov    %rdx,(%rax)
   1268c:	90                   	nop
   1268d:	5d                   	pop    %rbp
   1268e:	c3                   	ret
   1268f:	90                   	nop

0000000000012690 <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   12690:	55                   	push   %rbp
   12691:	48 89 e5             	mov    %rsp,%rbp
   12694:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12698:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1269c:	5d                   	pop    %rbp
   1269d:	c3                   	ret

000000000001269e <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   1269e:	55                   	push   %rbp
   1269f:	48 89 e5             	mov    %rsp,%rbp
   126a2:	53                   	push   %rbx
   126a3:	48 83 ec 18          	sub    $0x18,%rsp
   126a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   126ab:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   126af:	e8 5e d7 ff ff       	call   fe12 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   126b4:	48 89 03             	mov    %rax,(%rbx)
	{ }
   126b7:	90                   	nop
   126b8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   126bc:	c9                   	leave
   126bd:	c3                   	ret

00000000000126be <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   126be:	55                   	push   %rbp
   126bf:	48 89 e5             	mov    %rsp,%rbp
   126c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   126c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126ca:	48 8b 00             	mov    (%rax),%rax
   126cd:	5d                   	pop    %rbp
   126ce:	c3                   	ret

00000000000126cf <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   126cf:	55                   	push   %rbp
   126d0:	48 89 e5             	mov    %rsp,%rbp
   126d3:	53                   	push   %rbx
   126d4:	48 83 ec 38          	sub    $0x38,%rsp
   126d8:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   126dc:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   126e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   126e4:	48 8b 00             	mov    (%rax),%rax
   126e7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   126eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   126ef:	48 89 c7             	mov    %rax,%rdi
   126f2:	e8 6d d7 ff ff       	call   fe64 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   126f7:	48 89 c3             	mov    %rax,%rbx
   126fa:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   126fe:	48 8b 00             	mov    (%rax),%rax
   12701:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   12705:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   12709:	48 89 c7             	mov    %rax,%rdi
   1270c:	e8 53 d7 ff ff       	call   fe64 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   12711:	48 29 c3             	sub    %rax,%rbx
   12714:	48 89 da             	mov    %rbx,%rdx
   12717:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1271b:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   1271f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   12723:	48 89 d6             	mov    %rdx,%rsi
   12726:	48 89 c7             	mov    %rax,%rdi
   12729:	e8 0e d7 ff ff       	call   fe3c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   1272e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   12732:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12736:	c9                   	leave
   12737:	c3                   	ret

0000000000012738 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   12738:	55                   	push   %rbp
   12739:	48 89 e5             	mov    %rsp,%rbp
   1273c:	48 83 ec 20          	sub    $0x20,%rsp
   12740:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   12744:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12748:	48 89 c7             	mov    %rax,%rdi
   1274b:	e8 14 d7 ff ff       	call   fe64 <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   12750:	48 89 c1             	mov    %rax,%rcx
   12753:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   1275a:	9b c4 20 
   1275d:	48 89 c8             	mov    %rcx,%rax
   12760:	48 f7 ea             	imul   %rdx
   12763:	48 89 d0             	mov    %rdx,%rax
   12766:	48 c1 f8 07          	sar    $0x7,%rax
   1276a:	48 c1 f9 3f          	sar    $0x3f,%rcx
   1276e:	48 89 ca             	mov    %rcx,%rdx
   12771:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   12774:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12778:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   1277c:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   12780:	48 89 d6             	mov    %rdx,%rsi
   12783:	48 89 c7             	mov    %rax,%rdi
   12786:	e8 05 13 00 00       	call   13a90 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1278b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   1278f:	c9                   	leave
   12790:	c3                   	ret
   12791:	90                   	nop

0000000000012792 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   12792:	55                   	push   %rbp
   12793:	48 89 e5             	mov    %rsp,%rbp
   12796:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1279a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1279e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127a2:	48 8b 10             	mov    (%rax),%rdx
   127a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127a9:	48 89 10             	mov    %rdx,(%rax)
   127ac:	90                   	nop
   127ad:	5d                   	pop    %rbp
   127ae:	c3                   	ret
   127af:	90                   	nop

00000000000127b0 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   127b0:	55                   	push   %rbp
   127b1:	48 89 e5             	mov    %rsp,%rbp
   127b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   127b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127bc:	5d                   	pop    %rbp
   127bd:	c3                   	ret

00000000000127be <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   127be:	55                   	push   %rbp
   127bf:	48 89 e5             	mov    %rsp,%rbp
   127c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   127ca:	48 8b 40 08          	mov    0x8(%rax),%rax
   127ce:	5d                   	pop    %rbp
   127cf:	c3                   	ret

00000000000127d0 <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   127d0:	55                   	push   %rbp
   127d1:	48 89 e5             	mov    %rsp,%rbp
   127d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   127d8:	90                   	nop
   127d9:	5d                   	pop    %rbp
   127da:	c3                   	ret

00000000000127db <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   127db:	55                   	push   %rbp
   127dc:	48 89 e5             	mov    %rsp,%rbp
   127df:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   127e3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   127e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   127eb:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   127ef:	48 c1 f8 03          	sar    $0x3,%rax
    }
   127f3:	5d                   	pop    %rbp
   127f4:	c3                   	ret

00000000000127f5 <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   127f5:	55                   	push   %rbp
   127f6:	48 89 e5             	mov    %rsp,%rbp
   127f9:	48 83 ec 20          	sub    $0x20,%rsp
   127fd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12801:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12805:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12809:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   1280d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12811:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12815:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12819:	48 89 ce             	mov    %rcx,%rsi
   1281c:	48 89 c7             	mov    %rax,%rdi
   1281f:	e8 b4 12 00 00       	call   13ad8 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   12824:	c9                   	leave
   12825:	c3                   	ret

0000000000012826 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   12826:	55                   	push   %rbp
   12827:	48 89 e5             	mov    %rsp,%rbp
   1282a:	48 83 ec 10          	sub    $0x10,%rsp
   1282e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   12836:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1283a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1283e:	48 89 d6             	mov    %rdx,%rsi
   12841:	48 89 c7             	mov    %rax,%rdi
   12844:	e8 c4 12 00 00       	call   13b0d <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   12849:	90                   	nop
   1284a:	c9                   	leave
   1284b:	c3                   	ret

000000000001284c <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1284c:	55                   	push   %rbp
   1284d:	48 89 e5             	mov    %rsp,%rbp
   12850:	53                   	push   %rbx
   12851:	48 83 ec 28          	sub    $0x28,%rsp
   12855:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12859:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1285d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   12861:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12865:	48 89 c6             	mov    %rax,%rsi
   12868:	bf 08 00 00 00       	mov    $0x8,%edi
   1286d:	e8 ae 25 ff ff       	call   4e20 <_ZnwmPv>
   12872:	48 89 c3             	mov    %rax,%rbx
   12875:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12879:	48 89 c7             	mov    %rax,%rdi
   1287c:	e8 29 ed ff ff       	call   115aa <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   12881:	48 8b 00             	mov    (%rax),%rax
   12884:	48 89 03             	mov    %rax,(%rbx)
   12887:	90                   	nop
   12888:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1288c:	c9                   	leave
   1288d:	c3                   	ret

000000000001288e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   1288e:	55                   	push   %rbp
   1288f:	48 89 e5             	mov    %rsp,%rbp
   12892:	53                   	push   %rbx
   12893:	48 83 ec 38          	sub    $0x38,%rsp
   12897:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1289b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1289f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   128a3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128a7:	48 89 c7             	mov    %rax,%rdi
   128aa:	e8 6d 12 00 00       	call   13b1c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   128af:	48 89 c3             	mov    %rax,%rbx
   128b2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128b6:	48 89 c7             	mov    %rax,%rdi
   128b9:	e8 02 db ff ff       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128be:	48 29 c3             	sub    %rax,%rbx
   128c1:	48 89 da             	mov    %rbx,%rdx
   128c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   128c8:	48 39 c2             	cmp    %rax,%rdx
   128cb:	0f 92 c0             	setb   %al
   128ce:	84 c0                	test   %al,%al
   128d0:	74 0c                	je     128de <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   128d2:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   128d6:	48 89 c7             	mov    %rax,%rdi
   128d9:	e8 92 18 ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   128de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128e2:	48 89 c7             	mov    %rax,%rdi
   128e5:	e8 d6 da ff ff       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128ea:	48 89 c3             	mov    %rax,%rbx
   128ed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   128f1:	48 89 c7             	mov    %rax,%rdi
   128f4:	e8 c7 da ff ff       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   128f9:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   128fd:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   12901:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   12905:	48 89 d6             	mov    %rdx,%rsi
   12908:	48 89 c7             	mov    %rax,%rdi
   1290b:	e8 9d 11 00 00       	call   13aad <_ZSt3maxImERKT_S2_S2_>
   12910:	48 8b 00             	mov    (%rax),%rax
   12913:	48 01 d8             	add    %rbx,%rax
   12916:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   1291a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1291e:	48 89 c7             	mov    %rax,%rdi
   12921:	e8 9a da ff ff       	call   103c0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12926:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   1292a:	72 12                	jb     1293e <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   1292c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12930:	48 89 c7             	mov    %rax,%rdi
   12933:	e8 e4 11 00 00       	call   13b1c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12938:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   1293c:	73 0e                	jae    1294c <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   1293e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12942:	48 89 c7             	mov    %rax,%rdi
   12945:	e8 d2 11 00 00       	call   13b1c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   1294a:	eb 04                	jmp    12950 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   1294c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   12950:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12954:	c9                   	leave
   12955:	c3                   	ret

0000000000012956 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   12956:	55                   	push   %rbp
   12957:	48 89 e5             	mov    %rsp,%rbp
   1295a:	53                   	push   %rbx
   1295b:	48 83 ec 18          	sub    $0x18,%rsp
   1295f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12963:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   12967:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1296b:	48 89 c7             	mov    %rax,%rdi
   1296e:	e8 29 ec ff ff       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12973:	48 8b 18             	mov    (%rax),%rbx
   12976:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1297a:	48 89 c7             	mov    %rax,%rdi
   1297d:	e8 1a ec ff ff       	call   1159c <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   12982:	48 8b 00             	mov    (%rax),%rax
   12985:	48 89 da             	mov    %rbx,%rdx
   12988:	48 29 c2             	sub    %rax,%rdx
   1298b:	48 89 d0             	mov    %rdx,%rax
   1298e:	48 c1 f8 03          	sar    $0x3,%rax
   12992:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12996:	c9                   	leave
   12997:	c3                   	ret

0000000000012998 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12998:	55                   	push   %rbp
   12999:	48 89 e5             	mov    %rsp,%rbp
   1299c:	48 83 ec 20          	sub    $0x20,%rsp
   129a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129a4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   129a8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   129ac:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   129b0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   129b4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   129b8:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   129bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129c0:	48 89 c7             	mov    %rax,%rdi
   129c3:	e8 76 11 00 00       	call   13b3e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   129c8:	c9                   	leave
   129c9:	c3                   	ret

00000000000129ca <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   129ca:	55                   	push   %rbp
   129cb:	48 89 e5             	mov    %rsp,%rbp
   129ce:	48 83 ec 20          	sub    $0x20,%rsp
   129d2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   129d6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   129da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129de:	48 8b 00             	mov    (%rax),%rax
   129e1:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   129e5:	48 c1 e2 03          	shl    $0x3,%rdx
   129e9:	48 f7 da             	neg    %rdx
   129ec:	48 01 d0             	add    %rdx,%rax
   129ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   129f3:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   129f7:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   129fb:	48 89 d6             	mov    %rdx,%rsi
   129fe:	48 89 c7             	mov    %rax,%rdi
   12a01:	e8 78 eb ff ff       	call   1157e <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   12a06:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a0a:	c9                   	leave
   12a0b:	c3                   	ret

0000000000012a0c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   12a0c:	55                   	push   %rbp
   12a0d:	48 89 e5             	mov    %rsp,%rbp
   12a10:	53                   	push   %rbx
   12a11:	48 83 ec 28          	sub    $0x28,%rsp
   12a15:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a19:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   12a1d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12a21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12a25:	48 89 c7             	mov    %rax,%rdi
   12a28:	e8 c5 ed ff ff       	call   117f2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12a2d:	48 89 c6             	mov    %rax,%rsi
   12a30:	48 89 df             	mov    %rbx,%rdi
   12a33:	e8 6a 11 00 00       	call   13ba2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   12a38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a3c:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   12a40:	90                   	nop
   12a41:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12a45:	c9                   	leave
   12a46:	c3                   	ret
   12a47:	90                   	nop

0000000000012a48 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   12a48:	55                   	push   %rbp
   12a49:	48 89 e5             	mov    %rsp,%rbp
   12a4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   12a50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a54:	5d                   	pop    %rbp
   12a55:	c3                   	ret

0000000000012a56 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   12a56:	55                   	push   %rbp
   12a57:	48 89 e5             	mov    %rsp,%rbp
   12a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a5e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   12a62:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12a66:	8b 10                	mov    (%rax),%edx
   12a68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a6c:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   12a6e:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   12a72:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12a76:	48 8b 46 04          	mov    0x4(%rsi),%rax
   12a7a:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   12a7e:	48 89 41 04          	mov    %rax,0x4(%rcx)
   12a82:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   12a86:	48 8b 46 14          	mov    0x14(%rsi),%rax
   12a8a:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   12a8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   12a92:	5d                   	pop    %rbp
   12a93:	c3                   	ret

0000000000012a94 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   12a94:	55                   	push   %rbp
   12a95:	48 89 e5             	mov    %rsp,%rbp
   12a98:	53                   	push   %rbx
   12a99:	48 83 ec 18          	sub    $0x18,%rsp
   12a9d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12aa1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   12aa5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12aa9:	48 89 c7             	mov    %rax,%rdi
   12aac:	e8 43 11 00 00       	call   13bf4 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   12ab1:	48 89 c3             	mov    %rax,%rbx
   12ab4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ab8:	48 89 c7             	mov    %rax,%rdi
   12abb:	e8 26 11 00 00       	call   13be6 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   12ac0:	48 89 de             	mov    %rbx,%rsi
   12ac3:	48 89 c7             	mov    %rax,%rdi
   12ac6:	e8 37 11 00 00       	call   13c02 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   12acb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12acf:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   12ad3:	90                   	nop
   12ad4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ad8:	c9                   	leave
   12ad9:	c3                   	ret

0000000000012ada <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   12ada:	55                   	push   %rbp
   12adb:	48 89 e5             	mov    %rsp,%rbp
   12ade:	48 83 ec 10          	sub    $0x10,%rsp
   12ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   12ae6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12aea:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   12aee:	84 c0                	test   %al,%al
   12af0:	74 0c                	je     12afe <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   12af2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12af6:	48 89 c7             	mov    %rax,%rdi
   12af9:	e8 5e 11 00 00       	call   13c5c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   12afe:	90                   	nop
   12aff:	c9                   	leave
   12b00:	c3                   	ret
   12b01:	90                   	nop

0000000000012b02 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   12b02:	55                   	push   %rbp
   12b03:	48 89 e5             	mov    %rsp,%rbp
   12b06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b0a:	90                   	nop
   12b0b:	5d                   	pop    %rbp
   12b0c:	c3                   	ret

0000000000012b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12b0d:	55                   	push   %rbp
   12b0e:	48 89 e5             	mov    %rsp,%rbp
   12b11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   12b15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b19:	48 8b 40 18          	mov    0x18(%rax),%rax
   12b1d:	5d                   	pop    %rbp
   12b1e:	c3                   	ret

0000000000012b1f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12b1f:	55                   	push   %rbp
   12b20:	48 89 e5             	mov    %rsp,%rbp
   12b23:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   12b27:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b2b:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b2f:	5d                   	pop    %rbp
   12b30:	c3                   	ret
   12b31:	90                   	nop

0000000000012b32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12b32:	55                   	push   %rbp
   12b33:	48 89 e5             	mov    %rsp,%rbp
   12b36:	48 83 ec 10          	sub    $0x10,%rsp
   12b3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b3e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12b42:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b4a:	48 89 d6             	mov    %rdx,%rsi
   12b4d:	48 89 c7             	mov    %rax,%rdi
   12b50:	e8 1b 11 00 00       	call   13c70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   12b55:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b5d:	48 89 d6             	mov    %rdx,%rsi
   12b60:	48 89 c7             	mov    %rax,%rdi
   12b63:	e8 46 11 00 00       	call   13cae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   12b68:	90                   	nop
   12b69:	c9                   	leave
   12b6a:	c3                   	ret
   12b6b:	90                   	nop

0000000000012b6c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12b6c:	55                   	push   %rbp
   12b6d:	48 89 e5             	mov    %rsp,%rbp
   12b70:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   12b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b78:	48 8b 40 10          	mov    0x10(%rax),%rax
   12b7c:	5d                   	pop    %rbp
   12b7d:	c3                   	ret

0000000000012b7e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   12b7e:	55                   	push   %rbp
   12b7f:	48 89 e5             	mov    %rsp,%rbp
   12b82:	53                   	push   %rbx
   12b83:	48 83 ec 18          	sub    $0x18,%rsp
   12b87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   12b8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12b93:	48 89 c7             	mov    %rax,%rdi
   12b96:	e8 49 11 00 00       	call   13ce4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12b9b:	48 89 c3             	mov    %rax,%rbx
   12b9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ba2:	48 89 c7             	mov    %rax,%rdi
   12ba5:	e8 16 ee ff ff       	call   119c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12baa:	48 89 c6             	mov    %rax,%rsi
   12bad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12bb1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bb5:	48 89 d1             	mov    %rdx,%rcx
   12bb8:	48 89 da             	mov    %rbx,%rdx
   12bbb:	48 89 c7             	mov    %rax,%rdi
   12bbe:	e8 33 11 00 00       	call   13cf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   12bc3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12bc7:	c9                   	leave
   12bc8:	c3                   	ret
   12bc9:	90                   	nop

0000000000012bca <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12bca:	55                   	push   %rbp
   12bcb:	48 89 e5             	mov    %rsp,%rbp
   12bce:	48 83 ec 20          	sub    $0x20,%rsp
   12bd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12bd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bda:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12bde:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12be2:	48 89 d6             	mov    %rdx,%rsi
   12be5:	48 89 c7             	mov    %rax,%rdi
   12be8:	e8 39 06 00 00       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12bed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12bf1:	c9                   	leave
   12bf2:	c3                   	ret
   12bf3:	90                   	nop

0000000000012bf4 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   12bf4:	55                   	push   %rbp
   12bf5:	48 89 e5             	mov    %rsp,%rbp
   12bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   12bfc:	90                   	nop
   12bfd:	5d                   	pop    %rbp
   12bfe:	c3                   	ret
   12bff:	90                   	nop

0000000000012c00 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   12c00:	55                   	push   %rbp
   12c01:	48 89 e5             	mov    %rsp,%rbp
   12c04:	48 83 ec 10          	sub    $0x10,%rsp
   12c08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   12c0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c10:	48 83 c0 20          	add    $0x20,%rax
   12c14:	48 89 c7             	mov    %rax,%rdi
   12c17:	e8 70 11 00 00       	call   13d8c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   12c1c:	c9                   	leave
   12c1d:	c3                   	ret

0000000000012c1e <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   12c1e:	55                   	push   %rbp
   12c1f:	48 89 e5             	mov    %rsp,%rbp
   12c22:	48 83 ec 10          	sub    $0x10,%rsp
   12c26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12c2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   12c2e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12c32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c36:	48 89 d6             	mov    %rdx,%rsi
   12c39:	48 89 c7             	mov    %rax,%rdi
   12c3c:	e8 ef 13 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   12c41:	c1 e8 1f             	shr    $0x1f,%eax
   12c44:	c9                   	leave
   12c45:	c3                   	ret

0000000000012c46 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c46:	55                   	push   %rbp
   12c47:	48 89 e5             	mov    %rsp,%rbp
   12c4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c52:	5d                   	pop    %rbp
   12c53:	c3                   	ret

0000000000012c54 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   12c54:	55                   	push   %rbp
   12c55:	48 89 e5             	mov    %rsp,%rbp
   12c58:	53                   	push   %rbx
   12c59:	48 83 ec 18          	sub    $0x18,%rsp
   12c5d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12c61:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   12c65:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12c69:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12c6d:	48 89 c7             	mov    %rax,%rdi
   12c70:	e8 d1 ff ff ff       	call   12c46 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   12c75:	48 89 c6             	mov    %rax,%rsi
   12c78:	48 89 df             	mov    %rbx,%rdi
   12c7b:	e8 26 11 00 00       	call   13da6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   12c80:	90                   	nop
   12c81:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12c85:	c9                   	leave
   12c86:	c3                   	ret

0000000000012c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c87:	55                   	push   %rbp
   12c88:	48 89 e5             	mov    %rsp,%rbp
   12c8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c93:	5d                   	pop    %rbp
   12c94:	c3                   	ret

0000000000012c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12c95:	55                   	push   %rbp
   12c96:	48 89 e5             	mov    %rsp,%rbp
   12c99:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12c9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12ca1:	5d                   	pop    %rbp
   12ca2:	c3                   	ret

0000000000012ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12ca3:	55                   	push   %rbp
   12ca4:	48 89 e5             	mov    %rsp,%rbp
   12ca7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12cab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12caf:	5d                   	pop    %rbp
   12cb0:	c3                   	ret
   12cb1:	90                   	nop

0000000000012cb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   12cb2:	55                   	push   %rbp
   12cb3:	48 89 e5             	mov    %rsp,%rbp
   12cb6:	41 54                	push   %r12
   12cb8:	53                   	push   %rbx
   12cb9:	48 83 ec 30          	sub    $0x30,%rsp
   12cbd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12cc1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12cc5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12cc9:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12ccd:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   12cd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12cd5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12cd9:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   12cdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12ce0:	48 89 c7             	mov    %rax,%rdi
   12ce3:	e8 bb ff ff ff       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12ce8:	49 89 c4             	mov    %rax,%r12
   12ceb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12cef:	48 89 c7             	mov    %rax,%rdi
   12cf2:	e8 9e ff ff ff       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12cf7:	48 89 c3             	mov    %rax,%rbx
   12cfa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12cfe:	48 89 c7             	mov    %rax,%rdi
   12d01:	e8 81 ff ff ff       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12d06:	48 89 c6             	mov    %rax,%rsi
   12d09:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12d0d:	4c 89 e1             	mov    %r12,%rcx
   12d10:	48 89 da             	mov    %rbx,%rdx
   12d13:	48 89 c7             	mov    %rax,%rdi
   12d16:	e8 bf 10 00 00       	call   13dda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   12d1b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12d1f:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   12d23:	90                   	nop
   12d24:	48 83 c4 30          	add    $0x30,%rsp
   12d28:	5b                   	pop    %rbx
   12d29:	41 5c                	pop    %r12
   12d2b:	5d                   	pop    %rbp
   12d2c:	c3                   	ret
   12d2d:	90                   	nop

0000000000012d2e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   12d2e:	55                   	push   %rbp
   12d2f:	48 89 e5             	mov    %rsp,%rbp
   12d32:	48 83 ec 10          	sub    $0x10,%rsp
   12d36:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   12d3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d3e:	48 8b 40 08          	mov    0x8(%rax),%rax
   12d42:	48 85 c0             	test   %rax,%rax
   12d45:	74 1a                	je     12d61 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   12d47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12d4b:	48 8b 00             	mov    (%rax),%rax
   12d4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12d52:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   12d56:	48 89 d6             	mov    %rdx,%rsi
   12d59:	48 89 c7             	mov    %rax,%rdi
   12d5c:	e8 d1 fd ff ff       	call   12b32 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   12d61:	90                   	nop
   12d62:	c9                   	leave
   12d63:	c3                   	ret

0000000000012d64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12d64:	55                   	push   %rbp
   12d65:	48 89 e5             	mov    %rsp,%rbp
   12d68:	53                   	push   %rbx
   12d69:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   12d70:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   12d77:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   12d7e:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   12d85:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   12d8c:	48 89 c7             	mov    %rax,%rdi
   12d8f:	e8 c2 10 00 00       	call   13e56 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   12d94:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   12d9b:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12da2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12da9:	48 89 c7             	mov    %rax,%rdi
   12dac:	e8 33 0f 00 00       	call   13ce4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12db1:	48 39 c3             	cmp    %rax,%rbx
   12db4:	0f 94 c0             	sete   %al
   12db7:	84 c0                	test   %al,%al
   12db9:	0f 84 c8 00 00 00    	je     12e87 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   12dbf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12dc6:	48 89 c7             	mov    %rax,%rdi
   12dc9:	e8 b0 10 00 00       	call   13e7e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   12dce:	48 85 c0             	test   %rax,%rax
   12dd1:	74 44                	je     12e17 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12dd3:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12dda:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12de1:	48 89 c7             	mov    %rax,%rdi
   12de4:	e8 a7 10 00 00       	call   13e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12de9:	48 8b 00             	mov    (%rax),%rax
   12dec:	48 89 c7             	mov    %rax,%rdi
   12def:	e8 ae 10 00 00       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12df4:	48 89 c1             	mov    %rax,%rcx
   12df7:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12dfe:	48 89 c2             	mov    %rax,%rdx
   12e01:	48 89 ce             	mov    %rcx,%rsi
   12e04:	48 89 df             	mov    %rbx,%rdi
   12e07:	e8 96 ec ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12e0c:	84 c0                	test   %al,%al
   12e0e:	74 07                	je     12e17 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12e10:	b8 01 00 00 00       	mov    $0x1,%eax
   12e15:	eb 05                	jmp    12e1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   12e17:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   12e1c:	84 c0                	test   %al,%al
   12e1e:	74 49                	je     12e69 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   12e20:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e27:	48 89 c7             	mov    %rax,%rdi
   12e2a:	e8 61 10 00 00       	call   13e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12e2f:	48 89 c2             	mov    %rax,%rdx
   12e32:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   12e39:	00 00 00 00 
   12e3d:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   12e44:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12e4b:	48 89 ce             	mov    %rcx,%rsi
   12e4e:	48 89 c7             	mov    %rax,%rdi
   12e51:	e8 66 10 00 00       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12e56:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12e5d:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12e64:	e9 43 03 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12e69:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12e70:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12e77:	48 89 d6             	mov    %rdx,%rsi
   12e7a:	48 89 c7             	mov    %rax,%rdi
   12e7d:	e8 6a 10 00 00       	call   13eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12e82:	e9 25 03 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   12e87:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12e8e:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12e95:	48 89 c7             	mov    %rax,%rdi
   12e98:	e8 05 10 00 00       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12e9d:	48 89 c2             	mov    %rax,%rdx
   12ea0:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12ea7:	48 89 c6             	mov    %rax,%rsi
   12eaa:	48 89 df             	mov    %rbx,%rdi
   12ead:	e8 f0 eb ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12eb2:	84 c0                	test   %al,%al
   12eb4:	0f 84 66 01 00 00    	je     13020 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   12eba:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12ec1:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   12ec8:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12ecf:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ed6:	48 89 c7             	mov    %rax,%rdi
   12ed9:	e8 84 11 00 00       	call   14062 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12ede:	48 8b 00             	mov    (%rax),%rax
   12ee1:	48 39 c3             	cmp    %rax,%rbx
   12ee4:	0f 94 c0             	sete   %al
   12ee7:	84 c0                	test   %al,%al
   12ee9:	74 4c                	je     12f37 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   12eeb:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ef2:	48 89 c7             	mov    %rax,%rdi
   12ef5:	e8 68 11 00 00       	call   14062 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12efa:	48 89 c3             	mov    %rax,%rbx
   12efd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f04:	48 89 c7             	mov    %rax,%rdi
   12f07:	e8 56 11 00 00       	call   14062 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12f0c:	48 89 c1             	mov    %rax,%rcx
   12f0f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12f16:	48 89 da             	mov    %rbx,%rdx
   12f19:	48 89 ce             	mov    %rcx,%rsi
   12f1c:	48 89 c7             	mov    %rax,%rdi
   12f1f:	e8 50 11 00 00       	call   14074 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12f24:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   12f2b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   12f32:	e9 75 02 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   12f37:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12f3e:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   12f45:	48 89 c7             	mov    %rax,%rdi
   12f48:	e8 6b 11 00 00       	call   140b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   12f4d:	48 8b 00             	mov    (%rax),%rax
   12f50:	48 89 c7             	mov    %rax,%rdi
   12f53:	e8 4a 0f 00 00       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12f58:	48 89 c1             	mov    %rax,%rcx
   12f5b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12f62:	48 89 c2             	mov    %rax,%rdx
   12f65:	48 89 ce             	mov    %rcx,%rsi
   12f68:	48 89 df             	mov    %rbx,%rdi
   12f6b:	e8 32 eb ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12f70:	84 c0                	test   %al,%al
   12f72:	0f 84 8a 00 00 00    	je     13002 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   12f78:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   12f7f:	48 89 c7             	mov    %rax,%rdi
   12f82:	e8 86 fb ff ff       	call   12b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12f87:	48 85 c0             	test   %rax,%rax
   12f8a:	0f 94 c0             	sete   %al
   12f8d:	84 c0                	test   %al,%al
   12f8f:	74 3e                	je     12fcf <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   12f91:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   12f98:	00 00 00 00 
   12f9c:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   12fa3:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   12faa:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   12fb1:	48 89 ce             	mov    %rcx,%rsi
   12fb4:	48 89 c7             	mov    %rax,%rdi
   12fb7:	e8 00 0f 00 00       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12fbc:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12fc3:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   12fca:	e9 dd 01 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   12fcf:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   12fd6:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   12fdd:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   12fe4:	48 89 ce             	mov    %rcx,%rsi
   12fe7:	48 89 c7             	mov    %rax,%rdi
   12fea:	e8 85 10 00 00       	call   14074 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12fef:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12ff6:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   12ffd:	e9 aa 01 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13002:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13009:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13010:	48 89 d6             	mov    %rdx,%rsi
   13013:	48 89 c7             	mov    %rax,%rdi
   13016:	e8 d1 0e 00 00       	call   13eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1301b:	e9 8c 01 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   13020:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   13027:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1302e:	48 89 c7             	mov    %rax,%rdi
   13031:	e8 6c 0e 00 00       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13036:	48 89 c1             	mov    %rax,%rcx
   13039:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   13040:	48 89 c2             	mov    %rax,%rdx
   13043:	48 89 ce             	mov    %rcx,%rsi
   13046:	48 89 df             	mov    %rbx,%rdi
   13049:	e8 54 ea ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1304e:	84 c0                	test   %al,%al
   13050:	0f 84 2c 01 00 00    	je     13182 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   13056:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   1305d:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   13064:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   1306b:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13072:	48 89 c7             	mov    %rax,%rdi
   13075:	e8 16 0e 00 00       	call   13e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   1307a:	48 8b 00             	mov    (%rax),%rax
   1307d:	48 39 c3             	cmp    %rax,%rbx
   13080:	0f 94 c0             	sete   %al
   13083:	84 c0                	test   %al,%al
   13085:	74 3a                	je     130c1 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   13087:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1308e:	48 89 c7             	mov    %rax,%rdi
   13091:	e8 fa 0d 00 00       	call   13e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   13096:	48 89 c2             	mov    %rax,%rdx
   13099:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   130a0:	00 
   130a1:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   130a5:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   130a9:	48 89 ce             	mov    %rcx,%rsi
   130ac:	48 89 c7             	mov    %rax,%rdi
   130af:	e8 08 0e 00 00       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   130b4:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   130b8:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   130bc:	e9 eb 00 00 00       	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   130c1:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   130c8:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   130cf:	48 89 c7             	mov    %rax,%rdi
   130d2:	e8 09 10 00 00       	call   140e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   130d7:	48 8b 00             	mov    (%rax),%rax
   130da:	48 89 c7             	mov    %rax,%rdi
   130dd:	e8 c0 0d 00 00       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   130e2:	48 89 c2             	mov    %rax,%rdx
   130e5:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   130ec:	48 89 c6             	mov    %rax,%rsi
   130ef:	48 89 df             	mov    %rbx,%rdi
   130f2:	e8 ab e9 ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   130f7:	84 c0                	test   %al,%al
   130f9:	74 6c                	je     13167 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   130fb:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   13102:	48 89 c7             	mov    %rax,%rdi
   13105:	e8 03 fa ff ff       	call   12b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   1310a:	48 85 c0             	test   %rax,%rax
   1310d:	0f 94 c0             	sete   %al
   13110:	84 c0                	test   %al,%al
   13112:	74 2c                	je     13140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   13114:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   1311b:	00 
   1311c:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   13123:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   13127:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1312b:	48 89 ce             	mov    %rcx,%rsi
   1312e:	48 89 c7             	mov    %rax,%rdi
   13131:	e8 86 0d 00 00       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13136:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   1313a:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1313e:	eb 6c                	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   13140:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   13147:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   1314e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13152:	48 89 ce             	mov    %rcx,%rsi
   13155:	48 89 c7             	mov    %rax,%rdi
   13158:	e8 17 0f 00 00       	call   14074 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   1315d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13161:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13165:	eb 45                	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13167:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   1316e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   13175:	48 89 d6             	mov    %rdx,%rsi
   13178:	48 89 c7             	mov    %rax,%rdi
   1317b:	e8 6c 0d 00 00       	call   13eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   13180:	eb 2a                	jmp    131ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   13182:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13189:	00 
   1318a:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   1318e:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   13195:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13199:	48 89 ce             	mov    %rcx,%rsi
   1319c:	48 89 c7             	mov    %rax,%rdi
   1319f:	e8 18 0d 00 00       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   131a4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   131a8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   131ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   131b0:	c9                   	leave
   131b1:	c3                   	ret

00000000000131b2 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   131b2:	55                   	push   %rbp
   131b3:	48 89 e5             	mov    %rsp,%rbp
   131b6:	48 83 ec 10          	sub    $0x10,%rsp
   131ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   131be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   131c2:	48 8b 40 08          	mov    0x8(%rax),%rax
   131c6:	48 89 c7             	mov    %rax,%rdi
   131c9:	e8 3a 0f 00 00       	call   14108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   131ce:	c9                   	leave
   131cf:	c3                   	ret

00000000000131d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   131d0:	55                   	push   %rbp
   131d1:	48 89 e5             	mov    %rsp,%rbp
   131d4:	48 83 ec 30          	sub    $0x30,%rsp
   131d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   131dc:	48 89 d1             	mov    %rdx,%rcx
   131df:	48 89 f0             	mov    %rsi,%rax
   131e2:	48 89 fa             	mov    %rdi,%rdx
   131e5:	48 89 ca             	mov    %rcx,%rdx
   131e8:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   131ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   131f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   131f4:	48 8b 00             	mov    (%rax),%rax
   131f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   131fb:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   131ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13203:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   13207:	48 89 c7             	mov    %rax,%rdi
   1320a:	e8 25 0f 00 00       	call   14134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   1320f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   13213:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13217:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1321e:	00 
	  return __it;
   1321f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   13223:	c9                   	leave
   13224:	c3                   	ret
   13225:	90                   	nop

0000000000013226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13226:	55                   	push   %rbp
   13227:	48 89 e5             	mov    %rsp,%rbp
   1322a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1322e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   13232:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13236:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1323a:	48 89 10             	mov    %rdx,(%rax)
   1323d:	90                   	nop
   1323e:	5d                   	pop    %rbp
   1323f:	c3                   	ret

0000000000013240 <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   13240:	55                   	push   %rbp
   13241:	48 89 e5             	mov    %rsp,%rbp
   13244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   1324c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13250:	48 8b 10             	mov    (%rax),%rdx
   13253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13257:	48 89 10             	mov    %rdx,(%rax)
   1325a:	90                   	nop
   1325b:	5d                   	pop    %rbp
   1325c:	c3                   	ret
   1325d:	90                   	nop

000000000001325e <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1325e:	55                   	push   %rbp
   1325f:	48 89 e5             	mov    %rsp,%rbp
   13262:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1326a:	5d                   	pop    %rbp
   1326b:	c3                   	ret

000000000001326c <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   1326c:	55                   	push   %rbp
   1326d:	48 89 e5             	mov    %rsp,%rbp
   13270:	48 83 ec 10          	sub    $0x10,%rsp
   13274:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13278:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   1327c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13280:	48 89 c7             	mov    %rax,%rdi
   13283:	e8 70 0f 00 00       	call   141f8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13288:	48 89 c2             	mov    %rax,%rdx
   1328b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1328f:	48 89 d6             	mov    %rdx,%rsi
   13292:	48 89 c7             	mov    %rax,%rdi
   13295:	e8 de 66 ff ff       	call   9978 <_ZNSaIP9VkImage_TEC1ERKS1_>
   1329a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1329e:	c9                   	leave
   1329f:	c3                   	ret

00000000000132a0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   132a0:	55                   	push   %rbp
   132a1:	48 89 e5             	mov    %rsp,%rbp
   132a4:	48 83 ec 10          	sub    $0x10,%rsp
   132a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   132ac:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   132b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   132b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   132b8:	48 89 d6             	mov    %rdx,%rsi
   132bb:	48 89 c7             	mov    %rax,%rdi
   132be:	e8 43 0f 00 00       	call   14206 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   132c3:	90                   	nop
   132c4:	c9                   	leave
   132c5:	c3                   	ret

00000000000132c6 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   132c6:	55                   	push   %rbp
   132c7:	48 89 e5             	mov    %rsp,%rbp
   132ca:	48 83 ec 30          	sub    $0x30,%rsp
   132ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   132d2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   132d6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132da:	48 89 c7             	mov    %rax,%rdi
   132dd:	e8 18 7b ff ff       	call   adfa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   132e2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   132e6:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132ea:	48 89 d6             	mov    %rdx,%rsi
   132ed:	48 89 c7             	mov    %rax,%rdi
   132f0:	e8 37 0f 00 00       	call   1422c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   132f5:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   132f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132fd:	48 89 d6             	mov    %rdx,%rsi
   13300:	48 89 c7             	mov    %rax,%rdi
   13303:	e8 24 0f 00 00       	call   1422c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   13308:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   1330c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13310:	48 89 d6             	mov    %rdx,%rsi
   13313:	48 89 c7             	mov    %rax,%rdi
   13316:	e8 11 0f 00 00       	call   1422c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   1331b:	90                   	nop
   1331c:	c9                   	leave
   1331d:	c3                   	ret

000000000001331e <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   1331e:	55                   	push   %rbp
   1331f:	48 89 e5             	mov    %rsp,%rbp
   13322:	48 83 ec 10          	sub    $0x10,%rsp
   13326:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1332a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   1332e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13332:	48 89 c7             	mov    %rax,%rdi
   13335:	e8 2f 0f 00 00       	call   14269 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   1333a:	90                   	nop
   1333b:	c9                   	leave
   1333c:	c3                   	ret
   1333d:	90                   	nop

000000000001333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   1333e:	55                   	push   %rbp
   1333f:	48 89 e5             	mov    %rsp,%rbp
   13342:	48 83 ec 10          	sub    $0x10,%rsp
   13346:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   1334a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1334e:	48 89 c7             	mov    %rax,%rdi
   13351:	e8 64 0f 00 00       	call   142ba <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13356:	48 89 c7             	mov    %rax,%rdi
   13359:	e8 19 0f 00 00       	call   14277 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   1335e:	c9                   	leave
   1335f:	c3                   	ret

0000000000013360 <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   13360:	55                   	push   %rbp
   13361:	48 89 e5             	mov    %rsp,%rbp
   13364:	48 83 ec 20          	sub    $0x20,%rsp
   13368:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1336c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13370:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   13374:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13378:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1337c:	48 89 d6             	mov    %rdx,%rsi
   1337f:	48 89 c7             	mov    %rax,%rdi
   13382:	e8 41 0f 00 00       	call   142c8 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   13387:	c9                   	leave
   13388:	c3                   	ret
   13389:	90                   	nop

000000000001338a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   1338a:	55                   	push   %rbp
   1338b:	48 89 e5             	mov    %rsp,%rbp
   1338e:	53                   	push   %rbx
   1338f:	48 83 ec 38          	sub    $0x38,%rsp
   13393:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13397:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1339b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1339f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133a3:	48 89 c7             	mov    %rax,%rdi
   133a6:	e8 93 ff ff ff       	call   1333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   133ab:	48 89 c3             	mov    %rax,%rbx
   133ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133b2:	48 89 c7             	mov    %rax,%rdi
   133b5:	e8 f2 e9 ff ff       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133ba:	48 29 c3             	sub    %rax,%rbx
   133bd:	48 89 da             	mov    %rbx,%rdx
   133c0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   133c4:	48 39 c2             	cmp    %rax,%rdx
   133c7:	0f 92 c0             	setb   %al
   133ca:	84 c0                	test   %al,%al
   133cc:	74 0c                	je     133da <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   133ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   133d2:	48 89 c7             	mov    %rax,%rdi
   133d5:	e8 96 0d ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   133da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133de:	48 89 c7             	mov    %rax,%rdi
   133e1:	e8 c6 e9 ff ff       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133e6:	48 89 c3             	mov    %rax,%rbx
   133e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   133ed:	48 89 c7             	mov    %rax,%rdi
   133f0:	e8 b7 e9 ff ff       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   133f5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   133f9:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   133fd:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13401:	48 89 d6             	mov    %rdx,%rsi
   13404:	48 89 c7             	mov    %rax,%rdi
   13407:	e8 a1 06 00 00       	call   13aad <_ZSt3maxImERKT_S2_S2_>
   1340c:	48 8b 00             	mov    (%rax),%rax
   1340f:	48 01 d8             	add    %rbx,%rax
   13412:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1341a:	48 89 c7             	mov    %rax,%rdi
   1341d:	e8 8a e9 ff ff       	call   11dac <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   13422:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13426:	72 12                	jb     1343a <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   13428:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1342c:	48 89 c7             	mov    %rax,%rdi
   1342f:	e8 0a ff ff ff       	call   1333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13434:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13438:	73 0e                	jae    13448 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   1343a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1343e:	48 89 c7             	mov    %rax,%rdi
   13441:	e8 f8 fe ff ff       	call   1333e <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13446:	eb 04                	jmp    1344c <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   13448:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1344c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13450:	c9                   	leave
   13451:	c3                   	ret

0000000000013452 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   13452:	55                   	push   %rbp
   13453:	48 89 e5             	mov    %rsp,%rbp
   13456:	48 83 ec 10          	sub    $0x10,%rsp
   1345a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1345e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   13462:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13467:	74 15                	je     1347e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   13469:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1346d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13471:	48 89 d6             	mov    %rdx,%rsi
   13474:	48 89 c7             	mov    %rax,%rdi
   13477:	e8 75 0e 00 00       	call   142f1 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   1347c:	eb 05                	jmp    13483 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   1347e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   13483:	c9                   	leave
   13484:	c3                   	ret

0000000000013485 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   13485:	55                   	push   %rbp
   13486:	48 89 e5             	mov    %rsp,%rbp
   13489:	48 83 ec 20          	sub    $0x20,%rsp
   1348d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13491:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13495:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13499:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1349d:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   134a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   134a5:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   134a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134ad:	48 89 c7             	mov    %rax,%rdi
   134b0:	e8 66 0e 00 00       	call   1431b <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   134b5:	c9                   	leave
   134b6:	c3                   	ret

00000000000134b7 <_ZNSt6vectorI6ShaderSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   134b7:	55                   	push   %rbp
   134b8:	48 89 e5             	mov    %rsp,%rbp
   134bb:	48 83 ec 20          	sub    $0x20,%rsp
   134bf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   134c3:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   134ca:	ff ff 07 
   134cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   134d1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   134d5:	48 89 c7             	mov    %rax,%rdi
   134d8:	e8 a1 0e 00 00       	call   1437e <_ZNSt16allocator_traitsISaI6ShaderEE8max_sizeERKS1_>
   134dd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   134e1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   134e5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   134e9:	48 89 d6             	mov    %rdx,%rsi
   134ec:	48 89 c7             	mov    %rax,%rdi
   134ef:	e8 f9 1d ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
   134f4:	48 8b 00             	mov    (%rax),%rax
      }
   134f7:	c9                   	leave
   134f8:	c3                   	ret
   134f9:	90                   	nop

00000000000134fa <_ZNSaI6ShaderEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   134fa:	55                   	push   %rbp
   134fb:	48 89 e5             	mov    %rsp,%rbp
   134fe:	48 83 ec 10          	sub    $0x10,%rsp
   13502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13506:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   1350a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1350e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13512:	48 89 d6             	mov    %rdx,%rsi
   13515:	48 89 c7             	mov    %rax,%rdi
   13518:	e8 7b 0e 00 00       	call   14398 <_ZNSt15__new_allocatorI6ShaderEC1ERKS1_>
   1351d:	90                   	nop
   1351e:	c9                   	leave
   1351f:	c3                   	ret

0000000000013520 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   13520:	55                   	push   %rbp
   13521:	48 89 e5             	mov    %rsp,%rbp
   13524:	48 83 ec 10          	sub    $0x10,%rsp
   13528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1352c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   13530:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13534:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13538:	48 89 d6             	mov    %rdx,%rsi
   1353b:	48 89 c7             	mov    %rax,%rdi
   1353e:	e8 b7 ff ff ff       	call   134fa <_ZNSaI6ShaderEC1ERKS0_>
   13543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13547:	48 89 c7             	mov    %rax,%rdi
   1354a:	e8 59 0e 00 00       	call   143a8 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1354f:	90                   	nop
   13550:	c9                   	leave
   13551:	c3                   	ret

0000000000013552 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   13552:	55                   	push   %rbp
   13553:	48 89 e5             	mov    %rsp,%rbp
   13556:	48 83 ec 10          	sub    $0x10,%rsp
   1355a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1355e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   13562:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13566:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1356a:	48 89 d6             	mov    %rdx,%rsi
   1356d:	48 89 c7             	mov    %rax,%rdi
   13570:	e8 61 0e 00 00       	call   143d6 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm>
   13575:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13579:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   1357c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13580:	48 8b 10             	mov    (%rax),%rdx
   13583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13587:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1358b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1358f:	48 8b 00             	mov    (%rax),%rax
   13592:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13596:	48 c1 e2 04          	shl    $0x4,%rdx
   1359a:	48 01 c2             	add    %rax,%rdx
   1359d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135a1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   135a5:	90                   	nop
   135a6:	c9                   	leave
   135a7:	c3                   	ret

00000000000135a8 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   135a8:	55                   	push   %rbp
   135a9:	48 89 e5             	mov    %rsp,%rbp
   135ac:	48 83 ec 20          	sub    $0x20,%rsp
   135b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135b8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   135bc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   135c1:	74 17                	je     135da <_ZNSt12_Vector_baseI6ShaderSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   135c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   135cb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   135cf:	48 89 ce             	mov    %rcx,%rsi
   135d2:	48 89 c7             	mov    %rax,%rdi
   135d5:	e8 2f 0e 00 00       	call   14409 <_ZNSt16allocator_traitsISaI6ShaderEE10deallocateERS1_PS0_m>
      }
   135da:	90                   	nop
   135db:	c9                   	leave
   135dc:	c3                   	ret

00000000000135dd <_ZSt27__uninitialized_default_n_aIP6ShadermS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   135dd:	55                   	push   %rbp
   135de:	48 89 e5             	mov    %rsp,%rbp
   135e1:	48 83 ec 20          	sub    $0x20,%rsp
   135e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   135e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   135ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   135f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   135f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   135f9:	48 89 d6             	mov    %rdx,%rsi
   135fc:	48 89 c7             	mov    %rax,%rdi
   135ff:	e8 33 0e 00 00       	call   14437 <_ZSt25__uninitialized_default_nIP6ShadermET_S2_T0_>
   13604:	c9                   	leave
   13605:	c3                   	ret

0000000000013606 <_ZSt8_DestroyIP6ShaderEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13606:	55                   	push   %rbp
   13607:	48 89 e5             	mov    %rsp,%rbp
   1360a:	48 83 ec 10          	sub    $0x10,%rsp
   1360e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13612:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13616:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1361a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1361e:	48 89 d6             	mov    %rdx,%rsi
   13621:	48 89 c7             	mov    %rax,%rdi
   13624:	e8 37 0e 00 00       	call   14460 <_ZNSt12_Destroy_auxILb1EE9__destroyIP6ShaderEEvT_S4_>
    }
   13629:	90                   	nop
   1362a:	c9                   	leave
   1362b:	c3                   	ret

000000000001362c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   1362c:	55                   	push   %rbp
   1362d:	48 89 e5             	mov    %rsp,%rbp
   13630:	48 83 ec 10          	sub    $0x10,%rsp
   13634:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13638:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   1363c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13640:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13644:	48 89 d6             	mov    %rdx,%rsi
   13647:	48 89 c7             	mov    %rax,%rdi
   1364a:	e8 21 0e 00 00       	call   14470 <_ZNSaI14VkDynamicStateEC1ERKS0_>
   1364f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13653:	48 89 c7             	mov    %rax,%rdi
   13656:	e8 3b 0e 00 00       	call   14496 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   1365b:	90                   	nop
   1365c:	c9                   	leave
   1365d:	c3                   	ret

000000000001365e <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   1365e:	55                   	push   %rbp
   1365f:	48 89 e5             	mov    %rsp,%rbp
   13662:	48 83 ec 20          	sub    $0x20,%rsp
   13666:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1366a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1366e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   13672:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13677:	74 17                	je     13690 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   13679:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1367d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13681:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13685:	48 89 ce             	mov    %rcx,%rsi
   13688:	48 89 c7             	mov    %rax,%rdi
   1368b:	e8 34 0e 00 00       	call   144c4 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>
      }
   13690:	90                   	nop
   13691:	c9                   	leave
   13692:	c3                   	ret
   13693:	90                   	nop

0000000000013694 <_ZNKSt16initializer_listI14VkDynamicStateE4sizeEv>:
   13694:	55                   	push   %rbp
   13695:	48 89 e5             	mov    %rsp,%rbp
   13698:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1369c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136a0:	48 8b 40 08          	mov    0x8(%rax),%rax
   136a4:	5d                   	pop    %rbp
   136a5:	c3                   	ret

00000000000136a6 <_ZSt19__iterator_categoryIPK14VkDynamicStateENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   136a6:	55                   	push   %rbp
   136a7:	48 89 e5             	mov    %rsp,%rbp
   136aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   136ae:	90                   	nop
   136af:	5d                   	pop    %rbp
   136b0:	c3                   	ret

00000000000136b1 <_ZSt10__distanceIPK14VkDynamicStateENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   136b1:	55                   	push   %rbp
   136b2:	48 89 e5             	mov    %rsp,%rbp
   136b5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136b9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   136bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   136c1:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   136c5:	48 c1 f8 02          	sar    $0x2,%rax
    }
   136c9:	5d                   	pop    %rbp
   136ca:	c3                   	ret

00000000000136cb <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   136cb:	55                   	push   %rbp
   136cc:	48 89 e5             	mov    %rsp,%rbp
   136cf:	53                   	push   %rbx
   136d0:	48 83 ec 28          	sub    $0x28,%rsp
   136d4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   136d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   136dc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   136e0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   136e4:	48 89 d6             	mov    %rdx,%rsi
   136e7:	48 89 c7             	mov    %rax,%rdi
   136ea:	e8 81 0d 00 00       	call   14470 <_ZNSaI14VkDynamicStateEC1ERKS0_>
   136ef:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   136f3:	48 89 c7             	mov    %rax,%rdi
   136f6:	e8 f7 0d 00 00       	call   144f2 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>
   136fb:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   136ff:	0f 92 c3             	setb   %bl
   13702:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   13706:	48 89 c7             	mov    %rax,%rdi
   13709:	e8 06 d6 ff ff       	call   10d14 <_ZNSaI14VkDynamicStateED1Ev>
   1370e:	84 db                	test   %bl,%bl
   13710:	74 0f                	je     13721 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   13712:	48 8d 05 ff 5f 00 00 	lea    0x5fff(%rip),%rax        # 19718 <_ZN6__pstl9execution2v1L5unseqE+0x3d9>
   13719:	48 89 c7             	mov    %rax,%rdi
   1371c:	e8 4f 0a ff ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   13721:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   13725:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13729:	c9                   	leave
   1372a:	c3                   	ret
   1372b:	90                   	nop

000000000001372c <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1372c:	55                   	push   %rbp
   1372d:	48 89 e5             	mov    %rsp,%rbp
   13730:	48 83 ec 10          	sub    $0x10,%rsp
   13734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13738:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1373c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13741:	74 15                	je     13758 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x2c>
   13743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13747:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1374b:	48 89 d6             	mov    %rdx,%rsi
   1374e:	48 89 c7             	mov    %rax,%rdi
   13751:	e8 de 0d 00 00       	call   14534 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>
   13756:	eb 05                	jmp    1375d <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE11_M_allocateEm+0x31>
   13758:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1375d:	c9                   	leave
   1375e:	c3                   	ret

000000000001375f <_ZSt22__uninitialized_copy_aIPK14VkDynamicStatePS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   1375f:	55                   	push   %rbp
   13760:	48 89 e5             	mov    %rsp,%rbp
   13763:	48 83 ec 20          	sub    $0x20,%rsp
   13767:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1376b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1376f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13773:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   13777:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1377b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1377f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13783:	48 89 ce             	mov    %rcx,%rsi
   13786:	48 89 c7             	mov    %rax,%rdi
   13789:	e8 d0 0d 00 00       	call   1455e <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
    }
   1378e:	c9                   	leave
   1378f:	c3                   	ret

0000000000013790 <_ZSt8_DestroyIP14VkDynamicStateEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13790:	55                   	push   %rbp
   13791:	48 89 e5             	mov    %rsp,%rbp
   13794:	48 83 ec 10          	sub    $0x10,%rsp
   13798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1379c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   137a0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   137a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137a8:	48 89 d6             	mov    %rdx,%rsi
   137ab:	48 89 c7             	mov    %rax,%rdi
   137ae:	e8 e0 0d 00 00       	call   14593 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>
    }
   137b3:	90                   	nop
   137b4:	c9                   	leave
   137b5:	c3                   	ret

00000000000137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   137b6:	55                   	push   %rbp
   137b7:	48 89 e5             	mov    %rsp,%rbp
   137ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   137be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137c2:	5d                   	pop    %rbp
   137c3:	c3                   	ret

00000000000137c4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   137c4:	55                   	push   %rbp
   137c5:	48 89 e5             	mov    %rsp,%rbp
   137c8:	48 83 ec 20          	sub    $0x20,%rsp
   137cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   137d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137dc:	48 89 c7             	mov    %rax,%rdi
   137df:	e8 d2 ff ff ff       	call   137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   137e4:	48 89 c2             	mov    %rax,%rdx
   137e7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   137eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137ef:	48 89 ce             	mov    %rcx,%rsi
   137f2:	48 89 c7             	mov    %rax,%rdi
   137f5:	e8 a8 0d 00 00       	call   145a2 <_ZNSt15__new_allocatorIP12VkPipeline_TE9constructIS1_JS1_EEEvPT_DpOT0_>
	}
   137fa:	90                   	nop
   137fb:	c9                   	leave
   137fc:	c3                   	ret
   137fd:	90                   	nop

00000000000137fe <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
      vector<_Tp, _Alloc>::
   137fe:	55                   	push   %rbp
   137ff:	48 89 e5             	mov    %rsp,%rbp
   13802:	53                   	push   %rbx
   13803:	48 83 ec 68          	sub    $0x68,%rsp
   13807:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   1380b:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1380f:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   13813:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13817:	48 8d 15 c0 5e 00 00 	lea    0x5ec0(%rip),%rdx        # 196de <_ZN6__pstl9execution2v1L5unseqE+0x39f>
   1381e:	be 01 00 00 00       	mov    $0x1,%esi
   13823:	48 89 c7             	mov    %rax,%rdi
   13826:	e8 b9 0d 00 00       	call   145e4 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc>
   1382b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   1382f:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13833:	48 8b 00             	mov    (%rax),%rax
   13836:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   1383a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1383e:	48 8b 40 08          	mov    0x8(%rax),%rax
   13842:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   13846:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1384a:	48 89 c7             	mov    %rax,%rdi
   1384d:	e8 3e 31 ff ff       	call   6990 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
   13852:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   13856:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   1385a:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   1385e:	48 89 d6             	mov    %rdx,%rsi
   13861:	48 89 c7             	mov    %rax,%rdi
   13864:	e8 43 0e 00 00       	call   146ac <_ZN9__gnu_cxxmiIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   13869:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   1386d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13871:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13875:	48 89 d6             	mov    %rdx,%rsi
   13878:	48 89 c7             	mov    %rax,%rdi
   1387b:	e8 6e 0e 00 00       	call   146ee <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   13880:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   13884:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13888:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  _Alloc_traits::construct(this->_M_impl,
   1388c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   13890:	48 89 c7             	mov    %rax,%rdi
   13893:	e8 1e ff ff ff       	call   137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   13898:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   1389b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1389f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   138a6:	00 
	  _Alloc_traits::construct(this->_M_impl,
   138a7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   138ab:	48 01 c1             	add    %rax,%rcx
   138ae:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   138b2:	48 89 ce             	mov    %rcx,%rsi
   138b5:	48 89 c7             	mov    %rax,%rdi
   138b8:	e8 07 ff ff ff       	call   137c4 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_>
	  __new_finish = pointer();
   138bd:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   138c4:	00 
					 __new_start, _M_get_Tp_allocator());
   138c5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   138c9:	48 89 c7             	mov    %rax,%rdi
   138cc:	e8 69 ed ff ff       	call   1263a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   138d1:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   138d4:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   138d8:	48 89 c7             	mov    %rax,%rdi
   138db:	e8 8a 31 ff ff       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   138e0:	48 8b 30             	mov    (%rax),%rsi
   138e3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   138e7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   138eb:	48 89 d9             	mov    %rbx,%rcx
   138ee:	48 89 c7             	mov    %rax,%rdi
   138f1:	e8 2b 0e 00 00       	call   14721 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   138f6:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	      ++__new_finish;
   138fa:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)
					 __new_finish, _M_get_Tp_allocator());
   138ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13903:	48 89 c7             	mov    %rax,%rdi
   13906:	e8 2f ed ff ff       	call   1263a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1390b:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1390e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13912:	48 89 c7             	mov    %rax,%rdi
   13915:	e8 50 31 ff ff       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1391a:	48 8b 00             	mov    (%rax),%rax
   1391d:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13921:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   13925:	48 89 d9             	mov    %rbx,%rcx
   13928:	48 89 c7             	mov    %rax,%rdi
   1392b:	e8 f1 0d 00 00       	call   14721 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   13930:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
      _M_deallocate(__old_start,
   13934:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   13938:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   1393c:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   13940:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   13944:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   13948:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1394c:	48 89 ce             	mov    %rcx,%rsi
   1394f:	48 89 c7             	mov    %rax,%rdi
   13952:	e8 ad ec ff ff       	call   12604 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   13957:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   1395b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1395f:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   13962:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13966:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1396a:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   1396e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13972:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   13979:	00 
   1397a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1397e:	48 01 c2             	add    %rax,%rdx
   13981:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   13985:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   13989:	90                   	nop
   1398a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1398e:	c9                   	leave
   1398f:	c3                   	ret

0000000000013990 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   13990:	55                   	push   %rbp
   13991:	48 89 e5             	mov    %rsp,%rbp
   13994:	48 83 ec 20          	sub    $0x20,%rsp
   13998:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   1399c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   139a0:	48 89 c7             	mov    %rax,%rdi
   139a3:	e8 0e 30 ff ff       	call   69b6 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
   139a8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   139ac:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   139b0:	be 01 00 00 00       	mov    $0x1,%esi
   139b5:	48 89 c7             	mov    %rax,%rdi
   139b8:	e8 97 0d 00 00       	call   14754 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEmiEl>
   139bd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   139c1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   139c5:	48 89 c7             	mov    %rax,%rdi
   139c8:	e8 6d 30 ff ff       	call   6a3a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
      }
   139cd:	c9                   	leave
   139ce:	c3                   	ret
   139cf:	90                   	nop

00000000000139d0 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
   139d0:	55                   	push   %rbp
   139d1:	48 89 e5             	mov    %rsp,%rbp
   139d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139d8:	90                   	nop
   139d9:	5d                   	pop    %rbp
   139da:	c3                   	ret

00000000000139db <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   139db:	55                   	push   %rbp
   139dc:	48 89 e5             	mov    %rsp,%rbp
   139df:	48 83 ec 20          	sub    $0x20,%rsp
   139e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   139e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   139eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   139ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   139f3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   139f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139fb:	48 89 ce             	mov    %rcx,%rsi
   139fe:	48 89 c7             	mov    %rax,%rdi
   13a01:	e8 90 0d 00 00       	call   14796 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   13a06:	90                   	nop
   13a07:	c9                   	leave
   13a08:	c3                   	ret

0000000000013a09 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13a09:	55                   	push   %rbp
   13a0a:	48 89 e5             	mov    %rsp,%rbp
   13a0d:	48 83 ec 10          	sub    $0x10,%rsp
   13a11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13a19:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a21:	48 89 d6             	mov    %rdx,%rsi
   13a24:	48 89 c7             	mov    %rax,%rdi
   13a27:	e8 9b 0d 00 00       	call   147c7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   13a2c:	90                   	nop
   13a2d:	c9                   	leave
   13a2e:	c3                   	ret
   13a2f:	90                   	nop

0000000000013a30 <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   13a30:	55                   	push   %rbp
   13a31:	48 89 e5             	mov    %rsp,%rbp
   13a34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a38:	90                   	nop
   13a39:	5d                   	pop    %rbp
   13a3a:	c3                   	ret

0000000000013a3b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13a3b:	55                   	push   %rbp
   13a3c:	48 89 e5             	mov    %rsp,%rbp
   13a3f:	48 83 ec 20          	sub    $0x20,%rsp
   13a43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a47:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13a4b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13a4f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13a53:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a5b:	48 89 ce             	mov    %rcx,%rsi
   13a5e:	48 89 c7             	mov    %rax,%rdi
   13a61:	e8 70 0d 00 00       	call   147d6 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   13a66:	90                   	nop
   13a67:	c9                   	leave
   13a68:	c3                   	ret

0000000000013a69 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13a69:	55                   	push   %rbp
   13a6a:	48 89 e5             	mov    %rsp,%rbp
   13a6d:	48 83 ec 10          	sub    $0x10,%rsp
   13a71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a75:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13a79:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13a7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a81:	48 89 d6             	mov    %rdx,%rsi
   13a84:	48 89 c7             	mov    %rax,%rdi
   13a87:	e8 7b 0d 00 00       	call   14807 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   13a8c:	90                   	nop
   13a8d:	c9                   	leave
   13a8e:	c3                   	ret
   13a8f:	90                   	nop

0000000000013a90 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   13a90:	55                   	push   %rbp
   13a91:	48 89 e5             	mov    %rsp,%rbp
   13a94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13a98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   13a9c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13aa0:	48 8b 10             	mov    (%rax),%rdx
   13aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13aa7:	48 89 10             	mov    %rdx,(%rax)
   13aaa:	90                   	nop
   13aab:	5d                   	pop    %rbp
   13aac:	c3                   	ret

0000000000013aad <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   13aad:	55                   	push   %rbp
   13aae:	48 89 e5             	mov    %rsp,%rbp
   13ab1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ab5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   13ab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13abd:	48 8b 10             	mov    (%rax),%rdx
   13ac0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ac4:	48 8b 00             	mov    (%rax),%rax
   13ac7:	48 39 c2             	cmp    %rax,%rdx
   13aca:	73 06                	jae    13ad2 <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   13acc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ad0:	eb 04                	jmp    13ad6 <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   13ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   13ad6:	5d                   	pop    %rbp
   13ad7:	c3                   	ret

0000000000013ad8 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   13ad8:	55                   	push   %rbp
   13ad9:	48 89 e5             	mov    %rsp,%rbp
   13adc:	48 83 ec 30          	sub    $0x30,%rsp
   13ae0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ae4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13ae8:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   13aec:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   13af0:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   13af4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   13af8:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   13afc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b00:	48 89 ce             	mov    %rcx,%rsi
   13b03:	48 89 c7             	mov    %rax,%rdi
   13b06:	e8 0b 0d 00 00       	call   14816 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   13b0b:	c9                   	leave
   13b0c:	c3                   	ret

0000000000013b0d <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   13b0d:	55                   	push   %rbp
   13b0e:	48 89 e5             	mov    %rsp,%rbp
   13b11:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b15:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b19:	90                   	nop
   13b1a:	5d                   	pop    %rbp
   13b1b:	c3                   	ret

0000000000013b1c <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13b1c:	55                   	push   %rbp
   13b1d:	48 89 e5             	mov    %rsp,%rbp
   13b20:	48 83 ec 10          	sub    $0x10,%rsp
   13b24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13b28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b2c:	48 89 c7             	mov    %rax,%rdi
   13b2f:	e8 10 0d 00 00       	call   14844 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   13b34:	48 89 c7             	mov    %rax,%rdi
   13b37:	e8 5b 61 ff ff       	call   9c97 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   13b3c:	c9                   	leave
   13b3d:	c3                   	ret

0000000000013b3e <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13b3e:	55                   	push   %rbp
   13b3f:	48 89 e5             	mov    %rsp,%rbp
   13b42:	41 54                	push   %r12
   13b44:	53                   	push   %rbx
   13b45:	48 83 ec 20          	sub    $0x20,%rsp
   13b49:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13b4d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13b51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13b55:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   13b59:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13b5d:	48 89 c7             	mov    %rax,%rdi
   13b60:	e8 ed 0c 00 00       	call   14852 <_ZSt12__niter_baseIPPKcET_S3_>
   13b65:	49 89 c4             	mov    %rax,%r12
   13b68:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13b6c:	48 89 c7             	mov    %rax,%rdi
   13b6f:	e8 de 0c 00 00       	call   14852 <_ZSt12__niter_baseIPPKcET_S3_>
   13b74:	48 89 c3             	mov    %rax,%rbx
   13b77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b7b:	48 89 c7             	mov    %rax,%rdi
   13b7e:	e8 cf 0c 00 00       	call   14852 <_ZSt12__niter_baseIPPKcET_S3_>
   13b83:	48 89 c7             	mov    %rax,%rdi
   13b86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13b8a:	48 89 c1             	mov    %rax,%rcx
   13b8d:	4c 89 e2             	mov    %r12,%rdx
   13b90:	48 89 de             	mov    %rbx,%rsi
   13b93:	e8 c8 0c 00 00       	call   14860 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   13b98:	48 83 c4 20          	add    $0x20,%rsp
   13b9c:	5b                   	pop    %rbx
   13b9d:	41 5c                	pop    %r12
   13b9f:	5d                   	pop    %rbp
   13ba0:	c3                   	ret
   13ba1:	90                   	nop

0000000000013ba2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   13ba2:	55                   	push   %rbp
   13ba3:	48 89 e5             	mov    %rsp,%rbp
   13ba6:	48 83 ec 10          	sub    $0x10,%rsp
   13baa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13bae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   13bb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13bb6:	48 89 c7             	mov    %rax,%rdi
   13bb9:	e8 34 dc ff ff       	call   117f2 <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13bbe:	48 89 c1             	mov    %rax,%rcx
   13bc1:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   13bc5:	48 8b 01             	mov    (%rcx),%rax
   13bc8:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13bcc:	48 89 06             	mov    %rax,(%rsi)
   13bcf:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   13bd3:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   13bd7:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13bdb:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   13bdf:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   13be3:	90                   	nop
   13be4:	c9                   	leave
   13be5:	c3                   	ret

0000000000013be6 <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   13be6:	55                   	push   %rbp
   13be7:	48 89 e5             	mov    %rsp,%rbp
   13bea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   13bee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bf2:	5d                   	pop    %rbp
   13bf3:	c3                   	ret

0000000000013bf4 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   13bf4:	55                   	push   %rbp
   13bf5:	48 89 e5             	mov    %rsp,%rbp
   13bf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   13bfc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c00:	5d                   	pop    %rbp
   13c01:	c3                   	ret

0000000000013c02 <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   13c02:	55                   	push   %rbp
   13c03:	48 89 e5             	mov    %rsp,%rbp
   13c06:	53                   	push   %rbx
   13c07:	48 83 ec 18          	sub    $0x18,%rsp
   13c0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c0f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   13c13:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c17:	48 89 c6             	mov    %rax,%rsi
   13c1a:	bf 1c 00 00 00       	mov    $0x1c,%edi
   13c1f:	e8 fc 11 ff ff       	call   4e20 <_ZnwmPv>
   13c24:	48 89 c3             	mov    %rax,%rbx
   13c27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c2b:	48 89 c7             	mov    %rax,%rdi
   13c2e:	e8 c1 ff ff ff       	call   13bf4 <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   13c33:	48 89 c1             	mov    %rax,%rcx
   13c36:	48 8b 01             	mov    (%rcx),%rax
   13c39:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13c3d:	48 89 03             	mov    %rax,(%rbx)
   13c40:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   13c44:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   13c48:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13c4c:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   13c50:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   13c54:	90                   	nop
   13c55:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13c59:	c9                   	leave
   13c5a:	c3                   	ret
   13c5b:	90                   	nop

0000000000013c5c <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   13c5c:	55                   	push   %rbp
   13c5d:	48 89 e5             	mov    %rsp,%rbp
   13c60:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   13c64:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13c68:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   13c6c:	90                   	nop
   13c6d:	5d                   	pop    %rbp
   13c6e:	c3                   	ret
   13c6f:	90                   	nop

0000000000013c70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13c70:	55                   	push   %rbp
   13c71:	48 89 e5             	mov    %rsp,%rbp
   13c74:	53                   	push   %rbx
   13c75:	48 83 ec 18          	sub    $0x18,%rsp
   13c79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13c7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   13c81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13c85:	48 89 c7             	mov    %rax,%rdi
   13c88:	e8 73 ef ff ff       	call   12c00 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13c8d:	48 89 c3             	mov    %rax,%rbx
   13c90:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13c94:	48 89 c7             	mov    %rax,%rdi
   13c97:	e8 28 0c 00 00       	call   148c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13c9c:	48 89 de             	mov    %rbx,%rsi
   13c9f:	48 89 c7             	mov    %rax,%rdi
   13ca2:	e8 2b 0c 00 00       	call   148d2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   13ca7:	90                   	nop
   13ca8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13cac:	c9                   	leave
   13cad:	c3                   	ret

0000000000013cae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13cae:	55                   	push   %rbp
   13caf:	48 89 e5             	mov    %rsp,%rbp
   13cb2:	48 83 ec 10          	sub    $0x10,%rsp
   13cb6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13cba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   13cbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cc2:	48 89 c7             	mov    %rax,%rdi
   13cc5:	e8 fa 0b 00 00       	call   148c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13cca:	48 89 c1             	mov    %rax,%rcx
   13ccd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13cd1:	ba 01 00 00 00       	mov    $0x1,%edx
   13cd6:	48 89 c6             	mov    %rax,%rsi
   13cd9:	48 89 cf             	mov    %rcx,%rdi
   13cdc:	e8 17 0c 00 00       	call   148f8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   13ce1:	90                   	nop
   13ce2:	c9                   	leave
   13ce3:	c3                   	ret

0000000000013ce4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   13ce4:	55                   	push   %rbp
   13ce5:	48 89 e5             	mov    %rsp,%rbp
   13ce8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   13cec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13cf0:	48 83 c0 08          	add    $0x8,%rax
   13cf4:	5d                   	pop    %rbp
   13cf5:	c3                   	ret

0000000000013cf6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13cf6:	55                   	push   %rbp
   13cf7:	48 89 e5             	mov    %rsp,%rbp
   13cfa:	53                   	push   %rbx
   13cfb:	48 83 ec 38          	sub    $0x38,%rsp
   13cff:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13d03:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13d07:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13d0b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   13d0f:	eb 56                	jmp    13d67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   13d11:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13d15:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d19:	48 89 c7             	mov    %rax,%rdi
   13d1c:	e8 e7 03 00 00       	call   14108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13d21:	48 89 c1             	mov    %rax,%rcx
   13d24:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13d28:	48 89 c2             	mov    %rax,%rdx
   13d2b:	48 89 ce             	mov    %rcx,%rsi
   13d2e:	48 89 df             	mov    %rbx,%rdi
   13d31:	e8 6c dd ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13d36:	83 f0 01             	xor    $0x1,%eax
   13d39:	84 c0                	test   %al,%al
   13d3b:	74 1a                	je     13d57 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   13d3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d41:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13d45:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d49:	48 89 c7             	mov    %rax,%rdi
   13d4c:	e8 ce ed ff ff       	call   12b1f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13d51:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13d55:	eb 10                	jmp    13d67 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   13d57:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d5b:	48 89 c7             	mov    %rax,%rdi
   13d5e:	e8 aa ed ff ff       	call   12b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13d63:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   13d67:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13d6c:	75 a3                	jne    13d11 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   13d6e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13d72:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13d76:	48 89 d6             	mov    %rdx,%rsi
   13d79:	48 89 c7             	mov    %rax,%rdi
   13d7c:	e8 a5 f4 ff ff       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13d81:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13d85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d89:	c9                   	leave
   13d8a:	c3                   	ret
   13d8b:	90                   	nop

0000000000013d8c <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   13d8c:	55                   	push   %rbp
   13d8d:	48 89 e5             	mov    %rsp,%rbp
   13d90:	48 83 ec 10          	sub    $0x10,%rsp
   13d94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   13d98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d9c:	48 89 c7             	mov    %rax,%rdi
   13d9f:	e8 82 0b 00 00       	call   14926 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   13da4:	c9                   	leave
   13da5:	c3                   	ret

0000000000013da6 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   13da6:	55                   	push   %rbp
   13da7:	48 89 e5             	mov    %rsp,%rbp
   13daa:	53                   	push   %rbx
   13dab:	48 83 ec 18          	sub    $0x18,%rsp
   13daf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13db3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   13db7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13dbb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13dbf:	48 89 c7             	mov    %rax,%rdi
   13dc2:	e8 7f ee ff ff       	call   12c46 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   13dc7:	48 89 c6             	mov    %rax,%rsi
   13dca:	48 89 df             	mov    %rbx,%rdi
   13dcd:	e8 62 0b 00 00       	call   14934 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   13dd2:	90                   	nop
   13dd3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13dd7:	c9                   	leave
   13dd8:	c3                   	ret
   13dd9:	90                   	nop

0000000000013dda <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   13dda:	55                   	push   %rbp
   13ddb:	48 89 e5             	mov    %rsp,%rbp
   13dde:	41 54                	push   %r12
   13de0:	53                   	push   %rbx
   13de1:	48 83 ec 30          	sub    $0x30,%rsp
   13de5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13de9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13ded:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13df1:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   13df5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13df9:	48 89 c7             	mov    %rax,%rdi
   13dfc:	e8 59 0b 00 00       	call   1495a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   13e01:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   13e05:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13e09:	48 89 c7             	mov    %rax,%rdi
   13e0c:	e8 92 ee ff ff       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13e11:	49 89 c4             	mov    %rax,%r12
   13e14:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13e18:	48 89 c7             	mov    %rax,%rdi
   13e1b:	e8 75 ee ff ff       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   13e20:	48 89 c3             	mov    %rax,%rbx
   13e23:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13e27:	48 89 c7             	mov    %rax,%rdi
   13e2a:	e8 58 ee ff ff       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13e2f:	48 89 c2             	mov    %rax,%rdx
   13e32:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13e36:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e3a:	4d 89 e0             	mov    %r12,%r8
   13e3d:	48 89 d9             	mov    %rbx,%rcx
   13e40:	48 89 c7             	mov    %rax,%rdi
   13e43:	e8 3a 0b 00 00       	call   14982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   13e48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   13e4c:	48 83 c4 30          	add    $0x30,%rsp
   13e50:	5b                   	pop    %rbx
   13e51:	41 5c                	pop    %r12
   13e53:	5d                   	pop    %rbp
   13e54:	c3                   	ret
   13e55:	90                   	nop

0000000000013e56 <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   13e56:	55                   	push   %rbp
   13e57:	48 89 e5             	mov    %rsp,%rbp
   13e5a:	48 83 ec 20          	sub    $0x20,%rsp
   13e5e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   13e62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13e66:	48 8b 10             	mov    (%rax),%rdx
   13e69:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13e6d:	48 89 d6             	mov    %rdx,%rsi
   13e70:	48 89 c7             	mov    %rax,%rdi
   13e73:	e8 ae f3 ff ff       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e7c:	c9                   	leave
   13e7d:	c3                   	ret

0000000000013e7e <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13e7e:	55                   	push   %rbp
   13e7f:	48 89 e5             	mov    %rsp,%rbp
   13e82:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   13e86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e8a:	48 8b 40 28          	mov    0x28(%rax),%rax
   13e8e:	5d                   	pop    %rbp
   13e8f:	c3                   	ret

0000000000013e90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   13e90:	55                   	push   %rbp
   13e91:	48 89 e5             	mov    %rsp,%rbp
   13e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   13e98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13e9c:	48 83 c0 20          	add    $0x20,%rax
   13ea0:	5d                   	pop    %rbp
   13ea1:	c3                   	ret

0000000000013ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   13ea2:	55                   	push   %rbp
   13ea3:	48 89 e5             	mov    %rsp,%rbp
   13ea6:	48 83 ec 10          	sub    $0x10,%rsp
   13eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   13eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13eb2:	48 89 c7             	mov    %rax,%rdi
   13eb5:	e8 4e 02 00 00       	call   14108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13eba:	c9                   	leave
   13ebb:	c3                   	ret

0000000000013ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   13ebc:	55                   	push   %rbp
   13ebd:	48 89 e5             	mov    %rsp,%rbp
   13ec0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13ec4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13ec8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   13ecc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13ed0:	48 8b 10             	mov    (%rax),%rdx
   13ed3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ed7:	48 89 10             	mov    %rdx,(%rax)
   13eda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ede:	48 8b 10             	mov    (%rax),%rdx
   13ee1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee5:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13ee9:	90                   	nop
   13eea:	5d                   	pop    %rbp
   13eeb:	c3                   	ret

0000000000013eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13eec:	55                   	push   %rbp
   13eed:	48 89 e5             	mov    %rsp,%rbp
   13ef0:	53                   	push   %rbx
   13ef1:	48 83 ec 78          	sub    $0x78,%rsp
   13ef5:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   13ef9:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   13efd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13f01:	48 89 c7             	mov    %rax,%rdi
   13f04:	e8 b7 da ff ff       	call   119c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13f09:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   13f0d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13f11:	48 89 c7             	mov    %rax,%rdi
   13f14:	e8 cb fd ff ff       	call   13ce4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13f19:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   13f1d:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13f21:	eb 51                	jmp    13f74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   13f23:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f27:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   13f2b:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13f2f:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f33:	48 89 c7             	mov    %rax,%rdi
   13f36:	e8 cd 01 00 00       	call   14108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13f3b:	48 89 c2             	mov    %rax,%rdx
   13f3e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13f42:	48 89 c6             	mov    %rax,%rsi
   13f45:	48 89 df             	mov    %rbx,%rdi
   13f48:	e8 55 db ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13f4d:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   13f50:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13f54:	74 0e                	je     13f64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   13f56:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f5a:	48 89 c7             	mov    %rax,%rdi
   13f5d:	e8 bd eb ff ff       	call   12b1f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13f62:	eb 0c                	jmp    13f70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   13f64:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f68:	48 89 c7             	mov    %rax,%rdi
   13f6b:	e8 9d eb ff ff       	call   12b0d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13f70:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   13f74:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13f78:	48 85 c0             	test   %rax,%rax
   13f7b:	75 a6                	jne    13f23 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   13f7d:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13f81:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13f85:	48 89 d6             	mov    %rdx,%rsi
   13f88:	48 89 c7             	mov    %rax,%rdi
   13f8b:	e8 96 f2 ff ff       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   13f90:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13f94:	74 54                	je     13fea <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   13f96:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13f9a:	48 89 c7             	mov    %rax,%rdi
   13f9d:	e8 b2 0a 00 00       	call   14a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   13fa2:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13fa6:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   13faa:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13fae:	48 89 d6             	mov    %rdx,%rsi
   13fb1:	48 89 c7             	mov    %rax,%rdi
   13fb4:	e8 8d da ff ff       	call   11a46 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   13fb9:	84 c0                	test   %al,%al
   13fbb:	74 21                	je     13fde <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   13fbd:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13fc1:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13fc5:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   13fc9:	48 89 ce             	mov    %rcx,%rsi
   13fcc:	48 89 c7             	mov    %rax,%rdi
   13fcf:	e8 aa 0a 00 00       	call   14a7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   13fd4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13fd8:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13fdc:	eb 7d                	jmp    1405b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   13fde:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13fe2:	48 89 c7             	mov    %rax,%rdi
   13fe5:	e8 ce 00 00 00       	call   140b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   13fea:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13fee:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   13ff2:	48 89 c7             	mov    %rax,%rdi
   13ff5:	e8 a8 fe ff ff       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13ffa:	48 89 c1             	mov    %rax,%rcx
   13ffd:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   14001:	48 89 c2             	mov    %rax,%rdx
   14004:	48 89 ce             	mov    %rcx,%rsi
   14007:	48 89 df             	mov    %rbx,%rdi
   1400a:	e8 93 da ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   1400f:	84 c0                	test   %al,%al
   14011:	74 21                	je     14034 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   14013:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   14017:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   1401b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1401f:	48 89 ce             	mov    %rcx,%rsi
   14022:	48 89 c7             	mov    %rax,%rdi
   14025:	e8 54 0a 00 00       	call   14a7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   1402a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1402e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   14032:	eb 27                	jmp    1405b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   14034:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   1403b:	00 
   1403c:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   14040:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   14044:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   14048:	48 89 ce             	mov    %rcx,%rsi
   1404b:	48 89 c7             	mov    %rax,%rdi
   1404e:	e8 69 fe ff ff       	call   13ebc <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   14053:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14057:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   1405b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1405f:	c9                   	leave
   14060:	c3                   	ret
   14061:	90                   	nop

0000000000014062 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   14062:	55                   	push   %rbp
   14063:	48 89 e5             	mov    %rsp,%rbp
   14066:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   1406a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1406e:	48 83 c0 18          	add    $0x18,%rax
   14072:	5d                   	pop    %rbp
   14073:	c3                   	ret

0000000000014074 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14074:	55                   	push   %rbp
   14075:	48 89 e5             	mov    %rsp,%rbp
   14078:	48 83 ec 20          	sub    $0x20,%rsp
   1407c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14080:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14084:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14088:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1408c:	48 89 c7             	mov    %rax,%rdi
   1408f:	e8 2e 0a 00 00       	call   14ac2 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14094:	48 8b 10             	mov    (%rax),%rdx
   14097:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1409b:	48 89 10             	mov    %rdx,(%rax)
   1409e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140a2:	48 89 c7             	mov    %rax,%rdi
   140a5:	e8 18 0a 00 00       	call   14ac2 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   140aa:	48 8b 10             	mov    (%rax),%rdx
   140ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
   140b5:	90                   	nop
   140b6:	c9                   	leave
   140b7:	c3                   	ret

00000000000140b8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   140b8:	55                   	push   %rbp
   140b9:	48 89 e5             	mov    %rsp,%rbp
   140bc:	48 83 ec 10          	sub    $0x10,%rsp
   140c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   140c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140c8:	48 8b 00             	mov    (%rax),%rax
   140cb:	48 89 c7             	mov    %rax,%rdi
   140ce:	e8 dd 02 ff ff       	call   43b0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   140d3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   140d7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   140da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   140de:	c9                   	leave
   140df:	c3                   	ret

00000000000140e0 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   140e0:	55                   	push   %rbp
   140e1:	48 89 e5             	mov    %rsp,%rbp
   140e4:	48 83 ec 10          	sub    $0x10,%rsp
   140e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   140ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140f0:	48 8b 00             	mov    (%rax),%rax
   140f3:	48 89 c7             	mov    %rax,%rdi
   140f6:	e8 05 01 ff ff       	call   4200 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   140fb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   140ff:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   14102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   14106:	c9                   	leave
   14107:	c3                   	ret

0000000000014108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   14108:	55                   	push   %rbp
   14109:	48 89 e5             	mov    %rsp,%rbp
   1410c:	48 83 ec 20          	sub    $0x20,%rsp
   14110:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   14114:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14118:	48 89 c7             	mov    %rax,%rdi
   1411b:	e8 b0 09 00 00       	call   14ad0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   14120:	48 89 c2             	mov    %rax,%rdx
   14123:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   14127:	48 89 d6             	mov    %rdx,%rsi
   1412a:	48 89 c7             	mov    %rax,%rdi
   1412d:	e8 bc 09 00 00       	call   14aee <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   14132:	c9                   	leave
   14133:	c3                   	ret

0000000000014134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   14134:	55                   	push   %rbp
   14135:	48 89 e5             	mov    %rsp,%rbp
   14138:	41 54                	push   %r12
   1413a:	53                   	push   %rbx
   1413b:	48 83 ec 30          	sub    $0x30,%rsp
   1413f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14143:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14147:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1414b:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   1414f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   14154:	75 43                	jne    14199 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   14156:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1415a:	48 89 c7             	mov    %rax,%rdi
   1415d:	e8 82 fb ff ff       	call   13ce4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   14162:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   14166:	74 31                	je     14199 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   14168:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1416c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14170:	48 89 c7             	mov    %rax,%rdi
   14173:	e8 2a fd ff ff       	call   13ea2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   14178:	49 89 c4             	mov    %rax,%r12
   1417b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1417f:	48 89 c7             	mov    %rax,%rdi
   14182:	e8 81 ff ff ff       	call   14108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   14187:	4c 89 e2             	mov    %r12,%rdx
   1418a:	48 89 c6             	mov    %rax,%rsi
   1418d:	48 89 df             	mov    %rbx,%rdi
   14190:	e8 0d d9 ff ff       	call   11aa2 <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   14195:	84 c0                	test   %al,%al
   14197:	74 07                	je     141a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   14199:	b8 01 00 00 00       	mov    $0x1,%eax
   1419e:	eb 05                	jmp    141a5 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   141a0:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   141a5:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   141a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141ac:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   141b0:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   141b4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   141b8:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   141bc:	89 c7                	mov    %eax,%edi
   141be:	e8 8d fe fe ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   141c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141c7:	48 8b 40 28          	mov    0x28(%rax),%rax
   141cb:	48 8d 50 01          	lea    0x1(%rax),%rdx
   141cf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   141d3:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   141d7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   141db:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   141df:	48 89 d6             	mov    %rdx,%rsi
   141e2:	48 89 c7             	mov    %rax,%rdi
   141e5:	e8 3c f0 ff ff       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   141ea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   141ee:	48 83 c4 30          	add    $0x30,%rsp
   141f2:	5b                   	pop    %rbx
   141f3:	41 5c                	pop    %r12
   141f5:	5d                   	pop    %rbp
   141f6:	c3                   	ret
   141f7:	90                   	nop

00000000000141f8 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   141f8:	55                   	push   %rbp
   141f9:	48 89 e5             	mov    %rsp,%rbp
   141fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   14200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14204:	5d                   	pop    %rbp
   14205:	c3                   	ret

0000000000014206 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   14206:	55                   	push   %rbp
   14207:	48 89 e5             	mov    %rsp,%rbp
   1420a:	48 83 ec 10          	sub    $0x10,%rsp
   1420e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14212:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   14216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1421a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1421e:	48 89 d6             	mov    %rdx,%rsi
   14221:	48 89 c7             	mov    %rax,%rdi
   14224:	e8 03 63 ff ff       	call   a52c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   14229:	90                   	nop
   1422a:	c9                   	leave
   1422b:	c3                   	ret

000000000001422c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   1422c:	55                   	push   %rbp
   1422d:	48 89 e5             	mov    %rsp,%rbp
   14230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14234:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   14238:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1423c:	48 8b 10             	mov    (%rax),%rdx
   1423f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14243:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   14246:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1424a:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1424e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14252:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   14256:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1425a:	48 8b 50 10          	mov    0x10(%rax),%rdx
   1425e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14262:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   14266:	90                   	nop
   14267:	5d                   	pop    %rbp
   14268:	c3                   	ret

0000000000014269 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   14269:	55                   	push   %rbp
   1426a:	48 89 e5             	mov    %rsp,%rbp
   1426d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   14271:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14275:	5d                   	pop    %rbp
   14276:	c3                   	ret

0000000000014277 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14277:	55                   	push   %rbp
   14278:	48 89 e5             	mov    %rsp,%rbp
   1427b:	48 83 ec 20          	sub    $0x20,%rsp
   1427f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14283:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1428a:	ff ff 0f 
   1428d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14295:	48 89 c7             	mov    %rax,%rdi
   14298:	e8 63 08 00 00       	call   14b00 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   1429d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   142a1:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   142a5:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   142a9:	48 89 d6             	mov    %rdx,%rsi
   142ac:	48 89 c7             	mov    %rax,%rdi
   142af:	e8 39 10 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
   142b4:	48 8b 00             	mov    (%rax),%rax
      }
   142b7:	c9                   	leave
   142b8:	c3                   	ret
   142b9:	90                   	nop

00000000000142ba <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   142ba:	55                   	push   %rbp
   142bb:	48 89 e5             	mov    %rsp,%rbp
   142be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   142c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   142c6:	5d                   	pop    %rbp
   142c7:	c3                   	ret

00000000000142c8 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   142c8:	55                   	push   %rbp
   142c9:	48 89 e5             	mov    %rsp,%rbp
   142cc:	48 83 ec 20          	sub    $0x20,%rsp
   142d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   142d4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   142d8:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   142dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   142e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142e4:	48 89 d6             	mov    %rdx,%rsi
   142e7:	48 89 c7             	mov    %rax,%rdi
   142ea:	e8 2b 08 00 00       	call   14b1a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   142ef:	c9                   	leave
   142f0:	c3                   	ret

00000000000142f1 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   142f1:	55                   	push   %rbp
   142f2:	48 89 e5             	mov    %rsp,%rbp
   142f5:	48 83 ec 10          	sub    $0x10,%rsp
   142f9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142fd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14301:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14305:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14309:	ba 00 00 00 00       	mov    $0x0,%edx
   1430e:	48 89 ce             	mov    %rcx,%rsi
   14311:	48 89 c7             	mov    %rax,%rdi
   14314:	e8 5f 08 00 00       	call   14b78 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   14319:	c9                   	leave
   1431a:	c3                   	ret

000000000001431b <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   1431b:	55                   	push   %rbp
   1431c:	48 89 e5             	mov    %rsp,%rbp
   1431f:	41 54                	push   %r12
   14321:	53                   	push   %rbx
   14322:	48 83 ec 20          	sub    $0x20,%rsp
   14326:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1432a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1432e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14332:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14336:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1433a:	48 89 c7             	mov    %rax,%rdi
   1433d:	e8 97 08 00 00       	call   14bd9 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14342:	49 89 c4             	mov    %rax,%r12
   14345:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14349:	48 89 c7             	mov    %rax,%rdi
   1434c:	e8 88 08 00 00       	call   14bd9 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14351:	48 89 c3             	mov    %rax,%rbx
   14354:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14358:	48 89 c7             	mov    %rax,%rdi
   1435b:	e8 79 08 00 00       	call   14bd9 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14360:	48 89 c7             	mov    %rax,%rdi
   14363:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14367:	48 89 c1             	mov    %rax,%rcx
   1436a:	4c 89 e2             	mov    %r12,%rdx
   1436d:	48 89 de             	mov    %rbx,%rsi
   14370:	e8 72 08 00 00       	call   14be7 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14375:	48 83 c4 20          	add    $0x20,%rsp
   14379:	5b                   	pop    %rbx
   1437a:	41 5c                	pop    %r12
   1437c:	5d                   	pop    %rbp
   1437d:	c3                   	ret

000000000001437e <_ZNSt16allocator_traitsISaI6ShaderEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   1437e:	55                   	push   %rbp
   1437f:	48 89 e5             	mov    %rsp,%rbp
   14382:	48 83 ec 10          	sub    $0x10,%rsp
   14386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   1438a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1438e:	48 89 c7             	mov    %rax,%rdi
   14391:	e8 b4 08 00 00       	call   14c4a <_ZNKSt15__new_allocatorI6ShaderE8max_sizeEv>
      }
   14396:	c9                   	leave
   14397:	c3                   	ret

0000000000014398 <_ZNSt15__new_allocatorI6ShaderEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14398:	55                   	push   %rbp
   14399:	48 89 e5             	mov    %rsp,%rbp
   1439c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143a0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143a4:	90                   	nop
   143a5:	5d                   	pop    %rbp
   143a6:	c3                   	ret
   143a7:	90                   	nop

00000000000143a8 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   143a8:	55                   	push   %rbp
   143a9:	48 89 e5             	mov    %rsp,%rbp
   143ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   143b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143b4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   143bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143bf:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   143c6:	00 
   143c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143cb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   143d2:	00 
	{ }
   143d3:	90                   	nop
   143d4:	5d                   	pop    %rbp
   143d5:	c3                   	ret

00000000000143d6 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   143d6:	55                   	push   %rbp
   143d7:	48 89 e5             	mov    %rsp,%rbp
   143da:	48 83 ec 10          	sub    $0x10,%rsp
   143de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   143e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   143eb:	74 15                	je     14402 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm+0x2c>
   143ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143f5:	48 89 d6             	mov    %rdx,%rsi
   143f8:	48 89 c7             	mov    %rax,%rdi
   143fb:	e8 64 08 00 00       	call   14c64 <_ZNSt16allocator_traitsISaI6ShaderEE8allocateERS1_m>
   14400:	eb 05                	jmp    14407 <_ZNSt12_Vector_baseI6ShaderSaIS0_EE11_M_allocateEm+0x31>
   14402:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   14407:	c9                   	leave
   14408:	c3                   	ret

0000000000014409 <_ZNSt16allocator_traitsISaI6ShaderEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   14409:	55                   	push   %rbp
   1440a:	48 89 e5             	mov    %rsp,%rbp
   1440d:	48 83 ec 20          	sub    $0x20,%rsp
   14411:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14415:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14419:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1441d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14421:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14425:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14429:	48 89 ce             	mov    %rcx,%rsi
   1442c:	48 89 c7             	mov    %rax,%rdi
   1442f:	e8 5a 08 00 00       	call   14c8e <_ZNSt15__new_allocatorI6ShaderE10deallocateEPS0_m>
   14434:	90                   	nop
   14435:	c9                   	leave
   14436:	c3                   	ret

0000000000014437 <_ZSt25__uninitialized_default_nIP6ShadermET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   14437:	55                   	push   %rbp
   14438:	48 89 e5             	mov    %rsp,%rbp
   1443b:	48 83 ec 20          	sub    $0x20,%rsp
   1443f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14443:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   14447:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   1444b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1444f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14453:	48 89 d6             	mov    %rdx,%rsi
   14456:	48 89 c7             	mov    %rax,%rdi
   14459:	e8 60 08 00 00       	call   14cbe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_>
    }
   1445e:	c9                   	leave
   1445f:	c3                   	ret

0000000000014460 <_ZNSt12_Destroy_auxILb1EE9__destroyIP6ShaderEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   14460:	55                   	push   %rbp
   14461:	48 89 e5             	mov    %rsp,%rbp
   14464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14468:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1446c:	90                   	nop
   1446d:	5d                   	pop    %rbp
   1446e:	c3                   	ret
   1446f:	90                   	nop

0000000000014470 <_ZNSaI14VkDynamicStateEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   14470:	55                   	push   %rbp
   14471:	48 89 e5             	mov    %rsp,%rbp
   14474:	48 83 ec 10          	sub    $0x10,%rsp
   14478:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1447c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   14480:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14484:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14488:	48 89 d6             	mov    %rdx,%rsi
   1448b:	48 89 c7             	mov    %rax,%rdi
   1448e:	e8 89 08 00 00       	call   14d1c <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>
   14493:	90                   	nop
   14494:	c9                   	leave
   14495:	c3                   	ret

0000000000014496 <_ZNSt12_Vector_baseI14VkDynamicStateSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14496:	55                   	push   %rbp
   14497:	48 89 e5             	mov    %rsp,%rbp
   1449a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1449e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144a2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   144a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144ad:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   144b4:	00 
   144b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144b9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   144c0:	00 
	{ }
   144c1:	90                   	nop
   144c2:	5d                   	pop    %rbp
   144c3:	c3                   	ret

00000000000144c4 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   144c4:	55                   	push   %rbp
   144c5:	48 89 e5             	mov    %rsp,%rbp
   144c8:	48 83 ec 20          	sub    $0x20,%rsp
   144cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   144d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   144d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   144d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   144dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   144e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   144e4:	48 89 ce             	mov    %rcx,%rsi
   144e7:	48 89 c7             	mov    %rax,%rdi
   144ea:	e8 3d 08 00 00       	call   14d2c <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>
   144ef:	90                   	nop
   144f0:	c9                   	leave
   144f1:	c3                   	ret

00000000000144f2 <_ZNSt6vectorI14VkDynamicStateSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   144f2:	55                   	push   %rbp
   144f3:	48 89 e5             	mov    %rsp,%rbp
   144f6:	48 83 ec 20          	sub    $0x20,%rsp
   144fa:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   144fe:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14505:	ff ff 1f 
   14508:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   1450c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14510:	48 89 c7             	mov    %rax,%rdi
   14513:	e8 45 08 00 00       	call   14d5d <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>
   14518:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   1451c:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   14520:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14524:	48 89 d6             	mov    %rdx,%rsi
   14527:	48 89 c7             	mov    %rax,%rdi
   1452a:	e8 be 0d ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
   1452f:	48 8b 00             	mov    (%rax),%rax
      }
   14532:	c9                   	leave
   14533:	c3                   	ret

0000000000014534 <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14534:	55                   	push   %rbp
   14535:	48 89 e5             	mov    %rsp,%rbp
   14538:	48 83 ec 10          	sub    $0x10,%rsp
   1453c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14540:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14544:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14548:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1454c:	ba 00 00 00 00       	mov    $0x0,%edx
   14551:	48 89 ce             	mov    %rcx,%rsi
   14554:	48 89 c7             	mov    %rax,%rdi
   14557:	e8 1c 08 00 00       	call   14d78 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>
   1455c:	c9                   	leave
   1455d:	c3                   	ret

000000000001455e <_ZSt18uninitialized_copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   1455e:	55                   	push   %rbp
   1455f:	48 89 e5             	mov    %rsp,%rbp
   14562:	48 83 ec 30          	sub    $0x30,%rsp
   14566:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1456a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1456e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   14572:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   14576:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   1457a:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1457e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14582:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14586:	48 89 ce             	mov    %rcx,%rsi
   14589:	48 89 c7             	mov    %rax,%rdi
   1458c:	e8 48 08 00 00       	call   14dd9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>
    }
   14591:	c9                   	leave
   14592:	c3                   	ret

0000000000014593 <_ZNSt12_Destroy_auxILb1EE9__destroyIP14VkDynamicStateEEvT_S4_>:
   14593:	55                   	push   %rbp
   14594:	48 89 e5             	mov    %rsp,%rbp
   14597:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1459b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1459f:	90                   	nop
   145a0:	5d                   	pop    %rbp
   145a1:	c3                   	ret

00000000000145a2 <_ZNSt15__new_allocatorIP12VkPipeline_TE9constructIS1_JS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   145a2:	55                   	push   %rbp
   145a3:	48 89 e5             	mov    %rsp,%rbp
   145a6:	53                   	push   %rbx
   145a7:	48 83 ec 28          	sub    $0x28,%rsp
   145ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   145af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   145b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   145b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   145bb:	48 89 c6             	mov    %rax,%rsi
   145be:	bf 08 00 00 00       	mov    $0x8,%edi
   145c3:	e8 58 08 ff ff       	call   4e20 <_ZnwmPv>
   145c8:	48 89 c3             	mov    %rax,%rbx
   145cb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145cf:	48 89 c7             	mov    %rax,%rdi
   145d2:	e8 df f1 ff ff       	call   137b6 <_ZSt7forwardIP12VkPipeline_TEOT_RNSt16remove_referenceIS2_E4typeE>
   145d7:	48 8b 00             	mov    (%rax),%rax
   145da:	48 89 03             	mov    %rax,(%rbx)
   145dd:	90                   	nop
   145de:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   145e2:	c9                   	leave
   145e3:	c3                   	ret

00000000000145e4 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   145e4:	55                   	push   %rbp
   145e5:	48 89 e5             	mov    %rsp,%rbp
   145e8:	53                   	push   %rbx
   145e9:	48 83 ec 38          	sub    $0x38,%rsp
   145ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   145f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   145f5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   145f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   145fd:	48 89 c7             	mov    %rax,%rdi
   14600:	e8 01 08 00 00       	call   14e06 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   14605:	48 89 c3             	mov    %rax,%rbx
   14608:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1460c:	48 89 c7             	mov    %rax,%rdi
   1460f:	e8 14 08 00 00       	call   14e28 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   14614:	48 29 c3             	sub    %rax,%rbx
   14617:	48 89 da             	mov    %rbx,%rdx
   1461a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1461e:	48 39 c2             	cmp    %rax,%rdx
   14621:	0f 92 c0             	setb   %al
   14624:	84 c0                	test   %al,%al
   14626:	74 0c                	je     14634 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   14628:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   1462c:	48 89 c7             	mov    %rax,%rdi
   1462f:	e8 3c fb fe ff       	call   4170 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   14634:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14638:	48 89 c7             	mov    %rax,%rdi
   1463b:	e8 e8 07 00 00       	call   14e28 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   14640:	48 89 c3             	mov    %rax,%rbx
   14643:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14647:	48 89 c7             	mov    %rax,%rdi
   1464a:	e8 d9 07 00 00       	call   14e28 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   1464f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   14653:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   14657:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   1465b:	48 89 d6             	mov    %rdx,%rsi
   1465e:	48 89 c7             	mov    %rax,%rdi
   14661:	e8 47 f4 ff ff       	call   13aad <_ZSt3maxImERKT_S2_S2_>
   14666:	48 8b 00             	mov    (%rax),%rax
   14669:	48 01 d8             	add    %rbx,%rax
   1466c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   14670:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14674:	48 89 c7             	mov    %rax,%rdi
   14677:	e8 ac 07 00 00       	call   14e28 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>
   1467c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   14680:	72 12                	jb     14694 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   14682:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14686:	48 89 c7             	mov    %rax,%rdi
   14689:	e8 78 07 00 00       	call   14e06 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   1468e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   14692:	73 0e                	jae    146a2 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   14694:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14698:	48 89 c7             	mov    %rax,%rdi
   1469b:	e8 66 07 00 00       	call   14e06 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>
   146a0:	eb 04                	jmp    146a6 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   146a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   146a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   146aa:	c9                   	leave
   146ab:	c3                   	ret

00000000000146ac <_ZN9__gnu_cxxmiIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   146ac:	55                   	push   %rbp
   146ad:	48 89 e5             	mov    %rsp,%rbp
   146b0:	53                   	push   %rbx
   146b1:	48 83 ec 18          	sub    $0x18,%rsp
   146b5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146b9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() - __rhs.base(); }
   146bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   146c1:	48 89 c7             	mov    %rax,%rdi
   146c4:	e8 a1 23 ff ff       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   146c9:	48 8b 18             	mov    (%rax),%rbx
   146cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146d0:	48 89 c7             	mov    %rax,%rdi
   146d3:	e8 92 23 ff ff       	call   6a6a <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
   146d8:	48 8b 00             	mov    (%rax),%rax
   146db:	48 89 da             	mov    %rbx,%rdx
   146de:	48 29 c2             	sub    %rax,%rdx
   146e1:	48 89 d0             	mov    %rdx,%rax
   146e4:	48 c1 f8 03          	sar    $0x3,%rax
   146e8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   146ec:	c9                   	leave
   146ed:	c3                   	ret

00000000000146ee <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   146ee:	55                   	push   %rbp
   146ef:	48 89 e5             	mov    %rsp,%rbp
   146f2:	48 83 ec 10          	sub    $0x10,%rsp
   146f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   146fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   146fe:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14703:	74 15                	je     1471a <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   14705:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14709:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1470d:	48 89 d6             	mov    %rdx,%rsi
   14710:	48 89 c7             	mov    %rax,%rdi
   14713:	e8 33 07 00 00       	call   14e4b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   14718:	eb 05                	jmp    1471f <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   1471a:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1471f:	c9                   	leave
   14720:	c3                   	ret

0000000000014721 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   14721:	55                   	push   %rbp
   14722:	48 89 e5             	mov    %rsp,%rbp
   14725:	48 83 ec 20          	sub    $0x20,%rsp
   14729:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1472d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14731:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   14735:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   14739:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1473d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14741:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   14745:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14749:	48 89 c7             	mov    %rax,%rdi
   1474c:	e8 24 07 00 00       	call   14e75 <_ZSt12__relocate_aIPP12VkPipeline_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   14751:	c9                   	leave
   14752:	c3                   	ret
   14753:	90                   	nop

0000000000014754 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   14754:	55                   	push   %rbp
   14755:	48 89 e5             	mov    %rsp,%rbp
   14758:	48 83 ec 20          	sub    $0x20,%rsp
   1475c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14760:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   14764:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14768:	48 8b 00             	mov    (%rax),%rax
   1476b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   1476f:	48 c1 e2 03          	shl    $0x3,%rdx
   14773:	48 f7 da             	neg    %rdx
   14776:	48 01 d0             	add    %rdx,%rax
   14779:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1477d:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   14781:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   14785:	48 89 d6             	mov    %rdx,%rsi
   14788:	48 89 c7             	mov    %rax,%rdi
   1478b:	e8 bc 22 ff ff       	call   6a4c <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   14790:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14794:	c9                   	leave
   14795:	c3                   	ret

0000000000014796 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14796:	55                   	push   %rbp
   14797:	48 89 e5             	mov    %rsp,%rbp
   1479a:	48 83 ec 20          	sub    $0x20,%rsp
   1479e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   147a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   147aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147ae:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   147b5:	00 
   147b6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   147ba:	48 89 d6             	mov    %rdx,%rsi
   147bd:	48 89 c7             	mov    %rax,%rdi
   147c0:	e8 ab fb fe ff       	call   4370 <_ZdlPvm@plt>
      }
   147c5:	c9                   	leave
   147c6:	c3                   	ret

00000000000147c7 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   147c7:	55                   	push   %rbp
   147c8:	48 89 e5             	mov    %rsp,%rbp
   147cb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147cf:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   147d3:	90                   	nop
   147d4:	5d                   	pop    %rbp
   147d5:	c3                   	ret

00000000000147d6 <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   147d6:	55                   	push   %rbp
   147d7:	48 89 e5             	mov    %rsp,%rbp
   147da:	48 83 ec 20          	sub    $0x20,%rsp
   147de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   147e2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   147e6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   147ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   147ee:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   147f5:	00 
   147f6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   147fa:	48 89 d6             	mov    %rdx,%rsi
   147fd:	48 89 c7             	mov    %rax,%rdi
   14800:	e8 6b fb fe ff       	call   4370 <_ZdlPvm@plt>
      }
   14805:	c9                   	leave
   14806:	c3                   	ret

0000000000014807 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   14807:	55                   	push   %rbp
   14808:	48 89 e5             	mov    %rsp,%rbp
   1480b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1480f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14813:	90                   	nop
   14814:	5d                   	pop    %rbp
   14815:	c3                   	ret

0000000000014816 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   14816:	55                   	push   %rbp
   14817:	48 89 e5             	mov    %rsp,%rbp
   1481a:	48 83 ec 20          	sub    $0x20,%rsp
   1481e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14822:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14826:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1482a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1482e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14832:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14836:	48 89 ce             	mov    %rcx,%rsi
   14839:	48 89 c7             	mov    %rax,%rdi
   1483c:	e8 97 06 00 00       	call   14ed8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   14841:	c9                   	leave
   14842:	c3                   	ret
   14843:	90                   	nop

0000000000014844 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14844:	55                   	push   %rbp
   14845:	48 89 e5             	mov    %rsp,%rbp
   14848:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1484c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14850:	5d                   	pop    %rbp
   14851:	c3                   	ret

0000000000014852 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   14852:	55                   	push   %rbp
   14853:	48 89 e5             	mov    %rsp,%rbp
   14856:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1485a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1485e:	5d                   	pop    %rbp
   1485f:	c3                   	ret

0000000000014860 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   14860:	55                   	push   %rbp
   14861:	48 89 e5             	mov    %rsp,%rbp
   14864:	48 83 ec 30          	sub    $0x30,%rsp
   14868:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1486c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14870:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14874:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   14878:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1487c:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14880:	48 c1 f8 03          	sar    $0x3,%rax
   14884:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   14888:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1488d:	7e 1f                	jle    148ae <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1488f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14893:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1489a:	00 
   1489b:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1489f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148a3:	48 89 ce             	mov    %rcx,%rsi
   148a6:	48 89 c7             	mov    %rax,%rdi
   148a9:	e8 82 fd fe ff       	call   4630 <memmove@plt>
      return __result + __count;
   148ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148b2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   148b9:	00 
   148ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   148be:	48 01 d0             	add    %rdx,%rax
    }
   148c1:	c9                   	leave
   148c2:	c3                   	ret
   148c3:	90                   	nop

00000000000148c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   148c4:	55                   	push   %rbp
   148c5:	48 89 e5             	mov    %rsp,%rbp
   148c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   148cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148d0:	5d                   	pop    %rbp
   148d1:	c3                   	ret

00000000000148d2 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   148d2:	55                   	push   %rbp
   148d3:	48 89 e5             	mov    %rsp,%rbp
   148d6:	48 83 ec 10          	sub    $0x10,%rsp
   148da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   148e2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   148e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   148ea:	48 89 d6             	mov    %rdx,%rsi
   148ed:	48 89 c7             	mov    %rax,%rdi
   148f0:	e8 4b 06 00 00       	call   14f40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   148f5:	90                   	nop
   148f6:	c9                   	leave
   148f7:	c3                   	ret

00000000000148f8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   148f8:	55                   	push   %rbp
   148f9:	48 89 e5             	mov    %rsp,%rbp
   148fc:	48 83 ec 20          	sub    $0x20,%rsp
   14900:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14904:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14908:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1490c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14910:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14914:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14918:	48 89 ce             	mov    %rcx,%rsi
   1491b:	48 89 c7             	mov    %rax,%rdi
   1491e:	e8 3d 06 00 00       	call   14f60 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   14923:	90                   	nop
   14924:	c9                   	leave
   14925:	c3                   	ret

0000000000014926 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   14926:	55                   	push   %rbp
   14927:	48 89 e5             	mov    %rsp,%rbp
   1492a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   1492e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14932:	5d                   	pop    %rbp
   14933:	c3                   	ret

0000000000014934 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   14934:	55                   	push   %rbp
   14935:	48 89 e5             	mov    %rsp,%rbp
   14938:	48 83 ec 10          	sub    $0x10,%rsp
   1493c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14940:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   14944:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14948:	48 89 c7             	mov    %rax,%rdi
   1494b:	e8 f6 e2 ff ff       	call   12c46 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   14950:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14954:	48 89 02             	mov    %rax,(%rdx)
   14957:	90                   	nop
   14958:	c9                   	leave
   14959:	c3                   	ret

000000000001495a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   1495a:	55                   	push   %rbp
   1495b:	48 89 e5             	mov    %rsp,%rbp
   1495e:	48 83 ec 10          	sub    $0x10,%rsp
   14962:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   14966:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1496a:	48 89 c7             	mov    %rax,%rdi
   1496d:	e8 52 ff ff ff       	call   148c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14972:	be 01 00 00 00       	mov    $0x1,%esi
   14977:	48 89 c7             	mov    %rax,%rdi
   1497a:	e8 1b 06 00 00       	call   14f9a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   1497f:	c9                   	leave
   14980:	c3                   	ret
   14981:	90                   	nop

0000000000014982 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   14982:	55                   	push   %rbp
   14983:	48 89 e5             	mov    %rsp,%rbp
   14986:	41 56                	push   %r14
   14988:	41 55                	push   %r13
   1498a:	41 54                	push   %r12
   1498c:	53                   	push   %rbx
   1498d:	48 83 ec 30          	sub    $0x30,%rsp
   14991:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14995:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   14999:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1499d:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   149a1:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   149a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   149a9:	48 89 c6             	mov    %rax,%rsi
   149ac:	bf 48 00 00 00       	mov    $0x48,%edi
   149b1:	e8 6a 04 ff ff       	call   4e20 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   149b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   149ba:	48 89 c7             	mov    %rax,%rdi
   149bd:	e8 e1 e2 ff ff       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   149c2:	49 89 c6             	mov    %rax,%r14
   149c5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   149c9:	48 89 c7             	mov    %rax,%rdi
   149cc:	e8 c4 e2 ff ff       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   149d1:	49 89 c5             	mov    %rax,%r13
   149d4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   149d8:	48 89 c7             	mov    %rax,%rdi
   149db:	e8 a7 e2 ff ff       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   149e0:	49 89 c4             	mov    %rax,%r12
   149e3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   149e7:	48 89 c7             	mov    %rax,%rdi
   149ea:	e8 11 e2 ff ff       	call   12c00 <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   149ef:	48 89 c3             	mov    %rax,%rbx
   149f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   149f6:	48 89 c7             	mov    %rax,%rdi
   149f9:	e8 c6 fe ff ff       	call   148c4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   149fe:	4d 89 f0             	mov    %r14,%r8
   14a01:	4c 89 e9             	mov    %r13,%rcx
   14a04:	4c 89 e2             	mov    %r12,%rdx
   14a07:	48 89 de             	mov    %rbx,%rsi
   14a0a:	48 89 c7             	mov    %rax,%rdi
   14a0d:	e8 b2 05 00 00       	call   14fc4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   14a12:	eb 33                	jmp    14a47 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   14a14:	48 89 c7             	mov    %rax,%rdi
   14a17:	e8 04 f7 fe ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   14a1c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14a20:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a24:	48 89 d6             	mov    %rdx,%rsi
   14a27:	48 89 c7             	mov    %rax,%rdi
   14a2a:	e8 7f f2 ff ff       	call   13cae <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   14a2f:	e8 6c fb fe ff       	call   45a0 <__cxa_rethrow@plt>
	  __catch(...)
   14a34:	48 89 c3             	mov    %rax,%rbx
   14a37:	e8 04 fc fe ff       	call   4640 <__cxa_end_catch@plt>
   14a3c:	48 89 d8             	mov    %rbx,%rax
   14a3f:	48 89 c7             	mov    %rax,%rdi
   14a42:	e8 69 fc fe ff       	call   46b0 <_Unwind_Resume@plt>
	}
   14a47:	48 83 c4 30          	add    $0x30,%rsp
   14a4b:	5b                   	pop    %rbx
   14a4c:	41 5c                	pop    %r12
   14a4e:	41 5d                	pop    %r13
   14a50:	41 5e                	pop    %r14
   14a52:	5d                   	pop    %rbp
   14a53:	c3                   	ret

0000000000014a54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14a54:	55                   	push   %rbp
   14a55:	48 89 e5             	mov    %rsp,%rbp
   14a58:	48 83 ec 20          	sub    $0x20,%rsp
   14a5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   14a60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a64:	48 8b 50 18          	mov    0x18(%rax),%rdx
   14a68:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14a6c:	48 89 d6             	mov    %rdx,%rsi
   14a6f:	48 89 c7             	mov    %rax,%rdi
   14a72:	e8 af e7 ff ff       	call   13226 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a7b:	c9                   	leave
   14a7c:	c3                   	ret
   14a7d:	90                   	nop

0000000000014a7e <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14a7e:	55                   	push   %rbp
   14a7f:	48 89 e5             	mov    %rsp,%rbp
   14a82:	48 83 ec 20          	sub    $0x20,%rsp
   14a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14a8a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14a8e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14a92:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14a96:	48 89 c7             	mov    %rax,%rdi
   14a99:	e8 92 05 00 00       	call   15030 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   14a9e:	48 8b 10             	mov    (%rax),%rdx
   14aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa5:	48 89 10             	mov    %rdx,(%rax)
   14aa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14aac:	48 89 c7             	mov    %rax,%rdi
   14aaf:	e8 0e 00 00 00       	call   14ac2 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14ab4:	48 8b 10             	mov    (%rax),%rdx
   14ab7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14abb:	48 89 50 08          	mov    %rdx,0x8(%rax)
   14abf:	90                   	nop
   14ac0:	c9                   	leave
   14ac1:	c3                   	ret

0000000000014ac2 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14ac2:	55                   	push   %rbp
   14ac3:	48 89 e5             	mov    %rsp,%rbp
   14ac6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14aca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ace:	5d                   	pop    %rbp
   14acf:	c3                   	ret

0000000000014ad0 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   14ad0:	55                   	push   %rbp
   14ad1:	48 89 e5             	mov    %rsp,%rbp
   14ad4:	48 83 ec 10          	sub    $0x10,%rsp
   14ad8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   14adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ae0:	48 83 c0 20          	add    $0x20,%rax
   14ae4:	48 89 c7             	mov    %rax,%rdi
   14ae7:	e8 52 05 00 00       	call   1503e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   14aec:	c9                   	leave
   14aed:	c3                   	ret

0000000000014aee <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   14aee:	55                   	push   %rbp
   14aef:	48 89 e5             	mov    %rsp,%rbp
   14af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14af6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   14afa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14afe:	5d                   	pop    %rbp
   14aff:	c3                   	ret

0000000000014b00 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14b00:	55                   	push   %rbp
   14b01:	48 89 e5             	mov    %rsp,%rbp
   14b04:	48 83 ec 10          	sub    $0x10,%rsp
   14b08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14b0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b10:	48 89 c7             	mov    %rax,%rdi
   14b13:	e8 40 05 00 00       	call   15058 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   14b18:	c9                   	leave
   14b19:	c3                   	ret

0000000000014b1a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14b1a:	55                   	push   %rbp
   14b1b:	48 89 e5             	mov    %rsp,%rbp
   14b1e:	48 83 ec 20          	sub    $0x20,%rsp
   14b22:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b26:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14b2a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14b2f:	74 40                	je     14b71 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   14b31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b35:	48 89 c7             	mov    %rax,%rdi
   14b38:	e8 35 05 00 00       	call   15072 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   14b3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14b41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b45:	48 89 c7             	mov    %rax,%rdi
   14b48:	e8 33 05 00 00       	call   15080 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   14b4d:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14b52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b56:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14b5a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14b5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b62:	48 89 ce             	mov    %rcx,%rsi
   14b65:	48 89 c7             	mov    %rax,%rdi
   14b68:	e8 3a 05 00 00       	call   150a7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   14b6d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14b71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14b75:	c9                   	leave
   14b76:	c3                   	ret
   14b77:	90                   	nop

0000000000014b78 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14b78:	55                   	push   %rbp
   14b79:	48 89 e5             	mov    %rsp,%rbp
   14b7c:	48 83 ec 20          	sub    $0x20,%rsp
   14b80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14b84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14b88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14b8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b90:	48 89 c7             	mov    %rax,%rdi
   14b93:	e8 54 05 00 00       	call   150ec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   14b98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14b9c:	0f 92 c0             	setb   %al
   14b9f:	0f b6 c0             	movzbl %al,%eax
   14ba2:	48 85 c0             	test   %rax,%rax
   14ba5:	0f 95 c0             	setne  %al
   14ba8:	84 c0                	test   %al,%al
   14baa:	74 1a                	je     14bc6 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14bac:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14bb3:	ff ff 1f 
   14bb6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14bba:	73 05                	jae    14bc1 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14bbc:	e8 9f f6 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14bc1:	e8 1a f5 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14bc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14bca:	48 c1 e0 03          	shl    $0x3,%rax
   14bce:	48 89 c7             	mov    %rax,%rdi
   14bd1:	e8 8a f7 fe ff       	call   4360 <_Znwm@plt>
   14bd6:	90                   	nop
      }
   14bd7:	c9                   	leave
   14bd8:	c3                   	ret

0000000000014bd9 <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   14bd9:	55                   	push   %rbp
   14bda:	48 89 e5             	mov    %rsp,%rbp
   14bdd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14be1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14be5:	5d                   	pop    %rbp
   14be6:	c3                   	ret

0000000000014be7 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   14be7:	55                   	push   %rbp
   14be8:	48 89 e5             	mov    %rsp,%rbp
   14beb:	48 83 ec 30          	sub    $0x30,%rsp
   14bef:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14bf3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14bf7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14bfb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   14bff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c03:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14c07:	48 c1 f8 03          	sar    $0x3,%rax
   14c0b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   14c0f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   14c14:	7e 1f                	jle    14c35 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   14c16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c1a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14c21:	00 
   14c22:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   14c26:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c2a:	48 89 ce             	mov    %rcx,%rsi
   14c2d:	48 89 c7             	mov    %rax,%rdi
   14c30:	e8 fb f9 fe ff       	call   4630 <memmove@plt>
      return __result + __count;
   14c35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c39:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14c40:	00 
   14c41:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c45:	48 01 d0             	add    %rdx,%rax
    }
   14c48:	c9                   	leave
   14c49:	c3                   	ret

0000000000014c4a <_ZNKSt15__new_allocatorI6ShaderE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14c4a:	55                   	push   %rbp
   14c4b:	48 89 e5             	mov    %rsp,%rbp
   14c4e:	48 83 ec 10          	sub    $0x10,%rsp
   14c52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14c56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c5a:	48 89 c7             	mov    %rax,%rdi
   14c5d:	e8 9e 04 00 00       	call   15100 <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>
   14c62:	c9                   	leave
   14c63:	c3                   	ret

0000000000014c64 <_ZNSt16allocator_traitsISaI6ShaderEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   14c64:	55                   	push   %rbp
   14c65:	48 89 e5             	mov    %rsp,%rbp
   14c68:	48 83 ec 10          	sub    $0x10,%rsp
   14c6c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c70:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14c74:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14c78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c7c:	ba 00 00 00 00       	mov    $0x0,%edx
   14c81:	48 89 ce             	mov    %rcx,%rsi
   14c84:	48 89 c7             	mov    %rax,%rdi
   14c87:	e8 88 04 00 00       	call   15114 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv>
   14c8c:	c9                   	leave
   14c8d:	c3                   	ret

0000000000014c8e <_ZNSt15__new_allocatorI6ShaderE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14c8e:	55                   	push   %rbp
   14c8f:	48 89 e5             	mov    %rsp,%rbp
   14c92:	48 83 ec 20          	sub    $0x20,%rsp
   14c96:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14c9a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14c9e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14ca2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14ca6:	48 c1 e0 04          	shl    $0x4,%rax
   14caa:	48 89 c2             	mov    %rax,%rdx
   14cad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14cb1:	48 89 d6             	mov    %rdx,%rsi
   14cb4:	48 89 c7             	mov    %rax,%rdi
   14cb7:	e8 b4 f6 fe ff       	call   4370 <_ZdlPvm@plt>
      }
   14cbc:	c9                   	leave
   14cbd:	c3                   	ret

0000000000014cbe <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14cbe:	55                   	push   %rbp
   14cbf:	48 89 e5             	mov    %rsp,%rbp
   14cc2:	48 83 ec 20          	sub    $0x20,%rsp
   14cc6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14cca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14cce:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14cd3:	74 40                	je     14d15 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP6ShadermEET_S4_T0_+0x57>
		= std::__addressof(*__first);
   14cd5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14cd9:	48 89 c7             	mov    %rax,%rdi
   14cdc:	e8 94 04 00 00       	call   15175 <_ZSt11__addressofI6ShaderEPT_RS1_>
   14ce1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14ce5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ce9:	48 89 c7             	mov    %rax,%rdi
   14cec:	e8 92 04 00 00       	call   15183 <_ZSt10_ConstructI6ShaderJEEvPT_DpOT0_>
	      ++__first;
   14cf1:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14cf6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14cfa:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14cfe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14d02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d06:	48 89 ce             	mov    %rcx,%rsi
   14d09:	48 89 c7             	mov    %rax,%rdi
   14d0c:	e8 a1 04 00 00       	call   151b2 <_ZSt6fill_nIP6ShadermS0_ET_S2_T0_RKT1_>
   14d11:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14d15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14d19:	c9                   	leave
   14d1a:	c3                   	ret
   14d1b:	90                   	nop

0000000000014d1c <_ZNSt15__new_allocatorI14VkDynamicStateEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   14d1c:	55                   	push   %rbp
   14d1d:	48 89 e5             	mov    %rsp,%rbp
   14d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d24:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d28:	90                   	nop
   14d29:	5d                   	pop    %rbp
   14d2a:	c3                   	ret
   14d2b:	90                   	nop

0000000000014d2c <_ZNSt15__new_allocatorI14VkDynamicStateE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14d2c:	55                   	push   %rbp
   14d2d:	48 89 e5             	mov    %rsp,%rbp
   14d30:	48 83 ec 20          	sub    $0x20,%rsp
   14d34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14d40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14d44:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   14d4b:	00 
   14d4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14d50:	48 89 d6             	mov    %rdx,%rsi
   14d53:	48 89 c7             	mov    %rax,%rdi
   14d56:	e8 15 f6 fe ff       	call   4370 <_ZdlPvm@plt>
      }
   14d5b:	c9                   	leave
   14d5c:	c3                   	ret

0000000000014d5d <_ZNSt16allocator_traitsISaI14VkDynamicStateEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14d5d:	55                   	push   %rbp
   14d5e:	48 89 e5             	mov    %rsp,%rbp
   14d61:	48 83 ec 10          	sub    $0x10,%rsp
   14d65:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14d69:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d6d:	48 89 c7             	mov    %rax,%rdi
   14d70:	e8 81 04 00 00       	call   151f6 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>
      }
   14d75:	c9                   	leave
   14d76:	c3                   	ret
   14d77:	90                   	nop

0000000000014d78 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14d78:	55                   	push   %rbp
   14d79:	48 89 e5             	mov    %rsp,%rbp
   14d7c:	48 83 ec 20          	sub    $0x20,%rsp
   14d80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d84:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d88:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d90:	48 89 c7             	mov    %rax,%rdi
   14d93:	e8 78 04 00 00       	call   15210 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   14d98:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14d9c:	0f 92 c0             	setb   %al
   14d9f:	0f b6 c0             	movzbl %al,%eax
   14da2:	48 85 c0             	test   %rax,%rax
   14da5:	0f 95 c0             	setne  %al
   14da8:	84 c0                	test   %al,%al
   14daa:	74 1a                	je     14dc6 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14dac:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
   14db3:	ff ff 3f 
   14db6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14dba:	73 05                	jae    14dc1 <_ZNSt15__new_allocatorI14VkDynamicStateE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14dbc:	e8 9f f4 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14dc1:	e8 1a f3 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14dc6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14dca:	48 c1 e0 02          	shl    $0x2,%rax
   14dce:	48 89 c7             	mov    %rax,%rdi
   14dd1:	e8 8a f5 fe ff       	call   4360 <_Znwm@plt>
   14dd6:	90                   	nop
      }
   14dd7:	c9                   	leave
   14dd8:	c3                   	ret

0000000000014dd9 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK14VkDynamicStatePS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   14dd9:	55                   	push   %rbp
   14dda:	48 89 e5             	mov    %rsp,%rbp
   14ddd:	48 83 ec 20          	sub    $0x20,%rsp
   14de1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14de5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14de9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   14ded:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14df1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14df5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14df9:	48 89 ce             	mov    %rcx,%rsi
   14dfc:	48 89 c7             	mov    %rax,%rdi
   14dff:	e8 20 04 00 00       	call   15224 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>
   14e04:	c9                   	leave
   14e05:	c3                   	ret

0000000000014e06 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   14e06:	55                   	push   %rbp
   14e07:	48 89 e5             	mov    %rsp,%rbp
   14e0a:	48 83 ec 10          	sub    $0x10,%rsp
   14e0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   14e12:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e16:	48 89 c7             	mov    %rax,%rdi
   14e19:	e8 94 04 00 00       	call   152b2 <_ZNKSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   14e1e:	48 89 c7             	mov    %rax,%rdi
   14e21:	e8 49 04 00 00       	call   1526f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   14e26:	c9                   	leave
   14e27:	c3                   	ret

0000000000014e28 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   14e28:	55                   	push   %rbp
   14e29:	48 89 e5             	mov    %rsp,%rbp
   14e2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   14e30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e34:	48 8b 50 08          	mov    0x8(%rax),%rdx
   14e38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e3c:	48 8b 00             	mov    (%rax),%rax
   14e3f:	48 29 c2             	sub    %rax,%rdx
   14e42:	48 89 d0             	mov    %rdx,%rax
   14e45:	48 c1 f8 03          	sar    $0x3,%rax
   14e49:	5d                   	pop    %rbp
   14e4a:	c3                   	ret

0000000000014e4b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14e4b:	55                   	push   %rbp
   14e4c:	48 89 e5             	mov    %rsp,%rbp
   14e4f:	48 83 ec 10          	sub    $0x10,%rsp
   14e53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e57:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14e5b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14e5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e63:	ba 00 00 00 00       	mov    $0x0,%edx
   14e68:	48 89 ce             	mov    %rcx,%rsi
   14e6b:	48 89 c7             	mov    %rax,%rdi
   14e6e:	e8 4d 04 00 00       	call   152c0 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   14e73:	c9                   	leave
   14e74:	c3                   	ret

0000000000014e75 <_ZSt12__relocate_aIPP12VkPipeline_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   14e75:	55                   	push   %rbp
   14e76:	48 89 e5             	mov    %rsp,%rbp
   14e79:	41 54                	push   %r12
   14e7b:	53                   	push   %rbx
   14e7c:	48 83 ec 20          	sub    $0x20,%rsp
   14e80:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e84:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14e88:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14e8c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   14e90:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e94:	48 89 c7             	mov    %rax,%rdi
   14e97:	e8 85 04 00 00       	call   15321 <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14e9c:	49 89 c4             	mov    %rax,%r12
   14e9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14ea3:	48 89 c7             	mov    %rax,%rdi
   14ea6:	e8 76 04 00 00       	call   15321 <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14eab:	48 89 c3             	mov    %rax,%rbx
   14eae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14eb2:	48 89 c7             	mov    %rax,%rdi
   14eb5:	e8 67 04 00 00       	call   15321 <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>
   14eba:	48 89 c7             	mov    %rax,%rdi
   14ebd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ec1:	48 89 c1             	mov    %rax,%rcx
   14ec4:	4c 89 e2             	mov    %r12,%rdx
   14ec7:	48 89 de             	mov    %rbx,%rsi
   14eca:	e8 60 04 00 00       	call   1532f <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   14ecf:	48 83 c4 20          	add    $0x20,%rsp
   14ed3:	5b                   	pop    %rbx
   14ed4:	41 5c                	pop    %r12
   14ed6:	5d                   	pop    %rbp
   14ed7:	c3                   	ret

0000000000014ed8 <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   14ed8:	55                   	push   %rbp
   14ed9:	48 89 e5             	mov    %rsp,%rbp
   14edc:	53                   	push   %rbx
   14edd:	48 83 ec 28          	sub    $0x28,%rsp
   14ee1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14ee5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14ee9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   14eed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14ef1:	48 89 c7             	mov    %rax,%rdi
   14ef4:	e8 99 04 00 00       	call   15392 <_ZSt12__miter_baseIPKPKcET_S4_>
   14ef9:	48 89 c3             	mov    %rax,%rbx
   14efc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14f00:	48 89 c7             	mov    %rax,%rdi
   14f03:	e8 8a 04 00 00       	call   15392 <_ZSt12__miter_baseIPKPKcET_S4_>
   14f08:	48 89 c1             	mov    %rax,%rcx
   14f0b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14f0f:	48 89 c2             	mov    %rax,%rdx
   14f12:	48 89 de             	mov    %rbx,%rsi
   14f15:	48 89 cf             	mov    %rcx,%rdi
   14f18:	e8 83 04 00 00       	call   153a0 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   14f1d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14f21:	c9                   	leave
   14f22:	c3                   	ret
   14f23:	90                   	nop

0000000000014f24 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   14f24:	55                   	push   %rbp
   14f25:	48 89 e5             	mov    %rsp,%rbp
   14f28:	48 83 ec 10          	sub    $0x10,%rsp
   14f2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f34:	48 89 c7             	mov    %rax,%rdi
   14f37:	e8 94 f2 fe ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14f3c:	90                   	nop
   14f3d:	c9                   	leave
   14f3e:	c3                   	ret
   14f3f:	90                   	nop

0000000000014f40 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   14f40:	55                   	push   %rbp
   14f41:	48 89 e5             	mov    %rsp,%rbp
   14f44:	48 83 ec 10          	sub    $0x10,%rsp
   14f48:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f4c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   14f50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f54:	48 89 c7             	mov    %rax,%rdi
   14f57:	e8 c8 ff ff ff       	call   14f24 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   14f5c:	90                   	nop
   14f5d:	c9                   	leave
   14f5e:	c3                   	ret
   14f5f:	90                   	nop

0000000000014f60 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14f60:	55                   	push   %rbp
   14f61:	48 89 e5             	mov    %rsp,%rbp
   14f64:	48 83 ec 20          	sub    $0x20,%rsp
   14f68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f70:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14f74:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14f78:	48 89 d0             	mov    %rdx,%rax
   14f7b:	48 c1 e0 03          	shl    $0x3,%rax
   14f7f:	48 01 d0             	add    %rdx,%rax
   14f82:	48 c1 e0 03          	shl    $0x3,%rax
   14f86:	48 89 c2             	mov    %rax,%rdx
   14f89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f8d:	48 89 d6             	mov    %rdx,%rsi
   14f90:	48 89 c7             	mov    %rax,%rdi
   14f93:	e8 d8 f3 fe ff       	call   4370 <_ZdlPvm@plt>
      }
   14f98:	c9                   	leave
   14f99:	c3                   	ret

0000000000014f9a <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   14f9a:	55                   	push   %rbp
   14f9b:	48 89 e5             	mov    %rsp,%rbp
   14f9e:	48 83 ec 10          	sub    $0x10,%rsp
   14fa2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14fa6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14faa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14fae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fb2:	ba 00 00 00 00       	mov    $0x0,%edx
   14fb7:	48 89 ce             	mov    %rcx,%rsi
   14fba:	48 89 c7             	mov    %rax,%rdi
   14fbd:	e8 48 04 00 00       	call   1540a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   14fc2:	c9                   	leave
   14fc3:	c3                   	ret

0000000000014fc4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   14fc4:	55                   	push   %rbp
   14fc5:	48 89 e5             	mov    %rsp,%rbp
   14fc8:	41 54                	push   %r12
   14fca:	53                   	push   %rbx
   14fcb:	48 83 ec 30          	sub    $0x30,%rsp
   14fcf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14fd3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14fd7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14fdb:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14fdf:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   14fe3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14fe7:	48 89 c7             	mov    %rax,%rdi
   14fea:	e8 b4 dc ff ff       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14fef:	49 89 c4             	mov    %rax,%r12
   14ff2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14ff6:	48 89 c7             	mov    %rax,%rdi
   14ff9:	e8 97 dc ff ff       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14ffe:	48 89 c3             	mov    %rax,%rbx
   15001:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15005:	48 89 c7             	mov    %rax,%rdi
   15008:	e8 7a dc ff ff       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1500d:	48 89 c2             	mov    %rax,%rdx
   15010:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   15014:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15018:	4d 89 e0             	mov    %r12,%r8
   1501b:	48 89 d9             	mov    %rbx,%rcx
   1501e:	48 89 c7             	mov    %rax,%rdi
   15021:	e8 76 04 00 00       	call   1549c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   15026:	90                   	nop
   15027:	48 83 c4 30          	add    $0x30,%rsp
   1502b:	5b                   	pop    %rbx
   1502c:	41 5c                	pop    %r12
   1502e:	5d                   	pop    %rbp
   1502f:	c3                   	ret

0000000000015030 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   15030:	55                   	push   %rbp
   15031:	48 89 e5             	mov    %rsp,%rbp
   15034:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   15038:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1503c:	5d                   	pop    %rbp
   1503d:	c3                   	ret

000000000001503e <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   1503e:	55                   	push   %rbp
   1503f:	48 89 e5             	mov    %rsp,%rbp
   15042:	48 83 ec 10          	sub    $0x10,%rsp
   15046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   1504a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1504e:	48 89 c7             	mov    %rax,%rdi
   15051:	e8 f6 04 00 00       	call   1554c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   15056:	c9                   	leave
   15057:	c3                   	ret

0000000000015058 <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15058:	55                   	push   %rbp
   15059:	48 89 e5             	mov    %rsp,%rbp
   1505c:	48 83 ec 10          	sub    $0x10,%rsp
   15060:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15068:	48 89 c7             	mov    %rax,%rdi
   1506b:	e8 7c 00 00 00       	call   150ec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   15070:	c9                   	leave
   15071:	c3                   	ret

0000000000015072 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15072:	55                   	push   %rbp
   15073:	48 89 e5             	mov    %rsp,%rbp
   15076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1507a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1507e:	5d                   	pop    %rbp
   1507f:	c3                   	ret

0000000000015080 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15080:	55                   	push   %rbp
   15081:	48 89 e5             	mov    %rsp,%rbp
   15084:	48 83 ec 10          	sub    $0x10,%rsp
   15088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1508c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15090:	48 89 c6             	mov    %rax,%rsi
   15093:	bf 08 00 00 00       	mov    $0x8,%edi
   15098:	e8 83 fd fe ff       	call   4e20 <_ZnwmPv>
   1509d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   150a4:	90                   	nop
   150a5:	c9                   	leave
   150a6:	c3                   	ret

00000000000150a7 <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   150a7:	55                   	push   %rbp
   150a8:	48 89 e5             	mov    %rsp,%rbp
   150ab:	48 83 ec 20          	sub    $0x20,%rsp
   150af:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150b3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   150b7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   150bb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   150bf:	48 89 c7             	mov    %rax,%rdi
   150c2:	e8 93 04 00 00       	call   1555a <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   150c7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   150cb:	48 89 c7             	mov    %rax,%rdi
   150ce:	e8 5f fd fe ff       	call   4e32 <_ZSt17__size_to_integerm>
   150d3:	48 89 c1             	mov    %rax,%rcx
   150d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150da:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150de:	48 89 ce             	mov    %rcx,%rsi
   150e1:	48 89 c7             	mov    %rax,%rdi
   150e4:	e8 7c 04 00 00       	call   15565 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   150e9:	c9                   	leave
   150ea:	c3                   	ret
   150eb:	90                   	nop

00000000000150ec <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   150ec:	55                   	push   %rbp
   150ed:	48 89 e5             	mov    %rsp,%rbp
   150f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   150f4:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   150fb:	ff ff 0f 
      }
   150fe:	5d                   	pop    %rbp
   150ff:	c3                   	ret

0000000000015100 <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15100:	55                   	push   %rbp
   15101:	48 89 e5             	mov    %rsp,%rbp
   15104:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15108:	48 b8 ff ff ff ff ff 	movabs $0x7ffffffffffffff,%rax
   1510f:	ff ff 07 
      }
   15112:	5d                   	pop    %rbp
   15113:	c3                   	ret

0000000000015114 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   15114:	55                   	push   %rbp
   15115:	48 89 e5             	mov    %rsp,%rbp
   15118:	48 83 ec 20          	sub    $0x20,%rsp
   1511c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15120:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15124:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   15128:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1512c:	48 89 c7             	mov    %rax,%rdi
   1512f:	e8 cc ff ff ff       	call   15100 <_ZNKSt15__new_allocatorI6ShaderE11_M_max_sizeEv>
   15134:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15138:	0f 92 c0             	setb   %al
   1513b:	0f b6 c0             	movzbl %al,%eax
   1513e:	48 85 c0             	test   %rax,%rax
   15141:	0f 95 c0             	setne  %al
   15144:	84 c0                	test   %al,%al
   15146:	74 1a                	je     15162 <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   15148:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1514f:	ff ff 0f 
   15152:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15156:	73 05                	jae    1515d <_ZNSt15__new_allocatorI6ShaderE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15158:	e8 03 f1 fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   1515d:	e8 7e ef fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15162:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15166:	48 c1 e0 04          	shl    $0x4,%rax
   1516a:	48 89 c7             	mov    %rax,%rdi
   1516d:	e8 ee f1 fe ff       	call   4360 <_Znwm@plt>
   15172:	90                   	nop
      }
   15173:	c9                   	leave
   15174:	c3                   	ret

0000000000015175 <_ZSt11__addressofI6ShaderEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   15175:	55                   	push   %rbp
   15176:	48 89 e5             	mov    %rsp,%rbp
   15179:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   1517d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15181:	5d                   	pop    %rbp
   15182:	c3                   	ret

0000000000015183 <_ZSt10_ConstructI6ShaderJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   15183:	55                   	push   %rbp
   15184:	48 89 e5             	mov    %rsp,%rbp
   15187:	48 83 ec 10          	sub    $0x10,%rsp
   1518b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   1518f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15193:	48 89 c6             	mov    %rax,%rsi
   15196:	bf 10 00 00 00       	mov    $0x10,%edi
   1519b:	e8 80 fc fe ff       	call   4e20 <_ZnwmPv>
   151a0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   151a7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   151ae:	00 
    }
   151af:	90                   	nop
   151b0:	c9                   	leave
   151b1:	c3                   	ret

00000000000151b2 <_ZSt6fill_nIP6ShadermS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   151b2:	55                   	push   %rbp
   151b3:	48 89 e5             	mov    %rsp,%rbp
   151b6:	48 83 ec 20          	sub    $0x20,%rsp
   151ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   151be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   151c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   151c6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   151ca:	48 89 c7             	mov    %rax,%rdi
   151cd:	e8 f0 03 00 00       	call   155c2 <_ZSt19__iterator_categoryIP6ShaderENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   151d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   151d6:	48 89 c7             	mov    %rax,%rdi
   151d9:	e8 54 fc fe ff       	call   4e32 <_ZSt17__size_to_integerm>
   151de:	48 89 c1             	mov    %rax,%rcx
   151e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   151e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   151e9:	48 89 ce             	mov    %rcx,%rsi
   151ec:	48 89 c7             	mov    %rax,%rdi
   151ef:	e8 d9 03 00 00       	call   155cd <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
   151f4:	c9                   	leave
   151f5:	c3                   	ret

00000000000151f6 <_ZNKSt15__new_allocatorI14VkDynamicStateE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   151f6:	55                   	push   %rbp
   151f7:	48 89 e5             	mov    %rsp,%rbp
   151fa:	48 83 ec 10          	sub    $0x10,%rsp
   151fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   15202:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15206:	48 89 c7             	mov    %rax,%rdi
   15209:	e8 02 00 00 00       	call   15210 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>
   1520e:	c9                   	leave
   1520f:	c3                   	ret

0000000000015210 <_ZNKSt15__new_allocatorI14VkDynamicStateE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15210:	55                   	push   %rbp
   15211:	48 89 e5             	mov    %rsp,%rbp
   15214:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15218:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   1521f:	ff ff 1f 
      }
   15222:	5d                   	pop    %rbp
   15223:	c3                   	ret

0000000000015224 <_ZSt4copyIPK14VkDynamicStatePS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   15224:	55                   	push   %rbp
   15225:	48 89 e5             	mov    %rsp,%rbp
   15228:	53                   	push   %rbx
   15229:	48 83 ec 28          	sub    $0x28,%rsp
   1522d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15231:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15235:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   15239:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1523d:	48 89 c7             	mov    %rax,%rdi
   15240:	e8 e3 03 00 00       	call   15628 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   15245:	48 89 c3             	mov    %rax,%rbx
   15248:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1524c:	48 89 c7             	mov    %rax,%rdi
   1524f:	e8 d4 03 00 00       	call   15628 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>
   15254:	48 89 c1             	mov    %rax,%rcx
   15257:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1525b:	48 89 c2             	mov    %rax,%rdx
   1525e:	48 89 de             	mov    %rbx,%rsi
   15261:	48 89 cf             	mov    %rcx,%rdi
   15264:	e8 cd 03 00 00       	call   15636 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
    }
   15269:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1526d:	c9                   	leave
   1526e:	c3                   	ret

000000000001526f <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   1526f:	55                   	push   %rbp
   15270:	48 89 e5             	mov    %rsp,%rbp
   15273:	48 83 ec 20          	sub    $0x20,%rsp
   15277:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   1527b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   15282:	ff ff 0f 
   15285:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   15289:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1528d:	48 89 c7             	mov    %rax,%rdi
   15290:	e8 0b 04 00 00       	call   156a0 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   15295:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   15299:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1529d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   152a1:	48 89 d6             	mov    %rdx,%rsi
   152a4:	48 89 c7             	mov    %rax,%rdi
   152a7:	e8 41 00 ff ff       	call   52ed <_ZSt3minImERKT_S2_S2_>
   152ac:	48 8b 00             	mov    (%rax),%rax
      }
   152af:	c9                   	leave
   152b0:	c3                   	ret
   152b1:	90                   	nop

00000000000152b2 <_ZNKSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   152b2:	55                   	push   %rbp
   152b3:	48 89 e5             	mov    %rsp,%rbp
   152b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   152ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152be:	5d                   	pop    %rbp
   152bf:	c3                   	ret

00000000000152c0 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   152c0:	55                   	push   %rbp
   152c1:	48 89 e5             	mov    %rsp,%rbp
   152c4:	48 83 ec 20          	sub    $0x20,%rsp
   152c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   152cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   152d0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   152d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152d8:	48 89 c7             	mov    %rax,%rdi
   152db:	e8 da 03 00 00       	call   156ba <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   152e0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   152e4:	0f 92 c0             	setb   %al
   152e7:	0f b6 c0             	movzbl %al,%eax
   152ea:	48 85 c0             	test   %rax,%rax
   152ed:	0f 95 c0             	setne  %al
   152f0:	84 c0                	test   %al,%al
   152f2:	74 1a                	je     1530e <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   152f4:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   152fb:	ff ff 1f 
   152fe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15302:	73 05                	jae    15309 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   15304:	e8 57 ef fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15309:	e8 d2 ed fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   1530e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15312:	48 c1 e0 03          	shl    $0x3,%rax
   15316:	48 89 c7             	mov    %rax,%rdi
   15319:	e8 42 f0 fe ff       	call   4360 <_Znwm@plt>
   1531e:	90                   	nop
      }
   1531f:	c9                   	leave
   15320:	c3                   	ret

0000000000015321 <_ZSt12__niter_baseIPP12VkPipeline_TET_S3_>:
    __niter_base(_Iterator __it)
   15321:	55                   	push   %rbp
   15322:	48 89 e5             	mov    %rsp,%rbp
   15325:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15329:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1532d:	5d                   	pop    %rbp
   1532e:	c3                   	ret

000000000001532f <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   1532f:	55                   	push   %rbp
   15330:	48 89 e5             	mov    %rsp,%rbp
   15333:	48 83 ec 30          	sub    $0x30,%rsp
   15337:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1533b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1533f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   15343:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   15347:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1534b:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1534f:	48 c1 f8 03          	sar    $0x3,%rax
   15353:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   15357:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1535c:	7e 1f                	jle    1537d <_ZSt14__relocate_a_1IP12VkPipeline_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   1535e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15362:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15369:	00 
   1536a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1536e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15372:	48 89 ce             	mov    %rcx,%rsi
   15375:	48 89 c7             	mov    %rax,%rdi
   15378:	e8 b3 f2 fe ff       	call   4630 <memmove@plt>
      return __result + __count;
   1537d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15381:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15388:	00 
   15389:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1538d:	48 01 d0             	add    %rdx,%rax
    }
   15390:	c9                   	leave
   15391:	c3                   	ret

0000000000015392 <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   15392:	55                   	push   %rbp
   15393:	48 89 e5             	mov    %rsp,%rbp
   15396:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1539a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1539e:	5d                   	pop    %rbp
   1539f:	c3                   	ret

00000000000153a0 <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   153a0:	55                   	push   %rbp
   153a1:	48 89 e5             	mov    %rsp,%rbp
   153a4:	41 54                	push   %r12
   153a6:	53                   	push   %rbx
   153a7:	48 83 ec 20          	sub    $0x20,%rsp
   153ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   153af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   153b3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   153b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   153bb:	48 89 c7             	mov    %rax,%rdi
   153be:	e8 8f f4 ff ff       	call   14852 <_ZSt12__niter_baseIPPKcET_S3_>
   153c3:	49 89 c4             	mov    %rax,%r12
   153c6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   153ca:	48 89 c7             	mov    %rax,%rdi
   153cd:	e8 fc 02 00 00       	call   156ce <_ZSt12__niter_baseIPKPKcET_S4_>
   153d2:	48 89 c3             	mov    %rax,%rbx
   153d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153d9:	48 89 c7             	mov    %rax,%rdi
   153dc:	e8 ed 02 00 00       	call   156ce <_ZSt12__niter_baseIPKPKcET_S4_>
   153e1:	4c 89 e2             	mov    %r12,%rdx
   153e4:	48 89 de             	mov    %rbx,%rsi
   153e7:	48 89 c7             	mov    %rax,%rdi
   153ea:	e8 ed 02 00 00       	call   156dc <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   153ef:	48 89 c2             	mov    %rax,%rdx
   153f2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   153f6:	48 89 d6             	mov    %rdx,%rsi
   153f9:	48 89 c7             	mov    %rax,%rdi
   153fc:	e8 08 03 00 00       	call   15709 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   15401:	48 83 c4 20          	add    $0x20,%rsp
   15405:	5b                   	pop    %rbx
   15406:	41 5c                	pop    %r12
   15408:	5d                   	pop    %rbp
   15409:	c3                   	ret

000000000001540a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1540a:	55                   	push   %rbp
   1540b:	48 89 e5             	mov    %rsp,%rbp
   1540e:	48 83 ec 20          	sub    $0x20,%rsp
   15412:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15416:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1541a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1541e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15422:	48 89 c7             	mov    %rax,%rdi
   15425:	e8 f2 02 00 00       	call   1571c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   1542a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1542e:	0f 92 c0             	setb   %al
   15431:	0f b6 c0             	movzbl %al,%eax
   15434:	48 85 c0             	test   %rax,%rax
   15437:	0f 95 c0             	setne  %al
   1543a:	84 c0                	test   %al,%al
   1543c:	74 1a                	je     15458 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1543e:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   15445:	38 8e 03 
   15448:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1544c:	73 05                	jae    15453 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1544e:	e8 0d ee fe ff       	call   4260 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   15453:	e8 88 ec fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   15458:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1545c:	48 89 d0             	mov    %rdx,%rax
   1545f:	48 c1 e0 03          	shl    $0x3,%rax
   15463:	48 01 d0             	add    %rdx,%rax
   15466:	48 c1 e0 03          	shl    $0x3,%rax
   1546a:	48 89 c7             	mov    %rax,%rdi
   1546d:	e8 ee ee fe ff       	call   4360 <_Znwm@plt>
   15472:	90                   	nop
      }
   15473:	c9                   	leave
   15474:	c3                   	ret
   15475:	90                   	nop

0000000000015476 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   15476:	55                   	push   %rbp
   15477:	48 89 e5             	mov    %rsp,%rbp
   1547a:	48 83 ec 10          	sub    $0x10,%rsp
   1547e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15482:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1548a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1548e:	48 89 d6             	mov    %rdx,%rsi
   15491:	48 89 c7             	mov    %rax,%rdi
   15494:	e8 97 02 00 00       	call   15730 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   15499:	90                   	nop
   1549a:	c9                   	leave
   1549b:	c3                   	ret

000000000001549c <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   1549c:	55                   	push   %rbp
   1549d:	48 89 e5             	mov    %rsp,%rbp
   154a0:	41 56                	push   %r14
   154a2:	41 55                	push   %r13
   154a4:	41 54                	push   %r12
   154a6:	53                   	push   %rbx
   154a7:	48 83 ec 40          	sub    $0x40,%rsp
   154ab:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   154af:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   154b3:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   154b7:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   154bb:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   154bf:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   154c3:	48 89 de             	mov    %rbx,%rsi
   154c6:	bf 28 00 00 00       	mov    $0x28,%edi
   154cb:	e8 50 f9 fe ff       	call   4e20 <_ZnwmPv>
   154d0:	49 89 c4             	mov    %rax,%r12
   154d3:	41 be 01 00 00 00    	mov    $0x1,%r14d
   154d9:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   154dd:	48 89 c7             	mov    %rax,%rdi
   154e0:	e8 be d7 ff ff       	call   12ca3 <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   154e5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   154e9:	48 89 c7             	mov    %rax,%rdi
   154ec:	e8 a4 d7 ff ff       	call   12c95 <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   154f1:	48 89 c2             	mov    %rax,%rdx
   154f4:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   154f8:	48 89 d6             	mov    %rdx,%rsi
   154fb:	48 89 c7             	mov    %rax,%rdi
   154fe:	e8 73 ff ff ff       	call   15476 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   15503:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   15507:	48 89 c7             	mov    %rax,%rdi
   1550a:	e8 78 d7 ff ff       	call   12c87 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   1550f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   15513:	48 89 c6             	mov    %rax,%rsi
   15516:	4c 89 e7             	mov    %r12,%rdi
   15519:	e8 30 02 00 00       	call   1574e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   1551e:	eb 1e                	jmp    1553e <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   15520:	49 89 c5             	mov    %rax,%r13
   15523:	45 84 f6             	test   %r14b,%r14b
   15526:	74 0b                	je     15533 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   15528:	48 89 de             	mov    %rbx,%rsi
   1552b:	4c 89 e7             	mov    %r12,%rdi
   1552e:	e8 54 a8 ff ff       	call   fd87 <_ZdlPvS_>
   15533:	4c 89 e8             	mov    %r13,%rax
   15536:	48 89 c7             	mov    %rax,%rdi
   15539:	e8 72 f1 fe ff       	call   46b0 <_Unwind_Resume@plt>
   1553e:	48 83 c4 40          	add    $0x40,%rsp
   15542:	5b                   	pop    %rbx
   15543:	41 5c                	pop    %r12
   15545:	41 5d                	pop    %r13
   15547:	41 5e                	pop    %r14
   15549:	5d                   	pop    %rbp
   1554a:	c3                   	ret
   1554b:	90                   	nop

000000000001554c <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   1554c:	55                   	push   %rbp
   1554d:	48 89 e5             	mov    %rsp,%rbp
   15550:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   15554:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15558:	5d                   	pop    %rbp
   15559:	c3                   	ret

000000000001555a <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1555a:	55                   	push   %rbp
   1555b:	48 89 e5             	mov    %rsp,%rbp
   1555e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15562:	90                   	nop
   15563:	5d                   	pop    %rbp
   15564:	c3                   	ret

0000000000015565 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   15565:	55                   	push   %rbp
   15566:	48 89 e5             	mov    %rsp,%rbp
   15569:	48 83 ec 20          	sub    $0x20,%rsp
   1556d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15571:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15575:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   15579:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1557e:	75 06                	jne    15586 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   15580:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15584:	eb 3a                	jmp    155c0 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   15586:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1558a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15591:	00 
   15592:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15596:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   1559a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1559e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155a2:	48 89 ce             	mov    %rcx,%rsi
   155a5:	48 89 c7             	mov    %rax,%rdi
   155a8:	e8 cb 01 00 00       	call   15778 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   155ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155b1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   155b8:	00 
   155b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155bd:	48 01 d0             	add    %rdx,%rax
    }
   155c0:	c9                   	leave
   155c1:	c3                   	ret

00000000000155c2 <_ZSt19__iterator_categoryIP6ShaderENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
   155c2:	55                   	push   %rbp
   155c3:	48 89 e5             	mov    %rsp,%rbp
   155c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   155ca:	90                   	nop
   155cb:	5d                   	pop    %rbp
   155cc:	c3                   	ret

00000000000155cd <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   155cd:	55                   	push   %rbp
   155ce:	48 89 e5             	mov    %rsp,%rbp
   155d1:	48 83 ec 20          	sub    $0x20,%rsp
   155d5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   155d9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   155dd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   155e1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   155e6:	75 06                	jne    155ee <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   155e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155ec:	eb 38                	jmp    15626 <_ZSt10__fill_n_aIP6ShadermS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x59>
      std::__fill_a(__first, __first + __n, __value);
   155ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   155f2:	48 c1 e0 04          	shl    $0x4,%rax
   155f6:	48 89 c2             	mov    %rax,%rdx
   155f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   155fd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   15601:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15605:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15609:	48 89 ce             	mov    %rcx,%rsi
   1560c:	48 89 c7             	mov    %rax,%rdi
   1560f:	e8 92 01 00 00       	call   157a6 <_ZSt8__fill_aIP6ShaderS0_EvT_S2_RKT0_>
      return __first + __n;
   15614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15618:	48 c1 e0 04          	shl    $0x4,%rax
   1561c:	48 89 c2             	mov    %rax,%rdx
   1561f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15623:	48 01 d0             	add    %rdx,%rax
    }
   15626:	c9                   	leave
   15627:	c3                   	ret

0000000000015628 <_ZSt12__miter_baseIPK14VkDynamicStateET_S3_>:
    __miter_base(_Iterator __it)
   15628:	55                   	push   %rbp
   15629:	48 89 e5             	mov    %rsp,%rbp
   1562c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   15630:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15634:	5d                   	pop    %rbp
   15635:	c3                   	ret

0000000000015636 <_ZSt13__copy_move_aILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   15636:	55                   	push   %rbp
   15637:	48 89 e5             	mov    %rsp,%rbp
   1563a:	41 54                	push   %r12
   1563c:	53                   	push   %rbx
   1563d:	48 83 ec 20          	sub    $0x20,%rsp
   15641:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15645:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15649:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   1564d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15651:	48 89 c7             	mov    %rax,%rdi
   15654:	e8 89 01 00 00       	call   157e2 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>
   15659:	49 89 c4             	mov    %rax,%r12
   1565c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15660:	48 89 c7             	mov    %rax,%rdi
   15663:	e8 6c 01 00 00       	call   157d4 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   15668:	48 89 c3             	mov    %rax,%rbx
   1566b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1566f:	48 89 c7             	mov    %rax,%rdi
   15672:	e8 5d 01 00 00       	call   157d4 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>
   15677:	4c 89 e2             	mov    %r12,%rdx
   1567a:	48 89 de             	mov    %rbx,%rsi
   1567d:	48 89 c7             	mov    %rax,%rdi
   15680:	e8 6b 01 00 00       	call   157f0 <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   15685:	48 89 c2             	mov    %rax,%rdx
   15688:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   1568c:	48 89 d6             	mov    %rdx,%rsi
   1568f:	48 89 c7             	mov    %rax,%rdi
   15692:	e8 86 01 00 00       	call   1581d <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>
    }
   15697:	48 83 c4 20          	add    $0x20,%rsp
   1569b:	5b                   	pop    %rbx
   1569c:	41 5c                	pop    %r12
   1569e:	5d                   	pop    %rbp
   1569f:	c3                   	ret

00000000000156a0 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   156a0:	55                   	push   %rbp
   156a1:	48 89 e5             	mov    %rsp,%rbp
   156a4:	48 83 ec 10          	sub    $0x10,%rsp
   156a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   156ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156b0:	48 89 c7             	mov    %rax,%rdi
   156b3:	e8 78 01 00 00       	call   15830 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   156b8:	c9                   	leave
   156b9:	c3                   	ret

00000000000156ba <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   156ba:	55                   	push   %rbp
   156bb:	48 89 e5             	mov    %rsp,%rbp
   156be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   156c2:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   156c9:	ff ff 0f 
      }
   156cc:	5d                   	pop    %rbp
   156cd:	c3                   	ret

00000000000156ce <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   156ce:	55                   	push   %rbp
   156cf:	48 89 e5             	mov    %rsp,%rbp
   156d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   156d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156da:	5d                   	pop    %rbp
   156db:	c3                   	ret

00000000000156dc <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   156dc:	55                   	push   %rbp
   156dd:	48 89 e5             	mov    %rsp,%rbp
   156e0:	48 83 ec 20          	sub    $0x20,%rsp
   156e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   156e8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   156ec:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   156f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   156f4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   156f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   156fc:	48 89 ce             	mov    %rcx,%rsi
   156ff:	48 89 c7             	mov    %rax,%rdi
   15702:	e8 43 01 00 00       	call   1584a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   15707:	c9                   	leave
   15708:	c3                   	ret

0000000000015709 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   15709:	55                   	push   %rbp
   1570a:	48 89 e5             	mov    %rsp,%rbp
   1570d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15711:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15715:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15719:	5d                   	pop    %rbp
   1571a:	c3                   	ret
   1571b:	90                   	nop

000000000001571c <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   1571c:	55                   	push   %rbp
   1571d:	48 89 e5             	mov    %rsp,%rbp
   15720:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   15724:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   1572b:	1c c7 01 
      }
   1572e:	5d                   	pop    %rbp
   1572f:	c3                   	ret

0000000000015730 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   15730:	55                   	push   %rbp
   15731:	48 89 e5             	mov    %rsp,%rbp
   15734:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15738:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   1573c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15740:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   15744:	48 8b 12             	mov    (%rdx),%rdx
   15747:	48 89 10             	mov    %rdx,(%rax)
      { }
   1574a:	90                   	nop
   1574b:	5d                   	pop    %rbp
   1574c:	c3                   	ret
   1574d:	90                   	nop

000000000001574e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   1574e:	55                   	push   %rbp
   1574f:	48 89 e5             	mov    %rsp,%rbp
   15752:	48 83 ec 20          	sub    $0x20,%rsp
   15756:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1575a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   1575e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   15762:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1576a:	48 89 ce             	mov    %rcx,%rsi
   1576d:	48 89 c7             	mov    %rax,%rdi
   15770:	e8 03 01 00 00       	call   15878 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   15775:	90                   	nop
   15776:	c9                   	leave
   15777:	c3                   	ret

0000000000015778 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   15778:	55                   	push   %rbp
   15779:	48 89 e5             	mov    %rsp,%rbp
   1577c:	48 83 ec 20          	sub    $0x20,%rsp
   15780:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15784:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15788:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   1578c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15790:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15794:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15798:	48 89 ce             	mov    %rcx,%rsi
   1579b:	48 89 c7             	mov    %rax,%rdi
   1579e:	e8 1f 01 00 00       	call   158c2 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   157a3:	90                   	nop
   157a4:	c9                   	leave
   157a5:	c3                   	ret

00000000000157a6 <_ZSt8__fill_aIP6ShaderS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   157a6:	55                   	push   %rbp
   157a7:	48 89 e5             	mov    %rsp,%rbp
   157aa:	48 83 ec 20          	sub    $0x20,%rsp
   157ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   157b6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   157ba:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   157be:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   157c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157c6:	48 89 ce             	mov    %rcx,%rsi
   157c9:	48 89 c7             	mov    %rax,%rdi
   157cc:	e8 2c 01 00 00       	call   158fd <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
   157d1:	90                   	nop
   157d2:	c9                   	leave
   157d3:	c3                   	ret

00000000000157d4 <_ZSt12__niter_baseIPK14VkDynamicStateET_S3_>:
    __niter_base(_Iterator __it)
   157d4:	55                   	push   %rbp
   157d5:	48 89 e5             	mov    %rsp,%rbp
   157d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   157dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157e0:	5d                   	pop    %rbp
   157e1:	c3                   	ret

00000000000157e2 <_ZSt12__niter_baseIP14VkDynamicStateET_S2_>:
    __niter_base(_Iterator __it)
   157e2:	55                   	push   %rbp
   157e3:	48 89 e5             	mov    %rsp,%rbp
   157e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   157ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   157ee:	5d                   	pop    %rbp
   157ef:	c3                   	ret

00000000000157f0 <_ZSt14__copy_move_a1ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   157f0:	55                   	push   %rbp
   157f1:	48 89 e5             	mov    %rsp,%rbp
   157f4:	48 83 ec 20          	sub    $0x20,%rsp
   157f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   157fc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15800:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   15804:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15808:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1580c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15810:	48 89 ce             	mov    %rcx,%rsi
   15813:	48 89 c7             	mov    %rax,%rdi
   15816:	e8 1d 01 00 00       	call   15938 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>
   1581b:	c9                   	leave
   1581c:	c3                   	ret

000000000001581d <_ZSt12__niter_wrapIP14VkDynamicStateET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   1581d:	55                   	push   %rbp
   1581e:	48 89 e5             	mov    %rsp,%rbp
   15821:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15825:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15829:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1582d:	5d                   	pop    %rbp
   1582e:	c3                   	ret
   1582f:	90                   	nop

0000000000015830 <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   15830:	55                   	push   %rbp
   15831:	48 89 e5             	mov    %rsp,%rbp
   15834:	48 83 ec 10          	sub    $0x10,%rsp
   15838:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   1583c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15840:	48 89 c7             	mov    %rax,%rdi
   15843:	e8 72 fe ff ff       	call   156ba <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   15848:	c9                   	leave
   15849:	c3                   	ret

000000000001584a <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   1584a:	55                   	push   %rbp
   1584b:	48 89 e5             	mov    %rsp,%rbp
   1584e:	48 83 ec 20          	sub    $0x20,%rsp
   15852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1585a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1585e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15862:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15866:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1586a:	48 89 ce             	mov    %rcx,%rsi
   1586d:	48 89 c7             	mov    %rax,%rdi
   15870:	e8 f0 00 00 00       	call   15965 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   15875:	c9                   	leave
   15876:	c3                   	ret
   15877:	90                   	nop

0000000000015878 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   15878:	55                   	push   %rbp
   15879:	48 89 e5             	mov    %rsp,%rbp
   1587c:	53                   	push   %rbx
   1587d:	48 83 ec 28          	sub    $0x28,%rsp
   15881:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15885:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15889:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   1588d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   15891:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15895:	48 89 c7             	mov    %rax,%rdi
   15898:	e8 27 01 00 00       	call   159c4 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   1589d:	48 89 c7             	mov    %rax,%rdi
   158a0:	e8 39 01 00 00       	call   159de <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   158a5:	48 89 c6             	mov    %rax,%rsi
   158a8:	48 89 df             	mov    %rbx,%rdi
   158ab:	e8 10 e9 fe ff       	call   41c0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   158b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158b4:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   158bb:	90                   	nop
   158bc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   158c0:	c9                   	leave
   158c1:	c3                   	ret

00000000000158c2 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   158c2:	55                   	push   %rbp
   158c3:	48 89 e5             	mov    %rsp,%rbp
   158c6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   158ca:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   158ce:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   158d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   158d6:	48 8b 00             	mov    (%rax),%rax
   158d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   158dd:	eb 10                	jmp    158ef <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   158df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   158e7:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   158ea:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   158ef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   158f3:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   158f7:	75 e6                	jne    158df <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   158f9:	90                   	nop
   158fa:	90                   	nop
   158fb:	5d                   	pop    %rbp
   158fc:	c3                   	ret

00000000000158fd <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   158fd:	55                   	push   %rbp
   158fe:	48 89 e5             	mov    %rsp,%rbp
   15901:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15905:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15909:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
   1590d:	eb 1b                	jmp    1592a <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x2d>
	*__first = __value;
   1590f:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   15913:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15917:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1591b:	48 8b 00             	mov    (%rax),%rax
   1591e:	48 89 01             	mov    %rax,(%rcx)
   15921:	48 89 51 08          	mov    %rdx,0x8(%rcx)
      for (; __first != __last; ++__first)
   15925:	48 83 45 f8 10       	addq   $0x10,-0x8(%rbp)
   1592a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1592e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   15932:	75 db                	jne    1590f <_ZSt9__fill_a1IP6ShaderS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
   15934:	90                   	nop
   15935:	90                   	nop
   15936:	5d                   	pop    %rbp
   15937:	c3                   	ret

0000000000015938 <_ZSt14__copy_move_a2ILb0EPK14VkDynamicStatePS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   15938:	55                   	push   %rbp
   15939:	48 89 e5             	mov    %rsp,%rbp
   1593c:	48 83 ec 20          	sub    $0x20,%rsp
   15940:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15944:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15948:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   1594c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15950:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15958:	48 89 ce             	mov    %rcx,%rsi
   1595b:	48 89 c7             	mov    %rax,%rdi
   1595e:	e8 89 00 00 00       	call   159ec <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>
    }
   15963:	c9                   	leave
   15964:	c3                   	ret

0000000000015965 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   15965:	55                   	push   %rbp
   15966:	48 89 e5             	mov    %rsp,%rbp
   15969:	48 83 ec 30          	sub    $0x30,%rsp
   1596d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15971:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15975:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15979:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1597d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15981:	48 c1 f8 03          	sar    $0x3,%rax
   15985:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   15989:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1598e:	74 1f                	je     159af <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   15990:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15994:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1599b:	00 
   1599c:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   159a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   159a4:	48 89 ce             	mov    %rcx,%rsi
   159a7:	48 89 c7             	mov    %rax,%rdi
   159aa:	e8 81 ec fe ff       	call   4630 <memmove@plt>
	  return __result + _Num;
   159af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159b3:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   159ba:	00 
   159bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   159bf:	48 01 d0             	add    %rdx,%rax
	}
   159c2:	c9                   	leave
   159c3:	c3                   	ret

00000000000159c4 <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   159c4:	55                   	push   %rbp
   159c5:	48 89 e5             	mov    %rsp,%rbp
   159c8:	48 83 ec 10          	sub    $0x10,%rsp
   159cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   159d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159d4:	48 89 c7             	mov    %rax,%rdi
   159d7:	e8 6f 00 00 00       	call   15a4b <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   159dc:	c9                   	leave
   159dd:	c3                   	ret

00000000000159de <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   159de:	55                   	push   %rbp
   159df:	48 89 e5             	mov    %rsp,%rbp
   159e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   159e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   159ea:	5d                   	pop    %rbp
   159eb:	c3                   	ret

00000000000159ec <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   159ec:	55                   	push   %rbp
   159ed:	48 89 e5             	mov    %rsp,%rbp
   159f0:	48 83 ec 30          	sub    $0x30,%rsp
   159f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   159f8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   159fc:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15a00:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15a04:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15a08:	48 c1 f8 02          	sar    $0x2,%rax
   15a0c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   15a10:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   15a15:	74 1f                	je     15a36 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI14VkDynamicStateEEPT_PKS4_S7_S5_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   15a17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a1b:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15a22:	00 
   15a23:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   15a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a2b:	48 89 ce             	mov    %rcx,%rsi
   15a2e:	48 89 c7             	mov    %rax,%rdi
   15a31:	e8 fa eb fe ff       	call   4630 <memmove@plt>
	  return __result + _Num;
   15a36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a3a:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
   15a41:	00 
   15a42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15a46:	48 01 d0             	add    %rdx,%rax
	}
   15a49:	c9                   	leave
   15a4a:	c3                   	ret

0000000000015a4b <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   15a4b:	55                   	push   %rbp
   15a4c:	48 89 e5             	mov    %rsp,%rbp
   15a4f:	48 83 ec 10          	sub    $0x10,%rsp
   15a53:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   15a57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a5b:	48 89 c7             	mov    %rax,%rdi
   15a5e:	e8 02 00 00 00       	call   15a65 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   15a63:	c9                   	leave
   15a64:	c3                   	ret

0000000000015a65 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   15a65:	55                   	push   %rbp
   15a66:	48 89 e5             	mov    %rsp,%rbp
   15a69:	48 83 ec 10          	sub    $0x10,%rsp
   15a6d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a75:	48 89 c7             	mov    %rax,%rdi
   15a78:	e8 02 00 00 00       	call   15a7f <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   15a7d:	c9                   	leave
   15a7e:	c3                   	ret

0000000000015a7f <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   15a7f:	55                   	push   %rbp
   15a80:	48 89 e5             	mov    %rsp,%rbp
   15a83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15a8b:	48 8b 00             	mov    (%rax),%rax
   15a8e:	5d                   	pop    %rbp
   15a8f:	c3                   	ret

0000000000015a90 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   15a90:	55                   	push   %rbp
   15a91:	48 89 e5             	mov    %rsp,%rbp
   15a94:	48 83 ec 10          	sub    $0x10,%rsp
   15a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15a9c:	48 8d 15 1d 02 01 00 	lea    0x1021d(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   15aa3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aa7:	48 89 10             	mov    %rdx,(%rax)
   15aaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aae:	48 89 c7             	mov    %rax,%rdi
   15ab1:	e8 3a ec fe ff       	call   46f0 <_ZNSt9exceptionD2Ev@plt>
   15ab6:	90                   	nop
   15ab7:	c9                   	leave
   15ab8:	c3                   	ret
   15ab9:	90                   	nop

0000000000015aba <_ZNSt19bad_optional_accessD0Ev>:
   15aba:	55                   	push   %rbp
   15abb:	48 89 e5             	mov    %rsp,%rbp
   15abe:	48 83 ec 10          	sub    $0x10,%rsp
   15ac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15ac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15aca:	48 89 c7             	mov    %rax,%rdi
   15acd:	e8 be ff ff ff       	call   15a90 <_ZNSt19bad_optional_accessD1Ev>
   15ad2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15ad6:	be 08 00 00 00       	mov    $0x8,%esi
   15adb:	48 89 c7             	mov    %rax,%rdi
   15ade:	e8 8d e8 fe ff       	call   4370 <_ZdlPvm@plt>
   15ae3:	c9                   	leave
   15ae4:	c3                   	ret

Disassembly of section .fini:

0000000000015ae8 <_fini>:
   15ae8:	48 83 ec 08          	sub    $0x8,%rsp
   15aec:	48 83 c4 08          	add    $0x8,%rsp
   15af0:	c3                   	ret
