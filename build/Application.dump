
build/Application:     file format elf64-x86-64


Disassembly of section .init:

0000000000004000 <_init>:
    4000:	48 83 ec 08          	sub    $0x8,%rsp
    4004:	48 8b 05 ad 1f 02 00 	mov    0x21fad(%rip),%rax        # 25fb8 <__gmon_start__@Base>
    400b:	48 85 c0             	test   %rax,%rax
    400e:	74 02                	je     4012 <_init+0x12>
    4010:	ff d0                	call   *%rax
    4012:	48 83 c4 08          	add    $0x8,%rsp
    4016:	c3                   	ret

Disassembly of section .plt:

0000000000004020 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt-0x10>:
    4020:	ff 35 ca 1f 02 00    	push   0x21fca(%rip)        # 25ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    4026:	ff 25 cc 1f 02 00    	jmp    *0x21fcc(%rip)        # 25ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    402c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>:
    4030:	ff 25 ca 1f 02 00    	jmp    *0x21fca(%rip)        # 26000 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@GLIBCXX_3.4.21>
    4036:	68 00 00 00 00       	push   $0x0
    403b:	e9 e0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>:
    4040:	ff 25 c2 1f 02 00    	jmp    *0x21fc2(%rip)        # 26008 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@GLIBCXX_3.4.21>
    4046:	68 01 00 00 00       	push   $0x1
    404b:	e9 d0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>:
    4050:	ff 25 ba 1f 02 00    	jmp    *0x21fba(%rip)        # 26010 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@GLIBCXX_3.4>
    4056:	68 02 00 00 00       	push   $0x2
    405b:	e9 c0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004060 <_ZNSaIcED2Ev@plt>:
    4060:	ff 25 b2 1f 02 00    	jmp    *0x21fb2(%rip)        # 26018 <_ZNSaIcED2Ev@GLIBCXX_3.4>
    4066:	68 03 00 00 00       	push   $0x3
    406b:	e9 b0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>:
    4070:	ff 25 aa 1f 02 00    	jmp    *0x21faa(%rip)        # 26020 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@GLIBCXX_3.4>
    4076:	68 04 00 00 00       	push   $0x4
    407b:	e9 a0 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>:
    4080:	ff 25 a2 1f 02 00    	jmp    *0x21fa2(%rip)        # 26028 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    4086:	68 05 00 00 00       	push   $0x5
    408b:	e9 90 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004090 <_ZNSolsEm@plt>:
    4090:	ff 25 9a 1f 02 00    	jmp    *0x21f9a(%rip)        # 26030 <_ZNSolsEm@GLIBCXX_3.4>
    4096:	68 06 00 00 00       	push   $0x6
    409b:	e9 80 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040a0 <vkDeviceWaitIdle@plt>:
    40a0:	ff 25 92 1f 02 00    	jmp    *0x21f92(%rip)        # 26038 <vkDeviceWaitIdle@Base>
    40a6:	68 07 00 00 00       	push   $0x7
    40ab:	e9 70 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>:
    40b0:	ff 25 8a 1f 02 00    	jmp    *0x21f8a(%rip)        # 26040 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@GLIBCXX_3.4>
    40b6:	68 08 00 00 00       	push   $0x8
    40bb:	e9 60 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040c0 <vkDestroySwapchainKHR@plt>:
    40c0:	ff 25 82 1f 02 00    	jmp    *0x21f82(%rip)        # 26048 <vkDestroySwapchainKHR@Base>
    40c6:	68 09 00 00 00       	push   $0x9
    40cb:	e9 50 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040d0 <glfwDestroyWindow@plt>:
    40d0:	ff 25 7a 1f 02 00    	jmp    *0x21f7a(%rip)        # 26050 <glfwDestroyWindow@Base>
    40d6:	68 0a 00 00 00       	push   $0xa
    40db:	e9 40 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040e0 <_ZSt17__throw_bad_allocv@plt>:
    40e0:	ff 25 72 1f 02 00    	jmp    *0x21f72(%rip)        # 26058 <_ZSt17__throw_bad_allocv@GLIBCXX_3.4>
    40e6:	68 0b 00 00 00       	push   $0xb
    40eb:	e9 30 ff ff ff       	jmp    4020 <_init+0x20>

00000000000040f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>:
    40f0:	ff 25 6a 1f 02 00    	jmp    *0x21f6a(%rip)        # 26060 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@GLIBCXX_3.4.21>
    40f6:	68 0c 00 00 00       	push   $0xc
    40fb:	e9 20 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004100 <_ZNSt13runtime_errorC1EPKc@plt>:
    4100:	ff 25 62 1f 02 00    	jmp    *0x21f62(%rip)        # 26068 <_ZNSt13runtime_errorC1EPKc@GLIBCXX_3.4.21>
    4106:	68 0d 00 00 00       	push   $0xd
    410b:	e9 10 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004110 <vkGetPhysicalDeviceProperties@plt>:
    4110:	ff 25 5a 1f 02 00    	jmp    *0x21f5a(%rip)        # 26070 <vkGetPhysicalDeviceProperties@Base>
    4116:	68 0e 00 00 00       	push   $0xe
    411b:	e9 00 ff ff ff       	jmp    4020 <_init+0x20>

0000000000004120 <__cxa_begin_catch@plt>:
    4120:	ff 25 52 1f 02 00    	jmp    *0x21f52(%rip)        # 26078 <__cxa_begin_catch@CXXABI_1.3>
    4126:	68 0f 00 00 00       	push   $0xf
    412b:	e9 f0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004130 <vkCreateCommandPool@plt>:
    4130:	ff 25 4a 1f 02 00    	jmp    *0x21f4a(%rip)        # 26080 <vkCreateCommandPool@Base>
    4136:	68 10 00 00 00       	push   $0x10
    413b:	e9 e0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004140 <strlen@plt>:
    4140:	ff 25 42 1f 02 00    	jmp    *0x21f42(%rip)        # 26088 <strlen@GLIBC_2.2.5>
    4146:	68 11 00 00 00       	push   $0x11
    414b:	e9 d0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004150 <memcmp@plt>:
    4150:	ff 25 3a 1f 02 00    	jmp    *0x21f3a(%rip)        # 26090 <memcmp@GLIBC_2.2.5>
    4156:	68 12 00 00 00       	push   $0x12
    415b:	e9 c0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004160 <vkCreateGraphicsPipelines@plt>:
    4160:	ff 25 32 1f 02 00    	jmp    *0x21f32(%rip)        # 26098 <vkCreateGraphicsPipelines@Base>
    4166:	68 13 00 00 00       	push   $0x13
    416b:	e9 b0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004170 <__cxa_allocate_exception@plt>:
    4170:	ff 25 2a 1f 02 00    	jmp    *0x21f2a(%rip)        # 260a0 <__cxa_allocate_exception@CXXABI_1.3>
    4176:	68 14 00 00 00       	push   $0x14
    417b:	e9 a0 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004180 <_ZSt20__throw_length_errorPKc@plt>:
    4180:	ff 25 22 1f 02 00    	jmp    *0x21f22(%rip)        # 260a8 <_ZSt20__throw_length_errorPKc@GLIBCXX_3.4>
    4186:	68 15 00 00 00       	push   $0x15
    418b:	e9 90 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004190 <vkEnumeratePhysicalDevices@plt>:
    4190:	ff 25 1a 1f 02 00    	jmp    *0x21f1a(%rip)        # 260b0 <vkEnumeratePhysicalDevices@Base>
    4196:	68 16 00 00 00       	push   $0x16
    419b:	e9 80 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041a0 <memset@plt>:
    41a0:	ff 25 12 1f 02 00    	jmp    *0x21f12(%rip)        # 260b8 <memset@GLIBC_2.2.5>
    41a6:	68 17 00 00 00       	push   $0x17
    41ab:	e9 70 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041b0 <_ZNSaIcEC1ERKS_@plt>:
    41b0:	ff 25 0a 1f 02 00    	jmp    *0x21f0a(%rip)        # 260c0 <_ZNSaIcEC1ERKS_@GLIBCXX_3.4>
    41b6:	68 18 00 00 00       	push   $0x18
    41bb:	e9 60 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041c0 <vkGetSwapchainImagesKHR@plt>:
    41c0:	ff 25 02 1f 02 00    	jmp    *0x21f02(%rip)        # 260c8 <vkGetSwapchainImagesKHR@Base>
    41c6:	68 19 00 00 00       	push   $0x19
    41cb:	e9 50 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>:
    41d0:	ff 25 fa 1e 02 00    	jmp    *0x21efa(%rip)        # 260d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@GLIBCXX_3.4.21>
    41d6:	68 1a 00 00 00       	push   $0x1a
    41db:	e9 40 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>:
    41e0:	ff 25 f2 1e 02 00    	jmp    *0x21ef2(%rip)        # 260d8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@GLIBCXX_3.4.21>
    41e6:	68 1b 00 00 00       	push   $0x1b
    41eb:	e9 30 fe ff ff       	jmp    4020 <_init+0x20>

00000000000041f0 <vkCreateRenderPass@plt>:
    41f0:	ff 25 ea 1e 02 00    	jmp    *0x21eea(%rip)        # 260e0 <vkCreateRenderPass@Base>
    41f6:	68 1c 00 00 00       	push   $0x1c
    41fb:	e9 20 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>:
    4200:	ff 25 e2 1e 02 00    	jmp    *0x21ee2(%rip)        # 260e8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@GLIBCXX_3.4.21>
    4206:	68 1d 00 00 00       	push   $0x1d
    420b:	e9 10 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>:
    4210:	ff 25 da 1e 02 00    	jmp    *0x21eda(%rip)        # 260f0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    4216:	68 1e 00 00 00       	push   $0x1e
    421b:	e9 00 fe ff ff       	jmp    4020 <_init+0x20>

0000000000004220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>:
    4220:	ff 25 d2 1e 02 00    	jmp    *0x21ed2(%rip)        # 260f8 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@GLIBCXX_3.4.21>
    4226:	68 1f 00 00 00       	push   $0x1f
    422b:	e9 f0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004230 <_ZSt19__throw_logic_errorPKc@plt>:
    4230:	ff 25 ca 1e 02 00    	jmp    *0x21eca(%rip)        # 26100 <_ZSt19__throw_logic_errorPKc@GLIBCXX_3.4>
    4236:	68 20 00 00 00       	push   $0x20
    423b:	e9 e0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004240 <__cxa_free_exception@plt>:
    4240:	ff 25 c2 1e 02 00    	jmp    *0x21ec2(%rip)        # 26108 <__cxa_free_exception@CXXABI_1.3>
    4246:	68 21 00 00 00       	push   $0x21
    424b:	e9 d0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>:
    4250:	ff 25 ba 1e 02 00    	jmp    *0x21eba(%rip)        # 26110 <vkGetPhysicalDeviceQueueFamilyProperties@Base>
    4256:	68 22 00 00 00       	push   $0x22
    425b:	e9 c0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004260 <glfwGetRequiredInstanceExtensions@plt>:
    4260:	ff 25 b2 1e 02 00    	jmp    *0x21eb2(%rip)        # 26118 <glfwGetRequiredInstanceExtensions@Base>
    4266:	68 23 00 00 00       	push   $0x23
    426b:	e9 b0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004270 <_ZSt28__throw_bad_array_new_lengthv@plt>:
    4270:	ff 25 aa 1e 02 00    	jmp    *0x21eaa(%rip)        # 26120 <_ZSt28__throw_bad_array_new_lengthv@GLIBCXX_3.4.29>
    4276:	68 24 00 00 00       	push   $0x24
    427b:	e9 a0 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004280 <vkCreateShaderModule@plt>:
    4280:	ff 25 a2 1e 02 00    	jmp    *0x21ea2(%rip)        # 26128 <vkCreateShaderModule@Base>
    4286:	68 25 00 00 00       	push   $0x25
    428b:	e9 90 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>:
    4290:	ff 25 9a 1e 02 00    	jmp    *0x21e9a(%rip)        # 26130 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@GLIBCXX_3.4.21>
    4296:	68 26 00 00 00       	push   $0x26
    429b:	e9 80 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042a0 <vkDestroyDevice@plt>:
    42a0:	ff 25 92 1e 02 00    	jmp    *0x21e92(%rip)        # 26138 <vkDestroyDevice@Base>
    42a6:	68 27 00 00 00       	push   $0x27
    42ab:	e9 70 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042b0 <vkCreatePipelineLayout@plt>:
    42b0:	ff 25 8a 1e 02 00    	jmp    *0x21e8a(%rip)        # 26140 <vkCreatePipelineLayout@Base>
    42b6:	68 28 00 00 00       	push   $0x28
    42bb:	e9 60 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042c0 <vkEnumerateInstanceExtensionProperties@plt>:
    42c0:	ff 25 82 1e 02 00    	jmp    *0x21e82(%rip)        # 26148 <vkEnumerateInstanceExtensionProperties@Base>
    42c6:	68 29 00 00 00       	push   $0x29
    42cb:	e9 50 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>:
    42d0:	ff 25 7a 1e 02 00    	jmp    *0x21e7a(%rip)        # 26150 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@GLIBCXX_3.4.21>
    42d6:	68 2a 00 00 00       	push   $0x2a
    42db:	e9 40 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042e0 <glfwWindowHint@plt>:
    42e0:	ff 25 72 1e 02 00    	jmp    *0x21e72(%rip)        # 26158 <glfwWindowHint@Base>
    42e6:	68 2b 00 00 00       	push   $0x2b
    42eb:	e9 30 fd ff ff       	jmp    4020 <_init+0x20>

00000000000042f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>:
    42f0:	ff 25 6a 1e 02 00    	jmp    *0x21e6a(%rip)        # 26160 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@Base>
    42f6:	68 2c 00 00 00       	push   $0x2c
    42fb:	e9 20 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004300 <__cxa_atexit@plt>:
    4300:	ff 25 62 1e 02 00    	jmp    *0x21e62(%rip)        # 26168 <__cxa_atexit@GLIBC_2.2.5>
    4306:	68 2d 00 00 00       	push   $0x2d
    430b:	e9 10 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>:
    4310:	ff 25 5a 1e 02 00    	jmp    *0x21e5a(%rip)        # 26170 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@GLIBCXX_3.4.21>
    4316:	68 2e 00 00 00       	push   $0x2e
    431b:	e9 00 fd ff ff       	jmp    4020 <_init+0x20>

0000000000004320 <vkAllocateCommandBuffers@plt>:
    4320:	ff 25 52 1e 02 00    	jmp    *0x21e52(%rip)        # 26178 <vkAllocateCommandBuffers@Base>
    4326:	68 2f 00 00 00       	push   $0x2f
    432b:	e9 f0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004330 <vkGetPhysicalDeviceProperties2@plt>:
    4330:	ff 25 4a 1e 02 00    	jmp    *0x21e4a(%rip)        # 26180 <vkGetPhysicalDeviceProperties2@Base>
    4336:	68 30 00 00 00       	push   $0x30
    433b:	e9 e0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004340 <vkGetInstanceProcAddr@plt>:
    4340:	ff 25 42 1e 02 00    	jmp    *0x21e42(%rip)        # 26188 <vkGetInstanceProcAddr@Base>
    4346:	68 31 00 00 00       	push   $0x31
    434b:	e9 d0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004350 <glfwPollEvents@plt>:
    4350:	ff 25 3a 1e 02 00    	jmp    *0x21e3a(%rip)        # 26190 <glfwPollEvents@Base>
    4356:	68 32 00 00 00       	push   $0x32
    435b:	e9 c0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004360 <vkDestroyRenderPass@plt>:
    4360:	ff 25 32 1e 02 00    	jmp    *0x21e32(%rip)        # 26198 <vkDestroyRenderPass@Base>
    4366:	68 33 00 00 00       	push   $0x33
    436b:	e9 b0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
    4370:	ff 25 2a 1e 02 00    	jmp    *0x21e2a(%rip)        # 261a0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
    4376:	68 34 00 00 00       	push   $0x34
    437b:	e9 a0 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004380 <_Znwm@plt>:
    4380:	ff 25 22 1e 02 00    	jmp    *0x21e22(%rip)        # 261a8 <_Znwm@GLIBCXX_3.4>
    4386:	68 35 00 00 00       	push   $0x35
    438b:	e9 90 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004390 <_ZdlPvm@plt>:
    4390:	ff 25 1a 1e 02 00    	jmp    *0x21e1a(%rip)        # 261b0 <_ZdlPvm@CXXABI_1.3.9>
    4396:	68 36 00 00 00       	push   $0x36
    439b:	e9 80 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043a0 <vkDestroyInstance@plt>:
    43a0:	ff 25 12 1e 02 00    	jmp    *0x21e12(%rip)        # 261b8 <vkDestroyInstance@Base>
    43a6:	68 37 00 00 00       	push   $0x37
    43ab:	e9 70 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043b0 <glfwTerminate@plt>:
    43b0:	ff 25 0a 1e 02 00    	jmp    *0x21e0a(%rip)        # 261c0 <glfwTerminate@Base>
    43b6:	68 38 00 00 00       	push   $0x38
    43bb:	e9 60 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043c0 <vkCreateImageView@plt>:
    43c0:	ff 25 02 1e 02 00    	jmp    *0x21e02(%rip)        # 261c8 <vkCreateImageView@Base>
    43c6:	68 39 00 00 00       	push   $0x39
    43cb:	e9 50 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>:
    43d0:	ff 25 fa 1d 02 00    	jmp    *0x21dfa(%rip)        # 261d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@GLIBCXX_3.4>
    43d6:	68 3a 00 00 00       	push   $0x3a
    43db:	e9 40 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043e0 <_ZNSolsEPFRSoS_E@plt>:
    43e0:	ff 25 f2 1d 02 00    	jmp    *0x21df2(%rip)        # 261d8 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
    43e6:	68 3b 00 00 00       	push   $0x3b
    43eb:	e9 30 fc ff ff       	jmp    4020 <_init+0x20>

00000000000043f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>:
    43f0:	ff 25 ea 1d 02 00    	jmp    *0x21dea(%rip)        # 261e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@GLIBCXX_3.4.21>
    43f6:	68 3c 00 00 00       	push   $0x3c
    43fb:	e9 20 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>:
    4400:	ff 25 e2 1d 02 00    	jmp    *0x21de2(%rip)        # 261e8 <vkGetPhysicalDeviceSurfaceSupportKHR@Base>
    4406:	68 3d 00 00 00       	push   $0x3d
    440b:	e9 10 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>:
    4410:	ff 25 da 1d 02 00    	jmp    *0x21dda(%rip)        # 261f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@GLIBCXX_3.4.21>
    4416:	68 3e 00 00 00       	push   $0x3e
    441b:	e9 00 fc ff ff       	jmp    4020 <_init+0x20>

0000000000004420 <_ZNSaIcED1Ev@plt>:
    4420:	ff 25 d2 1d 02 00    	jmp    *0x21dd2(%rip)        # 261f8 <_ZNSaIcED1Ev@GLIBCXX_3.4>
    4426:	68 3f 00 00 00       	push   $0x3f
    442b:	e9 f0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004430 <vkDestroyPipeline@plt>:
    4430:	ff 25 ca 1d 02 00    	jmp    *0x21dca(%rip)        # 26200 <vkDestroyPipeline@Base>
    4436:	68 40 00 00 00       	push   $0x40
    443b:	e9 e0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>:
    4440:	ff 25 c2 1d 02 00    	jmp    *0x21dc2(%rip)        # 26208 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@GLIBCXX_3.4.21>
    4446:	68 41 00 00 00       	push   $0x41
    444b:	e9 d0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>:
    4450:	ff 25 ba 1d 02 00    	jmp    *0x21dba(%rip)        # 26210 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@GLIBCXX_3.4.21>
    4456:	68 42 00 00 00       	push   $0x42
    445b:	e9 c0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004460 <vkEnumerateInstanceLayerProperties@plt>:
    4460:	ff 25 b2 1d 02 00    	jmp    *0x21db2(%rip)        # 26218 <vkEnumerateInstanceLayerProperties@Base>
    4466:	68 43 00 00 00       	push   $0x43
    446b:	e9 b0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004470 <glfwInit@plt>:
    4470:	ff 25 aa 1d 02 00    	jmp    *0x21daa(%rip)        # 26220 <glfwInit@Base>
    4476:	68 44 00 00 00       	push   $0x44
    447b:	e9 a0 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>:
    4480:	ff 25 a2 1d 02 00    	jmp    *0x21da2(%rip)        # 26228 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@GLIBCXX_3.4>
    4486:	68 45 00 00 00       	push   $0x45
    448b:	e9 90 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004490 <vkCreateSwapchainKHR@plt>:
    4490:	ff 25 9a 1d 02 00    	jmp    *0x21d9a(%rip)        # 26230 <vkCreateSwapchainKHR@Base>
    4496:	68 46 00 00 00       	push   $0x46
    449b:	e9 80 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>:
    44a0:	ff 25 92 1d 02 00    	jmp    *0x21d92(%rip)        # 26238 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@GLIBCXX_3.4>
    44a6:	68 47 00 00 00       	push   $0x47
    44ab:	e9 70 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044b0 <vkDestroyShaderModule@plt>:
    44b0:	ff 25 8a 1d 02 00    	jmp    *0x21d8a(%rip)        # 26240 <vkDestroyShaderModule@Base>
    44b6:	68 48 00 00 00       	push   $0x48
    44bb:	e9 60 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044c0 <vkCreateInstance@plt>:
    44c0:	ff 25 82 1d 02 00    	jmp    *0x21d82(%rip)        # 26248 <vkCreateInstance@Base>
    44c6:	68 49 00 00 00       	push   $0x49
    44cb:	e9 50 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>:
    44d0:	ff 25 7a 1d 02 00    	jmp    *0x21d7a(%rip)        # 26250 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@GLIBCXX_3.4.21>
    44d6:	68 4a 00 00 00       	push   $0x4a
    44db:	e9 40 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044e0 <vkDestroyPipelineLayout@plt>:
    44e0:	ff 25 72 1d 02 00    	jmp    *0x21d72(%rip)        # 26258 <vkDestroyPipelineLayout@Base>
    44e6:	68 4b 00 00 00       	push   $0x4b
    44eb:	e9 30 fb ff ff       	jmp    4020 <_init+0x20>

00000000000044f0 <_ZNSi4readEPcl@plt>:
    44f0:	ff 25 6a 1d 02 00    	jmp    *0x21d6a(%rip)        # 26260 <_ZNSi4readEPcl@GLIBCXX_3.4>
    44f6:	68 4c 00 00 00       	push   $0x4c
    44fb:	e9 20 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>:
    4500:	ff 25 62 1d 02 00    	jmp    *0x21d62(%rip)        # 26268 <_ZNSi5seekgESt4fposI11__mbstate_tE@GLIBCXX_3.4>
    4506:	68 4d 00 00 00       	push   $0x4d
    450b:	e9 10 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>:
    4510:	ff 25 5a 1d 02 00    	jmp    *0x21d5a(%rip)        # 26270 <vkGetPhysicalDeviceSurfaceFormatsKHR@Base>
    4516:	68 4e 00 00 00       	push   $0x4e
    451b:	e9 00 fb ff ff       	jmp    4020 <_init+0x20>

0000000000004520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>:
    4520:	ff 25 52 1d 02 00    	jmp    *0x21d52(%rip)        # 26278 <vkGetPhysicalDeviceSurfacePresentModesKHR@Base>
    4526:	68 4f 00 00 00       	push   $0x4f
    452b:	e9 f0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    4530:	ff 25 4a 1d 02 00    	jmp    *0x21d4a(%rip)        # 26280 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    4536:	68 50 00 00 00       	push   $0x50
    453b:	e9 e0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004540 <vkGetDeviceQueue@plt>:
    4540:	ff 25 42 1d 02 00    	jmp    *0x21d42(%rip)        # 26288 <vkGetDeviceQueue@Base>
    4546:	68 51 00 00 00       	push   $0x51
    454b:	e9 d0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004550 <_ZNSolsEj@plt>:
    4550:	ff 25 3a 1d 02 00    	jmp    *0x21d3a(%rip)        # 26290 <_ZNSolsEj@GLIBCXX_3.4>
    4556:	68 52 00 00 00       	push   $0x52
    455b:	e9 c0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>:
    4560:	ff 25 32 1d 02 00    	jmp    *0x21d32(%rip)        # 26298 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@GLIBCXX_3.4.21>
    4566:	68 53 00 00 00       	push   $0x53
    456b:	e9 b0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004570 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4570:	ff 25 2a 1d 02 00    	jmp    *0x21d2a(%rip)        # 262a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4576:	68 54 00 00 00       	push   $0x54
    457b:	e9 a0 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004580 <vkEnumerateDeviceExtensionProperties@plt>:
    4580:	ff 25 22 1d 02 00    	jmp    *0x21d22(%rip)        # 262a8 <vkEnumerateDeviceExtensionProperties@Base>
    4586:	68 55 00 00 00       	push   $0x55
    458b:	e9 90 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>:
    4590:	ff 25 1a 1d 02 00    	jmp    *0x21d1a(%rip)        # 262b0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@GLIBCXX_3.4.21>
    4596:	68 56 00 00 00       	push   $0x56
    459b:	e9 80 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045a0 <vkDestroyCommandPool@plt>:
    45a0:	ff 25 12 1d 02 00    	jmp    *0x21d12(%rip)        # 262b8 <vkDestroyCommandPool@Base>
    45a6:	68 57 00 00 00       	push   $0x57
    45ab:	e9 70 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045b0 <_ZNSaIcEC2ERKS_@plt>:
    45b0:	ff 25 0a 1d 02 00    	jmp    *0x21d0a(%rip)        # 262c0 <_ZNSaIcEC2ERKS_@GLIBCXX_3.4>
    45b6:	68 58 00 00 00       	push   $0x58
    45bb:	e9 60 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045c0 <__cxa_rethrow@plt>:
    45c0:	ff 25 02 1d 02 00    	jmp    *0x21d02(%rip)        # 262c8 <__cxa_rethrow@CXXABI_1.3>
    45c6:	68 59 00 00 00       	push   $0x59
    45cb:	e9 50 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045d0 <vkCreateDevice@plt>:
    45d0:	ff 25 fa 1c 02 00    	jmp    *0x21cfa(%rip)        # 262d0 <vkCreateDevice@Base>
    45d6:	68 5a 00 00 00       	push   $0x5a
    45db:	e9 40 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045e0 <_ZNSt8ios_base4InitC1Ev@plt>:
    45e0:	ff 25 f2 1c 02 00    	jmp    *0x21cf2(%rip)        # 262d8 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
    45e6:	68 5b 00 00 00       	push   $0x5b
    45eb:	e9 30 fa ff ff       	jmp    4020 <_init+0x20>

00000000000045f0 <glfwCreateWindowSurface@plt>:
    45f0:	ff 25 ea 1c 02 00    	jmp    *0x21cea(%rip)        # 262e0 <glfwCreateWindowSurface@Base>
    45f6:	68 5c 00 00 00       	push   $0x5c
    45fb:	e9 20 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004600 <glfwCreateWindow@plt>:
    4600:	ff 25 e2 1c 02 00    	jmp    *0x21ce2(%rip)        # 262e8 <glfwCreateWindow@Base>
    4606:	68 5d 00 00 00       	push   $0x5d
    460b:	e9 10 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004610 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>:
    4610:	ff 25 da 1c 02 00    	jmp    *0x21cda(%rip)        # 262f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@GLIBCXX_3.4.21>
    4616:	68 5e 00 00 00       	push   $0x5e
    461b:	e9 00 fa ff ff       	jmp    4020 <_init+0x20>

0000000000004620 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4620:	ff 25 d2 1c 02 00    	jmp    *0x21cd2(%rip)        # 262f8 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4626:	68 5f 00 00 00       	push   $0x5f
    462b:	e9 f0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>:
    4630:	ff 25 ca 1c 02 00    	jmp    *0x21cca(%rip)        # 26300 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@GLIBCXX_3.4.21>
    4636:	68 60 00 00 00       	push   $0x60
    463b:	e9 e0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004640 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>:
    4640:	ff 25 c2 1c 02 00    	jmp    *0x21cc2(%rip)        # 26308 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@GLIBCXX_3.4.21>
    4646:	68 61 00 00 00       	push   $0x61
    464b:	e9 d0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004650 <memmove@plt>:
    4650:	ff 25 ba 1c 02 00    	jmp    *0x21cba(%rip)        # 26310 <memmove@GLIBC_2.2.5>
    4656:	68 62 00 00 00       	push   $0x62
    465b:	e9 c0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004660 <__cxa_end_catch@plt>:
    4660:	ff 25 b2 1c 02 00    	jmp    *0x21cb2(%rip)        # 26318 <__cxa_end_catch@CXXABI_1.3>
    4666:	68 63 00 00 00       	push   $0x63
    466b:	e9 b0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004670 <__cxa_throw@plt>:
    4670:	ff 25 aa 1c 02 00    	jmp    *0x21caa(%rip)        # 26320 <__cxa_throw@CXXABI_1.3>
    4676:	68 64 00 00 00       	push   $0x64
    467b:	e9 a0 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004680 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>:
    4680:	ff 25 a2 1c 02 00    	jmp    *0x21ca2(%rip)        # 26328 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@GLIBCXX_3.4.21>
    4686:	68 65 00 00 00       	push   $0x65
    468b:	e9 90 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004690 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>:
    4690:	ff 25 9a 1c 02 00    	jmp    *0x21c9a(%rip)        # 26330 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@GLIBCXX_3.4>
    4696:	68 66 00 00 00       	push   $0x66
    469b:	e9 80 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046a0 <_ZNSolsEi@plt>:
    46a0:	ff 25 92 1c 02 00    	jmp    *0x21c92(%rip)        # 26338 <_ZNSolsEi@GLIBCXX_3.4>
    46a6:	68 67 00 00 00       	push   $0x67
    46ab:	e9 70 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046b0 <_ZNSi5tellgEv@plt>:
    46b0:	ff 25 8a 1c 02 00    	jmp    *0x21c8a(%rip)        # 26340 <_ZNSi5tellgEv@GLIBCXX_3.4>
    46b6:	68 68 00 00 00       	push   $0x68
    46bb:	e9 60 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046c0 <vkDestroySurfaceKHR@plt>:
    46c0:	ff 25 82 1c 02 00    	jmp    *0x21c82(%rip)        # 26348 <vkDestroySurfaceKHR@Base>
    46c6:	68 69 00 00 00       	push   $0x69
    46cb:	e9 50 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046d0 <_Unwind_Resume@plt>:
    46d0:	ff 25 7a 1c 02 00    	jmp    *0x21c7a(%rip)        # 26350 <_Unwind_Resume@GCC_3.0>
    46d6:	68 6a 00 00 00       	push   $0x6a
    46db:	e9 40 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046e0 <_ZNSaIcEC1Ev@plt>:
    46e0:	ff 25 72 1c 02 00    	jmp    *0x21c72(%rip)        # 26358 <_ZNSaIcEC1Ev@GLIBCXX_3.4>
    46e6:	68 6b 00 00 00       	push   $0x6b
    46eb:	e9 30 f9 ff ff       	jmp    4020 <_init+0x20>

00000000000046f0 <vkDestroyImageView@plt>:
    46f0:	ff 25 6a 1c 02 00    	jmp    *0x21c6a(%rip)        # 26360 <vkDestroyImageView@Base>
    46f6:	68 6c 00 00 00       	push   $0x6c
    46fb:	e9 20 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>:
    4700:	ff 25 62 1c 02 00    	jmp    *0x21c62(%rip)        # 26368 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@GLIBCXX_3.4.21>
    4706:	68 6d 00 00 00       	push   $0x6d
    470b:	e9 10 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004710 <_ZNSt9exceptionD2Ev@plt>:
    4710:	ff 25 5a 1c 02 00    	jmp    *0x21c5a(%rip)        # 26370 <_ZNSt9exceptionD2Ev@GLIBCXX_3.4>
    4716:	68 6e 00 00 00       	push   $0x6e
    471b:	e9 00 f9 ff ff       	jmp    4020 <_init+0x20>

0000000000004720 <glfwWindowShouldClose@plt>:
    4720:	ff 25 52 1c 02 00    	jmp    *0x21c52(%rip)        # 26378 <glfwWindowShouldClose@Base>
    4726:	68 6f 00 00 00       	push   $0x6f
    472b:	e9 f0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004730 <_ZNSolsEd@plt>:
    4730:	ff 25 4a 1c 02 00    	jmp    *0x21c4a(%rip)        # 26380 <_ZNSolsEd@GLIBCXX_3.4>
    4736:	68 70 00 00 00       	push   $0x70
    473b:	e9 e0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004740 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>:
    4740:	ff 25 42 1c 02 00    	jmp    *0x21c42(%rip)        # 26388 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@GLIBCXX_3.4.21>
    4746:	68 71 00 00 00       	push   $0x71
    474b:	e9 d0 f8 ff ff       	jmp    4020 <_init+0x20>

0000000000004750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>:
    4750:	ff 25 3a 1c 02 00    	jmp    *0x21c3a(%rip)        # 26390 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@GLIBCXX_3.4.21>
    4756:	68 72 00 00 00       	push   $0x72
    475b:	e9 c0 f8 ff ff       	jmp    4020 <_init+0x20>

Disassembly of section .plt.got:

0000000000004760 <__cxa_finalize@plt>:
    4760:	ff 25 2a 18 02 00    	jmp    *0x2182a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4766:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000004770 <_start>:
    4770:	31 ed                	xor    %ebp,%ebp
    4772:	49 89 d1             	mov    %rdx,%r9
    4775:	5e                   	pop    %rsi
    4776:	48 89 e2             	mov    %rsp,%rdx
    4779:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    477d:	50                   	push   %rax
    477e:	54                   	push   %rsp
    477f:	45 31 c0             	xor    %r8d,%r8d
    4782:	31 c9                	xor    %ecx,%ecx
    4784:	48 8d 3d a9 01 00 00 	lea    0x1a9(%rip),%rdi        # 4934 <main>
    478b:	ff 15 0f 18 02 00    	call   *0x2180f(%rip)        # 25fa0 <__libc_start_main@GLIBC_2.34>
    4791:	f4                   	hlt
    4792:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4799:	00 00 00 
    479c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000047a0 <deregister_tm_clones>:
    47a0:	48 8d 3d 11 1c 02 00 	lea    0x21c11(%rip),%rdi        # 263b8 <__TMC_END__>
    47a7:	48 8d 05 0a 1c 02 00 	lea    0x21c0a(%rip),%rax        # 263b8 <__TMC_END__>
    47ae:	48 39 f8             	cmp    %rdi,%rax
    47b1:	74 15                	je     47c8 <deregister_tm_clones+0x28>
    47b3:	48 8b 05 f6 17 02 00 	mov    0x217f6(%rip),%rax        # 25fb0 <_ITM_deregisterTMCloneTable@Base>
    47ba:	48 85 c0             	test   %rax,%rax
    47bd:	74 09                	je     47c8 <deregister_tm_clones+0x28>
    47bf:	ff e0                	jmp    *%rax
    47c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    47c8:	c3                   	ret
    47c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000047d0 <register_tm_clones>:
    47d0:	48 8d 3d e1 1b 02 00 	lea    0x21be1(%rip),%rdi        # 263b8 <__TMC_END__>
    47d7:	48 8d 35 da 1b 02 00 	lea    0x21bda(%rip),%rsi        # 263b8 <__TMC_END__>
    47de:	48 29 fe             	sub    %rdi,%rsi
    47e1:	48 89 f0             	mov    %rsi,%rax
    47e4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    47e8:	48 c1 f8 03          	sar    $0x3,%rax
    47ec:	48 01 c6             	add    %rax,%rsi
    47ef:	48 d1 fe             	sar    %rsi
    47f2:	74 14                	je     4808 <register_tm_clones+0x38>
    47f4:	48 8b 05 c5 17 02 00 	mov    0x217c5(%rip),%rax        # 25fc0 <_ITM_registerTMCloneTable@Base>
    47fb:	48 85 c0             	test   %rax,%rax
    47fe:	74 08                	je     4808 <register_tm_clones+0x38>
    4800:	ff e0                	jmp    *%rax
    4802:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4808:	c3                   	ret
    4809:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004810 <__do_global_dtors_aux>:
    4810:	f3 0f 1e fa          	endbr64
    4814:	80 3d d5 1d 02 00 00 	cmpb   $0x0,0x21dd5(%rip)        # 265f0 <completed.0>
    481b:	75 2b                	jne    4848 <__do_global_dtors_aux+0x38>
    481d:	55                   	push   %rbp
    481e:	48 83 3d 6a 17 02 00 	cmpq   $0x0,0x2176a(%rip)        # 25f90 <__cxa_finalize@GLIBC_2.2.5>
    4825:	00 
    4826:	48 89 e5             	mov    %rsp,%rbp
    4829:	74 0c                	je     4837 <__do_global_dtors_aux+0x27>
    482b:	48 8b 3d 6e 1b 02 00 	mov    0x21b6e(%rip),%rdi        # 263a0 <__dso_handle>
    4832:	e8 29 ff ff ff       	call   4760 <__cxa_finalize@plt>
    4837:	e8 64 ff ff ff       	call   47a0 <deregister_tm_clones>
    483c:	c6 05 ad 1d 02 00 01 	movb   $0x1,0x21dad(%rip)        # 265f0 <completed.0>
    4843:	5d                   	pop    %rbp
    4844:	c3                   	ret
    4845:	0f 1f 00             	nopl   (%rax)
    4848:	c3                   	ret
    4849:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004850 <frame_dummy>:
    4850:	f3 0f 1e fa          	endbr64
    4854:	e9 77 ff ff ff       	jmp    47d0 <register_tm_clones>

0000000000004859 <_Z14protected_mainv>:
#include <vulkan_app.hpp>

#include <iostream>
#include <typeinfo>

int protected_main() {
    4859:	55                   	push   %rbp
    485a:	48 89 e5             	mov    %rsp,%rbp
    485d:	53                   	push   %rbx
    485e:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
  VulkanApp app;
    4865:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    486c:	48 89 c7             	mov    %rax,%rdi
    486f:	e8 76 a3 00 00       	call   ebea <_ZN9VulkanAppC1Ev>
  app.run();
    4874:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    487b:	48 89 c7             	mov    %rax,%rdi
    487e:	e8 e1 a7 00 00       	call   f064 <_ZN9VulkanApp3runEv>
  app.writeInfo("info.log");
    4883:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4887:	48 89 c7             	mov    %rax,%rdi
    488a:	e8 51 fe ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    488f:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4893:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    4897:	48 8d 0d 46 1d 01 00 	lea    0x11d46(%rip),%rcx        # 165e4 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    489e:	48 89 ce             	mov    %rcx,%rsi
    48a1:	48 89 c7             	mov    %rax,%rdi
    48a4:	e8 77 02 00 00       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    48a9:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    48ad:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48b4:	48 89 d6             	mov    %rdx,%rsi
    48b7:	48 89 c7             	mov    %rax,%rdi
    48ba:	e8 e9 a8 00 00       	call   f1a8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    48bf:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48c3:	48 89 c7             	mov    %rax,%rdi
    48c6:	e8 15 f9 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48cb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    48cf:	48 89 c7             	mov    %rax,%rdi
    48d2:	e8 49 fb ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  return EXIT_SUCCESS;
    48d7:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    48dc:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    48e3:	48 89 c7             	mov    %rax,%rdi
    48e6:	e8 67 a5 00 00       	call   ee52 <_ZN9VulkanAppD1Ev>
  return EXIT_SUCCESS;
    48eb:	89 d8                	mov    %ebx,%eax
    48ed:	eb 3f                	jmp    492e <_Z14protected_mainv+0xd5>
  app.writeInfo("info.log");
    48ef:	48 89 c3             	mov    %rax,%rbx
    48f2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    48f6:	48 89 c7             	mov    %rax,%rdi
    48f9:	e8 e2 f8 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    48fe:	eb 03                	jmp    4903 <_Z14protected_mainv+0xaa>
    4900:	48 89 c3             	mov    %rax,%rbx
    4903:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4907:	48 89 c7             	mov    %rax,%rdi
    490a:	e8 11 fb ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    490f:	eb 03                	jmp    4914 <_Z14protected_mainv+0xbb>
}
    4911:	48 89 c3             	mov    %rax,%rbx
    4914:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    491b:	48 89 c7             	mov    %rax,%rdi
    491e:	e8 2f a5 00 00       	call   ee52 <_ZN9VulkanAppD1Ev>
    4923:	48 89 d8             	mov    %rbx,%rax
    4926:	48 89 c7             	mov    %rax,%rdi
    4929:	e8 a2 fd ff ff       	call   46d0 <_Unwind_Resume@plt>
    492e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4932:	c9                   	leave
    4933:	c3                   	ret

0000000000004934 <main>:

int main() {
    4934:	55                   	push   %rbp
    4935:	48 89 e5             	mov    %rsp,%rbp
    4938:	53                   	push   %rbx
    4939:	48 83 ec 18          	sub    $0x18,%rsp
  try {
    return protected_main();
    493d:	e8 17 ff ff ff       	call   4859 <_Z14protected_mainv>
    4942:	e9 aa 00 00 00       	jmp    49f1 <main+0xbd>
  } catch (const std::exception &e) {
    std::cerr << e.what() << '\n';
  } catch (...) {
    std::cerr << "Uncaught exception.\n";
  }
  return EXIT_FAILURE;
    4947:	b8 01 00 00 00       	mov    $0x1,%eax
    494c:	e9 a0 00 00 00       	jmp    49f1 <main+0xbd>
  } catch (const std::exception &e) {
    4951:	48 83 fa 01          	cmp    $0x1,%rdx
    4955:	75 49                	jne    49a0 <main+0x6c>
    4957:	48 89 c7             	mov    %rax,%rdi
    495a:	e8 c1 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    495f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    std::cerr << e.what() << '\n';
    4963:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4967:	48 8b 00             	mov    (%rax),%rax
    496a:	48 83 c0 10          	add    $0x10,%rax
    496e:	48 8b 10             	mov    (%rax),%rdx
    4971:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4975:	48 89 c7             	mov    %rax,%rdi
    4978:	ff d2                	call   *%rdx
    497a:	48 89 c6             	mov    %rax,%rsi
    497d:	48 8d 05 5c 1b 02 00 	lea    0x21b5c(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    4984:	48 89 c7             	mov    %rax,%rdi
    4987:	e8 e4 f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    498c:	be 0a 00 00 00       	mov    $0xa,%esi
    4991:	48 89 c7             	mov    %rax,%rdi
    4994:	e8 e7 fa ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  } catch (...) {
    4999:	e8 c2 fc ff ff       	call   4660 <__cxa_end_catch@plt>
    499e:	eb a7                	jmp    4947 <main+0x13>
    49a0:	48 89 c7             	mov    %rax,%rdi
    49a3:	e8 78 f7 ff ff       	call   4120 <__cxa_begin_catch@plt>
    std::cerr << "Uncaught exception.\n";
    49a8:	48 8d 05 3e 1c 01 00 	lea    0x11c3e(%rip),%rax        # 165ed <_ZN6__pstl9execution2v1L5unseqE+0xa>
    49af:	48 89 c6             	mov    %rax,%rsi
    49b2:	48 8d 05 27 1b 02 00 	lea    0x21b27(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    49b9:	48 89 c7             	mov    %rax,%rdi
    49bc:	e8 af f9 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  }
    49c1:	e8 9a fc ff ff       	call   4660 <__cxa_end_catch@plt>
    49c6:	e9 7c ff ff ff       	jmp    4947 <main+0x13>
  } catch (...) {
    49cb:	48 89 c3             	mov    %rax,%rbx
    49ce:	e8 8d fc ff ff       	call   4660 <__cxa_end_catch@plt>
    49d3:	48 89 d8             	mov    %rbx,%rax
    49d6:	48 89 c7             	mov    %rax,%rdi
    49d9:	e8 f2 fc ff ff       	call   46d0 <_Unwind_Resume@plt>
  }
    49de:	48 89 c3             	mov    %rax,%rbx
    49e1:	e8 7a fc ff ff       	call   4660 <__cxa_end_catch@plt>
    49e6:	48 89 d8             	mov    %rbx,%rax
    49e9:	48 89 c7             	mov    %rax,%rdi
    49ec:	e8 df fc ff ff       	call   46d0 <_Unwind_Resume@plt>
    49f1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    49f5:	c9                   	leave
    49f6:	c3                   	ret

00000000000049f7 <_Z41__static_initialization_and_destruction_0ii>:
    49f7:	55                   	push   %rbp
    49f8:	48 89 e5             	mov    %rsp,%rbp
    49fb:	48 83 ec 10          	sub    $0x10,%rsp
    49ff:	89 7d fc             	mov    %edi,-0x4(%rbp)
    4a02:	89 75 f8             	mov    %esi,-0x8(%rbp)
    4a05:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    4a09:	75 3b                	jne    4a46 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    4a0b:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    4a12:	75 32                	jne    4a46 <_Z41__static_initialization_and_destruction_0ii+0x4f>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  ///@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
    4a14:	48 8d 05 d6 1b 02 00 	lea    0x21bd6(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    4a1b:	48 89 c7             	mov    %rax,%rdi
    4a1e:	e8 bd fb ff ff       	call   45e0 <_ZNSt8ios_base4InitC1Ev@plt>
    4a23:	48 8d 05 76 19 02 00 	lea    0x21976(%rip),%rax        # 263a0 <__dso_handle>
    4a2a:	48 89 c2             	mov    %rax,%rdx
    4a2d:	48 8d 05 bd 1b 02 00 	lea    0x21bbd(%rip),%rax        # 265f1 <_ZStL8__ioinit>
    4a34:	48 89 c6             	mov    %rax,%rsi
    4a37:	48 8b 05 8a 15 02 00 	mov    0x2158a(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    4a3e:	48 89 c7             	mov    %rax,%rdi
    4a41:	e8 ba f8 ff ff       	call   4300 <__cxa_atexit@plt>
    4a46:	90                   	nop
    4a47:	c9                   	leave
    4a48:	c3                   	ret

0000000000004a49 <_GLOBAL__sub_I__Z14protected_mainv>:
    4a49:	55                   	push   %rbp
    4a4a:	48 89 e5             	mov    %rsp,%rbp
    4a4d:	be ff ff 00 00       	mov    $0xffff,%esi
    4a52:	bf 01 00 00 00       	mov    $0x1,%edi
    4a57:	e8 9b ff ff ff       	call   49f7 <_Z41__static_initialization_and_destruction_0ii>
    4a5c:	5d                   	pop    %rbp
    4a5d:	c3                   	ret

0000000000004a5e <_ZSt23__is_constant_evaluatedv>:
  // This can be used without checking if the compiler supports the feature.
  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
  // the compiler support is present to make this function work as expected.
  _GLIBCXX_CONSTEXPR inline bool
  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
  {
    4a5e:	55                   	push   %rbp
    4a5f:	48 89 e5             	mov    %rsp,%rbp
#if __cpp_if_consteval >= 202106L
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    if consteval { return true; } else { return false; }
#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    return __builtin_is_constant_evaluated();
    4a62:	b8 00 00 00 00       	mov    $0x0,%eax
#else
    return false;
#endif
  }
    4a67:	5d                   	pop    %rbp
    4a68:	c3                   	ret

0000000000004a69 <_ZNSt11char_traitsIcE6lengthEPKc>:
#endif
	return __builtin_memcmp(__s1, __s2, __n);
      }

      static _GLIBCXX17_CONSTEXPR size_t
      length(const char_type* __s)
    4a69:	55                   	push   %rbp
    4a6a:	48 89 e5             	mov    %rsp,%rbp
    4a6d:	48 83 ec 10          	sub    $0x10,%rsp
    4a71:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __cplusplus >= 201703L
	if (std::__is_constant_evaluated())
    4a75:	e8 e4 ff ff ff       	call   4a5e <_ZSt23__is_constant_evaluatedv>
    4a7a:	84 c0                	test   %al,%al
    4a7c:	74 0e                	je     4a8c <_ZNSt11char_traitsIcE6lengthEPKc+0x23>
	  return __gnu_cxx::char_traits<char_type>::length(__s);
    4a7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a82:	48 89 c7             	mov    %rax,%rdi
    4a85:	e8 12 00 00 00       	call   4a9c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>
    4a8a:	eb 0d                	jmp    4a99 <_ZNSt11char_traitsIcE6lengthEPKc+0x30>
#endif
	return __builtin_strlen(__s);
    4a8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4a90:	48 89 c7             	mov    %rax,%rdi
    4a93:	e8 a8 f6 ff ff       	call   4140 <strlen@plt>
    4a98:	90                   	nop
      }
    4a99:	c9                   	leave
    4a9a:	c3                   	ret
    4a9b:	90                   	nop

0000000000004a9c <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc>:
    char_traits<_CharT>::
    4a9c:	55                   	push   %rbp
    4a9d:	48 89 e5             	mov    %rsp,%rbp
    4aa0:	48 83 ec 20          	sub    $0x20,%rsp
    4aa4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      std::size_t __i = 0;
    4aa8:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    4aaf:	00 
      while (!eq(__p[__i], char_type()))
    4ab0:	eb 05                	jmp    4ab7 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x1b>
        ++__i;
    4ab2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
      while (!eq(__p[__i], char_type()))
    4ab7:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
    4abb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4abf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ac3:	48 01 c2             	add    %rax,%rdx
    4ac6:	48 8d 45 f7          	lea    -0x9(%rbp),%rax
    4aca:	48 89 c6             	mov    %rax,%rsi
    4acd:	48 89 d7             	mov    %rdx,%rdi
    4ad0:	e8 0d 00 00 00       	call   4ae2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>
    4ad5:	83 f0 01             	xor    $0x1,%eax
    4ad8:	84 c0                	test   %al,%al
    4ada:	75 d6                	jne    4ab2 <_ZN9__gnu_cxx11char_traitsIcE6lengthEPKc+0x16>
      return __i;
    4adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    4ae0:	c9                   	leave
    4ae1:	c3                   	ret

0000000000004ae2 <_ZN9__gnu_cxx11char_traitsIcE2eqERKcS3_>:
      eq(const char_type& __c1, const char_type& __c2)
    4ae2:	55                   	push   %rbp
    4ae3:	48 89 e5             	mov    %rsp,%rbp
    4ae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4aea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __c1 == __c2; }
    4aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4af2:	0f b6 10             	movzbl (%rax),%edx
    4af5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4af9:	0f b6 00             	movzbl (%rax),%eax
    4afc:	38 c2                	cmp    %al,%dl
    4afe:	0f 94 c0             	sete   %al
    4b01:	5d                   	pop    %rbp
    4b02:	c3                   	ret
    4b03:	90                   	nop

0000000000004b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>:
      basic_string(__sv_wrapper __svw, const _Alloc& __a)
      : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
#endif

      // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
      struct _Alloc_hider : allocator_type // TODO check __is_final
    4b04:	55                   	push   %rbp
    4b05:	48 89 e5             	mov    %rsp,%rbp
    4b08:	48 83 ec 10          	sub    $0x10,%rsp
    4b0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4b10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4b14:	48 89 c7             	mov    %rax,%rdi
    4b17:	e8 44 f5 ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    4b1c:	90                   	nop
    4b1d:	c9                   	leave
    4b1e:	c3                   	ret
    4b1f:	90                   	nop

0000000000004b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>:
      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3076. basic_string CTAD ambiguity
      template<typename = _RequireAllocator<_Alloc>>
#endif
      _GLIBCXX20_CONSTEXPR
      basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
    4b20:	55                   	push   %rbp
    4b21:	48 89 e5             	mov    %rsp,%rbp
    4b24:	53                   	push   %rbx
    4b25:	48 83 ec 38          	sub    $0x38,%rsp
    4b29:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4b2d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4b31:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      : _M_dataplus(_M_local_data(), __a)
    4b35:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
    4b39:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b3d:	48 89 c7             	mov    %rax,%rdi
    4b40:	e8 4b f7 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4b45:	48 89 c1             	mov    %rax,%rcx
    4b48:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4b4c:	48 89 c2             	mov    %rax,%rdx
    4b4f:	48 89 ce             	mov    %rcx,%rsi
    4b52:	48 89 df             	mov    %rbx,%rdi
    4b55:	e8 96 f8 ff ff       	call   43f0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcRKS3_@plt>
      {
	// NB: Not required, but considered best practice.
	if (__s == 0)
    4b5a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
    4b5f:	75 0f                	jne    4b70 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x50>
	  std::__throw_logic_error(__N("basic_string: "
    4b61:	48 8d 05 a0 1a 01 00 	lea    0x11aa0(%rip),%rax        # 16608 <_ZN6__pstl9execution2v1L5unseqE+0x25>
    4b68:	48 89 c7             	mov    %rax,%rdi
    4b6b:	e8 c0 f6 ff ff       	call   4230 <_ZSt19__throw_logic_errorPKc@plt>
				       "construction from null is not valid"));
	const _CharT* __end = __s + traits_type::length(__s);
    4b70:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4b74:	48 89 c7             	mov    %rax,%rdi
    4b77:	e8 ed fe ff ff       	call   4a69 <_ZNSt11char_traitsIcE6lengthEPKc>
    4b7c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    4b80:	48 01 d0             	add    %rdx,%rax
    4b83:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	_M_construct(__s, __end, forward_iterator_tag());
    4b87:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    4b8b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    4b8f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4b93:	48 89 ce             	mov    %rcx,%rsi
    4b96:	48 89 c7             	mov    %rax,%rdi
    4b99:	e8 66 00 00 00       	call   4c04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
      }
    4b9e:	eb 1a                	jmp    4bba <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_+0x9a>
    4ba0:	48 89 c3             	mov    %rax,%rbx
    4ba3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ba7:	48 89 c7             	mov    %rax,%rdi
    4baa:	e8 55 ff ff ff       	call   4b04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD1Ev>
    4baf:	48 89 d8             	mov    %rbx,%rax
    4bb2:	48 89 c7             	mov    %rax,%rdi
    4bb5:	e8 16 fb ff ff       	call   46d0 <_Unwind_Resume@plt>
    4bba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4bbe:	c9                   	leave
    4bbf:	c3                   	ret

0000000000004bc0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>:

	// Check for out_of_range and length_error exceptions.
	struct _Guard
	{
	  _GLIBCXX20_CONSTEXPR
	  explicit _Guard(basic_string* __s) : _M_guarded(__s) { }
    4bc0:	55                   	push   %rbp
    4bc1:	48 89 e5             	mov    %rsp,%rbp
    4bc4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4bc8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bd0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4bd4:	48 89 10             	mov    %rdx,(%rax)
    4bd7:	90                   	nop
    4bd8:	5d                   	pop    %rbp
    4bd9:	c3                   	ret

0000000000004bda <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>:

	  _GLIBCXX20_CONSTEXPR
	  ~_Guard() { if (_M_guarded) _M_guarded->_M_dispose(); }
    4bda:	55                   	push   %rbp
    4bdb:	48 89 e5             	mov    %rsp,%rbp
    4bde:	48 83 ec 10          	sub    $0x10,%rsp
    4be2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4be6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bea:	48 8b 00             	mov    (%rax),%rax
    4bed:	48 85 c0             	test   %rax,%rax
    4bf0:	74 0f                	je     4c01 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev+0x27>
    4bf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4bf6:	48 8b 00             	mov    (%rax),%rax
    4bf9:	48 89 c7             	mov    %rax,%rdi
    4bfc:	e8 cf f8 ff ff       	call   44d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv@plt>
    4c01:	90                   	nop
    4c02:	c9                   	leave
    4c03:	c3                   	ret

0000000000004c04 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
      basic_string<_CharT, _Traits, _Alloc>::
    4c04:	55                   	push   %rbp
    4c05:	48 89 e5             	mov    %rsp,%rbp
    4c08:	48 83 ec 40          	sub    $0x40,%rsp
    4c0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4c10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4c14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
    4c18:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4c1c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4c20:	48 89 d6             	mov    %rdx,%rsi
    4c23:	48 89 c7             	mov    %rax,%rdi
    4c26:	e8 c0 00 00 00       	call   4ceb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>
    4c2b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	if (__dnew > size_type(_S_local_capacity))
    4c2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4c33:	48 83 f8 0f          	cmp    $0xf,%rax
    4c37:	76 3f                	jbe    4c78 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>
	    _M_data(_M_create(__dnew, size_type(0)));
    4c39:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx
    4c3d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c41:	ba 00 00 00 00       	mov    $0x0,%edx
    4c46:	48 89 ce             	mov    %rcx,%rsi
    4c49:	48 89 c7             	mov    %rax,%rdi
    4c4c:	e8 af fa ff ff       	call   4700 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@plt>
    4c51:	48 89 c2             	mov    %rax,%rdx
    4c54:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c58:	48 89 d6             	mov    %rdx,%rsi
    4c5b:	48 89 c7             	mov    %rax,%rdi
    4c5e:	e8 6d f6 ff ff       	call   42d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc@plt>
	    _M_capacity(__dnew);
    4c63:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c6b:	48 89 d6             	mov    %rdx,%rsi
    4c6e:	48 89 c7             	mov    %rax,%rdi
    4c71:	e8 da fa ff ff       	call   4750 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm@plt>
    4c76:	eb 15                	jmp    4c8d <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x89>
    4c78:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4c7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	return _M_local_data();
    4c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4c84:	48 89 c7             	mov    %rax,%rdi
    4c87:	e8 04 f6 ff ff       	call   4290 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv@plt>
    4c8c:	90                   	nop

	  basic_string* _M_guarded;
	} __guard(this);
    4c8d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4c91:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4c95:	48 89 d6             	mov    %rdx,%rsi
    4c98:	48 89 c7             	mov    %rax,%rdi
    4c9b:	e8 20 ff ff ff       	call   4bc0 <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardC1EPS4_>

	this->_S_copy_chars(_M_data(), __beg, __end);
    4ca0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ca4:	48 89 c7             	mov    %rax,%rdi
    4ca7:	e8 94 f7 ff ff       	call   4440 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv@plt>
    4cac:	48 89 c1             	mov    %rax,%rcx
    4caf:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    4cb3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4cb7:	48 89 c6             	mov    %rax,%rsi
    4cba:	48 89 cf             	mov    %rcx,%rdi
    4cbd:	e8 8e f7 ff ff       	call   4450 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_@plt>

	__guard._M_guarded = 0;
    4cc2:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    4cc9:	00 

	_M_set_length(__dnew);
    4cca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4cce:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4cd2:	48 89 d6             	mov    %rdx,%rsi
    4cd5:	48 89 c7             	mov    %rax,%rdi
    4cd8:	e8 23 f5 ff ff       	call   4200 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm@plt>
      }
    4cdd:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    4ce1:	48 89 c7             	mov    %rax,%rdi
    4ce4:	e8 f1 fe ff ff       	call   4bda <_ZZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tagEN6_GuardD1Ev>
    4ce9:	c9                   	leave
    4cea:	c3                   	ret

0000000000004ceb <_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_>:
  */
  template<typename _InputIterator>
    _GLIBCXX_NODISCARD
    inline _GLIBCXX17_CONSTEXPR
    typename iterator_traits<_InputIterator>::difference_type
    distance(_InputIterator __first, _InputIterator __last)
    4ceb:	55                   	push   %rbp
    4cec:	48 89 e5             	mov    %rsp,%rbp
    4cef:	48 83 ec 10          	sub    $0x10,%rsp
    4cf3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4cf7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    {
      // concept requirements -- taken care of in __distance
      return std::__distance(__first, __last,
			     std::__iterator_category(__first));
    4cfb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    4cff:	48 89 c7             	mov    %rax,%rdi
    4d02:	e8 15 00 00 00       	call   4d1c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__distance(__first, __last,
    4d07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4d0b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    4d0f:	48 89 d6             	mov    %rdx,%rsi
    4d12:	48 89 c7             	mov    %rax,%rdi
    4d15:	e8 0d 00 00 00       	call   4d27 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>
    }
    4d1a:	c9                   	leave
    4d1b:	c3                   	ret

0000000000004d1c <_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
   *  sugar for internal library use only.
  */
  template<typename _Iter>
    inline _GLIBCXX_CONSTEXPR
    typename iterator_traits<_Iter>::iterator_category
    __iterator_category(const _Iter&)
    4d1c:	55                   	push   %rbp
    4d1d:	48 89 e5             	mov    %rsp,%rbp
    4d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    4d24:	90                   	nop
    4d25:	5d                   	pop    %rbp
    4d26:	c3                   	ret

0000000000004d27 <_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
    4d27:	55                   	push   %rbp
    4d28:	48 89 e5             	mov    %rsp,%rbp
    4d2b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4d2f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
    4d33:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4d37:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
    }
    4d3b:	5d                   	pop    %rbp
    4d3c:	c3                   	ret

0000000000004d3d <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo>:

namespace vkh {

std::vector<VkCommandBuffer>
allocateCommandBuffers(VkDevice device,
                       const VkCommandBufferAllocateInfo *pAllocateInfo) {
    4d3d:	55                   	push   %rbp
    4d3e:	48 89 e5             	mov    %rsp,%rbp
    4d41:	41 54                	push   %r12
    4d43:	53                   	push   %rbx
    4d44:	48 83 ec 30          	sub    $0x30,%rsp
    4d48:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    4d4c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    4d50:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  std::vector<VkCommandBuffer> commandBuffers{
      pAllocateInfo->commandBufferCount};
    4d54:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    4d58:	8b 40 1c             	mov    0x1c(%rax),%eax
    4d5b:	89 c3                	mov    %eax,%ebx
    4d5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d61:	48 89 c7             	mov    %rax,%rdi
    4d64:	e8 13 01 00 00       	call   4e7c <_ZNSaIP17VkCommandBuffer_TEC1Ev>
    4d69:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    4d6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d71:	48 89 de             	mov    %rbx,%rsi
    4d74:	48 89 c7             	mov    %rax,%rdi
    4d77:	e8 38 01 00 00       	call   4eb4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
    4d7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4d80:	48 89 c7             	mov    %rax,%rdi
    4d83:	e8 10 01 00 00       	call   4e98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
  /* If the allocation of any of those command buffers fails, the implementation
  must free all successfully allocated command buffer objects from this
  command, set all entries of the pCommandBuffers array to NULL and return
  the error. */
  if (vkAllocateCommandBuffers(device, pAllocateInfo, commandBuffers.data()) !=
    4d88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4d8c:	48 89 c7             	mov    %rax,%rdi
    4d8f:	e8 da 01 00 00       	call   4f6e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>
    4d94:	48 89 c2             	mov    %rax,%rdx
    4d97:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    4d9b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    4d9f:	48 89 ce             	mov    %rcx,%rsi
    4da2:	48 89 c7             	mov    %rax,%rdi
    4da5:	e8 76 f5 ff ff       	call   4320 <vkAllocateCommandBuffers@plt>
    4daa:	85 c0                	test   %eax,%eax
    4dac:	0f 95 c0             	setne  %al
    4daf:	84 c0                	test   %al,%al
    4db1:	74 7f                	je     4e32 <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xf5>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to allocate command buffers.");
    4db3:	bf 10 00 00 00       	mov    $0x10,%edi
    4db8:	e8 b3 f3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    4dbd:	48 89 c3             	mov    %rax,%rbx
    4dc0:	48 8d 05 51 1e 01 00 	lea    0x11e51(%rip),%rax        # 16c18 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    4dc7:	48 89 c6             	mov    %rax,%rsi
    4dca:	48 89 df             	mov    %rbx,%rdi
    4dcd:	e8 2e f3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    4dd2:	48 8b 05 cf 11 02 00 	mov    0x211cf(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    4dd9:	48 89 c2             	mov    %rax,%rdx
    4ddc:	48 8d 05 5d 0f 02 00 	lea    0x20f5d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    4de3:	48 89 c6             	mov    %rax,%rsi
    4de6:	48 89 df             	mov    %rbx,%rdi
    4de9:	e8 82 f8 ff ff       	call   4670 <__cxa_throw@plt>
      pAllocateInfo->commandBufferCount};
    4dee:	48 89 c3             	mov    %rax,%rbx
    4df1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    4df5:	48 89 c7             	mov    %rax,%rdi
    4df8:	e8 9b 00 00 00       	call   4e98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4dfd:	48 89 d8             	mov    %rbx,%rax
    4e00:	48 89 c7             	mov    %rax,%rdi
    4e03:	e8 c8 f8 ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to allocate command buffers.");
    4e08:	49 89 c4             	mov    %rax,%r12
    4e0b:	48 89 df             	mov    %rbx,%rdi
    4e0e:	e8 2d f4 ff ff       	call   4240 <__cxa_free_exception@plt>
    4e13:	4c 89 e3             	mov    %r12,%rbx
    4e16:	eb 03                	jmp    4e1b <_ZN3vkh22allocateCommandBuffersEP10VkDevice_TPK27VkCommandBufferAllocateInfo+0xde>
  }
  return commandBuffers;
}
    4e18:	48 89 c3             	mov    %rax,%rbx
    4e1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e1f:	48 89 c7             	mov    %rax,%rdi
    4e22:	e8 03 01 00 00       	call   4f2a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4e27:	48 89 d8             	mov    %rbx,%rax
    4e2a:	48 89 c7             	mov    %rax,%rdi
    4e2d:	e8 9e f8 ff ff       	call   46d0 <_Unwind_Resume@plt>
  return commandBuffers;
    4e32:	90                   	nop
}
    4e33:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4e37:	48 83 c4 30          	add    $0x30,%rsp
    4e3b:	5b                   	pop    %rbx
    4e3c:	41 5c                	pop    %r12
    4e3e:	5d                   	pop    %rbp
    4e3f:	c3                   	ret

0000000000004e40 <_ZnwmPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
    4e40:	55                   	push   %rbp
    4e41:	48 89 e5             	mov    %rsp,%rbp
    4e44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    4e4c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    4e50:	5d                   	pop    %rbp
    4e51:	c3                   	ret

0000000000004e52 <_ZSt17__size_to_integerm>:
  inline _GLIBCXX_CONSTEXPR unsigned
  __size_to_integer(unsigned __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR long
  __size_to_integer(long __n) { return __n; }
  inline _GLIBCXX_CONSTEXPR unsigned long
  __size_to_integer(unsigned long __n) { return __n; }
    4e52:	55                   	push   %rbp
    4e53:	48 89 e5             	mov    %rsp,%rbp
    4e56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e5e:	5d                   	pop    %rbp
    4e5f:	c3                   	ret

0000000000004e60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>:
	  _M_copy_data(__x);
	  __x._M_copy_data(__tmp);
	}
      };

      struct _Vector_impl
    4e60:	55                   	push   %rbp
    4e61:	48 89 e5             	mov    %rsp,%rbp
    4e64:	48 83 ec 10          	sub    $0x10,%rsp
    4e68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e6c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e70:	48 89 c7             	mov    %rax,%rdi
    4e73:	e8 20 00 00 00       	call   4e98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    4e78:	90                   	nop
    4e79:	c9                   	leave
    4e7a:	c3                   	ret
    4e7b:	90                   	nop

0000000000004e7c <_ZNSaIP17VkCommandBuffer_TEC1Ev>:
#endif

      // _GLIBCXX_RESOLVE_LIB_DEFECTS
      // 3035. std::allocator's constructors should be constexpr
      _GLIBCXX20_CONSTEXPR
      allocator() _GLIBCXX_NOTHROW { }
    4e7c:	55                   	push   %rbp
    4e7d:	48 89 e5             	mov    %rsp,%rbp
    4e80:	48 83 ec 10          	sub    $0x10,%rsp
    4e84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4e88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4e8c:	48 89 c7             	mov    %rax,%rdi
    4e8f:	e8 4c 01 00 00       	call   4fe0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>
    4e94:	90                   	nop
    4e95:	c9                   	leave
    4e96:	c3                   	ret
    4e97:	90                   	nop

0000000000004e98 <_ZNSaIP17VkCommandBuffer_TED1Ev>:
	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }

#if __cpp_constexpr_dynamic_alloc
      constexpr
#endif
      ~allocator() _GLIBCXX_NOTHROW { }
    4e98:	55                   	push   %rbp
    4e99:	48 89 e5             	mov    %rsp,%rbp
    4e9c:	48 83 ec 10          	sub    $0x10,%rsp
    4ea0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ea4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4ea8:	48 89 c7             	mov    %rax,%rdi
    4eab:	e8 3c 01 00 00       	call   4fec <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>
    4eb0:	90                   	nop
    4eb1:	c9                   	leave
    4eb2:	c3                   	ret
    4eb3:	90                   	nop

0000000000004eb4 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
       *  This constructor fills the %vector with @a __n default
       *  constructed elements.
       */
      explicit
      _GLIBCXX20_CONSTEXPR
      vector(size_type __n, const allocator_type& __a = allocator_type())
    4eb4:	55                   	push   %rbp
    4eb5:	48 89 e5             	mov    %rsp,%rbp
    4eb8:	53                   	push   %rbx
    4eb9:	48 83 ec 28          	sub    $0x28,%rsp
    4ebd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    4ec1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    4ec5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    4ec9:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    4ecd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    4ed1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    4ed5:	48 89 d6             	mov    %rdx,%rsi
    4ed8:	48 89 c7             	mov    %rax,%rdi
    4edb:	e8 17 01 00 00       	call   4ff7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    4ee0:	48 89 c1             	mov    %rax,%rcx
    4ee3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    4ee7:	48 89 c2             	mov    %rax,%rdx
    4eea:	48 89 ce             	mov    %rcx,%rsi
    4eed:	48 89 df             	mov    %rbx,%rdi
    4ef0:	e8 63 01 00 00       	call   5058 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    4ef5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    4ef9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4efd:	48 89 d6             	mov    %rdx,%rsi
    4f00:	48 89 c7             	mov    %rax,%rdi
    4f03:	e8 ae 01 00 00       	call   50b6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>
    4f08:	eb 1a                	jmp    4f24 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x70>
    4f0a:	48 89 c3             	mov    %rax,%rbx
    4f0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    4f11:	48 89 c7             	mov    %rax,%rdi
    4f14:	e8 79 00 00 00       	call   4f92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f19:	48 89 d8             	mov    %rbx,%rax
    4f1c:	48 89 c7             	mov    %rax,%rdi
    4f1f:	e8 ac f7 ff ff       	call   46d0 <_Unwind_Resume@plt>
    4f24:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    4f28:	c9                   	leave
    4f29:	c3                   	ret

0000000000004f2a <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EED1Ev>:
       *  elements themselves are pointers, the pointed-to memory is
       *  not touched in any way.  Managing the pointer is the user's
       *  responsibility.
       */
      _GLIBCXX20_CONSTEXPR
      ~vector() _GLIBCXX_NOEXCEPT
    4f2a:	55                   	push   %rbp
    4f2b:	48 89 e5             	mov    %rsp,%rbp
    4f2e:	48 83 ec 10          	sub    $0x10,%rsp
    4f32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
		      _M_get_Tp_allocator());
    4f36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f3a:	48 89 c7             	mov    %rax,%rdi
    4f3d:	e8 b4 01 00 00       	call   50f6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    4f42:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    4f45:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f49:	48 8b 48 08          	mov    0x8(%rax),%rcx
    4f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f51:	48 8b 00             	mov    (%rax),%rax
    4f54:	48 89 ce             	mov    %rcx,%rsi
    4f57:	48 89 c7             	mov    %rax,%rdi
    4f5a:	e8 a5 01 00 00       	call   5104 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>
	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
      }
    4f5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f63:	48 89 c7             	mov    %rax,%rdi
    4f66:	e8 27 00 00 00       	call   4f92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>
    4f6b:	90                   	nop
    4f6c:	c9                   	leave
    4f6d:	c3                   	ret

0000000000004f6e <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE4dataEv>:
       *   Returns a pointer such that [data(), data() + size()) is a valid
       *   range.  For a non-empty %vector, data() == &front().
       */
      _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
      _Tp*
      data() _GLIBCXX_NOEXCEPT
    4f6e:	55                   	push   %rbp
    4f6f:	48 89 e5             	mov    %rsp,%rbp
    4f72:	48 83 ec 10          	sub    $0x10,%rsp
    4f76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    4f7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f7e:	48 8b 10             	mov    (%rax),%rdx
    4f81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4f85:	48 89 d6             	mov    %rdx,%rsi
    4f88:	48 89 c7             	mov    %rax,%rdi
    4f8b:	e8 9e 01 00 00       	call   512e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    4f90:	c9                   	leave
    4f91:	c3                   	ret

0000000000004f92 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    4f92:	55                   	push   %rbp
    4f93:	48 89 e5             	mov    %rsp,%rbp
    4f96:	48 83 ec 10          	sub    $0x10,%rsp
    4f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    4f9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fa2:	48 8b 50 10          	mov    0x10(%rax),%rdx
    4fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4faa:	48 8b 00             	mov    (%rax),%rax
    4fad:	48 29 c2             	sub    %rax,%rdx
    4fb0:	48 89 d0             	mov    %rdx,%rax
    4fb3:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    4fb7:	48 89 c2             	mov    %rax,%rdx
    4fba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fbe:	48 8b 08             	mov    (%rax),%rcx
    4fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fc5:	48 89 ce             	mov    %rcx,%rsi
    4fc8:	48 89 c7             	mov    %rax,%rdi
    4fcb:	e8 96 01 00 00       	call   5166 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    4fd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    4fd4:	48 89 c7             	mov    %rax,%rdi
    4fd7:	e8 84 fe ff ff       	call   4e60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    4fdc:	90                   	nop
    4fdd:	c9                   	leave
    4fde:	c3                   	ret
    4fdf:	90                   	nop

0000000000004fe0 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1Ev>:
      // 2103. propagate_on_container_move_assignment
      typedef std::true_type propagate_on_container_move_assignment;
#endif

      _GLIBCXX20_CONSTEXPR
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fe0:	55                   	push   %rbp
    4fe1:	48 89 e5             	mov    %rsp,%rbp
    4fe4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4fe8:	90                   	nop
    4fe9:	5d                   	pop    %rbp
    4fea:	c3                   	ret
    4feb:	90                   	nop

0000000000004fec <_ZNSt15__new_allocatorIP17VkCommandBuffer_TED1Ev>:
      template<typename _Tp1>
	_GLIBCXX20_CONSTEXPR
	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }

#if __cplusplus <= 201703L
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    4fec:	55                   	push   %rbp
    4fed:	48 89 e5             	mov    %rsp,%rbp
    4ff0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    4ff4:	90                   	nop
    4ff5:	5d                   	pop    %rbp
    4ff6:	c3                   	ret

0000000000004ff7 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
	return (__len < size() || __len > max_size()) ? max_size() : __len;
      }

      // Called by constructors to check initial size.
      static _GLIBCXX20_CONSTEXPR size_type
      _S_check_init_len(size_type __n, const allocator_type& __a)
    4ff7:	55                   	push   %rbp
    4ff8:	48 89 e5             	mov    %rsp,%rbp
    4ffb:	53                   	push   %rbx
    4ffc:	48 83 ec 28          	sub    $0x28,%rsp
    5000:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5004:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
      {
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    5008:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    500c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5010:	48 89 d6             	mov    %rdx,%rsi
    5013:	48 89 c7             	mov    %rax,%rdi
    5016:	e8 25 01 00 00       	call   5140 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    501b:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    501f:	48 89 c7             	mov    %rax,%rdi
    5022:	e8 74 01 00 00       	call   519b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>
    5027:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    502b:	0f 92 c3             	setb   %bl
    502e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    5032:	48 89 c7             	mov    %rax,%rdi
    5035:	e8 5e fe ff ff       	call   4e98 <_ZNSaIP17VkCommandBuffer_TED1Ev>
    503a:	84 db                	test   %bl,%bl
    503c:	74 0f                	je     504d <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    503e:	48 8d 05 fb 1b 01 00 	lea    0x11bfb(%rip),%rax        # 16c40 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    5045:	48 89 c7             	mov    %rax,%rdi
    5048:	e8 33 f1 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	      __N("cannot create std::vector larger than max_size()"));
	return __n;
    504d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    5051:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5055:	c9                   	leave
    5056:	c3                   	ret
    5057:	90                   	nop

0000000000005058 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    5058:	55                   	push   %rbp
    5059:	48 89 e5             	mov    %rsp,%rbp
    505c:	53                   	push   %rbx
    505d:	48 83 ec 28          	sub    $0x28,%rsp
    5061:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5065:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5069:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    506d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5071:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5075:	48 89 d6             	mov    %rdx,%rsi
    5078:	48 89 c7             	mov    %rax,%rdi
    507b:	e8 5e 01 00 00       	call   51de <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    5080:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    5084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5088:	48 89 d6             	mov    %rdx,%rsi
    508b:	48 89 c7             	mov    %rax,%rdi
    508e:	e8 7d 01 00 00       	call   5210 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>
    5093:	eb 1a                	jmp    50af <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EEC1EmRKS2_+0x57>
    5095:	48 89 c3             	mov    %rax,%rbx
    5098:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    509c:	48 89 c7             	mov    %rax,%rdi
    509f:	e8 bc fd ff ff       	call   4e60 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implD1Ev>
    50a4:	48 89 d8             	mov    %rbx,%rax
    50a7:	48 89 c7             	mov    %rax,%rdi
    50aa:	e8 21 f6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    50af:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    50b3:	c9                   	leave
    50b4:	c3                   	ret
    50b5:	90                   	nop

00000000000050b6 <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    50b6:	55                   	push   %rbp
    50b7:	48 89 e5             	mov    %rsp,%rbp
    50ba:	48 83 ec 10          	sub    $0x10,%rsp
    50be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    50c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    50c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50ca:	48 89 c7             	mov    %rax,%rdi
    50cd:	e8 24 00 00 00       	call   50f6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>
    50d2:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    50d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    50d9:	48 8b 00             	mov    (%rax),%rax
    50dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    50e0:	48 89 ce             	mov    %rcx,%rsi
    50e3:	48 89 c7             	mov    %rax,%rdi
    50e6:	e8 7b 01 00 00       	call   5266 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    50eb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    50ef:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    50f3:	90                   	nop
    50f4:	c9                   	leave
    50f5:	c3                   	ret

00000000000050f6 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    50f6:	55                   	push   %rbp
    50f7:	48 89 e5             	mov    %rsp,%rbp
    50fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    50fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5102:	5d                   	pop    %rbp
    5103:	c3                   	ret

0000000000005104 <_ZSt8_DestroyIPP17VkCommandBuffer_TS1_EvT_S3_RSaIT0_E>:
    }

  template<typename _ForwardIterator, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    5104:	55                   	push   %rbp
    5105:	48 89 e5             	mov    %rsp,%rbp
    5108:	48 83 ec 20          	sub    $0x20,%rsp
    510c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5110:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5114:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	     allocator<_Tp>&)
    {
      _Destroy(__first, __last);
    5118:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    511c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5120:	48 89 d6             	mov    %rdx,%rsi
    5123:	48 89 c7             	mov    %rax,%rdi
    5126:	e8 64 01 00 00       	call   528f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>
    }
    512b:	90                   	nop
    512c:	c9                   	leave
    512d:	c3                   	ret

000000000000512e <_ZNKSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
#endif

      template<typename _Up>
	_GLIBCXX20_CONSTEXPR
	_Up*
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    512e:	55                   	push   %rbp
    512f:	48 89 e5             	mov    %rsp,%rbp
    5132:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5136:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    513a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    513e:	5d                   	pop    %rbp
    513f:	c3                   	ret

0000000000005140 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    5140:	55                   	push   %rbp
    5141:	48 89 e5             	mov    %rsp,%rbp
    5144:	48 83 ec 10          	sub    $0x10,%rsp
    5148:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    514c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    5150:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5158:	48 89 d6             	mov    %rdx,%rsi
    515b:	48 89 c7             	mov    %rax,%rdi
    515e:	e8 53 01 00 00       	call   52b6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>
    5163:	90                   	nop
    5164:	c9                   	leave
    5165:	c3                   	ret

0000000000005166 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    5166:	55                   	push   %rbp
    5167:	48 89 e5             	mov    %rsp,%rbp
    516a:	48 83 ec 20          	sub    $0x20,%rsp
    516e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5172:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5176:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    517a:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    517f:	74 17                	je     5198 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    5181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5185:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5189:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    518d:	48 89 ce             	mov    %rcx,%rsi
    5190:	48 89 c7             	mov    %rax,%rdi
    5193:	e8 2d 01 00 00       	call   52c5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>
      }
    5198:	90                   	nop
    5199:	c9                   	leave
    519a:	c3                   	ret

000000000000519b <_ZNSt6vectorIP17VkCommandBuffer_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    519b:	55                   	push   %rbp
    519c:	48 89 e5             	mov    %rsp,%rbp
    519f:	48 83 ec 20          	sub    $0x20,%rsp
    51a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    51a7:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    51ae:	ff ff 0f 
    51b1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    51b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    51b9:	48 89 c7             	mov    %rax,%rdi
    51bc:	e8 32 01 00 00       	call   52f3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>
    51c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    51c5:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    51c9:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    51cd:	48 89 d6             	mov    %rdx,%rsi
    51d0:	48 89 c7             	mov    %rax,%rdi
    51d3:	e8 35 01 00 00       	call   530d <_ZSt3minImERKT_S2_S2_>
    51d8:	48 8b 00             	mov    (%rax),%rax
      }
    51db:	c9                   	leave
    51dc:	c3                   	ret
    51dd:	90                   	nop

00000000000051de <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    51de:	55                   	push   %rbp
    51df:	48 89 e5             	mov    %rsp,%rbp
    51e2:	48 83 ec 10          	sub    $0x10,%rsp
    51e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    51ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    51ee:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    51f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    51f6:	48 89 d6             	mov    %rdx,%rsi
    51f9:	48 89 c7             	mov    %rax,%rdi
    51fc:	e8 3f ff ff ff       	call   5140 <_ZNSaIP17VkCommandBuffer_TEC1ERKS1_>
    5201:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5205:	48 89 c7             	mov    %rax,%rdi
    5208:	e8 2b 01 00 00       	call   5338 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    520d:	90                   	nop
    520e:	c9                   	leave
    520f:	c3                   	ret

0000000000005210 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    5210:	55                   	push   %rbp
    5211:	48 89 e5             	mov    %rsp,%rbp
    5214:	48 83 ec 10          	sub    $0x10,%rsp
    5218:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    521c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    5220:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5228:	48 89 d6             	mov    %rdx,%rsi
    522b:	48 89 c7             	mov    %rax,%rdi
    522e:	e8 33 01 00 00       	call   5366 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>
    5233:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    5237:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    523a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    523e:	48 8b 10             	mov    (%rax),%rdx
    5241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5245:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    5249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    524d:	48 8b 00             	mov    (%rax),%rax
    5250:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5254:	48 c1 e2 03          	shl    $0x3,%rdx
    5258:	48 01 c2             	add    %rax,%rdx
    525b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    525f:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    5263:	90                   	nop
    5264:	c9                   	leave
    5265:	c3                   	ret

0000000000005266 <_ZSt27__uninitialized_default_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RSaIT1_E>:
  // __uninitialized_default_n_a specialization for std::allocator,
  // which ignores the allocator and value-initializes the elements.
  template<typename _ForwardIterator, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    5266:	55                   	push   %rbp
    5267:	48 89 e5             	mov    %rsp,%rbp
    526a:	48 83 ec 20          	sub    $0x20,%rsp
    526e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5272:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5276:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
				allocator<_Tp>&)
    { return std::__uninitialized_default_n(__first, __n); }
    527a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    527e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5282:	48 89 d6             	mov    %rdx,%rsi
    5285:	48 89 c7             	mov    %rax,%rdi
    5288:	e8 0c 01 00 00       	call   5399 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>
    528d:	c9                   	leave
    528e:	c3                   	ret

000000000000528f <_ZSt8_DestroyIPP17VkCommandBuffer_TEvT_S3_>:
   * a trivial destructor, the compiler should optimize all of this
   * away, otherwise the objects' destructors must be invoked.
   */
  template<typename _ForwardIterator>
    _GLIBCXX20_CONSTEXPR inline void
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    528f:	55                   	push   %rbp
    5290:	48 89 e5             	mov    %rsp,%rbp
    5293:	48 83 ec 10          	sub    $0x10,%rsp
    5297:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    529b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
#if __cplusplus >= 202002L
      if (std::__is_constant_evaluated())
	return _Destroy_aux<false>::__destroy(__first, __last);
#endif
      std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
	__destroy(__first, __last);
    529f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    52a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52a7:	48 89 d6             	mov    %rdx,%rsi
    52aa:	48 89 c7             	mov    %rax,%rdi
    52ad:	e8 10 01 00 00       	call   53c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>
    }
    52b2:	90                   	nop
    52b3:	c9                   	leave
    52b4:	c3                   	ret
    52b5:	90                   	nop

00000000000052b6 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    52b6:	55                   	push   %rbp
    52b7:	48 89 e5             	mov    %rsp,%rbp
    52ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52c2:	90                   	nop
    52c3:	5d                   	pop    %rbp
    52c4:	c3                   	ret

00000000000052c5 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    52c5:	55                   	push   %rbp
    52c6:	48 89 e5             	mov    %rsp,%rbp
    52c9:	48 83 ec 20          	sub    $0x20,%rsp
    52cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    52d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    52d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    52d9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    52dd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    52e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    52e5:	48 89 ce             	mov    %rcx,%rsi
    52e8:	48 89 c7             	mov    %rax,%rdi
    52eb:	e8 e2 00 00 00       	call   53d2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>
    52f0:	90                   	nop
    52f1:	c9                   	leave
    52f2:	c3                   	ret

00000000000052f3 <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    52f3:	55                   	push   %rbp
    52f4:	48 89 e5             	mov    %rsp,%rbp
    52f7:	48 83 ec 10          	sub    $0x10,%rsp
    52fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    52ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5303:	48 89 c7             	mov    %rax,%rdi
    5306:	e8 f9 00 00 00       	call   5404 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>
      }
    530b:	c9                   	leave
    530c:	c3                   	ret

000000000000530d <_ZSt3minImERKT_S2_S2_>:
    min(const _Tp& __a, const _Tp& __b)
    530d:	55                   	push   %rbp
    530e:	48 89 e5             	mov    %rsp,%rbp
    5311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5315:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__b < __a)
    5319:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    531d:	48 8b 10             	mov    (%rax),%rdx
    5320:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5324:	48 8b 00             	mov    (%rax),%rax
    5327:	48 39 c2             	cmp    %rax,%rdx
    532a:	73 06                	jae    5332 <_ZSt3minImERKT_S2_S2_+0x25>
	return __b;
    532c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5330:	eb 04                	jmp    5336 <_ZSt3minImERKT_S2_S2_+0x29>
      return __a;
    5332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
    5336:	5d                   	pop    %rbp
    5337:	c3                   	ret

0000000000005338 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    5338:	55                   	push   %rbp
    5339:	48 89 e5             	mov    %rsp,%rbp
    533c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    5340:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5344:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    534b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    534f:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    5356:	00 
    5357:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    535b:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    5362:	00 
	{ }
    5363:	90                   	nop
    5364:	5d                   	pop    %rbp
    5365:	c3                   	ret

0000000000005366 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    5366:	55                   	push   %rbp
    5367:	48 89 e5             	mov    %rsp,%rbp
    536a:	48 83 ec 10          	sub    $0x10,%rsp
    536e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5372:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    5376:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    537b:	74 15                	je     5392 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x2c>
    537d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5381:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    5385:	48 89 d6             	mov    %rdx,%rsi
    5388:	48 89 c7             	mov    %rax,%rdi
    538b:	e8 8e 00 00 00       	call   541e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>
    5390:	eb 05                	jmp    5397 <_ZNSt12_Vector_baseIP17VkCommandBuffer_TSaIS1_EE11_M_allocateEm+0x31>
    5392:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    5397:	c9                   	leave
    5398:	c3                   	ret

0000000000005399 <_ZSt25__uninitialized_default_nIPP17VkCommandBuffer_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    5399:	55                   	push   %rbp
    539a:	48 89 e5             	mov    %rsp,%rbp
    539d:	48 83 ec 20          	sub    $0x20,%rsp
    53a1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    53a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    53a9:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    53ad:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    53b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53b5:	48 89 d6             	mov    %rdx,%rsi
    53b8:	48 89 c7             	mov    %rax,%rdi
    53bb:	e8 88 00 00 00       	call   5448 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>
    }
    53c0:	c9                   	leave
    53c1:	c3                   	ret

00000000000053c2 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP17VkCommandBuffer_TEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    53c2:	55                   	push   %rbp
    53c3:	48 89 e5             	mov    %rsp,%rbp
    53c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53ce:	90                   	nop
    53cf:	5d                   	pop    %rbp
    53d0:	c3                   	ret
    53d1:	90                   	nop

00000000000053d2 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE10deallocateEPS1_m>:
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
      }

      // __p is not permitted to be a null pointer.
      void
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    53d2:	55                   	push   %rbp
    53d3:	48 89 e5             	mov    %rsp,%rbp
    53d6:	48 83 ec 20          	sub    $0x20,%rsp
    53da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    53de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    53e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
				     std::align_val_t(alignof(_Tp)));
	    return;
	  }
#endif
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    53e6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    53ea:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    53f1:	00 
    53f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    53f6:	48 89 d6             	mov    %rdx,%rsi
    53f9:	48 89 c7             	mov    %rax,%rdi
    53fc:	e8 8f ef ff ff       	call   4390 <_ZdlPvm@plt>
      }
    5401:	c9                   	leave
    5402:	c3                   	ret
    5403:	90                   	nop

0000000000005404 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE8max_sizeEv>:
#undef _GLIBCXX_OPERATOR_DELETE
#undef _GLIBCXX_OPERATOR_NEW

#if __cplusplus <= 201703L
      size_type
      max_size() const _GLIBCXX_USE_NOEXCEPT
    5404:	55                   	push   %rbp
    5405:	48 89 e5             	mov    %rsp,%rbp
    5408:	48 83 ec 10          	sub    $0x10,%rsp
    540c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    5410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5414:	48 89 c7             	mov    %rax,%rdi
    5417:	e8 8a 00 00 00       	call   54a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    541c:	c9                   	leave
    541d:	c3                   	ret

000000000000541e <_ZNSt16allocator_traitsISaIP17VkCommandBuffer_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    541e:	55                   	push   %rbp
    541f:	48 89 e5             	mov    %rsp,%rbp
    5422:	48 83 ec 10          	sub    $0x10,%rsp
    5426:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    542a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    542e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5432:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5436:	ba 00 00 00 00       	mov    $0x0,%edx
    543b:	48 89 ce             	mov    %rcx,%rsi
    543e:	48 89 c7             	mov    %rax,%rdi
    5441:	e8 74 00 00 00       	call   54ba <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>
    5446:	c9                   	leave
    5447:	c3                   	ret

0000000000005448 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    5448:	55                   	push   %rbp
    5449:	48 89 e5             	mov    %rsp,%rbp
    544c:	48 83 ec 20          	sub    $0x20,%rsp
    5450:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5454:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    5458:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    545d:	74 40                	je     549f <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP17VkCommandBuffer_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    545f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5463:	48 89 c7             	mov    %rax,%rdi
    5466:	e8 b0 00 00 00       	call   551b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>
    546b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    546f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5473:	48 89 c7             	mov    %rax,%rdi
    5476:	e8 ae 00 00 00       	call   5529 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>
	      ++__first;
    547b:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    5480:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    5484:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    5488:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    548c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5490:	48 89 ce             	mov    %rcx,%rsi
    5493:	48 89 c7             	mov    %rax,%rdi
    5496:	e8 b5 00 00 00       	call   5550 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>
    549b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    549f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    54a3:	c9                   	leave
    54a4:	c3                   	ret
    54a5:	90                   	nop

00000000000054a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>:
	{ return false; }
#endif

    private:
      _GLIBCXX_CONSTEXPR size_type
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    54a6:	55                   	push   %rbp
    54a7:	48 89 e5             	mov    %rsp,%rbp
    54aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
#if __PTRDIFF_MAX__ < __SIZE_MAX__
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    54ae:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    54b5:	ff ff 0f 
#else
	return std::size_t(-1) / sizeof(_Tp);
#endif
      }
    54b8:	5d                   	pop    %rbp
    54b9:	c3                   	ret

00000000000054ba <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    54ba:	55                   	push   %rbp
    54bb:	48 89 e5             	mov    %rsp,%rbp
    54be:	48 83 ec 20          	sub    $0x20,%rsp
    54c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    54c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    54ca:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    54ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    54d2:	48 89 c7             	mov    %rax,%rdi
    54d5:	e8 cc ff ff ff       	call   54a6 <_ZNKSt15__new_allocatorIP17VkCommandBuffer_TE11_M_max_sizeEv>
    54da:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54de:	0f 92 c0             	setb   %al
    54e1:	0f b6 c0             	movzbl %al,%eax
    54e4:	48 85 c0             	test   %rax,%rax
    54e7:	0f 95 c0             	setne  %al
    54ea:	84 c0                	test   %al,%al
    54ec:	74 1a                	je     5508 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    54ee:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    54f5:	ff ff 1f 
    54f8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    54fc:	73 05                	jae    5503 <_ZNSt15__new_allocatorIP17VkCommandBuffer_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    54fe:	e8 6d ed ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    5503:	e8 d8 eb ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    5508:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    550c:	48 c1 e0 03          	shl    $0x3,%rax
    5510:	48 89 c7             	mov    %rax,%rdi
    5513:	e8 68 ee ff ff       	call   4380 <_Znwm@plt>
    5518:	90                   	nop
      }
    5519:	c9                   	leave
    551a:	c3                   	ret

000000000000551b <_ZSt11__addressofIP17VkCommandBuffer_TEPT_RS2_>:
   *  @brief Same as C++11 std::addressof
   *  @ingroup utilities
   */
  template<typename _Tp>
    inline _GLIBCXX_CONSTEXPR _Tp*
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    551b:	55                   	push   %rbp
    551c:	48 89 e5             	mov    %rsp,%rbp
    551f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    5523:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5527:	5d                   	pop    %rbp
    5528:	c3                   	ret

0000000000005529 <_ZSt10_ConstructIP17VkCommandBuffer_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    5529:	55                   	push   %rbp
    552a:	48 89 e5             	mov    %rsp,%rbp
    552d:	48 83 ec 10          	sub    $0x10,%rsp
    5531:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    5535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5539:	48 89 c6             	mov    %rax,%rsi
    553c:	bf 08 00 00 00       	mov    $0x8,%edi
    5541:	e8 fa f8 ff ff       	call   4e40 <_ZnwmPv>
    5546:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    554d:	90                   	nop
    554e:	c9                   	leave
    554f:	c3                   	ret

0000000000005550 <_ZSt6fill_nIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_>:
  // DR 865. More algorithms that throw away information
  // DR 426. search_n(), fill_n(), and generate_n() with negative n
  template<typename _OI, typename _Size, typename _Tp>
    _GLIBCXX20_CONSTEXPR
    inline _OI
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    5550:	55                   	push   %rbp
    5551:	48 89 e5             	mov    %rsp,%rbp
    5554:	48 83 ec 20          	sub    $0x20,%rsp
    5558:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    555c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    5560:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    {
      // concept requirements
      __glibcxx_function_requires(_OutputIteratorConcept<_OI, const _Tp&>)

      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
			       std::__iterator_category(__first));
    5564:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    5568:	48 89 c7             	mov    %rax,%rdi
    556b:	e8 24 00 00 00       	call   5594 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    5570:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    5574:	48 89 c7             	mov    %rax,%rdi
    5577:	e8 d6 f8 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    557c:	48 89 c1             	mov    %rax,%rcx
    557f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5583:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5587:	48 89 ce             	mov    %rcx,%rsi
    558a:	48 89 c7             	mov    %rax,%rdi
    558d:	e8 0d 00 00 00       	call   559f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    5592:	c9                   	leave
    5593:	c3                   	ret

0000000000005594 <_ZSt19__iterator_categoryIPP17VkCommandBuffer_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    5594:	55                   	push   %rbp
    5595:	48 89 e5             	mov    %rsp,%rbp
    5598:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    559c:	90                   	nop
    559d:	5d                   	pop    %rbp
    559e:	c3                   	ret

000000000000559f <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    559f:	55                   	push   %rbp
    55a0:	48 89 e5             	mov    %rsp,%rbp
    55a3:	48 83 ec 20          	sub    $0x20,%rsp
    55a7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    55ab:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    55af:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    55b3:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    55b8:	75 06                	jne    55c0 <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    55ba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55be:	eb 3a                	jmp    55fa <_ZSt10__fill_n_aIPP17VkCommandBuffer_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    55c0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55c4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55cb:	00 
    55cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55d0:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    55d4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    55d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55dc:	48 89 ce             	mov    %rcx,%rsi
    55df:	48 89 c7             	mov    %rax,%rdi
    55e2:	e8 15 00 00 00       	call   55fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>
      return __first + __n;
    55e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    55eb:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    55f2:	00 
    55f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    55f7:	48 01 d0             	add    %rdx,%rax
    }
    55fa:	c9                   	leave
    55fb:	c3                   	ret

00000000000055fc <_ZSt8__fill_aIPP17VkCommandBuffer_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    55fc:	55                   	push   %rbp
    55fd:	48 89 e5             	mov    %rsp,%rbp
    5600:	48 83 ec 20          	sub    $0x20,%rsp
    5604:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5608:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    560c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    5610:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5614:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    5618:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    561c:	48 89 ce             	mov    %rcx,%rsi
    561f:	48 89 c7             	mov    %rax,%rdi
    5622:	e8 03 00 00 00       	call   562a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    5627:	90                   	nop
    5628:	c9                   	leave
    5629:	c3                   	ret

000000000000562a <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    562a:	55                   	push   %rbp
    562b:	48 89 e5             	mov    %rsp,%rbp
    562e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    5632:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    5636:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    563a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    563e:	48 8b 00             	mov    (%rax),%rax
    5641:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    5645:	eb 10                	jmp    5657 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    5647:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    564b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    564f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    5652:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    5657:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    565b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    565f:	75 e6                	jne    5647 <_ZSt9__fill_a1IPP17VkCommandBuffer_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    5661:	90                   	nop
    5662:	90                   	nop
    5663:	5d                   	pop    %rbp
    5664:	c3                   	ret

0000000000005665 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>:
#include "create_object.hpp"

namespace vkh {
GLFWwindow *createWindow(int width, int height, const char *title,
                         GLFWmonitor *monitor, GLFWwindow *share) {
    5665:	55                   	push   %rbp
    5666:	48 89 e5             	mov    %rsp,%rbp
    5669:	48 83 ec 20          	sub    $0x20,%rsp
    566d:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5670:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5673:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    5677:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
    567b:	4c 89 45 e0          	mov    %r8,-0x20(%rbp)
  glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
    567f:	be 00 00 00 00       	mov    $0x0,%esi
    5684:	bf 01 20 02 00       	mov    $0x22001,%edi
    5689:	e8 52 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  glfwWindowHint(GLFW_RESIZABLE, GLFW_FALSE);
    568e:	be 00 00 00 00       	mov    $0x0,%esi
    5693:	bf 03 00 02 00       	mov    $0x20003,%edi
    5698:	e8 43 ec ff ff       	call   42e0 <glfwWindowHint@plt>
  return glfwCreateWindow(width, height, title, monitor, share);
    569d:	48 8b 7d e0          	mov    -0x20(%rbp),%rdi
    56a1:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    56a5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    56a9:	8b 75 f8             	mov    -0x8(%rbp),%esi
    56ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    56af:	49 89 f8             	mov    %rdi,%r8
    56b2:	89 c7                	mov    %eax,%edi
    56b4:	e8 47 ef ff ff       	call   4600 <glfwCreateWindow@plt>
}
    56b9:	c9                   	leave
    56ba:	c3                   	ret

00000000000056bb <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>:

VkInstance createInstance(const VkInstanceCreateInfo *pCreateInfo,
                          const VkAllocationCallbacks *pAllocator) {
    56bb:	55                   	push   %rbp
    56bc:	48 89 e5             	mov    %rsp,%rbp
    56bf:	41 54                	push   %r12
    56c1:	53                   	push   %rbx
    56c2:	48 83 ec 20          	sub    $0x20,%rsp
    56c6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    56ca:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  VkInstance instance;
  if (vkCreateInstance(pCreateInfo, pAllocator, &instance) != VK_SUCCESS) {
    56ce:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    56d2:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    56d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    56da:	48 89 ce             	mov    %rcx,%rsi
    56dd:	48 89 c7             	mov    %rax,%rdi
    56e0:	e8 db ed ff ff       	call   44c0 <vkCreateInstance@plt>
    56e5:	85 c0                	test   %eax,%eax
    56e7:	0f 95 c0             	setne  %al
    56ea:	84 c0                	test   %al,%al
    56ec:	74 3b                	je     5729 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x6e>
    throw std::runtime_error("Failed to create an instance.");
    56ee:	bf 10 00 00 00       	mov    $0x10,%edi
    56f3:	e8 78 ea ff ff       	call   4170 <__cxa_allocate_exception@plt>
    56f8:	48 89 c3             	mov    %rax,%rbx
    56fb:	48 8d 05 4e 1b 01 00 	lea    0x11b4e(%rip),%rax        # 17250 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    5702:	48 89 c6             	mov    %rax,%rsi
    5705:	48 89 df             	mov    %rbx,%rdi
    5708:	e8 f3 e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    570d:	48 8b 05 94 08 02 00 	mov    0x20894(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5714:	48 89 c2             	mov    %rax,%rdx
    5717:	48 8d 05 22 06 02 00 	lea    0x20622(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    571e:	48 89 c6             	mov    %rax,%rsi
    5721:	48 89 df             	mov    %rbx,%rdi
    5724:	e8 47 ef ff ff       	call   4670 <__cxa_throw@plt>
  }
  return instance;
    5729:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    572d:	eb 16                	jmp    5745 <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks+0x8a>
    throw std::runtime_error("Failed to create an instance.");
    572f:	49 89 c4             	mov    %rax,%r12
    5732:	48 89 df             	mov    %rbx,%rdi
    5735:	e8 06 eb ff ff       	call   4240 <__cxa_free_exception@plt>
    573a:	4c 89 e0             	mov    %r12,%rax
    573d:	48 89 c7             	mov    %rax,%rdi
    5740:	e8 8b ef ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5745:	48 83 c4 20          	add    $0x20,%rsp
    5749:	5b                   	pop    %rbx
    574a:	41 5c                	pop    %r12
    574c:	5d                   	pop    %rbp
    574d:	c3                   	ret

000000000000574e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>:

VkDevice createDevice(VkPhysicalDevice physicalDevice,
                      const VkDeviceCreateInfo *pCreateInfo,
                      const VkAllocationCallbacks *pAllocator) {
    574e:	55                   	push   %rbp
    574f:	48 89 e5             	mov    %rsp,%rbp
    5752:	41 54                	push   %r12
    5754:	53                   	push   %rbx
    5755:	48 83 ec 30          	sub    $0x30,%rsp
    5759:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    575d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5761:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkDevice device;
  if (vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, &device) !=
    5765:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5769:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    576d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5771:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5775:	48 89 c7             	mov    %rax,%rdi
    5778:	e8 53 ee ff ff       	call   45d0 <vkCreateDevice@plt>
    577d:	85 c0                	test   %eax,%eax
    577f:	0f 95 c0             	setne  %al
    5782:	84 c0                	test   %al,%al
    5784:	74 3b                	je     57c1 <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create logical device.");
    5786:	bf 10 00 00 00       	mov    $0x10,%edi
    578b:	e8 e0 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5790:	48 89 c3             	mov    %rax,%rbx
    5793:	48 8d 05 d6 1a 01 00 	lea    0x11ad6(%rip),%rax        # 17270 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    579a:	48 89 c6             	mov    %rax,%rsi
    579d:	48 89 df             	mov    %rbx,%rdi
    57a0:	e8 5b e9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    57a5:	48 8b 05 fc 07 02 00 	mov    0x207fc(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    57ac:	48 89 c2             	mov    %rax,%rdx
    57af:	48 8d 05 8a 05 02 00 	lea    0x2058a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    57b6:	48 89 c6             	mov    %rax,%rsi
    57b9:	48 89 df             	mov    %rbx,%rdi
    57bc:	e8 af ee ff ff       	call   4670 <__cxa_throw@plt>
  }
  return device;
    57c1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    57c5:	eb 16                	jmp    57dd <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create logical device.");
    57c7:	49 89 c4             	mov    %rax,%r12
    57ca:	48 89 df             	mov    %rbx,%rdi
    57cd:	e8 6e ea ff ff       	call   4240 <__cxa_free_exception@plt>
    57d2:	4c 89 e0             	mov    %r12,%rax
    57d5:	48 89 c7             	mov    %rax,%rdi
    57d8:	e8 f3 ee ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    57dd:	48 83 c4 30          	add    $0x30,%rsp
    57e1:	5b                   	pop    %rbx
    57e2:	41 5c                	pop    %r12
    57e4:	5d                   	pop    %rbp
    57e5:	c3                   	ret

00000000000057e6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>:

VkSurfaceKHR createSurface(VkInstance instance, GLFWwindow *window,
                           const VkAllocationCallbacks *allocator) {
    57e6:	55                   	push   %rbp
    57e7:	48 89 e5             	mov    %rsp,%rbp
    57ea:	41 54                	push   %r12
    57ec:	53                   	push   %rbx
    57ed:	48 83 ec 30          	sub    $0x30,%rsp
    57f1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    57f5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    57f9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSurfaceKHR surface;
  if (glfwCreateWindowSurface(instance, window, allocator, &surface) !=
    57fd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5801:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5805:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5809:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    580d:	48 89 c7             	mov    %rax,%rdi
    5810:	e8 db ed ff ff       	call   45f0 <glfwCreateWindowSurface@plt>
    5815:	85 c0                	test   %eax,%eax
    5817:	0f 95 c0             	setne  %al
    581a:	84 c0                	test   %al,%al
    581c:	74 3b                	je     5859 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create window surface.");
    581e:	bf 10 00 00 00       	mov    $0x10,%edi
    5823:	e8 48 e9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5828:	48 89 c3             	mov    %rax,%rbx
    582b:	48 8d 05 66 1a 01 00 	lea    0x11a66(%rip),%rax        # 17298 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x50>
    5832:	48 89 c6             	mov    %rax,%rsi
    5835:	48 89 df             	mov    %rbx,%rdi
    5838:	e8 c3 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    583d:	48 8b 05 64 07 02 00 	mov    0x20764(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5844:	48 89 c2             	mov    %rax,%rdx
    5847:	48 8d 05 f2 04 02 00 	lea    0x204f2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    584e:	48 89 c6             	mov    %rax,%rsi
    5851:	48 89 df             	mov    %rbx,%rdi
    5854:	e8 17 ee ff ff       	call   4670 <__cxa_throw@plt>
  }
  return surface;
    5859:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    585d:	eb 16                	jmp    5875 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create window surface.");
    585f:	49 89 c4             	mov    %rax,%r12
    5862:	48 89 df             	mov    %rbx,%rdi
    5865:	e8 d6 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    586a:	4c 89 e0             	mov    %r12,%rax
    586d:	48 89 c7             	mov    %rax,%rdi
    5870:	e8 5b ee ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5875:	48 83 c4 30          	add    $0x30,%rsp
    5879:	5b                   	pop    %rbx
    587a:	41 5c                	pop    %r12
    587c:	5d                   	pop    %rbp
    587d:	c3                   	ret

000000000000587e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>:

VkSwapchainKHR createSwapchain(VkDevice device,
                               const VkSwapchainCreateInfoKHR *pCreateInfo,
                               const VkAllocationCallbacks *pAllocator) {
    587e:	55                   	push   %rbp
    587f:	48 89 e5             	mov    %rsp,%rbp
    5882:	41 54                	push   %r12
    5884:	53                   	push   %rbx
    5885:	48 83 ec 30          	sub    $0x30,%rsp
    5889:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    588d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5891:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkSwapchainKHR swapchain{};
    5895:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    589c:	00 
  if (vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, &swapchain) !=
    589d:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    58a1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    58a5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    58a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    58ad:	48 89 c7             	mov    %rax,%rdi
    58b0:	e8 db eb ff ff       	call   4490 <vkCreateSwapchainKHR@plt>
    58b5:	85 c0                	test   %eax,%eax
    58b7:	0f 95 c0             	setne  %al
    58ba:	84 c0                	test   %al,%al
    58bc:	74 3b                	je     58f9 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create a swapchain.");
    58be:	bf 10 00 00 00       	mov    $0x10,%edi
    58c3:	e8 a8 e8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    58c8:	48 89 c3             	mov    %rax,%rbx
    58cb:	48 8d 05 e7 19 01 00 	lea    0x119e7(%rip),%rax        # 172b9 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x71>
    58d2:	48 89 c6             	mov    %rax,%rsi
    58d5:	48 89 df             	mov    %rbx,%rdi
    58d8:	e8 23 e8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    58dd:	48 8b 05 c4 06 02 00 	mov    0x206c4(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    58e4:	48 89 c2             	mov    %rax,%rdx
    58e7:	48 8d 05 52 04 02 00 	lea    0x20452(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    58ee:	48 89 c6             	mov    %rax,%rsi
    58f1:	48 89 df             	mov    %rbx,%rdi
    58f4:	e8 77 ed ff ff       	call   4670 <__cxa_throw@plt>
  }
  return swapchain;
    58f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    58fd:	eb 16                	jmp    5915 <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create a swapchain.");
    58ff:	49 89 c4             	mov    %rax,%r12
    5902:	48 89 df             	mov    %rbx,%rdi
    5905:	e8 36 e9 ff ff       	call   4240 <__cxa_free_exception@plt>
    590a:	4c 89 e0             	mov    %r12,%rax
    590d:	48 89 c7             	mov    %rax,%rdi
    5910:	e8 bb ed ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5915:	48 83 c4 30          	add    $0x30,%rsp
    5919:	5b                   	pop    %rbx
    591a:	41 5c                	pop    %r12
    591c:	5d                   	pop    %rbp
    591d:	c3                   	ret

000000000000591e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>:

VkImageView createImageView(VkDevice device,
                            const VkImageViewCreateInfo *pCreateInfo,
                            const VkAllocationCallbacks *pAllocator) {
    591e:	55                   	push   %rbp
    591f:	48 89 e5             	mov    %rsp,%rbp
    5922:	41 54                	push   %r12
    5924:	53                   	push   %rbx
    5925:	48 83 ec 30          	sub    $0x30,%rsp
    5929:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    592d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5931:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkImageView imageView;
  if (vkCreateImageView(device, pCreateInfo, pAllocator, &imageView) !=
    5935:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5939:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    593d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5945:	48 89 c7             	mov    %rax,%rdi
    5948:	e8 73 ea ff ff       	call   43c0 <vkCreateImageView@plt>
    594d:	85 c0                	test   %eax,%eax
    594f:	0f 95 c0             	setne  %al
    5952:	84 c0                	test   %al,%al
    5954:	74 3b                	je     5991 <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create an image view.");
    5956:	bf 10 00 00 00       	mov    $0x10,%edi
    595b:	e8 10 e8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5960:	48 89 c3             	mov    %rax,%rbx
    5963:	48 8d 05 6e 19 01 00 	lea    0x1196e(%rip),%rax        # 172d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    596a:	48 89 c6             	mov    %rax,%rsi
    596d:	48 89 df             	mov    %rbx,%rdi
    5970:	e8 8b e7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5975:	48 8b 05 2c 06 02 00 	mov    0x2062c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    597c:	48 89 c2             	mov    %rax,%rdx
    597f:	48 8d 05 ba 03 02 00 	lea    0x203ba(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5986:	48 89 c6             	mov    %rax,%rsi
    5989:	48 89 df             	mov    %rbx,%rdi
    598c:	e8 df ec ff ff       	call   4670 <__cxa_throw@plt>
  }
  return imageView;
    5991:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5995:	eb 16                	jmp    59ad <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create an image view.");
    5997:	49 89 c4             	mov    %rax,%r12
    599a:	48 89 df             	mov    %rbx,%rdi
    599d:	e8 9e e8 ff ff       	call   4240 <__cxa_free_exception@plt>
    59a2:	4c 89 e0             	mov    %r12,%rax
    59a5:	48 89 c7             	mov    %rax,%rdi
    59a8:	e8 23 ed ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    59ad:	48 83 c4 30          	add    $0x30,%rsp
    59b1:	5b                   	pop    %rbx
    59b2:	41 5c                	pop    %r12
    59b4:	5d                   	pop    %rbp
    59b5:	c3                   	ret

00000000000059b6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device,
                                  const std::vector<char> &shaderCode,
                                  const VkAllocationCallbacks *pAllocator) {
    59b6:	55                   	push   %rbp
    59b7:	48 89 e5             	mov    %rsp,%rbp
    59ba:	41 54                	push   %r12
    59bc:	53                   	push   %rbx
    59bd:	48 83 ec 60          	sub    $0x60,%rsp
    59c1:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
    59c5:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
    59c9:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
  VkShaderModuleCreateInfo shaderModuleInfo{};
    59cd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    59d1:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    59d5:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
    59d9:	66 0f d6 45 e0       	movq   %xmm0,-0x20(%rbp)
  shaderModuleInfo.sType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO;
    59de:	c7 45 c0 10 00 00 00 	movl   $0x10,-0x40(%rbp)
  shaderModuleInfo.codeSize = shaderCode.size();
    59e5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59e9:	48 89 c7             	mov    %rax,%rdi
    59ec:	e8 b7 04 00 00       	call   5ea8 <_ZNKSt6vectorIcSaIcEE4sizeEv>
    59f1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  shaderModuleInfo.pCode =
      reinterpret_cast<const uint32_t *>(shaderCode.data());
    59f5:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    59f9:	48 89 c7             	mov    %rax,%rdi
    59fc:	e8 c7 04 00 00       	call   5ec8 <_ZNKSt6vectorIcSaIcEE4dataEv>
  shaderModuleInfo.pCode =
    5a01:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  shaderModuleInfo.pNext = nullptr;
    5a05:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    5a0c:	00 

  VkShaderModule shaderModule;
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a0d:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
    5a11:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
    5a15:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    5a19:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    5a1d:	48 89 c7             	mov    %rax,%rdi
    5a20:	e8 5b e8 ff ff       	call   4280 <vkCreateShaderModule@plt>
                           &shaderModule) != VK_SUCCESS) {
    5a25:	85 c0                	test   %eax,%eax
    5a27:	0f 95 c0             	setne  %al
  if (vkCreateShaderModule(device, &shaderModuleInfo, pAllocator,
    5a2a:	84 c0                	test   %al,%al
    5a2c:	74 3b                	je     5a69 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xb3>
    throw std::runtime_error("Failed to create shader module.");
    5a2e:	bf 10 00 00 00       	mov    $0x10,%edi
    5a33:	e8 38 e7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5a38:	48 89 c3             	mov    %rax,%rbx
    5a3b:	48 8d 05 b6 18 01 00 	lea    0x118b6(%rip),%rax        # 172f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb0>
    5a42:	48 89 c6             	mov    %rax,%rsi
    5a45:	48 89 df             	mov    %rbx,%rdi
    5a48:	e8 b3 e6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5a4d:	48 8b 05 54 05 02 00 	mov    0x20554(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5a54:	48 89 c2             	mov    %rax,%rdx
    5a57:	48 8d 05 e2 02 02 00 	lea    0x202e2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5a5e:	48 89 c6             	mov    %rax,%rsi
    5a61:	48 89 df             	mov    %rbx,%rdi
    5a64:	e8 07 ec ff ff       	call   4670 <__cxa_throw@plt>
  }
  return shaderModule;
    5a69:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    5a6d:	eb 16                	jmp    5a85 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks+0xcf>
    throw std::runtime_error("Failed to create shader module.");
    5a6f:	49 89 c4             	mov    %rax,%r12
    5a72:	48 89 df             	mov    %rbx,%rdi
    5a75:	e8 c6 e7 ff ff       	call   4240 <__cxa_free_exception@plt>
    5a7a:	4c 89 e0             	mov    %r12,%rax
    5a7d:	48 89 c7             	mov    %rax,%rdi
    5a80:	e8 4b ec ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5a85:	48 83 c4 60          	add    $0x60,%rsp
    5a89:	5b                   	pop    %rbx
    5a8a:	41 5c                	pop    %r12
    5a8c:	5d                   	pop    %rbp
    5a8d:	c3                   	ret

0000000000005a8e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>:

VkShaderModule createShaderModule(VkDevice device, std::string shaderCodePath,
                                  const VkAllocationCallbacks *pAllocator) {
    5a8e:	55                   	push   %rbp
    5a8f:	48 89 e5             	mov    %rsp,%rbp
    5a92:	41 54                	push   %r12
    5a94:	53                   	push   %rbx
    5a95:	48 81 ec b0 02 00 00 	sub    $0x2b0,%rsp
    5a9c:	48 89 bd 58 fd ff ff 	mov    %rdi,-0x2a8(%rbp)
    5aa3:	48 89 b5 50 fd ff ff 	mov    %rsi,-0x2b0(%rbp)
    5aaa:	48 89 95 48 fd ff ff 	mov    %rdx,-0x2b8(%rbp)
  std::ifstream file(shaderCodePath, std::ios::ate | std::ios::binary);
    5ab1:	be 04 00 00 00       	mov    $0x4,%esi
    5ab6:	bf 02 00 00 00       	mov    $0x2,%edi
    5abb:	e8 d6 03 00 00       	call   5e96 <_ZStorSt13_Ios_OpenmodeS_>
    5ac0:	89 c2                	mov    %eax,%edx
    5ac2:	48 8b 8d 50 fd ff ff 	mov    -0x2b0(%rbp),%rcx
    5ac9:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ad0:	48 89 ce             	mov    %rcx,%rsi
    5ad3:	48 89 c7             	mov    %rax,%rdi
    5ad6:	e8 55 eb ff ff       	call   4630 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!file.is_open()) {
    5adb:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ae2:	48 89 c7             	mov    %rax,%rdi
    5ae5:	e8 36 eb ff ff       	call   4620 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE7is_openEv@plt>
    5aea:	83 f0 01             	xor    $0x1,%eax
    5aed:	84 c0                	test   %al,%al
    5aef:	74 61                	je     5b52 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0xc4>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5af1:	bf 10 00 00 00       	mov    $0x10,%edi
    5af6:	e8 75 e6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5afb:	48 89 c3             	mov    %rax,%rbx
    5afe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b02:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
    5b09:	48 8d 0d 08 18 01 00 	lea    0x11808(%rip),%rcx        # 17318 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xd0>
    5b10:	48 89 ce             	mov    %rcx,%rsi
    5b13:	48 89 c7             	mov    %rax,%rdi
    5b16:	e8 d1 03 00 00       	call   5eec <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    5b1b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b1f:	48 89 c6             	mov    %rax,%rsi
    5b22:	48 89 df             	mov    %rbx,%rdi
    5b25:	e8 16 eb ff ff       	call   4640 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    5b2a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5b2e:	48 89 c7             	mov    %rax,%rdi
    5b31:	e8 aa e6 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5b36:	48 8b 05 6b 04 02 00 	mov    0x2046b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5b3d:	48 89 c2             	mov    %rax,%rdx
    5b40:	48 8d 05 f9 01 02 00 	lea    0x201f9(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5b47:	48 89 c6             	mov    %rax,%rsi
    5b4a:	48 89 df             	mov    %rbx,%rdi
    5b4d:	e8 1e eb ff ff       	call   4670 <__cxa_throw@plt>
  }
  size_t bufferSize = static_cast<size_t>(file.tellg());
    5b52:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5b59:	48 89 c7             	mov    %rax,%rdi
    5b5c:	e8 4f eb ff ff       	call   46b0 <_ZNSi5tellgEv@plt>
    5b61:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    5b65:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
    5b69:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    5b6d:	48 89 c7             	mov    %rax,%rdi
    5b70:	e8 79 04 00 00       	call   5fee <_ZNKSt4fposI11__mbstate_tEcvlEv>
    5b75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  std::vector<char> buffer(bufferSize);
    5b79:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5b7d:	48 89 c7             	mov    %rax,%rdi
    5b80:	e8 5b eb ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    5b85:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    5b89:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    5b8d:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5b94:	48 89 ce             	mov    %rcx,%rsi
    5b97:	48 89 c7             	mov    %rax,%rdi
    5b9a:	e8 61 04 00 00       	call   6000 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>
    5b9f:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5ba3:	48 89 c7             	mov    %rax,%rdi
    5ba6:	e8 75 e8 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  file.seekg(0);
    5bab:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    5baf:	be 00 00 00 00       	mov    $0x0,%esi
    5bb4:	48 89 c7             	mov    %rax,%rdi
    5bb7:	e8 fe 04 00 00       	call   60ba <_ZNSt4fposI11__mbstate_tEC1El>
    5bbc:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5bc0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    5bc4:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bcb:	48 89 ce             	mov    %rcx,%rsi
    5bce:	48 89 c7             	mov    %rax,%rdi
    5bd1:	e8 2a e9 ff ff       	call   4500 <_ZNSi5seekgESt4fposI11__mbstate_tE@plt>
  file.read(buffer.data(), bufferSize);
    5bd6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    5bda:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5be1:	48 89 c7             	mov    %rax,%rdi
    5be4:	e8 01 05 00 00       	call   60ea <_ZNSt6vectorIcSaIcEE4dataEv>
    5be9:	48 89 c1             	mov    %rax,%rcx
    5bec:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5bf3:	48 89 da             	mov    %rbx,%rdx
    5bf6:	48 89 ce             	mov    %rcx,%rsi
    5bf9:	48 89 c7             	mov    %rax,%rdi
    5bfc:	e8 ef e8 ff ff       	call   44f0 <_ZNSi4readEPcl@plt>
  file.close();
    5c01:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c08:	48 89 c7             	mov    %rax,%rdi
    5c0b:	e8 60 e4 ff ff       	call   4070 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv@plt>

  return createShaderModule(device, buffer, pAllocator);
    5c10:	48 8b 95 48 fd ff ff 	mov    -0x2b8(%rbp),%rdx
    5c17:	48 8d 8d 60 fd ff ff 	lea    -0x2a0(%rbp),%rcx
    5c1e:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
    5c25:	48 89 ce             	mov    %rcx,%rsi
    5c28:	48 89 c7             	mov    %rax,%rdi
    5c2b:	e8 86 fd ff ff       	call   59b6 <_ZN3vkh18createShaderModuleEP10VkDevice_TRKSt6vectorIcSaIcEEPK21VkAllocationCallbacks>
    5c30:	48 89 c3             	mov    %rax,%rbx
    5c33:	90                   	nop
}
    5c34:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c3b:	48 89 c7             	mov    %rax,%rdi
    5c3e:	e8 33 04 00 00       	call   6076 <_ZNSt6vectorIcSaIcEED1Ev>
    5c43:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5c4a:	48 89 c7             	mov    %rax,%rdi
    5c4d:	e8 5e e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
  return createShaderModule(device, buffer, pAllocator);
    5c52:	48 89 d8             	mov    %rbx,%rax
    5c55:	eb 63                	jmp    5cba <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x22c>
    throw std::runtime_error("Failed to open " + shaderCodePath);
    5c57:	49 89 c4             	mov    %rax,%r12
    5c5a:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    5c5e:	48 89 c7             	mov    %rax,%rdi
    5c61:	e8 7a e5 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5c66:	eb 03                	jmp    5c6b <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x1dd>
    5c68:	49 89 c4             	mov    %rax,%r12
    5c6b:	48 89 df             	mov    %rbx,%rdi
    5c6e:	e8 cd e5 ff ff       	call   4240 <__cxa_free_exception@plt>
    5c73:	4c 89 e3             	mov    %r12,%rbx
    5c76:	eb 28                	jmp    5ca0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
  std::vector<char> buffer(bufferSize);
    5c78:	48 89 c3             	mov    %rax,%rbx
    5c7b:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    5c7f:	48 89 c7             	mov    %rax,%rdi
    5c82:	e8 99 e7 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    5c87:	eb 17                	jmp    5ca0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
}
    5c89:	48 89 c3             	mov    %rax,%rbx
    5c8c:	48 8d 85 60 fd ff ff 	lea    -0x2a0(%rbp),%rax
    5c93:	48 89 c7             	mov    %rax,%rdi
    5c96:	e8 db 03 00 00       	call   6076 <_ZNSt6vectorIcSaIcEED1Ev>
    5c9b:	eb 03                	jmp    5ca0 <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks+0x212>
    5c9d:	48 89 c3             	mov    %rax,%rbx
    5ca0:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    5ca7:	48 89 c7             	mov    %rax,%rdi
    5caa:	e8 01 e4 ff ff       	call   40b0 <_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@plt>
    5caf:	48 89 d8             	mov    %rbx,%rax
    5cb2:	48 89 c7             	mov    %rax,%rdi
    5cb5:	e8 16 ea ff ff       	call   46d0 <_Unwind_Resume@plt>
    5cba:	48 81 c4 b0 02 00 00 	add    $0x2b0,%rsp
    5cc1:	5b                   	pop    %rbx
    5cc2:	41 5c                	pop    %r12
    5cc4:	5d                   	pop    %rbp
    5cc5:	c3                   	ret

0000000000005cc6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>:

VkPipelineLayout
createPipelineLayout(VkDevice device,
                     const VkPipelineLayoutCreateInfo *pCreateInfo,
                     const VkAllocationCallbacks *pAllocator) {
    5cc6:	55                   	push   %rbp
    5cc7:	48 89 e5             	mov    %rsp,%rbp
    5cca:	41 54                	push   %r12
    5ccc:	53                   	push   %rbx
    5ccd:	48 83 ec 30          	sub    $0x30,%rsp
    5cd1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5cd5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5cd9:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkPipelineLayout pipelineLayout;
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cdd:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5ce1:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5ce5:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5ce9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5ced:	48 89 c7             	mov    %rax,%rdi
    5cf0:	e8 bb e5 ff ff       	call   42b0 <vkCreatePipelineLayout@plt>
                             &pipelineLayout) != VK_SUCCESS) {
    5cf5:	85 c0                	test   %eax,%eax
    5cf7:	0f 95 c0             	setne  %al
  if (vkCreatePipelineLayout(device, pCreateInfo, pAllocator,
    5cfa:	84 c0                	test   %al,%al
    5cfc:	74 3b                	je     5d39 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x73>
    throw std::runtime_error("Failed to create pipeline layout.");
    5cfe:	bf 10 00 00 00       	mov    $0x10,%edi
    5d03:	e8 68 e4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5d08:	48 89 c3             	mov    %rax,%rbx
    5d0b:	48 8d 05 16 16 01 00 	lea    0x11616(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5d12:	48 89 c6             	mov    %rax,%rsi
    5d15:	48 89 df             	mov    %rbx,%rdi
    5d18:	e8 e3 e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5d1d:	48 8b 05 84 02 02 00 	mov    0x20284(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5d24:	48 89 c2             	mov    %rax,%rdx
    5d27:	48 8d 05 12 00 02 00 	lea    0x20012(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5d2e:	48 89 c6             	mov    %rax,%rsi
    5d31:	48 89 df             	mov    %rbx,%rdi
    5d34:	e8 37 e9 ff ff       	call   4670 <__cxa_throw@plt>
  }
  return pipelineLayout;
    5d39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5d3d:	eb 16                	jmp    5d55 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5d3f:	49 89 c4             	mov    %rax,%r12
    5d42:	48 89 df             	mov    %rbx,%rdi
    5d45:	e8 f6 e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5d4a:	4c 89 e0             	mov    %r12,%rax
    5d4d:	48 89 c7             	mov    %rax,%rdi
    5d50:	e8 7b e9 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5d55:	48 83 c4 30          	add    $0x30,%rsp
    5d59:	5b                   	pop    %rbx
    5d5a:	41 5c                	pop    %r12
    5d5c:	5d                   	pop    %rbp
    5d5d:	c3                   	ret

0000000000005d5e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>:

VkRenderPass createRenderPass(VkDevice device,
                              const VkRenderPassCreateInfo *pCreateInfo,
                              const VkAllocationCallbacks *pAllocator) {
    5d5e:	55                   	push   %rbp
    5d5f:	48 89 e5             	mov    %rsp,%rbp
    5d62:	41 54                	push   %r12
    5d64:	53                   	push   %rbx
    5d65:	48 83 ec 30          	sub    $0x30,%rsp
    5d69:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5d6d:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5d71:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkRenderPass renderPass;
  if (vkCreateRenderPass(device, pCreateInfo, pAllocator, &renderPass) !=
    5d75:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5d79:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5d7d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5d81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5d85:	48 89 c7             	mov    %rax,%rdi
    5d88:	e8 63 e4 ff ff       	call   41f0 <vkCreateRenderPass@plt>
    5d8d:	85 c0                	test   %eax,%eax
    5d8f:	0f 95 c0             	setne  %al
    5d92:	84 c0                	test   %al,%al
    5d94:	74 3b                	je     5dd1 <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x73>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create pipeline layout.");
    5d96:	bf 10 00 00 00       	mov    $0x10,%edi
    5d9b:	e8 d0 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5da0:	48 89 c3             	mov    %rax,%rbx
    5da3:	48 8d 05 7e 15 01 00 	lea    0x1157e(%rip),%rax        # 17328 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    5daa:	48 89 c6             	mov    %rax,%rsi
    5dad:	48 89 df             	mov    %rbx,%rdi
    5db0:	e8 4b e3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5db5:	48 8b 05 ec 01 02 00 	mov    0x201ec(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5dbc:	48 89 c2             	mov    %rax,%rdx
    5dbf:	48 8d 05 7a ff 01 00 	lea    0x1ff7a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5dc6:	48 89 c6             	mov    %rax,%rsi
    5dc9:	48 89 df             	mov    %rbx,%rdi
    5dcc:	e8 9f e8 ff ff       	call   4670 <__cxa_throw@plt>
  }
  return renderPass;
    5dd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5dd5:	eb 16                	jmp    5ded <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks+0x8f>
    throw std::runtime_error("Failed to create pipeline layout.");
    5dd7:	49 89 c4             	mov    %rax,%r12
    5dda:	48 89 df             	mov    %rbx,%rdi
    5ddd:	e8 5e e4 ff ff       	call   4240 <__cxa_free_exception@plt>
    5de2:	4c 89 e0             	mov    %r12,%rax
    5de5:	48 89 c7             	mov    %rax,%rdi
    5de8:	e8 e3 e8 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5ded:	48 83 c4 30          	add    $0x30,%rsp
    5df1:	5b                   	pop    %rbx
    5df2:	41 5c                	pop    %r12
    5df4:	5d                   	pop    %rbp
    5df5:	c3                   	ret

0000000000005df6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>:

VkCommandPool createCommandPool(VkDevice device,
                                const VkCommandPoolCreateInfo *pCreateInfo,
                                const VkAllocationCallbacks *pAllocator) {
    5df6:	55                   	push   %rbp
    5df7:	48 89 e5             	mov    %rsp,%rbp
    5dfa:	41 54                	push   %r12
    5dfc:	53                   	push   %rbx
    5dfd:	48 83 ec 30          	sub    $0x30,%rsp
    5e01:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5e05:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5e09:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  VkCommandPool commandPool{};
    5e0d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    5e14:	00 
  if (vkCreateCommandPool(device, pCreateInfo, pAllocator, &commandPool) !=
    5e15:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    5e19:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5e1d:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
    5e21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5e25:	48 89 c7             	mov    %rax,%rdi
    5e28:	e8 03 e3 ff ff       	call   4130 <vkCreateCommandPool@plt>
    5e2d:	85 c0                	test   %eax,%eax
    5e2f:	0f 95 c0             	setne  %al
    5e32:	84 c0                	test   %al,%al
    5e34:	74 3b                	je     5e71 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x7b>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to create command pool.");
    5e36:	bf 10 00 00 00       	mov    $0x10,%edi
    5e3b:	e8 30 e3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    5e40:	48 89 c3             	mov    %rax,%rbx
    5e43:	48 8d 05 06 15 01 00 	lea    0x11506(%rip),%rax        # 17350 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    5e4a:	48 89 c6             	mov    %rax,%rsi
    5e4d:	48 89 df             	mov    %rbx,%rdi
    5e50:	e8 ab e2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    5e55:	48 8b 05 4c 01 02 00 	mov    0x2014c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    5e5c:	48 89 c2             	mov    %rax,%rdx
    5e5f:	48 8d 05 da fe 01 00 	lea    0x1feda(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    5e66:	48 89 c6             	mov    %rax,%rsi
    5e69:	48 89 df             	mov    %rbx,%rdi
    5e6c:	e8 ff e7 ff ff       	call   4670 <__cxa_throw@plt>
  }
  return commandPool;
    5e71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    5e75:	eb 16                	jmp    5e8d <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks+0x97>
    throw std::runtime_error("Failed to create command pool.");
    5e77:	49 89 c4             	mov    %rax,%r12
    5e7a:	48 89 df             	mov    %rbx,%rdi
    5e7d:	e8 be e3 ff ff       	call   4240 <__cxa_free_exception@plt>
    5e82:	4c 89 e0             	mov    %r12,%rax
    5e85:	48 89 c7             	mov    %rax,%rdi
    5e88:	e8 43 e8 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    5e8d:	48 83 c4 30          	add    $0x30,%rsp
    5e91:	5b                   	pop    %rbx
    5e92:	41 5c                	pop    %r12
    5e94:	5d                   	pop    %rbp
    5e95:	c3                   	ret

0000000000005e96 <_ZStorSt13_Ios_OpenmodeS_>:
  operator&(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }

  inline _GLIBCXX_CONSTEXPR _Ios_Openmode
  operator|(_Ios_Openmode __a, _Ios_Openmode __b)
  { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
    5e96:	55                   	push   %rbp
    5e97:	48 89 e5             	mov    %rsp,%rbp
    5e9a:	89 7d fc             	mov    %edi,-0x4(%rbp)
    5e9d:	89 75 f8             	mov    %esi,-0x8(%rbp)
    5ea0:	8b 45 fc             	mov    -0x4(%rbp),%eax
    5ea3:	0b 45 f8             	or     -0x8(%rbp),%eax
    5ea6:	5d                   	pop    %rbp
    5ea7:	c3                   	ret

0000000000005ea8 <_ZNKSt6vectorIcSaIcEE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    5ea8:	55                   	push   %rbp
    5ea9:	48 89 e5             	mov    %rsp,%rbp
    5eac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    5eb0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5eb4:	48 8b 50 08          	mov    0x8(%rax),%rdx
    5eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ebc:	48 8b 00             	mov    (%rax),%rax
    5ebf:	48 29 c2             	sub    %rax,%rdx
    5ec2:	48 89 d0             	mov    %rdx,%rax
    5ec5:	5d                   	pop    %rbp
    5ec6:	c3                   	ret
    5ec7:	90                   	nop

0000000000005ec8 <_ZNKSt6vectorIcSaIcEE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
    5ec8:	55                   	push   %rbp
    5ec9:	48 89 e5             	mov    %rsp,%rbp
    5ecc:	48 83 ec 10          	sub    $0x10,%rsp
    5ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    5ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ed8:	48 8b 10             	mov    (%rax),%rdx
    5edb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5edf:	48 89 d6             	mov    %rdx,%rsi
    5ee2:	48 89 c7             	mov    %rax,%rdi
    5ee5:	e8 24 02 00 00       	call   610e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    5eea:	c9                   	leave
    5eeb:	c3                   	ret

0000000000005eec <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
#endif

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    basic_string<_CharT, _Traits, _Alloc>
    operator+(const _CharT* __lhs,
    5eec:	55                   	push   %rbp
    5eed:	48 89 e5             	mov    %rsp,%rbp
    5ef0:	53                   	push   %rbx
    5ef1:	48 83 ec 38          	sub    $0x38,%rsp
    5ef5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    5ef9:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    5efd:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
      typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
      typedef typename __string_type::size_type	  __size_type;
      typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
	rebind<_CharT>::other _Char_alloc_type;
      typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
      const __size_type __len = _Traits::length(__lhs);
    5f01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    5f05:	48 89 c7             	mov    %rax,%rdi
    5f08:	e8 5c eb ff ff       	call   4a69 <_ZNSt11char_traitsIcE6lengthEPKc>
    5f0d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5f11:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f15:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f19:	48 89 d6             	mov    %rdx,%rsi
    5f1c:	48 89 c7             	mov    %rax,%rdi
    5f1f:	e8 cc e1 ff ff       	call   40f0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv@plt>
    5f24:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f28:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
    5f2c:	48 89 d6             	mov    %rdx,%rsi
    5f2f:	48 89 c7             	mov    %rax,%rdi
    5f32:	e8 e9 01 00 00       	call   6120 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>
    5f37:	48 8d 55 e6          	lea    -0x1a(%rbp),%rdx
    5f3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f3f:	48 89 d6             	mov    %rdx,%rsi
    5f42:	48 89 c7             	mov    %rax,%rdi
    5f45:	e8 36 e7 ff ff       	call   4680 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS3_@plt>
    5f4a:	48 8d 45 e6          	lea    -0x1a(%rbp),%rax
    5f4e:	48 89 c7             	mov    %rax,%rdi
    5f51:	e8 ca e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    5f56:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5f5a:	48 89 c7             	mov    %rax,%rdi
    5f5d:	e8 be e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
          __rhs.get_allocator()));
      __str.reserve(__len + __rhs.size());
    5f62:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    5f66:	48 89 c7             	mov    %rax,%rdi
    5f69:	e8 b2 e2 ff ff       	call   4220 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv@plt>
    5f6e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f72:	48 01 c2             	add    %rax,%rdx
    5f75:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f79:	48 89 d6             	mov    %rdx,%rsi
    5f7c:	48 89 c7             	mov    %rax,%rdi
    5f7f:	e8 8c e6 ff ff       	call   4610 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm@plt>
      __str.append(__lhs, __len);
    5f84:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    5f88:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    5f8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5f90:	48 89 ce             	mov    %rcx,%rsi
    5f93:	48 89 c7             	mov    %rax,%rdi
    5f96:	e8 a5 e0 ff ff       	call   4040 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm@plt>
      __str.append(__rhs);
    5f9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    5f9f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fa3:	48 89 d6             	mov    %rdx,%rsi
    5fa6:	48 89 c7             	mov    %rax,%rdi
    5fa9:	e8 92 e7 ff ff       	call   4740 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_@plt>
      return __str;
    5fae:	eb 34                	jmp    5fe4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0xf8>
      __string_type __str(_Alloc_traits::_S_select_on_copy(
    5fb0:	48 89 c3             	mov    %rax,%rbx
    5fb3:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
    5fb7:	48 89 c7             	mov    %rax,%rdi
    5fba:	e8 61 e4 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    5fbf:	48 89 d8             	mov    %rbx,%rax
    5fc2:	48 89 c7             	mov    %rax,%rdi
    5fc5:	e8 06 e7 ff ff       	call   46d0 <_Unwind_Resume@plt>
    }
    5fca:	48 89 c3             	mov    %rax,%rbx
    5fcd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fd1:	48 89 c7             	mov    %rax,%rdi
    5fd4:	e8 07 e2 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    5fd9:	48 89 d8             	mov    %rbx,%rax
    5fdc:	48 89 c7             	mov    %rax,%rdi
    5fdf:	e8 ec e6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    5fe4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    5fe8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    5fec:	c9                   	leave
    5fed:	c3                   	ret

0000000000005fee <_ZNKSt4fposI11__mbstate_tEcvlEv>:
      fpos& operator=(const fpos&) = default;
      ~fpos() = default;
#endif

      /// Convert to streamoff.
      operator streamoff() const { return _M_off; }
    5fee:	55                   	push   %rbp
    5fef:	48 89 e5             	mov    %rsp,%rbp
    5ff2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    5ff6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    5ffa:	48 8b 00             	mov    (%rax),%rax
    5ffd:	5d                   	pop    %rbp
    5ffe:	c3                   	ret
    5fff:	90                   	nop

0000000000006000 <_ZNSt6vectorIcSaIcEEC1EmRKS0_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    6000:	55                   	push   %rbp
    6001:	48 89 e5             	mov    %rsp,%rbp
    6004:	53                   	push   %rbx
    6005:	48 83 ec 28          	sub    $0x28,%rsp
    6009:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    600d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6011:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    6015:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    6019:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    601d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6021:	48 89 d6             	mov    %rdx,%rsi
    6024:	48 89 c7             	mov    %rax,%rdi
    6027:	e8 1d 01 00 00       	call   6149 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>
    602c:	48 89 c1             	mov    %rax,%rcx
    602f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6033:	48 89 c2             	mov    %rax,%rdx
    6036:	48 89 ce             	mov    %rcx,%rsi
    6039:	48 89 df             	mov    %rbx,%rdi
    603c:	e8 85 01 00 00       	call   61c6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>
      { _M_default_initialize(__n); }
    6041:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    6045:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6049:	48 89 d6             	mov    %rdx,%rsi
    604c:	48 89 c7             	mov    %rax,%rdi
    604f:	e8 14 02 00 00       	call   6268 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>
    6054:	eb 1a                	jmp    6070 <_ZNSt6vectorIcSaIcEEC1EmRKS0_+0x70>
    6056:	48 89 c3             	mov    %rax,%rbx
    6059:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    605d:	48 89 c7             	mov    %rax,%rdi
    6060:	e8 bf 01 00 00       	call   6224 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    6065:	48 89 d8             	mov    %rbx,%rax
    6068:	48 89 c7             	mov    %rax,%rdi
    606b:	e8 60 e6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    6070:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6074:	c9                   	leave
    6075:	c3                   	ret

0000000000006076 <_ZNSt6vectorIcSaIcEED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    6076:	55                   	push   %rbp
    6077:	48 89 e5             	mov    %rsp,%rbp
    607a:	48 83 ec 10          	sub    $0x10,%rsp
    607e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    6082:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6086:	48 89 c7             	mov    %rax,%rdi
    6089:	e8 1a 02 00 00       	call   62a8 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    608e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    6091:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6095:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6099:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    609d:	48 8b 00             	mov    (%rax),%rax
    60a0:	48 89 ce             	mov    %rcx,%rsi
    60a3:	48 89 c7             	mov    %rax,%rdi
    60a6:	e8 0b 02 00 00       	call   62b6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>
      }
    60ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60af:	48 89 c7             	mov    %rax,%rdi
    60b2:	e8 6d 01 00 00       	call   6224 <_ZNSt12_Vector_baseIcSaIcEED1Ev>
    60b7:	90                   	nop
    60b8:	c9                   	leave
    60b9:	c3                   	ret

00000000000060ba <_ZNSt4fposI11__mbstate_tEC1El>:
      fpos(streamoff __off)
    60ba:	55                   	push   %rbp
    60bb:	48 89 e5             	mov    %rsp,%rbp
    60be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    60c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_off(__off), _M_state() { }
    60c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    60ce:	48 89 10             	mov    %rdx,(%rax)
    60d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60d5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    60dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60e0:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    60e7:	90                   	nop
    60e8:	5d                   	pop    %rbp
    60e9:	c3                   	ret

00000000000060ea <_ZNSt6vectorIcSaIcEE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    60ea:	55                   	push   %rbp
    60eb:	48 89 e5             	mov    %rsp,%rbp
    60ee:	48 83 ec 10          	sub    $0x10,%rsp
    60f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    60f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    60fa:	48 8b 10             	mov    (%rax),%rdx
    60fd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6101:	48 89 d6             	mov    %rdx,%rsi
    6104:	48 89 c7             	mov    %rax,%rdi
    6107:	e8 02 00 00 00       	call   610e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>
    610c:	c9                   	leave
    610d:	c3                   	ret

000000000000610e <_ZNKSt6vectorIcSaIcEE11_M_data_ptrIcEEPT_S4_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    610e:	55                   	push   %rbp
    610f:	48 89 e5             	mov    %rsp,%rbp
    6112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    611a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    611e:	5d                   	pop    %rbp
    611f:	c3                   	ret

0000000000006120 <_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_>:
      std::__enable_if_t<__is_custom_pointer<_Ptr>::value>
      destroy(_Alloc& __a, _Ptr __p)
      noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
      { _Base_type::destroy(__a, std::__to_address(__p)); }

    static constexpr _Alloc _S_select_on_copy(const _Alloc& __a)
    6120:	55                   	push   %rbp
    6121:	48 89 e5             	mov    %rsp,%rbp
    6124:	48 83 ec 10          	sub    $0x10,%rsp
    6128:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    612c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return _Base_type::select_on_container_copy_construction(__a); }
    6130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6134:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6138:	48 89 d6             	mov    %rdx,%rsi
    613b:	48 89 c7             	mov    %rax,%rdi
    613e:	e8 a8 01 00 00       	call   62eb <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>
    6143:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6147:	c9                   	leave
    6148:	c3                   	ret

0000000000006149 <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    6149:	55                   	push   %rbp
    614a:	48 89 e5             	mov    %rsp,%rbp
    614d:	53                   	push   %rbx
    614e:	48 83 ec 28          	sub    $0x28,%rsp
    6152:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6156:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    615a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    615e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6162:	48 89 d6             	mov    %rdx,%rsi
    6165:	48 89 c7             	mov    %rax,%rdi
    6168:	e8 43 e0 ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    616d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6171:	48 89 c7             	mov    %rax,%rdi
    6174:	e8 9b 01 00 00       	call   6314 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>
    6179:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    617d:	0f 92 c3             	setb   %bl
    6180:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6184:	48 89 c7             	mov    %rax,%rdi
    6187:	e8 94 e2 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    618c:	84 db                	test   %bl,%bl
    618e:	74 0f                	je     619f <_ZNSt6vectorIcSaIcEE17_S_check_init_lenEmRKS0_+0x56>
	  __throw_length_error(
    6190:	48 8d 05 d9 11 01 00 	lea    0x111d9(%rip),%rax        # 17370 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x128>
    6197:	48 89 c7             	mov    %rax,%rdi
    619a:	e8 e1 df ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    619f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    61a3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    61a7:	c9                   	leave
    61a8:	c3                   	ret
    61a9:	90                   	nop

00000000000061aa <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>:
      struct _Vector_impl
    61aa:	55                   	push   %rbp
    61ab:	48 89 e5             	mov    %rsp,%rbp
    61ae:	48 83 ec 10          	sub    $0x10,%rsp
    61b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    61b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    61ba:	48 89 c7             	mov    %rax,%rdi
    61bd:	e8 9e de ff ff       	call   4060 <_ZNSaIcED2Ev@plt>
    61c2:	90                   	nop
    61c3:	c9                   	leave
    61c4:	c3                   	ret
    61c5:	90                   	nop

00000000000061c6 <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    61c6:	55                   	push   %rbp
    61c7:	48 89 e5             	mov    %rsp,%rbp
    61ca:	53                   	push   %rbx
    61cb:	48 83 ec 28          	sub    $0x28,%rsp
    61cf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    61d3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    61d7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    61db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61df:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    61e3:	48 89 d6             	mov    %rdx,%rsi
    61e6:	48 89 c7             	mov    %rax,%rdi
    61e9:	e8 68 01 00 00       	call   6356 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>
      { _M_create_storage(__n); }
    61ee:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    61f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    61f6:	48 89 d6             	mov    %rdx,%rsi
    61f9:	48 89 c7             	mov    %rax,%rdi
    61fc:	e8 87 01 00 00       	call   6388 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>
    6201:	eb 1a                	jmp    621d <_ZNSt12_Vector_baseIcSaIcEEC1EmRKS0_+0x57>
    6203:	48 89 c3             	mov    %rax,%rbx
    6206:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    620a:	48 89 c7             	mov    %rax,%rdi
    620d:	e8 98 ff ff ff       	call   61aa <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6212:	48 89 d8             	mov    %rbx,%rax
    6215:	48 89 c7             	mov    %rax,%rdi
    6218:	e8 b3 e4 ff ff       	call   46d0 <_Unwind_Resume@plt>
    621d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6221:	c9                   	leave
    6222:	c3                   	ret
    6223:	90                   	nop

0000000000006224 <_ZNSt12_Vector_baseIcSaIcEED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    6224:	55                   	push   %rbp
    6225:	48 89 e5             	mov    %rsp,%rbp
    6228:	48 83 ec 10          	sub    $0x10,%rsp
    622c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    6230:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6234:	48 8b 50 10          	mov    0x10(%rax),%rdx
    6238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    623c:	48 8b 00             	mov    (%rax),%rax
    623f:	48 29 c2             	sub    %rax,%rdx
	_M_deallocate(_M_impl._M_start,
    6242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6246:	48 8b 08             	mov    (%rax),%rcx
    6249:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    624d:	48 89 ce             	mov    %rcx,%rsi
    6250:	48 89 c7             	mov    %rax,%rdi
    6253:	e8 82 01 00 00       	call   63da <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>
      }
    6258:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    625c:	48 89 c7             	mov    %rax,%rdi
    625f:	e8 46 ff ff ff       	call   61aa <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD1Ev>
    6264:	90                   	nop
    6265:	c9                   	leave
    6266:	c3                   	ret
    6267:	90                   	nop

0000000000006268 <_ZNSt6vectorIcSaIcEE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    6268:	55                   	push   %rbp
    6269:	48 89 e5             	mov    %rsp,%rbp
    626c:	48 83 ec 10          	sub    $0x10,%rsp
    6270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    6278:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    627c:	48 89 c7             	mov    %rax,%rdi
    627f:	e8 24 00 00 00       	call   62a8 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>
    6284:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    6287:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    628b:	48 8b 00             	mov    (%rax),%rax
    628e:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6292:	48 89 ce             	mov    %rcx,%rsi
    6295:	48 89 c7             	mov    %rax,%rdi
    6298:	e8 72 01 00 00       	call   640f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    629d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    62a1:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    62a5:	90                   	nop
    62a6:	c9                   	leave
    62a7:	c3                   	ret

00000000000062a8 <_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    62a8:	55                   	push   %rbp
    62a9:	48 89 e5             	mov    %rsp,%rbp
    62ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    62b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62b4:	5d                   	pop    %rbp
    62b5:	c3                   	ret

00000000000062b6 <_ZSt8_DestroyIPccEvT_S1_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    62b6:	55                   	push   %rbp
    62b7:	48 89 e5             	mov    %rsp,%rbp
    62ba:	48 83 ec 20          	sub    $0x20,%rsp
    62be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    62c6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    62ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    62d2:	48 89 d6             	mov    %rdx,%rsi
    62d5:	48 89 c7             	mov    %rax,%rdi
    62d8:	e8 5b 01 00 00       	call   6438 <_ZSt8_DestroyIPcEvT_S1_>
    }
    62dd:	90                   	nop
    62de:	c9                   	leave
    62df:	c3                   	ret

00000000000062e0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>:
    __iterator_category(const _Iter&)
    62e0:	55                   	push   %rbp
    62e1:	48 89 e5             	mov    %rsp,%rbp
    62e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    62e8:	90                   	nop
    62e9:	5d                   	pop    %rbp
    62ea:	c3                   	ret

00000000000062eb <_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_>:
      select_on_container_copy_construction(const allocator_type& __rhs)
    62eb:	55                   	push   %rbp
    62ec:	48 89 e5             	mov    %rsp,%rbp
    62ef:	48 83 ec 10          	sub    $0x10,%rsp
    62f3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    62f7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __rhs; }
    62fb:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    62ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6303:	48 89 d6             	mov    %rdx,%rsi
    6306:	48 89 c7             	mov    %rax,%rdi
    6309:	e8 a2 de ff ff       	call   41b0 <_ZNSaIcEC1ERKS_@plt>
    630e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6312:	c9                   	leave
    6313:	c3                   	ret

0000000000006314 <_ZNSt6vectorIcSaIcEE11_S_max_sizeERKS0_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    6314:	55                   	push   %rbp
    6315:	48 89 e5             	mov    %rsp,%rbp
    6318:	48 83 ec 20          	sub    $0x20,%rsp
    631c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    6320:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6327:	ff ff 7f 
    632a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    632e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6332:	48 89 c7             	mov    %rax,%rdi
    6335:	e8 52 01 00 00       	call   648c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>
    633a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    633e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    6342:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6346:	48 89 d6             	mov    %rdx,%rsi
    6349:	48 89 c7             	mov    %rax,%rdi
    634c:	e8 bc ef ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    6351:	48 8b 00             	mov    (%rax),%rax
      }
    6354:	c9                   	leave
    6355:	c3                   	ret

0000000000006356 <_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC1ERKS0_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    6356:	55                   	push   %rbp
    6357:	48 89 e5             	mov    %rsp,%rbp
    635a:	48 83 ec 10          	sub    $0x10,%rsp
    635e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6362:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    6366:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    636a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    636e:	48 89 d6             	mov    %rdx,%rsi
    6371:	48 89 c7             	mov    %rax,%rdi
    6374:	e8 37 e2 ff ff       	call   45b0 <_ZNSaIcEC2ERKS_@plt>
    6379:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    637d:	48 89 c7             	mov    %rax,%rdi
    6380:	e8 21 01 00 00       	call   64a6 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>
	{ }
    6385:	90                   	nop
    6386:	c9                   	leave
    6387:	c3                   	ret

0000000000006388 <_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    6388:	55                   	push   %rbp
    6389:	48 89 e5             	mov    %rsp,%rbp
    638c:	48 83 ec 10          	sub    $0x10,%rsp
    6390:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6394:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    6398:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    639c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63a0:	48 89 d6             	mov    %rdx,%rsi
    63a3:	48 89 c7             	mov    %rax,%rdi
    63a6:	e8 29 01 00 00       	call   64d4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>
    63ab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    63af:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    63b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63b6:	48 8b 10             	mov    (%rax),%rdx
    63b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    63c1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63c5:	48 8b 10             	mov    (%rax),%rdx
    63c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    63cc:	48 01 c2             	add    %rax,%rdx
    63cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63d3:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    63d7:	90                   	nop
    63d8:	c9                   	leave
    63d9:	c3                   	ret

00000000000063da <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm>:
      _M_deallocate(pointer __p, size_t __n)
    63da:	55                   	push   %rbp
    63db:	48 89 e5             	mov    %rsp,%rbp
    63de:	48 83 ec 20          	sub    $0x20,%rsp
    63e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    63e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    63ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    63ee:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    63f3:	74 17                	je     640c <_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    63f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    63f9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    63fd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6401:	48 89 ce             	mov    %rcx,%rsi
    6404:	48 89 c7             	mov    %rax,%rdi
    6407:	e8 52 00 00 00       	call   645e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>
      }
    640c:	90                   	nop
    640d:	c9                   	leave
    640e:	c3                   	ret

000000000000640f <_ZSt27__uninitialized_default_n_aIPcmcET_S1_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    640f:	55                   	push   %rbp
    6410:	48 89 e5             	mov    %rsp,%rbp
    6413:	48 83 ec 20          	sub    $0x20,%rsp
    6417:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    641b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    641f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    6423:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6427:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    642b:	48 89 d6             	mov    %rdx,%rsi
    642e:	48 89 c7             	mov    %rax,%rdi
    6431:	e8 d1 00 00 00       	call   6507 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>
    6436:	c9                   	leave
    6437:	c3                   	ret

0000000000006438 <_ZSt8_DestroyIPcEvT_S1_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    6438:	55                   	push   %rbp
    6439:	48 89 e5             	mov    %rsp,%rbp
    643c:	48 83 ec 10          	sub    $0x10,%rsp
    6440:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6444:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    6448:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    644c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6450:	48 89 d6             	mov    %rdx,%rsi
    6453:	48 89 c7             	mov    %rax,%rdi
    6456:	e8 d5 00 00 00       	call   6530 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>
    }
    645b:	90                   	nop
    645c:	c9                   	leave
    645d:	c3                   	ret

000000000000645e <_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    645e:	55                   	push   %rbp
    645f:	48 89 e5             	mov    %rsp,%rbp
    6462:	48 83 ec 20          	sub    $0x20,%rsp
    6466:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    646a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    646e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    6472:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6476:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    647a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    647e:	48 89 ce             	mov    %rcx,%rsi
    6481:	48 89 c7             	mov    %rax,%rdi
    6484:	e8 c5 00 00 00       	call   654e <_ZNSt15__new_allocatorIcE10deallocateEPcm>
    6489:	90                   	nop
    648a:	c9                   	leave
    648b:	c3                   	ret

000000000000648c <_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    648c:	55                   	push   %rbp
    648d:	48 89 e5             	mov    %rsp,%rbp
    6490:	48 83 ec 10          	sub    $0x10,%rsp
    6494:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    6498:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    649c:	48 89 c7             	mov    %rax,%rdi
    649f:	e8 d4 00 00 00       	call   6578 <_ZNKSt15__new_allocatorIcE8max_sizeEv>
      }
    64a4:	c9                   	leave
    64a5:	c3                   	ret

00000000000064a6 <_ZNSt12_Vector_baseIcSaIcEE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    64a6:	55                   	push   %rbp
    64a7:	48 89 e5             	mov    %rsp,%rbp
    64aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    64ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64b2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    64b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64bd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    64c4:	00 
    64c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64c9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    64d0:	00 
	{ }
    64d1:	90                   	nop
    64d2:	5d                   	pop    %rbp
    64d3:	c3                   	ret

00000000000064d4 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm>:
      _M_allocate(size_t __n)
    64d4:	55                   	push   %rbp
    64d5:	48 89 e5             	mov    %rsp,%rbp
    64d8:	48 83 ec 10          	sub    $0x10,%rsp
    64dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    64e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    64e4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    64e9:	74 15                	je     6500 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x2c>
    64eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    64ef:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    64f3:	48 89 d6             	mov    %rdx,%rsi
    64f6:	48 89 c7             	mov    %rax,%rdi
    64f9:	e8 94 00 00 00       	call   6592 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>
    64fe:	eb 05                	jmp    6505 <_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm+0x31>
    6500:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    6505:	c9                   	leave
    6506:	c3                   	ret

0000000000006507 <_ZSt25__uninitialized_default_nIPcmET_S1_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    6507:	55                   	push   %rbp
    6508:	48 89 e5             	mov    %rsp,%rbp
    650b:	48 83 ec 20          	sub    $0x20,%rsp
    650f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6513:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    6517:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    651b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    651f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6523:	48 89 d6             	mov    %rdx,%rsi
    6526:	48 89 c7             	mov    %rax,%rdi
    6529:	e8 8e 00 00 00       	call   65bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>
    }
    652e:	c9                   	leave
    652f:	c3                   	ret

0000000000006530 <_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    6530:	55                   	push   %rbp
    6531:	48 89 e5             	mov    %rsp,%rbp
    6534:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6538:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    653c:	90                   	nop
    653d:	5d                   	pop    %rbp
    653e:	c3                   	ret

000000000000653f <_ZSt11__addressofIcEPT_RS0_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    653f:	55                   	push   %rbp
    6540:	48 89 e5             	mov    %rsp,%rbp
    6543:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    6547:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    654b:	5d                   	pop    %rbp
    654c:	c3                   	ret
    654d:	90                   	nop

000000000000654e <_ZNSt15__new_allocatorIcE10deallocateEPcm>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    654e:	55                   	push   %rbp
    654f:	48 89 e5             	mov    %rsp,%rbp
    6552:	48 83 ec 20          	sub    $0x20,%rsp
    6556:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    655a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    655e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    6562:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6566:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    656a:	48 89 d6             	mov    %rdx,%rsi
    656d:	48 89 c7             	mov    %rax,%rdi
    6570:	e8 1b de ff ff       	call   4390 <_ZdlPvm@plt>
      }
    6575:	c9                   	leave
    6576:	c3                   	ret
    6577:	90                   	nop

0000000000006578 <_ZNKSt15__new_allocatorIcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    6578:	55                   	push   %rbp
    6579:	48 89 e5             	mov    %rsp,%rbp
    657c:	48 83 ec 10          	sub    $0x10,%rsp
    6580:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    6584:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6588:	48 89 c7             	mov    %rax,%rdi
    658b:	e8 8a 00 00 00       	call   661a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    6590:	c9                   	leave
    6591:	c3                   	ret

0000000000006592 <_ZNSt16allocator_traitsISaIcEE8allocateERS0_m>:
      allocate(allocator_type& __a, size_type __n)
    6592:	55                   	push   %rbp
    6593:	48 89 e5             	mov    %rsp,%rbp
    6596:	48 83 ec 10          	sub    $0x10,%rsp
    659a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    659e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    65a2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    65a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65aa:	ba 00 00 00 00       	mov    $0x0,%edx
    65af:	48 89 ce             	mov    %rcx,%rsi
    65b2:	48 89 c7             	mov    %rax,%rdi
    65b5:	e8 74 00 00 00       	call   662e <_ZNSt15__new_allocatorIcE8allocateEmPKv>
    65ba:	c9                   	leave
    65bb:	c3                   	ret

00000000000065bc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    65bc:	55                   	push   %rbp
    65bd:	48 89 e5             	mov    %rsp,%rbp
    65c0:	48 83 ec 20          	sub    $0x20,%rsp
    65c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    65c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    65cc:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    65d1:	74 40                	je     6613 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPcmEET_S3_T0_+0x57>
		= std::__addressof(*__first);
    65d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    65d7:	48 89 c7             	mov    %rax,%rdi
    65da:	e8 60 ff ff ff       	call   653f <_ZSt11__addressofIcEPT_RS0_>
    65df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    65e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    65e7:	48 89 c7             	mov    %rax,%rdi
    65ea:	e8 87 00 00 00       	call   6676 <_ZSt10_ConstructIcJEEvPT_DpOT0_>
	      ++__first;
    65ef:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    65f4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    65f8:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    65fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6600:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6604:	48 89 ce             	mov    %rcx,%rsi
    6607:	48 89 c7             	mov    %rax,%rdi
    660a:	e8 8a 00 00 00       	call   6699 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>
    660f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    6613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    6617:	c9                   	leave
    6618:	c3                   	ret
    6619:	90                   	nop

000000000000661a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    661a:	55                   	push   %rbp
    661b:	48 89 e5             	mov    %rsp,%rbp
    661e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    6622:	48 b8 ff ff ff ff ff 	movabs $0x7fffffffffffffff,%rax
    6629:	ff ff 7f 
      }
    662c:	5d                   	pop    %rbp
    662d:	c3                   	ret

000000000000662e <_ZNSt15__new_allocatorIcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    662e:	55                   	push   %rbp
    662f:	48 89 e5             	mov    %rsp,%rbp
    6632:	48 83 ec 20          	sub    $0x20,%rsp
    6636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    663a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    663e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    6642:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6646:	48 89 c7             	mov    %rax,%rdi
    6649:	e8 cc ff ff ff       	call   661a <_ZNKSt15__new_allocatorIcE11_M_max_sizeEv>
    664e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    6652:	0f 92 c0             	setb   %al
    6655:	0f b6 c0             	movzbl %al,%eax
    6658:	48 85 c0             	test   %rax,%rax
    665b:	0f 95 c0             	setne  %al
    665e:	84 c0                	test   %al,%al
    6660:	74 05                	je     6667 <_ZNSt15__new_allocatorIcE8allocateEmPKv+0x39>
	    std::__throw_bad_alloc();
    6662:	e8 79 da ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    6667:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    666b:	48 89 c7             	mov    %rax,%rdi
    666e:	e8 0d dd ff ff       	call   4380 <_Znwm@plt>
    6673:	90                   	nop
      }
    6674:	c9                   	leave
    6675:	c3                   	ret

0000000000006676 <_ZSt10_ConstructIcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    6676:	55                   	push   %rbp
    6677:	48 89 e5             	mov    %rsp,%rbp
    667a:	48 83 ec 10          	sub    $0x10,%rsp
    667e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    6682:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6686:	48 89 c6             	mov    %rax,%rsi
    6689:	bf 01 00 00 00       	mov    $0x1,%edi
    668e:	e8 ad e7 ff ff       	call   4e40 <_ZnwmPv>
    6693:	c6 00 00             	movb   $0x0,(%rax)
    }
    6696:	90                   	nop
    6697:	c9                   	leave
    6698:	c3                   	ret

0000000000006699 <_ZSt6fill_nIPcmcET_S1_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    6699:	55                   	push   %rbp
    669a:	48 89 e5             	mov    %rsp,%rbp
    669d:	48 83 ec 20          	sub    $0x20,%rsp
    66a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66a5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66a9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    66ad:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    66b1:	48 89 c7             	mov    %rax,%rdi
    66b4:	e8 27 fc ff ff       	call   62e0 <_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    66b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    66bd:	48 89 c7             	mov    %rax,%rdi
    66c0:	e8 8d e7 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    66c5:	48 89 c1             	mov    %rax,%rcx
    66c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    66d0:	48 89 ce             	mov    %rcx,%rsi
    66d3:	48 89 c7             	mov    %rax,%rdi
    66d6:	e8 02 00 00 00       	call   66dd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>
    }
    66db:	c9                   	leave
    66dc:	c3                   	ret

00000000000066dd <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    66dd:	55                   	push   %rbp
    66de:	48 89 e5             	mov    %rsp,%rbp
    66e1:	48 83 ec 20          	sub    $0x20,%rsp
    66e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    66e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    66ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    66f1:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    66f6:	75 06                	jne    66fe <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    66f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    66fc:	eb 2a                	jmp    6728 <_ZSt10__fill_n_aIPcmcET_S1_T0_RKT1_St26random_access_iterator_tag+0x4b>
      std::__fill_a(__first, __first + __n, __value);
    66fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6702:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6706:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    670a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    670e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6712:	48 89 ce             	mov    %rcx,%rsi
    6715:	48 89 c7             	mov    %rax,%rdi
    6718:	e8 0d 00 00 00       	call   672a <_ZSt8__fill_aIPccEvT_S1_RKT0_>
      return __first + __n;
    671d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    6721:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6725:	48 01 d0             	add    %rdx,%rax
    }
    6728:	c9                   	leave
    6729:	c3                   	ret

000000000000672a <_ZSt8__fill_aIPccEvT_S1_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    672a:	55                   	push   %rbp
    672b:	48 89 e5             	mov    %rsp,%rbp
    672e:	48 83 ec 20          	sub    $0x20,%rsp
    6732:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6736:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    673a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    673e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6742:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6746:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    674a:	48 89 ce             	mov    %rcx,%rsi
    674d:	48 89 c7             	mov    %rax,%rdi
    6750:	e8 03 00 00 00       	call   6758 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>
    6755:	90                   	nop
    6756:	c9                   	leave
    6757:	c3                   	ret

0000000000006758 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_>:
    __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
    6758:	55                   	push   %rbp
    6759:	48 89 e5             	mov    %rsp,%rbp
    675c:	48 83 ec 30          	sub    $0x30,%rsp
    6760:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6764:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    6768:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __c;
    676c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6770:	0f b6 00             	movzbl (%rax),%eax
    6773:	88 45 ff             	mov    %al,-0x1(%rbp)
      if (const size_t __len = __last - __first)
    6776:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    677a:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
    677e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    6782:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    6787:	74 19                	je     67a2 <_ZSt9__fill_a1IcEN9__gnu_cxx11__enable_ifIXsrSt9__is_byteIT_E7__valueEvE6__typeEPS3_S7_RKS3_+0x4a>
	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
    6789:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    678d:	0f b6 c8             	movzbl %al,%ecx
    6790:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    6794:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6798:	89 ce                	mov    %ecx,%esi
    679a:	48 89 c7             	mov    %rax,%rdi
    679d:	e8 fe d9 ff ff       	call   41a0 <memset@plt>
    }
    67a2:	90                   	nop
    67a3:	c9                   	leave
    67a4:	c3                   	ret

00000000000067a5 <_ZN3vkh13destroyWindowEP10GLFWwindow>:
#include "destroy_object.hpp"

namespace vkh {

void destroyWindow(GLFWwindow *window) { glfwDestroyWindow(window); }
    67a5:	55                   	push   %rbp
    67a6:	48 89 e5             	mov    %rsp,%rbp
    67a9:	48 83 ec 10          	sub    $0x10,%rsp
    67ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67b5:	48 89 c7             	mov    %rax,%rdi
    67b8:	e8 13 d9 ff ff       	call   40d0 <glfwDestroyWindow@plt>
    67bd:	90                   	nop
    67be:	c9                   	leave
    67bf:	c3                   	ret

00000000000067c0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>:

void destroyInstance(VkInstance instance,
                     const VkAllocationCallbacks *pAllocator) {
    67c0:	55                   	push   %rbp
    67c1:	48 89 e5             	mov    %rsp,%rbp
    67c4:	48 83 ec 10          	sub    $0x10,%rsp
    67c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyInstance(instance, pAllocator);
    67d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67d8:	48 89 d6             	mov    %rdx,%rsi
    67db:	48 89 c7             	mov    %rax,%rdi
    67de:	e8 bd db ff ff       	call   43a0 <vkDestroyInstance@plt>
}
    67e3:	90                   	nop
    67e4:	c9                   	leave
    67e5:	c3                   	ret

00000000000067e6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>:

void destroyDevice(VkDevice device, const VkAllocationCallbacks *pAllocator) {
    67e6:	55                   	push   %rbp
    67e7:	48 89 e5             	mov    %rsp,%rbp
    67ea:	48 83 ec 10          	sub    $0x10,%rsp
    67ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    67f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  vkDestroyDevice(device, pAllocator);
    67f6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    67fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    67fe:	48 89 d6             	mov    %rdx,%rsi
    6801:	48 89 c7             	mov    %rax,%rdi
    6804:	e8 97 da ff ff       	call   42a0 <vkDestroyDevice@plt>
}
    6809:	90                   	nop
    680a:	c9                   	leave
    680b:	c3                   	ret

000000000000680c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>:

void destroySurface(VkInstance instance, VkSurfaceKHR surface,
                    const VkAllocationCallbacks *pAllocator) {
    680c:	55                   	push   %rbp
    680d:	48 89 e5             	mov    %rsp,%rbp
    6810:	48 83 ec 20          	sub    $0x20,%rsp
    6814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6818:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    681c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySurfaceKHR(instance, surface, pAllocator);
    6820:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6824:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6828:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    682c:	48 89 ce             	mov    %rcx,%rsi
    682f:	48 89 c7             	mov    %rax,%rdi
    6832:	e8 89 de ff ff       	call   46c0 <vkDestroySurfaceKHR@plt>
}
    6837:	90                   	nop
    6838:	c9                   	leave
    6839:	c3                   	ret

000000000000683a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>:

void destroySwapchain(VkDevice device, VkSwapchainKHR swapchain,
                      const VkAllocationCallbacks *pAllocator) {
    683a:	55                   	push   %rbp
    683b:	48 89 e5             	mov    %rsp,%rbp
    683e:	48 83 ec 20          	sub    $0x20,%rsp
    6842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6846:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    684a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroySwapchainKHR(device, swapchain, pAllocator);
    684e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6852:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    685a:	48 89 ce             	mov    %rcx,%rsi
    685d:	48 89 c7             	mov    %rax,%rdi
    6860:	e8 5b d8 ff ff       	call   40c0 <vkDestroySwapchainKHR@plt>
}
    6865:	90                   	nop
    6866:	c9                   	leave
    6867:	c3                   	ret

0000000000006868 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>:

void destroyImageView(VkDevice device, VkImageView imageView,
                      const VkAllocationCallbacks *pAllocator) {
    6868:	55                   	push   %rbp
    6869:	48 89 e5             	mov    %rsp,%rbp
    686c:	48 83 ec 20          	sub    $0x20,%rsp
    6870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6874:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6878:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyImageView(device, imageView, pAllocator);
    687c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6880:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    6884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6888:	48 89 ce             	mov    %rcx,%rsi
    688b:	48 89 c7             	mov    %rax,%rdi
    688e:	e8 5d de ff ff       	call   46f0 <vkDestroyImageView@plt>
}
    6893:	90                   	nop
    6894:	c9                   	leave
    6895:	c3                   	ret

0000000000006896 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>:

void destroyShaderModule(VkDevice device, VkShaderModule shaderModule,
                         const VkAllocationCallbacks *pAllocator) {
    6896:	55                   	push   %rbp
    6897:	48 89 e5             	mov    %rsp,%rbp
    689a:	48 83 ec 20          	sub    $0x20,%rsp
    689e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68a6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyShaderModule(device, shaderModule, pAllocator);
    68aa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68ae:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68b6:	48 89 ce             	mov    %rcx,%rsi
    68b9:	48 89 c7             	mov    %rax,%rdi
    68bc:	e8 ef db ff ff       	call   44b0 <vkDestroyShaderModule@plt>
}
    68c1:	90                   	nop
    68c2:	c9                   	leave
    68c3:	c3                   	ret

00000000000068c4 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>:

void destroyPipelineLayout(VkDevice device, VkPipelineLayout pipelineLayout,
                           const VkAllocationCallbacks *pAllocator) {
    68c4:	55                   	push   %rbp
    68c5:	48 89 e5             	mov    %rsp,%rbp
    68c8:	48 83 ec 20          	sub    $0x20,%rsp
    68cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    68d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipelineLayout(device, pipelineLayout, pAllocator);
    68d8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    68dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    68e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    68e4:	48 89 ce             	mov    %rcx,%rsi
    68e7:	48 89 c7             	mov    %rax,%rdi
    68ea:	e8 f1 db ff ff       	call   44e0 <vkDestroyPipelineLayout@plt>
}
    68ef:	90                   	nop
    68f0:	c9                   	leave
    68f1:	c3                   	ret

00000000000068f2 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>:

void destroyRenderPass(VkDevice device, VkRenderPass renderPass,
                       const VkAllocationCallbacks *pAllocator) {
    68f2:	55                   	push   %rbp
    68f3:	48 89 e5             	mov    %rsp,%rbp
    68f6:	48 83 ec 20          	sub    $0x20,%rsp
    68fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    68fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6902:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyRenderPass(device, renderPass, pAllocator);
    6906:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    690a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    690e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6912:	48 89 ce             	mov    %rcx,%rsi
    6915:	48 89 c7             	mov    %rax,%rdi
    6918:	e8 43 da ff ff       	call   4360 <vkDestroyRenderPass@plt>
}
    691d:	90                   	nop
    691e:	c9                   	leave
    691f:	c3                   	ret

0000000000006920 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>:

void destroyPipeline(VkDevice device, VkPipeline pipeline,
                     const VkAllocationCallbacks *pAllocator) {
    6920:	55                   	push   %rbp
    6921:	48 89 e5             	mov    %rsp,%rbp
    6924:	48 83 ec 20          	sub    $0x20,%rsp
    6928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    692c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    6930:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyPipeline(device, pipeline, pAllocator);
    6934:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6938:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    693c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6940:	48 89 ce             	mov    %rcx,%rsi
    6943:	48 89 c7             	mov    %rax,%rdi
    6946:	e8 e5 da ff ff       	call   4430 <vkDestroyPipeline@plt>
}
    694b:	90                   	nop
    694c:	c9                   	leave
    694d:	c3                   	ret

000000000000694e <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks>:

void destroyPipelines(VkDevice device, std::vector<VkPipeline> pipelines,
                      const VkAllocationCallbacks *pAllocator) {
    694e:	55                   	push   %rbp
    694f:	48 89 e5             	mov    %rsp,%rbp
    6952:	48 83 ec 40          	sub    $0x40,%rsp
    6956:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    695a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    695e:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  for (auto &pipeline : pipelines) {
    6962:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6966:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    696a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    696e:	48 89 c7             	mov    %rax,%rdi
    6971:	e8 96 00 00 00       	call   6a0c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>
    6976:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    697a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    697e:	48 89 c7             	mov    %rax,%rdi
    6981:	e8 ac 00 00 00       	call   6a32 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>
    6986:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    698a:	eb 36                	jmp    69c2 <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x74>
    698c:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6990:	48 89 c7             	mov    %rax,%rdi
    6993:	e8 1e 01 00 00       	call   6ab6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>
    6998:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkDestroyPipeline(device, pipeline, pAllocator);
    699c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    69a0:	48 8b 08             	mov    (%rax),%rcx
    69a3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    69a7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    69ab:	48 89 ce             	mov    %rcx,%rsi
    69ae:	48 89 c7             	mov    %rax,%rdi
    69b1:	e8 7a da ff ff       	call   4430 <vkDestroyPipeline@plt>
  for (auto &pipeline : pipelines) {
    69b6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    69ba:	48 89 c7             	mov    %rax,%rdi
    69bd:	e8 d4 00 00 00       	call   6a96 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>
    69c2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    69c6:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    69ca:	48 89 d6             	mov    %rdx,%rsi
    69cd:	48 89 c7             	mov    %rax,%rdi
    69d0:	e8 86 00 00 00       	call   6a5b <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    69d5:	84 c0                	test   %al,%al
    69d7:	75 b3                	jne    698c <_ZN3vkh16destroyPipelinesEP10VkDevice_TSt6vectorIP12VkPipeline_TSaIS4_EEPK21VkAllocationCallbacks+0x3e>
  }
}
    69d9:	90                   	nop
    69da:	90                   	nop
    69db:	c9                   	leave
    69dc:	c3                   	ret

00000000000069dd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>:

void destroyCommandPool(VkDevice device, VkCommandPool commandPool,
                        const VkAllocationCallbacks *pAllocator) {
    69dd:	55                   	push   %rbp
    69de:	48 89 e5             	mov    %rsp,%rbp
    69e1:	48 83 ec 20          	sub    $0x20,%rsp
    69e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    69e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    69ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  vkDestroyCommandPool(device, commandPool, pAllocator);
    69f1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    69f5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    69f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    69fd:	48 89 ce             	mov    %rcx,%rsi
    6a00:	48 89 c7             	mov    %rax,%rdi
    6a03:	e8 98 db ff ff       	call   45a0 <vkDestroyCommandPool@plt>
}
    6a08:	90                   	nop
    6a09:	c9                   	leave
    6a0a:	c3                   	ret
    6a0b:	90                   	nop

0000000000006a0c <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    6a0c:	55                   	push   %rbp
    6a0d:	48 89 e5             	mov    %rsp,%rbp
    6a10:	48 83 ec 20          	sub    $0x20,%rsp
    6a14:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    6a18:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    6a1c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a20:	48 89 d6             	mov    %rdx,%rsi
    6a23:	48 89 c7             	mov    %rax,%rdi
    6a26:	e8 9d 00 00 00       	call   6ac8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6a2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a2f:	c9                   	leave
    6a30:	c3                   	ret
    6a31:	90                   	nop

0000000000006a32 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    6a32:	55                   	push   %rbp
    6a33:	48 89 e5             	mov    %rsp,%rbp
    6a36:	48 83 ec 20          	sub    $0x20,%rsp
    6a3a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    6a3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a42:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6a46:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    6a4a:	48 89 d6             	mov    %rdx,%rsi
    6a4d:	48 89 c7             	mov    %rax,%rdi
    6a50:	e8 73 00 00 00       	call   6ac8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
    6a55:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6a59:	c9                   	leave
    6a5a:	c3                   	ret

0000000000006a5b <_ZN9__gnu_cxxneIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    { return __lhs.base() != __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline bool
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    6a5b:	55                   	push   %rbp
    6a5c:	48 89 e5             	mov    %rsp,%rbp
    6a5f:	53                   	push   %rbx
    6a60:	48 83 ec 18          	sub    $0x18,%rsp
    6a64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    6a68:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	       const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() != __rhs.base(); }
    6a6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    6a70:	48 89 c7             	mov    %rax,%rdi
    6a73:	e8 6e 00 00 00       	call   6ae6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6a78:	48 8b 18             	mov    (%rax),%rbx
    6a7b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6a7f:	48 89 c7             	mov    %rax,%rdi
    6a82:	e8 5f 00 00 00       	call   6ae6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>
    6a87:	48 8b 00             	mov    (%rax),%rax
    6a8a:	48 39 c3             	cmp    %rax,%rbx
    6a8d:	0f 95 c0             	setne  %al
    6a90:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6a94:	c9                   	leave
    6a95:	c3                   	ret

0000000000006a96 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    6a96:	55                   	push   %rbp
    6a97:	48 89 e5             	mov    %rsp,%rbp
    6a9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    6a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aa2:	48 8b 00             	mov    (%rax),%rax
    6aa5:	48 8d 50 08          	lea    0x8(%rax),%rdx
    6aa9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6aad:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    6ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    6ab4:	5d                   	pop    %rbp
    6ab5:	c3                   	ret

0000000000006ab6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    6ab6:	55                   	push   %rbp
    6ab7:	48 89 e5             	mov    %rsp,%rbp
    6aba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    6abe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6ac2:	48 8b 00             	mov    (%rax),%rax
    6ac5:	5d                   	pop    %rbp
    6ac6:	c3                   	ret
    6ac7:	90                   	nop

0000000000006ac8 <_ZN9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    6ac8:	55                   	push   %rbp
    6ac9:	48 89 e5             	mov    %rsp,%rbp
    6acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    6ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    6ad4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    6ad8:	48 8b 10             	mov    (%rax),%rdx
    6adb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6adf:	48 89 10             	mov    %rdx,(%rax)
    6ae2:	90                   	nop
    6ae3:	5d                   	pop    %rbp
    6ae4:	c3                   	ret
    6ae5:	90                   	nop

0000000000006ae6 <_ZNK9__gnu_cxx17__normal_iteratorIPP12VkPipeline_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    6ae6:	55                   	push   %rbp
    6ae7:	48 89 e5             	mov    %rsp,%rbp
    6aea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    6aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    6af2:	5d                   	pop    %rbp
    6af3:	c3                   	ret

0000000000006af4 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv>:
#include "get_list.hpp"

namespace vkh {

std::vector<VkLayerProperties> getAvailableInstanceLayerPropertyList() {
    6af4:	55                   	push   %rbp
    6af5:	48 89 e5             	mov    %rsp,%rbp
    6af8:	53                   	push   %rbx
    6af9:	48 83 ec 28          	sub    $0x28,%rsp
    6afd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6b01:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6b05:	be 00 00 00 00       	mov    $0x0,%esi
    6b0a:	48 89 c7             	mov    %rax,%rdi
    6b0d:	e8 4e d9 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6b12:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6b15:	89 c3                	mov    %eax,%ebx
    6b17:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b1b:	48 89 c7             	mov    %rax,%rdi
    6b1e:	e8 47 11 00 00       	call   7c6a <_ZNSaI17VkLayerPropertiesEC1Ev>
    6b23:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6b27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b2b:	48 89 de             	mov    %rbx,%rsi
    6b2e:	48 89 c7             	mov    %rax,%rdi
    6b31:	e8 6c 11 00 00       	call   7ca2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6b36:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b3a:	48 89 c7             	mov    %rax,%rdi
    6b3d:	e8 44 11 00 00       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6b42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b46:	48 89 c7             	mov    %rax,%rdi
    6b49:	e8 0e 12 00 00       	call   7d5c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6b4e:	48 89 c2             	mov    %rax,%rdx
    6b51:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6b55:	48 89 d6             	mov    %rdx,%rsi
    6b58:	48 89 c7             	mov    %rax,%rdi
    6b5b:	e8 00 d9 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6b60:	eb 34                	jmp    6b96 <_ZN3vkh37getAvailableInstanceLayerPropertyListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6b62:	48 89 c3             	mov    %rax,%rbx
    6b65:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6b69:	48 89 c7             	mov    %rax,%rdi
    6b6c:	e8 15 11 00 00       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
    6b71:	48 89 d8             	mov    %rbx,%rax
    6b74:	48 89 c7             	mov    %rax,%rdi
    6b77:	e8 54 db ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    6b7c:	48 89 c3             	mov    %rax,%rbx
    6b7f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b83:	48 89 c7             	mov    %rax,%rdi
    6b86:	e8 8d 11 00 00       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6b8b:	48 89 d8             	mov    %rbx,%rax
    6b8e:	48 89 c7             	mov    %rax,%rdi
    6b91:	e8 3a db ff ff       	call   46d0 <_Unwind_Resume@plt>
    6b96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6b9a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6b9e:	c9                   	leave
    6b9f:	c3                   	ret

0000000000006ba0 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>:

std::vector<VkExtensionProperties>
getAvailableInstanceExtensionList(const char *pLayerName) {
    6ba0:	55                   	push   %rbp
    6ba1:	48 89 e5             	mov    %rsp,%rbp
    6ba4:	41 54                	push   %r12
    6ba6:	53                   	push   %rbx
    6ba7:	48 83 ec 20          	sub    $0x20,%rsp
    6bab:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6baf:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6bb3:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6bb7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6bbb:	ba 00 00 00 00       	mov    $0x0,%edx
    6bc0:	48 89 ce             	mov    %rcx,%rsi
    6bc3:	48 89 c7             	mov    %rax,%rdi
    6bc6:	e8 f5 d6 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             nullptr) != VK_SUCCESS) {
    6bcb:	85 c0                	test   %eax,%eax
    6bcd:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6bd0:	84 c0                	test   %al,%al
    6bd2:	74 3b                	je     6c0f <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x6f>
    throw std::runtime_error("Failed to get instance extension list.");
    6bd4:	bf 10 00 00 00       	mov    $0x10,%edi
    6bd9:	e8 92 d5 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6bde:	48 89 c3             	mov    %rax,%rbx
    6be1:	48 8d 05 70 13 01 00 	lea    0x11370(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6be8:	48 89 c6             	mov    %rax,%rsi
    6beb:	48 89 df             	mov    %rbx,%rdi
    6bee:	e8 0d d5 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6bf3:	48 8b 05 ae f3 01 00 	mov    0x1f3ae(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6bfa:	48 89 c2             	mov    %rax,%rdx
    6bfd:	48 8d 05 3c f1 01 00 	lea    0x1f13c(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c04:	48 89 c6             	mov    %rax,%rsi
    6c07:	48 89 df             	mov    %rbx,%rdi
    6c0a:	e8 61 da ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6c0f:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6c12:	89 c3                	mov    %eax,%ebx
    6c14:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c18:	48 89 c7             	mov    %rax,%rdi
    6c1b:	e8 b8 11 00 00       	call   7dd8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6c20:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6c24:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c28:	48 89 de             	mov    %rbx,%rsi
    6c2b:	48 89 c7             	mov    %rax,%rdi
    6c2e:	e8 dd 11 00 00       	call   7e10 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6c33:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6c37:	48 89 c7             	mov    %rax,%rdi
    6c3a:	e8 b5 11 00 00       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6c43:	48 89 c7             	mov    %rax,%rdi
    6c46:	e8 7f 12 00 00       	call   7eca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6c4b:	48 89 c2             	mov    %rax,%rdx
    6c4e:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6c52:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6c56:	48 89 ce             	mov    %rcx,%rsi
    6c59:	48 89 c7             	mov    %rax,%rdi
    6c5c:	e8 5f d6 ff ff       	call   42c0 <vkEnumerateInstanceExtensionProperties@plt>
                                             instanceExtensions.data()) !=
    6c61:	85 c0                	test   %eax,%eax
    6c63:	0f 95 c0             	setne  %al
  if (vkEnumerateInstanceExtensionProperties(pLayerName, &propertyCount,
    6c66:	84 c0                	test   %al,%al
    6c68:	0f 84 95 00 00 00    	je     6d03 <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x163>
      VK_SUCCESS) {
    throw std::runtime_error("Failed to get instance extension list.");
    6c6e:	bf 10 00 00 00       	mov    $0x10,%edi
    6c73:	e8 f8 d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6c78:	48 89 c3             	mov    %rax,%rbx
    6c7b:	48 8d 05 d6 12 01 00 	lea    0x112d6(%rip),%rax        # 17f58 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    6c82:	48 89 c6             	mov    %rax,%rsi
    6c85:	48 89 df             	mov    %rbx,%rdi
    6c88:	e8 73 d4 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6c8d:	48 8b 05 14 f3 01 00 	mov    0x1f314(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6c94:	48 89 c2             	mov    %rax,%rdx
    6c97:	48 8d 05 a2 f0 01 00 	lea    0x1f0a2(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6c9e:	48 89 c6             	mov    %rax,%rsi
    6ca1:	48 89 df             	mov    %rbx,%rdi
    6ca4:	e8 c7 d9 ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6ca9:	49 89 c4             	mov    %rax,%r12
    6cac:	48 89 df             	mov    %rbx,%rdi
    6caf:	e8 8c d5 ff ff       	call   4240 <__cxa_free_exception@plt>
    6cb4:	4c 89 e0             	mov    %r12,%rax
    6cb7:	48 89 c7             	mov    %rax,%rdi
    6cba:	e8 11 da ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> instanceExtensions{propertyCount};
    6cbf:	48 89 c3             	mov    %rax,%rbx
    6cc2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6cc6:	48 89 c7             	mov    %rax,%rdi
    6cc9:	e8 26 11 00 00       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6cce:	48 89 d8             	mov    %rbx,%rax
    6cd1:	48 89 c7             	mov    %rax,%rdi
    6cd4:	e8 f7 d9 ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get instance extension list.");
    6cd9:	49 89 c4             	mov    %rax,%r12
    6cdc:	48 89 df             	mov    %rbx,%rdi
    6cdf:	e8 5c d5 ff ff       	call   4240 <__cxa_free_exception@plt>
    6ce4:	4c 89 e3             	mov    %r12,%rbx
    6ce7:	eb 03                	jmp    6cec <_ZN3vkh33getAvailableInstanceExtensionListEPKc+0x14c>
  }
  return instanceExtensions;
}
    6ce9:	48 89 c3             	mov    %rax,%rbx
    6cec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6cf0:	48 89 c7             	mov    %rax,%rdi
    6cf3:	e8 8e 11 00 00       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6cf8:	48 89 d8             	mov    %rbx,%rax
    6cfb:	48 89 c7             	mov    %rax,%rdi
    6cfe:	e8 cd d9 ff ff       	call   46d0 <_Unwind_Resume@plt>
  return instanceExtensions;
    6d03:	90                   	nop
}
    6d04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d08:	48 83 c4 20          	add    $0x20,%rsp
    6d0c:	5b                   	pop    %rbx
    6d0d:	41 5c                	pop    %r12
    6d0f:	5d                   	pop    %rbp
    6d10:	c3                   	ret

0000000000006d11 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>:

std::vector<VkExtensionProperties>
getAvailableDeviceExtensionList(VkPhysicalDevice physicalDevice,
                                const char *pLayerName) {
    6d11:	55                   	push   %rbp
    6d12:	48 89 e5             	mov    %rsp,%rbp
    6d15:	41 54                	push   %r12
    6d17:	53                   	push   %rbx
    6d18:	48 83 ec 30          	sub    $0x30,%rsp
    6d1c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6d20:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    6d24:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t propertyCount;
  if (vkEnumerateDeviceExtensionProperties(
    6d28:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6d2c:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6d30:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6d34:	b9 00 00 00 00       	mov    $0x0,%ecx
    6d39:	48 89 c7             	mov    %rax,%rdi
    6d3c:	e8 3f d8 ff ff       	call   4580 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount, nullptr) != VK_SUCCESS) {
    6d41:	85 c0                	test   %eax,%eax
    6d43:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6d46:	84 c0                	test   %al,%al
    6d48:	74 3b                	je     6d85 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x74>
    throw std::runtime_error("Failed to get device extension list.");
    6d4a:	bf 10 00 00 00       	mov    $0x10,%edi
    6d4f:	e8 1c d4 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6d54:	48 89 c3             	mov    %rax,%rbx
    6d57:	48 8d 05 22 12 01 00 	lea    0x11222(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6d5e:	48 89 c6             	mov    %rax,%rsi
    6d61:	48 89 df             	mov    %rbx,%rdi
    6d64:	e8 97 d3 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6d69:	48 8b 05 38 f2 01 00 	mov    0x1f238(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6d70:	48 89 c2             	mov    %rax,%rdx
    6d73:	48 8d 05 c6 ef 01 00 	lea    0x1efc6(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6d7a:	48 89 c6             	mov    %rax,%rsi
    6d7d:	48 89 df             	mov    %rbx,%rdi
    6d80:	e8 eb d8 ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6d85:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6d88:	89 c3                	mov    %eax,%ebx
    6d8a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6d8e:	48 89 c7             	mov    %rax,%rdi
    6d91:	e8 42 10 00 00       	call   7dd8 <_ZNSaI21VkExtensionPropertiesEC1Ev>
    6d96:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6d9a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6d9e:	48 89 de             	mov    %rbx,%rsi
    6da1:	48 89 c7             	mov    %rax,%rdi
    6da4:	e8 67 10 00 00       	call   7e10 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
    6da9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6dad:	48 89 c7             	mov    %rax,%rdi
    6db0:	e8 3f 10 00 00       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
  if (vkEnumerateDeviceExtensionProperties(
    6db5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6db9:	48 89 c7             	mov    %rax,%rdi
    6dbc:	e8 09 11 00 00       	call   7eca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>
    6dc1:	48 89 c1             	mov    %rax,%rcx
    6dc4:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    6dc8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    6dcc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    6dd0:	48 89 c7             	mov    %rax,%rdi
    6dd3:	e8 a8 d7 ff ff       	call   4580 <vkEnumerateDeviceExtensionProperties@plt>
          physicalDevice, pLayerName, &propertyCount,
          deviceExtensions.data()) != VK_SUCCESS) {
    6dd8:	85 c0                	test   %eax,%eax
    6dda:	0f 95 c0             	setne  %al
  if (vkEnumerateDeviceExtensionProperties(
    6ddd:	84 c0                	test   %al,%al
    6ddf:	0f 84 95 00 00 00    	je     6e7a <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x169>
    throw std::runtime_error("Failed to get device extension list.");
    6de5:	bf 10 00 00 00       	mov    $0x10,%edi
    6dea:	e8 81 d3 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    6def:	48 89 c3             	mov    %rax,%rbx
    6df2:	48 8d 05 87 11 01 00 	lea    0x11187(%rip),%rax        # 17f80 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x30>
    6df9:	48 89 c6             	mov    %rax,%rsi
    6dfc:	48 89 df             	mov    %rbx,%rdi
    6dff:	e8 fc d2 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    6e04:	48 8b 05 9d f1 01 00 	mov    0x1f19d(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    6e0b:	48 89 c2             	mov    %rax,%rdx
    6e0e:	48 8d 05 2b ef 01 00 	lea    0x1ef2b(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    6e15:	48 89 c6             	mov    %rax,%rsi
    6e18:	48 89 df             	mov    %rbx,%rdi
    6e1b:	e8 50 d8 ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6e20:	49 89 c4             	mov    %rax,%r12
    6e23:	48 89 df             	mov    %rbx,%rdi
    6e26:	e8 15 d4 ff ff       	call   4240 <__cxa_free_exception@plt>
    6e2b:	4c 89 e0             	mov    %r12,%rax
    6e2e:	48 89 c7             	mov    %rax,%rdi
    6e31:	e8 9a d8 ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkExtensionProperties> deviceExtensions{propertyCount};
    6e36:	48 89 c3             	mov    %rax,%rbx
    6e39:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6e3d:	48 89 c7             	mov    %rax,%rdi
    6e40:	e8 af 0f 00 00       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    6e45:	48 89 d8             	mov    %rbx,%rax
    6e48:	48 89 c7             	mov    %rax,%rdi
    6e4b:	e8 80 d8 ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get device extension list.");
    6e50:	49 89 c4             	mov    %rax,%r12
    6e53:	48 89 df             	mov    %rbx,%rdi
    6e56:	e8 e5 d3 ff ff       	call   4240 <__cxa_free_exception@plt>
    6e5b:	4c 89 e3             	mov    %r12,%rbx
    6e5e:	eb 03                	jmp    6e63 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc+0x152>
  }
  return deviceExtensions;
}
    6e60:	48 89 c3             	mov    %rax,%rbx
    6e63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e67:	48 89 c7             	mov    %rax,%rdi
    6e6a:	e8 17 10 00 00       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    6e6f:	48 89 d8             	mov    %rbx,%rax
    6e72:	48 89 c7             	mov    %rax,%rdi
    6e75:	e8 56 d8 ff ff       	call   46d0 <_Unwind_Resume@plt>
  return deviceExtensions;
    6e7a:	90                   	nop
}
    6e7b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6e7f:	48 83 c4 30          	add    $0x30,%rsp
    6e83:	5b                   	pop    %rbx
    6e84:	41 5c                	pop    %r12
    6e86:	5d                   	pop    %rbp
    6e87:	c3                   	ret

0000000000006e88 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>:

std::vector<const char *> getRequiredInstanceExtensionNameList() {
    6e88:	55                   	push   %rbp
    6e89:	48 89 e5             	mov    %rsp,%rbp
    6e8c:	53                   	push   %rbx
    6e8d:	48 83 ec 38          	sub    $0x38,%rsp
    6e91:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  uint32_t requiredExtensionCount;
  const char **ppRequiredExtensions =
      glfwGetRequiredInstanceExtensions(&requiredExtensionCount);
    6e95:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
    6e99:	48 89 c7             	mov    %rax,%rdi
    6e9c:	e8 bf d3 ff ff       	call   4260 <glfwGetRequiredInstanceExtensions@plt>
    6ea1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6ea5:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6ea8:	89 c3                	mov    %eax,%ebx
    6eaa:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6eae:	48 89 c7             	mov    %rax,%rdi
    6eb1:	e8 90 10 00 00       	call   7f46 <_ZNSaIPKcEC1Ev>
    6eb6:	48 8d 55 df          	lea    -0x21(%rbp),%rdx
    6eba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6ebe:	48 89 de             	mov    %rbx,%rsi
    6ec1:	48 89 c7             	mov    %rax,%rdi
    6ec4:	e8 b5 10 00 00       	call   7f7e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>
    6ec9:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6ecd:	48 89 c7             	mov    %rax,%rdi
    6ed0:	e8 8d 10 00 00       	call   7f62 <_ZNSaIPKcED1Ev>
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6ed5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    6edc:	eb 2e                	jmp    6f0c <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x84>
    requiredInstanceExtensions[i] = ppRequiredExtensions[i];
    6ede:	8b 45 ec             	mov    -0x14(%rbp),%eax
    6ee1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    6ee8:	00 
    6ee9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    6eed:	48 01 d0             	add    %rdx,%rax
    6ef0:	48 8b 18             	mov    (%rax),%rbx
    6ef3:	8b 55 ec             	mov    -0x14(%rbp),%edx
    6ef6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6efa:	48 89 d6             	mov    %rdx,%rsi
    6efd:	48 89 c7             	mov    %rax,%rdi
    6f00:	e8 ef 10 00 00       	call   7ff4 <_ZNSt6vectorIPKcSaIS1_EEixEm>
    6f05:	48 89 18             	mov    %rbx,(%rax)
  for (uint32_t i = 0; i < requiredExtensionCount; ++i) {
    6f08:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    6f0c:	8b 45 d8             	mov    -0x28(%rbp),%eax
    6f0f:	39 45 ec             	cmp    %eax,-0x14(%rbp)
    6f12:	72 ca                	jb     6ede <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0x56>
  }
  return requiredInstanceExtensions;
    6f14:	eb 1a                	jmp    6f30 <_ZN3vkh36getRequiredInstanceExtensionNameListEv+0xa8>
  std::vector<const char *> requiredInstanceExtensions{requiredExtensionCount};
    6f16:	48 89 c3             	mov    %rax,%rbx
    6f19:	48 8d 45 df          	lea    -0x21(%rbp),%rax
    6f1d:	48 89 c7             	mov    %rax,%rdi
    6f20:	e8 3d 10 00 00       	call   7f62 <_ZNSaIPKcED1Ev>
    6f25:	48 89 d8             	mov    %rbx,%rax
    6f28:	48 89 c7             	mov    %rax,%rdi
    6f2b:	e8 a0 d7 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    6f30:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    6f34:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6f38:	c9                   	leave
    6f39:	c3                   	ret

0000000000006f3a <_ZN3vkh29getAvailableInstanceLayerListEv>:

std::vector<VkLayerProperties> getAvailableInstanceLayerList() {
    6f3a:	55                   	push   %rbp
    6f3b:	48 89 e5             	mov    %rsp,%rbp
    6f3e:	53                   	push   %rbx
    6f3f:	48 83 ec 28          	sub    $0x28,%rsp
    6f43:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    6f47:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f4b:	be 00 00 00 00       	mov    $0x0,%esi
    6f50:	48 89 c7             	mov    %rax,%rdi
    6f53:	e8 08 d5 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6f58:	8b 45 e8             	mov    -0x18(%rbp),%eax
    6f5b:	89 c3                	mov    %eax,%ebx
    6f5d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f61:	48 89 c7             	mov    %rax,%rdi
    6f64:	e8 01 0d 00 00       	call   7c6a <_ZNSaI17VkLayerPropertiesEC1Ev>
    6f69:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    6f6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f71:	48 89 de             	mov    %rbx,%rsi
    6f74:	48 89 c7             	mov    %rax,%rdi
    6f77:	e8 26 0d 00 00       	call   7ca2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    6f7c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6f80:	48 89 c7             	mov    %rax,%rdi
    6f83:	e8 fe 0c 00 00       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    6f88:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6f8c:	48 89 c7             	mov    %rax,%rdi
    6f8f:	e8 c8 0d 00 00       	call   7d5c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    6f94:	48 89 c2             	mov    %rax,%rdx
    6f97:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    6f9b:	48 89 d6             	mov    %rdx,%rsi
    6f9e:	48 89 c7             	mov    %rax,%rdi
    6fa1:	e8 ba d4 ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  return availableLayers;
    6fa6:	eb 34                	jmp    6fdc <_ZN3vkh29getAvailableInstanceLayerListEv+0xa2>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    6fa8:	48 89 c3             	mov    %rax,%rbx
    6fab:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    6faf:	48 89 c7             	mov    %rax,%rdi
    6fb2:	e8 cf 0c 00 00       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
    6fb7:	48 89 d8             	mov    %rbx,%rax
    6fba:	48 89 c7             	mov    %rax,%rdi
    6fbd:	e8 0e d7 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    6fc2:	48 89 c3             	mov    %rax,%rbx
    6fc5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fc9:	48 89 c7             	mov    %rax,%rdi
    6fcc:	e8 47 0d 00 00       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    6fd1:	48 89 d8             	mov    %rbx,%rax
    6fd4:	48 89 c7             	mov    %rax,%rdi
    6fd7:	e8 f4 d6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    6fdc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    6fe0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    6fe4:	c9                   	leave
    6fe5:	c3                   	ret

0000000000006fe6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>:

std::vector<VkPhysicalDevice> getPhysicalDeviceList(VkInstance instance) {
    6fe6:	55                   	push   %rbp
    6fe7:	48 89 e5             	mov    %rsp,%rbp
    6fea:	41 54                	push   %r12
    6fec:	53                   	push   %rbx
    6fed:	48 83 ec 20          	sub    $0x20,%rsp
    6ff1:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    6ff5:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t physicalDeviceCount;
  vkEnumeratePhysicalDevices(instance, &physicalDeviceCount, nullptr);
    6ff9:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    6ffd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7001:	ba 00 00 00 00       	mov    $0x0,%edx
    7006:	48 89 ce             	mov    %rcx,%rsi
    7009:	48 89 c7             	mov    %rax,%rdi
    700c:	e8 7f d1 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
  if (physicalDeviceCount == 0) {
    7011:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7014:	85 c0                	test   %eax,%eax
    7016:	75 3b                	jne    7053 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x6d>
    throw std::runtime_error(
        "Failed to find any physical device with Vulkan support.");
    7018:	bf 10 00 00 00       	mov    $0x10,%edi
    701d:	e8 4e d1 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7022:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    7025:	48 8d 05 7c 0f 01 00 	lea    0x10f7c(%rip),%rax        # 17fa8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x58>
    702c:	48 89 c6             	mov    %rax,%rsi
    702f:	48 89 df             	mov    %rbx,%rdi
    7032:	e8 c9 d0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "Failed to find any physical device with Vulkan support.");
    7037:	48 8b 05 6a ef 01 00 	mov    0x1ef6a(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    703e:	48 89 c2             	mov    %rax,%rdx
    7041:	48 8d 05 f8 ec 01 00 	lea    0x1ecf8(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7048:	48 89 c6             	mov    %rax,%rsi
    704b:	48 89 df             	mov    %rbx,%rdi
    704e:	e8 1d d6 ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7053:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7056:	89 c3                	mov    %eax,%ebx
    7058:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    705c:	48 89 c7             	mov    %rax,%rdi
    705f:	e8 fe 0f 00 00       	call   8062 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>
    7064:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7068:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    706c:	48 89 de             	mov    %rbx,%rsi
    706f:	48 89 c7             	mov    %rax,%rdi
    7072:	e8 23 10 00 00       	call   809a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
    7077:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    707b:	48 89 c7             	mov    %rax,%rdi
    707e:	e8 fb 0f 00 00       	call   807e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    7083:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7087:	48 89 c7             	mov    %rax,%rdi
    708a:	e8 c5 10 00 00       	call   8154 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>
    708f:	48 89 c2             	mov    %rax,%rdx
    7092:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    7096:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    709a:	48 89 ce             	mov    %rcx,%rsi
    709d:	48 89 c7             	mov    %rax,%rdi
    70a0:	e8 eb d0 ff ff       	call   4190 <vkEnumeratePhysicalDevices@plt>
                                 physicalDevices.data()) != VK_SUCCESS) {
    70a5:	85 c0                	test   %eax,%eax
    70a7:	0f 95 c0             	setne  %al
  if (vkEnumeratePhysicalDevices(instance, &physicalDeviceCount,
    70aa:	84 c0                	test   %al,%al
    70ac:	0f 84 95 00 00 00    	je     7147 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x161>
    throw std::runtime_error("Failed to get physical devices list.");
    70b2:	bf 10 00 00 00       	mov    $0x10,%edi
    70b7:	e8 b4 d0 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    70bc:	48 89 c3             	mov    %rax,%rbx
    70bf:	48 8d 05 1a 0f 01 00 	lea    0x10f1a(%rip),%rax        # 17fe0 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x90>
    70c6:	48 89 c6             	mov    %rax,%rsi
    70c9:	48 89 df             	mov    %rbx,%rdi
    70cc:	e8 2f d0 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    70d1:	48 8b 05 d0 ee 01 00 	mov    0x1eed0(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    70d8:	48 89 c2             	mov    %rax,%rdx
    70db:	48 8d 05 5e ec 01 00 	lea    0x1ec5e(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    70e2:	48 89 c6             	mov    %rax,%rsi
    70e5:	48 89 df             	mov    %rbx,%rdi
    70e8:	e8 83 d5 ff ff       	call   4670 <__cxa_throw@plt>
        "Failed to find any physical device with Vulkan support.");
    70ed:	49 89 c4             	mov    %rax,%r12
    70f0:	48 89 df             	mov    %rbx,%rdi
    70f3:	e8 48 d1 ff ff       	call   4240 <__cxa_free_exception@plt>
    70f8:	4c 89 e0             	mov    %r12,%rax
    70fb:	48 89 c7             	mov    %rax,%rdi
    70fe:	e8 cd d5 ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkPhysicalDevice> physicalDevices{physicalDeviceCount};
    7103:	48 89 c3             	mov    %rax,%rbx
    7106:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    710a:	48 89 c7             	mov    %rax,%rdi
    710d:	e8 6c 0f 00 00       	call   807e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7112:	48 89 d8             	mov    %rbx,%rax
    7115:	48 89 c7             	mov    %rax,%rdi
    7118:	e8 b3 d5 ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get physical devices list.");
    711d:	49 89 c4             	mov    %rax,%r12
    7120:	48 89 df             	mov    %rbx,%rdi
    7123:	e8 18 d1 ff ff       	call   4240 <__cxa_free_exception@plt>
    7128:	4c 89 e3             	mov    %r12,%rbx
    712b:	eb 03                	jmp    7130 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T+0x14a>
  };
  return physicalDevices;
}
    712d:	48 89 c3             	mov    %rax,%rbx
    7130:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7134:	48 89 c7             	mov    %rax,%rdi
    7137:	e8 d4 0f 00 00       	call   8110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    713c:	48 89 d8             	mov    %rbx,%rax
    713f:	48 89 c7             	mov    %rax,%rdi
    7142:	e8 89 d5 ff ff       	call   46d0 <_Unwind_Resume@plt>
  return physicalDevices;
    7147:	90                   	nop
}
    7148:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    714c:	48 83 c4 20          	add    $0x20,%rsp
    7150:	5b                   	pop    %rbx
    7151:	41 5c                	pop    %r12
    7153:	5d                   	pop    %rbp
    7154:	c3                   	ret

0000000000007155 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>:

VkPhysicalDeviceProperties
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice) {
    7155:	55                   	push   %rbp
    7156:	48 89 e5             	mov    %rsp,%rbp
    7159:	48 83 ec 10          	sub    $0x10,%rsp
    715d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7161:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  VkPhysicalDeviceProperties properties;
  vkGetPhysicalDeviceProperties(physicalDevice, &properties);
    7165:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    7169:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    716d:	48 89 d6             	mov    %rdx,%rsi
    7170:	48 89 c7             	mov    %rax,%rdi
    7173:	e8 98 cf ff ff       	call   4110 <vkGetPhysicalDeviceProperties@plt>
  return properties;
    7178:	90                   	nop
}
    7179:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    717d:	c9                   	leave
    717e:	c3                   	ret

000000000000717f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>:

VkPhysicalDeviceProperties2
getPhysicalDevicePropertyList(VkPhysicalDevice physicalDevice,
                              void *pNextProperty) {
    717f:	55                   	push   %rbp
    7180:	48 89 e5             	mov    %rsp,%rbp
    7183:	48 83 ec 20          	sub    $0x20,%rsp
    7187:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    718b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    718f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  VkPhysicalDeviceProperties2 properties;
  properties.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2;
    7193:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7197:	c7 00 79 b0 9b 3b    	movl   $0x3b9bb079,(%rax)
  properties.pNext = pNextProperty;
    719d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71a1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    71a5:	48 89 50 08          	mov    %rdx,0x8(%rax)
  vkGetPhysicalDeviceProperties2(physicalDevice, &properties);
    71a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    71ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    71b1:	48 89 d6             	mov    %rdx,%rsi
    71b4:	48 89 c7             	mov    %rax,%rdi
    71b7:	e8 74 d1 ff ff       	call   4330 <vkGetPhysicalDeviceProperties2@plt>
  return properties;
    71bc:	90                   	nop
}
    71bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    71c1:	c9                   	leave
    71c2:	c3                   	ret

00000000000071c3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<VkQueueFamilyProperties>
getPhysicalDeviceQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    71c3:	55                   	push   %rbp
    71c4:	48 89 e5             	mov    %rsp,%rbp
    71c7:	53                   	push   %rbx
    71c8:	48 83 ec 28          	sub    $0x28,%rsp
    71cc:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    71d0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  uint32_t queueFamilyPropertyCount;
  vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice,
    71d4:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    71d8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    71dc:	ba 00 00 00 00       	mov    $0x0,%edx
    71e1:	48 89 ce             	mov    %rcx,%rsi
    71e4:	48 89 c7             	mov    %rax,%rdi
    71e7:	e8 64 d0 ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
                                           &queueFamilyPropertyCount, nullptr);
  std::vector<VkQueueFamilyProperties> queueFamilyProperties{
      queueFamilyPropertyCount};
    71ec:	8b 45 e8             	mov    -0x18(%rbp),%eax
    71ef:	89 c3                	mov    %eax,%ebx
    71f1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    71f5:	48 89 c7             	mov    %rax,%rdi
    71f8:	e8 c9 0f 00 00       	call   81c6 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>
    71fd:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7201:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7205:	48 89 de             	mov    %rbx,%rsi
    7208:	48 89 c7             	mov    %rax,%rdi
    720b:	e8 ee 0f 00 00       	call   81fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
    7210:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7214:	48 89 c7             	mov    %rax,%rdi
    7217:	e8 c6 0f 00 00       	call   81e2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
  vkGetPhysicalDeviceQueueFamilyProperties(
    721c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7220:	48 89 c7             	mov    %rax,%rdi
    7223:	e8 90 10 00 00       	call   82b8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>
    7228:	48 89 c2             	mov    %rax,%rdx
    722b:	48 8d 4d e8          	lea    -0x18(%rbp),%rcx
    722f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7233:	48 89 ce             	mov    %rcx,%rsi
    7236:	48 89 c7             	mov    %rax,%rdi
    7239:	e8 12 d0 ff ff       	call   4250 <vkGetPhysicalDeviceQueueFamilyProperties@plt>
      physicalDevice, &queueFamilyPropertyCount, queueFamilyProperties.data());
  return queueFamilyProperties;
    723e:	eb 34                	jmp    7274 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xb1>
      queueFamilyPropertyCount};
    7240:	48 89 c3             	mov    %rax,%rbx
    7243:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7247:	48 89 c7             	mov    %rax,%rdi
    724a:	e8 93 0f 00 00       	call   81e2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    724f:	48 89 d8             	mov    %rbx,%rax
    7252:	48 89 c7             	mov    %rax,%rdi
    7255:	e8 76 d4 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    725a:	48 89 c3             	mov    %rax,%rbx
    725d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7261:	48 89 c7             	mov    %rax,%rdi
    7264:	e8 0b 10 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7269:	48 89 d8             	mov    %rbx,%rax
    726c:	48 89 c7             	mov    %rax,%rdi
    726f:	e8 5c d4 ff ff       	call   46d0 <_Unwind_Resume@plt>
    7274:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7278:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    727c:	c9                   	leave
    727d:	c3                   	ret

000000000000727e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getGraphicsQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    727e:	55                   	push   %rbp
    727f:	48 89 e5             	mov    %rsp,%rbp
    7282:	53                   	push   %rbx
    7283:	48 83 ec 68          	sub    $0x68,%rsp
    7287:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    728b:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    728f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7293:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    7297:	48 89 d6             	mov    %rdx,%rsi
    729a:	48 89 c7             	mov    %rax,%rdi
    729d:	e8 21 ff ff ff       	call   71c3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> graphicsQueueFamilies{
      queueFamilyProps.size()};
    72a2:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72a6:	48 89 c7             	mov    %rax,%rdi
    72a9:	e8 86 10 00 00       	call   8334 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    72ae:	48 89 c3             	mov    %rax,%rbx
    72b1:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    72b5:	48 89 c7             	mov    %rax,%rdi
    72b8:	e8 a5 10 00 00       	call   8362 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    72bd:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    72c1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    72c5:	48 89 de             	mov    %rbx,%rsi
    72c8:	48 89 c7             	mov    %rax,%rdi
    72cb:	e8 ca 10 00 00       	call   839a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    72d0:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    72d4:	48 89 c7             	mov    %rax,%rdi
    72d7:	e8 a2 10 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    72dc:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    72e3:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    72e4:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    72e8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    72ec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    72f0:	48 89 c7             	mov    %rax,%rdi
    72f3:	e8 5c 11 00 00       	call   8454 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    72f8:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    72fc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7300:	48 89 c7             	mov    %rax,%rdi
    7303:	e8 72 11 00 00       	call   847a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    7308:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    730c:	eb 4e                	jmp    735c <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xde>
    730e:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7312:	48 89 c7             	mov    %rax,%rdi
    7315:	e8 e4 11 00 00       	call   84fe <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    731a:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_GRAPHICS_BIT) {
    731e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7322:	8b 00                	mov    (%rax),%eax
    7324:	83 e0 01             	and    $0x1,%eax
    7327:	85 c0                	test   %eax,%eax
    7329:	74 25                	je     7350 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      graphicsQueueFamilies[index] = queueFamilyProp;
    732b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    732f:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7333:	48 89 d6             	mov    %rdx,%rsi
    7336:	48 89 c7             	mov    %rax,%rdi
    7339:	e8 d2 11 00 00       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    733e:	48 89 c2             	mov    %rax,%rdx
    7341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7345:	48 89 c6             	mov    %rax,%rsi
    7348:	48 89 d7             	mov    %rdx,%rdi
    734b:	e8 ea 11 00 00       	call   853a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7350:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7354:	48 89 c7             	mov    %rax,%rdi
    7357:	e8 82 11 00 00       	call   84de <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    735c:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7360:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7364:	48 89 d6             	mov    %rdx,%rsi
    7367:	48 89 c7             	mov    %rax,%rdi
    736a:	e8 34 11 00 00       	call   84a3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    736f:	84 c0                	test   %al,%al
    7371:	75 9b                	jne    730e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
    }
  }
  return graphicsQueueFamilies;
    7373:	90                   	nop
}
    7374:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7378:	48 89 c7             	mov    %rax,%rdi
    737b:	e8 f4 0e 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return graphicsQueueFamilies;
    7380:	eb 26                	jmp    73a8 <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12a>
      queueFamilyProps.size()};
    7382:	48 89 c3             	mov    %rax,%rbx
    7385:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7389:	48 89 c7             	mov    %rax,%rdi
    738c:	e8 ed 0f 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    7391:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7395:	48 89 c7             	mov    %rax,%rdi
    7398:	e8 d7 0e 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    739d:	48 89 d8             	mov    %rbx,%rax
    73a0:	48 89 c7             	mov    %rax,%rdi
    73a3:	e8 28 d3 ff ff       	call   46d0 <_Unwind_Resume@plt>
    73a8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    73b0:	c9                   	leave
    73b1:	c3                   	ret

00000000000073b2 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getComputeQueueFamilyPropertyList(VkPhysicalDevice physicalDevice) {
    73b2:	55                   	push   %rbp
    73b3:	48 89 e5             	mov    %rsp,%rbp
    73b6:	53                   	push   %rbx
    73b7:	48 83 ec 68          	sub    $0x68,%rsp
    73bb:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
    73bf:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    73c3:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73c7:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
    73cb:	48 89 d6             	mov    %rdx,%rsi
    73ce:	48 89 c7             	mov    %rax,%rdi
    73d1:	e8 ed fd ff ff       	call   71c3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> computeQueueFamilies{
      queueFamilyProps.size()};
    73d6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    73da:	48 89 c7             	mov    %rax,%rdi
    73dd:	e8 52 0f 00 00       	call   8334 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    73e2:	48 89 c3             	mov    %rax,%rbx
    73e5:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    73e9:	48 89 c7             	mov    %rax,%rdi
    73ec:	e8 71 0f 00 00       	call   8362 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    73f1:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    73f5:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    73f9:	48 89 de             	mov    %rbx,%rsi
    73fc:	48 89 c7             	mov    %rax,%rdi
    73ff:	e8 96 0f 00 00       	call   839a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7404:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7408:	48 89 c7             	mov    %rax,%rdi
    740b:	e8 6e 0f 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  std::size_t index = 0;
    7410:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    7417:	00 
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7418:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    741c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7420:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7424:	48 89 c7             	mov    %rax,%rdi
    7427:	e8 28 10 00 00       	call   8454 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    742c:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7430:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7434:	48 89 c7             	mov    %rax,%rdi
    7437:	e8 3e 10 00 00       	call   847a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    743c:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7440:	eb 53                	jmp    7495 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xe3>
    7442:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7446:	48 89 c7             	mov    %rax,%rdi
    7449:	e8 b0 10 00 00       	call   84fe <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    744e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    if (queueFamilyProp.queueFlags & VK_QUEUE_COMPUTE_BIT) {
    7452:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7456:	8b 00                	mov    (%rax),%eax
    7458:	83 e0 02             	and    $0x2,%eax
    745b:	85 c0                	test   %eax,%eax
    745d:	74 25                	je     7484 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0xd2>
      computeQueueFamilies[index] = queueFamilyProp;
    745f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    7463:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    7467:	48 89 d6             	mov    %rdx,%rsi
    746a:	48 89 c7             	mov    %rax,%rdi
    746d:	e8 9e 10 00 00       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    7472:	48 89 c2             	mov    %rax,%rdx
    7475:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7479:	48 89 c6             	mov    %rax,%rsi
    747c:	48 89 d7             	mov    %rdx,%rdi
    747f:	e8 b6 10 00 00       	call   853a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    7484:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    7489:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    748d:	48 89 c7             	mov    %rax,%rdi
    7490:	e8 49 10 00 00       	call   84de <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    7495:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    7499:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    749d:	48 89 d6             	mov    %rdx,%rsi
    74a0:	48 89 c7             	mov    %rax,%rdi
    74a3:	e8 fb 0f 00 00       	call   84a3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    74a8:	84 c0                	test   %al,%al
    74aa:	75 96                	jne    7442 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x90>
  }
  return computeQueueFamilies;
    74ac:	90                   	nop
}
    74ad:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74b1:	48 89 c7             	mov    %rax,%rdi
    74b4:	e8 bb 0d 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return computeQueueFamilies;
    74b9:	eb 26                	jmp    74e1 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T+0x12f>
      queueFamilyProps.size()};
    74bb:	48 89 c3             	mov    %rax,%rbx
    74be:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    74c2:	48 89 c7             	mov    %rax,%rdi
    74c5:	e8 b4 0e 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
}
    74ca:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    74ce:	48 89 c7             	mov    %rax,%rdi
    74d1:	e8 9e 0d 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    74d6:	48 89 d8             	mov    %rbx,%rax
    74d9:	48 89 c7             	mov    %rax,%rdi
    74dc:	e8 ef d1 ff ff       	call   46d0 <_Unwind_Resume@plt>
    74e1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    74e5:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74e9:	c9                   	leave
    74ea:	c3                   	ret

00000000000074eb <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<std::optional<VkQueueFamilyProperties>>
getPresentQueueFamilyPropertyList(VkPhysicalDevice physicalDevice,
                                  VkSurfaceKHR surface) {
    74eb:	55                   	push   %rbp
    74ec:	48 89 e5             	mov    %rsp,%rbp
    74ef:	53                   	push   %rbx
    74f0:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    74f7:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
    74fb:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    74ff:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
  auto queueFamilyProps =
      getPhysicalDeviceQueueFamilyPropertyList(physicalDevice);
    7506:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    750a:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
    750e:	48 89 d6             	mov    %rdx,%rsi
    7511:	48 89 c7             	mov    %rax,%rdi
    7514:	e8 aa fc ff ff       	call   71c3 <_ZN3vkh40getPhysicalDeviceQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  std::vector<std::optional<VkQueueFamilyProperties>> presentQueueFamilies{
      queueFamilyProps.size()};
    7519:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    751d:	48 89 c7             	mov    %rax,%rdi
    7520:	e8 0f 0e 00 00       	call   8334 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>
    7525:	48 89 c3             	mov    %rax,%rbx
    7528:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    752c:	48 89 c7             	mov    %rax,%rdi
    752f:	e8 2e 0e 00 00       	call   8362 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    7534:	48 8d 55 d7          	lea    -0x29(%rbp),%rdx
    7538:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    753c:	48 89 de             	mov    %rbx,%rsi
    753f:	48 89 c7             	mov    %rax,%rdi
    7542:	e8 53 0e 00 00       	call   839a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
    7547:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    754b:	48 89 c7             	mov    %rax,%rdi
    754e:	e8 2b 0e 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
  uint32_t index = 0;
    7553:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    755a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    755e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    7562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7566:	48 89 c7             	mov    %rax,%rdi
    7569:	e8 e6 0e 00 00       	call   8454 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>
    756e:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    7572:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7576:	48 89 c7             	mov    %rax,%rdi
    7579:	e8 fc 0e 00 00       	call   847a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>
    757e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    7582:	eb 6c                	jmp    75f0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x105>
    7584:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    7588:	48 89 c7             	mov    %rax,%rdi
    758b:	e8 6e 0f 00 00       	call   84fe <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    7590:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    VkBool32 presentSupported = false;
    7594:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, index, surface,
    759b:	48 8d 4d 9c          	lea    -0x64(%rbp),%rcx
    759f:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
    75a6:	8b 75 ec             	mov    -0x14(%rbp),%esi
    75a9:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    75ad:	48 89 c7             	mov    %rax,%rdi
    75b0:	e8 4b ce ff ff       	call   4400 <vkGetPhysicalDeviceSurfaceSupportKHR@plt>
                                         &presentSupported);
    if (presentSupported) {
    75b5:	8b 45 9c             	mov    -0x64(%rbp),%eax
    75b8:	85 c0                	test   %eax,%eax
    75ba:	74 24                	je     75e0 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xf5>
      presentQueueFamilies[index] = queueFamilyProp;
    75bc:	8b 55 ec             	mov    -0x14(%rbp),%edx
    75bf:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    75c3:	48 89 d6             	mov    %rdx,%rsi
    75c6:	48 89 c7             	mov    %rax,%rdi
    75c9:	e8 42 0f 00 00       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    75ce:	48 89 c2             	mov    %rax,%rdx
    75d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    75d5:	48 89 c6             	mov    %rax,%rsi
    75d8:	48 89 d7             	mov    %rdx,%rdi
    75db:	e8 5a 0f 00 00       	call   853a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>
    }
    ++index;
    75e0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  for (const auto &queueFamilyProp : queueFamilyProps) {
    75e4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75e8:	48 89 c7             	mov    %rax,%rdi
    75eb:	e8 ee 0e 00 00       	call   84de <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    75f0:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    75f4:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    75f8:	48 89 d6             	mov    %rdx,%rsi
    75fb:	48 89 c7             	mov    %rax,%rdi
    75fe:	e8 a0 0e 00 00       	call   84a3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    7603:	84 c0                	test   %al,%al
    7605:	0f 85 79 ff ff ff    	jne    7584 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x99>
  }
  return presentQueueFamilies;
    760b:	90                   	nop
}
    760c:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    7610:	48 89 c7             	mov    %rax,%rdi
    7613:	e8 5c 0c 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
  return presentQueueFamilies;
    7618:	eb 37                	jmp    7651 <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x166>
      queueFamilyProps.size()};
    761a:	48 89 c3             	mov    %rax,%rbx
    761d:	48 8d 45 d7          	lea    -0x29(%rbp),%rax
    7621:	48 89 c7             	mov    %rax,%rdi
    7624:	e8 55 0d 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7629:	eb 0f                	jmp    763a <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x14f>
}
    762b:	48 89 c3             	mov    %rax,%rbx
    762e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7632:	48 89 c7             	mov    %rax,%rdi
    7635:	e8 d6 0d 00 00       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    763a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    763e:	48 89 c7             	mov    %rax,%rdi
    7641:	e8 2e 0c 00 00       	call   8274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    7646:	48 89 d8             	mov    %rbx,%rax
    7649:	48 89 c7             	mov    %rax,%rdi
    764c:	e8 7f d0 ff ff       	call   46d0 <_Unwind_Resume@plt>
    7651:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    7655:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7659:	c9                   	leave
    765a:	c3                   	ret

000000000000765b <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

VkSurfaceCapabilitiesKHR
getPhysicalDeviceSurfaceCapabilities(VkPhysicalDevice physicalDevice,
                                     VkSurfaceKHR surface) {
    765b:	55                   	push   %rbp
    765c:	48 89 e5             	mov    %rsp,%rbp
    765f:	41 54                	push   %r12
    7661:	53                   	push   %rbx
    7662:	48 83 ec 20          	sub    $0x20,%rsp
    7666:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    766a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    766e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  VkSurfaceCapabilitiesKHR surfaceCapabilities{};
    7672:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7676:	66 0f ef c0          	pxor   %xmm0,%xmm0
    767a:	0f 11 00             	movups %xmm0,(%rax)
    767d:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    7681:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    7685:	66 0f 7e 40 30       	movd   %xmm0,0x30(%rax)
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    768a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    768e:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    7692:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7696:	48 89 ce             	mov    %rcx,%rsi
    7699:	48 89 c7             	mov    %rax,%rdi
    769c:	e8 4f cc ff ff       	call   42f0 <vkGetPhysicalDeviceSurfaceCapabilitiesKHR@plt>
          physicalDevice, surface, &surfaceCapabilities) != VK_SUCCESS) {
    76a1:	85 c0                	test   %eax,%eax
    76a3:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceCapabilitiesKHR(
    76a6:	84 c0                	test   %al,%al
    76a8:	74 51                	je     76fb <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0xa0>
    throw std::runtime_error("Failed to get surface capabilities.");
    76aa:	bf 10 00 00 00       	mov    $0x10,%edi
    76af:	e8 bc ca ff ff       	call   4170 <__cxa_allocate_exception@plt>
    76b4:	48 89 c3             	mov    %rax,%rbx
    76b7:	48 8d 05 4a 09 01 00 	lea    0x1094a(%rip),%rax        # 18008 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xb8>
    76be:	48 89 c6             	mov    %rax,%rsi
    76c1:	48 89 df             	mov    %rbx,%rdi
    76c4:	e8 37 ca ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    76c9:	48 8b 05 d8 e8 01 00 	mov    0x1e8d8(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    76d0:	48 89 c2             	mov    %rax,%rdx
    76d3:	48 8d 05 66 e6 01 00 	lea    0x1e666(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    76da:	48 89 c6             	mov    %rax,%rsi
    76dd:	48 89 df             	mov    %rbx,%rdi
    76e0:	e8 8b cf ff ff       	call   4670 <__cxa_throw@plt>
    76e5:	49 89 c4             	mov    %rax,%r12
    76e8:	48 89 df             	mov    %rbx,%rdi
    76eb:	e8 50 cb ff ff       	call   4240 <__cxa_free_exception@plt>
    76f0:	4c 89 e0             	mov    %r12,%rax
    76f3:	48 89 c7             	mov    %rax,%rdi
    76f6:	e8 d5 cf ff ff       	call   46d0 <_Unwind_Resume@plt>
  }
  return surfaceCapabilities;
    76fb:	90                   	nop
}
    76fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7700:	48 83 c4 20          	add    $0x20,%rsp
    7704:	5b                   	pop    %rbx
    7705:	41 5c                	pop    %r12
    7707:	5d                   	pop    %rbp
    7708:	c3                   	ret

0000000000007709 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:

std::vector<VkSurfaceFormatKHR>
getPhysicalDeviceSurfaceFormatList(VkPhysicalDevice physicalDevice,
                                   VkSurfaceKHR surface) {
    7709:	55                   	push   %rbp
    770a:	48 89 e5             	mov    %rsp,%rbp
    770d:	41 54                	push   %r12
    770f:	53                   	push   %rbx
    7710:	48 83 ec 30          	sub    $0x30,%rsp
    7714:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7718:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    771c:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t surfaceFormatCount;
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    7720:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7724:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7728:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    772c:	b9 00 00 00 00       	mov    $0x0,%ecx
    7731:	48 89 c7             	mov    %rax,%rdi
    7734:	e8 d7 cd ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
                                           &surfaceFormatCount,
                                           nullptr) != VK_SUCCESS) {
    7739:	85 c0                	test   %eax,%eax
    773b:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface,
    773e:	84 c0                	test   %al,%al
    7740:	74 3b                	je     777d <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
    throw std::runtime_error("Failed to get surface format list.");
    7742:	bf 10 00 00 00       	mov    $0x10,%edi
    7747:	e8 24 ca ff ff       	call   4170 <__cxa_allocate_exception@plt>
    774c:	48 89 c3             	mov    %rax,%rbx
    774f:	48 8d 05 da 08 01 00 	lea    0x108da(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    7756:	48 89 c6             	mov    %rax,%rsi
    7759:	48 89 df             	mov    %rbx,%rdi
    775c:	e8 9f c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7761:	48 8b 05 40 e8 01 00 	mov    0x1e840(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7768:	48 89 c2             	mov    %rax,%rdx
    776b:	48 8d 05 ce e5 01 00 	lea    0x1e5ce(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7772:	48 89 c6             	mov    %rax,%rsi
    7775:	48 89 df             	mov    %rbx,%rdi
    7778:	e8 f3 ce ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    777d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7780:	89 c3                	mov    %eax,%ebx
    7782:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7786:	48 89 c7             	mov    %rax,%rdi
    7789:	e8 84 0e 00 00       	call   8612 <_ZNSaI18VkSurfaceFormatKHREC1Ev>
    778e:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7792:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7796:	48 89 de             	mov    %rbx,%rsi
    7799:	48 89 c7             	mov    %rax,%rdi
    779c:	e8 a9 0e 00 00       	call   864a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
    77a1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    77a5:	48 89 c7             	mov    %rax,%rdi
    77a8:	e8 81 0e 00 00       	call   862e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    77ad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    77b1:	48 89 c7             	mov    %rax,%rdi
    77b4:	e8 4b 0f 00 00       	call   8704 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>
    77b9:	48 89 c1             	mov    %rax,%rcx
    77bc:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    77c0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    77c4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    77c8:	48 89 c7             	mov    %rax,%rdi
    77cb:	e8 40 cd ff ff       	call   4510 <vkGetPhysicalDeviceSurfaceFormatsKHR@plt>
          physicalDevice, surface, &surfaceFormatCount,
          surfaceFormats.data()) != VK_SUCCESS) {
    77d0:	85 c0                	test   %eax,%eax
    77d2:	0f 95 c0             	setne  %al
  if (vkGetPhysicalDeviceSurfaceFormatsKHR(
    77d5:	84 c0                	test   %al,%al
    77d7:	0f 84 95 00 00 00    	je     7872 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
    throw std::runtime_error("Failed to get surface format list.");
    77dd:	bf 10 00 00 00       	mov    $0x10,%edi
    77e2:	e8 89 c9 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    77e7:	48 89 c3             	mov    %rax,%rbx
    77ea:	48 8d 05 3f 08 01 00 	lea    0x1083f(%rip),%rax        # 18030 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0xe0>
    77f1:	48 89 c6             	mov    %rax,%rsi
    77f4:	48 89 df             	mov    %rbx,%rdi
    77f7:	e8 04 c9 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    77fc:	48 8b 05 a5 e7 01 00 	mov    0x1e7a5(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7803:	48 89 c2             	mov    %rax,%rdx
    7806:	48 8d 05 33 e5 01 00 	lea    0x1e533(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    780d:	48 89 c6             	mov    %rax,%rsi
    7810:	48 89 df             	mov    %rbx,%rdi
    7813:	e8 58 ce ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7818:	49 89 c4             	mov    %rax,%r12
    781b:	48 89 df             	mov    %rbx,%rdi
    781e:	e8 1d ca ff ff       	call   4240 <__cxa_free_exception@plt>
    7823:	4c 89 e0             	mov    %r12,%rax
    7826:	48 89 c7             	mov    %rax,%rdi
    7829:	e8 a2 ce ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkSurfaceFormatKHR> surfaceFormats{surfaceFormatCount};
    782e:	48 89 c3             	mov    %rax,%rbx
    7831:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7835:	48 89 c7             	mov    %rax,%rdi
    7838:	e8 f1 0d 00 00       	call   862e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    783d:	48 89 d8             	mov    %rbx,%rax
    7840:	48 89 c7             	mov    %rax,%rdi
    7843:	e8 88 ce ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface format list.");
    7848:	49 89 c4             	mov    %rax,%r12
    784b:	48 89 df             	mov    %rbx,%rdi
    784e:	e8 ed c9 ff ff       	call   4240 <__cxa_free_exception@plt>
    7853:	4c 89 e3             	mov    %r12,%rbx
    7856:	eb 03                	jmp    785b <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return surfaceFormats;
}
    7858:	48 89 c3             	mov    %rax,%rbx
    785b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    785f:	48 89 c7             	mov    %rax,%rdi
    7862:	e8 59 0e 00 00       	call   86c0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    7867:	48 89 d8             	mov    %rbx,%rax
    786a:	48 89 c7             	mov    %rax,%rdi
    786d:	e8 5e ce ff ff       	call   46d0 <_Unwind_Resume@plt>
  return surfaceFormats;
    7872:	90                   	nop
}
    7873:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7877:	48 83 c4 30          	add    $0x30,%rsp
    787b:	5b                   	pop    %rbx
    787c:	41 5c                	pop    %r12
    787e:	5d                   	pop    %rbp
    787f:	c3                   	ret

0000000000007880 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>:
std::vector<VkPresentModeKHR>
getPhysicalDeviceSurfacePresentModeList(VkPhysicalDevice physicalDevice,
                                        VkSurfaceKHR surface) {
    7880:	55                   	push   %rbp
    7881:	48 89 e5             	mov    %rsp,%rbp
    7884:	41 54                	push   %r12
    7886:	53                   	push   %rbx
    7887:	48 83 ec 30          	sub    $0x30,%rsp
    788b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    788f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7893:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t presentModeCount;
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface,
    7897:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    789b:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    789f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    78a3:	b9 00 00 00 00       	mov    $0x0,%ecx
    78a8:	48 89 c7             	mov    %rax,%rdi
    78ab:	e8 70 cc ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    78b0:	85 c0                	test   %eax,%eax
    78b2:	0f 95 c0             	setne  %al
    78b5:	84 c0                	test   %al,%al
    78b7:	74 3b                	je     78f4 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x74>
                                                &presentModeCount, nullptr)) {
    throw std::runtime_error("Failed to get surface present mode list.");
    78b9:	bf 10 00 00 00       	mov    $0x10,%edi
    78be:	e8 ad c8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    78c3:	48 89 c3             	mov    %rax,%rbx
    78c6:	48 8d 05 8b 07 01 00 	lea    0x1078b(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    78cd:	48 89 c6             	mov    %rax,%rsi
    78d0:	48 89 df             	mov    %rbx,%rdi
    78d3:	e8 28 c8 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    78d8:	48 8b 05 c9 e6 01 00 	mov    0x1e6c9(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    78df:	48 89 c2             	mov    %rax,%rdx
    78e2:	48 8d 05 57 e4 01 00 	lea    0x1e457(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    78e9:	48 89 c6             	mov    %rax,%rsi
    78ec:	48 89 df             	mov    %rbx,%rdi
    78ef:	e8 7c cd ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    78f4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    78f7:	89 c3                	mov    %eax,%ebx
    78f9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    78fd:	48 89 c7             	mov    %rax,%rdi
    7900:	e8 71 0e 00 00       	call   8776 <_ZNSaI16VkPresentModeKHREC1Ev>
    7905:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7909:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    790d:	48 89 de             	mov    %rbx,%rsi
    7910:	48 89 c7             	mov    %rax,%rdi
    7913:	e8 96 0e 00 00       	call   87ae <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
    7918:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    791c:	48 89 c7             	mov    %rax,%rdi
    791f:	e8 6e 0e 00 00       	call   8792 <_ZNSaI16VkPresentModeKHRED1Ev>
  if (vkGetPhysicalDeviceSurfacePresentModesKHR(
    7924:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7928:	48 89 c7             	mov    %rax,%rdi
    792b:	e8 38 0f 00 00       	call   8868 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>
    7930:	48 89 c1             	mov    %rax,%rcx
    7933:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7937:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    793b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    793f:	48 89 c7             	mov    %rax,%rdi
    7942:	e8 d9 cb ff ff       	call   4520 <vkGetPhysicalDeviceSurfacePresentModesKHR@plt>
    7947:	85 c0                	test   %eax,%eax
    7949:	0f 95 c0             	setne  %al
    794c:	84 c0                	test   %al,%al
    794e:	0f 84 95 00 00 00    	je     79e9 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x169>
          physicalDevice, surface, &presentModeCount, presentModes.data())) {
    throw std::runtime_error("Failed to get surface present mode list.");
    7954:	bf 10 00 00 00       	mov    $0x10,%edi
    7959:	e8 12 c8 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    795e:	48 89 c3             	mov    %rax,%rbx
    7961:	48 8d 05 f0 06 01 00 	lea    0x106f0(%rip),%rax        # 18058 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x108>
    7968:	48 89 c6             	mov    %rax,%rsi
    796b:	48 89 df             	mov    %rbx,%rdi
    796e:	e8 8d c7 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7973:	48 8b 05 2e e6 01 00 	mov    0x1e62e(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    797a:	48 89 c2             	mov    %rax,%rdx
    797d:	48 8d 05 bc e3 01 00 	lea    0x1e3bc(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7984:	48 89 c6             	mov    %rax,%rsi
    7987:	48 89 df             	mov    %rbx,%rdi
    798a:	e8 e1 cc ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    798f:	49 89 c4             	mov    %rax,%r12
    7992:	48 89 df             	mov    %rbx,%rdi
    7995:	e8 a6 c8 ff ff       	call   4240 <__cxa_free_exception@plt>
    799a:	4c 89 e0             	mov    %r12,%rax
    799d:	48 89 c7             	mov    %rax,%rdi
    79a0:	e8 2b cd ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkPresentModeKHR> presentModes{presentModeCount};
    79a5:	48 89 c3             	mov    %rax,%rbx
    79a8:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    79ac:	48 89 c7             	mov    %rax,%rdi
    79af:	e8 de 0d 00 00       	call   8792 <_ZNSaI16VkPresentModeKHRED1Ev>
    79b4:	48 89 d8             	mov    %rbx,%rax
    79b7:	48 89 c7             	mov    %rax,%rdi
    79ba:	e8 11 cd ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get surface present mode list.");
    79bf:	49 89 c4             	mov    %rax,%r12
    79c2:	48 89 df             	mov    %rbx,%rdi
    79c5:	e8 76 c8 ff ff       	call   4240 <__cxa_free_exception@plt>
    79ca:	4c 89 e3             	mov    %r12,%rbx
    79cd:	eb 03                	jmp    79d2 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T+0x152>
  }
  return presentModes;
}
    79cf:	48 89 c3             	mov    %rax,%rbx
    79d2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79d6:	48 89 c7             	mov    %rax,%rdi
    79d9:	e8 46 0e 00 00       	call   8824 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    79de:	48 89 d8             	mov    %rbx,%rax
    79e1:	48 89 c7             	mov    %rax,%rdi
    79e4:	e8 e7 cc ff ff       	call   46d0 <_Unwind_Resume@plt>
  return presentModes;
    79e9:	90                   	nop
}
    79ea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    79ee:	48 83 c4 30          	add    $0x30,%rsp
    79f2:	5b                   	pop    %rbx
    79f3:	41 5c                	pop    %r12
    79f5:	5d                   	pop    %rbp
    79f6:	c3                   	ret

00000000000079f7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>:

std::vector<VkImage> getSwapchainImages(VkDevice device,
                                        VkSwapchainKHR swapchain) {
    79f7:	55                   	push   %rbp
    79f8:	48 89 e5             	mov    %rsp,%rbp
    79fb:	41 54                	push   %r12
    79fd:	53                   	push   %rbx
    79fe:	48 83 ec 30          	sub    $0x30,%rsp
    7a02:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    7a06:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    7a0a:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  uint32_t swapchainImageCount;
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a0e:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7a12:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7a16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7a1a:	b9 00 00 00 00       	mov    $0x0,%ecx
    7a1f:	48 89 c7             	mov    %rax,%rdi
    7a22:	e8 99 c7 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              nullptr) != VK_SUCCESS) {
    7a27:	85 c0                	test   %eax,%eax
    7a29:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a2c:	84 c0                	test   %al,%al
    7a2e:	74 3b                	je     7a6b <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x74>
    throw std::runtime_error("Failed to get swapchain images");
    7a30:	bf 10 00 00 00       	mov    $0x10,%edi
    7a35:	e8 36 c7 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7a3a:	48 89 c3             	mov    %rax,%rbx
    7a3d:	48 8d 05 44 06 01 00 	lea    0x10644(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7a44:	48 89 c6             	mov    %rax,%rsi
    7a47:	48 89 df             	mov    %rbx,%rdi
    7a4a:	e8 b1 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7a4f:	48 8b 05 52 e5 01 00 	mov    0x1e552(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7a56:	48 89 c2             	mov    %rax,%rdx
    7a59:	48 8d 05 e0 e2 01 00 	lea    0x1e2e0(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7a60:	48 89 c6             	mov    %rax,%rsi
    7a63:	48 89 df             	mov    %rbx,%rdi
    7a66:	e8 05 cc ff ff       	call   4670 <__cxa_throw@plt>
  }
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7a6b:	8b 45 e8             	mov    -0x18(%rbp),%eax
    7a6e:	89 c3                	mov    %eax,%ebx
    7a70:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a74:	48 89 c7             	mov    %rax,%rdi
    7a77:	e8 5e 0e 00 00       	call   88da <_ZNSaIP9VkImage_TEC1Ev>
    7a7c:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
    7a80:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a84:	48 89 de             	mov    %rbx,%rsi
    7a87:	48 89 c7             	mov    %rax,%rdi
    7a8a:	e8 83 0e 00 00       	call   8912 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>
    7a8f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7a93:	48 89 c7             	mov    %rax,%rdi
    7a96:	e8 5b 0e 00 00       	call   88f6 <_ZNSaIP9VkImage_TED1Ev>
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7a9b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7a9f:	48 89 c7             	mov    %rax,%rdi
    7aa2:	e8 25 0f 00 00       	call   89cc <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>
    7aa7:	48 89 c1             	mov    %rax,%rcx
    7aaa:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
    7aae:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
    7ab2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    7ab6:	48 89 c7             	mov    %rax,%rdi
    7ab9:	e8 02 c7 ff ff       	call   41c0 <vkGetSwapchainImagesKHR@plt>
                              swapchainImages.data()) != VK_SUCCESS) {
    7abe:	85 c0                	test   %eax,%eax
    7ac0:	0f 95 c0             	setne  %al
  if (vkGetSwapchainImagesKHR(device, swapchain, &swapchainImageCount,
    7ac3:	84 c0                	test   %al,%al
    7ac5:	0f 84 95 00 00 00    	je     7b60 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x169>
    throw std::runtime_error("Failed to get swapchain images");
    7acb:	bf 10 00 00 00       	mov    $0x10,%edi
    7ad0:	e8 9b c6 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    7ad5:	48 89 c3             	mov    %rax,%rbx
    7ad8:	48 8d 05 a9 05 01 00 	lea    0x105a9(%rip),%rax        # 18088 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x138>
    7adf:	48 89 c6             	mov    %rax,%rsi
    7ae2:	48 89 df             	mov    %rbx,%rdi
    7ae5:	e8 16 c6 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    7aea:	48 8b 05 b7 e4 01 00 	mov    0x1e4b7(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    7af1:	48 89 c2             	mov    %rax,%rdx
    7af4:	48 8d 05 45 e2 01 00 	lea    0x1e245(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    7afb:	48 89 c6             	mov    %rax,%rsi
    7afe:	48 89 df             	mov    %rbx,%rdi
    7b01:	e8 6a cb ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7b06:	49 89 c4             	mov    %rax,%r12
    7b09:	48 89 df             	mov    %rbx,%rdi
    7b0c:	e8 2f c7 ff ff       	call   4240 <__cxa_free_exception@plt>
    7b11:	4c 89 e0             	mov    %r12,%rax
    7b14:	48 89 c7             	mov    %rax,%rdi
    7b17:	e8 b4 cb ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkImage> swapchainImages{swapchainImageCount};
    7b1c:	48 89 c3             	mov    %rax,%rbx
    7b1f:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    7b23:	48 89 c7             	mov    %rax,%rdi
    7b26:	e8 cb 0d 00 00       	call   88f6 <_ZNSaIP9VkImage_TED1Ev>
    7b2b:	48 89 d8             	mov    %rbx,%rax
    7b2e:	48 89 c7             	mov    %rax,%rdi
    7b31:	e8 9a cb ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to get swapchain images");
    7b36:	49 89 c4             	mov    %rax,%r12
    7b39:	48 89 df             	mov    %rbx,%rdi
    7b3c:	e8 ff c6 ff ff       	call   4240 <__cxa_free_exception@plt>
    7b41:	4c 89 e3             	mov    %r12,%rbx
    7b44:	eb 03                	jmp    7b49 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T+0x152>
  }
  return swapchainImages;
}
    7b46:	48 89 c3             	mov    %rax,%rbx
    7b49:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b4d:	48 89 c7             	mov    %rax,%rdi
    7b50:	e8 33 0e 00 00       	call   8988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    7b55:	48 89 d8             	mov    %rbx,%rax
    7b58:	48 89 c7             	mov    %rax,%rdi
    7b5b:	e8 70 cb ff ff       	call   46d0 <_Unwind_Resume@plt>
  return swapchainImages;
    7b60:	90                   	nop
}
    7b61:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7b65:	48 83 c4 30          	add    $0x30,%rsp
    7b69:	5b                   	pop    %rbx
    7b6a:	41 5c                	pop    %r12
    7b6c:	5d                   	pop    %rbp
    7b6d:	c3                   	ret

0000000000007b6e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
    7b6e:	55                   	push   %rbp
    7b6f:	48 89 e5             	mov    %rsp,%rbp
    7b72:	48 83 ec 10          	sub    $0x10,%rsp
    7b76:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b7e:	48 89 c7             	mov    %rax,%rdi
    7b81:	e8 00 01 00 00       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
    7b86:	90                   	nop
    7b87:	c9                   	leave
    7b88:	c3                   	ret
    7b89:	90                   	nop

0000000000007b8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7b8a:	55                   	push   %rbp
    7b8b:	48 89 e5             	mov    %rsp,%rbp
    7b8e:	48 83 ec 10          	sub    $0x10,%rsp
    7b92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7b96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7b9a:	48 89 c7             	mov    %rax,%rdi
    7b9d:	e8 52 02 00 00       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    7ba2:	90                   	nop
    7ba3:	c9                   	leave
    7ba4:	c3                   	ret
    7ba5:	90                   	nop

0000000000007ba6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>:
    7ba6:	55                   	push   %rbp
    7ba7:	48 89 e5             	mov    %rsp,%rbp
    7baa:	48 83 ec 10          	sub    $0x10,%rsp
    7bae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bb6:	48 89 c7             	mov    %rax,%rdi
    7bb9:	e8 a4 03 00 00       	call   7f62 <_ZNSaIPKcED1Ev>
    7bbe:	90                   	nop
    7bbf:	c9                   	leave
    7bc0:	c3                   	ret
    7bc1:	90                   	nop

0000000000007bc2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>:
    7bc2:	55                   	push   %rbp
    7bc3:	48 89 e5             	mov    %rsp,%rbp
    7bc6:	48 83 ec 10          	sub    $0x10,%rsp
    7bca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bd2:	48 89 c7             	mov    %rax,%rdi
    7bd5:	e8 a4 04 00 00       	call   807e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    7bda:	90                   	nop
    7bdb:	c9                   	leave
    7bdc:	c3                   	ret
    7bdd:	90                   	nop

0000000000007bde <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>:
    7bde:	55                   	push   %rbp
    7bdf:	48 89 e5             	mov    %rsp,%rbp
    7be2:	48 83 ec 10          	sub    $0x10,%rsp
    7be6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7bea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7bee:	48 89 c7             	mov    %rax,%rdi
    7bf1:	e8 ec 05 00 00       	call   81e2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    7bf6:	90                   	nop
    7bf7:	c9                   	leave
    7bf8:	c3                   	ret
    7bf9:	90                   	nop

0000000000007bfa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>:
    7bfa:	55                   	push   %rbp
    7bfb:	48 89 e5             	mov    %rsp,%rbp
    7bfe:	48 83 ec 10          	sub    $0x10,%rsp
    7c02:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c0a:	48 89 c7             	mov    %rax,%rdi
    7c0d:	e8 6c 07 00 00       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    7c12:	90                   	nop
    7c13:	c9                   	leave
    7c14:	c3                   	ret
    7c15:	90                   	nop

0000000000007c16 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>:
    7c16:	55                   	push   %rbp
    7c17:	48 89 e5             	mov    %rsp,%rbp
    7c1a:	48 83 ec 10          	sub    $0x10,%rsp
    7c1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c26:	48 89 c7             	mov    %rax,%rdi
    7c29:	e8 00 0a 00 00       	call   862e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    7c2e:	90                   	nop
    7c2f:	c9                   	leave
    7c30:	c3                   	ret
    7c31:	90                   	nop

0000000000007c32 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>:
    7c32:	55                   	push   %rbp
    7c33:	48 89 e5             	mov    %rsp,%rbp
    7c36:	48 83 ec 10          	sub    $0x10,%rsp
    7c3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c42:	48 89 c7             	mov    %rax,%rdi
    7c45:	e8 48 0b 00 00       	call   8792 <_ZNSaI16VkPresentModeKHRED1Ev>
    7c4a:	90                   	nop
    7c4b:	c9                   	leave
    7c4c:	c3                   	ret
    7c4d:	90                   	nop

0000000000007c4e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>:
    7c4e:	55                   	push   %rbp
    7c4f:	48 89 e5             	mov    %rsp,%rbp
    7c52:	48 83 ec 10          	sub    $0x10,%rsp
    7c56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c5e:	48 89 c7             	mov    %rax,%rdi
    7c61:	e8 90 0c 00 00       	call   88f6 <_ZNSaIP9VkImage_TED1Ev>
    7c66:	90                   	nop
    7c67:	c9                   	leave
    7c68:	c3                   	ret
    7c69:	90                   	nop

0000000000007c6a <_ZNSaI17VkLayerPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7c6a:	55                   	push   %rbp
    7c6b:	48 89 e5             	mov    %rsp,%rbp
    7c6e:	48 83 ec 10          	sub    $0x10,%rsp
    7c72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c7a:	48 89 c7             	mov    %rax,%rdi
    7c7d:	e8 bc 0d 00 00       	call   8a3e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>
    7c82:	90                   	nop
    7c83:	c9                   	leave
    7c84:	c3                   	ret
    7c85:	90                   	nop

0000000000007c86 <_ZNSaI17VkLayerPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7c86:	55                   	push   %rbp
    7c87:	48 89 e5             	mov    %rsp,%rbp
    7c8a:	48 83 ec 10          	sub    $0x10,%rsp
    7c8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7c92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7c96:	48 89 c7             	mov    %rax,%rdi
    7c99:	e8 ac 0d 00 00       	call   8a4a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>
    7c9e:	90                   	nop
    7c9f:	c9                   	leave
    7ca0:	c3                   	ret
    7ca1:	90                   	nop

0000000000007ca2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7ca2:	55                   	push   %rbp
    7ca3:	48 89 e5             	mov    %rsp,%rbp
    7ca6:	53                   	push   %rbx
    7ca7:	48 83 ec 28          	sub    $0x28,%rsp
    7cab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7caf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7cb3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7cb7:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7cbb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7cbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7cc3:	48 89 d6             	mov    %rdx,%rsi
    7cc6:	48 89 c7             	mov    %rax,%rdi
    7cc9:	e8 87 0d 00 00       	call   8a55 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7cce:	48 89 c1             	mov    %rax,%rcx
    7cd1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7cd5:	48 89 c2             	mov    %rax,%rdx
    7cd8:	48 89 ce             	mov    %rcx,%rsi
    7cdb:	48 89 df             	mov    %rbx,%rdi
    7cde:	e8 d3 0d 00 00       	call   8ab6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7ce3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7ce7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7ceb:	48 89 d6             	mov    %rdx,%rsi
    7cee:	48 89 c7             	mov    %rax,%rdi
    7cf1:	e8 1e 0e 00 00       	call   8b14 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>
    7cf6:	eb 1a                	jmp    7d12 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7cf8:	48 89 c3             	mov    %rax,%rbx
    7cfb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7cff:	48 89 c7             	mov    %rax,%rdi
    7d02:	e8 79 00 00 00       	call   7d80 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7d07:	48 89 d8             	mov    %rbx,%rax
    7d0a:	48 89 c7             	mov    %rax,%rdi
    7d0d:	e8 be c9 ff ff       	call   46d0 <_Unwind_Resume@plt>
    7d12:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7d16:	c9                   	leave
    7d17:	c3                   	ret

0000000000007d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7d18:	55                   	push   %rbp
    7d19:	48 89 e5             	mov    %rsp,%rbp
    7d1c:	48 83 ec 10          	sub    $0x10,%rsp
    7d20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7d24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d28:	48 89 c7             	mov    %rax,%rdi
    7d2b:	e8 24 0e 00 00       	call   8b54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7d30:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7d33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d37:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7d3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d3f:	48 8b 00             	mov    (%rax),%rax
    7d42:	48 89 ce             	mov    %rcx,%rsi
    7d45:	48 89 c7             	mov    %rax,%rdi
    7d48:	e8 15 0e 00 00       	call   8b62 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7d4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d51:	48 89 c7             	mov    %rax,%rdi
    7d54:	e8 27 00 00 00       	call   7d80 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>
    7d59:	90                   	nop
    7d5a:	c9                   	leave
    7d5b:	c3                   	ret

0000000000007d5c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7d5c:	55                   	push   %rbp
    7d5d:	48 89 e5             	mov    %rsp,%rbp
    7d60:	48 83 ec 10          	sub    $0x10,%rsp
    7d64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7d68:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d6c:	48 8b 10             	mov    (%rax),%rdx
    7d6f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d73:	48 89 d6             	mov    %rdx,%rsi
    7d76:	48 89 c7             	mov    %rax,%rdi
    7d79:	e8 0e 0e 00 00       	call   8b8c <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7d7e:	c9                   	leave
    7d7f:	c3                   	ret

0000000000007d80 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7d80:	55                   	push   %rbp
    7d81:	48 89 e5             	mov    %rsp,%rbp
    7d84:	48 83 ec 10          	sub    $0x10,%rsp
    7d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d90:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7d94:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7d98:	48 8b 00             	mov    (%rax),%rax
    7d9b:	48 29 c2             	sub    %rax,%rdx
    7d9e:	48 c1 fa 03          	sar    $0x3,%rdx
    7da2:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7da9:	fc c0 0f 
    7dac:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7db0:	48 89 c2             	mov    %rax,%rdx
    7db3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7db7:	48 8b 08             	mov    (%rax),%rcx
    7dba:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dbe:	48 89 ce             	mov    %rcx,%rsi
    7dc1:	48 89 c7             	mov    %rax,%rdi
    7dc4:	e8 fb 0d 00 00       	call   8bc4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7dc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7dcd:	48 89 c7             	mov    %rax,%rdi
    7dd0:	e8 99 fd ff ff       	call   7b6e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    7dd5:	90                   	nop
    7dd6:	c9                   	leave
    7dd7:	c3                   	ret

0000000000007dd8 <_ZNSaI21VkExtensionPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7dd8:	55                   	push   %rbp
    7dd9:	48 89 e5             	mov    %rsp,%rbp
    7ddc:	48 83 ec 10          	sub    $0x10,%rsp
    7de0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7de4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7de8:	48 89 c7             	mov    %rax,%rdi
    7deb:	e8 0a 0e 00 00       	call   8bfa <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>
    7df0:	90                   	nop
    7df1:	c9                   	leave
    7df2:	c3                   	ret
    7df3:	90                   	nop

0000000000007df4 <_ZNSaI21VkExtensionPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7df4:	55                   	push   %rbp
    7df5:	48 89 e5             	mov    %rsp,%rbp
    7df8:	48 83 ec 10          	sub    $0x10,%rsp
    7dfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7e00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e04:	48 89 c7             	mov    %rax,%rdi
    7e07:	e8 fa 0d 00 00       	call   8c06 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>
    7e0c:	90                   	nop
    7e0d:	c9                   	leave
    7e0e:	c3                   	ret
    7e0f:	90                   	nop

0000000000007e10 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7e10:	55                   	push   %rbp
    7e11:	48 89 e5             	mov    %rsp,%rbp
    7e14:	53                   	push   %rbx
    7e15:	48 83 ec 28          	sub    $0x28,%rsp
    7e19:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7e1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7e21:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7e25:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7e29:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7e2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7e31:	48 89 d6             	mov    %rdx,%rsi
    7e34:	48 89 c7             	mov    %rax,%rdi
    7e37:	e8 d5 0d 00 00       	call   8c11 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    7e3c:	48 89 c1             	mov    %rax,%rcx
    7e3f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7e43:	48 89 c2             	mov    %rax,%rdx
    7e46:	48 89 ce             	mov    %rcx,%rsi
    7e49:	48 89 df             	mov    %rbx,%rdi
    7e4c:	e8 21 0e 00 00       	call   8c72 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    7e51:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7e55:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e59:	48 89 d6             	mov    %rdx,%rsi
    7e5c:	48 89 c7             	mov    %rax,%rdi
    7e5f:	e8 6c 0e 00 00       	call   8cd0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>
    7e64:	eb 1a                	jmp    7e80 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x70>
    7e66:	48 89 c3             	mov    %rax,%rbx
    7e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7e6d:	48 89 c7             	mov    %rax,%rdi
    7e70:	e8 79 00 00 00       	call   7eee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7e75:	48 89 d8             	mov    %rbx,%rax
    7e78:	48 89 c7             	mov    %rax,%rdi
    7e7b:	e8 50 c8 ff ff       	call   46d0 <_Unwind_Resume@plt>
    7e80:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7e84:	c9                   	leave
    7e85:	c3                   	ret

0000000000007e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    7e86:	55                   	push   %rbp
    7e87:	48 89 e5             	mov    %rsp,%rbp
    7e8a:	48 83 ec 10          	sub    $0x10,%rsp
    7e8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    7e92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7e96:	48 89 c7             	mov    %rax,%rdi
    7e99:	e8 72 0e 00 00       	call   8d10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    7e9e:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    7ea1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ea5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    7ea9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ead:	48 8b 00             	mov    (%rax),%rax
    7eb0:	48 89 ce             	mov    %rcx,%rsi
    7eb3:	48 89 c7             	mov    %rax,%rdi
    7eb6:	e8 63 0e 00 00       	call   8d1e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>
      }
    7ebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ebf:	48 89 c7             	mov    %rax,%rdi
    7ec2:	e8 27 00 00 00       	call   7eee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>
    7ec7:	90                   	nop
    7ec8:	c9                   	leave
    7ec9:	c3                   	ret

0000000000007eca <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    7eca:	55                   	push   %rbp
    7ecb:	48 89 e5             	mov    %rsp,%rbp
    7ece:	48 83 ec 10          	sub    $0x10,%rsp
    7ed2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    7ed6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7eda:	48 8b 10             	mov    (%rax),%rdx
    7edd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7ee1:	48 89 d6             	mov    %rdx,%rsi
    7ee4:	48 89 c7             	mov    %rax,%rdi
    7ee7:	e8 5c 0e 00 00       	call   8d48 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    7eec:	c9                   	leave
    7eed:	c3                   	ret

0000000000007eee <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    7eee:	55                   	push   %rbp
    7eef:	48 89 e5             	mov    %rsp,%rbp
    7ef2:	48 83 ec 10          	sub    $0x10,%rsp
    7ef6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    7efa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7efe:	48 8b 50 10          	mov    0x10(%rax),%rdx
    7f02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f06:	48 8b 00             	mov    (%rax),%rax
    7f09:	48 29 c2             	sub    %rax,%rdx
    7f0c:	48 c1 fa 02          	sar    $0x2,%rdx
    7f10:	48 b8 c1 0f fc c0 0f 	movabs $0xfc0fc0fc0fc0fc1,%rax
    7f17:	fc c0 0f 
    7f1a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    7f1e:	48 89 c2             	mov    %rax,%rdx
    7f21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f25:	48 8b 08             	mov    (%rax),%rcx
    7f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f2c:	48 89 ce             	mov    %rcx,%rsi
    7f2f:	48 89 c7             	mov    %rax,%rdi
    7f32:	e8 49 0e 00 00       	call   8d80 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    7f37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f3b:	48 89 c7             	mov    %rax,%rdi
    7f3e:	e8 47 fc ff ff       	call   7b8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    7f43:	90                   	nop
    7f44:	c9                   	leave
    7f45:	c3                   	ret

0000000000007f46 <_ZNSaIPKcEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    7f46:	55                   	push   %rbp
    7f47:	48 89 e5             	mov    %rsp,%rbp
    7f4a:	48 83 ec 10          	sub    $0x10,%rsp
    7f4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f56:	48 89 c7             	mov    %rax,%rdi
    7f59:	e8 58 0e 00 00       	call   8db6 <_ZNSt15__new_allocatorIPKcEC1Ev>
    7f5e:	90                   	nop
    7f5f:	c9                   	leave
    7f60:	c3                   	ret
    7f61:	90                   	nop

0000000000007f62 <_ZNSaIPKcED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    7f62:	55                   	push   %rbp
    7f63:	48 89 e5             	mov    %rsp,%rbp
    7f66:	48 83 ec 10          	sub    $0x10,%rsp
    7f6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7f6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    7f72:	48 89 c7             	mov    %rax,%rdi
    7f75:	e8 48 0e 00 00       	call   8dc2 <_ZNSt15__new_allocatorIPKcED1Ev>
    7f7a:	90                   	nop
    7f7b:	c9                   	leave
    7f7c:	c3                   	ret
    7f7d:	90                   	nop

0000000000007f7e <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    7f7e:	55                   	push   %rbp
    7f7f:	48 89 e5             	mov    %rsp,%rbp
    7f82:	53                   	push   %rbx
    7f83:	48 83 ec 28          	sub    $0x28,%rsp
    7f87:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    7f8b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    7f8f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    7f93:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    7f97:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    7f9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    7f9f:	48 89 d6             	mov    %rdx,%rsi
    7fa2:	48 89 c7             	mov    %rax,%rdi
    7fa5:	e8 23 0e 00 00       	call   8dcd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
    7faa:	48 89 c1             	mov    %rax,%rcx
    7fad:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    7fb1:	48 89 c2             	mov    %rax,%rdx
    7fb4:	48 89 ce             	mov    %rcx,%rsi
    7fb7:	48 89 df             	mov    %rbx,%rdi
    7fba:	e8 6f 0e 00 00       	call   8e2e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    7fbf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    7fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fc7:	48 89 d6             	mov    %rdx,%rsi
    7fca:	48 89 c7             	mov    %rax,%rdi
    7fcd:	e8 ba 0e 00 00       	call   8e8c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>
    7fd2:	eb 1a                	jmp    7fee <_ZNSt6vectorIPKcSaIS1_EEC1EmRKS2_+0x70>
    7fd4:	48 89 c3             	mov    %rax,%rbx
    7fd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    7fdb:	48 89 c7             	mov    %rax,%rdi
    7fde:	e8 31 00 00 00       	call   8014 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
    7fe3:	48 89 d8             	mov    %rbx,%rax
    7fe6:	48 89 c7             	mov    %rax,%rdi
    7fe9:	e8 e2 c6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    7fee:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    7ff2:	c9                   	leave
    7ff3:	c3                   	ret

0000000000007ff4 <_ZNSt6vectorIPKcSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    7ff4:	55                   	push   %rbp
    7ff5:	48 89 e5             	mov    %rsp,%rbp
    7ff8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7ffc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    8000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8004:	48 8b 00             	mov    (%rax),%rax
    8007:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    800b:	48 c1 e2 03          	shl    $0x3,%rdx
    800f:	48 01 d0             	add    %rdx,%rax
      }
    8012:	5d                   	pop    %rbp
    8013:	c3                   	ret

0000000000008014 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8014:	55                   	push   %rbp
    8015:	48 89 e5             	mov    %rsp,%rbp
    8018:	48 83 ec 10          	sub    $0x10,%rsp
    801c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8020:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8024:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8028:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    802c:	48 8b 00             	mov    (%rax),%rax
    802f:	48 29 c2             	sub    %rax,%rdx
    8032:	48 89 d0             	mov    %rdx,%rax
    8035:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8039:	48 89 c2             	mov    %rax,%rdx
    803c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8040:	48 8b 08             	mov    (%rax),%rcx
    8043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8047:	48 89 ce             	mov    %rcx,%rsi
    804a:	48 89 c7             	mov    %rax,%rdi
    804d:	e8 ae 0e 00 00       	call   8f00 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      }
    8052:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8056:	48 89 c7             	mov    %rax,%rdi
    8059:	e8 48 fb ff ff       	call   7ba6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    805e:	90                   	nop
    805f:	c9                   	leave
    8060:	c3                   	ret
    8061:	90                   	nop

0000000000008062 <_ZNSaIP18VkPhysicalDevice_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8062:	55                   	push   %rbp
    8063:	48 89 e5             	mov    %rsp,%rbp
    8066:	48 83 ec 10          	sub    $0x10,%rsp
    806a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    806e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8072:	48 89 c7             	mov    %rax,%rdi
    8075:	e8 bc 0e 00 00       	call   8f36 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>
    807a:	90                   	nop
    807b:	c9                   	leave
    807c:	c3                   	ret
    807d:	90                   	nop

000000000000807e <_ZNSaIP18VkPhysicalDevice_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    807e:	55                   	push   %rbp
    807f:	48 89 e5             	mov    %rsp,%rbp
    8082:	48 83 ec 10          	sub    $0x10,%rsp
    8086:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    808a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    808e:	48 89 c7             	mov    %rax,%rdi
    8091:	e8 ac 0e 00 00       	call   8f42 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>
    8096:	90                   	nop
    8097:	c9                   	leave
    8098:	c3                   	ret
    8099:	90                   	nop

000000000000809a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    809a:	55                   	push   %rbp
    809b:	48 89 e5             	mov    %rsp,%rbp
    809e:	53                   	push   %rbx
    809f:	48 83 ec 28          	sub    $0x28,%rsp
    80a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    80a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    80ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    80af:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    80b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    80b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    80bb:	48 89 d6             	mov    %rdx,%rsi
    80be:	48 89 c7             	mov    %rax,%rdi
    80c1:	e8 87 0e 00 00       	call   8f4d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    80c6:	48 89 c1             	mov    %rax,%rcx
    80c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    80cd:	48 89 c2             	mov    %rax,%rdx
    80d0:	48 89 ce             	mov    %rcx,%rsi
    80d3:	48 89 df             	mov    %rbx,%rdi
    80d6:	e8 d3 0e 00 00       	call   8fae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    80db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    80df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80e3:	48 89 d6             	mov    %rdx,%rsi
    80e6:	48 89 c7             	mov    %rax,%rdi
    80e9:	e8 1e 0f 00 00       	call   900c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>
    80ee:	eb 1a                	jmp    810a <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x70>
    80f0:	48 89 c3             	mov    %rax,%rbx
    80f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    80f7:	48 89 c7             	mov    %rax,%rdi
    80fa:	e8 79 00 00 00       	call   8178 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    80ff:	48 89 d8             	mov    %rbx,%rax
    8102:	48 89 c7             	mov    %rax,%rdi
    8105:	e8 c6 c5 ff ff       	call   46d0 <_Unwind_Resume@plt>
    810a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    810e:	c9                   	leave
    810f:	c3                   	ret

0000000000008110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8110:	55                   	push   %rbp
    8111:	48 89 e5             	mov    %rsp,%rbp
    8114:	48 83 ec 10          	sub    $0x10,%rsp
    8118:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    811c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8120:	48 89 c7             	mov    %rax,%rdi
    8123:	e8 24 0f 00 00       	call   904c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    8128:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    812b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    812f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8133:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8137:	48 8b 00             	mov    (%rax),%rax
    813a:	48 89 ce             	mov    %rcx,%rsi
    813d:	48 89 c7             	mov    %rax,%rdi
    8140:	e8 15 0f 00 00       	call   905a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>
      }
    8145:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8149:	48 89 c7             	mov    %rax,%rdi
    814c:	e8 27 00 00 00       	call   8178 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    8151:	90                   	nop
    8152:	c9                   	leave
    8153:	c3                   	ret

0000000000008154 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8154:	55                   	push   %rbp
    8155:	48 89 e5             	mov    %rsp,%rbp
    8158:	48 83 ec 10          	sub    $0x10,%rsp
    815c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8160:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8164:	48 8b 10             	mov    (%rax),%rdx
    8167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    816b:	48 89 d6             	mov    %rdx,%rsi
    816e:	48 89 c7             	mov    %rax,%rdi
    8171:	e8 0e 0f 00 00       	call   9084 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    8176:	c9                   	leave
    8177:	c3                   	ret

0000000000008178 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8178:	55                   	push   %rbp
    8179:	48 89 e5             	mov    %rsp,%rbp
    817c:	48 83 ec 10          	sub    $0x10,%rsp
    8180:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8188:	48 8b 50 10          	mov    0x10(%rax),%rdx
    818c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8190:	48 8b 00             	mov    (%rax),%rax
    8193:	48 29 c2             	sub    %rax,%rdx
    8196:	48 89 d0             	mov    %rdx,%rax
    8199:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    819d:	48 89 c2             	mov    %rax,%rdx
    81a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81a4:	48 8b 08             	mov    (%rax),%rcx
    81a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ab:	48 89 ce             	mov    %rcx,%rsi
    81ae:	48 89 c7             	mov    %rax,%rdi
    81b1:	e8 06 0f 00 00       	call   90bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    81b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81ba:	48 89 c7             	mov    %rax,%rdi
    81bd:	e8 00 fa ff ff       	call   7bc2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    81c2:	90                   	nop
    81c3:	c9                   	leave
    81c4:	c3                   	ret
    81c5:	90                   	nop

00000000000081c6 <_ZNSaI23VkQueueFamilyPropertiesEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    81c6:	55                   	push   %rbp
    81c7:	48 89 e5             	mov    %rsp,%rbp
    81ca:	48 83 ec 10          	sub    $0x10,%rsp
    81ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81d6:	48 89 c7             	mov    %rax,%rdi
    81d9:	e8 14 0f 00 00       	call   90f2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>
    81de:	90                   	nop
    81df:	c9                   	leave
    81e0:	c3                   	ret
    81e1:	90                   	nop

00000000000081e2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    81e2:	55                   	push   %rbp
    81e3:	48 89 e5             	mov    %rsp,%rbp
    81e6:	48 83 ec 10          	sub    $0x10,%rsp
    81ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    81ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    81f2:	48 89 c7             	mov    %rax,%rdi
    81f5:	e8 04 0f 00 00       	call   90fe <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>
    81fa:	90                   	nop
    81fb:	c9                   	leave
    81fc:	c3                   	ret
    81fd:	90                   	nop

00000000000081fe <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    81fe:	55                   	push   %rbp
    81ff:	48 89 e5             	mov    %rsp,%rbp
    8202:	53                   	push   %rbx
    8203:	48 83 ec 28          	sub    $0x28,%rsp
    8207:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    820b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    820f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8213:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8217:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    821b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    821f:	48 89 d6             	mov    %rdx,%rsi
    8222:	48 89 c7             	mov    %rax,%rdi
    8225:	e8 df 0e 00 00       	call   9109 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>
    822a:	48 89 c1             	mov    %rax,%rcx
    822d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8231:	48 89 c2             	mov    %rax,%rdx
    8234:	48 89 ce             	mov    %rcx,%rsi
    8237:	48 89 df             	mov    %rbx,%rdi
    823a:	e8 2b 0f 00 00       	call   916a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    823f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8247:	48 89 d6             	mov    %rdx,%rsi
    824a:	48 89 c7             	mov    %rax,%rdi
    824d:	e8 76 0f 00 00       	call   91c8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>
    8252:	eb 1a                	jmp    826e <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x70>
    8254:	48 89 c3             	mov    %rax,%rbx
    8257:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    825b:	48 89 c7             	mov    %rax,%rdi
    825e:	e8 79 00 00 00       	call   82dc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    8263:	48 89 d8             	mov    %rbx,%rax
    8266:	48 89 c7             	mov    %rax,%rdi
    8269:	e8 62 c4 ff ff       	call   46d0 <_Unwind_Resume@plt>
    826e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8272:	c9                   	leave
    8273:	c3                   	ret

0000000000008274 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8274:	55                   	push   %rbp
    8275:	48 89 e5             	mov    %rsp,%rbp
    8278:	48 83 ec 10          	sub    $0x10,%rsp
    827c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8280:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8284:	48 89 c7             	mov    %rax,%rdi
    8287:	e8 7c 0f 00 00       	call   9208 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    828c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    828f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8293:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    829b:	48 8b 00             	mov    (%rax),%rax
    829e:	48 89 ce             	mov    %rcx,%rsi
    82a1:	48 89 c7             	mov    %rax,%rdi
    82a4:	e8 6d 0f 00 00       	call   9216 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>
      }
    82a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ad:	48 89 c7             	mov    %rax,%rdi
    82b0:	e8 27 00 00 00       	call   82dc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>
    82b5:	90                   	nop
    82b6:	c9                   	leave
    82b7:	c3                   	ret

00000000000082b8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    82b8:	55                   	push   %rbp
    82b9:	48 89 e5             	mov    %rsp,%rbp
    82bc:	48 83 ec 10          	sub    $0x10,%rsp
    82c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    82c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82c8:	48 8b 10             	mov    (%rax),%rdx
    82cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82cf:	48 89 d6             	mov    %rdx,%rsi
    82d2:	48 89 c7             	mov    %rax,%rdi
    82d5:	e8 66 0f 00 00       	call   9240 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    82da:	c9                   	leave
    82db:	c3                   	ret

00000000000082dc <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    82dc:	55                   	push   %rbp
    82dd:	48 89 e5             	mov    %rsp,%rbp
    82e0:	48 83 ec 10          	sub    $0x10,%rsp
    82e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    82e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82ec:	48 8b 50 10          	mov    0x10(%rax),%rdx
    82f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    82f4:	48 8b 00             	mov    (%rax),%rax
    82f7:	48 29 c2             	sub    %rax,%rdx
    82fa:	48 c1 fa 03          	sar    $0x3,%rdx
    82fe:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8305:	aa aa aa 
    8308:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    830c:	48 89 c2             	mov    %rax,%rdx
    830f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8313:	48 8b 08             	mov    (%rax),%rcx
    8316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    831a:	48 89 ce             	mov    %rcx,%rsi
    831d:	48 89 c7             	mov    %rax,%rdi
    8320:	e8 53 0f 00 00       	call   9278 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>
      }
    8325:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8329:	48 89 c7             	mov    %rax,%rdi
    832c:	e8 ad f8 ff ff       	call   7bde <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    8331:	90                   	nop
    8332:	c9                   	leave
    8333:	c3                   	ret

0000000000008334 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
    8334:	55                   	push   %rbp
    8335:	48 89 e5             	mov    %rsp,%rbp
    8338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    833c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8340:	48 8b 50 08          	mov    0x8(%rax),%rdx
    8344:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8348:	48 8b 00             	mov    (%rax),%rax
    834b:	48 29 c2             	sub    %rax,%rdx
    834e:	48 c1 fa 03          	sar    $0x3,%rdx
    8352:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
    8359:	aa aa aa 
    835c:	48 0f af c2          	imul   %rdx,%rax
    8360:	5d                   	pop    %rbp
    8361:	c3                   	ret

0000000000008362 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8362:	55                   	push   %rbp
    8363:	48 89 e5             	mov    %rsp,%rbp
    8366:	48 83 ec 10          	sub    $0x10,%rsp
    836a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    836e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8372:	48 89 c7             	mov    %rax,%rdi
    8375:	e8 34 0f 00 00       	call   92ae <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>
    837a:	90                   	nop
    837b:	c9                   	leave
    837c:	c3                   	ret
    837d:	90                   	nop

000000000000837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    837e:	55                   	push   %rbp
    837f:	48 89 e5             	mov    %rsp,%rbp
    8382:	48 83 ec 10          	sub    $0x10,%rsp
    8386:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    838a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    838e:	48 89 c7             	mov    %rax,%rdi
    8391:	e8 24 0f 00 00       	call   92ba <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    8396:	90                   	nop
    8397:	c9                   	leave
    8398:	c3                   	ret
    8399:	90                   	nop

000000000000839a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    839a:	55                   	push   %rbp
    839b:	48 89 e5             	mov    %rsp,%rbp
    839e:	53                   	push   %rbx
    839f:	48 83 ec 28          	sub    $0x28,%rsp
    83a3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    83a7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    83ab:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    83af:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    83b3:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    83b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    83bb:	48 89 d6             	mov    %rdx,%rsi
    83be:	48 89 c7             	mov    %rax,%rdi
    83c1:	e8 ff 0e 00 00       	call   92c5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>
    83c6:	48 89 c1             	mov    %rax,%rcx
    83c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    83cd:	48 89 c2             	mov    %rax,%rdx
    83d0:	48 89 ce             	mov    %rcx,%rsi
    83d3:	48 89 df             	mov    %rbx,%rdi
    83d6:	e8 4b 0f 00 00       	call   9326 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>
      { _M_default_initialize(__n); }
    83db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    83df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83e3:	48 89 d6             	mov    %rdx,%rsi
    83e6:	48 89 c7             	mov    %rax,%rdi
    83e9:	e8 96 0f 00 00       	call   9384 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>
    83ee:	eb 1a                	jmp    840a <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x70>
    83f0:	48 89 c3             	mov    %rax,%rbx
    83f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    83f7:	48 89 c7             	mov    %rax,%rdi
    83fa:	e8 bb 01 00 00       	call   85ba <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    83ff:	48 89 d8             	mov    %rbx,%rax
    8402:	48 89 c7             	mov    %rax,%rdi
    8405:	e8 c6 c2 ff ff       	call   46d0 <_Unwind_Resume@plt>
    840a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    840e:	c9                   	leave
    840f:	c3                   	ret

0000000000008410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8410:	55                   	push   %rbp
    8411:	48 89 e5             	mov    %rsp,%rbp
    8414:	48 83 ec 10          	sub    $0x10,%rsp
    8418:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    841c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8420:	48 89 c7             	mov    %rax,%rdi
    8423:	e8 9c 0f 00 00       	call   93c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    8428:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    842b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    842f:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8433:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8437:	48 8b 00             	mov    (%rax),%rax
    843a:	48 89 ce             	mov    %rcx,%rsi
    843d:	48 89 c7             	mov    %rax,%rdi
    8440:	e8 8d 0f 00 00       	call   93d2 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>
      }
    8445:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8449:	48 89 c7             	mov    %rax,%rdi
    844c:	e8 69 01 00 00       	call   85ba <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    8451:	90                   	nop
    8452:	c9                   	leave
    8453:	c3                   	ret

0000000000008454 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    8454:	55                   	push   %rbp
    8455:	48 89 e5             	mov    %rsp,%rbp
    8458:	48 83 ec 20          	sub    $0x20,%rsp
    845c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    8460:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8464:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8468:	48 89 d6             	mov    %rdx,%rsi
    846b:	48 89 c7             	mov    %rax,%rdi
    846e:	e8 89 0f 00 00       	call   93fc <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    8473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8477:	c9                   	leave
    8478:	c3                   	ret
    8479:	90                   	nop

000000000000847a <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    847a:	55                   	push   %rbp
    847b:	48 89 e5             	mov    %rsp,%rbp
    847e:	48 83 ec 20          	sub    $0x20,%rsp
    8482:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    8486:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    848a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    848e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    8492:	48 89 d6             	mov    %rdx,%rsi
    8495:	48 89 c7             	mov    %rax,%rdi
    8498:	e8 5f 0f 00 00       	call   93fc <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    849d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84a1:	c9                   	leave
    84a2:	c3                   	ret

00000000000084a3 <_ZN9__gnu_cxxneIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    84a3:	55                   	push   %rbp
    84a4:	48 89 e5             	mov    %rsp,%rbp
    84a7:	53                   	push   %rbx
    84a8:	48 83 ec 18          	sub    $0x18,%rsp
    84ac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    84b0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    84b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    84b8:	48 89 c7             	mov    %rax,%rdi
    84bb:	e8 5a 0f 00 00       	call   941a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    84c0:	48 8b 18             	mov    (%rax),%rbx
    84c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    84c7:	48 89 c7             	mov    %rax,%rdi
    84ca:	e8 4b 0f 00 00       	call   941a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    84cf:	48 8b 00             	mov    (%rax),%rax
    84d2:	48 39 c3             	cmp    %rax,%rbx
    84d5:	0f 95 c0             	setne  %al
    84d8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    84dc:	c9                   	leave
    84dd:	c3                   	ret

00000000000084de <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    84de:	55                   	push   %rbp
    84df:	48 89 e5             	mov    %rsp,%rbp
    84e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    84e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84ea:	48 8b 00             	mov    (%rax),%rax
    84ed:	48 8d 50 18          	lea    0x18(%rax),%rdx
    84f1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    84f5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    84f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    84fc:	5d                   	pop    %rbp
    84fd:	c3                   	ret

00000000000084fe <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    84fe:	55                   	push   %rbp
    84ff:	48 89 e5             	mov    %rsp,%rbp
    8502:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    8506:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    850a:	48 8b 00             	mov    (%rax),%rax
    850d:	5d                   	pop    %rbp
    850e:	c3                   	ret
    850f:	90                   	nop

0000000000008510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
    8510:	55                   	push   %rbp
    8511:	48 89 e5             	mov    %rsp,%rbp
    8514:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8518:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
    851c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8520:	48 8b 08             	mov    (%rax),%rcx
    8523:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8527:	48 89 d0             	mov    %rdx,%rax
    852a:	48 c1 e0 03          	shl    $0x3,%rax
    852e:	48 29 d0             	sub    %rdx,%rax
    8531:	48 c1 e0 02          	shl    $0x2,%rax
    8535:	48 01 c8             	add    %rcx,%rax
      }
    8538:	5d                   	pop    %rbp
    8539:	c3                   	ret

000000000000853a <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_>:
			    __not_<__and_<is_scalar<_Tp>,
					  is_same<_Tp, decay_t<_Up>>>>,
			    is_constructible<_Tp, _Up>,
			    is_assignable<_Tp&, _Up>>,
		    optional&>
	operator=(_Up&& __u)
    853a:	55                   	push   %rbp
    853b:	48 89 e5             	mov    %rsp,%rbp
    853e:	53                   	push   %rbx
    853f:	48 83 ec 18          	sub    $0x18,%rsp
    8543:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8547:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	noexcept(__and_v<is_nothrow_constructible<_Tp, _Up>,
			 is_nothrow_assignable<_Tp&, _Up>>)
	{
	  if (this->_M_is_engaged())
    854b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    854f:	48 89 c7             	mov    %rax,%rdi
    8552:	e8 d1 0e 00 00       	call   9428 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    8557:	84 c0                	test   %al,%al
    8559:	74 36                	je     8591 <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x57>
	    this->_M_get() = std::forward<_Up>(__u);
    855b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    855f:	48 89 c7             	mov    %rax,%rdi
    8562:	e8 17 0f 00 00       	call   947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    8567:	48 89 c3             	mov    %rax,%rbx
    856a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    856e:	48 89 c7             	mov    %rax,%rdi
    8571:	e8 c4 0e 00 00       	call   943a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
    8576:	48 89 c1             	mov    %rax,%rcx
    8579:	48 8b 03             	mov    (%rbx),%rax
    857c:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    8580:	48 89 01             	mov    %rax,(%rcx)
    8583:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    8587:	48 8b 43 10          	mov    0x10(%rbx),%rax
    858b:	48 89 41 10          	mov    %rax,0x10(%rcx)
    858f:	eb 1e                	jmp    85af <_ZNSt8optionalI23VkQueueFamilyPropertiesEaSIRKS0_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS1_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES6_ISt6__and_IJSt9is_scalarIS0_ES7_IS0_NSt5decayISA_E4typeEEEEESt16is_constructibleIS0_JSA_EESt13is_assignableIRS0_SA_EEERS1_E4typeEOSA_+0x75>
	  else
	    this->_M_construct(std::forward<_Up>(__u));
    8591:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8595:	48 89 c7             	mov    %rax,%rdi
    8598:	e8 e1 0e 00 00       	call   947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    859d:	48 89 c2             	mov    %rax,%rdx
    85a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    85a4:	48 89 d6             	mov    %rdx,%rsi
    85a7:	48 89 c7             	mov    %rax,%rdi
    85aa:	e8 dd 0e 00 00       	call   948c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>

	  return *this;
    85af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    85b3:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    85b7:	c9                   	leave
    85b8:	c3                   	ret
    85b9:	90                   	nop

00000000000085ba <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    85ba:	55                   	push   %rbp
    85bb:	48 89 e5             	mov    %rsp,%rbp
    85be:	48 83 ec 10          	sub    $0x10,%rsp
    85c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    85c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85ca:	48 8b 50 10          	mov    0x10(%rax),%rdx
    85ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85d2:	48 8b 00             	mov    (%rax),%rax
    85d5:	48 29 c2             	sub    %rax,%rdx
    85d8:	48 c1 fa 02          	sar    $0x2,%rdx
    85dc:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
    85e3:	db b6 6d 
    85e6:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
    85ea:	48 89 c2             	mov    %rax,%rdx
    85ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f1:	48 8b 08             	mov    (%rax),%rcx
    85f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    85f8:	48 89 ce             	mov    %rcx,%rsi
    85fb:	48 89 c7             	mov    %rax,%rdi
    85fe:	e8 e3 0e 00 00       	call   94e6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>
      }
    8603:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8607:	48 89 c7             	mov    %rax,%rdi
    860a:	e8 eb f5 ff ff       	call   7bfa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    860f:	90                   	nop
    8610:	c9                   	leave
    8611:	c3                   	ret

0000000000008612 <_ZNSaI18VkSurfaceFormatKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8612:	55                   	push   %rbp
    8613:	48 89 e5             	mov    %rsp,%rbp
    8616:	48 83 ec 10          	sub    $0x10,%rsp
    861a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    861e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8622:	48 89 c7             	mov    %rax,%rdi
    8625:	e8 f2 0e 00 00       	call   951c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>
    862a:	90                   	nop
    862b:	c9                   	leave
    862c:	c3                   	ret
    862d:	90                   	nop

000000000000862e <_ZNSaI18VkSurfaceFormatKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    862e:	55                   	push   %rbp
    862f:	48 89 e5             	mov    %rsp,%rbp
    8632:	48 83 ec 10          	sub    $0x10,%rsp
    8636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    863a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    863e:	48 89 c7             	mov    %rax,%rdi
    8641:	e8 e2 0e 00 00       	call   9528 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>
    8646:	90                   	nop
    8647:	c9                   	leave
    8648:	c3                   	ret
    8649:	90                   	nop

000000000000864a <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    864a:	55                   	push   %rbp
    864b:	48 89 e5             	mov    %rsp,%rbp
    864e:	53                   	push   %rbx
    864f:	48 83 ec 28          	sub    $0x28,%rsp
    8653:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8657:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    865b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    865f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    8663:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8667:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    866b:	48 89 d6             	mov    %rdx,%rsi
    866e:	48 89 c7             	mov    %rax,%rdi
    8671:	e8 bd 0e 00 00       	call   9533 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    8676:	48 89 c1             	mov    %rax,%rcx
    8679:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    867d:	48 89 c2             	mov    %rax,%rdx
    8680:	48 89 ce             	mov    %rcx,%rsi
    8683:	48 89 df             	mov    %rbx,%rdi
    8686:	e8 09 0f 00 00       	call   9594 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    868b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    868f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8693:	48 89 d6             	mov    %rdx,%rsi
    8696:	48 89 c7             	mov    %rax,%rdi
    8699:	e8 54 0f 00 00       	call   95f2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>
    869e:	eb 1a                	jmp    86ba <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x70>
    86a0:	48 89 c3             	mov    %rax,%rbx
    86a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    86a7:	48 89 c7             	mov    %rax,%rdi
    86aa:	e8 79 00 00 00       	call   8728 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    86af:	48 89 d8             	mov    %rbx,%rax
    86b2:	48 89 c7             	mov    %rax,%rdi
    86b5:	e8 16 c0 ff ff       	call   46d0 <_Unwind_Resume@plt>
    86ba:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    86be:	c9                   	leave
    86bf:	c3                   	ret

00000000000086c0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    86c0:	55                   	push   %rbp
    86c1:	48 89 e5             	mov    %rsp,%rbp
    86c4:	48 83 ec 10          	sub    $0x10,%rsp
    86c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    86cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86d0:	48 89 c7             	mov    %rax,%rdi
    86d3:	e8 5a 0f 00 00       	call   9632 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    86d8:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    86db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86df:	48 8b 48 08          	mov    0x8(%rax),%rcx
    86e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86e7:	48 8b 00             	mov    (%rax),%rax
    86ea:	48 89 ce             	mov    %rcx,%rsi
    86ed:	48 89 c7             	mov    %rax,%rdi
    86f0:	e8 4b 0f 00 00       	call   9640 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>
      }
    86f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    86f9:	48 89 c7             	mov    %rax,%rdi
    86fc:	e8 27 00 00 00       	call   8728 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    8701:	90                   	nop
    8702:	c9                   	leave
    8703:	c3                   	ret

0000000000008704 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8704:	55                   	push   %rbp
    8705:	48 89 e5             	mov    %rsp,%rbp
    8708:	48 83 ec 10          	sub    $0x10,%rsp
    870c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8710:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8714:	48 8b 10             	mov    (%rax),%rdx
    8717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    871b:	48 89 d6             	mov    %rdx,%rsi
    871e:	48 89 c7             	mov    %rax,%rdi
    8721:	e8 44 0f 00 00       	call   966a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    8726:	c9                   	leave
    8727:	c3                   	ret

0000000000008728 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    8728:	55                   	push   %rbp
    8729:	48 89 e5             	mov    %rsp,%rbp
    872c:	48 83 ec 10          	sub    $0x10,%rsp
    8730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8734:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8738:	48 8b 50 10          	mov    0x10(%rax),%rdx
    873c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8740:	48 8b 00             	mov    (%rax),%rax
    8743:	48 29 c2             	sub    %rax,%rdx
    8746:	48 89 d0             	mov    %rdx,%rax
    8749:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    874d:	48 89 c2             	mov    %rax,%rdx
    8750:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8754:	48 8b 08             	mov    (%rax),%rcx
    8757:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    875b:	48 89 ce             	mov    %rcx,%rsi
    875e:	48 89 c7             	mov    %rax,%rdi
    8761:	e8 3c 0f 00 00       	call   96a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    8766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    876a:	48 89 c7             	mov    %rax,%rdi
    876d:	e8 a4 f4 ff ff       	call   7c16 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    8772:	90                   	nop
    8773:	c9                   	leave
    8774:	c3                   	ret
    8775:	90                   	nop

0000000000008776 <_ZNSaI16VkPresentModeKHREC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    8776:	55                   	push   %rbp
    8777:	48 89 e5             	mov    %rsp,%rbp
    877a:	48 83 ec 10          	sub    $0x10,%rsp
    877e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8786:	48 89 c7             	mov    %rax,%rdi
    8789:	e8 4a 0f 00 00       	call   96d8 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>
    878e:	90                   	nop
    878f:	c9                   	leave
    8790:	c3                   	ret
    8791:	90                   	nop

0000000000008792 <_ZNSaI16VkPresentModeKHRED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    8792:	55                   	push   %rbp
    8793:	48 89 e5             	mov    %rsp,%rbp
    8796:	48 83 ec 10          	sub    $0x10,%rsp
    879a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    879e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    87a2:	48 89 c7             	mov    %rax,%rdi
    87a5:	e8 3a 0f 00 00       	call   96e4 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>
    87aa:	90                   	nop
    87ab:	c9                   	leave
    87ac:	c3                   	ret
    87ad:	90                   	nop

00000000000087ae <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    87ae:	55                   	push   %rbp
    87af:	48 89 e5             	mov    %rsp,%rbp
    87b2:	53                   	push   %rbx
    87b3:	48 83 ec 28          	sub    $0x28,%rsp
    87b7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    87bb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    87bf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    87c3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    87c7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    87cb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    87cf:	48 89 d6             	mov    %rdx,%rsi
    87d2:	48 89 c7             	mov    %rax,%rdi
    87d5:	e8 15 0f 00 00       	call   96ef <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>
    87da:	48 89 c1             	mov    %rax,%rcx
    87dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    87e1:	48 89 c2             	mov    %rax,%rdx
    87e4:	48 89 ce             	mov    %rcx,%rsi
    87e7:	48 89 df             	mov    %rbx,%rdi
    87ea:	e8 61 0f 00 00       	call   9750 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>
      { _M_default_initialize(__n); }
    87ef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    87f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    87f7:	48 89 d6             	mov    %rdx,%rsi
    87fa:	48 89 c7             	mov    %rax,%rdi
    87fd:	e8 ac 0f 00 00       	call   97ae <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>
    8802:	eb 1a                	jmp    881e <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x70>
    8804:	48 89 c3             	mov    %rax,%rbx
    8807:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    880b:	48 89 c7             	mov    %rax,%rdi
    880e:	e8 79 00 00 00       	call   888c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8813:	48 89 d8             	mov    %rbx,%rax
    8816:	48 89 c7             	mov    %rax,%rdi
    8819:	e8 b2 be ff ff       	call   46d0 <_Unwind_Resume@plt>
    881e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8822:	c9                   	leave
    8823:	c3                   	ret

0000000000008824 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8824:	55                   	push   %rbp
    8825:	48 89 e5             	mov    %rsp,%rbp
    8828:	48 83 ec 10          	sub    $0x10,%rsp
    882c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8830:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8834:	48 89 c7             	mov    %rax,%rdi
    8837:	e8 b2 0f 00 00       	call   97ee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    883c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    883f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8843:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8847:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    884b:	48 8b 00             	mov    (%rax),%rax
    884e:	48 89 ce             	mov    %rcx,%rsi
    8851:	48 89 c7             	mov    %rax,%rdi
    8854:	e8 a3 0f 00 00       	call   97fc <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>
      }
    8859:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    885d:	48 89 c7             	mov    %rax,%rdi
    8860:	e8 27 00 00 00       	call   888c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>
    8865:	90                   	nop
    8866:	c9                   	leave
    8867:	c3                   	ret

0000000000008868 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    8868:	55                   	push   %rbp
    8869:	48 89 e5             	mov    %rsp,%rbp
    886c:	48 83 ec 10          	sub    $0x10,%rsp
    8870:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    8874:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8878:	48 8b 10             	mov    (%rax),%rdx
    887b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    887f:	48 89 d6             	mov    %rdx,%rsi
    8882:	48 89 c7             	mov    %rax,%rdi
    8885:	e8 9c 0f 00 00       	call   9826 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
    888a:	c9                   	leave
    888b:	c3                   	ret

000000000000888c <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    888c:	55                   	push   %rbp
    888d:	48 89 e5             	mov    %rsp,%rbp
    8890:	48 83 ec 10          	sub    $0x10,%rsp
    8894:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    8898:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    889c:	48 8b 50 10          	mov    0x10(%rax),%rdx
    88a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88a4:	48 8b 00             	mov    (%rax),%rax
    88a7:	48 29 c2             	sub    %rax,%rdx
    88aa:	48 89 d0             	mov    %rdx,%rax
    88ad:	48 c1 f8 02          	sar    $0x2,%rax
	_M_deallocate(_M_impl._M_start,
    88b1:	48 89 c2             	mov    %rax,%rdx
    88b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88b8:	48 8b 08             	mov    (%rax),%rcx
    88bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88bf:	48 89 ce             	mov    %rcx,%rsi
    88c2:	48 89 c7             	mov    %rax,%rdi
    88c5:	e8 94 0f 00 00       	call   985e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>
      }
    88ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ce:	48 89 c7             	mov    %rax,%rdi
    88d1:	e8 5c f3 ff ff       	call   7c32 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    88d6:	90                   	nop
    88d7:	c9                   	leave
    88d8:	c3                   	ret
    88d9:	90                   	nop

00000000000088da <_ZNSaIP9VkImage_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
    88da:	55                   	push   %rbp
    88db:	48 89 e5             	mov    %rsp,%rbp
    88de:	48 83 ec 10          	sub    $0x10,%rsp
    88e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    88e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    88ea:	48 89 c7             	mov    %rax,%rdi
    88ed:	e8 a2 0f 00 00       	call   9894 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>
    88f2:	90                   	nop
    88f3:	c9                   	leave
    88f4:	c3                   	ret
    88f5:	90                   	nop

00000000000088f6 <_ZNSaIP9VkImage_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
    88f6:	55                   	push   %rbp
    88f7:	48 89 e5             	mov    %rsp,%rbp
    88fa:	48 83 ec 10          	sub    $0x10,%rsp
    88fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8902:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8906:	48 89 c7             	mov    %rax,%rdi
    8909:	e8 92 0f 00 00       	call   98a0 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>
    890e:	90                   	nop
    890f:	c9                   	leave
    8910:	c3                   	ret
    8911:	90                   	nop

0000000000008912 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
    8912:	55                   	push   %rbp
    8913:	48 89 e5             	mov    %rsp,%rbp
    8916:	53                   	push   %rbx
    8917:	48 83 ec 28          	sub    $0x28,%rsp
    891b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    891f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8923:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
    8927:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    892b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    892f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    8933:	48 89 d6             	mov    %rdx,%rsi
    8936:	48 89 c7             	mov    %rax,%rdi
    8939:	e8 6d 0f 00 00       	call   98ab <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>
    893e:	48 89 c1             	mov    %rax,%rcx
    8941:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    8945:	48 89 c2             	mov    %rax,%rdx
    8948:	48 89 ce             	mov    %rcx,%rsi
    894b:	48 89 df             	mov    %rbx,%rdi
    894e:	e8 b9 0f 00 00       	call   990c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
    8953:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8957:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    895b:	48 89 d6             	mov    %rdx,%rsi
    895e:	48 89 c7             	mov    %rax,%rdi
    8961:	e8 04 10 00 00       	call   996a <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>
    8966:	eb 1a                	jmp    8982 <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1EmRKS2_+0x70>
    8968:	48 89 c3             	mov    %rax,%rbx
    896b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    896f:	48 89 c7             	mov    %rax,%rdi
    8972:	e8 79 00 00 00       	call   89f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    8977:	48 89 d8             	mov    %rbx,%rax
    897a:	48 89 c7             	mov    %rax,%rdi
    897d:	e8 4e bd ff ff       	call   46d0 <_Unwind_Resume@plt>
    8982:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8986:	c9                   	leave
    8987:	c3                   	ret

0000000000008988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
    8988:	55                   	push   %rbp
    8989:	48 89 e5             	mov    %rsp,%rbp
    898c:	48 83 ec 10          	sub    $0x10,%rsp
    8990:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
    8994:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8998:	48 89 c7             	mov    %rax,%rdi
    899b:	e8 0a 10 00 00       	call   99aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    89a0:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
    89a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89a7:	48 8b 48 08          	mov    0x8(%rax),%rcx
    89ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89af:	48 8b 00             	mov    (%rax),%rax
    89b2:	48 89 ce             	mov    %rcx,%rsi
    89b5:	48 89 c7             	mov    %rax,%rdi
    89b8:	e8 fb 0f 00 00       	call   99b8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>
      }
    89bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89c1:	48 89 c7             	mov    %rax,%rdi
    89c4:	e8 27 00 00 00       	call   89f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>
    89c9:	90                   	nop
    89ca:	c9                   	leave
    89cb:	c3                   	ret

00000000000089cc <_ZNSt6vectorIP9VkImage_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
    89cc:	55                   	push   %rbp
    89cd:	48 89 e5             	mov    %rsp,%rbp
    89d0:	48 83 ec 10          	sub    $0x10,%rsp
    89d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
    89d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89dc:	48 8b 10             	mov    (%rax),%rdx
    89df:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    89e3:	48 89 d6             	mov    %rdx,%rsi
    89e6:	48 89 c7             	mov    %rax,%rdi
    89e9:	e8 f4 0f 00 00       	call   99e2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
    89ee:	c9                   	leave
    89ef:	c3                   	ret

00000000000089f0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
    89f0:	55                   	push   %rbp
    89f1:	48 89 e5             	mov    %rsp,%rbp
    89f4:	48 83 ec 10          	sub    $0x10,%rsp
    89f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
    89fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a00:	48 8b 50 10          	mov    0x10(%rax),%rdx
    8a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a08:	48 8b 00             	mov    (%rax),%rax
    8a0b:	48 29 c2             	sub    %rax,%rdx
    8a0e:	48 89 d0             	mov    %rdx,%rax
    8a11:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
    8a15:	48 89 c2             	mov    %rax,%rdx
    8a18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a1c:	48 8b 08             	mov    (%rax),%rcx
    8a1f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a23:	48 89 ce             	mov    %rcx,%rsi
    8a26:	48 89 c7             	mov    %rax,%rdi
    8a29:	e8 ec 0f 00 00       	call   9a1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>
      }
    8a2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8a32:	48 89 c7             	mov    %rax,%rdi
    8a35:	e8 14 f2 ff ff       	call   7c4e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    8a3a:	90                   	nop
    8a3b:	c9                   	leave
    8a3c:	c3                   	ret
    8a3d:	90                   	nop

0000000000008a3e <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a3e:	55                   	push   %rbp
    8a3f:	48 89 e5             	mov    %rsp,%rbp
    8a42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a46:	90                   	nop
    8a47:	5d                   	pop    %rbp
    8a48:	c3                   	ret
    8a49:	90                   	nop

0000000000008a4a <_ZNSt15__new_allocatorI17VkLayerPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8a4a:	55                   	push   %rbp
    8a4b:	48 89 e5             	mov    %rsp,%rbp
    8a4e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8a52:	90                   	nop
    8a53:	5d                   	pop    %rbp
    8a54:	c3                   	ret

0000000000008a55 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8a55:	55                   	push   %rbp
    8a56:	48 89 e5             	mov    %rsp,%rbp
    8a59:	53                   	push   %rbx
    8a5a:	48 83 ec 28          	sub    $0x28,%rsp
    8a5e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8a62:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8a66:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8a6a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a6e:	48 89 d6             	mov    %rdx,%rsi
    8a71:	48 89 c7             	mov    %rax,%rdi
    8a74:	e8 25 01 00 00       	call   8b9e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    8a79:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a7d:	48 89 c7             	mov    %rax,%rdi
    8a80:	e8 ca 0f 00 00       	call   9a4f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8a85:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8a89:	0f 92 c3             	setb   %bl
    8a8c:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8a90:	48 89 c7             	mov    %rax,%rdi
    8a93:	e8 ee f1 ff ff       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
    8a98:	84 db                	test   %bl,%bl
    8a9a:	74 0f                	je     8aab <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8a9c:	48 8d 05 05 f6 00 00 	lea    0xf605(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8aa3:	48 89 c7             	mov    %rax,%rdi
    8aa6:	e8 d5 b6 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8aab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8aaf:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ab3:	c9                   	leave
    8ab4:	c3                   	ret
    8ab5:	90                   	nop

0000000000008ab6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8ab6:	55                   	push   %rbp
    8ab7:	48 89 e5             	mov    %rsp,%rbp
    8aba:	53                   	push   %rbx
    8abb:	48 83 ec 28          	sub    $0x28,%rsp
    8abf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8ac3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8ac7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8acb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8acf:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8ad3:	48 89 d6             	mov    %rdx,%rsi
    8ad6:	48 89 c7             	mov    %rax,%rdi
    8ad9:	e8 b4 0f 00 00       	call   9a92 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8ade:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8ae2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ae6:	48 89 d6             	mov    %rdx,%rsi
    8ae9:	48 89 c7             	mov    %rax,%rdi
    8aec:	e8 d3 0f 00 00       	call   9ac4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>
    8af1:	eb 1a                	jmp    8b0d <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8af3:	48 89 c3             	mov    %rax,%rbx
    8af6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8afa:	48 89 c7             	mov    %rax,%rdi
    8afd:	e8 6c f0 ff ff       	call   7b6e <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implD1Ev>
    8b02:	48 89 d8             	mov    %rbx,%rax
    8b05:	48 89 c7             	mov    %rax,%rdi
    8b08:	e8 c3 bb ff ff       	call   46d0 <_Unwind_Resume@plt>
    8b0d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8b11:	c9                   	leave
    8b12:	c3                   	ret
    8b13:	90                   	nop

0000000000008b14 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8b14:	55                   	push   %rbp
    8b15:	48 89 e5             	mov    %rsp,%rbp
    8b18:	48 83 ec 10          	sub    $0x10,%rsp
    8b1c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b20:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8b24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b28:	48 89 c7             	mov    %rax,%rdi
    8b2b:	e8 24 00 00 00       	call   8b54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8b30:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8b33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b37:	48 8b 00             	mov    (%rax),%rax
    8b3a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8b3e:	48 89 ce             	mov    %rcx,%rsi
    8b41:	48 89 c7             	mov    %rax,%rdi
    8b44:	e8 dc 0f 00 00       	call   9b25 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8b49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8b4d:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8b51:	90                   	nop
    8b52:	c9                   	leave
    8b53:	c3                   	ret

0000000000008b54 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8b54:	55                   	push   %rbp
    8b55:	48 89 e5             	mov    %rsp,%rbp
    8b58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8b5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b60:	5d                   	pop    %rbp
    8b61:	c3                   	ret

0000000000008b62 <_ZSt8_DestroyIP17VkLayerPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8b62:	55                   	push   %rbp
    8b63:	48 89 e5             	mov    %rsp,%rbp
    8b66:	48 83 ec 20          	sub    $0x20,%rsp
    8b6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8b72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8b76:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8b7a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8b7e:	48 89 d6             	mov    %rdx,%rsi
    8b81:	48 89 c7             	mov    %rax,%rdi
    8b84:	e8 c5 0f 00 00       	call   9b4e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>
    }
    8b89:	90                   	nop
    8b8a:	c9                   	leave
    8b8b:	c3                   	ret

0000000000008b8c <_ZNKSt6vectorI17VkLayerPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8b8c:	55                   	push   %rbp
    8b8d:	48 89 e5             	mov    %rsp,%rbp
    8b90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8b94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8b98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8b9c:	5d                   	pop    %rbp
    8b9d:	c3                   	ret

0000000000008b9e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8b9e:	55                   	push   %rbp
    8b9f:	48 89 e5             	mov    %rsp,%rbp
    8ba2:	48 83 ec 10          	sub    $0x10,%rsp
    8ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8baa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8bae:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8bb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8bb6:	48 89 d6             	mov    %rdx,%rsi
    8bb9:	48 89 c7             	mov    %rax,%rdi
    8bbc:	e8 b3 0f 00 00       	call   9b74 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>
    8bc1:	90                   	nop
    8bc2:	c9                   	leave
    8bc3:	c3                   	ret

0000000000008bc4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8bc4:	55                   	push   %rbp
    8bc5:	48 89 e5             	mov    %rsp,%rbp
    8bc8:	48 83 ec 20          	sub    $0x20,%rsp
    8bcc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8bd0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8bd4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8bd8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8bdd:	74 17                	je     8bf6 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8bdf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8be3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8be7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8beb:	48 89 ce             	mov    %rcx,%rsi
    8bee:	48 89 c7             	mov    %rax,%rdi
    8bf1:	e8 8d 0f 00 00       	call   9b83 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>
      }
    8bf6:	90                   	nop
    8bf7:	c9                   	leave
    8bf8:	c3                   	ret
    8bf9:	90                   	nop

0000000000008bfa <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8bfa:	55                   	push   %rbp
    8bfb:	48 89 e5             	mov    %rsp,%rbp
    8bfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c02:	90                   	nop
    8c03:	5d                   	pop    %rbp
    8c04:	c3                   	ret
    8c05:	90                   	nop

0000000000008c06 <_ZNSt15__new_allocatorI21VkExtensionPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8c06:	55                   	push   %rbp
    8c07:	48 89 e5             	mov    %rsp,%rbp
    8c0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8c0e:	90                   	nop
    8c0f:	5d                   	pop    %rbp
    8c10:	c3                   	ret

0000000000008c11 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8c11:	55                   	push   %rbp
    8c12:	48 89 e5             	mov    %rsp,%rbp
    8c15:	53                   	push   %rbx
    8c16:	48 83 ec 28          	sub    $0x28,%rsp
    8c1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8c1e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8c22:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8c26:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c2a:	48 89 d6             	mov    %rdx,%rsi
    8c2d:	48 89 c7             	mov    %rax,%rdi
    8c30:	e8 25 01 00 00       	call   8d5a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    8c35:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c39:	48 89 c7             	mov    %rax,%rdi
    8c3c:	e8 70 0f 00 00       	call   9bb1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    8c41:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8c45:	0f 92 c3             	setb   %bl
    8c48:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8c4c:	48 89 c7             	mov    %rax,%rdi
    8c4f:	e8 a0 f1 ff ff       	call   7df4 <_ZNSaI21VkExtensionPropertiesED1Ev>
    8c54:	84 db                	test   %bl,%bl
    8c56:	74 0f                	je     8c67 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    8c58:	48 8d 05 49 f4 00 00 	lea    0xf449(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8c5f:	48 89 c7             	mov    %rax,%rdi
    8c62:	e8 19 b5 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8c67:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8c6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8c6f:	c9                   	leave
    8c70:	c3                   	ret
    8c71:	90                   	nop

0000000000008c72 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8c72:	55                   	push   %rbp
    8c73:	48 89 e5             	mov    %rsp,%rbp
    8c76:	53                   	push   %rbx
    8c77:	48 83 ec 28          	sub    $0x28,%rsp
    8c7b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8c7f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8c83:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8c8b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8c8f:	48 89 d6             	mov    %rdx,%rsi
    8c92:	48 89 c7             	mov    %rax,%rdi
    8c95:	e8 5a 0f 00 00       	call   9bf4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    8c9a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ca2:	48 89 d6             	mov    %rdx,%rsi
    8ca5:	48 89 c7             	mov    %rax,%rdi
    8ca8:	e8 79 0f 00 00       	call   9c26 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>
    8cad:	eb 1a                	jmp    8cc9 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EEC1EmRKS1_+0x57>
    8caf:	48 89 c3             	mov    %rax,%rbx
    8cb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8cb6:	48 89 c7             	mov    %rax,%rdi
    8cb9:	e8 cc ee ff ff       	call   7b8a <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implD1Ev>
    8cbe:	48 89 d8             	mov    %rbx,%rax
    8cc1:	48 89 c7             	mov    %rax,%rdi
    8cc4:	e8 07 ba ff ff       	call   46d0 <_Unwind_Resume@plt>
    8cc9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8ccd:	c9                   	leave
    8cce:	c3                   	ret
    8ccf:	90                   	nop

0000000000008cd0 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8cd0:	55                   	push   %rbp
    8cd1:	48 89 e5             	mov    %rsp,%rbp
    8cd4:	48 83 ec 10          	sub    $0x10,%rsp
    8cd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8cdc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8ce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ce4:	48 89 c7             	mov    %rax,%rdi
    8ce7:	e8 24 00 00 00       	call   8d10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    8cec:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8cef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8cf3:	48 8b 00             	mov    (%rax),%rax
    8cf6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8cfa:	48 89 ce             	mov    %rcx,%rsi
    8cfd:	48 89 c7             	mov    %rax,%rdi
    8d00:	e8 82 0f 00 00       	call   9c87 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8d05:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8d09:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8d0d:	90                   	nop
    8d0e:	c9                   	leave
    8d0f:	c3                   	ret

0000000000008d10 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8d10:	55                   	push   %rbp
    8d11:	48 89 e5             	mov    %rsp,%rbp
    8d14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8d18:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d1c:	5d                   	pop    %rbp
    8d1d:	c3                   	ret

0000000000008d1e <_ZSt8_DestroyIP21VkExtensionPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    8d1e:	55                   	push   %rbp
    8d1f:	48 89 e5             	mov    %rsp,%rbp
    8d22:	48 83 ec 20          	sub    $0x20,%rsp
    8d26:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d2a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d2e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    8d32:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d36:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d3a:	48 89 d6             	mov    %rdx,%rsi
    8d3d:	48 89 c7             	mov    %rax,%rdi
    8d40:	e8 6b 0f 00 00       	call   9cb0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>
    }
    8d45:	90                   	nop
    8d46:	c9                   	leave
    8d47:	c3                   	ret

0000000000008d48 <_ZNKSt6vectorI21VkExtensionPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    8d48:	55                   	push   %rbp
    8d49:	48 89 e5             	mov    %rsp,%rbp
    8d4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    8d54:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    8d58:	5d                   	pop    %rbp
    8d59:	c3                   	ret

0000000000008d5a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8d5a:	55                   	push   %rbp
    8d5b:	48 89 e5             	mov    %rsp,%rbp
    8d5e:	48 83 ec 10          	sub    $0x10,%rsp
    8d62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d66:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8d6a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8d6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d72:	48 89 d6             	mov    %rdx,%rsi
    8d75:	48 89 c7             	mov    %rax,%rdi
    8d78:	e8 59 0f 00 00       	call   9cd6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>
    8d7d:	90                   	nop
    8d7e:	c9                   	leave
    8d7f:	c3                   	ret

0000000000008d80 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    8d80:	55                   	push   %rbp
    8d81:	48 89 e5             	mov    %rsp,%rbp
    8d84:	48 83 ec 20          	sub    $0x20,%rsp
    8d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8d8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8d90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8d94:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8d99:	74 17                	je     8db2 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8d9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8d9f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8da3:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8da7:	48 89 ce             	mov    %rcx,%rsi
    8daa:	48 89 c7             	mov    %rax,%rdi
    8dad:	e8 33 0f 00 00       	call   9ce5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>
      }
    8db2:	90                   	nop
    8db3:	c9                   	leave
    8db4:	c3                   	ret
    8db5:	90                   	nop

0000000000008db6 <_ZNSt15__new_allocatorIPKcEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8db6:	55                   	push   %rbp
    8db7:	48 89 e5             	mov    %rsp,%rbp
    8dba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dbe:	90                   	nop
    8dbf:	5d                   	pop    %rbp
    8dc0:	c3                   	ret
    8dc1:	90                   	nop

0000000000008dc2 <_ZNSt15__new_allocatorIPKcED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8dc2:	55                   	push   %rbp
    8dc3:	48 89 e5             	mov    %rsp,%rbp
    8dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8dca:	90                   	nop
    8dcb:	5d                   	pop    %rbp
    8dcc:	c3                   	ret

0000000000008dcd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8dcd:	55                   	push   %rbp
    8dce:	48 89 e5             	mov    %rsp,%rbp
    8dd1:	53                   	push   %rbx
    8dd2:	48 83 ec 28          	sub    $0x28,%rsp
    8dd6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8dda:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8dde:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8de2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8de6:	48 89 d6             	mov    %rdx,%rsi
    8de9:	48 89 c7             	mov    %rax,%rdi
    8dec:	e8 e9 00 00 00       	call   8eda <_ZNSaIPKcEC1ERKS1_>
    8df1:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8df5:	48 89 c7             	mov    %rax,%rdi
    8df8:	e8 16 0f 00 00       	call   9d13 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
    8dfd:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8e01:	0f 92 c3             	setb   %bl
    8e04:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8e08:	48 89 c7             	mov    %rax,%rdi
    8e0b:	e8 52 f1 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    8e10:	84 db                	test   %bl,%bl
    8e12:	74 0f                	je     8e23 <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8e14:	48 8d 05 8d f2 00 00 	lea    0xf28d(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8e1b:	48 89 c7             	mov    %rax,%rdi
    8e1e:	e8 5d b3 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8e23:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8e27:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e2b:	c9                   	leave
    8e2c:	c3                   	ret
    8e2d:	90                   	nop

0000000000008e2e <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8e2e:	55                   	push   %rbp
    8e2f:	48 89 e5             	mov    %rsp,%rbp
    8e32:	53                   	push   %rbx
    8e33:	48 83 ec 28          	sub    $0x28,%rsp
    8e37:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8e3b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8e3f:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8e43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e47:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8e4b:	48 89 d6             	mov    %rdx,%rsi
    8e4e:	48 89 c7             	mov    %rax,%rdi
    8e51:	e8 00 0f 00 00       	call   9d56 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8e56:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8e5a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e5e:	48 89 d6             	mov    %rdx,%rsi
    8e61:	48 89 c7             	mov    %rax,%rdi
    8e64:	e8 1f 0f 00 00       	call   9d88 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>
    8e69:	eb 1a                	jmp    8e85 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1EmRKS2_+0x57>
    8e6b:	48 89 c3             	mov    %rax,%rbx
    8e6e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8e72:	48 89 c7             	mov    %rax,%rdi
    8e75:	e8 2c ed ff ff       	call   7ba6 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implD1Ev>
    8e7a:	48 89 d8             	mov    %rbx,%rax
    8e7d:	48 89 c7             	mov    %rax,%rdi
    8e80:	e8 4b b8 ff ff       	call   46d0 <_Unwind_Resume@plt>
    8e85:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8e89:	c9                   	leave
    8e8a:	c3                   	ret
    8e8b:	90                   	nop

0000000000008e8c <_ZNSt6vectorIPKcSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    8e8c:	55                   	push   %rbp
    8e8d:	48 89 e5             	mov    %rsp,%rbp
    8e90:	48 83 ec 10          	sub    $0x10,%rsp
    8e94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8e98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    8e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ea0:	48 89 c7             	mov    %rax,%rdi
    8ea3:	e8 24 00 00 00       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
    8ea8:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    8eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8eaf:	48 8b 00             	mov    (%rax),%rax
    8eb2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8eb6:	48 89 ce             	mov    %rcx,%rsi
    8eb9:	48 89 c7             	mov    %rax,%rdi
    8ebc:	e8 1d 0f 00 00       	call   9dde <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    8ec1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8ec5:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    8ec9:	90                   	nop
    8eca:	c9                   	leave
    8ecb:	c3                   	ret

0000000000008ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    8ecc:	55                   	push   %rbp
    8ecd:	48 89 e5             	mov    %rsp,%rbp
    8ed0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    8ed4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ed8:	5d                   	pop    %rbp
    8ed9:	c3                   	ret

0000000000008eda <_ZNSaIPKcEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    8eda:	55                   	push   %rbp
    8edb:	48 89 e5             	mov    %rsp,%rbp
    8ede:	48 83 ec 10          	sub    $0x10,%rsp
    8ee2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8ee6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    8eea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    8eee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8ef2:	48 89 d6             	mov    %rdx,%rsi
    8ef5:	48 89 c7             	mov    %rax,%rdi
    8ef8:	e8 0b 0f 00 00       	call   9e08 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>
    8efd:	90                   	nop
    8efe:	c9                   	leave
    8eff:	c3                   	ret

0000000000008f00 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    8f00:	55                   	push   %rbp
    8f01:	48 89 e5             	mov    %rsp,%rbp
    8f04:	48 83 ec 20          	sub    $0x20,%rsp
    8f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f0c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    8f10:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    8f14:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    8f19:	74 17                	je     8f32 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    8f1b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    8f1f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    8f23:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    8f27:	48 89 ce             	mov    %rcx,%rsi
    8f2a:	48 89 c7             	mov    %rax,%rdi
    8f2d:	e8 e5 0e 00 00       	call   9e17 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>
      }
    8f32:	90                   	nop
    8f33:	c9                   	leave
    8f34:	c3                   	ret
    8f35:	90                   	nop

0000000000008f36 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f36:	55                   	push   %rbp
    8f37:	48 89 e5             	mov    %rsp,%rbp
    8f3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f3e:	90                   	nop
    8f3f:	5d                   	pop    %rbp
    8f40:	c3                   	ret
    8f41:	90                   	nop

0000000000008f42 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    8f42:	55                   	push   %rbp
    8f43:	48 89 e5             	mov    %rsp,%rbp
    8f46:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    8f4a:	90                   	nop
    8f4b:	5d                   	pop    %rbp
    8f4c:	c3                   	ret

0000000000008f4d <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    8f4d:	55                   	push   %rbp
    8f4e:	48 89 e5             	mov    %rsp,%rbp
    8f51:	53                   	push   %rbx
    8f52:	48 83 ec 28          	sub    $0x28,%rsp
    8f56:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    8f5a:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    8f5e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    8f62:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f66:	48 89 d6             	mov    %rdx,%rsi
    8f69:	48 89 c7             	mov    %rax,%rdi
    8f6c:	e8 25 01 00 00       	call   9096 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    8f71:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f75:	48 89 c7             	mov    %rax,%rdi
    8f78:	e8 c8 0e 00 00       	call   9e45 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>
    8f7d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    8f81:	0f 92 c3             	setb   %bl
    8f84:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    8f88:	48 89 c7             	mov    %rax,%rdi
    8f8b:	e8 ee f0 ff ff       	call   807e <_ZNSaIP18VkPhysicalDevice_TED1Ev>
    8f90:	84 db                	test   %bl,%bl
    8f92:	74 0f                	je     8fa3 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    8f94:	48 8d 05 0d f1 00 00 	lea    0xf10d(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    8f9b:	48 89 c7             	mov    %rax,%rdi
    8f9e:	e8 dd b1 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    8fa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    8fa7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    8fab:	c9                   	leave
    8fac:	c3                   	ret
    8fad:	90                   	nop

0000000000008fae <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    8fae:	55                   	push   %rbp
    8faf:	48 89 e5             	mov    %rsp,%rbp
    8fb2:	53                   	push   %rbx
    8fb3:	48 83 ec 28          	sub    $0x28,%rsp
    8fb7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    8fbb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    8fbf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    8fc3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fc7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    8fcb:	48 89 d6             	mov    %rdx,%rsi
    8fce:	48 89 c7             	mov    %rax,%rdi
    8fd1:	e8 b2 0e 00 00       	call   9e88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    8fd6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8fda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8fde:	48 89 d6             	mov    %rdx,%rsi
    8fe1:	48 89 c7             	mov    %rax,%rdi
    8fe4:	e8 d1 0e 00 00       	call   9eba <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>
    8fe9:	eb 1a                	jmp    9005 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EEC1EmRKS2_+0x57>
    8feb:	48 89 c3             	mov    %rax,%rbx
    8fee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    8ff2:	48 89 c7             	mov    %rax,%rdi
    8ff5:	e8 c8 eb ff ff       	call   7bc2 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implD1Ev>
    8ffa:	48 89 d8             	mov    %rbx,%rax
    8ffd:	48 89 c7             	mov    %rax,%rdi
    9000:	e8 cb b6 ff ff       	call   46d0 <_Unwind_Resume@plt>
    9005:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9009:	c9                   	leave
    900a:	c3                   	ret
    900b:	90                   	nop

000000000000900c <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    900c:	55                   	push   %rbp
    900d:	48 89 e5             	mov    %rsp,%rbp
    9010:	48 83 ec 10          	sub    $0x10,%rsp
    9014:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9018:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    901c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9020:	48 89 c7             	mov    %rax,%rdi
    9023:	e8 24 00 00 00       	call   904c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9028:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    902b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    902f:	48 8b 00             	mov    (%rax),%rax
    9032:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9036:	48 89 ce             	mov    %rcx,%rsi
    9039:	48 89 c7             	mov    %rax,%rdi
    903c:	e8 cf 0e 00 00       	call   9f10 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9041:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9045:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9049:	90                   	nop
    904a:	c9                   	leave
    904b:	c3                   	ret

000000000000904c <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    904c:	55                   	push   %rbp
    904d:	48 89 e5             	mov    %rsp,%rbp
    9050:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9054:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9058:	5d                   	pop    %rbp
    9059:	c3                   	ret

000000000000905a <_ZSt8_DestroyIPP18VkPhysicalDevice_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    905a:	55                   	push   %rbp
    905b:	48 89 e5             	mov    %rsp,%rbp
    905e:	48 83 ec 20          	sub    $0x20,%rsp
    9062:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9066:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    906a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    906e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9072:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9076:	48 89 d6             	mov    %rdx,%rsi
    9079:	48 89 c7             	mov    %rax,%rdi
    907c:	e8 b8 0e 00 00       	call   9f39 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>
    }
    9081:	90                   	nop
    9082:	c9                   	leave
    9083:	c3                   	ret

0000000000009084 <_ZNKSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9084:	55                   	push   %rbp
    9085:	48 89 e5             	mov    %rsp,%rbp
    9088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    908c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9090:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9094:	5d                   	pop    %rbp
    9095:	c3                   	ret

0000000000009096 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9096:	55                   	push   %rbp
    9097:	48 89 e5             	mov    %rsp,%rbp
    909a:	48 83 ec 10          	sub    $0x10,%rsp
    909e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    90a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    90aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90ae:	48 89 d6             	mov    %rdx,%rsi
    90b1:	48 89 c7             	mov    %rax,%rdi
    90b4:	e8 a7 0e 00 00       	call   9f60 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>
    90b9:	90                   	nop
    90ba:	c9                   	leave
    90bb:	c3                   	ret

00000000000090bc <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    90bc:	55                   	push   %rbp
    90bd:	48 89 e5             	mov    %rsp,%rbp
    90c0:	48 83 ec 20          	sub    $0x20,%rsp
    90c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90c8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    90cc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    90d0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    90d5:	74 17                	je     90ee <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    90d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    90db:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    90df:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    90e3:	48 89 ce             	mov    %rcx,%rsi
    90e6:	48 89 c7             	mov    %rax,%rdi
    90e9:	e8 81 0e 00 00       	call   9f6f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>
      }
    90ee:	90                   	nop
    90ef:	c9                   	leave
    90f0:	c3                   	ret
    90f1:	90                   	nop

00000000000090f2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90f2:	55                   	push   %rbp
    90f3:	48 89 e5             	mov    %rsp,%rbp
    90f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    90fa:	90                   	nop
    90fb:	5d                   	pop    %rbp
    90fc:	c3                   	ret
    90fd:	90                   	nop

00000000000090fe <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    90fe:	55                   	push   %rbp
    90ff:	48 89 e5             	mov    %rsp,%rbp
    9102:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9106:	90                   	nop
    9107:	5d                   	pop    %rbp
    9108:	c3                   	ret

0000000000009109 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9109:	55                   	push   %rbp
    910a:	48 89 e5             	mov    %rsp,%rbp
    910d:	53                   	push   %rbx
    910e:	48 83 ec 28          	sub    $0x28,%rsp
    9112:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9116:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    911a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    911e:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9122:	48 89 d6             	mov    %rdx,%rsi
    9125:	48 89 c7             	mov    %rax,%rdi
    9128:	e8 25 01 00 00       	call   9252 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    912d:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9131:	48 89 c7             	mov    %rax,%rdi
    9134:	e8 64 0e 00 00       	call   9f9d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>
    9139:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    913d:	0f 92 c3             	setb   %bl
    9140:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9144:	48 89 c7             	mov    %rax,%rdi
    9147:	e8 96 f0 ff ff       	call   81e2 <_ZNSaI23VkQueueFamilyPropertiesED1Ev>
    914c:	84 db                	test   %bl,%bl
    914e:	74 0f                	je     915f <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9150:	48 8d 05 51 ef 00 00 	lea    0xef51(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9157:	48 89 c7             	mov    %rax,%rdi
    915a:	e8 21 b0 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    915f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9163:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9167:	c9                   	leave
    9168:	c3                   	ret
    9169:	90                   	nop

000000000000916a <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    916a:	55                   	push   %rbp
    916b:	48 89 e5             	mov    %rsp,%rbp
    916e:	53                   	push   %rbx
    916f:	48 83 ec 28          	sub    $0x28,%rsp
    9173:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9177:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    917b:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    917f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9183:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9187:	48 89 d6             	mov    %rdx,%rsi
    918a:	48 89 c7             	mov    %rax,%rdi
    918d:	e8 4e 0e 00 00       	call   9fe0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9192:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9196:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    919a:	48 89 d6             	mov    %rdx,%rsi
    919d:	48 89 c7             	mov    %rax,%rdi
    91a0:	e8 6d 0e 00 00       	call   a012 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>
    91a5:	eb 1a                	jmp    91c1 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EEC1EmRKS1_+0x57>
    91a7:	48 89 c3             	mov    %rax,%rbx
    91aa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    91ae:	48 89 c7             	mov    %rax,%rdi
    91b1:	e8 28 ea ff ff       	call   7bde <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implD1Ev>
    91b6:	48 89 d8             	mov    %rbx,%rax
    91b9:	48 89 c7             	mov    %rax,%rdi
    91bc:	e8 0f b5 ff ff       	call   46d0 <_Unwind_Resume@plt>
    91c1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    91c5:	c9                   	leave
    91c6:	c3                   	ret
    91c7:	90                   	nop

00000000000091c8 <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    91c8:	55                   	push   %rbp
    91c9:	48 89 e5             	mov    %rsp,%rbp
    91cc:	48 83 ec 10          	sub    $0x10,%rsp
    91d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    91d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    91d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91dc:	48 89 c7             	mov    %rax,%rdi
    91df:	e8 24 00 00 00       	call   9208 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>
    91e4:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    91e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    91eb:	48 8b 00             	mov    (%rax),%rax
    91ee:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    91f2:	48 89 ce             	mov    %rcx,%rsi
    91f5:	48 89 c7             	mov    %rax,%rdi
    91f8:	e8 75 0e 00 00       	call   a072 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    91fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9201:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    9205:	90                   	nop
    9206:	c9                   	leave
    9207:	c3                   	ret

0000000000009208 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9208:	55                   	push   %rbp
    9209:	48 89 e5             	mov    %rsp,%rbp
    920c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    9210:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9214:	5d                   	pop    %rbp
    9215:	c3                   	ret

0000000000009216 <_ZSt8_DestroyIP23VkQueueFamilyPropertiesS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9216:	55                   	push   %rbp
    9217:	48 89 e5             	mov    %rsp,%rbp
    921a:	48 83 ec 20          	sub    $0x20,%rsp
    921e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9222:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9226:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    922a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    922e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9232:	48 89 d6             	mov    %rdx,%rsi
    9235:	48 89 c7             	mov    %rax,%rdi
    9238:	e8 5e 0e 00 00       	call   a09b <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>
    }
    923d:	90                   	nop
    923e:	c9                   	leave
    923f:	c3                   	ret

0000000000009240 <_ZNKSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9240:	55                   	push   %rbp
    9241:	48 89 e5             	mov    %rsp,%rbp
    9244:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9248:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    924c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9250:	5d                   	pop    %rbp
    9251:	c3                   	ret

0000000000009252 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9252:	55                   	push   %rbp
    9253:	48 89 e5             	mov    %rsp,%rbp
    9256:	48 83 ec 10          	sub    $0x10,%rsp
    925a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    925e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9262:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9266:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    926a:	48 89 d6             	mov    %rdx,%rsi
    926d:	48 89 c7             	mov    %rax,%rdi
    9270:	e8 4d 0e 00 00       	call   a0c2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>
    9275:	90                   	nop
    9276:	c9                   	leave
    9277:	c3                   	ret

0000000000009278 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    9278:	55                   	push   %rbp
    9279:	48 89 e5             	mov    %rsp,%rbp
    927c:	48 83 ec 20          	sub    $0x20,%rsp
    9280:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9284:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9288:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    928c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9291:	74 17                	je     92aa <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9293:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9297:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    929b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    929f:	48 89 ce             	mov    %rcx,%rsi
    92a2:	48 89 c7             	mov    %rax,%rdi
    92a5:	e8 27 0e 00 00       	call   a0d1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>
      }
    92aa:	90                   	nop
    92ab:	c9                   	leave
    92ac:	c3                   	ret
    92ad:	90                   	nop

00000000000092ae <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    92ae:	55                   	push   %rbp
    92af:	48 89 e5             	mov    %rsp,%rbp
    92b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92b6:	90                   	nop
    92b7:	5d                   	pop    %rbp
    92b8:	c3                   	ret
    92b9:	90                   	nop

00000000000092ba <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    92ba:	55                   	push   %rbp
    92bb:	48 89 e5             	mov    %rsp,%rbp
    92be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    92c2:	90                   	nop
    92c3:	5d                   	pop    %rbp
    92c4:	c3                   	ret

00000000000092c5 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    92c5:	55                   	push   %rbp
    92c6:	48 89 e5             	mov    %rsp,%rbp
    92c9:	53                   	push   %rbx
    92ca:	48 83 ec 28          	sub    $0x28,%rsp
    92ce:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    92d2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    92d6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    92da:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    92de:	48 89 d6             	mov    %rdx,%rsi
    92e1:	48 89 c7             	mov    %rax,%rdi
    92e4:	e8 d7 01 00 00       	call   94c0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    92e9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    92ed:	48 89 c7             	mov    %rax,%rdi
    92f0:	e8 0a 0e 00 00       	call   a0ff <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>
    92f5:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    92f9:	0f 92 c3             	setb   %bl
    92fc:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9300:	48 89 c7             	mov    %rax,%rdi
    9303:	e8 76 f0 ff ff       	call   837e <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEED1Ev>
    9308:	84 db                	test   %bl,%bl
    930a:	74 0f                	je     931b <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_S_check_init_lenEmRKS3_+0x56>
	  __throw_length_error(
    930c:	48 8d 05 95 ed 00 00 	lea    0xed95(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9313:	48 89 c7             	mov    %rax,%rdi
    9316:	e8 65 ae ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    931b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    931f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9323:	c9                   	leave
    9324:	c3                   	ret
    9325:	90                   	nop

0000000000009326 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9326:	55                   	push   %rbp
    9327:	48 89 e5             	mov    %rsp,%rbp
    932a:	53                   	push   %rbx
    932b:	48 83 ec 28          	sub    $0x28,%rsp
    932f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9333:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9337:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    933b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    933f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9343:	48 89 d6             	mov    %rdx,%rsi
    9346:	48 89 c7             	mov    %rax,%rdi
    9349:	e8 f4 0d 00 00       	call   a142 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>
      { _M_create_storage(__n); }
    934e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9352:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9356:	48 89 d6             	mov    %rdx,%rsi
    9359:	48 89 c7             	mov    %rax,%rdi
    935c:	e8 13 0e 00 00       	call   a174 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>
    9361:	eb 1a                	jmp    937d <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEC1EmRKS3_+0x57>
    9363:	48 89 c3             	mov    %rax,%rbx
    9366:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    936a:	48 89 c7             	mov    %rax,%rdi
    936d:	e8 88 e8 ff ff       	call   7bfa <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implD1Ev>
    9372:	48 89 d8             	mov    %rbx,%rax
    9375:	48 89 c7             	mov    %rax,%rdi
    9378:	e8 53 b3 ff ff       	call   46d0 <_Unwind_Resume@plt>
    937d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9381:	c9                   	leave
    9382:	c3                   	ret
    9383:	90                   	nop

0000000000009384 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    9384:	55                   	push   %rbp
    9385:	48 89 e5             	mov    %rsp,%rbp
    9388:	48 83 ec 10          	sub    $0x10,%rsp
    938c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9390:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9394:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9398:	48 89 c7             	mov    %rax,%rdi
    939b:	e8 24 00 00 00       	call   93c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>
    93a0:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    93a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93a7:	48 8b 00             	mov    (%rax),%rax
    93aa:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    93ae:	48 89 ce             	mov    %rcx,%rsi
    93b1:	48 89 c7             	mov    %rax,%rdi
    93b4:	e8 1c 0e 00 00       	call   a1d5 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    93b9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    93bd:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    93c1:	90                   	nop
    93c2:	c9                   	leave
    93c3:	c3                   	ret

00000000000093c4 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    93c4:	55                   	push   %rbp
    93c5:	48 89 e5             	mov    %rsp,%rbp
    93c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    93cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93d0:	5d                   	pop    %rbp
    93d1:	c3                   	ret

00000000000093d2 <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesES2_EvT_S4_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    93d2:	55                   	push   %rbp
    93d3:	48 89 e5             	mov    %rsp,%rbp
    93d6:	48 83 ec 20          	sub    $0x20,%rsp
    93da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    93de:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    93e2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    93e6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    93ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    93ee:	48 89 d6             	mov    %rdx,%rsi
    93f1:	48 89 c7             	mov    %rax,%rdi
    93f4:	e8 05 0e 00 00       	call   a1fe <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>
    }
    93f9:	90                   	nop
    93fa:	c9                   	leave
    93fb:	c3                   	ret

00000000000093fc <_ZN9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    93fc:	55                   	push   %rbp
    93fd:	48 89 e5             	mov    %rsp,%rbp
    9400:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9404:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    9408:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    940c:	48 8b 10             	mov    (%rax),%rdx
    940f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9413:	48 89 10             	mov    %rdx,(%rax)
    9416:	90                   	nop
    9417:	5d                   	pop    %rbp
    9418:	c3                   	ret
    9419:	90                   	nop

000000000000941a <_ZNK9__gnu_cxx17__normal_iteratorIP23VkQueueFamilyPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    941a:	55                   	push   %rbp
    941b:	48 89 e5             	mov    %rsp,%rbp
    941e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    9422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9426:	5d                   	pop    %rbp
    9427:	c3                   	ret

0000000000009428 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
    9428:	55                   	push   %rbp
    9429:	48 89 e5             	mov    %rsp,%rbp
    942c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
    9430:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9434:	0f b6 40 18          	movzbl 0x18(%rax),%eax
    9438:	5d                   	pop    %rbp
    9439:	c3                   	ret

000000000000943a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
    943a:	55                   	push   %rbp
    943b:	48 89 e5             	mov    %rsp,%rbp
    943e:	48 83 ec 10          	sub    $0x10,%rsp
    9442:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
    9446:	e8 13 b6 ff ff       	call   4a5e <_ZSt23__is_constant_evaluatedv>
    944b:	84 c0                	test   %al,%al
    944d:	74 1a                	je     9469 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    944f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9453:	48 89 c7             	mov    %rax,%rdi
    9456:	e8 cd ff ff ff       	call   9428 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
    945b:	83 f0 01             	xor    $0x1,%eax
    945e:	84 c0                	test   %al,%al
    9460:	74 07                	je     9469 <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x2f>
    9462:	b8 01 00 00 00       	mov    $0x1,%eax
    9467:	eb 05                	jmp    946e <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv+0x34>
    9469:	b8 00 00 00 00       	mov    $0x0,%eax
    946e:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
    9470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9474:	48 89 c7             	mov    %rax,%rdi
    9477:	e8 a8 0d 00 00       	call   a224 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>
      }
    947c:	c9                   	leave
    947d:	c3                   	ret

000000000000947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>:
   *  This function is used to implement "perfect forwarding".
   */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr _Tp&&
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    947e:	55                   	push   %rbp
    947f:	48 89 e5             	mov    %rsp,%rbp
    9482:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
    9486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    948a:	5d                   	pop    %rbp
    948b:	c3                   	ret

000000000000948c <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    948c:	55                   	push   %rbp
    948d:	48 89 e5             	mov    %rsp,%rbp
    9490:	53                   	push   %rbx
    9491:	48 83 ec 18          	sub    $0x18,%rsp
    9495:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9499:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  static_cast<_Dp*>(this)->_M_payload._M_construct(
    949d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
    94a1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    94a5:	48 89 c7             	mov    %rax,%rdi
    94a8:	e8 d1 ff ff ff       	call   947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    94ad:	48 89 c6             	mov    %rax,%rsi
    94b0:	48 89 df             	mov    %rbx,%rdi
    94b3:	e8 7a 0d 00 00       	call   a232 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>
	}
    94b8:	90                   	nop
    94b9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    94bd:	c9                   	leave
    94be:	c3                   	ret
    94bf:	90                   	nop

00000000000094c0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    94c0:	55                   	push   %rbp
    94c1:	48 89 e5             	mov    %rsp,%rbp
    94c4:	48 83 ec 10          	sub    $0x10,%rsp
    94c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    94d0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    94d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    94d8:	48 89 d6             	mov    %rdx,%rsi
    94db:	48 89 c7             	mov    %rax,%rdi
    94de:	e8 95 0d 00 00       	call   a278 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>
    94e3:	90                   	nop
    94e4:	c9                   	leave
    94e5:	c3                   	ret

00000000000094e6 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m>:
      _M_deallocate(pointer __p, size_t __n)
    94e6:	55                   	push   %rbp
    94e7:	48 89 e5             	mov    %rsp,%rbp
    94ea:	48 83 ec 20          	sub    $0x20,%rsp
    94ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    94f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    94f6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    94fa:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    94ff:	74 17                	je     9518 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE13_M_deallocateEPS2_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9501:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9505:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9509:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    950d:	48 89 ce             	mov    %rcx,%rsi
    9510:	48 89 c7             	mov    %rax,%rdi
    9513:	e8 6f 0d 00 00       	call   a287 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>
      }
    9518:	90                   	nop
    9519:	c9                   	leave
    951a:	c3                   	ret
    951b:	90                   	nop

000000000000951c <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    951c:	55                   	push   %rbp
    951d:	48 89 e5             	mov    %rsp,%rbp
    9520:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9524:	90                   	nop
    9525:	5d                   	pop    %rbp
    9526:	c3                   	ret
    9527:	90                   	nop

0000000000009528 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9528:	55                   	push   %rbp
    9529:	48 89 e5             	mov    %rsp,%rbp
    952c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9530:	90                   	nop
    9531:	5d                   	pop    %rbp
    9532:	c3                   	ret

0000000000009533 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    9533:	55                   	push   %rbp
    9534:	48 89 e5             	mov    %rsp,%rbp
    9537:	53                   	push   %rbx
    9538:	48 83 ec 28          	sub    $0x28,%rsp
    953c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    9540:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9544:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9548:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    954c:	48 89 d6             	mov    %rdx,%rsi
    954f:	48 89 c7             	mov    %rax,%rdi
    9552:	e8 25 01 00 00       	call   967c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    9557:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    955b:	48 89 c7             	mov    %rax,%rdi
    955e:	e8 52 0d 00 00       	call   a2b5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>
    9563:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9567:	0f 92 c3             	setb   %bl
    956a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    956e:	48 89 c7             	mov    %rax,%rdi
    9571:	e8 b8 f0 ff ff       	call   862e <_ZNSaI18VkSurfaceFormatKHRED1Ev>
    9576:	84 db                	test   %bl,%bl
    9578:	74 0f                	je     9589 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    957a:	48 8d 05 27 eb 00 00 	lea    0xeb27(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    9581:	48 89 c7             	mov    %rax,%rdi
    9584:	e8 f7 ab ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9589:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    958d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9591:	c9                   	leave
    9592:	c3                   	ret
    9593:	90                   	nop

0000000000009594 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9594:	55                   	push   %rbp
    9595:	48 89 e5             	mov    %rsp,%rbp
    9598:	53                   	push   %rbx
    9599:	48 83 ec 28          	sub    $0x28,%rsp
    959d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    95a1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    95a5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    95a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95ad:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    95b1:	48 89 d6             	mov    %rdx,%rsi
    95b4:	48 89 c7             	mov    %rax,%rdi
    95b7:	e8 3c 0d 00 00       	call   a2f8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    95bc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    95c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95c4:	48 89 d6             	mov    %rdx,%rsi
    95c7:	48 89 c7             	mov    %rax,%rdi
    95ca:	e8 5b 0d 00 00       	call   a32a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>
    95cf:	eb 1a                	jmp    95eb <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EEC1EmRKS1_+0x57>
    95d1:	48 89 c3             	mov    %rax,%rbx
    95d4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    95d8:	48 89 c7             	mov    %rax,%rdi
    95db:	e8 36 e6 ff ff       	call   7c16 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implD1Ev>
    95e0:	48 89 d8             	mov    %rbx,%rax
    95e3:	48 89 c7             	mov    %rax,%rdi
    95e6:	e8 e5 b0 ff ff       	call   46d0 <_Unwind_Resume@plt>
    95eb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    95ef:	c9                   	leave
    95f0:	c3                   	ret
    95f1:	90                   	nop

00000000000095f2 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    95f2:	55                   	push   %rbp
    95f3:	48 89 e5             	mov    %rsp,%rbp
    95f6:	48 83 ec 10          	sub    $0x10,%rsp
    95fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    95fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    9602:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9606:	48 89 c7             	mov    %rax,%rdi
    9609:	e8 24 00 00 00       	call   9632 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    960e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9615:	48 8b 00             	mov    (%rax),%rax
    9618:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    961c:	48 89 ce             	mov    %rcx,%rsi
    961f:	48 89 c7             	mov    %rax,%rdi
    9622:	e8 59 0d 00 00       	call   a380 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    9627:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    962b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    962f:	90                   	nop
    9630:	c9                   	leave
    9631:	c3                   	ret

0000000000009632 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    9632:	55                   	push   %rbp
    9633:	48 89 e5             	mov    %rsp,%rbp
    9636:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    963a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    963e:	5d                   	pop    %rbp
    963f:	c3                   	ret

0000000000009640 <_ZSt8_DestroyIP18VkSurfaceFormatKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    9640:	55                   	push   %rbp
    9641:	48 89 e5             	mov    %rsp,%rbp
    9644:	48 83 ec 20          	sub    $0x20,%rsp
    9648:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    964c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9650:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9654:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9658:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    965c:	48 89 d6             	mov    %rdx,%rsi
    965f:	48 89 c7             	mov    %rax,%rdi
    9662:	e8 42 0d 00 00       	call   a3a9 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>
    }
    9667:	90                   	nop
    9668:	c9                   	leave
    9669:	c3                   	ret

000000000000966a <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    966a:	55                   	push   %rbp
    966b:	48 89 e5             	mov    %rsp,%rbp
    966e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9672:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9676:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    967a:	5d                   	pop    %rbp
    967b:	c3                   	ret

000000000000967c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    967c:	55                   	push   %rbp
    967d:	48 89 e5             	mov    %rsp,%rbp
    9680:	48 83 ec 10          	sub    $0x10,%rsp
    9684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    968c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9690:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9694:	48 89 d6             	mov    %rdx,%rsi
    9697:	48 89 c7             	mov    %rax,%rdi
    969a:	e8 31 0d 00 00       	call   a3d0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>
    969f:	90                   	nop
    96a0:	c9                   	leave
    96a1:	c3                   	ret

00000000000096a2 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    96a2:	55                   	push   %rbp
    96a3:	48 89 e5             	mov    %rsp,%rbp
    96a6:	48 83 ec 20          	sub    $0x20,%rsp
    96aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    96b2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    96b6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    96bb:	74 17                	je     96d4 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    96bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    96c1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    96c5:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    96c9:	48 89 ce             	mov    %rcx,%rsi
    96cc:	48 89 c7             	mov    %rax,%rdi
    96cf:	e8 0b 0d 00 00       	call   a3df <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>
      }
    96d4:	90                   	nop
    96d5:	c9                   	leave
    96d6:	c3                   	ret
    96d7:	90                   	nop

00000000000096d8 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96d8:	55                   	push   %rbp
    96d9:	48 89 e5             	mov    %rsp,%rbp
    96dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96e0:	90                   	nop
    96e1:	5d                   	pop    %rbp
    96e2:	c3                   	ret
    96e3:	90                   	nop

00000000000096e4 <_ZNSt15__new_allocatorI16VkPresentModeKHRED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    96e4:	55                   	push   %rbp
    96e5:	48 89 e5             	mov    %rsp,%rbp
    96e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    96ec:	90                   	nop
    96ed:	5d                   	pop    %rbp
    96ee:	c3                   	ret

00000000000096ef <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    96ef:	55                   	push   %rbp
    96f0:	48 89 e5             	mov    %rsp,%rbp
    96f3:	53                   	push   %rbx
    96f4:	48 83 ec 28          	sub    $0x28,%rsp
    96f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    96fc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    9700:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    9704:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9708:	48 89 d6             	mov    %rdx,%rsi
    970b:	48 89 c7             	mov    %rax,%rdi
    970e:	e8 25 01 00 00       	call   9838 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    9713:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    9717:	48 89 c7             	mov    %rax,%rdi
    971a:	e8 ee 0c 00 00       	call   a40d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>
    971f:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    9723:	0f 92 c3             	setb   %bl
    9726:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    972a:	48 89 c7             	mov    %rax,%rdi
    972d:	e8 60 f0 ff ff       	call   8792 <_ZNSaI16VkPresentModeKHRED1Ev>
    9732:	84 db                	test   %bl,%bl
    9734:	74 0f                	je     9745 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
    9736:	48 8d 05 6b e9 00 00 	lea    0xe96b(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    973d:	48 89 c7             	mov    %rax,%rdi
    9740:	e8 3b aa ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9745:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9749:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    974d:	c9                   	leave
    974e:	c3                   	ret
    974f:	90                   	nop

0000000000009750 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    9750:	55                   	push   %rbp
    9751:	48 89 e5             	mov    %rsp,%rbp
    9754:	53                   	push   %rbx
    9755:	48 83 ec 28          	sub    $0x28,%rsp
    9759:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    975d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    9761:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9765:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9769:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    976d:	48 89 d6             	mov    %rdx,%rsi
    9770:	48 89 c7             	mov    %rax,%rdi
    9773:	e8 d8 0c 00 00       	call   a450 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>
      { _M_create_storage(__n); }
    9778:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    977c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9780:	48 89 d6             	mov    %rdx,%rsi
    9783:	48 89 c7             	mov    %rax,%rdi
    9786:	e8 f7 0c 00 00       	call   a482 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>
    978b:	eb 1a                	jmp    97a7 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EEC1EmRKS1_+0x57>
    978d:	48 89 c3             	mov    %rax,%rbx
    9790:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9794:	48 89 c7             	mov    %rax,%rdi
    9797:	e8 96 e4 ff ff       	call   7c32 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implD1Ev>
    979c:	48 89 d8             	mov    %rbx,%rax
    979f:	48 89 c7             	mov    %rax,%rdi
    97a2:	e8 29 af ff ff       	call   46d0 <_Unwind_Resume@plt>
    97a7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    97ab:	c9                   	leave
    97ac:	c3                   	ret
    97ad:	90                   	nop

00000000000097ae <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    97ae:	55                   	push   %rbp
    97af:	48 89 e5             	mov    %rsp,%rbp
    97b2:	48 83 ec 10          	sub    $0x10,%rsp
    97b6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    97ba:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    97be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97c2:	48 89 c7             	mov    %rax,%rdi
    97c5:	e8 24 00 00 00       	call   97ee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>
    97ca:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    97cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97d1:	48 8b 00             	mov    (%rax),%rax
    97d4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    97d8:	48 89 ce             	mov    %rcx,%rsi
    97db:	48 89 c7             	mov    %rax,%rdi
    97de:	e8 f5 0c 00 00       	call   a4d8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    97e3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    97e7:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    97eb:	90                   	nop
    97ec:	c9                   	leave
    97ed:	c3                   	ret

00000000000097ee <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    97ee:	55                   	push   %rbp
    97ef:	48 89 e5             	mov    %rsp,%rbp
    97f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    97f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    97fa:	5d                   	pop    %rbp
    97fb:	c3                   	ret

00000000000097fc <_ZSt8_DestroyIP16VkPresentModeKHRS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    97fc:	55                   	push   %rbp
    97fd:	48 89 e5             	mov    %rsp,%rbp
    9800:	48 83 ec 20          	sub    $0x20,%rsp
    9804:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9808:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    980c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    9810:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9814:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9818:	48 89 d6             	mov    %rdx,%rsi
    981b:	48 89 c7             	mov    %rax,%rdi
    981e:	e8 de 0c 00 00       	call   a501 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>
    }
    9823:	90                   	nop
    9824:	c9                   	leave
    9825:	c3                   	ret

0000000000009826 <_ZNKSt6vectorI16VkPresentModeKHRSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    9826:	55                   	push   %rbp
    9827:	48 89 e5             	mov    %rsp,%rbp
    982a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    982e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    9832:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    9836:	5d                   	pop    %rbp
    9837:	c3                   	ret

0000000000009838 <_ZNSaI16VkPresentModeKHREC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    9838:	55                   	push   %rbp
    9839:	48 89 e5             	mov    %rsp,%rbp
    983c:	48 83 ec 10          	sub    $0x10,%rsp
    9840:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9844:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9848:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    984c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9850:	48 89 d6             	mov    %rdx,%rsi
    9853:	48 89 c7             	mov    %rax,%rdi
    9856:	e8 cd 0c 00 00       	call   a528 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>
    985b:	90                   	nop
    985c:	c9                   	leave
    985d:	c3                   	ret

000000000000985e <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
    985e:	55                   	push   %rbp
    985f:	48 89 e5             	mov    %rsp,%rbp
    9862:	48 83 ec 20          	sub    $0x20,%rsp
    9866:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    986a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    986e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9872:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9877:	74 17                	je     9890 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9879:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    987d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9881:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9885:	48 89 ce             	mov    %rcx,%rsi
    9888:	48 89 c7             	mov    %rax,%rdi
    988b:	e8 a7 0c 00 00       	call   a537 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>
      }
    9890:	90                   	nop
    9891:	c9                   	leave
    9892:	c3                   	ret
    9893:	90                   	nop

0000000000009894 <_ZNSt15__new_allocatorIP9VkImage_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    9894:	55                   	push   %rbp
    9895:	48 89 e5             	mov    %rsp,%rbp
    9898:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    989c:	90                   	nop
    989d:	5d                   	pop    %rbp
    989e:	c3                   	ret
    989f:	90                   	nop

00000000000098a0 <_ZNSt15__new_allocatorIP9VkImage_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    98a0:	55                   	push   %rbp
    98a1:	48 89 e5             	mov    %rsp,%rbp
    98a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    98a8:	90                   	nop
    98a9:	5d                   	pop    %rbp
    98aa:	c3                   	ret

00000000000098ab <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
    98ab:	55                   	push   %rbp
    98ac:	48 89 e5             	mov    %rsp,%rbp
    98af:	53                   	push   %rbx
    98b0:	48 83 ec 28          	sub    $0x28,%rsp
    98b4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    98b8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
    98bc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    98c0:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98c4:	48 89 d6             	mov    %rdx,%rsi
    98c7:	48 89 c7             	mov    %rax,%rdi
    98ca:	e8 25 01 00 00       	call   99f4 <_ZNSaIP9VkImage_TEC1ERKS1_>
    98cf:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98d3:	48 89 c7             	mov    %rax,%rdi
    98d6:	e8 8a 0c 00 00       	call   a565 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>
    98db:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    98df:	0f 92 c3             	setb   %bl
    98e2:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
    98e6:	48 89 c7             	mov    %rax,%rdi
    98e9:	e8 08 f0 ff ff       	call   88f6 <_ZNSaIP9VkImage_TED1Ev>
    98ee:	84 db                	test   %bl,%bl
    98f0:	74 0f                	je     9901 <_ZNSt6vectorIP9VkImage_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
    98f2:	48 8d 05 af e7 00 00 	lea    0xe7af(%rip),%rax        # 180a8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x158>
    98f9:	48 89 c7             	mov    %rax,%rdi
    98fc:	e8 7f a8 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
    9901:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
    9905:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9909:	c9                   	leave
    990a:	c3                   	ret
    990b:	90                   	nop

000000000000990c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
    990c:	55                   	push   %rbp
    990d:	48 89 e5             	mov    %rsp,%rbp
    9910:	53                   	push   %rbx
    9911:	48 83 ec 28          	sub    $0x28,%rsp
    9915:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    9919:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    991d:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
    9921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9925:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    9929:	48 89 d6             	mov    %rdx,%rsi
    992c:	48 89 c7             	mov    %rax,%rdi
    992f:	e8 74 0c 00 00       	call   a5a8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
    9934:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    9938:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    993c:	48 89 d6             	mov    %rdx,%rsi
    993f:	48 89 c7             	mov    %rax,%rdi
    9942:	e8 93 0c 00 00       	call   a5da <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>
    9947:	eb 1a                	jmp    9963 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1EmRKS2_+0x57>
    9949:	48 89 c3             	mov    %rax,%rbx
    994c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9950:	48 89 c7             	mov    %rax,%rdi
    9953:	e8 f6 e2 ff ff       	call   7c4e <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implD1Ev>
    9958:	48 89 d8             	mov    %rbx,%rax
    995b:	48 89 c7             	mov    %rax,%rdi
    995e:	e8 6d ad ff ff       	call   46d0 <_Unwind_Resume@plt>
    9963:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    9967:	c9                   	leave
    9968:	c3                   	ret
    9969:	90                   	nop

000000000000996a <_ZNSt6vectorIP9VkImage_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
    996a:	55                   	push   %rbp
    996b:	48 89 e5             	mov    %rsp,%rbp
    996e:	48 83 ec 10          	sub    $0x10,%rsp
    9972:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9976:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
    997a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    997e:	48 89 c7             	mov    %rax,%rdi
    9981:	e8 24 00 00 00       	call   99aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
    9986:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
    9989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    998d:	48 8b 00             	mov    (%rax),%rax
    9990:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9994:	48 89 ce             	mov    %rcx,%rsi
    9997:	48 89 c7             	mov    %rax,%rdi
    999a:	e8 91 0c 00 00       	call   a630 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
    999f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    99a3:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
    99a7:	90                   	nop
    99a8:	c9                   	leave
    99a9:	c3                   	ret

00000000000099aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
    99aa:	55                   	push   %rbp
    99ab:	48 89 e5             	mov    %rsp,%rbp
    99ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
    99b2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99b6:	5d                   	pop    %rbp
    99b7:	c3                   	ret

00000000000099b8 <_ZSt8_DestroyIPP9VkImage_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
    99b8:	55                   	push   %rbp
    99b9:	48 89 e5             	mov    %rsp,%rbp
    99bc:	48 83 ec 20          	sub    $0x20,%rsp
    99c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    99c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
    99cc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    99d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    99d4:	48 89 d6             	mov    %rdx,%rsi
    99d7:	48 89 c7             	mov    %rax,%rdi
    99da:	e8 7a 0c 00 00       	call   a659 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>
    }
    99df:	90                   	nop
    99e0:	c9                   	leave
    99e1:	c3                   	ret

00000000000099e2 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
    99e2:	55                   	push   %rbp
    99e3:	48 89 e5             	mov    %rsp,%rbp
    99e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    99ea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
    99ee:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    99f2:	5d                   	pop    %rbp
    99f3:	c3                   	ret

00000000000099f4 <_ZNSaIP9VkImage_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
    99f4:	55                   	push   %rbp
    99f5:	48 89 e5             	mov    %rsp,%rbp
    99f8:	48 83 ec 10          	sub    $0x10,%rsp
    99fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
    9a04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9a08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a0c:	48 89 d6             	mov    %rdx,%rsi
    9a0f:	48 89 c7             	mov    %rax,%rdi
    9a12:	e8 69 0c 00 00       	call   a680 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>
    9a17:	90                   	nop
    9a18:	c9                   	leave
    9a19:	c3                   	ret

0000000000009a1a <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
    9a1a:	55                   	push   %rbp
    9a1b:	48 89 e5             	mov    %rsp,%rbp
    9a1e:	48 83 ec 20          	sub    $0x20,%rsp
    9a22:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a26:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9a2a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
    9a2e:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    9a33:	74 17                	je     9a4c <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
    9a35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9a39:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9a3d:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9a41:	48 89 ce             	mov    %rcx,%rsi
    9a44:	48 89 c7             	mov    %rax,%rdi
    9a47:	e8 43 0c 00 00       	call   a68f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>
      }
    9a4c:	90                   	nop
    9a4d:	c9                   	leave
    9a4e:	c3                   	ret

0000000000009a4f <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9a4f:	55                   	push   %rbp
    9a50:	48 89 e5             	mov    %rsp,%rbp
    9a53:	48 83 ec 20          	sub    $0x20,%rsp
    9a57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9a5b:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    9a62:	03 3f 00 
    9a65:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9a69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9a6d:	48 89 c7             	mov    %rax,%rdi
    9a70:	e8 48 0c 00 00       	call   a6bd <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>
    9a75:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9a79:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9a7d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9a81:	48 89 d6             	mov    %rdx,%rsi
    9a84:	48 89 c7             	mov    %rax,%rdi
    9a87:	e8 81 b8 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    9a8c:	48 8b 00             	mov    (%rax),%rax
      }
    9a8f:	c9                   	leave
    9a90:	c3                   	ret
    9a91:	90                   	nop

0000000000009a92 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9a92:	55                   	push   %rbp
    9a93:	48 89 e5             	mov    %rsp,%rbp
    9a96:	48 83 ec 10          	sub    $0x10,%rsp
    9a9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9a9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9aa2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9aa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9aaa:	48 89 d6             	mov    %rdx,%rsi
    9aad:	48 89 c7             	mov    %rax,%rdi
    9ab0:	e8 e9 f0 ff ff       	call   8b9e <_ZNSaI17VkLayerPropertiesEC1ERKS0_>
    9ab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ab9:	48 89 c7             	mov    %rax,%rdi
    9abc:	e8 17 0c 00 00       	call   a6d8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9ac1:	90                   	nop
    9ac2:	c9                   	leave
    9ac3:	c3                   	ret

0000000000009ac4 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9ac4:	55                   	push   %rbp
    9ac5:	48 89 e5             	mov    %rsp,%rbp
    9ac8:	48 83 ec 10          	sub    $0x10,%rsp
    9acc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ad0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9ad4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9adc:	48 89 d6             	mov    %rdx,%rsi
    9adf:	48 89 c7             	mov    %rax,%rdi
    9ae2:	e8 1f 0c 00 00       	call   a706 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>
    9ae7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9aeb:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af2:	48 8b 10             	mov    (%rax),%rdx
    9af5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9af9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b01:	48 8b 08             	mov    (%rax),%rcx
    9b04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b08:	48 89 d0             	mov    %rdx,%rax
    9b0b:	48 c1 e0 06          	shl    $0x6,%rax
    9b0f:	48 01 d0             	add    %rdx,%rax
    9b12:	48 c1 e0 03          	shl    $0x3,%rax
    9b16:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b1e:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9b22:	90                   	nop
    9b23:	c9                   	leave
    9b24:	c3                   	ret

0000000000009b25 <_ZSt27__uninitialized_default_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9b25:	55                   	push   %rbp
    9b26:	48 89 e5             	mov    %rsp,%rbp
    9b29:	48 83 ec 20          	sub    $0x20,%rsp
    9b2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b31:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b35:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9b39:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b3d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b41:	48 89 d6             	mov    %rdx,%rsi
    9b44:	48 89 c7             	mov    %rax,%rdi
    9b47:	e8 ed 0b 00 00       	call   a739 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>
    9b4c:	c9                   	leave
    9b4d:	c3                   	ret

0000000000009b4e <_ZSt8_DestroyIP17VkLayerPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9b4e:	55                   	push   %rbp
    9b4f:	48 89 e5             	mov    %rsp,%rbp
    9b52:	48 83 ec 10          	sub    $0x10,%rsp
    9b56:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b5a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9b5e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9b62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9b66:	48 89 d6             	mov    %rdx,%rsi
    9b69:	48 89 c7             	mov    %rax,%rdi
    9b6c:	e8 f1 0b 00 00       	call   a762 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>
    }
    9b71:	90                   	nop
    9b72:	c9                   	leave
    9b73:	c3                   	ret

0000000000009b74 <_ZNSt15__new_allocatorI17VkLayerPropertiesEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    9b74:	55                   	push   %rbp
    9b75:	48 89 e5             	mov    %rsp,%rbp
    9b78:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b7c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b80:	90                   	nop
    9b81:	5d                   	pop    %rbp
    9b82:	c3                   	ret

0000000000009b83 <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9b83:	55                   	push   %rbp
    9b84:	48 89 e5             	mov    %rsp,%rbp
    9b87:	48 83 ec 20          	sub    $0x20,%rsp
    9b8b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9b8f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9b93:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9b97:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9b9b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9b9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ba3:	48 89 ce             	mov    %rcx,%rsi
    9ba6:	48 89 c7             	mov    %rax,%rdi
    9ba9:	e8 c4 0b 00 00       	call   a772 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>
    9bae:	90                   	nop
    9baf:	c9                   	leave
    9bb0:	c3                   	ret

0000000000009bb1 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9bb1:	55                   	push   %rbp
    9bb2:	48 89 e5             	mov    %rsp,%rbp
    9bb5:	48 83 ec 20          	sub    $0x20,%rsp
    9bb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9bbd:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    9bc4:	07 7e 00 
    9bc7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9bcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9bcf:	48 89 c7             	mov    %rax,%rdi
    9bd2:	e8 d5 0b 00 00       	call   a7ac <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>
    9bd7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9bdb:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9bdf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9be3:	48 89 d6             	mov    %rdx,%rsi
    9be6:	48 89 c7             	mov    %rax,%rdi
    9be9:	e8 1f b7 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    9bee:	48 8b 00             	mov    (%rax),%rax
      }
    9bf1:	c9                   	leave
    9bf2:	c3                   	ret
    9bf3:	90                   	nop

0000000000009bf4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9bf4:	55                   	push   %rbp
    9bf5:	48 89 e5             	mov    %rsp,%rbp
    9bf8:	48 83 ec 10          	sub    $0x10,%rsp
    9bfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c00:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9c04:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c0c:	48 89 d6             	mov    %rdx,%rsi
    9c0f:	48 89 c7             	mov    %rax,%rdi
    9c12:	e8 43 f1 ff ff       	call   8d5a <_ZNSaI21VkExtensionPropertiesEC1ERKS0_>
    9c17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c1b:	48 89 c7             	mov    %rax,%rdi
    9c1e:	e8 a3 0b 00 00       	call   a7c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    9c23:	90                   	nop
    9c24:	c9                   	leave
    9c25:	c3                   	ret

0000000000009c26 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9c26:	55                   	push   %rbp
    9c27:	48 89 e5             	mov    %rsp,%rbp
    9c2a:	48 83 ec 10          	sub    $0x10,%rsp
    9c2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c32:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9c36:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c3e:	48 89 d6             	mov    %rdx,%rsi
    9c41:	48 89 c7             	mov    %rax,%rdi
    9c44:	e8 ab 0b 00 00       	call   a7f4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>
    9c49:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9c4d:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9c50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c54:	48 8b 10             	mov    (%rax),%rdx
    9c57:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c5b:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9c5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c63:	48 8b 08             	mov    (%rax),%rcx
    9c66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c6a:	48 89 d0             	mov    %rdx,%rax
    9c6d:	48 c1 e0 06          	shl    $0x6,%rax
    9c71:	48 01 d0             	add    %rdx,%rax
    9c74:	48 c1 e0 02          	shl    $0x2,%rax
    9c78:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    9c7c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9c80:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9c84:	90                   	nop
    9c85:	c9                   	leave
    9c86:	c3                   	ret

0000000000009c87 <_ZSt27__uninitialized_default_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9c87:	55                   	push   %rbp
    9c88:	48 89 e5             	mov    %rsp,%rbp
    9c8b:	48 83 ec 20          	sub    $0x20,%rsp
    9c8f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9c93:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9c97:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9c9b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9c9f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ca3:	48 89 d6             	mov    %rdx,%rsi
    9ca6:	48 89 c7             	mov    %rax,%rdi
    9ca9:	e8 79 0b 00 00       	call   a827 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>
    9cae:	c9                   	leave
    9caf:	c3                   	ret

0000000000009cb0 <_ZSt8_DestroyIP21VkExtensionPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9cb0:	55                   	push   %rbp
    9cb1:	48 89 e5             	mov    %rsp,%rbp
    9cb4:	48 83 ec 10          	sub    $0x10,%rsp
    9cb8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cbc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9cc0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9cc4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9cc8:	48 89 d6             	mov    %rdx,%rsi
    9ccb:	48 89 c7             	mov    %rax,%rdi
    9cce:	e8 7d 0b 00 00       	call   a850 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>
    }
    9cd3:	90                   	nop
    9cd4:	c9                   	leave
    9cd5:	c3                   	ret

0000000000009cd6 <_ZNSt15__new_allocatorI21VkExtensionPropertiesEC1ERKS1_>:
    9cd6:	55                   	push   %rbp
    9cd7:	48 89 e5             	mov    %rsp,%rbp
    9cda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cde:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9ce2:	90                   	nop
    9ce3:	5d                   	pop    %rbp
    9ce4:	c3                   	ret

0000000000009ce5 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9ce5:	55                   	push   %rbp
    9ce6:	48 89 e5             	mov    %rsp,%rbp
    9ce9:	48 83 ec 20          	sub    $0x20,%rsp
    9ced:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9cf1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9cf5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9cf9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9cfd:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9d01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d05:	48 89 ce             	mov    %rcx,%rsi
    9d08:	48 89 c7             	mov    %rax,%rdi
    9d0b:	e8 50 0b 00 00       	call   a860 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>
    9d10:	90                   	nop
    9d11:	c9                   	leave
    9d12:	c3                   	ret

0000000000009d13 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9d13:	55                   	push   %rbp
    9d14:	48 89 e5             	mov    %rsp,%rbp
    9d17:	48 83 ec 20          	sub    $0x20,%rsp
    9d1b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9d1f:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9d26:	ff ff 0f 
    9d29:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9d2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9d31:	48 89 c7             	mov    %rax,%rdi
    9d34:	e8 61 0b 00 00       	call   a89a <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>
    9d39:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9d3d:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9d41:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9d45:	48 89 d6             	mov    %rdx,%rsi
    9d48:	48 89 c7             	mov    %rax,%rdi
    9d4b:	e8 bd b5 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    9d50:	48 8b 00             	mov    (%rax),%rax
      }
    9d53:	c9                   	leave
    9d54:	c3                   	ret
    9d55:	90                   	nop

0000000000009d56 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9d56:	55                   	push   %rbp
    9d57:	48 89 e5             	mov    %rsp,%rbp
    9d5a:	48 83 ec 10          	sub    $0x10,%rsp
    9d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9d66:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d6a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d6e:	48 89 d6             	mov    %rdx,%rsi
    9d71:	48 89 c7             	mov    %rax,%rdi
    9d74:	e8 61 f1 ff ff       	call   8eda <_ZNSaIPKcEC1ERKS1_>
    9d79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9d7d:	48 89 c7             	mov    %rax,%rdi
    9d80:	e8 2f 0b 00 00       	call   a8b4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9d85:	90                   	nop
    9d86:	c9                   	leave
    9d87:	c3                   	ret

0000000000009d88 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9d88:	55                   	push   %rbp
    9d89:	48 89 e5             	mov    %rsp,%rbp
    9d8c:	48 83 ec 10          	sub    $0x10,%rsp
    9d90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9d94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9d98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9d9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9da0:	48 89 d6             	mov    %rdx,%rsi
    9da3:	48 89 c7             	mov    %rax,%rdi
    9da6:	e8 37 0b 00 00       	call   a8e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
    9dab:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9daf:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9db2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9db6:	48 8b 10             	mov    (%rax),%rdx
    9db9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dbd:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9dc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dc5:	48 8b 00             	mov    (%rax),%rax
    9dc8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9dcc:	48 c1 e2 03          	shl    $0x3,%rdx
    9dd0:	48 01 c2             	add    %rax,%rdx
    9dd3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dd7:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9ddb:	90                   	nop
    9ddc:	c9                   	leave
    9ddd:	c3                   	ret

0000000000009dde <_ZSt27__uninitialized_default_n_aIPPKcmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9dde:	55                   	push   %rbp
    9ddf:	48 89 e5             	mov    %rsp,%rbp
    9de2:	48 83 ec 20          	sub    $0x20,%rsp
    9de6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9dea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9dee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9df2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9df6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9dfa:	48 89 d6             	mov    %rdx,%rsi
    9dfd:	48 89 c7             	mov    %rax,%rdi
    9e00:	e8 10 0b 00 00       	call   a915 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>
    9e05:	c9                   	leave
    9e06:	c3                   	ret
    9e07:	90                   	nop

0000000000009e08 <_ZNSt15__new_allocatorIPKcEC1ERKS2_>:
    9e08:	55                   	push   %rbp
    9e09:	48 89 e5             	mov    %rsp,%rbp
    9e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e10:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e14:	90                   	nop
    9e15:	5d                   	pop    %rbp
    9e16:	c3                   	ret

0000000000009e17 <_ZNSt16allocator_traitsISaIPKcEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9e17:	55                   	push   %rbp
    9e18:	48 89 e5             	mov    %rsp,%rbp
    9e1b:	48 83 ec 20          	sub    $0x20,%rsp
    9e1f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e23:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9e27:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9e2b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9e2f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9e33:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9e37:	48 89 ce             	mov    %rcx,%rsi
    9e3a:	48 89 c7             	mov    %rax,%rdi
    9e3d:	e8 fc 0a 00 00       	call   a93e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>
    9e42:	90                   	nop
    9e43:	c9                   	leave
    9e44:	c3                   	ret

0000000000009e45 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9e45:	55                   	push   %rbp
    9e46:	48 89 e5             	mov    %rsp,%rbp
    9e49:	48 83 ec 20          	sub    $0x20,%rsp
    9e4d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9e51:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    9e58:	ff ff 0f 
    9e5b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9e5f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9e63:	48 89 c7             	mov    %rax,%rdi
    9e66:	e8 04 0b 00 00       	call   a96f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>
    9e6b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9e6f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9e73:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9e77:	48 89 d6             	mov    %rdx,%rsi
    9e7a:	48 89 c7             	mov    %rax,%rdi
    9e7d:	e8 8b b4 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    9e82:	48 8b 00             	mov    (%rax),%rax
      }
    9e85:	c9                   	leave
    9e86:	c3                   	ret
    9e87:	90                   	nop

0000000000009e88 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9e88:	55                   	push   %rbp
    9e89:	48 89 e5             	mov    %rsp,%rbp
    9e8c:	48 83 ec 10          	sub    $0x10,%rsp
    9e90:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9e94:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9e98:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9e9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ea0:	48 89 d6             	mov    %rdx,%rsi
    9ea3:	48 89 c7             	mov    %rax,%rdi
    9ea6:	e8 eb f1 ff ff       	call   9096 <_ZNSaIP18VkPhysicalDevice_TEC1ERKS1_>
    9eab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eaf:	48 89 c7             	mov    %rax,%rdi
    9eb2:	e8 d3 0a 00 00       	call   a98a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    9eb7:	90                   	nop
    9eb8:	c9                   	leave
    9eb9:	c3                   	ret

0000000000009eba <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    9eba:	55                   	push   %rbp
    9ebb:	48 89 e5             	mov    %rsp,%rbp
    9ebe:	48 83 ec 10          	sub    $0x10,%rsp
    9ec2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9ec6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    9eca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ece:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ed2:	48 89 d6             	mov    %rdx,%rsi
    9ed5:	48 89 c7             	mov    %rax,%rdi
    9ed8:	e8 db 0a 00 00       	call   a9b8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>
    9edd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    9ee1:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    9ee4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ee8:	48 8b 10             	mov    (%rax),%rdx
    9eeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9eef:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    9ef3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ef7:	48 8b 00             	mov    (%rax),%rax
    9efa:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9efe:	48 c1 e2 03          	shl    $0x3,%rdx
    9f02:	48 01 c2             	add    %rax,%rdx
    9f05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f09:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    9f0d:	90                   	nop
    9f0e:	c9                   	leave
    9f0f:	c3                   	ret

0000000000009f10 <_ZSt27__uninitialized_default_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    9f10:	55                   	push   %rbp
    9f11:	48 89 e5             	mov    %rsp,%rbp
    9f14:	48 83 ec 20          	sub    $0x20,%rsp
    9f18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    9f24:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f2c:	48 89 d6             	mov    %rdx,%rsi
    9f2f:	48 89 c7             	mov    %rax,%rdi
    9f32:	e8 b4 0a 00 00       	call   a9eb <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>
    9f37:	c9                   	leave
    9f38:	c3                   	ret

0000000000009f39 <_ZSt8_DestroyIPP18VkPhysicalDevice_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    9f39:	55                   	push   %rbp
    9f3a:	48 89 e5             	mov    %rsp,%rbp
    9f3d:	48 83 ec 10          	sub    $0x10,%rsp
    9f41:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f45:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    9f49:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9f4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f51:	48 89 d6             	mov    %rdx,%rsi
    9f54:	48 89 c7             	mov    %rax,%rdi
    9f57:	e8 b8 0a 00 00       	call   aa14 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>
    }
    9f5c:	90                   	nop
    9f5d:	c9                   	leave
    9f5e:	c3                   	ret
    9f5f:	90                   	nop

0000000000009f60 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TEC1ERKS2_>:
    9f60:	55                   	push   %rbp
    9f61:	48 89 e5             	mov    %rsp,%rbp
    9f64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f6c:	90                   	nop
    9f6d:	5d                   	pop    %rbp
    9f6e:	c3                   	ret

0000000000009f6f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    9f6f:	55                   	push   %rbp
    9f70:	48 89 e5             	mov    %rsp,%rbp
    9f73:	48 83 ec 20          	sub    $0x20,%rsp
    9f77:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9f7b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    9f7f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    9f83:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    9f87:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    9f8b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9f8f:	48 89 ce             	mov    %rcx,%rsi
    9f92:	48 89 c7             	mov    %rax,%rdi
    9f95:	e8 8a 0a 00 00       	call   aa24 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>
    9f9a:	90                   	nop
    9f9b:	c9                   	leave
    9f9c:	c3                   	ret

0000000000009f9d <_ZNSt6vectorI23VkQueueFamilyPropertiesSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    9f9d:	55                   	push   %rbp
    9f9e:	48 89 e5             	mov    %rsp,%rbp
    9fa1:	48 83 ec 20          	sub    $0x20,%rsp
    9fa5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    9fa9:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    9fb0:	55 55 05 
    9fb3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    9fb7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    9fbb:	48 89 c7             	mov    %rax,%rdi
    9fbe:	e8 92 0a 00 00       	call   aa55 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>
    9fc3:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    9fc7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    9fcb:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    9fcf:	48 89 d6             	mov    %rdx,%rsi
    9fd2:	48 89 c7             	mov    %rax,%rdi
    9fd5:	e8 33 b3 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    9fda:	48 8b 00             	mov    (%rax),%rax
      }
    9fdd:	c9                   	leave
    9fde:	c3                   	ret
    9fdf:	90                   	nop

0000000000009fe0 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    9fe0:	55                   	push   %rbp
    9fe1:	48 89 e5             	mov    %rsp,%rbp
    9fe4:	48 83 ec 10          	sub    $0x10,%rsp
    9fe8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    9fec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    9ff0:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    9ff4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    9ff8:	48 89 d6             	mov    %rdx,%rsi
    9ffb:	48 89 c7             	mov    %rax,%rdi
    9ffe:	e8 4f f2 ff ff       	call   9252 <_ZNSaI23VkQueueFamilyPropertiesEC1ERKS0_>
    a003:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a007:	48 89 c7             	mov    %rax,%rdi
    a00a:	e8 61 0a 00 00       	call   aa70 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a00f:	90                   	nop
    a010:	c9                   	leave
    a011:	c3                   	ret

000000000000a012 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a012:	55                   	push   %rbp
    a013:	48 89 e5             	mov    %rsp,%rbp
    a016:	48 83 ec 10          	sub    $0x10,%rsp
    a01a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a01e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a022:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a026:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a02a:	48 89 d6             	mov    %rdx,%rsi
    a02d:	48 89 c7             	mov    %rax,%rdi
    a030:	e8 69 0a 00 00       	call   aa9e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>
    a035:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a039:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a03c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a040:	48 8b 10             	mov    (%rax),%rdx
    a043:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a047:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a04b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a04f:	48 8b 08             	mov    (%rax),%rcx
    a052:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a056:	48 89 d0             	mov    %rdx,%rax
    a059:	48 01 c0             	add    %rax,%rax
    a05c:	48 01 d0             	add    %rdx,%rax
    a05f:	48 c1 e0 03          	shl    $0x3,%rax
    a063:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a06b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a06f:	90                   	nop
    a070:	c9                   	leave
    a071:	c3                   	ret

000000000000a072 <_ZSt27__uninitialized_default_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a072:	55                   	push   %rbp
    a073:	48 89 e5             	mov    %rsp,%rbp
    a076:	48 83 ec 20          	sub    $0x20,%rsp
    a07a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a07e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a082:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a086:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a08a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a08e:	48 89 d6             	mov    %rdx,%rsi
    a091:	48 89 c7             	mov    %rax,%rdi
    a094:	e8 38 0a 00 00       	call   aad1 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>
    a099:	c9                   	leave
    a09a:	c3                   	ret

000000000000a09b <_ZSt8_DestroyIP23VkQueueFamilyPropertiesEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a09b:	55                   	push   %rbp
    a09c:	48 89 e5             	mov    %rsp,%rbp
    a09f:	48 83 ec 10          	sub    $0x10,%rsp
    a0a3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0a7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a0ab:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a0af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0b3:	48 89 d6             	mov    %rdx,%rsi
    a0b6:	48 89 c7             	mov    %rax,%rdi
    a0b9:	e8 3c 0a 00 00       	call   aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>
    }
    a0be:	90                   	nop
    a0bf:	c9                   	leave
    a0c0:	c3                   	ret
    a0c1:	90                   	nop

000000000000a0c2 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesEC1ERKS1_>:
    a0c2:	55                   	push   %rbp
    a0c3:	48 89 e5             	mov    %rsp,%rbp
    a0c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0ce:	90                   	nop
    a0cf:	5d                   	pop    %rbp
    a0d0:	c3                   	ret

000000000000a0d1 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a0d1:	55                   	push   %rbp
    a0d2:	48 89 e5             	mov    %rsp,%rbp
    a0d5:	48 83 ec 20          	sub    $0x20,%rsp
    a0d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a0dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a0e1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a0e5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a0e9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a0ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a0f1:	48 89 ce             	mov    %rcx,%rsi
    a0f4:	48 89 c7             	mov    %rax,%rdi
    a0f7:	e8 0e 0a 00 00       	call   ab0a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>
    a0fc:	90                   	nop
    a0fd:	c9                   	leave
    a0fe:	c3                   	ret

000000000000a0ff <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_S_max_sizeERKS3_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a0ff:	55                   	push   %rbp
    a100:	48 89 e5             	mov    %rsp,%rbp
    a103:	48 83 ec 20          	sub    $0x20,%rsp
    a107:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a10b:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    a112:	49 92 04 
    a115:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a119:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a11d:	48 89 c7             	mov    %rax,%rdi
    a120:	e8 1e 0a 00 00       	call   ab43 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>
    a125:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a129:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a12d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a131:	48 89 d6             	mov    %rdx,%rsi
    a134:	48 89 c7             	mov    %rax,%rdi
    a137:	e8 d1 b1 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    a13c:	48 8b 00             	mov    (%rax),%rax
      }
    a13f:	c9                   	leave
    a140:	c3                   	ret
    a141:	90                   	nop

000000000000a142 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE12_Vector_implC1ERKS3_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a142:	55                   	push   %rbp
    a143:	48 89 e5             	mov    %rsp,%rbp
    a146:	48 83 ec 10          	sub    $0x10,%rsp
    a14a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a14e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a152:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a156:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a15a:	48 89 d6             	mov    %rdx,%rsi
    a15d:	48 89 c7             	mov    %rax,%rdi
    a160:	e8 5b f3 ff ff       	call   94c0 <_ZNSaISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS2_>
    a165:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a169:	48 89 c7             	mov    %rax,%rdi
    a16c:	e8 ed 09 00 00       	call   ab5e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>
	{ }
    a171:	90                   	nop
    a172:	c9                   	leave
    a173:	c3                   	ret

000000000000a174 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a174:	55                   	push   %rbp
    a175:	48 89 e5             	mov    %rsp,%rbp
    a178:	48 83 ec 10          	sub    $0x10,%rsp
    a17c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a180:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a184:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a18c:	48 89 d6             	mov    %rdx,%rsi
    a18f:	48 89 c7             	mov    %rax,%rdi
    a192:	e8 f5 09 00 00       	call   ab8c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>
    a197:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a19b:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a19e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a2:	48 8b 10             	mov    (%rax),%rdx
    a1a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1a9:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a1ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1b1:	48 8b 08             	mov    (%rax),%rcx
    a1b4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1b8:	48 89 d0             	mov    %rdx,%rax
    a1bb:	48 c1 e0 03          	shl    $0x3,%rax
    a1bf:	48 29 d0             	sub    %rdx,%rax
    a1c2:	48 c1 e0 02          	shl    $0x2,%rax
    a1c6:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
    a1ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a1d2:	90                   	nop
    a1d3:	c9                   	leave
    a1d4:	c3                   	ret

000000000000a1d5 <_ZSt27__uninitialized_default_n_aIPSt8optionalI23VkQueueFamilyPropertiesEmS2_ET_S4_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a1d5:	55                   	push   %rbp
    a1d6:	48 89 e5             	mov    %rsp,%rbp
    a1d9:	48 83 ec 20          	sub    $0x20,%rsp
    a1dd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a1e1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a1e5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a1e9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a1ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a1f1:	48 89 d6             	mov    %rdx,%rsi
    a1f4:	48 89 c7             	mov    %rax,%rdi
    a1f7:	e8 c3 09 00 00       	call   abbf <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>
    a1fc:	c9                   	leave
    a1fd:	c3                   	ret

000000000000a1fe <_ZSt8_DestroyIPSt8optionalI23VkQueueFamilyPropertiesEEvT_S4_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a1fe:	55                   	push   %rbp
    a1ff:	48 89 e5             	mov    %rsp,%rbp
    a202:	48 83 ec 10          	sub    $0x10,%rsp
    a206:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a20a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a20e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a212:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a216:	48 89 d6             	mov    %rdx,%rsi
    a219:	48 89 c7             	mov    %rax,%rdi
    a21c:	e8 c7 09 00 00       	call   abe8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>
    }
    a221:	90                   	nop
    a222:	c9                   	leave
    a223:	c3                   	ret

000000000000a224 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE6_M_getEv>:
      _M_get() noexcept
    a224:	55                   	push   %rbp
    a225:	48 89 e5             	mov    %rsp,%rbp
    a228:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
    a22c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a230:	5d                   	pop    %rbp
    a231:	c3                   	ret

000000000000a232 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE12_M_constructIJRKS0_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
    a232:	55                   	push   %rbp
    a233:	48 89 e5             	mov    %rsp,%rbp
    a236:	53                   	push   %rbx
    a237:	48 83 ec 18          	sub    $0x18,%rsp
    a23b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a23f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
    a243:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    a247:	48 89 c7             	mov    %rax,%rdi
    a24a:	e8 2f f2 ff ff       	call   947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    a24f:	48 89 c3             	mov    %rax,%rbx
    a252:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a256:	48 89 c7             	mov    %rax,%rdi
    a259:	e8 99 09 00 00       	call   abf7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    a25e:	48 89 de             	mov    %rbx,%rsi
    a261:	48 89 c7             	mov    %rax,%rdi
    a264:	e8 9c 09 00 00       	call   ac05 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>
	  this->_M_engaged = true;
    a269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a26d:	c6 40 18 01          	movb   $0x1,0x18(%rax)
	}
    a271:	90                   	nop
    a272:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    a276:	c9                   	leave
    a277:	c3                   	ret

000000000000a278 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEEC1ERKS3_>:
    a278:	55                   	push   %rbp
    a279:	48 89 e5             	mov    %rsp,%rbp
    a27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a280:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a284:	90                   	nop
    a285:	5d                   	pop    %rbp
    a286:	c3                   	ret

000000000000a287 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE10deallocateERS3_PS2_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a287:	55                   	push   %rbp
    a288:	48 89 e5             	mov    %rsp,%rbp
    a28b:	48 83 ec 20          	sub    $0x20,%rsp
    a28f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a293:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a297:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a29b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a29f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a2a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a2a7:	48 89 ce             	mov    %rcx,%rsi
    a2aa:	48 89 c7             	mov    %rax,%rdi
    a2ad:	e8 a4 09 00 00       	call   ac56 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>
    a2b2:	90                   	nop
    a2b3:	c9                   	leave
    a2b4:	c3                   	ret

000000000000a2b5 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a2b5:	55                   	push   %rbp
    a2b6:	48 89 e5             	mov    %rsp,%rbp
    a2b9:	48 83 ec 20          	sub    $0x20,%rsp
    a2bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a2c1:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a2c8:	ff ff 0f 
    a2cb:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a2cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a2d3:	48 89 c7             	mov    %rax,%rdi
    a2d6:	e8 b5 09 00 00       	call   ac90 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>
    a2db:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a2df:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a2e3:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a2e7:	48 89 d6             	mov    %rdx,%rsi
    a2ea:	48 89 c7             	mov    %rax,%rdi
    a2ed:	e8 1b b0 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    a2f2:	48 8b 00             	mov    (%rax),%rax
      }
    a2f5:	c9                   	leave
    a2f6:	c3                   	ret
    a2f7:	90                   	nop

000000000000a2f8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a2f8:	55                   	push   %rbp
    a2f9:	48 89 e5             	mov    %rsp,%rbp
    a2fc:	48 83 ec 10          	sub    $0x10,%rsp
    a300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a304:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a308:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a30c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a310:	48 89 d6             	mov    %rdx,%rsi
    a313:	48 89 c7             	mov    %rax,%rdi
    a316:	e8 61 f3 ff ff       	call   967c <_ZNSaI18VkSurfaceFormatKHREC1ERKS0_>
    a31b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a31f:	48 89 c7             	mov    %rax,%rdi
    a322:	e8 83 09 00 00       	call   acaa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a327:	90                   	nop
    a328:	c9                   	leave
    a329:	c3                   	ret

000000000000a32a <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a32a:	55                   	push   %rbp
    a32b:	48 89 e5             	mov    %rsp,%rbp
    a32e:	48 83 ec 10          	sub    $0x10,%rsp
    a332:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a336:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a33a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a33e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a342:	48 89 d6             	mov    %rdx,%rsi
    a345:	48 89 c7             	mov    %rax,%rdi
    a348:	e8 8b 09 00 00       	call   acd8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>
    a34d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a351:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a354:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a358:	48 8b 10             	mov    (%rax),%rdx
    a35b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a35f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a363:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a367:	48 8b 00             	mov    (%rax),%rax
    a36a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a36e:	48 c1 e2 03          	shl    $0x3,%rdx
    a372:	48 01 c2             	add    %rax,%rdx
    a375:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a379:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a37d:	90                   	nop
    a37e:	c9                   	leave
    a37f:	c3                   	ret

000000000000a380 <_ZSt27__uninitialized_default_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a380:	55                   	push   %rbp
    a381:	48 89 e5             	mov    %rsp,%rbp
    a384:	48 83 ec 20          	sub    $0x20,%rsp
    a388:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a38c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a390:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a394:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a398:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a39c:	48 89 d6             	mov    %rdx,%rsi
    a39f:	48 89 c7             	mov    %rax,%rdi
    a3a2:	e8 64 09 00 00       	call   ad0b <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>
    a3a7:	c9                   	leave
    a3a8:	c3                   	ret

000000000000a3a9 <_ZSt8_DestroyIP18VkSurfaceFormatKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a3a9:	55                   	push   %rbp
    a3aa:	48 89 e5             	mov    %rsp,%rbp
    a3ad:	48 83 ec 10          	sub    $0x10,%rsp
    a3b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a3b9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a3bd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3c1:	48 89 d6             	mov    %rdx,%rsi
    a3c4:	48 89 c7             	mov    %rax,%rdi
    a3c7:	e8 68 09 00 00       	call   ad34 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>
    }
    a3cc:	90                   	nop
    a3cd:	c9                   	leave
    a3ce:	c3                   	ret
    a3cf:	90                   	nop

000000000000a3d0 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHREC1ERKS1_>:
    a3d0:	55                   	push   %rbp
    a3d1:	48 89 e5             	mov    %rsp,%rbp
    a3d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3dc:	90                   	nop
    a3dd:	5d                   	pop    %rbp
    a3de:	c3                   	ret

000000000000a3df <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a3df:	55                   	push   %rbp
    a3e0:	48 89 e5             	mov    %rsp,%rbp
    a3e3:	48 83 ec 20          	sub    $0x20,%rsp
    a3e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a3eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a3ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a3f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a3f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a3fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a3ff:	48 89 ce             	mov    %rcx,%rsi
    a402:	48 89 c7             	mov    %rax,%rdi
    a405:	e8 3a 09 00 00       	call   ad44 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>
    a40a:	90                   	nop
    a40b:	c9                   	leave
    a40c:	c3                   	ret

000000000000a40d <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a40d:	55                   	push   %rbp
    a40e:	48 89 e5             	mov    %rsp,%rbp
    a411:	48 83 ec 20          	sub    $0x20,%rsp
    a415:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a419:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    a420:	ff ff 1f 
    a423:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a427:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a42b:	48 89 c7             	mov    %rax,%rdi
    a42e:	e8 42 09 00 00       	call   ad75 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>
    a433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a437:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a43b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a43f:	48 89 d6             	mov    %rdx,%rsi
    a442:	48 89 c7             	mov    %rax,%rdi
    a445:	e8 c3 ae ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    a44a:	48 8b 00             	mov    (%rax),%rax
      }
    a44d:	c9                   	leave
    a44e:	c3                   	ret
    a44f:	90                   	nop

000000000000a450 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a450:	55                   	push   %rbp
    a451:	48 89 e5             	mov    %rsp,%rbp
    a454:	48 83 ec 10          	sub    $0x10,%rsp
    a458:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a45c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a460:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a464:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a468:	48 89 d6             	mov    %rdx,%rsi
    a46b:	48 89 c7             	mov    %rax,%rdi
    a46e:	e8 c5 f3 ff ff       	call   9838 <_ZNSaI16VkPresentModeKHREC1ERKS0_>
    a473:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a477:	48 89 c7             	mov    %rax,%rdi
    a47a:	e8 11 09 00 00       	call   ad90 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
    a47f:	90                   	nop
    a480:	c9                   	leave
    a481:	c3                   	ret

000000000000a482 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a482:	55                   	push   %rbp
    a483:	48 89 e5             	mov    %rsp,%rbp
    a486:	48 83 ec 10          	sub    $0x10,%rsp
    a48a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a48e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a492:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a496:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a49a:	48 89 d6             	mov    %rdx,%rsi
    a49d:	48 89 c7             	mov    %rax,%rdi
    a4a0:	e8 19 09 00 00       	call   adbe <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>
    a4a5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a4a9:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a4ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b0:	48 8b 10             	mov    (%rax),%rdx
    a4b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4b7:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a4bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4bf:	48 8b 00             	mov    (%rax),%rax
    a4c2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4c6:	48 c1 e2 02          	shl    $0x2,%rdx
    a4ca:	48 01 c2             	add    %rax,%rdx
    a4cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4d1:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a4d5:	90                   	nop
    a4d6:	c9                   	leave
    a4d7:	c3                   	ret

000000000000a4d8 <_ZSt27__uninitialized_default_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a4d8:	55                   	push   %rbp
    a4d9:	48 89 e5             	mov    %rsp,%rbp
    a4dc:	48 83 ec 20          	sub    $0x20,%rsp
    a4e0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a4e4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a4e8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a4ec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a4f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a4f4:	48 89 d6             	mov    %rdx,%rsi
    a4f7:	48 89 c7             	mov    %rax,%rdi
    a4fa:	e8 f2 08 00 00       	call   adf1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>
    a4ff:	c9                   	leave
    a500:	c3                   	ret

000000000000a501 <_ZSt8_DestroyIP16VkPresentModeKHREvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a501:	55                   	push   %rbp
    a502:	48 89 e5             	mov    %rsp,%rbp
    a505:	48 83 ec 10          	sub    $0x10,%rsp
    a509:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a50d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a511:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a515:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a519:	48 89 d6             	mov    %rdx,%rsi
    a51c:	48 89 c7             	mov    %rax,%rdi
    a51f:	e8 f6 08 00 00       	call   ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>
    }
    a524:	90                   	nop
    a525:	c9                   	leave
    a526:	c3                   	ret
    a527:	90                   	nop

000000000000a528 <_ZNSt15__new_allocatorI16VkPresentModeKHREC1ERKS1_>:
    a528:	55                   	push   %rbp
    a529:	48 89 e5             	mov    %rsp,%rbp
    a52c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a530:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a534:	90                   	nop
    a535:	5d                   	pop    %rbp
    a536:	c3                   	ret

000000000000a537 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a537:	55                   	push   %rbp
    a538:	48 89 e5             	mov    %rsp,%rbp
    a53b:	48 83 ec 20          	sub    $0x20,%rsp
    a53f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a543:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a547:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a54b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a54f:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a553:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a557:	48 89 ce             	mov    %rcx,%rsi
    a55a:	48 89 c7             	mov    %rax,%rdi
    a55d:	e8 c8 08 00 00       	call   ae2a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>
    a562:	90                   	nop
    a563:	c9                   	leave
    a564:	c3                   	ret

000000000000a565 <_ZNSt6vectorIP9VkImage_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
    a565:	55                   	push   %rbp
    a566:	48 89 e5             	mov    %rsp,%rbp
    a569:	48 83 ec 20          	sub    $0x20,%rsp
    a56d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
    a571:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    a578:	ff ff 0f 
    a57b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
    a57f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a583:	48 89 c7             	mov    %rax,%rdi
    a586:	e8 d0 08 00 00       	call   ae5b <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>
    a58b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
    a58f:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    a593:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    a597:	48 89 d6             	mov    %rdx,%rsi
    a59a:	48 89 c7             	mov    %rax,%rdi
    a59d:	e8 6b ad ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    a5a2:	48 8b 00             	mov    (%rax),%rax
      }
    a5a5:	c9                   	leave
    a5a6:	c3                   	ret
    a5a7:	90                   	nop

000000000000a5a8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
    a5a8:	55                   	push   %rbp
    a5a9:	48 89 e5             	mov    %rsp,%rbp
    a5ac:	48 83 ec 10          	sub    $0x10,%rsp
    a5b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5b4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
    a5b8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5c0:	48 89 d6             	mov    %rdx,%rsi
    a5c3:	48 89 c7             	mov    %rax,%rdi
    a5c6:	e8 29 f4 ff ff       	call   99f4 <_ZNSaIP9VkImage_TEC1ERKS1_>
    a5cb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5cf:	48 89 c7             	mov    %rax,%rdi
    a5d2:	e8 9f 08 00 00       	call   ae76 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
    a5d7:	90                   	nop
    a5d8:	c9                   	leave
    a5d9:	c3                   	ret

000000000000a5da <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
    a5da:	55                   	push   %rbp
    a5db:	48 89 e5             	mov    %rsp,%rbp
    a5de:	48 83 ec 10          	sub    $0x10,%rsp
    a5e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a5e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
    a5ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a5ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a5f2:	48 89 d6             	mov    %rdx,%rsi
    a5f5:	48 89 c7             	mov    %rax,%rdi
    a5f8:	e8 a7 08 00 00       	call   aea4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>
    a5fd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    a601:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
    a604:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a608:	48 8b 10             	mov    (%rax),%rdx
    a60b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a60f:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
    a613:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a617:	48 8b 00             	mov    (%rax),%rax
    a61a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a61e:	48 c1 e2 03          	shl    $0x3,%rdx
    a622:	48 01 c2             	add    %rax,%rdx
    a625:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a629:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
    a62d:	90                   	nop
    a62e:	c9                   	leave
    a62f:	c3                   	ret

000000000000a630 <_ZSt27__uninitialized_default_n_aIPP9VkImage_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
    a630:	55                   	push   %rbp
    a631:	48 89 e5             	mov    %rsp,%rbp
    a634:	48 83 ec 20          	sub    $0x20,%rsp
    a638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a63c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a640:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
    a644:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a648:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a64c:	48 89 d6             	mov    %rdx,%rsi
    a64f:	48 89 c7             	mov    %rax,%rdi
    a652:	e8 80 08 00 00       	call   aed7 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>
    a657:	c9                   	leave
    a658:	c3                   	ret

000000000000a659 <_ZSt8_DestroyIPP9VkImage_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
    a659:	55                   	push   %rbp
    a65a:	48 89 e5             	mov    %rsp,%rbp
    a65d:	48 83 ec 10          	sub    $0x10,%rsp
    a661:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a665:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
    a669:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a66d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a671:	48 89 d6             	mov    %rdx,%rsi
    a674:	48 89 c7             	mov    %rax,%rdi
    a677:	e8 84 08 00 00       	call   af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>
    }
    a67c:	90                   	nop
    a67d:	c9                   	leave
    a67e:	c3                   	ret
    a67f:	90                   	nop

000000000000a680 <_ZNSt15__new_allocatorIP9VkImage_TEC1ERKS2_>:
    a680:	55                   	push   %rbp
    a681:	48 89 e5             	mov    %rsp,%rbp
    a684:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a688:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a68c:	90                   	nop
    a68d:	5d                   	pop    %rbp
    a68e:	c3                   	ret

000000000000a68f <_ZNSt16allocator_traitsISaIP9VkImage_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
    a68f:	55                   	push   %rbp
    a690:	48 89 e5             	mov    %rsp,%rbp
    a693:	48 83 ec 20          	sub    $0x20,%rsp
    a697:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a69b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a69f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
    a6a3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a6a7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    a6ab:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6af:	48 89 ce             	mov    %rcx,%rsi
    a6b2:	48 89 c7             	mov    %rax,%rdi
    a6b5:	e8 56 08 00 00       	call   af10 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>
    a6ba:	90                   	nop
    a6bb:	c9                   	leave
    a6bc:	c3                   	ret

000000000000a6bd <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a6bd:	55                   	push   %rbp
    a6be:	48 89 e5             	mov    %rsp,%rbp
    a6c1:	48 83 ec 10          	sub    $0x10,%rsp
    a6c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a6c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6cd:	48 89 c7             	mov    %rax,%rdi
    a6d0:	e8 6d 08 00 00       	call   af42 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>
      }
    a6d5:	c9                   	leave
    a6d6:	c3                   	ret
    a6d7:	90                   	nop

000000000000a6d8 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a6d8:	55                   	push   %rbp
    a6d9:	48 89 e5             	mov    %rsp,%rbp
    a6dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a6e0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6e4:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a6eb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6ef:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a6f6:	00 
    a6f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a6fb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a702:	00 
	{ }
    a703:	90                   	nop
    a704:	5d                   	pop    %rbp
    a705:	c3                   	ret

000000000000a706 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a706:	55                   	push   %rbp
    a707:	48 89 e5             	mov    %rsp,%rbp
    a70a:	48 83 ec 10          	sub    $0x10,%rsp
    a70e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a712:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a716:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a71b:	74 15                	je     a732 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a71d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a721:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a725:	48 89 d6             	mov    %rdx,%rsi
    a728:	48 89 c7             	mov    %rax,%rdi
    a72b:	e8 2c 08 00 00       	call   af5c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>
    a730:	eb 05                	jmp    a737 <_ZNSt12_Vector_baseI17VkLayerPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a732:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a737:	c9                   	leave
    a738:	c3                   	ret

000000000000a739 <_ZSt25__uninitialized_default_nIP17VkLayerPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a739:	55                   	push   %rbp
    a73a:	48 89 e5             	mov    %rsp,%rbp
    a73d:	48 83 ec 20          	sub    $0x20,%rsp
    a741:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a745:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a749:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a74d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a751:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a755:	48 89 d6             	mov    %rdx,%rsi
    a758:	48 89 c7             	mov    %rax,%rdi
    a75b:	e8 26 08 00 00       	call   af86 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>
    }
    a760:	c9                   	leave
    a761:	c3                   	ret

000000000000a762 <_ZNSt12_Destroy_auxILb1EE9__destroyIP17VkLayerPropertiesEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    a762:	55                   	push   %rbp
    a763:	48 89 e5             	mov    %rsp,%rbp
    a766:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a76a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a76e:	90                   	nop
    a76f:	5d                   	pop    %rbp
    a770:	c3                   	ret
    a771:	90                   	nop

000000000000a772 <_ZNSt15__new_allocatorI17VkLayerPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a772:	55                   	push   %rbp
    a773:	48 89 e5             	mov    %rsp,%rbp
    a776:	48 83 ec 20          	sub    $0x20,%rsp
    a77a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a77e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a782:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a786:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a78a:	48 89 d0             	mov    %rdx,%rax
    a78d:	48 c1 e0 06          	shl    $0x6,%rax
    a791:	48 01 d0             	add    %rdx,%rax
    a794:	48 c1 e0 03          	shl    $0x3,%rax
    a798:	48 89 c2             	mov    %rax,%rdx
    a79b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a79f:	48 89 d6             	mov    %rdx,%rsi
    a7a2:	48 89 c7             	mov    %rax,%rdi
    a7a5:	e8 e6 9b ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a7aa:	c9                   	leave
    a7ab:	c3                   	ret

000000000000a7ac <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a7ac:	55                   	push   %rbp
    a7ad:	48 89 e5             	mov    %rsp,%rbp
    a7b0:	48 83 ec 10          	sub    $0x10,%rsp
    a7b4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a7b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7bc:	48 89 c7             	mov    %rax,%rdi
    a7bf:	e8 22 08 00 00       	call   afe6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>
      }
    a7c4:	c9                   	leave
    a7c5:	c3                   	ret

000000000000a7c6 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a7c6:	55                   	push   %rbp
    a7c7:	48 89 e5             	mov    %rsp,%rbp
    a7ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a7ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7d2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a7d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7dd:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a7e4:	00 
    a7e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a7e9:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a7f0:	00 
	{ }
    a7f1:	90                   	nop
    a7f2:	5d                   	pop    %rbp
    a7f3:	c3                   	ret

000000000000a7f4 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a7f4:	55                   	push   %rbp
    a7f5:	48 89 e5             	mov    %rsp,%rbp
    a7f8:	48 83 ec 10          	sub    $0x10,%rsp
    a7fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a800:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a804:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a809:	74 15                	je     a820 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    a80b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a80f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a813:	48 89 d6             	mov    %rdx,%rsi
    a816:	48 89 c7             	mov    %rax,%rdi
    a819:	e8 e2 07 00 00       	call   b000 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>
    a81e:	eb 05                	jmp    a825 <_ZNSt12_Vector_baseI21VkExtensionPropertiesSaIS0_EE11_M_allocateEm+0x31>
    a820:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a825:	c9                   	leave
    a826:	c3                   	ret

000000000000a827 <_ZSt25__uninitialized_default_nIP21VkExtensionPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a827:	55                   	push   %rbp
    a828:	48 89 e5             	mov    %rsp,%rbp
    a82b:	48 83 ec 20          	sub    $0x20,%rsp
    a82f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a833:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a837:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a83b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a83f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a843:	48 89 d6             	mov    %rdx,%rsi
    a846:	48 89 c7             	mov    %rax,%rdi
    a849:	e8 dc 07 00 00       	call   b02a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>
    }
    a84e:	c9                   	leave
    a84f:	c3                   	ret

000000000000a850 <_ZNSt12_Destroy_auxILb1EE9__destroyIP21VkExtensionPropertiesEEvT_S4_>:
    a850:	55                   	push   %rbp
    a851:	48 89 e5             	mov    %rsp,%rbp
    a854:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a858:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a85c:	90                   	nop
    a85d:	5d                   	pop    %rbp
    a85e:	c3                   	ret
    a85f:	90                   	nop

000000000000a860 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a860:	55                   	push   %rbp
    a861:	48 89 e5             	mov    %rsp,%rbp
    a864:	48 83 ec 20          	sub    $0x20,%rsp
    a868:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a86c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a870:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a874:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    a878:	48 89 d0             	mov    %rdx,%rax
    a87b:	48 c1 e0 06          	shl    $0x6,%rax
    a87f:	48 01 d0             	add    %rdx,%rax
    a882:	48 c1 e0 02          	shl    $0x2,%rax
    a886:	48 89 c2             	mov    %rax,%rdx
    a889:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a88d:	48 89 d6             	mov    %rdx,%rsi
    a890:	48 89 c7             	mov    %rax,%rdi
    a893:	e8 f8 9a ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a898:	c9                   	leave
    a899:	c3                   	ret

000000000000a89a <_ZNSt16allocator_traitsISaIPKcEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a89a:	55                   	push   %rbp
    a89b:	48 89 e5             	mov    %rsp,%rbp
    a89e:	48 83 ec 10          	sub    $0x10,%rsp
    a8a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a8a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8aa:	48 89 c7             	mov    %rax,%rdi
    a8ad:	e8 d8 07 00 00       	call   b08a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>
      }
    a8b2:	c9                   	leave
    a8b3:	c3                   	ret

000000000000a8b4 <_ZNSt12_Vector_baseIPKcSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a8b4:	55                   	push   %rbp
    a8b5:	48 89 e5             	mov    %rsp,%rbp
    a8b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a8bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a8c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8cb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a8d2:	00 
    a8d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8d7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a8de:	00 
	{ }
    a8df:	90                   	nop
    a8e0:	5d                   	pop    %rbp
    a8e1:	c3                   	ret

000000000000a8e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a8e2:	55                   	push   %rbp
    a8e3:	48 89 e5             	mov    %rsp,%rbp
    a8e6:	48 83 ec 10          	sub    $0x10,%rsp
    a8ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a8ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a8f2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a8f7:	74 15                	je     a90e <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x2c>
    a8f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a8fd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a901:	48 89 d6             	mov    %rdx,%rsi
    a904:	48 89 c7             	mov    %rax,%rdi
    a907:	e8 98 07 00 00       	call   b0a4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>
    a90c:	eb 05                	jmp    a913 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm+0x31>
    a90e:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a913:	c9                   	leave
    a914:	c3                   	ret

000000000000a915 <_ZSt25__uninitialized_default_nIPPKcmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a915:	55                   	push   %rbp
    a916:	48 89 e5             	mov    %rsp,%rbp
    a919:	48 83 ec 20          	sub    $0x20,%rsp
    a91d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a921:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a925:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a929:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    a92d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a931:	48 89 d6             	mov    %rdx,%rsi
    a934:	48 89 c7             	mov    %rax,%rdi
    a937:	e8 92 07 00 00       	call   b0ce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>
    }
    a93c:	c9                   	leave
    a93d:	c3                   	ret

000000000000a93e <_ZNSt15__new_allocatorIPKcE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    a93e:	55                   	push   %rbp
    a93f:	48 89 e5             	mov    %rsp,%rbp
    a942:	48 83 ec 20          	sub    $0x20,%rsp
    a946:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a94a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    a94e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    a952:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    a956:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    a95d:	00 
    a95e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    a962:	48 89 d6             	mov    %rdx,%rsi
    a965:	48 89 c7             	mov    %rax,%rdi
    a968:	e8 23 9a ff ff       	call   4390 <_ZdlPvm@plt>
      }
    a96d:	c9                   	leave
    a96e:	c3                   	ret

000000000000a96f <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    a96f:	55                   	push   %rbp
    a970:	48 89 e5             	mov    %rsp,%rbp
    a973:	48 83 ec 10          	sub    $0x10,%rsp
    a977:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    a97b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a97f:	48 89 c7             	mov    %rax,%rdi
    a982:	e8 a5 07 00 00       	call   b12c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>
      }
    a987:	c9                   	leave
    a988:	c3                   	ret
    a989:	90                   	nop

000000000000a98a <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    a98a:	55                   	push   %rbp
    a98b:	48 89 e5             	mov    %rsp,%rbp
    a98e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    a992:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a996:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    a99d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9a1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    a9a8:	00 
    a9a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9ad:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    a9b4:	00 
	{ }
    a9b5:	90                   	nop
    a9b6:	5d                   	pop    %rbp
    a9b7:	c3                   	ret

000000000000a9b8 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    a9b8:	55                   	push   %rbp
    a9b9:	48 89 e5             	mov    %rsp,%rbp
    a9bc:	48 83 ec 10          	sub    $0x10,%rsp
    a9c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    a9c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    a9c8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    a9cd:	74 15                	je     a9e4 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x2c>
    a9cf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    a9d3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    a9d7:	48 89 d6             	mov    %rdx,%rsi
    a9da:	48 89 c7             	mov    %rax,%rdi
    a9dd:	e8 64 07 00 00       	call   b146 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>
    a9e2:	eb 05                	jmp    a9e9 <_ZNSt12_Vector_baseIP18VkPhysicalDevice_TSaIS1_EE11_M_allocateEm+0x31>
    a9e4:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    a9e9:	c9                   	leave
    a9ea:	c3                   	ret

000000000000a9eb <_ZSt25__uninitialized_default_nIPP18VkPhysicalDevice_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    a9eb:	55                   	push   %rbp
    a9ec:	48 89 e5             	mov    %rsp,%rbp
    a9ef:	48 83 ec 20          	sub    $0x20,%rsp
    a9f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    a9f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    a9fb:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    a9ff:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aa03:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa07:	48 89 d6             	mov    %rdx,%rsi
    aa0a:	48 89 c7             	mov    %rax,%rdi
    aa0d:	e8 5e 07 00 00       	call   b170 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>
    }
    aa12:	c9                   	leave
    aa13:	c3                   	ret

000000000000aa14 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP18VkPhysicalDevice_TEEvT_S5_>:
    aa14:	55                   	push   %rbp
    aa15:	48 89 e5             	mov    %rsp,%rbp
    aa18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa20:	90                   	nop
    aa21:	5d                   	pop    %rbp
    aa22:	c3                   	ret
    aa23:	90                   	nop

000000000000aa24 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    aa24:	55                   	push   %rbp
    aa25:	48 89 e5             	mov    %rsp,%rbp
    aa28:	48 83 ec 20          	sub    $0x20,%rsp
    aa2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aa30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    aa34:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    aa38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aa3c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    aa43:	00 
    aa44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    aa48:	48 89 d6             	mov    %rdx,%rsi
    aa4b:	48 89 c7             	mov    %rax,%rdi
    aa4e:	e8 3d 99 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    aa53:	c9                   	leave
    aa54:	c3                   	ret

000000000000aa55 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    aa55:	55                   	push   %rbp
    aa56:	48 89 e5             	mov    %rsp,%rbp
    aa59:	48 83 ec 10          	sub    $0x10,%rsp
    aa5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    aa61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa65:	48 89 c7             	mov    %rax,%rdi
    aa68:	e8 61 07 00 00       	call   b1ce <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>
      }
    aa6d:	c9                   	leave
    aa6e:	c3                   	ret
    aa6f:	90                   	nop

000000000000aa70 <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    aa70:	55                   	push   %rbp
    aa71:	48 89 e5             	mov    %rsp,%rbp
    aa74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    aa78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa7c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    aa83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa87:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    aa8e:	00 
    aa8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aa93:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aa9a:	00 
	{ }
    aa9b:	90                   	nop
    aa9c:	5d                   	pop    %rbp
    aa9d:	c3                   	ret

000000000000aa9e <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aa9e:	55                   	push   %rbp
    aa9f:	48 89 e5             	mov    %rsp,%rbp
    aaa2:	48 83 ec 10          	sub    $0x10,%rsp
    aaa6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aaaa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aaae:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aab3:	74 15                	je     aaca <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x2c>
    aab5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aab9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aabd:	48 89 d6             	mov    %rdx,%rsi
    aac0:	48 89 c7             	mov    %rax,%rdi
    aac3:	e8 20 07 00 00       	call   b1e8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>
    aac8:	eb 05                	jmp    aacf <_ZNSt12_Vector_baseI23VkQueueFamilyPropertiesSaIS0_EE11_M_allocateEm+0x31>
    aaca:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aacf:	c9                   	leave
    aad0:	c3                   	ret

000000000000aad1 <_ZSt25__uninitialized_default_nIP23VkQueueFamilyPropertiesmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aad1:	55                   	push   %rbp
    aad2:	48 89 e5             	mov    %rsp,%rbp
    aad5:	48 83 ec 20          	sub    $0x20,%rsp
    aad9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aadd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aae1:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aae5:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aae9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aaed:	48 89 d6             	mov    %rdx,%rsi
    aaf0:	48 89 c7             	mov    %rax,%rdi
    aaf3:	e8 1a 07 00 00       	call   b212 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>
    }
    aaf8:	c9                   	leave
    aaf9:	c3                   	ret

000000000000aafa <_ZNSt12_Destroy_auxILb1EE9__destroyIP23VkQueueFamilyPropertiesEEvT_S4_>:
    aafa:	55                   	push   %rbp
    aafb:	48 89 e5             	mov    %rsp,%rbp
    aafe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab02:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab06:	90                   	nop
    ab07:	5d                   	pop    %rbp
    ab08:	c3                   	ret
    ab09:	90                   	nop

000000000000ab0a <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ab0a:	55                   	push   %rbp
    ab0b:	48 89 e5             	mov    %rsp,%rbp
    ab0e:	48 83 ec 20          	sub    $0x20,%rsp
    ab12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab16:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ab1a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ab1e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ab22:	48 89 d0             	mov    %rdx,%rax
    ab25:	48 01 c0             	add    %rax,%rax
    ab28:	48 01 d0             	add    %rdx,%rax
    ab2b:	48 c1 e0 03          	shl    $0x3,%rax
    ab2f:	48 89 c2             	mov    %rax,%rdx
    ab32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ab36:	48 89 d6             	mov    %rdx,%rsi
    ab39:	48 89 c7             	mov    %rax,%rdi
    ab3c:	e8 4f 98 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ab41:	c9                   	leave
    ab42:	c3                   	ret

000000000000ab43 <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8max_sizeERKS3_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ab43:	55                   	push   %rbp
    ab44:	48 89 e5             	mov    %rsp,%rbp
    ab47:	48 83 ec 10          	sub    $0x10,%rsp
    ab4b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ab4f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab53:	48 89 c7             	mov    %rax,%rdi
    ab56:	e8 15 07 00 00       	call   b270 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>
      }
    ab5b:	c9                   	leave
    ab5c:	c3                   	ret
    ab5d:	90                   	nop

000000000000ab5e <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ab5e:	55                   	push   %rbp
    ab5f:	48 89 e5             	mov    %rsp,%rbp
    ab62:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ab66:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab6a:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ab71:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab75:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ab7c:	00 
    ab7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ab81:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    ab88:	00 
	{ }
    ab89:	90                   	nop
    ab8a:	5d                   	pop    %rbp
    ab8b:	c3                   	ret

000000000000ab8c <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    ab8c:	55                   	push   %rbp
    ab8d:	48 89 e5             	mov    %rsp,%rbp
    ab90:	48 83 ec 10          	sub    $0x10,%rsp
    ab94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ab98:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ab9c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aba1:	74 15                	je     abb8 <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x2c>
    aba3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aba7:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    abab:	48 89 d6             	mov    %rdx,%rsi
    abae:	48 89 c7             	mov    %rax,%rdi
    abb1:	e8 d4 06 00 00       	call   b28a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>
    abb6:	eb 05                	jmp    abbd <_ZNSt12_Vector_baseISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE11_M_allocateEm+0x31>
    abb8:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    abbd:	c9                   	leave
    abbe:	c3                   	ret

000000000000abbf <_ZSt25__uninitialized_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmET_S4_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    abbf:	55                   	push   %rbp
    abc0:	48 89 e5             	mov    %rsp,%rbp
    abc3:	48 83 ec 20          	sub    $0x20,%rsp
    abc7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    abcb:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    abcf:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    abd3:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    abd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    abdb:	48 89 d6             	mov    %rdx,%rsi
    abde:	48 89 c7             	mov    %rax,%rdi
    abe1:	e8 ce 06 00 00       	call   b2b4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>
    }
    abe6:	c9                   	leave
    abe7:	c3                   	ret

000000000000abe8 <_ZNSt12_Destroy_auxILb1EE9__destroyIPSt8optionalI23VkQueueFamilyPropertiesEEEvT_S6_>:
    abe8:	55                   	push   %rbp
    abe9:	48 89 e5             	mov    %rsp,%rbp
    abec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    abf0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    abf4:	90                   	nop
    abf5:	5d                   	pop    %rbp
    abf6:	c3                   	ret

000000000000abf7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    abf7:	55                   	push   %rbp
    abf8:	48 89 e5             	mov    %rsp,%rbp
    abfb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    abff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ac03:	5d                   	pop    %rbp
    ac04:	c3                   	ret

000000000000ac05 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJRKS0_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    ac05:	55                   	push   %rbp
    ac06:	48 89 e5             	mov    %rsp,%rbp
    ac09:	53                   	push   %rbx
    ac0a:	48 83 ec 18          	sub    $0x18,%rsp
    ac0e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ac12:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    ac16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ac1a:	48 89 c6             	mov    %rax,%rsi
    ac1d:	bf 18 00 00 00       	mov    $0x18,%edi
    ac22:	e8 19 a2 ff ff       	call   4e40 <_ZnwmPv>
    ac27:	48 89 c3             	mov    %rax,%rbx
    ac2a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    ac2e:	48 89 c7             	mov    %rax,%rdi
    ac31:	e8 48 e8 ff ff       	call   947e <_ZSt7forwardIRK23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS3_E4typeE>
    ac36:	48 89 c1             	mov    %rax,%rcx
    ac39:	48 8b 01             	mov    (%rcx),%rax
    ac3c:	48 8b 51 08          	mov    0x8(%rcx),%rdx
    ac40:	48 89 03             	mov    %rax,(%rbx)
    ac43:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    ac47:	48 8b 41 10          	mov    0x10(%rcx),%rax
    ac4b:	48 89 43 10          	mov    %rax,0x10(%rbx)
    }
    ac4f:	90                   	nop
    ac50:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    ac54:	c9                   	leave
    ac55:	c3                   	ret

000000000000ac56 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE10deallocateEPS2_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ac56:	55                   	push   %rbp
    ac57:	48 89 e5             	mov    %rsp,%rbp
    ac5a:	48 83 ec 20          	sub    $0x20,%rsp
    ac5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ac62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ac66:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ac6a:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ac6e:	48 89 d0             	mov    %rdx,%rax
    ac71:	48 c1 e0 03          	shl    $0x3,%rax
    ac75:	48 29 d0             	sub    %rdx,%rax
    ac78:	48 c1 e0 02          	shl    $0x2,%rax
    ac7c:	48 89 c2             	mov    %rax,%rdx
    ac7f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ac83:	48 89 d6             	mov    %rdx,%rsi
    ac86:	48 89 c7             	mov    %rax,%rdi
    ac89:	e8 02 97 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ac8e:	c9                   	leave
    ac8f:	c3                   	ret

000000000000ac90 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ac90:	55                   	push   %rbp
    ac91:	48 89 e5             	mov    %rsp,%rbp
    ac94:	48 83 ec 10          	sub    $0x10,%rsp
    ac98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ac9c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aca0:	48 89 c7             	mov    %rax,%rdi
    aca3:	e8 52 06 00 00       	call   b2fa <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>
      }
    aca8:	c9                   	leave
    aca9:	c3                   	ret

000000000000acaa <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    acaa:	55                   	push   %rbp
    acab:	48 89 e5             	mov    %rsp,%rbp
    acae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    acb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acb6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    acbd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acc1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    acc8:	00 
    acc9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    accd:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    acd4:	00 
	{ }
    acd5:	90                   	nop
    acd6:	5d                   	pop    %rbp
    acd7:	c3                   	ret

000000000000acd8 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    acd8:	55                   	push   %rbp
    acd9:	48 89 e5             	mov    %rsp,%rbp
    acdc:	48 83 ec 10          	sub    $0x10,%rsp
    ace0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ace4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    ace8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aced:	74 15                	je     ad04 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x2c>
    acef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    acf3:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    acf7:	48 89 d6             	mov    %rdx,%rsi
    acfa:	48 89 c7             	mov    %rax,%rdi
    acfd:	e8 12 06 00 00       	call   b314 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>
    ad02:	eb 05                	jmp    ad09 <_ZNSt12_Vector_baseI18VkSurfaceFormatKHRSaIS0_EE11_M_allocateEm+0x31>
    ad04:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    ad09:	c9                   	leave
    ad0a:	c3                   	ret

000000000000ad0b <_ZSt25__uninitialized_default_nIP18VkSurfaceFormatKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    ad0b:	55                   	push   %rbp
    ad0c:	48 89 e5             	mov    %rsp,%rbp
    ad0f:	48 83 ec 20          	sub    $0x20,%rsp
    ad13:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ad17:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ad1b:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ad1f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ad23:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad27:	48 89 d6             	mov    %rdx,%rsi
    ad2a:	48 89 c7             	mov    %rax,%rdi
    ad2d:	e8 0c 06 00 00       	call   b33e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>
    }
    ad32:	c9                   	leave
    ad33:	c3                   	ret

000000000000ad34 <_ZNSt12_Destroy_auxILb1EE9__destroyIP18VkSurfaceFormatKHREEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
    ad34:	55                   	push   %rbp
    ad35:	48 89 e5             	mov    %rsp,%rbp
    ad38:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad3c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad40:	90                   	nop
    ad41:	5d                   	pop    %rbp
    ad42:	c3                   	ret
    ad43:	90                   	nop

000000000000ad44 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ad44:	55                   	push   %rbp
    ad45:	48 89 e5             	mov    %rsp,%rbp
    ad48:	48 83 ec 20          	sub    $0x20,%rsp
    ad4c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ad50:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ad54:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ad58:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ad5c:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    ad63:	00 
    ad64:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ad68:	48 89 d6             	mov    %rdx,%rsi
    ad6b:	48 89 c7             	mov    %rax,%rdi
    ad6e:	e8 1d 96 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ad73:	c9                   	leave
    ad74:	c3                   	ret

000000000000ad75 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ad75:	55                   	push   %rbp
    ad76:	48 89 e5             	mov    %rsp,%rbp
    ad79:	48 83 ec 10          	sub    $0x10,%rsp
    ad7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ad81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad85:	48 89 c7             	mov    %rax,%rdi
    ad88:	e8 0f 06 00 00       	call   b39c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>
      }
    ad8d:	c9                   	leave
    ad8e:	c3                   	ret
    ad8f:	90                   	nop

000000000000ad90 <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ad90:	55                   	push   %rbp
    ad91:	48 89 e5             	mov    %rsp,%rbp
    ad94:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ad98:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ad9c:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ada3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ada7:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    adae:	00 
    adaf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    adb3:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    adba:	00 
	{ }
    adbb:	90                   	nop
    adbc:	5d                   	pop    %rbp
    adbd:	c3                   	ret

000000000000adbe <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    adbe:	55                   	push   %rbp
    adbf:	48 89 e5             	mov    %rsp,%rbp
    adc2:	48 83 ec 10          	sub    $0x10,%rsp
    adc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    adca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    adce:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    add3:	74 15                	je     adea <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x2c>
    add5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    add9:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    addd:	48 89 d6             	mov    %rdx,%rsi
    ade0:	48 89 c7             	mov    %rax,%rdi
    ade3:	e8 ce 05 00 00       	call   b3b6 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>
    ade8:	eb 05                	jmp    adef <_ZNSt12_Vector_baseI16VkPresentModeKHRSaIS0_EE11_M_allocateEm+0x31>
    adea:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    adef:	c9                   	leave
    adf0:	c3                   	ret

000000000000adf1 <_ZSt25__uninitialized_default_nIP16VkPresentModeKHRmET_S2_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    adf1:	55                   	push   %rbp
    adf2:	48 89 e5             	mov    %rsp,%rbp
    adf5:	48 83 ec 20          	sub    $0x20,%rsp
    adf9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    adfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    ae01:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    ae05:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    ae09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae0d:	48 89 d6             	mov    %rdx,%rsi
    ae10:	48 89 c7             	mov    %rax,%rdi
    ae13:	e8 c8 05 00 00       	call   b3e0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>
    }
    ae18:	c9                   	leave
    ae19:	c3                   	ret

000000000000ae1a <_ZNSt12_Destroy_auxILb1EE9__destroyIP16VkPresentModeKHREEvT_S4_>:
    ae1a:	55                   	push   %rbp
    ae1b:	48 89 e5             	mov    %rsp,%rbp
    ae1e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae22:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae26:	90                   	nop
    ae27:	5d                   	pop    %rbp
    ae28:	c3                   	ret
    ae29:	90                   	nop

000000000000ae2a <_ZNSt15__new_allocatorI16VkPresentModeKHRE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    ae2a:	55                   	push   %rbp
    ae2b:	48 89 e5             	mov    %rsp,%rbp
    ae2e:	48 83 ec 20          	sub    $0x20,%rsp
    ae32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ae36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ae3a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    ae3e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ae42:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    ae49:	00 
    ae4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ae4e:	48 89 d6             	mov    %rdx,%rsi
    ae51:	48 89 c7             	mov    %rax,%rdi
    ae54:	e8 37 95 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    ae59:	c9                   	leave
    ae5a:	c3                   	ret

000000000000ae5b <_ZNSt16allocator_traitsISaIP9VkImage_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
    ae5b:	55                   	push   %rbp
    ae5c:	48 89 e5             	mov    %rsp,%rbp
    ae5f:	48 83 ec 10          	sub    $0x10,%rsp
    ae63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
    ae67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae6b:	48 89 c7             	mov    %rax,%rdi
    ae6e:	e8 cb 05 00 00       	call   b43e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>
      }
    ae73:	c9                   	leave
    ae74:	c3                   	ret
    ae75:	90                   	nop

000000000000ae76 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
    ae76:	55                   	push   %rbp
    ae77:	48 89 e5             	mov    %rsp,%rbp
    ae7a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
    ae7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae82:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    ae89:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae8d:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    ae94:	00 
    ae95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ae99:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    aea0:	00 
	{ }
    aea1:	90                   	nop
    aea2:	5d                   	pop    %rbp
    aea3:	c3                   	ret

000000000000aea4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
    aea4:	55                   	push   %rbp
    aea5:	48 89 e5             	mov    %rsp,%rbp
    aea8:	48 83 ec 10          	sub    $0x10,%rsp
    aeac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    aeb0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
    aeb4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    aeb9:	74 15                	je     aed0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x2c>
    aebb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aebf:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    aec3:	48 89 d6             	mov    %rdx,%rsi
    aec6:	48 89 c7             	mov    %rax,%rdi
    aec9:	e8 8a 05 00 00       	call   b458 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>
    aece:	eb 05                	jmp    aed5 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE11_M_allocateEm+0x31>
    aed0:	b8 00 00 00 00       	mov    $0x0,%eax
      }
    aed5:	c9                   	leave
    aed6:	c3                   	ret

000000000000aed7 <_ZSt25__uninitialized_default_nIPP9VkImage_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
    aed7:	55                   	push   %rbp
    aed8:	48 89 e5             	mov    %rsp,%rbp
    aedb:	48 83 ec 20          	sub    $0x20,%rsp
    aedf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    aee3:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
    aee7:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
    aeeb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    aeef:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    aef3:	48 89 d6             	mov    %rdx,%rsi
    aef6:	48 89 c7             	mov    %rax,%rdi
    aef9:	e8 84 05 00 00       	call   b482 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>
    }
    aefe:	c9                   	leave
    aeff:	c3                   	ret

000000000000af00 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP9VkImage_TEEvT_S5_>:
    af00:	55                   	push   %rbp
    af01:	48 89 e5             	mov    %rsp,%rbp
    af04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af0c:	90                   	nop
    af0d:	5d                   	pop    %rbp
    af0e:	c3                   	ret
    af0f:	90                   	nop

000000000000af10 <_ZNSt15__new_allocatorIP9VkImage_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
    af10:	55                   	push   %rbp
    af11:	48 89 e5             	mov    %rsp,%rbp
    af14:	48 83 ec 20          	sub    $0x20,%rsp
    af18:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af1c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    af20:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
    af24:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    af28:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    af2f:	00 
    af30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    af34:	48 89 d6             	mov    %rdx,%rsi
    af37:	48 89 c7             	mov    %rax,%rdi
    af3a:	e8 51 94 ff ff       	call   4390 <_ZdlPvm@plt>
      }
    af3f:	c9                   	leave
    af40:	c3                   	ret
    af41:	90                   	nop

000000000000af42 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    af42:	55                   	push   %rbp
    af43:	48 89 e5             	mov    %rsp,%rbp
    af46:	48 83 ec 10          	sub    $0x10,%rsp
    af4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    af4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af52:	48 89 c7             	mov    %rax,%rdi
    af55:	e8 86 05 00 00       	call   b4e0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    af5a:	c9                   	leave
    af5b:	c3                   	ret

000000000000af5c <_ZNSt16allocator_traitsISaI17VkLayerPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    af5c:	55                   	push   %rbp
    af5d:	48 89 e5             	mov    %rsp,%rbp
    af60:	48 83 ec 10          	sub    $0x10,%rsp
    af64:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    af68:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    af6c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    af70:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    af74:	ba 00 00 00 00       	mov    $0x0,%edx
    af79:	48 89 ce             	mov    %rcx,%rsi
    af7c:	48 89 c7             	mov    %rax,%rdi
    af7f:	e8 70 05 00 00       	call   b4f4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>
    af84:	c9                   	leave
    af85:	c3                   	ret

000000000000af86 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    af86:	55                   	push   %rbp
    af87:	48 89 e5             	mov    %rsp,%rbp
    af8a:	48 83 ec 20          	sub    $0x20,%rsp
    af8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    af92:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    af96:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    af9b:	74 43                	je     afe0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP17VkLayerPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    af9d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afa1:	48 89 c7             	mov    %rax,%rdi
    afa4:	e8 b6 05 00 00       	call   b55f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>
    afa9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    afad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    afb1:	48 89 c7             	mov    %rax,%rdi
    afb4:	e8 b4 05 00 00       	call   b56d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>
	      ++__first;
    afb9:	48 81 45 e8 08 02 00 	addq   $0x208,-0x18(%rbp)
    afc0:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    afc1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    afc5:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    afc9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    afcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    afd1:	48 89 ce             	mov    %rcx,%rsi
    afd4:	48 89 c7             	mov    %rax,%rdi
    afd7:	e8 eb 05 00 00       	call   b5c7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>
    afdc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    afe0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    afe4:	c9                   	leave
    afe5:	c3                   	ret

000000000000afe6 <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    afe6:	55                   	push   %rbp
    afe7:	48 89 e5             	mov    %rsp,%rbp
    afea:	48 83 ec 10          	sub    $0x10,%rsp
    afee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    aff2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    aff6:	48 89 c7             	mov    %rax,%rdi
    aff9:	e8 0e 06 00 00       	call   b60c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    affe:	c9                   	leave
    afff:	c3                   	ret

000000000000b000 <_ZNSt16allocator_traitsISaI21VkExtensionPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b000:	55                   	push   %rbp
    b001:	48 89 e5             	mov    %rsp,%rbp
    b004:	48 83 ec 10          	sub    $0x10,%rsp
    b008:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b00c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b010:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b014:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b018:	ba 00 00 00 00       	mov    $0x0,%edx
    b01d:	48 89 ce             	mov    %rcx,%rsi
    b020:	48 89 c7             	mov    %rax,%rdi
    b023:	e8 f8 05 00 00       	call   b620 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>
    b028:	c9                   	leave
    b029:	c3                   	ret

000000000000b02a <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b02a:	55                   	push   %rbp
    b02b:	48 89 e5             	mov    %rsp,%rbp
    b02e:	48 83 ec 20          	sub    $0x20,%rsp
    b032:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b036:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b03a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b03f:	74 43                	je     b084 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP21VkExtensionPropertiesmEET_S4_T0_+0x5a>
		= std::__addressof(*__first);
    b041:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b045:	48 89 c7             	mov    %rax,%rdi
    b048:	e8 3e 06 00 00       	call   b68b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>
    b04d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b055:	48 89 c7             	mov    %rax,%rdi
    b058:	e8 3c 06 00 00       	call   b699 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b05d:	48 81 45 e8 04 01 00 	addq   $0x104,-0x18(%rbp)
    b064:	00 
	      __first = std::fill_n(__first, __n - 1, *__val);
    b065:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b069:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b06d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b071:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b075:	48 89 ce             	mov    %rcx,%rsi
    b078:	48 89 c7             	mov    %rax,%rdi
    b07b:	e8 73 06 00 00       	call   b6f3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>
    b080:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b084:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b088:	c9                   	leave
    b089:	c3                   	ret

000000000000b08a <_ZNKSt15__new_allocatorIPKcE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b08a:	55                   	push   %rbp
    b08b:	48 89 e5             	mov    %rsp,%rbp
    b08e:	48 83 ec 10          	sub    $0x10,%rsp
    b092:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b096:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b09a:	48 89 c7             	mov    %rax,%rdi
    b09d:	e8 96 06 00 00       	call   b738 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b0a2:	c9                   	leave
    b0a3:	c3                   	ret

000000000000b0a4 <_ZNSt16allocator_traitsISaIPKcEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b0a4:	55                   	push   %rbp
    b0a5:	48 89 e5             	mov    %rsp,%rbp
    b0a8:	48 83 ec 10          	sub    $0x10,%rsp
    b0ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b0b0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b0b4:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0bc:	ba 00 00 00 00       	mov    $0x0,%edx
    b0c1:	48 89 ce             	mov    %rcx,%rsi
    b0c4:	48 89 c7             	mov    %rax,%rdi
    b0c7:	e8 80 06 00 00       	call   b74c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>
    b0cc:	c9                   	leave
    b0cd:	c3                   	ret

000000000000b0ce <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b0ce:	55                   	push   %rbp
    b0cf:	48 89 e5             	mov    %rsp,%rbp
    b0d2:	48 83 ec 20          	sub    $0x20,%rsp
    b0d6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b0da:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b0de:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b0e3:	74 40                	je     b125 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPPKcmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b0e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b0e9:	48 89 c7             	mov    %rax,%rdi
    b0ec:	e8 bc 06 00 00       	call   b7ad <_ZSt11__addressofIPKcEPT_RS2_>
    b0f1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b0f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b0f9:	48 89 c7             	mov    %rax,%rdi
    b0fc:	e8 ba 06 00 00       	call   b7bb <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>
	      ++__first;
    b101:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b106:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b10a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b10e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b112:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b116:	48 89 ce             	mov    %rcx,%rsi
    b119:	48 89 c7             	mov    %rax,%rdi
    b11c:	e8 c1 06 00 00       	call   b7e2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>
    b121:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b125:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b129:	c9                   	leave
    b12a:	c3                   	ret
    b12b:	90                   	nop

000000000000b12c <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b12c:	55                   	push   %rbp
    b12d:	48 89 e5             	mov    %rsp,%rbp
    b130:	48 83 ec 10          	sub    $0x10,%rsp
    b134:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b138:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b13c:	48 89 c7             	mov    %rax,%rdi
    b13f:	e8 e2 06 00 00       	call   b826 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b144:	c9                   	leave
    b145:	c3                   	ret

000000000000b146 <_ZNSt16allocator_traitsISaIP18VkPhysicalDevice_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b146:	55                   	push   %rbp
    b147:	48 89 e5             	mov    %rsp,%rbp
    b14a:	48 83 ec 10          	sub    $0x10,%rsp
    b14e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b152:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b156:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b15a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b15e:	ba 00 00 00 00       	mov    $0x0,%edx
    b163:	48 89 ce             	mov    %rcx,%rsi
    b166:	48 89 c7             	mov    %rax,%rdi
    b169:	e8 cc 06 00 00       	call   b83a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>
    b16e:	c9                   	leave
    b16f:	c3                   	ret

000000000000b170 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b170:	55                   	push   %rbp
    b171:	48 89 e5             	mov    %rsp,%rbp
    b174:	48 83 ec 20          	sub    $0x20,%rsp
    b178:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b17c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b180:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b185:	74 40                	je     b1c7 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP18VkPhysicalDevice_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b187:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b18b:	48 89 c7             	mov    %rax,%rdi
    b18e:	e8 08 07 00 00       	call   b89b <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>
    b193:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b197:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b19b:	48 89 c7             	mov    %rax,%rdi
    b19e:	e8 06 07 00 00       	call   b8a9 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>
	      ++__first;
    b1a3:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b1a8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b1ac:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b1b0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b1b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b1b8:	48 89 ce             	mov    %rcx,%rsi
    b1bb:	48 89 c7             	mov    %rax,%rdi
    b1be:	e8 0d 07 00 00       	call   b8d0 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>
    b1c3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b1c7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b1cb:	c9                   	leave
    b1cc:	c3                   	ret
    b1cd:	90                   	nop

000000000000b1ce <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b1ce:	55                   	push   %rbp
    b1cf:	48 89 e5             	mov    %rsp,%rbp
    b1d2:	48 83 ec 10          	sub    $0x10,%rsp
    b1d6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b1da:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b1de:	48 89 c7             	mov    %rax,%rdi
    b1e1:	e8 2e 07 00 00       	call   b914 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b1e6:	c9                   	leave
    b1e7:	c3                   	ret

000000000000b1e8 <_ZNSt16allocator_traitsISaI23VkQueueFamilyPropertiesEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b1e8:	55                   	push   %rbp
    b1e9:	48 89 e5             	mov    %rsp,%rbp
    b1ec:	48 83 ec 10          	sub    $0x10,%rsp
    b1f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b1f4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b1f8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b1fc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b200:	ba 00 00 00 00       	mov    $0x0,%edx
    b205:	48 89 ce             	mov    %rcx,%rsi
    b208:	48 89 c7             	mov    %rax,%rdi
    b20b:	e8 18 07 00 00       	call   b928 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>
    b210:	c9                   	leave
    b211:	c3                   	ret

000000000000b212 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b212:	55                   	push   %rbp
    b213:	48 89 e5             	mov    %rsp,%rbp
    b216:	48 83 ec 20          	sub    $0x20,%rsp
    b21a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b21e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b222:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b227:	74 40                	je     b269 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP23VkQueueFamilyPropertiesmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b229:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b22d:	48 89 c7             	mov    %rax,%rdi
    b230:	e8 c2 f9 ff ff       	call   abf7 <_ZSt11__addressofI23VkQueueFamilyPropertiesEPT_RS1_>
    b235:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b239:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b23d:	48 89 c7             	mov    %rax,%rdi
    b240:	e8 4d 07 00 00       	call   b992 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>
	      ++__first;
    b245:	48 83 45 e8 18       	addq   $0x18,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b24a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b24e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b252:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b256:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b25a:	48 89 ce             	mov    %rcx,%rsi
    b25d:	48 89 c7             	mov    %rax,%rdi
    b260:	e8 76 07 00 00       	call   b9db <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>
    b265:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b269:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b26d:	c9                   	leave
    b26e:	c3                   	ret
    b26f:	90                   	nop

000000000000b270 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b270:	55                   	push   %rbp
    b271:	48 89 e5             	mov    %rsp,%rbp
    b274:	48 83 ec 10          	sub    $0x10,%rsp
    b278:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b27c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b280:	48 89 c7             	mov    %rax,%rdi
    b283:	e8 98 07 00 00       	call   ba20 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    b288:	c9                   	leave
    b289:	c3                   	ret

000000000000b28a <_ZNSt16allocator_traitsISaISt8optionalI23VkQueueFamilyPropertiesEEE8allocateERS3_m>:
      allocate(allocator_type& __a, size_type __n)
    b28a:	55                   	push   %rbp
    b28b:	48 89 e5             	mov    %rsp,%rbp
    b28e:	48 83 ec 10          	sub    $0x10,%rsp
    b292:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b296:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b29a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b29e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2a2:	ba 00 00 00 00       	mov    $0x0,%edx
    b2a7:	48 89 ce             	mov    %rcx,%rsi
    b2aa:	48 89 c7             	mov    %rax,%rdi
    b2ad:	e8 82 07 00 00       	call   ba34 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>
    b2b2:	c9                   	leave
    b2b3:	c3                   	ret

000000000000b2b4 <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b2b4:	55                   	push   %rbp
    b2b5:	48 89 e5             	mov    %rsp,%rbp
    b2b8:	48 83 ec 20          	sub    $0x20,%rsp
    b2bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b2c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  _ForwardIterator __cur = __first;
    b2c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b2c8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      for (; __n > 0; --__n, (void) ++__cur)
    b2cc:	eb 1e                	jmp    b2ec <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x38>
		std::_Construct(std::__addressof(*__cur));
    b2ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b2d2:	48 89 c7             	mov    %rax,%rdi
    b2d5:	e8 c5 07 00 00       	call   ba9f <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>
    b2da:	48 89 c7             	mov    %rax,%rdi
    b2dd:	e8 cb 07 00 00       	call   baad <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>
	      for (; __n > 0; --__n, (void) ++__cur)
    b2e2:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
    b2e7:	48 83 45 f8 1c       	addq   $0x1c,-0x8(%rbp)
    b2ec:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b2f1:	75 db                	jne    b2ce <_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8optionalI23VkQueueFamilyPropertiesEmEET_S6_T0_+0x1a>
	      return __cur;
    b2f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
    b2f7:	c9                   	leave
    b2f8:	c3                   	ret
    b2f9:	90                   	nop

000000000000b2fa <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b2fa:	55                   	push   %rbp
    b2fb:	48 89 e5             	mov    %rsp,%rbp
    b2fe:	48 83 ec 10          	sub    $0x10,%rsp
    b302:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b306:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b30a:	48 89 c7             	mov    %rax,%rdi
    b30d:	e8 c4 07 00 00       	call   bad6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    b312:	c9                   	leave
    b313:	c3                   	ret

000000000000b314 <_ZNSt16allocator_traitsISaI18VkSurfaceFormatKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b314:	55                   	push   %rbp
    b315:	48 89 e5             	mov    %rsp,%rbp
    b318:	48 83 ec 10          	sub    $0x10,%rsp
    b31c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b320:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b324:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b32c:	ba 00 00 00 00       	mov    $0x0,%edx
    b331:	48 89 ce             	mov    %rcx,%rsi
    b334:	48 89 c7             	mov    %rax,%rdi
    b337:	e8 ae 07 00 00       	call   baea <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>
    b33c:	c9                   	leave
    b33d:	c3                   	ret

000000000000b33e <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b33e:	55                   	push   %rbp
    b33f:	48 89 e5             	mov    %rsp,%rbp
    b342:	48 83 ec 20          	sub    $0x20,%rsp
    b346:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b34a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b34e:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b353:	74 40                	je     b395 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP18VkSurfaceFormatKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b355:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b359:	48 89 c7             	mov    %rax,%rdi
    b35c:	e8 ea 07 00 00       	call   bb4b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>
    b361:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b365:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b369:	48 89 c7             	mov    %rax,%rdi
    b36c:	e8 e8 07 00 00       	call   bb59 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>
	      ++__first;
    b371:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b376:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b37a:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b37e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b382:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b386:	48 89 ce             	mov    %rcx,%rsi
    b389:	48 89 c7             	mov    %rax,%rdi
    b38c:	e8 f5 07 00 00       	call   bb86 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>
    b391:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b395:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b399:	c9                   	leave
    b39a:	c3                   	ret
    b39b:	90                   	nop

000000000000b39c <_ZNKSt15__new_allocatorI16VkPresentModeKHRE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b39c:	55                   	push   %rbp
    b39d:	48 89 e5             	mov    %rsp,%rbp
    b3a0:	48 83 ec 10          	sub    $0x10,%rsp
    b3a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b3a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3ac:	48 89 c7             	mov    %rax,%rdi
    b3af:	e8 16 08 00 00       	call   bbca <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    b3b4:	c9                   	leave
    b3b5:	c3                   	ret

000000000000b3b6 <_ZNSt16allocator_traitsISaI16VkPresentModeKHREE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
    b3b6:	55                   	push   %rbp
    b3b7:	48 89 e5             	mov    %rsp,%rbp
    b3ba:	48 83 ec 10          	sub    $0x10,%rsp
    b3be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b3c2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b3c6:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b3ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b3ce:	ba 00 00 00 00       	mov    $0x0,%edx
    b3d3:	48 89 ce             	mov    %rcx,%rsi
    b3d6:	48 89 c7             	mov    %rax,%rdi
    b3d9:	e8 00 08 00 00       	call   bbde <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>
    b3de:	c9                   	leave
    b3df:	c3                   	ret

000000000000b3e0 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b3e0:	55                   	push   %rbp
    b3e1:	48 89 e5             	mov    %rsp,%rbp
    b3e4:	48 83 ec 20          	sub    $0x20,%rsp
    b3e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b3ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b3f0:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b3f5:	74 40                	je     b437 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP16VkPresentModeKHRmEET_S4_T0_+0x57>
		= std::__addressof(*__first);
    b3f7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b3fb:	48 89 c7             	mov    %rax,%rdi
    b3fe:	e8 3c 08 00 00       	call   bc3f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>
    b403:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b40b:	48 89 c7             	mov    %rax,%rdi
    b40e:	e8 3a 08 00 00       	call   bc4d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>
	      ++__first;
    b413:	48 83 45 e8 04       	addq   $0x4,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b418:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b41c:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b420:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b424:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b428:	48 89 ce             	mov    %rcx,%rsi
    b42b:	48 89 c7             	mov    %rax,%rdi
    b42e:	e8 40 08 00 00       	call   bc73 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>
    b433:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b437:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b43b:	c9                   	leave
    b43c:	c3                   	ret
    b43d:	90                   	nop

000000000000b43e <_ZNKSt15__new_allocatorIP9VkImage_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
    b43e:	55                   	push   %rbp
    b43f:	48 89 e5             	mov    %rsp,%rbp
    b442:	48 83 ec 10          	sub    $0x10,%rsp
    b446:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
    b44a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b44e:	48 89 c7             	mov    %rax,%rdi
    b451:	e8 62 08 00 00       	call   bcb8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    b456:	c9                   	leave
    b457:	c3                   	ret

000000000000b458 <_ZNSt16allocator_traitsISaIP9VkImage_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
    b458:	55                   	push   %rbp
    b459:	48 89 e5             	mov    %rsp,%rbp
    b45c:	48 83 ec 10          	sub    $0x10,%rsp
    b460:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b464:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
    b468:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    b46c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b470:	ba 00 00 00 00       	mov    $0x0,%edx
    b475:	48 89 ce             	mov    %rcx,%rsi
    b478:	48 89 c7             	mov    %rax,%rdi
    b47b:	e8 4c 08 00 00       	call   bccc <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>
    b480:	c9                   	leave
    b481:	c3                   	ret

000000000000b482 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
    b482:	55                   	push   %rbp
    b483:	48 89 e5             	mov    %rsp,%rbp
    b486:	48 83 ec 20          	sub    $0x20,%rsp
    b48a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    b48e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
    b492:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
    b497:	74 40                	je     b4d9 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP9VkImage_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
    b499:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b49d:	48 89 c7             	mov    %rax,%rdi
    b4a0:	e8 88 08 00 00       	call   bd2d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>
    b4a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
    b4a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b4ad:	48 89 c7             	mov    %rax,%rdi
    b4b0:	e8 86 08 00 00       	call   bd3b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>
	      ++__first;
    b4b5:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
    b4ba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    b4be:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
    b4c2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    b4c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    b4ca:	48 89 ce             	mov    %rcx,%rsi
    b4cd:	48 89 c7             	mov    %rax,%rdi
    b4d0:	e8 8d 08 00 00       	call   bd62 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>
    b4d5:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
    b4d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
    b4dd:	c9                   	leave
    b4de:	c3                   	ret
    b4df:	90                   	nop

000000000000b4e0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b4e0:	55                   	push   %rbp
    b4e1:	48 89 e5             	mov    %rsp,%rbp
    b4e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b4e8:	48 b8 3f f0 03 3f f0 	movabs $0x3f03f03f03f03f,%rax
    b4ef:	03 3f 00 
      }
    b4f2:	5d                   	pop    %rbp
    b4f3:	c3                   	ret

000000000000b4f4 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b4f4:	55                   	push   %rbp
    b4f5:	48 89 e5             	mov    %rsp,%rbp
    b4f8:	48 83 ec 20          	sub    $0x20,%rsp
    b4fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b500:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b504:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b508:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b50c:	48 89 c7             	mov    %rax,%rdi
    b50f:	e8 cc ff ff ff       	call   b4e0 <_ZNKSt15__new_allocatorI17VkLayerPropertiesE11_M_max_sizeEv>
    b514:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b518:	0f 92 c0             	setb   %al
    b51b:	0f b6 c0             	movzbl %al,%eax
    b51e:	48 85 c0             	test   %rax,%rax
    b521:	0f 95 c0             	setne  %al
    b524:	84 c0                	test   %al,%al
    b526:	74 1a                	je     b542 <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b528:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b52f:	07 7e 00 
    b532:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b536:	73 05                	jae    b53d <_ZNSt15__new_allocatorI17VkLayerPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b538:	e8 33 8d ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b53d:	e8 9e 8b ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b542:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b546:	48 89 d0             	mov    %rdx,%rax
    b549:	48 c1 e0 06          	shl    $0x6,%rax
    b54d:	48 01 d0             	add    %rdx,%rax
    b550:	48 c1 e0 03          	shl    $0x3,%rax
    b554:	48 89 c7             	mov    %rax,%rdi
    b557:	e8 24 8e ff ff       	call   4380 <_Znwm@plt>
    b55c:	90                   	nop
      }
    b55d:	c9                   	leave
    b55e:	c3                   	ret

000000000000b55f <_ZSt11__addressofI17VkLayerPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b55f:	55                   	push   %rbp
    b560:	48 89 e5             	mov    %rsp,%rbp
    b563:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b567:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b56b:	5d                   	pop    %rbp
    b56c:	c3                   	ret

000000000000b56d <_ZSt10_ConstructI17VkLayerPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b56d:	55                   	push   %rbp
    b56e:	48 89 e5             	mov    %rsp,%rbp
    b571:	48 83 ec 10          	sub    $0x10,%rsp
    b575:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b579:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b57d:	48 89 c6             	mov    %rax,%rsi
    b580:	bf 08 02 00 00       	mov    $0x208,%edi
    b585:	e8 b6 98 ff ff       	call   4e40 <_ZnwmPv>
    b58a:	b9 08 02 00 00       	mov    $0x208,%ecx
    b58f:	be 00 00 00 00       	mov    $0x0,%esi
    b594:	48 89 30             	mov    %rsi,(%rax)
    b597:	89 ca                	mov    %ecx,%edx
    b599:	48 01 c2             	add    %rax,%rdx
    b59c:	48 83 c2 08          	add    $0x8,%rdx
    b5a0:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b5a4:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b5a8:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b5ac:	48 29 d0             	sub    %rdx,%rax
    b5af:	01 c1                	add    %eax,%ecx
    b5b1:	83 e1 f8             	and    $0xfffffff8,%ecx
    b5b4:	89 c8                	mov    %ecx,%eax
    b5b6:	c1 e8 03             	shr    $0x3,%eax
    b5b9:	89 c1                	mov    %eax,%ecx
    b5bb:	48 89 d7             	mov    %rdx,%rdi
    b5be:	48 89 f0             	mov    %rsi,%rax
    b5c1:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b5c4:	90                   	nop
    b5c5:	c9                   	leave
    b5c6:	c3                   	ret

000000000000b5c7 <_ZSt6fill_nIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b5c7:	55                   	push   %rbp
    b5c8:	48 89 e5             	mov    %rsp,%rbp
    b5cb:	48 83 ec 20          	sub    $0x20,%rsp
    b5cf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b5d3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b5d7:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b5db:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b5df:	48 89 c7             	mov    %rax,%rdi
    b5e2:	e8 bf 07 00 00       	call   bda6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b5e7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b5eb:	48 89 c7             	mov    %rax,%rdi
    b5ee:	e8 5f 98 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    b5f3:	48 89 c1             	mov    %rax,%rcx
    b5f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b5fa:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b5fe:	48 89 ce             	mov    %rcx,%rsi
    b601:	48 89 c7             	mov    %rax,%rdi
    b604:	e8 a8 07 00 00       	call   bdb1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b609:	c9                   	leave
    b60a:	c3                   	ret
    b60b:	90                   	nop

000000000000b60c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b60c:	55                   	push   %rbp
    b60d:	48 89 e5             	mov    %rsp,%rbp
    b610:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b614:	48 b8 7e e0 07 7e e0 	movabs $0x7e07e07e07e07e,%rax
    b61b:	07 7e 00 
      }
    b61e:	5d                   	pop    %rbp
    b61f:	c3                   	ret

000000000000b620 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b620:	55                   	push   %rbp
    b621:	48 89 e5             	mov    %rsp,%rbp
    b624:	48 83 ec 20          	sub    $0x20,%rsp
    b628:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b62c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b630:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b638:	48 89 c7             	mov    %rax,%rdi
    b63b:	e8 cc ff ff ff       	call   b60c <_ZNKSt15__new_allocatorI21VkExtensionPropertiesE11_M_max_sizeEv>
    b640:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b644:	0f 92 c0             	setb   %al
    b647:	0f b6 c0             	movzbl %al,%eax
    b64a:	48 85 c0             	test   %rax,%rax
    b64d:	0f 95 c0             	setne  %al
    b650:	84 c0                	test   %al,%al
    b652:	74 1a                	je     b66e <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b654:	48 b8 fc c0 0f fc c0 	movabs $0xfc0fc0fc0fc0fc,%rax
    b65b:	0f fc 00 
    b65e:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b662:	73 05                	jae    b669 <_ZNSt15__new_allocatorI21VkExtensionPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b664:	e8 07 8c ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b669:	e8 72 8a ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b66e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b672:	48 89 d0             	mov    %rdx,%rax
    b675:	48 c1 e0 06          	shl    $0x6,%rax
    b679:	48 01 d0             	add    %rdx,%rax
    b67c:	48 c1 e0 02          	shl    $0x2,%rax
    b680:	48 89 c7             	mov    %rax,%rdi
    b683:	e8 f8 8c ff ff       	call   4380 <_Znwm@plt>
    b688:	90                   	nop
      }
    b689:	c9                   	leave
    b68a:	c3                   	ret

000000000000b68b <_ZSt11__addressofI21VkExtensionPropertiesEPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b68b:	55                   	push   %rbp
    b68c:	48 89 e5             	mov    %rsp,%rbp
    b68f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b693:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b697:	5d                   	pop    %rbp
    b698:	c3                   	ret

000000000000b699 <_ZSt10_ConstructI21VkExtensionPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b699:	55                   	push   %rbp
    b69a:	48 89 e5             	mov    %rsp,%rbp
    b69d:	48 83 ec 10          	sub    $0x10,%rsp
    b6a1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b6a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b6a9:	48 89 c6             	mov    %rax,%rsi
    b6ac:	bf 04 01 00 00       	mov    $0x104,%edi
    b6b1:	e8 8a 97 ff ff       	call   4e40 <_ZnwmPv>
    b6b6:	b9 04 01 00 00       	mov    $0x104,%ecx
    b6bb:	be 00 00 00 00       	mov    $0x0,%esi
    b6c0:	48 89 30             	mov    %rsi,(%rax)
    b6c3:	89 ca                	mov    %ecx,%edx
    b6c5:	48 01 c2             	add    %rax,%rdx
    b6c8:	48 83 c2 08          	add    $0x8,%rdx
    b6cc:	48 89 72 f0          	mov    %rsi,-0x10(%rdx)
    b6d0:	48 8d 50 08          	lea    0x8(%rax),%rdx
    b6d4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    b6d8:	48 29 d0             	sub    %rdx,%rax
    b6db:	01 c1                	add    %eax,%ecx
    b6dd:	83 e1 f8             	and    $0xfffffff8,%ecx
    b6e0:	89 c8                	mov    %ecx,%eax
    b6e2:	c1 e8 03             	shr    $0x3,%eax
    b6e5:	89 c1                	mov    %eax,%ecx
    b6e7:	48 89 d7             	mov    %rdx,%rdi
    b6ea:	48 89 f0             	mov    %rsi,%rax
    b6ed:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    }
    b6f0:	90                   	nop
    b6f1:	c9                   	leave
    b6f2:	c3                   	ret

000000000000b6f3 <_ZSt6fill_nIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b6f3:	55                   	push   %rbp
    b6f4:	48 89 e5             	mov    %rsp,%rbp
    b6f7:	48 83 ec 20          	sub    $0x20,%rsp
    b6fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b6ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b703:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b707:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b70b:	48 89 c7             	mov    %rax,%rdi
    b70e:	e8 0d 07 00 00       	call   be20 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b713:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b717:	48 89 c7             	mov    %rax,%rdi
    b71a:	e8 33 97 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    b71f:	48 89 c1             	mov    %rax,%rcx
    b722:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b726:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b72a:	48 89 ce             	mov    %rcx,%rsi
    b72d:	48 89 c7             	mov    %rax,%rdi
    b730:	e8 f6 06 00 00       	call   be2b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    b735:	c9                   	leave
    b736:	c3                   	ret
    b737:	90                   	nop

000000000000b738 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b738:	55                   	push   %rbp
    b739:	48 89 e5             	mov    %rsp,%rbp
    b73c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b740:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b747:	ff ff 0f 
      }
    b74a:	5d                   	pop    %rbp
    b74b:	c3                   	ret

000000000000b74c <_ZNSt15__new_allocatorIPKcE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b74c:	55                   	push   %rbp
    b74d:	48 89 e5             	mov    %rsp,%rbp
    b750:	48 83 ec 20          	sub    $0x20,%rsp
    b754:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b758:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b75c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b760:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b764:	48 89 c7             	mov    %rax,%rdi
    b767:	e8 cc ff ff ff       	call   b738 <_ZNKSt15__new_allocatorIPKcE11_M_max_sizeEv>
    b76c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b770:	0f 92 c0             	setb   %al
    b773:	0f b6 c0             	movzbl %al,%eax
    b776:	48 85 c0             	test   %rax,%rax
    b779:	0f 95 c0             	setne  %al
    b77c:	84 c0                	test   %al,%al
    b77e:	74 1a                	je     b79a <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b780:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b787:	ff ff 1f 
    b78a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b78e:	73 05                	jae    b795 <_ZNSt15__new_allocatorIPKcE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b790:	e8 db 8a ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b795:	e8 46 89 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b79a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b79e:	48 c1 e0 03          	shl    $0x3,%rax
    b7a2:	48 89 c7             	mov    %rax,%rdi
    b7a5:	e8 d6 8b ff ff       	call   4380 <_Znwm@plt>
    b7aa:	90                   	nop
      }
    b7ab:	c9                   	leave
    b7ac:	c3                   	ret

000000000000b7ad <_ZSt11__addressofIPKcEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b7ad:	55                   	push   %rbp
    b7ae:	48 89 e5             	mov    %rsp,%rbp
    b7b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b7b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7b9:	5d                   	pop    %rbp
    b7ba:	c3                   	ret

000000000000b7bb <_ZSt10_ConstructIPKcJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b7bb:	55                   	push   %rbp
    b7bc:	48 89 e5             	mov    %rsp,%rbp
    b7bf:	48 83 ec 10          	sub    $0x10,%rsp
    b7c3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b7c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b7cb:	48 89 c6             	mov    %rax,%rsi
    b7ce:	bf 08 00 00 00       	mov    $0x8,%edi
    b7d3:	e8 68 96 ff ff       	call   4e40 <_ZnwmPv>
    b7d8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b7df:	90                   	nop
    b7e0:	c9                   	leave
    b7e1:	c3                   	ret

000000000000b7e2 <_ZSt6fill_nIPPKcmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b7e2:	55                   	push   %rbp
    b7e3:	48 89 e5             	mov    %rsp,%rbp
    b7e6:	48 83 ec 20          	sub    $0x20,%rsp
    b7ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b7ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b7f2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b7f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b7fa:	48 89 c7             	mov    %rax,%rdi
    b7fd:	e8 98 06 00 00       	call   be9a <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b802:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b806:	48 89 c7             	mov    %rax,%rdi
    b809:	e8 44 96 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    b80e:	48 89 c1             	mov    %rax,%rcx
    b811:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b815:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b819:	48 89 ce             	mov    %rcx,%rsi
    b81c:	48 89 c7             	mov    %rax,%rdi
    b81f:	e8 81 06 00 00       	call   bea5 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b824:	c9                   	leave
    b825:	c3                   	ret

000000000000b826 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b826:	55                   	push   %rbp
    b827:	48 89 e5             	mov    %rsp,%rbp
    b82a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b82e:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    b835:	ff ff 0f 
      }
    b838:	5d                   	pop    %rbp
    b839:	c3                   	ret

000000000000b83a <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b83a:	55                   	push   %rbp
    b83b:	48 89 e5             	mov    %rsp,%rbp
    b83e:	48 83 ec 20          	sub    $0x20,%rsp
    b842:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b846:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b84a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b84e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b852:	48 89 c7             	mov    %rax,%rdi
    b855:	e8 cc ff ff ff       	call   b826 <_ZNKSt15__new_allocatorIP18VkPhysicalDevice_TE11_M_max_sizeEv>
    b85a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b85e:	0f 92 c0             	setb   %al
    b861:	0f b6 c0             	movzbl %al,%eax
    b864:	48 85 c0             	test   %rax,%rax
    b867:	0f 95 c0             	setne  %al
    b86a:	84 c0                	test   %al,%al
    b86c:	74 1a                	je     b888 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b86e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    b875:	ff ff 1f 
    b878:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b87c:	73 05                	jae    b883 <_ZNSt15__new_allocatorIP18VkPhysicalDevice_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b87e:	e8 ed 89 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b883:	e8 58 88 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b888:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b88c:	48 c1 e0 03          	shl    $0x3,%rax
    b890:	48 89 c7             	mov    %rax,%rdi
    b893:	e8 e8 8a ff ff       	call   4380 <_Znwm@plt>
    b898:	90                   	nop
      }
    b899:	c9                   	leave
    b89a:	c3                   	ret

000000000000b89b <_ZSt11__addressofIP18VkPhysicalDevice_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    b89b:	55                   	push   %rbp
    b89c:	48 89 e5             	mov    %rsp,%rbp
    b89f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    b8a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8a7:	5d                   	pop    %rbp
    b8a8:	c3                   	ret

000000000000b8a9 <_ZSt10_ConstructIP18VkPhysicalDevice_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b8a9:	55                   	push   %rbp
    b8aa:	48 89 e5             	mov    %rsp,%rbp
    b8ad:	48 83 ec 10          	sub    $0x10,%rsp
    b8b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b8b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b8b9:	48 89 c6             	mov    %rax,%rsi
    b8bc:	bf 08 00 00 00       	mov    $0x8,%edi
    b8c1:	e8 7a 95 ff ff       	call   4e40 <_ZnwmPv>
    b8c6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    b8cd:	90                   	nop
    b8ce:	c9                   	leave
    b8cf:	c3                   	ret

000000000000b8d0 <_ZSt6fill_nIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b8d0:	55                   	push   %rbp
    b8d1:	48 89 e5             	mov    %rsp,%rbp
    b8d4:	48 83 ec 20          	sub    $0x20,%rsp
    b8d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b8dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b8e0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b8e4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b8e8:	48 89 c7             	mov    %rax,%rdi
    b8eb:	e8 12 06 00 00       	call   bf02 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b8f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b8f4:	48 89 c7             	mov    %rax,%rdi
    b8f7:	e8 56 95 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    b8fc:	48 89 c1             	mov    %rax,%rcx
    b8ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b903:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    b907:	48 89 ce             	mov    %rcx,%rsi
    b90a:	48 89 c7             	mov    %rax,%rdi
    b90d:	e8 fb 05 00 00       	call   bf0d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    b912:	c9                   	leave
    b913:	c3                   	ret

000000000000b914 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    b914:	55                   	push   %rbp
    b915:	48 89 e5             	mov    %rsp,%rbp
    b918:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    b91c:	48 b8 55 55 55 55 55 	movabs $0x555555555555555,%rax
    b923:	55 55 05 
      }
    b926:	5d                   	pop    %rbp
    b927:	c3                   	ret

000000000000b928 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    b928:	55                   	push   %rbp
    b929:	48 89 e5             	mov    %rsp,%rbp
    b92c:	48 83 ec 20          	sub    $0x20,%rsp
    b930:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b934:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b938:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    b93c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b940:	48 89 c7             	mov    %rax,%rdi
    b943:	e8 cc ff ff ff       	call   b914 <_ZNKSt15__new_allocatorI23VkQueueFamilyPropertiesE11_M_max_sizeEv>
    b948:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b94c:	0f 92 c0             	setb   %al
    b94f:	0f b6 c0             	movzbl %al,%eax
    b952:	48 85 c0             	test   %rax,%rax
    b955:	0f 95 c0             	setne  %al
    b958:	84 c0                	test   %al,%al
    b95a:	74 1a                	je     b976 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    b95c:	48 b8 aa aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaa,%rax
    b963:	aa aa 0a 
    b966:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    b96a:	73 05                	jae    b971 <_ZNSt15__new_allocatorI23VkQueueFamilyPropertiesE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    b96c:	e8 ff 88 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    b971:	e8 6a 87 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    b976:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    b97a:	48 89 d0             	mov    %rdx,%rax
    b97d:	48 01 c0             	add    %rax,%rax
    b980:	48 01 d0             	add    %rdx,%rax
    b983:	48 c1 e0 03          	shl    $0x3,%rax
    b987:	48 89 c7             	mov    %rax,%rdi
    b98a:	e8 f1 89 ff ff       	call   4380 <_Znwm@plt>
    b98f:	90                   	nop
      }
    b990:	c9                   	leave
    b991:	c3                   	ret

000000000000b992 <_ZSt10_ConstructI23VkQueueFamilyPropertiesJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    b992:	55                   	push   %rbp
    b993:	48 89 e5             	mov    %rsp,%rbp
    b996:	48 83 ec 10          	sub    $0x10,%rsp
    b99a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    b99e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    b9a2:	48 89 c6             	mov    %rax,%rsi
    b9a5:	bf 18 00 00 00       	mov    $0x18,%edi
    b9aa:	e8 91 94 ff ff       	call   4e40 <_ZnwmPv>
    b9af:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    b9b5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    b9bc:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
    b9c3:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
    b9ca:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    b9d1:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%rax)
    }
    b9d8:	90                   	nop
    b9d9:	c9                   	leave
    b9da:	c3                   	ret

000000000000b9db <_ZSt6fill_nIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    b9db:	55                   	push   %rbp
    b9dc:	48 89 e5             	mov    %rsp,%rbp
    b9df:	48 83 ec 20          	sub    $0x20,%rsp
    b9e3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    b9e7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    b9eb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    b9ef:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    b9f3:	48 89 c7             	mov    %rax,%rdi
    b9f6:	e8 6f 05 00 00       	call   bf6a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    b9fb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    b9ff:	48 89 c7             	mov    %rax,%rdi
    ba02:	e8 4b 94 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    ba07:	48 89 c1             	mov    %rax,%rcx
    ba0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ba12:	48 89 ce             	mov    %rcx,%rsi
    ba15:	48 89 c7             	mov    %rax,%rdi
    ba18:	e8 58 05 00 00       	call   bf75 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    ba1d:	c9                   	leave
    ba1e:	c3                   	ret
    ba1f:	90                   	nop

000000000000ba20 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    ba20:	55                   	push   %rbp
    ba21:	48 89 e5             	mov    %rsp,%rbp
    ba24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    ba28:	48 b8 92 24 49 92 24 	movabs $0x492492492492492,%rax
    ba2f:	49 92 04 
      }
    ba32:	5d                   	pop    %rbp
    ba33:	c3                   	ret

000000000000ba34 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    ba34:	55                   	push   %rbp
    ba35:	48 89 e5             	mov    %rsp,%rbp
    ba38:	48 83 ec 20          	sub    $0x20,%rsp
    ba3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ba40:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ba44:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    ba48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ba4c:	48 89 c7             	mov    %rax,%rdi
    ba4f:	e8 cc ff ff ff       	call   ba20 <_ZNKSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE11_M_max_sizeEv>
    ba54:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba58:	0f 92 c0             	setb   %al
    ba5b:	0f b6 c0             	movzbl %al,%eax
    ba5e:	48 85 c0             	test   %rax,%rax
    ba61:	0f 95 c0             	setne  %al
    ba64:	84 c0                	test   %al,%al
    ba66:	74 1a                	je     ba82 <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    ba68:	48 b8 24 49 92 24 49 	movabs $0x924924924924924,%rax
    ba6f:	92 24 09 
    ba72:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    ba76:	73 05                	jae    ba7d <_ZNSt15__new_allocatorISt8optionalI23VkQueueFamilyPropertiesEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    ba78:	e8 f3 87 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    ba7d:	e8 5e 86 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    ba82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ba86:	48 89 d0             	mov    %rdx,%rax
    ba89:	48 c1 e0 03          	shl    $0x3,%rax
    ba8d:	48 29 d0             	sub    %rdx,%rax
    ba90:	48 c1 e0 02          	shl    $0x2,%rax
    ba94:	48 89 c7             	mov    %rax,%rdi
    ba97:	e8 e4 88 ff ff       	call   4380 <_Znwm@plt>
    ba9c:	90                   	nop
      }
    ba9d:	c9                   	leave
    ba9e:	c3                   	ret

000000000000ba9f <_ZSt11__addressofISt8optionalI23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    ba9f:	55                   	push   %rbp
    baa0:	48 89 e5             	mov    %rsp,%rbp
    baa3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    baa7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    baab:	5d                   	pop    %rbp
    baac:	c3                   	ret

000000000000baad <_ZSt10_ConstructISt8optionalI23VkQueueFamilyPropertiesEJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    baad:	55                   	push   %rbp
    baae:	48 89 e5             	mov    %rsp,%rbp
    bab1:	48 83 ec 10          	sub    $0x10,%rsp
    bab5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bab9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    babd:	48 89 c6             	mov    %rax,%rsi
    bac0:	bf 1c 00 00 00       	mov    $0x1c,%edi
    bac5:	e8 76 93 ff ff       	call   4e40 <_ZnwmPv>
    baca:	48 89 c7             	mov    %rax,%rdi
    bacd:	e8 6c 05 00 00       	call   c03e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>
    }
    bad2:	90                   	nop
    bad3:	c9                   	leave
    bad4:	c3                   	ret
    bad5:	90                   	nop

000000000000bad6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bad6:	55                   	push   %rbp
    bad7:	48 89 e5             	mov    %rsp,%rbp
    bada:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bade:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bae5:	ff ff 0f 
      }
    bae8:	5d                   	pop    %rbp
    bae9:	c3                   	ret

000000000000baea <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    baea:	55                   	push   %rbp
    baeb:	48 89 e5             	mov    %rsp,%rbp
    baee:	48 83 ec 20          	sub    $0x20,%rsp
    baf2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    baf6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bafa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bafe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb02:	48 89 c7             	mov    %rax,%rdi
    bb05:	e8 cc ff ff ff       	call   bad6 <_ZNKSt15__new_allocatorI18VkSurfaceFormatKHRE11_M_max_sizeEv>
    bb0a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb0e:	0f 92 c0             	setb   %al
    bb11:	0f b6 c0             	movzbl %al,%eax
    bb14:	48 85 c0             	test   %rax,%rax
    bb17:	0f 95 c0             	setne  %al
    bb1a:	84 c0                	test   %al,%al
    bb1c:	74 1a                	je     bb38 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bb1e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bb25:	ff ff 1f 
    bb28:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bb2c:	73 05                	jae    bb33 <_ZNSt15__new_allocatorI18VkSurfaceFormatKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bb2e:	e8 3d 87 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bb33:	e8 a8 85 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bb38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bb3c:	48 c1 e0 03          	shl    $0x3,%rax
    bb40:	48 89 c7             	mov    %rax,%rdi
    bb43:	e8 38 88 ff ff       	call   4380 <_Znwm@plt>
    bb48:	90                   	nop
      }
    bb49:	c9                   	leave
    bb4a:	c3                   	ret

000000000000bb4b <_ZSt11__addressofI18VkSurfaceFormatKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bb4b:	55                   	push   %rbp
    bb4c:	48 89 e5             	mov    %rsp,%rbp
    bb4f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bb53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb57:	5d                   	pop    %rbp
    bb58:	c3                   	ret

000000000000bb59 <_ZSt10_ConstructI18VkSurfaceFormatKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bb59:	55                   	push   %rbp
    bb5a:	48 89 e5             	mov    %rsp,%rbp
    bb5d:	48 83 ec 10          	sub    $0x10,%rsp
    bb61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bb65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bb69:	48 89 c6             	mov    %rax,%rsi
    bb6c:	bf 08 00 00 00       	mov    $0x8,%edi
    bb71:	e8 ca 92 ff ff       	call   4e40 <_ZnwmPv>
    bb76:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    bb7c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
    }
    bb83:	90                   	nop
    bb84:	c9                   	leave
    bb85:	c3                   	ret

000000000000bb86 <_ZSt6fill_nIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bb86:	55                   	push   %rbp
    bb87:	48 89 e5             	mov    %rsp,%rbp
    bb8a:	48 83 ec 20          	sub    $0x20,%rsp
    bb8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bb92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bb96:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bb9a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bb9e:	48 89 c7             	mov    %rax,%rdi
    bba1:	e8 b3 04 00 00       	call   c059 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bba6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bbaa:	48 89 c7             	mov    %rax,%rdi
    bbad:	e8 a0 92 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    bbb2:	48 89 c1             	mov    %rax,%rcx
    bbb5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bbbd:	48 89 ce             	mov    %rcx,%rsi
    bbc0:	48 89 c7             	mov    %rax,%rdi
    bbc3:	e8 9c 04 00 00       	call   c064 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bbc8:	c9                   	leave
    bbc9:	c3                   	ret

000000000000bbca <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bbca:	55                   	push   %rbp
    bbcb:	48 89 e5             	mov    %rsp,%rbp
    bbce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bbd2:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bbd9:	ff ff 1f 
      }
    bbdc:	5d                   	pop    %rbp
    bbdd:	c3                   	ret

000000000000bbde <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bbde:	55                   	push   %rbp
    bbdf:	48 89 e5             	mov    %rsp,%rbp
    bbe2:	48 83 ec 20          	sub    $0x20,%rsp
    bbe6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bbea:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bbee:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bbf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bbf6:	48 89 c7             	mov    %rax,%rdi
    bbf9:	e8 cc ff ff ff       	call   bbca <_ZNKSt15__new_allocatorI16VkPresentModeKHRE11_M_max_sizeEv>
    bbfe:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc02:	0f 92 c0             	setb   %al
    bc05:	0f b6 c0             	movzbl %al,%eax
    bc08:	48 85 c0             	test   %rax,%rax
    bc0b:	0f 95 c0             	setne  %al
    bc0e:	84 c0                	test   %al,%al
    bc10:	74 1a                	je     bc2c <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bc12:	48 b8 ff ff ff ff ff 	movabs $0x3fffffffffffffff,%rax
    bc19:	ff ff 3f 
    bc1c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bc20:	73 05                	jae    bc27 <_ZNSt15__new_allocatorI16VkPresentModeKHRE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bc22:	e8 49 86 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bc27:	e8 b4 84 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bc2c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc30:	48 c1 e0 02          	shl    $0x2,%rax
    bc34:	48 89 c7             	mov    %rax,%rdi
    bc37:	e8 44 87 ff ff       	call   4380 <_Znwm@plt>
    bc3c:	90                   	nop
      }
    bc3d:	c9                   	leave
    bc3e:	c3                   	ret

000000000000bc3f <_ZSt11__addressofI16VkPresentModeKHREPT_RS1_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bc3f:	55                   	push   %rbp
    bc40:	48 89 e5             	mov    %rsp,%rbp
    bc43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bc47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc4b:	5d                   	pop    %rbp
    bc4c:	c3                   	ret

000000000000bc4d <_ZSt10_ConstructI16VkPresentModeKHRJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bc4d:	55                   	push   %rbp
    bc4e:	48 89 e5             	mov    %rsp,%rbp
    bc51:	48 83 ec 10          	sub    $0x10,%rsp
    bc55:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bc59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bc5d:	48 89 c6             	mov    %rax,%rsi
    bc60:	bf 04 00 00 00       	mov    $0x4,%edi
    bc65:	e8 d6 91 ff ff       	call   4e40 <_ZnwmPv>
    bc6a:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
    }
    bc70:	90                   	nop
    bc71:	c9                   	leave
    bc72:	c3                   	ret

000000000000bc73 <_ZSt6fill_nIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bc73:	55                   	push   %rbp
    bc74:	48 89 e5             	mov    %rsp,%rbp
    bc77:	48 83 ec 20          	sub    $0x20,%rsp
    bc7b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bc7f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bc83:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bc87:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bc8b:	48 89 c7             	mov    %rax,%rdi
    bc8e:	e8 2e 04 00 00       	call   c0c1 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bc93:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bc97:	48 89 c7             	mov    %rax,%rdi
    bc9a:	e8 b3 91 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    bc9f:	48 89 c1             	mov    %rax,%rcx
    bca2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bca6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bcaa:	48 89 ce             	mov    %rcx,%rsi
    bcad:	48 89 c7             	mov    %rax,%rdi
    bcb0:	e8 17 04 00 00       	call   c0cc <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>
    }
    bcb5:	c9                   	leave
    bcb6:	c3                   	ret
    bcb7:	90                   	nop

000000000000bcb8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    bcb8:	55                   	push   %rbp
    bcb9:	48 89 e5             	mov    %rsp,%rbp
    bcbc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    bcc0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
    bcc7:	ff ff 0f 
      }
    bcca:	5d                   	pop    %rbp
    bccb:	c3                   	ret

000000000000bccc <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
    bccc:	55                   	push   %rbp
    bccd:	48 89 e5             	mov    %rsp,%rbp
    bcd0:	48 83 ec 20          	sub    $0x20,%rsp
    bcd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bcd8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bcdc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
    bce0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bce4:	48 89 c7             	mov    %rax,%rdi
    bce7:	e8 cc ff ff ff       	call   bcb8 <_ZNKSt15__new_allocatorIP9VkImage_TE11_M_max_sizeEv>
    bcec:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bcf0:	0f 92 c0             	setb   %al
    bcf3:	0f b6 c0             	movzbl %al,%eax
    bcf6:	48 85 c0             	test   %rax,%rax
    bcf9:	0f 95 c0             	setne  %al
    bcfc:	84 c0                	test   %al,%al
    bcfe:	74 1a                	je     bd1a <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    bd00:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
    bd07:	ff ff 1f 
    bd0a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    bd0e:	73 05                	jae    bd15 <_ZNSt15__new_allocatorIP9VkImage_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
    bd10:	e8 5b 85 ff ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
    bd15:	e8 c6 83 ff ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
    bd1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd1e:	48 c1 e0 03          	shl    $0x3,%rax
    bd22:	48 89 c7             	mov    %rax,%rdi
    bd25:	e8 56 86 ff ff       	call   4380 <_Znwm@plt>
    bd2a:	90                   	nop
      }
    bd2b:	c9                   	leave
    bd2c:	c3                   	ret

000000000000bd2d <_ZSt11__addressofIP9VkImage_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    bd2d:	55                   	push   %rbp
    bd2e:	48 89 e5             	mov    %rsp,%rbp
    bd31:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
    bd35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd39:	5d                   	pop    %rbp
    bd3a:	c3                   	ret

000000000000bd3b <_ZSt10_ConstructIP9VkImage_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
    bd3b:	55                   	push   %rbp
    bd3c:	48 89 e5             	mov    %rsp,%rbp
    bd3f:	48 83 ec 10          	sub    $0x10,%rsp
    bd43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
    bd47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd4b:	48 89 c6             	mov    %rax,%rsi
    bd4e:	bf 08 00 00 00       	mov    $0x8,%edi
    bd53:	e8 e8 90 ff ff       	call   4e40 <_ZnwmPv>
    bd58:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
    bd5f:	90                   	nop
    bd60:	c9                   	leave
    bd61:	c3                   	ret

000000000000bd62 <_ZSt6fill_nIPP9VkImage_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
    bd62:	55                   	push   %rbp
    bd63:	48 89 e5             	mov    %rsp,%rbp
    bd66:	48 83 ec 20          	sub    $0x20,%rsp
    bd6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bd6e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bd72:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
    bd76:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    bd7a:	48 89 c7             	mov    %rax,%rdi
    bd7d:	e8 a7 03 00 00       	call   c129 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
    bd82:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bd86:	48 89 c7             	mov    %rax,%rdi
    bd89:	e8 c4 90 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
    bd8e:	48 89 c1             	mov    %rax,%rcx
    bd91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bd95:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bd99:	48 89 ce             	mov    %rcx,%rsi
    bd9c:	48 89 c7             	mov    %rax,%rdi
    bd9f:	e8 90 03 00 00       	call   c134 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
    bda4:	c9                   	leave
    bda5:	c3                   	ret

000000000000bda6 <_ZSt19__iterator_categoryIP17VkLayerPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bda6:	55                   	push   %rbp
    bda7:	48 89 e5             	mov    %rsp,%rbp
    bdaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bdae:	90                   	nop
    bdaf:	5d                   	pop    %rbp
    bdb0:	c3                   	ret

000000000000bdb1 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bdb1:	55                   	push   %rbp
    bdb2:	48 89 e5             	mov    %rsp,%rbp
    bdb5:	48 83 ec 20          	sub    $0x20,%rsp
    bdb9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bdbd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bdc1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bdc5:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bdca:	75 06                	jne    bdd2 <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bdcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdd0:	eb 4c                	jmp    be1e <_ZSt10__fill_n_aIP17VkLayerPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    bdd2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bdd6:	48 89 d0             	mov    %rdx,%rax
    bdd9:	48 c1 e0 06          	shl    $0x6,%rax
    bddd:	48 01 d0             	add    %rdx,%rax
    bde0:	48 c1 e0 03          	shl    $0x3,%rax
    bde4:	48 89 c2             	mov    %rax,%rdx
    bde7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdeb:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bdef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bdf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bdf7:	48 89 ce             	mov    %rcx,%rsi
    bdfa:	48 89 c7             	mov    %rax,%rdi
    bdfd:	e8 8f 03 00 00       	call   c191 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    be02:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be06:	48 89 d0             	mov    %rdx,%rax
    be09:	48 c1 e0 06          	shl    $0x6,%rax
    be0d:	48 01 d0             	add    %rdx,%rax
    be10:	48 c1 e0 03          	shl    $0x3,%rax
    be14:	48 89 c2             	mov    %rax,%rdx
    be17:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be1b:	48 01 d0             	add    %rdx,%rax
    }
    be1e:	c9                   	leave
    be1f:	c3                   	ret

000000000000be20 <_ZSt19__iterator_categoryIP21VkExtensionPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    be20:	55                   	push   %rbp
    be21:	48 89 e5             	mov    %rsp,%rbp
    be24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    be28:	90                   	nop
    be29:	5d                   	pop    %rbp
    be2a:	c3                   	ret

000000000000be2b <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    be2b:	55                   	push   %rbp
    be2c:	48 89 e5             	mov    %rsp,%rbp
    be2f:	48 83 ec 20          	sub    $0x20,%rsp
    be33:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    be37:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    be3b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    be3f:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    be44:	75 06                	jne    be4c <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    be46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be4a:	eb 4c                	jmp    be98 <_ZSt10__fill_n_aIP21VkExtensionPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6d>
      std::__fill_a(__first, __first + __n, __value);
    be4c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be50:	48 89 d0             	mov    %rdx,%rax
    be53:	48 c1 e0 06          	shl    $0x6,%rax
    be57:	48 01 d0             	add    %rdx,%rax
    be5a:	48 c1 e0 02          	shl    $0x2,%rax
    be5e:	48 89 c2             	mov    %rax,%rdx
    be61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be65:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    be69:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    be6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be71:	48 89 ce             	mov    %rcx,%rsi
    be74:	48 89 c7             	mov    %rax,%rdi
    be77:	e8 43 03 00 00       	call   c1bf <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    be7c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    be80:	48 89 d0             	mov    %rdx,%rax
    be83:	48 c1 e0 06          	shl    $0x6,%rax
    be87:	48 01 d0             	add    %rdx,%rax
    be8a:	48 c1 e0 02          	shl    $0x2,%rax
    be8e:	48 89 c2             	mov    %rax,%rdx
    be91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    be95:	48 01 d0             	add    %rdx,%rax
    }
    be98:	c9                   	leave
    be99:	c3                   	ret

000000000000be9a <_ZSt19__iterator_categoryIPPKcENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    be9a:	55                   	push   %rbp
    be9b:	48 89 e5             	mov    %rsp,%rbp
    be9e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bea2:	90                   	nop
    bea3:	5d                   	pop    %rbp
    bea4:	c3                   	ret

000000000000bea5 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bea5:	55                   	push   %rbp
    bea6:	48 89 e5             	mov    %rsp,%rbp
    bea9:	48 83 ec 20          	sub    $0x20,%rsp
    bead:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    beb1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    beb5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    beb9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bebe:	75 06                	jne    bec6 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bec0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bec4:	eb 3a                	jmp    bf00 <_ZSt10__fill_n_aIPPKcmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bec6:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    beca:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bed1:	00 
    bed2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bed6:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    beda:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bee2:	48 89 ce             	mov    %rcx,%rsi
    bee5:	48 89 c7             	mov    %rax,%rdi
    bee8:	e8 00 03 00 00       	call   c1ed <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>
      return __first + __n;
    beed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bef1:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bef8:	00 
    bef9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    befd:	48 01 d0             	add    %rdx,%rax
    }
    bf00:	c9                   	leave
    bf01:	c3                   	ret

000000000000bf02 <_ZSt19__iterator_categoryIPP18VkPhysicalDevice_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    bf02:	55                   	push   %rbp
    bf03:	48 89 e5             	mov    %rsp,%rbp
    bf06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf0a:	90                   	nop
    bf0b:	5d                   	pop    %rbp
    bf0c:	c3                   	ret

000000000000bf0d <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf0d:	55                   	push   %rbp
    bf0e:	48 89 e5             	mov    %rsp,%rbp
    bf11:	48 83 ec 20          	sub    $0x20,%rsp
    bf15:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf19:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf21:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf26:	75 06                	jne    bf2e <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf2c:	eb 3a                	jmp    bf68 <_ZSt10__fill_n_aIPP18VkPhysicalDevice_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    bf2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf32:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bf39:	00 
    bf3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf3e:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bf42:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bf46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf4a:	48 89 ce             	mov    %rcx,%rsi
    bf4d:	48 89 c7             	mov    %rax,%rdi
    bf50:	e8 c6 02 00 00       	call   c21b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>
      return __first + __n;
    bf55:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    bf59:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    bf60:	00 
    bf61:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf65:	48 01 d0             	add    %rdx,%rax
    }
    bf68:	c9                   	leave
    bf69:	c3                   	ret

000000000000bf6a <_ZSt19__iterator_categoryIP23VkQueueFamilyPropertiesENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    bf6a:	55                   	push   %rbp
    bf6b:	48 89 e5             	mov    %rsp,%rbp
    bf6e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    bf72:	90                   	nop
    bf73:	5d                   	pop    %rbp
    bf74:	c3                   	ret

000000000000bf75 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    bf75:	55                   	push   %rbp
    bf76:	48 89 e5             	mov    %rsp,%rbp
    bf79:	48 83 ec 20          	sub    $0x20,%rsp
    bf7d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bf81:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    bf85:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    bf89:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    bf8e:	75 06                	jne    bf96 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    bf90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bf94:	eb 4a                	jmp    bfe0 <_ZSt10__fill_n_aIP23VkQueueFamilyPropertiesmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x6b>
      std::__fill_a(__first, __first + __n, __value);
    bf96:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bf9a:	48 89 d0             	mov    %rdx,%rax
    bf9d:	48 01 c0             	add    %rax,%rax
    bfa0:	48 01 d0             	add    %rdx,%rax
    bfa3:	48 c1 e0 03          	shl    $0x3,%rax
    bfa7:	48 89 c2             	mov    %rax,%rdx
    bfaa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfae:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    bfb2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    bfb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfba:	48 89 ce             	mov    %rcx,%rsi
    bfbd:	48 89 c7             	mov    %rax,%rdi
    bfc0:	e8 84 02 00 00       	call   c249 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>
      return __first + __n;
    bfc5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    bfc9:	48 89 d0             	mov    %rdx,%rax
    bfcc:	48 01 c0             	add    %rax,%rax
    bfcf:	48 01 d0             	add    %rdx,%rax
    bfd2:	48 c1 e0 03          	shl    $0x3,%rax
    bfd6:	48 89 c2             	mov    %rax,%rdx
    bfd9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bfdd:	48 01 d0             	add    %rdx,%rax
    }
    bfe0:	c9                   	leave
    bfe1:	c3                   	ret

000000000000bfe2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>:
      _Optional_payload_base() = default;
    bfe2:	55                   	push   %rbp
    bfe3:	48 89 e5             	mov    %rsp,%rbp
    bfe6:	48 83 ec 10          	sub    $0x10,%rsp
    bfea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    bfee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bff2:	48 89 c7             	mov    %rax,%rdi
    bff5:	e8 7e 02 00 00       	call   c278 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>
    bffa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    bffe:	c6 40 18 00          	movb   $0x0,0x18(%rax)
    c002:	90                   	nop
    c003:	c9                   	leave
    c004:	c3                   	ret
    c005:	90                   	nop

000000000000c006 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>:
      _Optional_payload() = default;
    c006:	55                   	push   %rbp
    c007:	48 89 e5             	mov    %rsp,%rbp
    c00a:	48 83 ec 10          	sub    $0x10,%rsp
    c00e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c012:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c016:	48 89 c7             	mov    %rax,%rdi
    c019:	e8 c4 ff ff ff       	call   bfe2 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesEC1Ev>
    c01e:	90                   	nop
    c01f:	c9                   	leave
    c020:	c3                   	ret
    c021:	90                   	nop

000000000000c022 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
    c022:	55                   	push   %rbp
    c023:	48 89 e5             	mov    %rsp,%rbp
    c026:	48 83 ec 10          	sub    $0x10,%rsp
    c02a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c02e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c032:	48 89 c7             	mov    %rax,%rdi
    c035:	e8 cc ff ff ff       	call   c006 <_ZNSt17_Optional_payloadI23VkQueueFamilyPropertiesLb1ELb1ELb1EEC1Ev>
    c03a:	90                   	nop
    c03b:	c9                   	leave
    c03c:	c3                   	ret
    c03d:	90                   	nop

000000000000c03e <_ZNSt8optionalI23VkQueueFamilyPropertiesEC1Ev>:
      constexpr optional() noexcept { }
    c03e:	55                   	push   %rbp
    c03f:	48 89 e5             	mov    %rsp,%rbp
    c042:	48 83 ec 10          	sub    $0x10,%rsp
    c046:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c04a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c04e:	48 89 c7             	mov    %rax,%rdi
    c051:	e8 cc ff ff ff       	call   c022 <_ZNSt14_Optional_baseI23VkQueueFamilyPropertiesLb1ELb1EEC1Ev>
    c056:	90                   	nop
    c057:	c9                   	leave
    c058:	c3                   	ret

000000000000c059 <_ZSt19__iterator_categoryIP18VkSurfaceFormatKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c059:	55                   	push   %rbp
    c05a:	48 89 e5             	mov    %rsp,%rbp
    c05d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c061:	90                   	nop
    c062:	5d                   	pop    %rbp
    c063:	c3                   	ret

000000000000c064 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c064:	55                   	push   %rbp
    c065:	48 89 e5             	mov    %rsp,%rbp
    c068:	48 83 ec 20          	sub    $0x20,%rsp
    c06c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c070:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c074:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c078:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c07d:	75 06                	jne    c085 <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c07f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c083:	eb 3a                	jmp    c0bf <_ZSt10__fill_n_aIP18VkSurfaceFormatKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c085:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c089:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c090:	00 
    c091:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c095:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c099:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c09d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0a1:	48 89 ce             	mov    %rcx,%rsi
    c0a4:	48 89 c7             	mov    %rax,%rdi
    c0a7:	e8 d7 01 00 00       	call   c283 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c0ac:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0b0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c0b7:	00 
    c0b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0bc:	48 01 d0             	add    %rdx,%rax
    }
    c0bf:	c9                   	leave
    c0c0:	c3                   	ret

000000000000c0c1 <_ZSt19__iterator_categoryIP16VkPresentModeKHRENSt15iterator_traitsIT_E17iterator_categoryERKS3_>:
    __iterator_category(const _Iter&)
    c0c1:	55                   	push   %rbp
    c0c2:	48 89 e5             	mov    %rsp,%rbp
    c0c5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c0c9:	90                   	nop
    c0ca:	5d                   	pop    %rbp
    c0cb:	c3                   	ret

000000000000c0cc <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c0cc:	55                   	push   %rbp
    c0cd:	48 89 e5             	mov    %rsp,%rbp
    c0d0:	48 83 ec 20          	sub    $0x20,%rsp
    c0d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c0d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c0dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c0e0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c0e5:	75 06                	jne    c0ed <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c0e7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0eb:	eb 3a                	jmp    c127 <_ZSt10__fill_n_aIP16VkPresentModeKHRmS0_ET_S2_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c0ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c0f1:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c0f8:	00 
    c0f9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c0fd:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c101:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c109:	48 89 ce             	mov    %rcx,%rsi
    c10c:	48 89 c7             	mov    %rax,%rdi
    c10f:	e8 9d 01 00 00       	call   c2b1 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>
      return __first + __n;
    c114:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c118:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
    c11f:	00 
    c120:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c124:	48 01 d0             	add    %rdx,%rax
    }
    c127:	c9                   	leave
    c128:	c3                   	ret

000000000000c129 <_ZSt19__iterator_categoryIPP9VkImage_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
    c129:	55                   	push   %rbp
    c12a:	48 89 e5             	mov    %rsp,%rbp
    c12d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
    c131:	90                   	nop
    c132:	5d                   	pop    %rbp
    c133:	c3                   	ret

000000000000c134 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
    c134:	55                   	push   %rbp
    c135:	48 89 e5             	mov    %rsp,%rbp
    c138:	48 83 ec 20          	sub    $0x20,%rsp
    c13c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c140:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c144:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
    c148:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
    c14d:	75 06                	jne    c155 <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
    c14f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c153:	eb 3a                	jmp    c18f <_ZSt10__fill_n_aIPP9VkImage_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
    c155:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c159:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c160:	00 
    c161:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c165:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
    c169:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c16d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c171:	48 89 ce             	mov    %rcx,%rsi
    c174:	48 89 c7             	mov    %rax,%rdi
    c177:	e8 63 01 00 00       	call   c2df <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>
      return __first + __n;
    c17c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c180:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    c187:	00 
    c188:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c18c:	48 01 d0             	add    %rdx,%rax
    }
    c18f:	c9                   	leave
    c190:	c3                   	ret

000000000000c191 <_ZSt8__fill_aIP17VkLayerPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c191:	55                   	push   %rbp
    c192:	48 89 e5             	mov    %rsp,%rbp
    c195:	48 83 ec 20          	sub    $0x20,%rsp
    c199:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c19d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1a1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1a9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1ad:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1b1:	48 89 ce             	mov    %rcx,%rsi
    c1b4:	48 89 c7             	mov    %rax,%rdi
    c1b7:	e8 51 01 00 00       	call   c30d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c1bc:	90                   	nop
    c1bd:	c9                   	leave
    c1be:	c3                   	ret

000000000000c1bf <_ZSt8__fill_aIP21VkExtensionPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c1bf:	55                   	push   %rbp
    c1c0:	48 89 e5             	mov    %rsp,%rbp
    c1c3:	48 83 ec 20          	sub    $0x20,%rsp
    c1c7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1cb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c1d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c1d7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c1db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c1df:	48 89 ce             	mov    %rcx,%rsi
    c1e2:	48 89 c7             	mov    %rax,%rdi
    c1e5:	e8 9b 01 00 00       	call   c385 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c1ea:	90                   	nop
    c1eb:	c9                   	leave
    c1ec:	c3                   	ret

000000000000c1ed <_ZSt8__fill_aIPPKcS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c1ed:	55                   	push   %rbp
    c1ee:	48 89 e5             	mov    %rsp,%rbp
    c1f1:	48 83 ec 20          	sub    $0x20,%rsp
    c1f5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c1f9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c1fd:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c201:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c205:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c209:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c20d:	48 89 ce             	mov    %rcx,%rsi
    c210:	48 89 c7             	mov    %rax,%rdi
    c213:	e8 e5 01 00 00       	call   c3fd <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c218:	90                   	nop
    c219:	c9                   	leave
    c21a:	c3                   	ret

000000000000c21b <_ZSt8__fill_aIPP18VkPhysicalDevice_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c21b:	55                   	push   %rbp
    c21c:	48 89 e5             	mov    %rsp,%rbp
    c21f:	48 83 ec 20          	sub    $0x20,%rsp
    c223:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c227:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c22b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c22f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c233:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c23b:	48 89 ce             	mov    %rcx,%rsi
    c23e:	48 89 c7             	mov    %rax,%rdi
    c241:	e8 f2 01 00 00       	call   c438 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c246:	90                   	nop
    c247:	c9                   	leave
    c248:	c3                   	ret

000000000000c249 <_ZSt8__fill_aIP23VkQueueFamilyPropertiesS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c249:	55                   	push   %rbp
    c24a:	48 89 e5             	mov    %rsp,%rbp
    c24d:	48 83 ec 20          	sub    $0x20,%rsp
    c251:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c255:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c259:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c25d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c261:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c265:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c269:	48 89 ce             	mov    %rcx,%rsi
    c26c:	48 89 c7             	mov    %rax,%rdi
    c26f:	e8 ff 01 00 00       	call   c473 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c274:	90                   	nop
    c275:	c9                   	leave
    c276:	c3                   	ret
    c277:	90                   	nop

000000000000c278 <_ZNSt22_Optional_payload_baseI23VkQueueFamilyPropertiesE8_StorageIS0_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
    c278:	55                   	push   %rbp
    c279:	48 89 e5             	mov    %rsp,%rbp
    c27c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c280:	90                   	nop
    c281:	5d                   	pop    %rbp
    c282:	c3                   	ret

000000000000c283 <_ZSt8__fill_aIP18VkSurfaceFormatKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c283:	55                   	push   %rbp
    c284:	48 89 e5             	mov    %rsp,%rbp
    c287:	48 83 ec 20          	sub    $0x20,%rsp
    c28b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c28f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c293:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c297:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c29b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c29f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2a3:	48 89 ce             	mov    %rcx,%rsi
    c2a6:	48 89 c7             	mov    %rax,%rdi
    c2a9:	e8 08 02 00 00       	call   c4b6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2ae:	90                   	nop
    c2af:	c9                   	leave
    c2b0:	c3                   	ret

000000000000c2b1 <_ZSt8__fill_aIP16VkPresentModeKHRS0_EvT_S2_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2b1:	55                   	push   %rbp
    c2b2:	48 89 e5             	mov    %rsp,%rbp
    c2b5:	48 83 ec 20          	sub    $0x20,%rsp
    c2b9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2bd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2c1:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2c5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2c9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2cd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2d1:	48 89 ce             	mov    %rcx,%rsi
    c2d4:	48 89 c7             	mov    %rax,%rdi
    c2d7:	e8 0d 02 00 00       	call   c4e9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>
    c2dc:	90                   	nop
    c2dd:	c9                   	leave
    c2de:	c3                   	ret

000000000000c2df <_ZSt8__fill_aIPP9VkImage_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
    c2df:	55                   	push   %rbp
    c2e0:	48 89 e5             	mov    %rsp,%rbp
    c2e3:	48 83 ec 20          	sub    $0x20,%rsp
    c2e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c2eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c2ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
    c2f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c2f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
    c2fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c2ff:	48 89 ce             	mov    %rcx,%rsi
    c302:	48 89 c7             	mov    %rax,%rdi
    c305:	e8 10 02 00 00       	call   c51a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
    c30a:	90                   	nop
    c30b:	c9                   	leave
    c30c:	c3                   	ret

000000000000c30d <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c30d:	55                   	push   %rbp
    c30e:	48 89 e5             	mov    %rsp,%rbp
    c311:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c315:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c319:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c31d:	eb 58                	jmp    c377 <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c31f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c323:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c327:	b9 08 02 00 00       	mov    $0x208,%ecx
    c32c:	48 8b 32             	mov    (%rdx),%rsi
    c32f:	48 89 30             	mov    %rsi,(%rax)
    c332:	89 ce                	mov    %ecx,%esi
    c334:	48 01 c6             	add    %rax,%rsi
    c337:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c33b:	89 ce                	mov    %ecx,%esi
    c33d:	48 01 d6             	add    %rdx,%rsi
    c340:	48 83 c6 08          	add    $0x8,%rsi
    c344:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c348:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c34c:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c350:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c354:	48 29 f8             	sub    %rdi,%rax
    c357:	48 29 c2             	sub    %rax,%rdx
    c35a:	01 c1                	add    %eax,%ecx
    c35c:	83 e1 f8             	and    $0xfffffff8,%ecx
    c35f:	89 c8                	mov    %ecx,%eax
    c361:	c1 e8 03             	shr    $0x3,%eax
    c364:	89 c0                	mov    %eax,%eax
    c366:	48 89 d6             	mov    %rdx,%rsi
    c369:	48 89 c1             	mov    %rax,%rcx
    c36c:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c36f:	48 81 45 f8 08 02 00 	addq   $0x208,-0x8(%rbp)
    c376:	00 
    c377:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c37b:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c37f:	75 9e                	jne    c31f <_ZSt9__fill_a1IP17VkLayerPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c381:	90                   	nop
    c382:	90                   	nop
    c383:	5d                   	pop    %rbp
    c384:	c3                   	ret

000000000000c385 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c385:	55                   	push   %rbp
    c386:	48 89 e5             	mov    %rsp,%rbp
    c389:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c38d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c391:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c395:	eb 58                	jmp    c3ef <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x6a>
	*__first = __value;
    c397:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c39b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c39f:	b9 04 01 00 00       	mov    $0x104,%ecx
    c3a4:	48 8b 32             	mov    (%rdx),%rsi
    c3a7:	48 89 30             	mov    %rsi,(%rax)
    c3aa:	89 ce                	mov    %ecx,%esi
    c3ac:	48 01 c6             	add    %rax,%rsi
    c3af:	48 8d 7e 08          	lea    0x8(%rsi),%rdi
    c3b3:	89 ce                	mov    %ecx,%esi
    c3b5:	48 01 d6             	add    %rdx,%rsi
    c3b8:	48 83 c6 08          	add    $0x8,%rsi
    c3bc:	48 8b 76 f0          	mov    -0x10(%rsi),%rsi
    c3c0:	48 89 77 f0          	mov    %rsi,-0x10(%rdi)
    c3c4:	48 8d 78 08          	lea    0x8(%rax),%rdi
    c3c8:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    c3cc:	48 29 f8             	sub    %rdi,%rax
    c3cf:	48 29 c2             	sub    %rax,%rdx
    c3d2:	01 c1                	add    %eax,%ecx
    c3d4:	83 e1 f8             	and    $0xfffffff8,%ecx
    c3d7:	89 c8                	mov    %ecx,%eax
    c3d9:	c1 e8 03             	shr    $0x3,%eax
    c3dc:	89 c0                	mov    %eax,%eax
    c3de:	48 89 d6             	mov    %rdx,%rsi
    c3e1:	48 89 c1             	mov    %rax,%rcx
    c3e4:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
      for (; __first != __last; ++__first)
    c3e7:	48 81 45 f8 04 01 00 	addq   $0x104,-0x8(%rbp)
    c3ee:	00 
    c3ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c3f3:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c3f7:	75 9e                	jne    c397 <_ZSt9__fill_a1IP21VkExtensionPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c3f9:	90                   	nop
    c3fa:	90                   	nop
    c3fb:	5d                   	pop    %rbp
    c3fc:	c3                   	ret

000000000000c3fd <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c3fd:	55                   	push   %rbp
    c3fe:	48 89 e5             	mov    %rsp,%rbp
    c401:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c405:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c409:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c40d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c411:	48 8b 00             	mov    (%rax),%rax
    c414:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c418:	eb 10                	jmp    c42a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c41a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c41e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c422:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c425:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c42a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c42e:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c432:	75 e6                	jne    c41a <_ZSt9__fill_a1IPPKcS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c434:	90                   	nop
    c435:	90                   	nop
    c436:	5d                   	pop    %rbp
    c437:	c3                   	ret

000000000000c438 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c438:	55                   	push   %rbp
    c439:	48 89 e5             	mov    %rsp,%rbp
    c43c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c440:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c444:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c448:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c44c:	48 8b 00             	mov    (%rax),%rax
    c44f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c453:	eb 10                	jmp    c465 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c455:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c459:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c45d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c460:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c465:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c469:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c46d:	75 e6                	jne    c455 <_ZSt9__fill_a1IPP18VkPhysicalDevice_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c46f:	90                   	nop
    c470:	90                   	nop
    c471:	5d                   	pop    %rbp
    c472:	c3                   	ret

000000000000c473 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c473:	55                   	push   %rbp
    c474:	48 89 e5             	mov    %rsp,%rbp
    c477:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c47b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c47f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c483:	eb 23                	jmp    c4a8 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x35>
	*__first = __value;
    c485:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
    c489:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
    c48d:	48 8b 06             	mov    (%rsi),%rax
    c490:	48 8b 56 08          	mov    0x8(%rsi),%rdx
    c494:	48 89 01             	mov    %rax,(%rcx)
    c497:	48 89 51 08          	mov    %rdx,0x8(%rcx)
    c49b:	48 8b 46 10          	mov    0x10(%rsi),%rax
    c49f:	48 89 41 10          	mov    %rax,0x10(%rcx)
      for (; __first != __last; ++__first)
    c4a3:	48 83 45 f8 18       	addq   $0x18,-0x8(%rbp)
    c4a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4ac:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4b0:	75 d3                	jne    c485 <_ZSt9__fill_a1IP23VkQueueFamilyPropertiesS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4b2:	90                   	nop
    c4b3:	90                   	nop
    c4b4:	5d                   	pop    %rbp
    c4b5:	c3                   	ret

000000000000c4b6 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4b6:	55                   	push   %rbp
    c4b7:	48 89 e5             	mov    %rsp,%rbp
    c4ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4c2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c4c6:	eb 13                	jmp    c4db <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x25>
	*__first = __value;
    c4c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c4d0:	48 8b 12             	mov    (%rdx),%rdx
    c4d3:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c4d6:	48 83 45 f8 08       	addq   $0x8,-0x8(%rbp)
    c4db:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c4df:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c4e3:	75 e3                	jne    c4c8 <_ZSt9__fill_a1IP18VkSurfaceFormatKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c4e5:	90                   	nop
    c4e6:	90                   	nop
    c4e7:	5d                   	pop    %rbp
    c4e8:	c3                   	ret

000000000000c4e9 <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c4e9:	55                   	push   %rbp
    c4ea:	48 89 e5             	mov    %rsp,%rbp
    c4ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c4f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    c4f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      for (; __first != __last; ++__first)
    c4f9:	eb 11                	jmp    c50c <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x23>
	*__first = __value;
    c4fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c4ff:	8b 10                	mov    (%rax),%edx
    c501:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c505:	89 10                	mov    %edx,(%rax)
      for (; __first != __last; ++__first)
    c507:	48 83 45 f8 04       	addq   $0x4,-0x8(%rbp)
    c50c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c510:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
    c514:	75 e5                	jne    c4fb <_ZSt9__fill_a1IP16VkPresentModeKHRS0_EN9__gnu_cxx11__enable_ifIXntsrSt11__is_scalarIT0_E7__valueEvE6__typeET_S9_RKS5_+0x12>
    }
    c516:	90                   	nop
    c517:	90                   	nop
    c518:	5d                   	pop    %rbp
    c519:	c3                   	ret

000000000000c51a <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
    c51a:	55                   	push   %rbp
    c51b:	48 89 e5             	mov    %rsp,%rbp
    c51e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c522:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c526:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
    c52a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    c52e:	48 8b 00             	mov    (%rax),%rax
    c531:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
    c535:	eb 10                	jmp    c547 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
    c537:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c53b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    c53f:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
    c542:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
    c547:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c54b:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    c54f:	75 e6                	jne    c537 <_ZSt9__fill_a1IPP9VkImage_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
    c551:	90                   	nop
    c552:	90                   	nop
    c553:	5d                   	pop    %rbp
    c554:	c3                   	ret

000000000000c555 <_ZN3vkh27checkValidationLayerSupportEv>:
#include "validation_layers.hpp"

namespace vkh {

bool checkValidationLayerSupport() {
    c555:	55                   	push   %rbp
    c556:	48 89 e5             	mov    %rsp,%rbp
    c559:	53                   	push   %rbx
    c55a:	48 83 ec 58          	sub    $0x58,%rsp
  uint32_t layerCount;
  vkEnumerateInstanceLayerProperties(&layerCount, nullptr);
    c55e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c562:	be 00 00 00 00       	mov    $0x0,%esi
    c567:	48 89 c7             	mov    %rax,%rdi
    c56a:	e8 f1 7e ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c56f:	8b 45 c8             	mov    -0x38(%rbp),%eax
    c572:	89 c3                	mov    %eax,%ebx
    c574:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c578:	48 89 c7             	mov    %rax,%rdi
    c57b:	e8 ea b6 ff ff       	call   7c6a <_ZNSaI17VkLayerPropertiesEC1Ev>
    c580:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    c584:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c588:	48 89 de             	mov    %rbx,%rsi
    c58b:	48 89 c7             	mov    %rax,%rdi
    c58e:	e8 0f b7 ff ff       	call   7ca2 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EEC1EmRKS1_>
    c593:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c597:	48 89 c7             	mov    %rax,%rdi
    c59a:	e8 e7 b6 ff ff       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
  vkEnumerateInstanceLayerProperties(&layerCount, availableLayers.data());
    c59f:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c5a3:	48 89 c7             	mov    %rax,%rdi
    c5a6:	e8 b1 b7 ff ff       	call   7d5c <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE4dataEv>
    c5ab:	48 89 c2             	mov    %rax,%rdx
    c5ae:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
    c5b2:	48 89 d6             	mov    %rdx,%rsi
    c5b5:	48 89 c7             	mov    %rax,%rdi
    c5b8:	e8 a3 7e ff ff       	call   4460 <vkEnumerateInstanceLayerProperties@plt>

  for (const auto &layerProperties : availableLayers) {
    c5bd:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c5c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    c5c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5c9:	48 89 c7             	mov    %rax,%rdi
    c5cc:	e8 63 04 00 00       	call   ca34 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    c5d1:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    c5d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c5d9:	48 89 c7             	mov    %rax,%rdi
    c5dc:	e8 79 04 00 00       	call   ca5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    c5e1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    c5e5:	eb 5b                	jmp    c642 <_ZN3vkh27checkValidationLayerSupportEv+0xed>
    c5e7:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c5eb:	48 89 c7             	mov    %rax,%rdi
    c5ee:	e8 ef 04 00 00       	call   cae2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    c5f3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    if (validationLayerName == layerProperties.layerName) {
    c5f7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c5fb:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    c5ff:	48 89 d6             	mov    %rdx,%rsi
    c602:	48 89 c7             	mov    %rax,%rdi
    c605:	e8 f8 03 00 00       	call   ca02 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>
    c60a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    c60e:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c612:	48 8b 3d 87 96 01 00 	mov    0x19687(%rip),%rdi        # 25ca0 <_ZN3vkh19validationLayerNameE>
    c619:	48 8b 35 88 96 01 00 	mov    0x19688(%rip),%rsi        # 25ca8 <_ZN3vkh19validationLayerNameE+0x8>
    c620:	48 89 d1             	mov    %rdx,%rcx
    c623:	48 89 c2             	mov    %rax,%rdx
    c626:	e8 da 04 00 00       	call   cb05 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>
    c62b:	84 c0                	test   %al,%al
    c62d:	74 07                	je     c636 <_ZN3vkh27checkValidationLayerSupportEv+0xe1>
      return true;
    c62f:	bb 01 00 00 00       	mov    $0x1,%ebx
    c634:	eb 28                	jmp    c65e <_ZN3vkh27checkValidationLayerSupportEv+0x109>
  for (const auto &layerProperties : availableLayers) {
    c636:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c63a:	48 89 c7             	mov    %rax,%rdi
    c63d:	e8 7c 04 00 00       	call   cabe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    c642:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    c646:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
    c64a:	48 89 d6             	mov    %rdx,%rsi
    c64d:	48 89 c7             	mov    %rax,%rdi
    c650:	e8 2e 04 00 00       	call   ca83 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    c655:	84 c0                	test   %al,%al
    c657:	75 8e                	jne    c5e7 <_ZN3vkh27checkValidationLayerSupportEv+0x92>
    }
  }
  return false;
    c659:	bb 00 00 00 00       	mov    $0x0,%ebx
}
    c65e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c662:	48 89 c7             	mov    %rax,%rdi
    c665:	e8 ae b6 ff ff       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c66a:	89 d8                	mov    %ebx,%eax
    c66c:	eb 34                	jmp    c6a2 <_ZN3vkh27checkValidationLayerSupportEv+0x14d>
  std::vector<VkLayerProperties> availableLayers{layerCount};
    c66e:	48 89 c3             	mov    %rax,%rbx
    c671:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    c675:	48 89 c7             	mov    %rax,%rdi
    c678:	e8 09 b6 ff ff       	call   7c86 <_ZNSaI17VkLayerPropertiesED1Ev>
    c67d:	48 89 d8             	mov    %rbx,%rax
    c680:	48 89 c7             	mov    %rax,%rdi
    c683:	e8 48 80 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    c688:	48 89 c3             	mov    %rax,%rbx
    c68b:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    c68f:	48 89 c7             	mov    %rax,%rdi
    c692:	e8 81 b6 ff ff       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    c697:	48 89 d8             	mov    %rbx,%rax
    c69a:	48 89 c7             	mov    %rax,%rdi
    c69d:	e8 2e 80 ff ff       	call   46d0 <_Unwind_Resume@plt>
    c6a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    c6a6:	c9                   	leave
    c6a7:	c3                   	ret

000000000000c6a8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>:

VKAPI_ATTR VkBool32 VKAPI_CALL
debugCallback(VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity,
              [[maybe_unused]] VkDebugUtilsMessageTypeFlagsEXT messageType,
              const VkDebugUtilsMessengerCallbackDataEXT *pCallbackData,
              [[maybe_unused]] void *pUserData) {
    c6a8:	55                   	push   %rbp
    c6a9:	48 89 e5             	mov    %rsp,%rbp
    c6ac:	48 83 ec 20          	sub    $0x20,%rsp
    c6b0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c6b3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c6b6:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
    c6ba:	48 89 4d e8          	mov    %rcx,-0x18(%rbp)
  if (messageSeverity > VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT) {
    c6be:	8b 45 fc             	mov    -0x4(%rbp),%eax
    c6c1:	83 f8 01             	cmp    $0x1,%eax
    c6c4:	7e 3c                	jle    c702 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv+0x5a>
    std::cerr << '\n' << pCallbackData->pMessage << std::endl;
    c6c6:	be 0a 00 00 00       	mov    $0xa,%esi
    c6cb:	48 8d 05 0e 9e 01 00 	lea    0x19e0e(%rip),%rax        # 264e0 <_ZSt4cerr@GLIBCXX_3.4>
    c6d2:	48 89 c7             	mov    %rax,%rdi
    c6d5:	e8 a6 7d ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    c6da:	48 89 c2             	mov    %rax,%rdx
    c6dd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c6e1:	48 8b 40 28          	mov    0x28(%rax),%rax
    c6e5:	48 89 c6             	mov    %rax,%rsi
    c6e8:	48 89 d7             	mov    %rdx,%rdi
    c6eb:	e8 80 7c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    c6f0:	48 8b 15 a1 98 01 00 	mov    0x198a1(%rip),%rdx        # 25f98 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
    c6f7:	48 89 d6             	mov    %rdx,%rsi
    c6fa:	48 89 c7             	mov    %rax,%rdi
    c6fd:	e8 de 7c ff ff       	call   43e0 <_ZNSolsEPFRSoS_E@plt>
  }
  return VK_FALSE;
    c702:	b8 00 00 00 00       	mov    $0x0,%eax
}
    c707:	c9                   	leave
    c708:	c3                   	ret

000000000000c709 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>:

void populateDebugMessengerCreateInfo(
    VkDebugUtilsMessengerCreateInfoEXT &createInfo) {
    c709:	55                   	push   %rbp
    c70a:	48 89 e5             	mov    %rsp,%rbp
    c70d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  createInfo = {};
    c711:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c715:	66 0f ef c0          	pxor   %xmm0,%xmm0
    c719:	0f 11 00             	movups %xmm0,(%rax)
    c71c:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    c720:	0f 11 40 20          	movups %xmm0,0x20(%rax)
  createInfo.sType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT;
    c724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c728:	c7 00 04 be 9c 3b    	movl   $0x3b9cbe04,(%rax)
  createInfo.messageSeverity =
    c72e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c732:	c7 40 14 01 11 00 00 	movl   $0x1101,0x14(%rax)
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT |
      //  VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT |
      VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT;
  createInfo.messageType = VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT |
    c739:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c73d:	c7 40 18 07 00 00 00 	movl   $0x7,0x18(%rax)
                           VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT |
                           VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT;
  createInfo.pfnUserCallback = debugCallback;
    c744:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c748:	48 8d 15 59 ff ff ff 	lea    -0xa7(%rip),%rdx        # c6a8 <_ZN3vkh13debugCallbackE38VkDebugUtilsMessageSeverityFlagBitsEXTjPK36VkDebugUtilsMessengerCallbackDataEXTPv>
    c74f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  createInfo.pUserData = nullptr;
    c753:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c757:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    c75e:	00 
}
    c75f:	90                   	nop
    c760:	5d                   	pop    %rbp
    c761:	c3                   	ret

000000000000c762 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>:

VkResult createDebugUtilsMessengerEXT(
    VkInstance instance, const VkDebugUtilsMessengerCreateInfoEXT *pCreateInfo,
    const VkAllocationCallbacks *pAllocator,
    VkDebugUtilsMessengerEXT *pDebugMessenger) {
    c762:	55                   	push   %rbp
    c763:	48 89 e5             	mov    %rsp,%rbp
    c766:	48 83 ec 30          	sub    $0x30,%rsp
    c76a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c76e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c772:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    c776:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  auto func = (PFN_vkCreateDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c77a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c77e:	48 8d 15 53 bf 00 00 	lea    0xbf53(%rip),%rdx        # 186d8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x28>
    c785:	48 89 d6             	mov    %rdx,%rsi
    c788:	48 89 c7             	mov    %rax,%rdi
    c78b:	e8 b0 7b ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c790:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkCreateDebugUtilsMessengerEXT");
  if (func == nullptr) {
    c794:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c799:	75 07                	jne    c7a2 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x40>
    return VK_ERROR_EXTENSION_NOT_PRESENT;
    c79b:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax
    c7a0:	eb 1b                	jmp    c7bd <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T+0x5b>
  }
  return func(instance, pCreateInfo, pAllocator, pDebugMessenger);
    c7a2:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c7a6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    c7aa:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c7ae:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
    c7b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c7b6:	48 89 c7             	mov    %rax,%rdi
    c7b9:	41 ff d0             	call   *%r8
    c7bc:	90                   	nop
}
    c7bd:	c9                   	leave
    c7be:	c3                   	ret

000000000000c7bf <_ZN3vkh20createDebugMessengerEP12VkInstance_T>:

VkDebugUtilsMessengerEXT createDebugMessenger(VkInstance instance) {
    c7bf:	55                   	push   %rbp
    c7c0:	48 89 e5             	mov    %rsp,%rbp
    c7c3:	41 54                	push   %r12
    c7c5:	53                   	push   %rbx
    c7c6:	48 83 ec 50          	sub    $0x50,%rsp
    c7ca:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
  VkDebugUtilsMessengerCreateInfoEXT createInfo;
  populateDebugMessengerCreateInfo(createInfo);
    c7ce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    c7d2:	48 89 c7             	mov    %rax,%rdi
    c7d5:	e8 2f ff ff ff       	call   c709 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>
  VkDebugUtilsMessengerEXT debugMessenger{};
    c7da:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    c7e1:	00 
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c7e2:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
    c7e6:	48 8d 75 c0          	lea    -0x40(%rbp),%rsi
    c7ea:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    c7ee:	48 89 d1             	mov    %rdx,%rcx
    c7f1:	ba 00 00 00 00       	mov    $0x0,%edx
    c7f6:	48 89 c7             	mov    %rax,%rdi
    c7f9:	e8 64 ff ff ff       	call   c762 <_ZN3vkh28createDebugUtilsMessengerEXTEP12VkInstance_TPK34VkDebugUtilsMessengerCreateInfoEXTPK21VkAllocationCallbacksPP26VkDebugUtilsMessengerEXT_T>
                                   &debugMessenger) != VK_SUCCESS) {
    c7fe:	85 c0                	test   %eax,%eax
    c800:	0f 95 c0             	setne  %al
  if (createDebugUtilsMessengerEXT(instance, &createInfo, nullptr,
    c803:	84 c0                	test   %al,%al
    c805:	74 3b                	je     c842 <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x83>
    throw std::runtime_error("Failed to set up debug message.");
    c807:	bf 10 00 00 00       	mov    $0x10,%edi
    c80c:	e8 5f 79 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    c811:	48 89 c3             	mov    %rax,%rbx
    c814:	48 8d 05 dd be 00 00 	lea    0xbedd(%rip),%rax        # 186f8 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x48>
    c81b:	48 89 c6             	mov    %rax,%rsi
    c81e:	48 89 df             	mov    %rbx,%rdi
    c821:	e8 da 78 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    c826:	48 8b 05 7b 97 01 00 	mov    0x1977b(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    c82d:	48 89 c2             	mov    %rax,%rdx
    c830:	48 8d 05 09 95 01 00 	lea    0x19509(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    c837:	48 89 c6             	mov    %rax,%rsi
    c83a:	48 89 df             	mov    %rbx,%rdi
    c83d:	e8 2e 7e ff ff       	call   4670 <__cxa_throw@plt>
  }
  return debugMessenger;
    c842:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    c846:	eb 16                	jmp    c85e <_ZN3vkh20createDebugMessengerEP12VkInstance_T+0x9f>
    throw std::runtime_error("Failed to set up debug message.");
    c848:	49 89 c4             	mov    %rax,%r12
    c84b:	48 89 df             	mov    %rbx,%rdi
    c84e:	e8 ed 79 ff ff       	call   4240 <__cxa_free_exception@plt>
    c853:	4c 89 e0             	mov    %r12,%rax
    c856:	48 89 c7             	mov    %rax,%rdi
    c859:	e8 72 7e ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    c85e:	48 83 c4 50          	add    $0x50,%rsp
    c862:	5b                   	pop    %rbx
    c863:	41 5c                	pop    %r12
    c865:	5d                   	pop    %rbp
    c866:	c3                   	ret

000000000000c867 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>:

void destroyDebugUtilsMessengerEXT(VkInstance instance,
                                   VkDebugUtilsMessengerEXT debugMessenger,
                                   const VkAllocationCallbacks *pAllocator) {
    c867:	55                   	push   %rbp
    c868:	48 89 e5             	mov    %rsp,%rbp
    c86b:	48 83 ec 30          	sub    $0x30,%rsp
    c86f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c873:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c877:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  auto func = (PFN_vkDestroyDebugUtilsMessengerEXT)vkGetInstanceProcAddr(
    c87b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c87f:	48 8d 15 92 be 00 00 	lea    0xbe92(%rip),%rdx        # 18718 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x68>
    c886:	48 89 d6             	mov    %rdx,%rsi
    c889:	48 89 c7             	mov    %rax,%rdi
    c88c:	e8 af 7a ff ff       	call   4340 <vkGetInstanceProcAddr@plt>
    c891:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      instance, "vkDestroyDebugUtilsMessengerEXT");
  if (func != nullptr) {
    c895:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
    c89a:	74 19                	je     c8b5 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks+0x4e>
    func(instance, debugMessenger, pAllocator);
    c89c:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    c8a0:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c8a4:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c8a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c8ac:	48 89 ce             	mov    %rcx,%rsi
    c8af:	48 89 c7             	mov    %rax,%rdi
    c8b2:	41 ff d0             	call   *%r8
  }
}
    c8b5:	90                   	nop
    c8b6:	c9                   	leave
    c8b7:	c3                   	ret

000000000000c8b8 <_Z41__static_initialization_and_destruction_0ii>:

    c8b8:	55                   	push   %rbp
    c8b9:	48 89 e5             	mov    %rsp,%rbp
    c8bc:	48 83 ec 10          	sub    $0x10,%rsp
    c8c0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    c8c3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    c8c6:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    c8ca:	75 3b                	jne    c907 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c8cc:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    c8d3:	75 32                	jne    c907 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    c8d5:	48 8d 05 16 9d 01 00 	lea    0x19d16(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c8dc:	48 89 c7             	mov    %rax,%rdi
    c8df:	e8 fc 7c ff ff       	call   45e0 <_ZNSt8ios_base4InitC1Ev@plt>
    c8e4:	48 8d 05 b5 9a 01 00 	lea    0x19ab5(%rip),%rax        # 263a0 <__dso_handle>
    c8eb:	48 89 c2             	mov    %rax,%rdx
    c8ee:	48 8d 05 fd 9c 01 00 	lea    0x19cfd(%rip),%rax        # 265f2 <_ZStL8__ioinit>
    c8f5:	48 89 c6             	mov    %rax,%rsi
    c8f8:	48 8b 05 c9 96 01 00 	mov    0x196c9(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    c8ff:	48 89 c7             	mov    %rax,%rdi
    c902:	e8 f9 79 ff ff       	call   4300 <__cxa_atexit@plt>
    c907:	90                   	nop
    c908:	c9                   	leave
    c909:	c3                   	ret

000000000000c90a <_GLOBAL__sub_I__ZN3vkh27checkValidationLayerSupportEv>:
    c90a:	55                   	push   %rbp
    c90b:	48 89 e5             	mov    %rsp,%rbp
    c90e:	be ff ff 00 00       	mov    $0xffff,%esi
    c913:	bf 01 00 00 00       	mov    $0x1,%edi
    c918:	e8 9b ff ff ff       	call   c8b8 <_Z41__static_initialization_and_destruction_0ii>
    c91d:	5d                   	pop    %rbp
    c91e:	c3                   	ret

000000000000c91f <_ZNSt11char_traitsIcE2ltERKcS2_>:
      lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
    c91f:	55                   	push   %rbp
    c920:	48 89 e5             	mov    %rsp,%rbp
    c923:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    c927:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return (static_cast<unsigned char>(__c1)
    c92b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c92f:	0f b6 00             	movzbl (%rax),%eax
    c932:	89 c2                	mov    %eax,%edx
		< static_cast<unsigned char>(__c2));
    c934:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    c938:	0f b6 00             	movzbl (%rax),%eax
    c93b:	38 c2                	cmp    %al,%dl
    c93d:	0f 92 c0             	setb   %al
      }
    c940:	5d                   	pop    %rbp
    c941:	c3                   	ret

000000000000c942 <_ZNSt11char_traitsIcE7compareEPKcS2_m>:
      compare(const char_type* __s1, const char_type* __s2, size_t __n)
    c942:	55                   	push   %rbp
    c943:	48 89 e5             	mov    %rsp,%rbp
    c946:	48 83 ec 30          	sub    $0x30,%rsp
    c94a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    c94e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    c952:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	if (__n == 0)
    c956:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
    c95b:	75 0a                	jne    c967 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x25>
	  return 0;
    c95d:	b8 00 00 00 00       	mov    $0x0,%eax
    c962:	e9 99 00 00 00       	jmp    ca00 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	if (std::__is_constant_evaluated())
    c967:	e8 f2 80 ff ff       	call   4a5e <_ZSt23__is_constant_evaluatedv>
    c96c:	84 c0                	test   %al,%al
    c96e:	74 78                	je     c9e8 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xa6>
	    for (size_t __i = 0; __i < __n; ++__i)
    c970:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
    c977:	00 
    c978:	eb 5d                	jmp    c9d7 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x95>
	      if (lt(__s1[__i], __s2[__i]))
    c97a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    c97e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c982:	48 01 c2             	add    %rax,%rdx
    c985:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    c989:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c98d:	48 01 c8             	add    %rcx,%rax
    c990:	48 89 d6             	mov    %rdx,%rsi
    c993:	48 89 c7             	mov    %rax,%rdi
    c996:	e8 84 ff ff ff       	call   c91f <_ZNSt11char_traitsIcE2ltERKcS2_>
    c99b:	84 c0                	test   %al,%al
    c99d:	74 07                	je     c9a6 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x64>
		return -1;
    c99f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    c9a4:	eb 5a                	jmp    ca00 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	      else if (lt(__s2[__i], __s1[__i]))
    c9a6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    c9aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9ae:	48 01 c2             	add    %rax,%rdx
    c9b1:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c9b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9b9:	48 01 c8             	add    %rcx,%rax
    c9bc:	48 89 d6             	mov    %rdx,%rsi
    c9bf:	48 89 c7             	mov    %rax,%rdi
    c9c2:	e8 58 ff ff ff       	call   c91f <_ZNSt11char_traitsIcE2ltERKcS2_>
    c9c7:	84 c0                	test   %al,%al
    c9c9:	74 07                	je     c9d2 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x90>
		return 1;
    c9cb:	b8 01 00 00 00       	mov    $0x1,%eax
    c9d0:	eb 2e                	jmp    ca00 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	    for (size_t __i = 0; __i < __n; ++__i)
    c9d2:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
    c9d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    c9db:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
    c9df:	72 99                	jb     c97a <_ZNSt11char_traitsIcE7compareEPKcS2_m+0x38>
	    return 0;
    c9e1:	b8 00 00 00 00       	mov    $0x0,%eax
    c9e6:	eb 18                	jmp    ca00 <_ZNSt11char_traitsIcE7compareEPKcS2_m+0xbe>
	return __builtin_memcmp(__s1, __s2, __n);
    c9e8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    c9ec:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
    c9f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    c9f4:	48 89 ce             	mov    %rcx,%rsi
    c9f7:	48 89 c7             	mov    %rax,%rdi
    c9fa:	e8 51 77 ff ff       	call   4150 <memcmp@plt>
    c9ff:	90                   	nop
      }
    ca00:	c9                   	leave
    ca01:	c3                   	ret

000000000000ca02 <_ZNSt17basic_string_viewIcSt11char_traitsIcEEC1EPKc>:
      { }

      constexpr basic_string_view(const basic_string_view&) noexcept = default;

      __attribute__((__nonnull__)) constexpr
      basic_string_view(const _CharT* __str) noexcept
    ca02:	55                   	push   %rbp
    ca03:	48 89 e5             	mov    %rsp,%rbp
    ca06:	48 83 ec 10          	sub    $0x10,%rsp
    ca0a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ca0e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_len{traits_type::length(__str)},
    ca12:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ca16:	48 89 c7             	mov    %rax,%rdi
    ca19:	e8 4b 80 ff ff       	call   4a69 <_ZNSt11char_traitsIcE6lengthEPKc>
    ca1e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    ca22:	48 89 02             	mov    %rax,(%rdx)
	_M_str{__str}
    ca25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca29:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    ca2d:	48 89 50 08          	mov    %rdx,0x8(%rax)
      { }
    ca31:	90                   	nop
    ca32:	c9                   	leave
    ca33:	c3                   	ret

000000000000ca34 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
    ca34:	55                   	push   %rbp
    ca35:	48 89 e5             	mov    %rsp,%rbp
    ca38:	48 83 ec 20          	sub    $0x20,%rsp
    ca3c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
    ca40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    ca44:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca48:	48 89 d6             	mov    %rdx,%rsi
    ca4b:	48 89 c7             	mov    %rax,%rdi
    ca4e:	e8 27 01 00 00       	call   cb7a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ca53:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca57:	c9                   	leave
    ca58:	c3                   	ret
    ca59:	90                   	nop

000000000000ca5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
    ca5a:	55                   	push   %rbp
    ca5b:	48 89 e5             	mov    %rsp,%rbp
    ca5e:	48 83 ec 20          	sub    $0x20,%rsp
    ca62:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
    ca66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca6a:	48 8d 50 08          	lea    0x8(%rax),%rdx
    ca6e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
    ca72:	48 89 d6             	mov    %rdx,%rsi
    ca75:	48 89 c7             	mov    %rax,%rdi
    ca78:	e8 fd 00 00 00       	call   cb7a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
    ca7d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ca81:	c9                   	leave
    ca82:	c3                   	ret

000000000000ca83 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ca83:	55                   	push   %rbp
    ca84:	48 89 e5             	mov    %rsp,%rbp
    ca87:	53                   	push   %rbx
    ca88:	48 83 ec 18          	sub    $0x18,%rsp
    ca8c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    ca90:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
    ca94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    ca98:	48 89 c7             	mov    %rax,%rdi
    ca9b:	e8 f8 00 00 00       	call   cb98 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    caa0:	48 8b 18             	mov    (%rax),%rbx
    caa3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    caa7:	48 89 c7             	mov    %rax,%rdi
    caaa:	e8 e9 00 00 00       	call   cb98 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
    caaf:	48 8b 00             	mov    (%rax),%rax
    cab2:	48 39 c3             	cmp    %rax,%rbx
    cab5:	0f 95 c0             	setne  %al
    cab8:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cabc:	c9                   	leave
    cabd:	c3                   	ret

000000000000cabe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
    cabe:	55                   	push   %rbp
    cabf:	48 89 e5             	mov    %rsp,%rbp
    cac2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
    cac6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caca:	48 8b 00             	mov    (%rax),%rax
    cacd:	48 8d 90 08 02 00 00 	lea    0x208(%rax),%rdx
    cad4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cad8:	48 89 10             	mov    %rdx,(%rax)
	return *this;
    cadb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cadf:	5d                   	pop    %rbp
    cae0:	c3                   	ret
    cae1:	90                   	nop

000000000000cae2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
    cae2:	55                   	push   %rbp
    cae3:	48 89 e5             	mov    %rsp,%rbp
    cae6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
    caea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    caee:	48 8b 00             	mov    (%rax),%rax
    caf1:	5d                   	pop    %rbp
    caf2:	c3                   	ret
    caf3:	90                   	nop

000000000000caf4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>:
      { return const_reverse_iterator(this->begin()); }

      // [string.view.capacity], capacity

      constexpr size_type
      size() const noexcept
    caf4:	55                   	push   %rbp
    caf5:	48 89 e5             	mov    %rsp,%rbp
    caf8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_len; }
    cafc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb00:	48 8b 00             	mov    (%rax),%rax
    cb03:	5d                   	pop    %rbp
    cb04:	c3                   	ret

000000000000cb05 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE>:
               basic_string_view<_CharT, _Traits> __y) noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }

  template<typename _CharT, typename _Traits>
    constexpr bool
    operator==(basic_string_view<_CharT, _Traits> __x,
    cb05:	55                   	push   %rbp
    cb06:	48 89 e5             	mov    %rsp,%rbp
    cb09:	53                   	push   %rbx
    cb0a:	48 83 ec 28          	sub    $0x28,%rsp
    cb0e:	48 89 f0             	mov    %rsi,%rax
    cb11:	49 89 f8             	mov    %rdi,%r8
    cb14:	4c 89 c6             	mov    %r8,%rsi
    cb17:	4c 89 cf             	mov    %r9,%rdi
    cb1a:	48 89 c7             	mov    %rax,%rdi
    cb1d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    cb21:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cb25:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
    cb29:	48 89 4d d8          	mov    %rcx,-0x28(%rbp)
               __type_identity_t<basic_string_view<_CharT, _Traits>> __y)
    noexcept
    { return __x.size() == __y.size() && __x.compare(__y) == 0; }
    cb2d:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cb31:	48 89 c7             	mov    %rax,%rdi
    cb34:	e8 bb ff ff ff       	call   caf4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cb39:	48 89 c3             	mov    %rax,%rbx
    cb3c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    cb40:	48 89 c7             	mov    %rax,%rdi
    cb43:	e8 ac ff ff ff       	call   caf4 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE4sizeEv>
    cb48:	48 39 c3             	cmp    %rax,%rbx
    cb4b:	75 22                	jne    cb6f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cb4d:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    cb51:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    cb55:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    cb59:	48 89 ce             	mov    %rcx,%rsi
    cb5c:	48 89 c7             	mov    %rax,%rdi
    cb5f:	e8 42 00 00 00       	call   cba6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>
    cb64:	85 c0                	test   %eax,%eax
    cb66:	75 07                	jne    cb6f <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6a>
    cb68:	b8 01 00 00 00       	mov    $0x1,%eax
    cb6d:	eb 05                	jmp    cb74 <_ZSteqIcSt11char_traitsIcEEbSt17basic_string_viewIT_T0_ENSt15__type_identityIS5_E4typeE+0x6f>
    cb6f:	b8 00 00 00 00       	mov    $0x0,%eax
    cb74:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cb78:	c9                   	leave
    cb79:	c3                   	ret

000000000000cb7a <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
    cb7a:	55                   	push   %rbp
    cb7b:	48 89 e5             	mov    %rsp,%rbp
    cb7e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    cb82:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
    cb86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    cb8a:	48 8b 10             	mov    (%rax),%rdx
    cb8d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cb91:	48 89 10             	mov    %rdx,(%rax)
    cb94:	90                   	nop
    cb95:	5d                   	pop    %rbp
    cb96:	c3                   	ret
    cb97:	90                   	nop

000000000000cb98 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
    cb98:	55                   	push   %rbp
    cb99:	48 89 e5             	mov    %rsp,%rbp
    cb9c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
    cba0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cba4:	5d                   	pop    %rbp
    cba5:	c3                   	ret

000000000000cba6 <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_>:
      compare(basic_string_view __str) const noexcept
    cba6:	55                   	push   %rbp
    cba7:	48 89 e5             	mov    %rsp,%rbp
    cbaa:	48 83 ec 30          	sub    $0x30,%rsp
    cbae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cbb2:	48 89 d1             	mov    %rdx,%rcx
    cbb5:	48 89 f0             	mov    %rsi,%rax
    cbb8:	48 89 fa             	mov    %rdi,%rdx
    cbbb:	48 89 ca             	mov    %rcx,%rdx
    cbbe:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    cbc2:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	const size_type __rlen = std::min(this->_M_len, __str._M_len);
    cbc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbca:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
    cbce:	48 89 d6             	mov    %rdx,%rsi
    cbd1:	48 89 c7             	mov    %rax,%rdi
    cbd4:	e8 34 87 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
    cbd9:	48 8b 00             	mov    (%rax),%rax
    cbdc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	int __ret = traits_type::compare(this->_M_str, __str._M_str, __rlen);
    cbe0:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
    cbe4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cbe8:	48 8b 40 08          	mov    0x8(%rax),%rax
    cbec:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    cbf0:	48 89 ce             	mov    %rcx,%rsi
    cbf3:	48 89 c7             	mov    %rax,%rdi
    cbf6:	e8 47 fd ff ff       	call   c942 <_ZNSt11char_traitsIcE7compareEPKcS2_m>
    cbfb:	89 45 fc             	mov    %eax,-0x4(%rbp)
	if (__ret == 0)
    cbfe:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)
    cc02:	75 19                	jne    cc1d <_ZNKSt17basic_string_viewIcSt11char_traitsIcEE7compareES2_+0x77>
	  __ret = _S_compare(this->_M_len, __str._M_len);
    cc04:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    cc08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc0c:	48 8b 00             	mov    (%rax),%rax
    cc0f:	48 89 d6             	mov    %rdx,%rsi
    cc12:	48 89 c7             	mov    %rax,%rdi
    cc15:	e8 08 00 00 00       	call   cc22 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>
    cc1a:	89 45 fc             	mov    %eax,-0x4(%rbp)
	return __ret;
    cc1d:	8b 45 fc             	mov    -0x4(%rbp),%eax
      }
    cc20:	c9                   	leave
    cc21:	c3                   	ret

000000000000cc22 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm>:
      _S_compare(size_type __n1, size_type __n2) noexcept
    cc22:	55                   	push   %rbp
    cc23:	48 89 e5             	mov    %rsp,%rbp
    cc26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    cc2a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	const difference_type __diff = __n1 - __n2;
    cc2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cc32:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
    cc36:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	if (__diff > __limits::__max)
    cc3a:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cc3f:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cc43:	7c 07                	jl     cc4c <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x2a>
	  return __limits::__max;
    cc45:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    cc4a:	eb 1b                	jmp    cc67 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	if (__diff < __limits::__min)
    cc4c:	48 b8 ff ff ff 7f ff 	movabs $0xffffffff7fffffff,%rax
    cc53:	ff ff ff 
    cc56:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
    cc5a:	7f 07                	jg     cc63 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x41>
	  return __limits::__min;
    cc5c:	b8 00 00 00 80       	mov    $0x80000000,%eax
    cc61:	eb 04                	jmp    cc67 <_ZNSt17basic_string_viewIcSt11char_traitsIcEE10_S_compareEmm+0x45>
	return static_cast<int>(__diff);
    cc63:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
    cc67:	5d                   	pop    %rbp
    cc68:	c3                   	ret

000000000000cc69 <_Z41__static_initialization_and_destruction_0ii>:
  VkPipeline self = nullptr;
  VkPipelineLayout layout = nullptr;
  VkPipelineCache cache = nullptr;
  VkRenderPass renderPass = nullptr;
};
} /* namespace vkh */
    cc69:	55                   	push   %rbp
    cc6a:	48 89 e5             	mov    %rsp,%rbp
    cc6d:	48 83 ec 10          	sub    $0x10,%rsp
    cc71:	89 7d fc             	mov    %edi,-0x4(%rbp)
    cc74:	89 75 f8             	mov    %esi,-0x8(%rbp)
    cc77:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    cc7b:	75 3b                	jne    ccb8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc7d:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    cc84:	75 32                	jne    ccb8 <_Z41__static_initialization_and_destruction_0ii+0x4f>
    cc86:	48 8d 05 66 99 01 00 	lea    0x19966(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cc8d:	48 89 c7             	mov    %rax,%rdi
    cc90:	e8 4b 79 ff ff       	call   45e0 <_ZNSt8ios_base4InitC1Ev@plt>
    cc95:	48 8d 05 04 97 01 00 	lea    0x19704(%rip),%rax        # 263a0 <__dso_handle>
    cc9c:	48 89 c2             	mov    %rax,%rdx
    cc9f:	48 8d 05 4d 99 01 00 	lea    0x1994d(%rip),%rax        # 265f3 <_ZStL8__ioinit>
    cca6:	48 89 c6             	mov    %rax,%rsi
    cca9:	48 8b 05 18 93 01 00 	mov    0x19318(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    ccb0:	48 89 c7             	mov    %rax,%rdi
    ccb3:	e8 48 76 ff ff       	call   4300 <__cxa_atexit@plt>
    ccb8:	90                   	nop
    ccb9:	c9                   	leave
    ccba:	c3                   	ret

000000000000ccbb <_GLOBAL__sub_I_vkh.cpp>:
    ccbb:	55                   	push   %rbp
    ccbc:	48 89 e5             	mov    %rsp,%rbp
    ccbf:	be ff ff 00 00       	mov    $0xffff,%esi
    ccc4:	bf 01 00 00 00       	mov    $0x1,%edi
    ccc9:	e8 9b ff ff ff       	call   cc69 <_Z41__static_initialization_and_destruction_0ii>
    ccce:	5d                   	pop    %rbp
    cccf:	c3                   	ret

000000000000ccd0 <_ZN9VulkanApp12createWindowEv>:
#include "vulkan_app.hpp"

void VulkanApp::createWindow() {
    ccd0:	55                   	push   %rbp
    ccd1:	48 89 e5             	mov    %rsp,%rbp
    ccd4:	48 83 ec 10          	sub    $0x10,%rsp
    ccd8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  glfwInit();
    ccdc:	e8 8f 77 ff ff       	call   4470 <glfwInit@plt>
  window = vkh::createWindow(800, 600);
    cce1:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    cce7:	b9 00 00 00 00       	mov    $0x0,%ecx
    ccec:	48 8d 05 25 cc 00 00 	lea    0xcc25(%rip),%rax        # 19918 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    ccf3:	48 89 c2             	mov    %rax,%rdx
    ccf6:	be 58 02 00 00       	mov    $0x258,%esi
    ccfb:	bf 20 03 00 00       	mov    $0x320,%edi
    cd00:	e8 60 89 ff ff       	call   5665 <_ZN3vkh12createWindowEiiPKcP11GLFWmonitorP10GLFWwindow>
    cd05:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cd09:	48 89 02             	mov    %rax,(%rdx)
}
    cd0c:	90                   	nop
    cd0d:	c9                   	leave
    cd0e:	c3                   	ret
    cd0f:	90                   	nop

000000000000cd10 <_ZN9VulkanApp14createInstanceEv>:

void VulkanApp::createInstance() {
    cd10:	55                   	push   %rbp
    cd11:	48 89 e5             	mov    %rsp,%rbp
    cd14:	53                   	push   %rbx
    cd15:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp
    cd1c:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)
  VkApplicationInfo appInfo{};
    cd23:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cd27:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    cd2b:	0f 29 45 c0          	movaps %xmm0,-0x40(%rbp)
    cd2f:	0f 29 45 d0          	movaps %xmm0,-0x30(%rbp)
  appInfo.sType = VK_STRUCTURE_TYPE_APPLICATION_INFO;
    cd33:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%rbp)
  appInfo.pApplicationName = "Vulkan Application";
    cd3a:	48 8d 05 d7 cb 00 00 	lea    0xcbd7(%rip),%rax        # 19918 <_ZN6__pstl9execution2v1L5unseqE+0x1>
    cd41:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
  appInfo.applicationVersion = VK_MAKE_VERSION(1, 0, 0);
    cd45:	c7 45 c8 00 00 40 00 	movl   $0x400000,-0x38(%rbp)
  appInfo.pEngineName = "No Engine";
    cd4c:	48 8d 05 d8 cb 00 00 	lea    0xcbd8(%rip),%rax        # 1992b <_ZN6__pstl9execution2v1L5unseqE+0x14>
    cd53:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
  appInfo.engineVersion = VK_MAKE_VERSION(1, 0, 0);
    cd57:	c7 45 d8 00 00 40 00 	movl   $0x400000,-0x28(%rbp)
  appInfo.apiVersion = VK_API_VERSION_1_3;
    cd5e:	c7 45 dc 00 30 40 00 	movl   $0x403000,-0x24(%rbp)

  auto requiredExtensions = vkh::getRequiredInstanceExtensionNameList();
    cd65:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cd69:	48 89 c7             	mov    %rax,%rdi
    cd6c:	e8 17 a1 ff ff       	call   6e88 <_ZN3vkh36getRequiredInstanceExtensionNameListEv>
  for (auto &&extension : requiredExtensions) {
    cd71:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cd75:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    cd79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd7d:	48 89 c7             	mov    %rax,%rdi
    cd80:	e8 fb 36 00 00       	call   10480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    cd85:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
    cd8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cd90:	48 89 c7             	mov    %rax,%rdi
    cd93:	e8 0e 37 00 00       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    cd98:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
    cd9f:	eb 3c                	jmp    cddd <_ZN9VulkanApp14createInstanceEv+0xcd>
    cda1:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cda8:	48 89 c7             	mov    %rax,%rdi
    cdab:	e8 7a 37 00 00       	call   1052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    cdb0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    instanceExtensions.emplace_back(extension);
    cdb4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    cdbb:	48 8d 50 10          	lea    0x10(%rax),%rdx
    cdbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    cdc3:	48 89 c6             	mov    %rax,%rsi
    cdc6:	48 89 d7             	mov    %rdx,%rdi
    cdc9:	e8 6e 37 00 00       	call   1053c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>
  for (auto &&extension : requiredExtensions) {
    cdce:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cdd5:	48 89 c7             	mov    %rax,%rdi
    cdd8:	e8 2d 37 00 00       	call   1050a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    cddd:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
    cde4:	48 8d 85 18 ff ff ff 	lea    -0xe8(%rbp),%rax
    cdeb:	48 89 d6             	mov    %rdx,%rsi
    cdee:	48 89 c7             	mov    %rax,%rdi
    cdf1:	e8 d9 36 00 00       	call   104cf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    cdf6:	84 c0                	test   %al,%al
    cdf8:	75 a7                	jne    cda1 <_ZN9VulkanApp14createInstanceEv+0x91>
  }

  auto debugCreateInfo = VkDebugUtilsMessengerCreateInfoEXT{};
    cdfa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    cdfe:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    ce05:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    ce0c:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
  vkh::populateDebugMessengerCreateInfo(debugCreateInfo);
    ce10:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ce17:	48 89 c7             	mov    %rax,%rdi
    ce1a:	e8 ea f8 ff ff       	call   c709 <_ZN3vkh32populateDebugMessengerCreateInfoER34VkDebugUtilsMessengerCreateInfoEXT>

  VkInstanceCreateInfo instanceInfo;
  instanceInfo.sType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO;
    ce1f:	c7 85 20 ff ff ff 01 	movl   $0x1,-0xe0(%rbp)
    ce26:	00 00 00 
  instanceInfo.pNext = (VkDebugUtilsMessengerCreateInfoEXT *)&debugCreateInfo;
    ce29:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ce30:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
  instanceInfo.pApplicationInfo = &appInfo;
    ce37:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    ce3b:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
  instanceInfo.enabledLayerCount = static_cast<uint32_t>(instanceLayers.size());
    ce42:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce49:	48 83 c0 28          	add    $0x28,%rax
    ce4d:	48 89 c7             	mov    %rax,%rdi
    ce50:	e8 8b 37 00 00       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
    ce55:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%rbp)
  instanceInfo.ppEnabledLayerNames = instanceLayers.data();
    ce5b:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce62:	48 83 c0 28          	add    $0x28,%rax
    ce66:	48 89 c7             	mov    %rax,%rdi
    ce69:	e8 96 37 00 00       	call   10604 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    ce6e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
  instanceInfo.enabledExtensionCount =
      static_cast<uint32_t>(instanceExtensions.size());
    ce75:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce7c:	48 83 c0 10          	add    $0x10,%rax
    ce80:	48 89 c7             	mov    %rax,%rdi
    ce83:	e8 58 37 00 00       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  instanceInfo.enabledExtensionCount =
    ce88:	89 85 50 ff ff ff    	mov    %eax,-0xb0(%rbp)
  instanceInfo.ppEnabledExtensionNames = instanceExtensions.data();
    ce8e:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
    ce95:	48 83 c0 10          	add    $0x10,%rax
    ce99:	48 89 c7             	mov    %rax,%rdi
    ce9c:	e8 87 37 00 00       	call   10628 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    cea1:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)

  instance = vkh::createInstance(&instanceInfo);
    cea8:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    ceaf:	be 00 00 00 00       	mov    $0x0,%esi
    ceb4:	48 89 c7             	mov    %rax,%rdi
    ceb7:	e8 ff 87 ff ff       	call   56bb <_ZN3vkh14createInstanceEPK20VkInstanceCreateInfoPK21VkAllocationCallbacks>
    cebc:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx
    cec3:	48 89 42 08          	mov    %rax,0x8(%rdx)
}
    cec7:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cecb:	48 89 c7             	mov    %rax,%rdi
    cece:	e8 69 35 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ced3:	eb 1a                	jmp    ceef <_ZN9VulkanApp14createInstanceEv+0x1df>
    ced5:	48 89 c3             	mov    %rax,%rbx
    ced8:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    cedc:	48 89 c7             	mov    %rax,%rdi
    cedf:	e8 58 35 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    cee4:	48 89 d8             	mov    %rbx,%rax
    cee7:	48 89 c7             	mov    %rax,%rdi
    ceea:	e8 e1 77 ff ff       	call   46d0 <_Unwind_Resume@plt>
    ceef:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    cef3:	c9                   	leave
    cef4:	c3                   	ret
    cef5:	90                   	nop

000000000000cef6 <_ZN9VulkanApp20createDebugMessengerEv>:

void VulkanApp::createDebugMessenger() {
    cef6:	55                   	push   %rbp
    cef7:	48 89 e5             	mov    %rsp,%rbp
    cefa:	41 54                	push   %r12
    cefc:	53                   	push   %rbx
    cefd:	48 83 ec 10          	sub    $0x10,%rsp
    cf01:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  if (vkh::checkValidationLayerSupport() == false) {
    cf05:	e8 4b f6 ff ff       	call   c555 <_ZN3vkh27checkValidationLayerSupportEv>
    cf0a:	0f b6 c0             	movzbl %al,%eax
    cf0d:	85 c0                	test   %eax,%eax
    cf0f:	0f 94 c0             	sete   %al
    cf12:	84 c0                	test   %al,%al
    cf14:	74 3b                	je     cf51 <_ZN9VulkanApp20createDebugMessengerEv+0x5b>
    throw std::runtime_error("Validation layers are not supported.");
    cf16:	bf 10 00 00 00       	mov    $0x10,%edi
    cf1b:	e8 50 72 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    cf20:	48 89 c3             	mov    %rax,%rbx
    cf23:	48 8d 05 0e ca 00 00 	lea    0xca0e(%rip),%rax        # 19938 <_ZN6__pstl9execution2v1L5unseqE+0x21>
    cf2a:	48 89 c6             	mov    %rax,%rsi
    cf2d:	48 89 df             	mov    %rbx,%rdi
    cf30:	e8 cb 71 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    cf35:	48 8b 05 6c 90 01 00 	mov    0x1906c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    cf3c:	48 89 c2             	mov    %rax,%rdx
    cf3f:	48 8d 05 fa 8d 01 00 	lea    0x18dfa(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    cf46:	48 89 c6             	mov    %rax,%rsi
    cf49:	48 89 df             	mov    %rbx,%rdi
    cf4c:	e8 1f 77 ff ff       	call   4670 <__cxa_throw@plt>
  }
  debugMessenger = vkh::createDebugMessenger(instance);
    cf51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    cf55:	48 8b 40 08          	mov    0x8(%rax),%rax
    cf59:	48 89 c7             	mov    %rax,%rdi
    cf5c:	e8 5e f8 ff ff       	call   c7bf <_ZN3vkh20createDebugMessengerEP12VkInstance_T>
    cf61:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    cf65:	48 89 42 40          	mov    %rax,0x40(%rdx)
}
    cf69:	eb 16                	jmp    cf81 <_ZN9VulkanApp20createDebugMessengerEv+0x8b>
    throw std::runtime_error("Validation layers are not supported.");
    cf6b:	49 89 c4             	mov    %rax,%r12
    cf6e:	48 89 df             	mov    %rbx,%rdi
    cf71:	e8 ca 72 ff ff       	call   4240 <__cxa_free_exception@plt>
    cf76:	4c 89 e0             	mov    %r12,%rax
    cf79:	48 89 c7             	mov    %rax,%rdi
    cf7c:	e8 4f 77 ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    cf81:	48 83 c4 10          	add    $0x10,%rsp
    cf85:	5b                   	pop    %rbx
    cf86:	41 5c                	pop    %r12
    cf88:	5d                   	pop    %rbp
    cf89:	c3                   	ret

000000000000cf8a <_ZN9VulkanApp13createSurfaceEv>:

void VulkanApp::createSurface() {
    cf8a:	55                   	push   %rbp
    cf8b:	48 89 e5             	mov    %rsp,%rbp
    cf8e:	48 83 ec 10          	sub    $0x10,%rsp
    cf92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  surface = vkh::createSurface(instance, window);
    cf96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cf9a:	48 8b 08             	mov    (%rax),%rcx
    cf9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    cfa1:	48 8b 40 08          	mov    0x8(%rax),%rax
    cfa5:	ba 00 00 00 00       	mov    $0x0,%edx
    cfaa:	48 89 ce             	mov    %rcx,%rsi
    cfad:	48 89 c7             	mov    %rax,%rdi
    cfb0:	e8 31 88 ff ff       	call   57e6 <_ZN3vkh13createSurfaceEP12VkInstance_TP10GLFWwindowPK21VkAllocationCallbacks>
    cfb5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    cfb9:	48 89 42 48          	mov    %rax,0x48(%rdx)
}
    cfbd:	90                   	nop
    cfbe:	c9                   	leave
    cfbf:	c3                   	ret

000000000000cfc0 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceProperties(VkPhysicalDevice physDev) {
    cfc0:	55                   	push   %rbp
    cfc1:	48 89 e5             	mov    %rsp,%rbp
    cfc4:	48 81 ec 50 03 00 00 	sub    $0x350,%rsp
    cfcb:	48 89 bd b8 fc ff ff 	mov    %rdi,-0x348(%rbp)
    cfd2:	48 89 b5 b0 fc ff ff 	mov    %rsi,-0x350(%rbp)
  auto physDevPropList = vkh::getPhysicalDevicePropertyList(physDev);
    cfd9:	48 8d 85 c0 fc ff ff 	lea    -0x340(%rbp),%rax
    cfe0:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
    cfe7:	48 89 d6             	mov    %rdx,%rsi
    cfea:	48 89 c7             	mov    %rax,%rdi
    cfed:	e8 63 a1 ff ff       	call   7155 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  return physDevPropList.deviceType == VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU;
    cff2:	8b 85 d0 fc ff ff    	mov    -0x330(%rbp),%eax
    cff8:	83 f8 02             	cmp    $0x2,%eax
    cffb:	0f 94 c0             	sete   %al
}
    cffe:	c9                   	leave
    cfff:	c3                   	ret

000000000000d000 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>:

std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
VulkanApp::selectQueueFamily(VkPhysicalDevice physDev) {
    d000:	55                   	push   %rbp
    d001:	48 89 e5             	mov    %rsp,%rbp
    d004:	53                   	push   %rbx
    d005:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp
    d00c:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)
    d013:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)
    d01a:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
  auto graphicsFamilies = vkh::getGraphicsQueueFamilyPropertyList(physDev);
    d021:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d025:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d02c:	48 89 d6             	mov    %rdx,%rsi
    d02f:	48 89 c7             	mov    %rax,%rdi
    d032:	e8 47 a2 ff ff       	call   727e <_ZN3vkh34getGraphicsQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto computeFamilies = vkh::getComputeQueueFamilyPropertyList(physDev);
    d037:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d03b:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
    d042:	48 89 d6             	mov    %rdx,%rsi
    d045:	48 89 c7             	mov    %rax,%rdi
    d048:	e8 65 a3 ff ff       	call   73b2 <_ZN3vkh33getComputeQueueFamilyPropertyListEP18VkPhysicalDevice_T>
  auto presentFamilies =
      vkh::getPresentQueueFamilyPropertyList(physDev, surface);
    d04d:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
    d054:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d058:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d05f:	48 8b 8d 48 ff ff ff 	mov    -0xb8(%rbp),%rcx
    d066:	48 89 ce             	mov    %rcx,%rsi
    d069:	48 89 c7             	mov    %rax,%rdi
    d06c:	e8 7a a4 ff ff       	call   74eb <_ZN3vkh33getPresentQueueFamilyPropertyListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  /* Find a queue that is capable of handling graphics, computing, and
  supporting presentation to the surface */
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d071:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d078:	00 
    d079:	e9 c5 00 00 00       	jmp    d143 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x143>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d07e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d082:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d086:	48 89 d6             	mov    %rdx,%rsi
    d089:	48 89 c7             	mov    %rax,%rdi
    d08c:	e8 7f b4 ff ff       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d091:	48 89 c7             	mov    %rax,%rdi
    d094:	e8 e1 35 00 00       	call   1067a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d099:	84 c0                	test   %al,%al
    d09b:	74 48                	je     d0e5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d09d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0a1:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d0a5:	48 89 d6             	mov    %rdx,%rsi
    d0a8:	48 89 c7             	mov    %rax,%rdi
    d0ab:	e8 60 b4 ff ff       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d0b0:	48 89 c7             	mov    %rax,%rdi
    d0b3:	e8 c2 35 00 00       	call   1067a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    d0b8:	84 c0                	test   %al,%al
    d0ba:	74 29                	je     d0e5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
        presentFamilies[i].has_value()) {
    d0bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0c0:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d0c7:	48 89 d6             	mov    %rdx,%rsi
    d0ca:	48 89 c7             	mov    %rax,%rdi
    d0cd:	e8 3e b4 ff ff       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d0d2:	48 89 c7             	mov    %rax,%rdi
    d0d5:	e8 a0 35 00 00       	call   1067a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>
    if ((graphicsFamilies[i].has_value() && computeFamilies[i].has_value()) &&
    d0da:	84 c0                	test   %al,%al
    d0dc:	74 07                	je     d0e5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xe5>
    d0de:	b8 01 00 00 00       	mov    $0x1,%eax
    d0e3:	eb 05                	jmp    d0ea <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0xea>
    d0e5:	b8 00 00 00 00       	mov    $0x0,%eax
    d0ea:	84 c0                	test   %al,%al
    d0ec:	74 50                	je     d13e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x13e>
      return {{static_cast<uint32_t>(i), graphicsFamilies[i].value()}};
    d0ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d0f2:	89 45 e4             	mov    %eax,-0x1c(%rbp)
    d0f5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d0f9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d0fd:	48 89 d6             	mov    %rdx,%rsi
    d100:	48 89 c7             	mov    %rax,%rdi
    d103:	e8 08 b4 ff ff       	call   8510 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EEixEm>
    d108:	48 89 c7             	mov    %rax,%rdi
    d10b:	e8 84 35 00 00       	call   10694 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>
    d110:	48 89 c2             	mov    %rax,%rdx
    d113:	48 8d 4d e4          	lea    -0x1c(%rbp),%rcx
    d117:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    d11b:	48 89 ce             	mov    %rcx,%rsi
    d11e:	48 89 c7             	mov    %rax,%rdi
    d121:	e8 a0 35 00 00       	call   106c6 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>
    d126:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    d12a:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d131:	48 89 d6             	mov    %rdx,%rsi
    d134:	48 89 c7             	mov    %rax,%rdi
    d137:	e8 e0 35 00 00       	call   1071c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>
    d13c:	eb 2f                	jmp    d16d <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x16d>
  for (size_t i = 0; i < graphicsFamilies.size(); ++i) {
    d13e:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    d143:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d147:	48 89 c7             	mov    %rax,%rdi
    d14a:	e8 fd 34 00 00       	call   1064c <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>
    d14f:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
    d153:	0f 92 c0             	setb   %al
    d156:	84 c0                	test   %al,%al
    d158:	0f 85 20 ff ff ff    	jne    d07e <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x7e>
    }
  }
  return {};
    d15e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d165:	48 89 c7             	mov    %rax,%rdi
    d168:	e8 01 30 00 00       	call   1016e <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
}
    d16d:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d174:	48 89 c7             	mov    %rax,%rdi
    d177:	e8 94 b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d17c:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d180:	48 89 c7             	mov    %rax,%rdi
    d183:	e8 88 b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d188:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d18c:	48 89 c7             	mov    %rax,%rdi
    d18f:	e8 7c b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d194:	eb 3f                	jmp    d1d5 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1d5>
    d196:	48 89 c3             	mov    %rax,%rbx
    d199:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d1a0:	48 89 c7             	mov    %rax,%rdi
    d1a3:	e8 68 b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d1a8:	eb 03                	jmp    d1ad <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1ad>
    d1aa:	48 89 c3             	mov    %rax,%rbx
    d1ad:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d1b1:	48 89 c7             	mov    %rax,%rdi
    d1b4:	e8 57 b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d1b9:	eb 03                	jmp    d1be <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T+0x1be>
    d1bb:	48 89 c3             	mov    %rax,%rbx
    d1be:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d1c2:	48 89 c7             	mov    %rax,%rdi
    d1c5:	e8 46 b2 ff ff       	call   8410 <_ZNSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EED1Ev>
    d1ca:	48 89 d8             	mov    %rbx,%rax
    d1cd:	48 89 c7             	mov    %rax,%rdi
    d1d0:	e8 fb 74 ff ff       	call   46d0 <_Unwind_Resume@plt>
    d1d5:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
    d1dc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d1e0:	c9                   	leave
    d1e1:	c3                   	ret

000000000000d1e2 <_ZN9VulkanApp12createDeviceEv>:

void VulkanApp::createDevice() {
    d1e2:	55                   	push   %rbp
    d1e3:	48 89 e5             	mov    %rsp,%rbp
    d1e6:	41 54                	push   %r12
    d1e8:	53                   	push   %rbx
    d1e9:	48 81 ec 00 02 00 00 	sub    $0x200,%rsp
    d1f0:	48 89 bd f8 fd ff ff 	mov    %rdi,-0x208(%rbp)
  /* Select a suitable physical device and one of its queue families */
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    d1f7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d1fe:	48 8b 50 08          	mov    0x8(%rax),%rdx
    d202:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d206:	48 89 d6             	mov    %rdx,%rsi
    d209:	48 89 c7             	mov    %rax,%rdi
    d20c:	e8 d5 9d ff ff       	call   6fe6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  VkPhysicalDevice selectedPhysDev = VK_NULL_HANDLE;
    d211:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    d218:	00 
  std::optional<std::pair<uint32_t, VkQueueFamilyProperties>>
      selectedQueueFamily;
    d219:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d21d:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    d221:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d225:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d229:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d22d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d231:	48 89 c7             	mov    %rax,%rdi
    d234:	e8 17 35 00 00       	call   10750 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    d239:	48 89 85 28 fe ff ff 	mov    %rax,-0x1d8(%rbp)
    d240:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d244:	48 89 c7             	mov    %rax,%rdi
    d247:	e8 2a 35 00 00       	call   10776 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    d24c:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    d253:	e9 dd 00 00 00       	jmp    d335 <_ZN9VulkanApp12createDeviceEv+0x153>
    d258:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d25f:	48 89 c7             	mov    %rax,%rdi
    d262:	e8 93 35 00 00       	call   107fa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    d267:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    graphics, computing, and presentation commands */
    /* When the application creates a swapchain, the selected physical device
    must support VK_KHR_swapchain */
    /* Also, the selected physical device must be compatible with the swapchain
     that will be created. */
    if (checkDeviceProperties(physDev) &&
    d26b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d26f:	48 8b 10             	mov    (%rax),%rdx
    d272:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d279:	48 89 d6             	mov    %rdx,%rsi
    d27c:	48 89 c7             	mov    %rax,%rdi
    d27f:	e8 3c fd ff ff       	call   cfc0 <_ZN9VulkanApp21checkDevicePropertiesEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d284:	84 c0                	test   %al,%al
    d286:	74 41                	je     d2c9 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d288:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d28c:	48 8b 10             	mov    (%rax),%rdx
    d28f:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d296:	48 89 d6             	mov    %rdx,%rsi
    d299:	48 89 c7             	mov    %rax,%rdi
    d29c:	e8 f9 02 00 00       	call   d59a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>
    if (checkDeviceProperties(physDev) &&
    d2a1:	84 c0                	test   %al,%al
    d2a3:	74 24                	je     d2c9 <_ZN9VulkanApp12createDeviceEv+0xe7>
        checkDeviceSwapchainSupport(physDev)) {
    d2a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d2a9:	48 8b 10             	mov    (%rax),%rdx
    d2ac:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d2b3:	48 89 d6             	mov    %rdx,%rsi
    d2b6:	48 89 c7             	mov    %rax,%rdi
    d2b9:	e8 16 06 00 00       	call   d8d4 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>
        checkDeviceExtensionSupport(physDev) &&
    d2be:	84 c0                	test   %al,%al
    d2c0:	74 07                	je     d2c9 <_ZN9VulkanApp12createDeviceEv+0xe7>
    d2c2:	b8 01 00 00 00       	mov    $0x1,%eax
    d2c7:	eb 05                	jmp    d2ce <_ZN9VulkanApp12createDeviceEv+0xec>
    d2c9:	b8 00 00 00 00       	mov    $0x0,%eax
    if (checkDeviceProperties(physDev) &&
    d2ce:	84 c0                	test   %al,%al
    d2d0:	74 54                	je     d326 <_ZN9VulkanApp12createDeviceEv+0x144>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d2d2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d2d6:	48 8b 10             	mov    (%rax),%rdx
    d2d9:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d2e0:	48 8b 8d f8 fd ff ff 	mov    -0x208(%rbp),%rcx
    d2e7:	48 89 ce             	mov    %rcx,%rsi
    d2ea:	48 89 c7             	mov    %rax,%rdi
    d2ed:	e8 0e fd ff ff       	call   d000 <_ZN9VulkanApp17selectQueueFamilyEP18VkPhysicalDevice_T>
          returnedQueueFamily.has_value()) {
    d2f2:	48 8d 85 00 fe ff ff 	lea    -0x200(%rbp),%rax
    d2f9:	48 89 c7             	mov    %rax,%rdi
    d2fc:	e8 0b 35 00 00       	call   1080c <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>
      if (auto returnedQueueFamily = selectQueueFamily(physDev);
    d301:	84 c0                	test   %al,%al
    d303:	74 21                	je     d326 <_ZN9VulkanApp12createDeviceEv+0x144>
        selectedQueueFamily = returnedQueueFamily;
    d305:	48 8d 95 00 fe ff ff 	lea    -0x200(%rbp),%rdx
    d30c:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d310:	48 89 d6             	mov    %rdx,%rsi
    d313:	48 89 c7             	mov    %rax,%rdi
    d316:	e8 a5 2e 00 00       	call   101c0 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>
        selectedPhysDev = physDev;
    d31b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    d31f:	48 8b 00             	mov    (%rax),%rax
    d322:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  for (const auto &physDev : physicalDeviceList) {
    d326:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d32d:	48 89 c7             	mov    %rax,%rdi
    d330:	e8 a5 34 00 00       	call   107da <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    d335:	48 8d 95 20 fe ff ff 	lea    -0x1e0(%rbp),%rdx
    d33c:	48 8d 85 28 fe ff ff 	lea    -0x1d8(%rbp),%rax
    d343:	48 89 d6             	mov    %rdx,%rsi
    d346:	48 89 c7             	mov    %rax,%rdi
    d349:	e8 51 34 00 00       	call   1079f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d34e:	84 c0                	test   %al,%al
    d350:	0f 85 02 ff ff ff    	jne    d258 <_ZN9VulkanApp12createDeviceEv+0x76>
      }
    }
  }
  if (selectedPhysDev == VK_NULL_HANDLE) {
    d356:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
    d35b:	75 3b                	jne    d398 <_ZN9VulkanApp12createDeviceEv+0x1b6>
    throw std::runtime_error("Failed to select a physical device.");
    d35d:	bf 10 00 00 00       	mov    $0x10,%edi
    d362:	e8 09 6e ff ff       	call   4170 <__cxa_allocate_exception@plt>
    d367:	48 89 c3             	mov    %rax,%rbx
    d36a:	48 8d 05 ef c5 00 00 	lea    0xc5ef(%rip),%rax        # 19960 <_ZN6__pstl9execution2v1L5unseqE+0x49>
    d371:	48 89 c6             	mov    %rax,%rsi
    d374:	48 89 df             	mov    %rbx,%rdi
    d377:	e8 84 6d ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    d37c:	48 8b 05 25 8c 01 00 	mov    0x18c25(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    d383:	48 89 c2             	mov    %rax,%rdx
    d386:	48 8d 05 b3 89 01 00 	lea    0x189b3(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    d38d:	48 89 c6             	mov    %rax,%rsi
    d390:	48 89 df             	mov    %rbx,%rdi
    d393:	e8 d8 72 ff ff       	call   4670 <__cxa_throw@plt>
  }

  /* Set up the selected queue family's creation info */
  uint32_t selectedIndex = selectedQueueFamily.value().first;
    d398:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    d39c:	48 89 c7             	mov    %rax,%rdi
    d39f:	e8 46 2e 00 00       	call   101ea <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>
    d3a4:	8b 00                	mov    (%rax),%eax
    d3a6:	89 45 dc             	mov    %eax,-0x24(%rbp)
  const float queuePriority = 1.0f;
    d3a9:	f3 0f 10 05 c7 c9 00 	movss  0xc9c7(%rip),%xmm0        # 19d78 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    d3b0:	00 
    d3b1:	f3 0f 11 45 8c       	movss  %xmm0,-0x74(%rbp)

  VkDeviceQueueCreateInfo queueInfo{};
    d3b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d3ba:	0f 29 85 60 ff ff ff 	movaps %xmm0,-0xa0(%rbp)
    d3c1:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    d3c8:	66 0f d6 45 80       	movq   %xmm0,-0x80(%rbp)
  queueInfo.sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;
    d3cd:	c7 85 60 ff ff ff 02 	movl   $0x2,-0xa0(%rbp)
    d3d4:	00 00 00 
  queueInfo.pNext = nullptr;
    d3d7:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    d3de:	00 00 00 00 
  queueInfo.queueFamilyIndex = selectedIndex;
    d3e2:	8b 45 dc             	mov    -0x24(%rbp),%eax
    d3e5:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%rbp)
  queueInfo.queueCount = 1;
    d3eb:	c7 85 78 ff ff ff 01 	movl   $0x1,-0x88(%rbp)
    d3f2:	00 00 00 
  queueInfo.pQueuePriorities = &queuePriority;
    d3f5:	48 8d 45 8c          	lea    -0x74(%rbp),%rax
    d3f9:	48 89 45 80          	mov    %rax,-0x80(%rbp)

  /* Create the logical device */
  VkPhysicalDeviceFeatures deviceFeatures{};
    d3fd:	48 8d 95 80 fe ff ff 	lea    -0x180(%rbp),%rdx
    d404:	b8 00 00 00 00       	mov    $0x0,%eax
    d409:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    d40e:	48 89 d7             	mov    %rdx,%rdi
    d411:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    d414:	48 89 fa             	mov    %rdi,%rdx
    d417:	89 02                	mov    %eax,(%rdx)
    d419:	48 83 c2 04          	add    $0x4,%rdx

  VkDeviceCreateInfo deviceCreateInfo{};
    d41d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    d421:	0f 29 85 30 fe ff ff 	movaps %xmm0,-0x1d0(%rbp)
    d428:	0f 29 85 40 fe ff ff 	movaps %xmm0,-0x1c0(%rbp)
    d42f:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    d436:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    d43d:	66 0f d6 85 70 fe ff 	movq   %xmm0,-0x190(%rbp)
    d444:	ff 
  deviceCreateInfo.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;
    d445:	c7 85 30 fe ff ff 03 	movl   $0x3,-0x1d0(%rbp)
    d44c:	00 00 00 
  deviceCreateInfo.pNext = nullptr;
    d44f:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
    d456:	00 00 00 00 
  deviceCreateInfo.queueCreateInfoCount = 1;
    d45a:	c7 85 44 fe ff ff 01 	movl   $0x1,-0x1bc(%rbp)
    d461:	00 00 00 
  deviceCreateInfo.pQueueCreateInfos = &queueInfo;
    d464:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d46b:	48 89 85 48 fe ff ff 	mov    %rax,-0x1b8(%rbp)
  deviceCreateInfo.enabledExtensionCount =
      static_cast<uint32_t>(deviceExtensions.size());
    d472:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d479:	48 05 88 00 00 00    	add    $0x88,%rax
    d47f:	48 89 c7             	mov    %rax,%rdi
    d482:	e8 59 31 00 00       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledExtensionCount =
    d487:	89 85 60 fe ff ff    	mov    %eax,-0x1a0(%rbp)
  deviceCreateInfo.ppEnabledExtensionNames = deviceExtensions.data();
    d48d:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d494:	48 05 88 00 00 00    	add    $0x88,%rax
    d49a:	48 89 c7             	mov    %rax,%rdi
    d49d:	e8 86 31 00 00       	call   10628 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>
    d4a2:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  deviceCreateInfo.pEnabledFeatures = &deviceFeatures;
    d4a9:	48 8d 85 80 fe ff ff 	lea    -0x180(%rbp),%rax
    d4b0:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  deviceCreateInfo.enabledLayerCount =
      static_cast<uint32_t>(instanceLayers.size());
    d4b7:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4be:	48 83 c0 28          	add    $0x28,%rax
    d4c2:	48 89 c7             	mov    %rax,%rdi
    d4c5:	e8 16 31 00 00       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
  deviceCreateInfo.enabledLayerCount =
    d4ca:	89 85 50 fe ff ff    	mov    %eax,-0x1b0(%rbp)
  deviceCreateInfo.ppEnabledLayerNames = instanceLayers.data();
    d4d0:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d4d7:	48 83 c0 28          	add    $0x28,%rax
    d4db:	48 89 c7             	mov    %rax,%rdi
    d4de:	e8 21 31 00 00       	call   10604 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>
    d4e3:	48 89 85 58 fe ff ff 	mov    %rax,-0x1a8(%rbp)

  device = vkh::createDevice(selectedPhysDev, &deviceCreateInfo);
    d4ea:	48 8d 8d 30 fe ff ff 	lea    -0x1d0(%rbp),%rcx
    d4f1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d4f5:	ba 00 00 00 00       	mov    $0x0,%edx
    d4fa:	48 89 ce             	mov    %rcx,%rsi
    d4fd:	48 89 c7             	mov    %rax,%rdi
    d500:	e8 49 82 ff ff       	call   574e <_ZN3vkh12createDeviceEP18VkPhysicalDevice_TPK18VkDeviceCreateInfoPK21VkAllocationCallbacks>
    d505:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
    d50c:	48 89 42 50          	mov    %rax,0x50(%rdx)

  /* Get a queue handle */
  vkGetDeviceQueue(device, selectedIndex, 0, &queue);
    d510:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d517:	48 8d 50 60          	lea    0x60(%rax),%rdx
    d51b:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d522:	48 8b 40 50          	mov    0x50(%rax),%rax
    d526:	8b 75 dc             	mov    -0x24(%rbp),%esi
    d529:	48 89 d1             	mov    %rdx,%rcx
    d52c:	ba 00 00 00 00       	mov    $0x0,%edx
    d531:	48 89 c7             	mov    %rax,%rdi
    d534:	e8 07 70 ff ff       	call   4540 <vkGetDeviceQueue@plt>

  /* Store the selected device for later uses */
  physicalDevice = selectedPhysDev;
    d539:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d540:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    d544:	48 89 50 58          	mov    %rdx,0x58(%rax)

  /* Store the index of the selected queue family */
  queueFamilyIndex = selectedIndex;
    d548:	48 8b 85 f8 fd ff ff 	mov    -0x208(%rbp),%rax
    d54f:	8b 55 dc             	mov    -0x24(%rbp),%edx
    d552:	89 50 68             	mov    %edx,0x68(%rax)
}
    d555:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d559:	48 89 c7             	mov    %rax,%rdi
    d55c:	e8 af ab ff ff       	call   8110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d561:	eb 2a                	jmp    d58d <_ZN9VulkanApp12createDeviceEv+0x3ab>
    throw std::runtime_error("Failed to select a physical device.");
    d563:	49 89 c4             	mov    %rax,%r12
    d566:	48 89 df             	mov    %rbx,%rdi
    d569:	e8 d2 6c ff ff       	call   4240 <__cxa_free_exception@plt>
    d56e:	4c 89 e3             	mov    %r12,%rbx
    d571:	eb 03                	jmp    d576 <_ZN9VulkanApp12createDeviceEv+0x394>
}
    d573:	48 89 c3             	mov    %rax,%rbx
    d576:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    d57a:	48 89 c7             	mov    %rax,%rdi
    d57d:	e8 8e ab ff ff       	call   8110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    d582:	48 89 d8             	mov    %rbx,%rax
    d585:	48 89 c7             	mov    %rax,%rdi
    d588:	e8 43 71 ff ff       	call   46d0 <_Unwind_Resume@plt>
    d58d:	48 81 c4 00 02 00 00 	add    $0x200,%rsp
    d594:	5b                   	pop    %rbx
    d595:	41 5c                	pop    %r12
    d597:	5d                   	pop    %rbp
    d598:	c3                   	ret
    d599:	90                   	nop

000000000000d59a <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceExtensionSupport(VkPhysicalDevice physDev) {
    d59a:	55                   	push   %rbp
    d59b:	48 89 e5             	mov    %rsp,%rbp
    d59e:	53                   	push   %rbx
    d59f:	48 81 ec 38 01 00 00 	sub    $0x138,%rsp
    d5a6:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
    d5ad:	48 89 b5 c0 fe ff ff 	mov    %rsi,-0x140(%rbp)
  auto availableExtensionsList = vkh::getAvailableDeviceExtensionList(physDev);
    d5b4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d5bb:	48 8b 8d c0 fe ff ff 	mov    -0x140(%rbp),%rcx
    d5c2:	ba 00 00 00 00       	mov    $0x0,%edx
    d5c7:	48 89 ce             	mov    %rcx,%rsi
    d5ca:	48 89 c7             	mov    %rax,%rdi
    d5cd:	e8 3f 97 ff ff       	call   6d11 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
  std::map<std::string, uint32_t> helper;
    d5d2:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d5d9:	48 89 c7             	mov    %rax,%rdi
    d5dc:	e8 85 2c 00 00       	call   10266 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>
  for (const auto &availableExtension : availableExtensionsList) {
    d5e1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d5e8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    d5ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d5f0:	48 89 c7             	mov    %rax,%rdi
    d5f3:	e8 2a 33 00 00       	call   10922 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    d5f8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    d5ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    d603:	48 89 c7             	mov    %rax,%rdi
    d606:	e8 3d 33 00 00       	call   10948 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    d60b:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
    d612:	e9 8c 00 00 00       	jmp    d6a3 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x109>
    d617:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d61e:	48 89 c7             	mov    %rax,%rdi
    d621:	e8 aa 33 00 00       	call   109d0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    d626:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    helper[availableExtension.extensionName]++;
    d62a:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d631:	48 89 c7             	mov    %rax,%rdi
    d634:	e8 a7 70 ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    d639:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
    d63d:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    d644:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d64b:	48 89 ce             	mov    %rcx,%rsi
    d64e:	48 89 c7             	mov    %rax,%rdi
    d651:	e8 ca 74 ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d656:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    d65d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d664:	48 89 d6             	mov    %rdx,%rsi
    d667:	48 89 c7             	mov    %rax,%rdi
    d66a:	e8 73 33 00 00       	call   109e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d66f:	8b 10                	mov    (%rax),%edx
    d671:	83 c2 01             	add    $0x1,%edx
    d674:	89 10                	mov    %edx,(%rax)
    d676:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d67d:	48 89 c7             	mov    %rax,%rdi
    d680:	e8 5b 6b ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d685:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d68c:	48 89 c7             	mov    %rax,%rdi
    d68f:	e8 8c 6d ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  for (const auto &availableExtension : availableExtensionsList) {
    d694:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d69b:	48 89 c7             	mov    %rax,%rdi
    d69e:	e8 09 33 00 00       	call   109ac <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    d6a3:	48 8d 95 e0 fe ff ff 	lea    -0x120(%rbp),%rdx
    d6aa:	48 8d 85 e8 fe ff ff 	lea    -0x118(%rbp),%rax
    d6b1:	48 89 d6             	mov    %rdx,%rsi
    d6b4:	48 89 c7             	mov    %rax,%rdi
    d6b7:	e8 b5 32 00 00       	call   10971 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    d6bc:	84 c0                	test   %al,%al
    d6be:	0f 85 53 ff ff ff    	jne    d617 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x7d>
    // std::cout << availableExtension.extensionName << '\n';
  }
  for (const auto &deviceExtension : deviceExtensions) {
    d6c4:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
    d6cb:	48 05 88 00 00 00    	add    $0x88,%rax
    d6d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    d6d5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6d9:	48 89 c7             	mov    %rax,%rdi
    d6dc:	e8 9f 2d 00 00       	call   10480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    d6e1:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
    d6e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    d6ec:	48 89 c7             	mov    %rax,%rdi
    d6ef:	e8 b2 2d 00 00       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    d6f4:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
    d6fb:	e9 ed 00 00 00       	jmp    d7ed <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x253>
    d700:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d707:	48 89 c7             	mov    %rax,%rdi
    d70a:	e8 1b 2e 00 00       	call   1052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    d70f:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    helper[deviceExtension]++;
    d713:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d717:	48 89 c7             	mov    %rax,%rdi
    d71a:	e8 c1 6f ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    d71f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d723:	48 8b 08             	mov    (%rax),%rcx
    d726:	48 8d 55 9f          	lea    -0x61(%rbp),%rdx
    d72a:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d731:	48 89 ce             	mov    %rcx,%rsi
    d734:	48 89 c7             	mov    %rax,%rdi
    d737:	e8 e4 73 ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d73c:	48 8d 95 70 ff ff ff 	lea    -0x90(%rbp),%rdx
    d743:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d74a:	48 89 d6             	mov    %rdx,%rsi
    d74d:	48 89 c7             	mov    %rax,%rdi
    d750:	e8 8d 32 00 00       	call   109e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d755:	8b 10                	mov    (%rax),%edx
    d757:	83 c2 01             	add    $0x1,%edx
    d75a:	89 10                	mov    %edx,(%rax)
    d75c:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d763:	48 89 c7             	mov    %rax,%rdi
    d766:	e8 75 6a ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d76b:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d76f:	48 89 c7             	mov    %rax,%rdi
    d772:	e8 a9 6c ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    if (helper[deviceExtension] < 2) {
    d777:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d77b:	48 89 c7             	mov    %rax,%rdi
    d77e:	e8 5d 6f ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    d783:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    d787:	48 8b 08             	mov    (%rax),%rcx
    d78a:	48 8d 55 cf          	lea    -0x31(%rbp),%rdx
    d78e:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d792:	48 89 ce             	mov    %rcx,%rsi
    d795:	48 89 c7             	mov    %rax,%rdi
    d798:	e8 83 73 ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    d79d:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx
    d7a1:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d7a8:	48 89 d6             	mov    %rdx,%rsi
    d7ab:	48 89 c7             	mov    %rax,%rdi
    d7ae:	e8 2f 32 00 00       	call   109e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
    d7b3:	8b 00                	mov    (%rax),%eax
    d7b5:	83 f8 01             	cmp    $0x1,%eax
    d7b8:	0f 96 c3             	setbe  %bl
    d7bb:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d7bf:	48 89 c7             	mov    %rax,%rdi
    d7c2:	e8 19 6a ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d7c7:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d7cb:	48 89 c7             	mov    %rax,%rdi
    d7ce:	e8 4d 6c ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d7d3:	84 db                	test   %bl,%bl
    d7d5:	74 07                	je     d7de <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x244>
      return false;
    d7d7:	bb 00 00 00 00       	mov    $0x0,%ebx
    d7dc:	eb 35                	jmp    d813 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x279>
  for (const auto &deviceExtension : deviceExtensions) {
    d7de:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7e5:	48 89 c7             	mov    %rax,%rdi
    d7e8:	e8 1d 2d 00 00       	call   1050a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    d7ed:	48 8d 95 d0 fe ff ff 	lea    -0x130(%rbp),%rdx
    d7f4:	48 8d 85 d8 fe ff ff 	lea    -0x128(%rbp),%rax
    d7fb:	48 89 d6             	mov    %rdx,%rsi
    d7fe:	48 89 c7             	mov    %rax,%rdi
    d801:	e8 c9 2c 00 00       	call   104cf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    d806:	84 c0                	test   %al,%al
    d808:	0f 85 f2 fe ff ff    	jne    d700 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x166>
    }
  }
  return true;
    d80e:	bb 01 00 00 00       	mov    $0x1,%ebx
}
    d813:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d81a:	48 89 c7             	mov    %rax,%rdi
    d81d:	e8 60 2a 00 00       	call   10282 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d822:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d829:	48 89 c7             	mov    %rax,%rdi
    d82c:	e8 55 a6 ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d831:	89 d8                	mov    %ebx,%eax
    d833:	e9 96 00 00 00       	jmp    d8ce <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x334>
    helper[availableExtension.extensionName]++;
    d838:	48 89 c3             	mov    %rax,%rbx
    d83b:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d842:	48 89 c7             	mov    %rax,%rdi
    d845:	e8 96 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d84a:	eb 03                	jmp    d84f <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2b5>
    d84c:	48 89 c3             	mov    %rax,%rbx
    d84f:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    d856:	48 89 c7             	mov    %rax,%rdi
    d859:	e8 c2 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d85e:	eb 45                	jmp    d8a5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    helper[deviceExtension]++;
    d860:	48 89 c3             	mov    %rax,%rbx
    d863:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
    d86a:	48 89 c7             	mov    %rax,%rdi
    d86d:	e8 6e 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d872:	eb 03                	jmp    d877 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2dd>
    d874:	48 89 c3             	mov    %rax,%rbx
    d877:	48 8d 45 9f          	lea    -0x61(%rbp),%rax
    d87b:	48 89 c7             	mov    %rax,%rdi
    d87e:	e8 9d 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    d883:	eb 20                	jmp    d8a5 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x30b>
    if (helper[deviceExtension] < 2) {
    d885:	48 89 c3             	mov    %rax,%rbx
    d888:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
    d88c:	48 89 c7             	mov    %rax,%rdi
    d88f:	e8 4c 69 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    d894:	eb 03                	jmp    d899 <_ZN9VulkanApp27checkDeviceExtensionSupportEP18VkPhysicalDevice_T+0x2ff>
    d896:	48 89 c3             	mov    %rax,%rbx
    d899:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    d89d:	48 89 c7             	mov    %rax,%rdi
    d8a0:	e8 7b 6b ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
}
    d8a5:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    d8ac:	48 89 c7             	mov    %rax,%rdi
    d8af:	e8 ce 29 00 00       	call   10282 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>
    d8b4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    d8bb:	48 89 c7             	mov    %rax,%rdi
    d8be:	e8 c3 a5 ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    d8c3:	48 89 d8             	mov    %rbx,%rax
    d8c6:	48 89 c7             	mov    %rax,%rdi
    d8c9:	e8 02 6e ff ff       	call   46d0 <_Unwind_Resume@plt>
    d8ce:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    d8d2:	c9                   	leave
    d8d3:	c3                   	ret

000000000000d8d4 <_ZN9VulkanApp27checkDeviceSwapchainSupportEP18VkPhysicalDevice_T>:

bool VulkanApp::checkDeviceSwapchainSupport(
    [[maybe_unused]] VkPhysicalDevice physDev) {
    d8d4:	55                   	push   %rbp
    d8d5:	48 89 e5             	mov    %rsp,%rbp
    d8d8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    d8dc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  return true;
    d8e0:	b8 01 00 00 00       	mov    $0x1,%eax
}
    d8e5:	5d                   	pop    %rbp
    d8e6:	c3                   	ret
    d8e7:	90                   	nop

000000000000d8e8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>:

VkSwapchainCreateInfoKHR VulkanApp::populateSwapchainCreateInfo() {
    d8e8:	55                   	push   %rbp
    d8e9:	48 89 e5             	mov    %rsp,%rbp
    d8ec:	41 54                	push   %r12
    d8ee:	53                   	push   %rbx
    d8ef:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
    d8f6:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)
    d8fd:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
  /* Vulkan 1.3.231 - A Specification, pg 2235 */

  auto surfaceCapabilities =
      vkh::getPhysicalDeviceSurfaceCapabilities(physicalDevice, surface);
    d904:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d90b:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d90f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d916:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d91a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    d91e:	48 89 ce             	mov    %rcx,%rsi
    d921:	48 89 c7             	mov    %rax,%rdi
    d924:	e8 32 9d ff ff       	call   765b <_ZN3vkh36getPhysicalDeviceSurfaceCapabilitiesEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfaceFormats =
      vkh::getPhysicalDeviceSurfaceFormatList(physicalDevice, surface);
    d929:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d930:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d934:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d93b:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d93f:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d946:	48 89 ce             	mov    %rcx,%rsi
    d949:	48 89 c7             	mov    %rax,%rdi
    d94c:	e8 b8 9d ff ff       	call   7709 <_ZN3vkh34getPhysicalDeviceSurfaceFormatListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>
  auto surfacePresentModes =
      vkh::getPhysicalDeviceSurfacePresentModeList(physicalDevice, surface);
    d951:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d958:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d95c:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d963:	48 8b 48 58          	mov    0x58(%rax),%rcx
    d967:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    d96e:	48 89 ce             	mov    %rcx,%rsi
    d971:	48 89 c7             	mov    %rax,%rdi
    d974:	e8 07 9f ff ff       	call   7880 <_ZN3vkh39getPhysicalDeviceSurfacePresentModeListEP18VkPhysicalDevice_TP14VkSurfaceKHR_T>

  VkSwapchainCreateInfoKHR swapchainCreateInfo{};
    d979:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d980:	48 89 c6             	mov    %rax,%rsi
    d983:	b8 00 00 00 00       	mov    $0x0,%eax
    d988:	ba 0d 00 00 00       	mov    $0xd,%edx
    d98d:	48 89 f7             	mov    %rsi,%rdi
    d990:	48 89 d1             	mov    %rdx,%rcx
    d993:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  swapchainCreateInfo.sType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR;
    d996:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d99d:	c7 00 e8 cd 9a 3b    	movl   $0x3b9acde8,(%rax)
  swapchainCreateInfo.pNext = nullptr;
    d9a3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9aa:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    d9b1:	00 
  pNext chain must include a VkImageFormatListCreateInfo structure with a
  viewFormatCount greater than zero and pViewFormats must have an element
  equal to imageFormat */
  // swapchainCreateInfo.flags = VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR;

  swapchainCreateInfo.surface = surface;
    d9b2:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    d9b9:	48 8b 50 48          	mov    0x48(%rax),%rdx
    d9bd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9c4:	48 89 50 18          	mov    %rdx,0x18(%rax)

  /* plus 1 to prevent waiting on the driver to complete internal operations
  before another image is accquired */
  uint32_t minImageCount = surfaceCapabilities.minImageCount + 1;
    d9c8:	8b 45 80             	mov    -0x80(%rbp),%eax
    d9cb:	83 c0 01             	add    $0x1,%eax
    d9ce:	89 45 ec             	mov    %eax,-0x14(%rbp)

  /* minImageCount <= surfaceCapabilities.maxImageCount, and
  surfaceCapabilities.maxImageCount might be less than
  surfaceCapabilities.minImageCount */
  if (surfaceCapabilities.maxImageCount > 0 &&
    d9d1:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d9d4:	85 c0                	test   %eax,%eax
    d9d6:	74 0e                	je     d9e6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
      minImageCount > surfaceCapabilities.maxImageCount) {
    d9d8:	8b 45 84             	mov    -0x7c(%rbp),%eax
  if (surfaceCapabilities.maxImageCount > 0 &&
    d9db:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    d9de:	73 06                	jae    d9e6 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0xfe>
    minImageCount = surfaceCapabilities.maxImageCount;
    d9e0:	8b 45 84             	mov    -0x7c(%rbp),%eax
    d9e3:	89 45 ec             	mov    %eax,-0x14(%rbp)
  }
  swapchainCreateInfo.minImageCount = minImageCount;
    d9e6:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    d9ed:	8b 55 ec             	mov    -0x14(%rbp),%edx
    d9f0:	89 50 20             	mov    %edx,0x20(%rax)

  /* imageFormat and imageColorSpace must match the surfaceFormats.format and
  surfaceFormats.colorSpace members, respectively */
  if (surfaceFormats.empty()) {
    d9f3:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    d9fa:	48 89 c7             	mov    %rax,%rdi
    d9fd:	e8 e4 30 00 00       	call   10ae6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>
    da02:	84 c0                	test   %al,%al
    da04:	74 3b                	je     da41 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x159>
    throw std::runtime_error("No surface format available.");
    da06:	bf 10 00 00 00       	mov    $0x10,%edi
    da0b:	e8 60 67 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    da10:	48 89 c3             	mov    %rax,%rbx
    da13:	48 8d 05 6a bf 00 00 	lea    0xbf6a(%rip),%rax        # 19984 <_ZN6__pstl9execution2v1L5unseqE+0x6d>
    da1a:	48 89 c6             	mov    %rax,%rsi
    da1d:	48 89 df             	mov    %rbx,%rdi
    da20:	e8 db 66 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
    da25:	48 8b 05 7c 85 01 00 	mov    0x1857c(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    da2c:	48 89 c2             	mov    %rax,%rdx
    da2f:	48 8d 05 0a 83 01 00 	lea    0x1830a(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    da36:	48 89 c6             	mov    %rax,%rsi
    da39:	48 89 df             	mov    %rbx,%rdi
    da3c:	e8 2f 6c ff ff       	call   4670 <__cxa_throw@plt>
  }
  swapchainCreateInfo.imageFormat = surfaceFormats[0].format;
    da41:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da48:	be 00 00 00 00       	mov    $0x0,%esi
    da4d:	48 89 c7             	mov    %rax,%rdi
    da50:	e8 d3 30 00 00       	call   10b28 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    da55:	8b 10                	mov    (%rax),%edx
    da57:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da5e:	89 50 24             	mov    %edx,0x24(%rax)
  swapchainCreateInfo.imageColorSpace = surfaceFormats[0].colorSpace;
    da61:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da68:	be 00 00 00 00       	mov    $0x0,%esi
    da6d:	48 89 c7             	mov    %rax,%rdi
    da70:	e8 b3 30 00 00       	call   10b28 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>
    da75:	8b 50 04             	mov    0x4(%rax),%edx
    da78:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    da7f:	89 50 28             	mov    %edx,0x28(%rax)
  for (const auto &format : surfaceFormats) {
    da82:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    da89:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    da8d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    da91:	48 89 c7             	mov    %rax,%rdi
    da94:	e8 af 30 00 00       	call   10b48 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
    da99:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)
    daa0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    daa4:	48 89 c7             	mov    %rax,%rdi
    daa7:	e8 c2 30 00 00       	call   10b6e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
    daac:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    dab3:	eb 5b                	jmp    db10 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x228>
    dab5:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    dabc:	48 89 c7             	mov    %rax,%rdi
    dabf:	e8 2e 31 00 00       	call   10bf2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dac4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dac8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dacc:	8b 00                	mov    (%rax),%eax
    dace:	83 f8 2b             	cmp    $0x2b,%eax
    dad1:	75 2e                	jne    db01 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
        format.colorSpace == VK_COLOR_SPACE_SRGB_NONLINEAR_KHR) {
    dad3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dad7:	8b 40 04             	mov    0x4(%rax),%eax
    if (format.format == VK_FORMAT_R8G8B8A8_SRGB &&
    dada:	85 c0                	test   %eax,%eax
    dadc:	75 23                	jne    db01 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x219>
      swapchainCreateInfo.imageFormat = format.format;
    dade:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    dae2:	8b 10                	mov    (%rax),%edx
    dae4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    daeb:	89 50 24             	mov    %edx,0x24(%rax)
      swapchainCreateInfo.imageColorSpace = format.colorSpace;
    daee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    daf2:	8b 50 04             	mov    0x4(%rax),%edx
    daf5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dafc:	89 50 28             	mov    %edx,0x28(%rax)
      break;
    daff:	eb 2c                	jmp    db2d <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x245>
  for (const auto &format : surfaceFormats) {
    db01:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    db08:	48 89 c7             	mov    %rax,%rdi
    db0b:	e8 c2 30 00 00       	call   10bd2 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>
    db10:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx
    db17:	48 8d 85 38 ff ff ff 	lea    -0xc8(%rbp),%rax
    db1e:	48 89 d6             	mov    %rdx,%rsi
    db21:	48 89 c7             	mov    %rax,%rdi
    db24:	e8 6e 30 00 00       	call   10b97 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    db29:	84 c0                	test   %al,%al
    db2b:	75 88                	jne    dab5 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x1cd>
    }
  }
  swapchain.format = swapchainCreateInfo.imageFormat;
    db2d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db34:	8b 50 24             	mov    0x24(%rax),%edx
    db37:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db3e:	89 50 78             	mov    %edx,0x78(%rax)

  /* imageExtent is the size (in pixels) of the swapchain
  image(s). The behavior is platform-dependent if the image
  extent does not match the surface’s currentExtent as returned
  by vkGetPhysicalDeviceSurfaceCapabilitiesKHR. */
  uint32_t imageExtentWidth = surfaceCapabilities.currentExtent.width;
    db41:	8b 45 88             	mov    -0x78(%rbp),%eax
    db44:	89 45 e8             	mov    %eax,-0x18(%rbp)
  uint32_t imageExtentHeight = surfaceCapabilities.currentExtent.height;
    db47:	8b 45 8c             	mov    -0x74(%rbp),%eax
    db4a:	89 45 e4             	mov    %eax,-0x1c(%rbp)

  /* {0, 0} <= minImageExtent <= imageExtent <= maxImageExtent */
  if (imageExtentWidth > surfaceCapabilities.maxImageExtent.width) {
    db4d:	8b 45 98             	mov    -0x68(%rbp),%eax
    db50:	3b 45 e8             	cmp    -0x18(%rbp),%eax
    db53:	73 06                	jae    db5b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x273>
    imageExtentWidth = surfaceCapabilities.maxImageExtent.width;
    db55:	8b 45 98             	mov    -0x68(%rbp),%eax
    db58:	89 45 e8             	mov    %eax,-0x18(%rbp)
  }
  if (imageExtentHeight > surfaceCapabilities.maxImageExtent.height) {
    db5b:	8b 45 9c             	mov    -0x64(%rbp),%eax
    db5e:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    db61:	73 06                	jae    db69 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x281>
    imageExtentHeight = surfaceCapabilities.maxImageExtent.height;
    db63:	8b 45 9c             	mov    -0x64(%rbp),%eax
    db66:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  }
  swapchainCreateInfo.imageExtent = {imageExtentWidth, imageExtentHeight};
    db69:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db70:	8b 55 e8             	mov    -0x18(%rbp),%edx
    db73:	89 50 2c             	mov    %edx,0x2c(%rax)
    db76:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    db7d:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    db80:	89 50 30             	mov    %edx,0x30(%rax)
  swapchain.extent = swapchainCreateInfo.imageExtent;
    db83:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
    db8a:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx
    db91:	48 8b 52 2c          	mov    0x2c(%rdx),%rdx
    db95:	48 89 50 7c          	mov    %rdx,0x7c(%rax)

  /* imageArrayLayers is the number of views in a multiview/stereo surface. For
  non-stereoscopic-3D applications, this value is 1. */
  /* 0 < imageArrayLayers <= maxImageArrayLayers */
  swapchainCreateInfo.imageArrayLayers = 1;
    db99:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dba0:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%rax)

  /* {presentMode} determines how incoming present requests will be processed
  and queued internally. */
  /* enum {VkPresentModeKHR}, pg 2219 */
  /* {VK_PRESENT_MODE_FIFO_KHR} is guaranteed to be available */
  swapchainCreateInfo.presentMode = VK_PRESENT_MODE_FIFO_KHR;
    dba7:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dbae:	c7 40 58 02 00 00 00 	movl   $0x2,0x58(%rax)
  auto preferredPresentMode = VK_PRESENT_MODE_IMMEDIATE_KHR;
    dbb5:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)
  for (const auto &presentMode : surfacePresentModes) {
    dbbc:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dbc3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    dbc7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbcb:	48 89 c7             	mov    %rax,%rdi
    dbce:	e8 31 30 00 00       	call   10c04 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>
    dbd3:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
    dbda:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    dbde:	48 89 c7             	mov    %rax,%rdi
    dbe1:	e8 44 30 00 00       	call   10c2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>
    dbe6:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    dbed:	eb 3c                	jmp    dc2b <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x343>
    dbef:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dbf6:	48 89 c7             	mov    %rax,%rdi
    dbf9:	e8 b0 30 00 00       	call   10cae <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>
    dbfe:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    if (presentMode == preferredPresentMode) {
    dc02:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    dc06:	8b 00                	mov    (%rax),%eax
    dc08:	39 45 cc             	cmp    %eax,-0x34(%rbp)
    dc0b:	75 0f                	jne    dc1c <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x334>
      swapchainCreateInfo.presentMode = preferredPresentMode;
    dc0d:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc14:	8b 55 cc             	mov    -0x34(%rbp),%edx
    dc17:	89 50 58             	mov    %edx,0x58(%rax)
      break;
    dc1a:	eb 2c                	jmp    dc48 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x360>
  for (const auto &presentMode : surfacePresentModes) {
    dc1c:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dc23:	48 89 c7             	mov    %rax,%rdi
    dc26:	e8 63 30 00 00       	call   10c8e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>
    dc2b:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx
    dc32:	48 8d 85 28 ff ff ff 	lea    -0xd8(%rbp),%rax
    dc39:	48 89 d6             	mov    %rdx,%rsi
    dc3c:	48 89 c7             	mov    %rax,%rdi
    dc3f:	e8 0f 30 00 00       	call   10c53 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    dc44:	84 c0                	test   %al,%al
    dc46:	75 a7                	jne    dbef <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x307>
  }

  /* {VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT} specifies that the image can be used
  to create a {VkImageView} suitable for use as a color or resolve attachment in
  a {VkFramebuffer}, pg 898 */
  swapchainCreateInfo.imageUsage = VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT;
    dc48:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc4f:	c7 40 38 10 00 00 00 	movl   $0x10,0x38(%rax)

  /* {VK_SHARING_MODE_EXCLUSIVE} requires some works to be done with ownership
   */
  swapchainCreateInfo.imageSharingMode = VK_SHARING_MODE_EXCLUSIVE;
    dc56:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc5d:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)
  swapchainCreateInfo.queueFamilyIndexCount = 0;
    dc64:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc6b:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%rax)
  swapchainCreateInfo.pQueueFamilyIndices = nullptr;
    dc72:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc79:	48 c7 40 48 00 00 00 	movq   $0x0,0x48(%rax)
    dc80:	00 

  /* image content is presented without being transformed */
  if (surfaceCapabilities.supportedTransforms &
    dc81:	8b 45 a4             	mov    -0x5c(%rbp),%eax
    dc84:	83 e0 01             	and    $0x1,%eax
    dc87:	85 c0                	test   %eax,%eax
    dc89:	74 1e                	je     dca9 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3c1>
      VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR) {
    swapchainCreateInfo.preTransform = VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR;
    dc8b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dc92:	c7 40 50 01 00 00 00 	movl   $0x1,0x50(%rax)
  } else {
    throw std::runtime_error(
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
  }

  if (surfaceCapabilities.supportedCompositeAlpha &
    dc99:	8b 45 ac             	mov    -0x54(%rbp),%eax
    dc9c:	83 e0 01             	and    $0x1,%eax
    dc9f:	85 c0                	test   %eax,%eax
    dca1:	0f 84 9b 00 00 00    	je     dd42 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x45a>
    dca7:	eb 3b                	jmp    dce4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x3fc>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dca9:	bf 10 00 00 00       	mov    $0x10,%edi
    dcae:	e8 bd 64 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    dcb3:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dcb6:	48 8d 05 eb bc 00 00 	lea    0xbceb(%rip),%rax        # 199a8 <_ZN6__pstl9execution2v1L5unseqE+0x91>
    dcbd:	48 89 c6             	mov    %rax,%rsi
    dcc0:	48 89 df             	mov    %rbx,%rdi
    dcc3:	e8 38 64 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dcc8:	48 8b 05 d9 82 01 00 	mov    0x182d9(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dccf:	48 89 c2             	mov    %rax,%rdx
    dcd2:	48 8d 05 67 80 01 00 	lea    0x18067(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dcd9:	48 89 c6             	mov    %rax,%rsi
    dcdc:	48 89 df             	mov    %rbx,%rdi
    dcdf:	e8 8c 69 ff ff       	call   4670 <__cxa_throw@plt>
      VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR) {
    swapchainCreateInfo.compositeAlpha = VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR;
    dce4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dceb:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%rax)
  } else {
    throw std::runtime_error(
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
  }

  swapchainCreateInfo.clipped = VK_TRUE;
    dcf2:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dcf9:	c7 40 5c 01 00 00 00 	movl   $0x1,0x5c(%rax)

  swapchainCreateInfo.pNext = nullptr;
    dd00:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd07:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    dd0e:	00 
  swapchainCreateInfo.oldSwapchain = VK_NULL_HANDLE;
    dd0f:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dd16:	48 c7 40 60 00 00 00 	movq   $0x0,0x60(%rax)
    dd1d:	00 

  return swapchainCreateInfo;
    dd1e:	90                   	nop
}
    dd1f:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    dd26:	48 89 c7             	mov    %rax,%rdi
    dd29:	e8 f6 aa ff ff       	call   8824 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    dd2e:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    dd35:	48 89 c7             	mov    %rax,%rdi
    dd38:	e8 83 a9 ff ff       	call   86c0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
  return swapchainCreateInfo;
    dd3d:	e9 9c 00 00 00       	jmp    ddde <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4f6>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd42:	bf 10 00 00 00       	mov    $0x10,%edi
    dd47:	e8 24 64 ff ff       	call   4170 <__cxa_allocate_exception@plt>
    dd4c:	48 89 c3             	mov    %rax,%rbx
    throw std::runtime_error(
    dd4f:	48 8d 05 8a bc 00 00 	lea    0xbc8a(%rip),%rax        # 199e0 <_ZN6__pstl9execution2v1L5unseqE+0xc9>
    dd56:	48 89 c6             	mov    %rax,%rsi
    dd59:	48 89 df             	mov    %rbx,%rdi
    dd5c:	e8 9f 63 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd61:	48 8b 05 40 82 01 00 	mov    0x18240(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    dd68:	48 89 c2             	mov    %rax,%rdx
    dd6b:	48 8d 05 ce 7f 01 00 	lea    0x17fce(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    dd72:	48 89 c6             	mov    %rax,%rsi
    dd75:	48 89 df             	mov    %rbx,%rdi
    dd78:	e8 f3 68 ff ff       	call   4670 <__cxa_throw@plt>
    throw std::runtime_error("No surface format available.");
    dd7d:	49 89 c4             	mov    %rax,%r12
    dd80:	48 89 df             	mov    %rbx,%rdi
    dd83:	e8 b8 64 ff ff       	call   4240 <__cxa_free_exception@plt>
    dd88:	4c 89 e3             	mov    %r12,%rbx
    dd8b:	eb 23                	jmp    ddb0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR not supported.");
    dd8d:	49 89 c4             	mov    %rax,%r12
    dd90:	48 89 df             	mov    %rbx,%rdi
    dd93:	e8 a8 64 ff ff       	call   4240 <__cxa_free_exception@plt>
    dd98:	4c 89 e3             	mov    %r12,%rbx
    dd9b:	eb 13                	jmp    ddb0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
        "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR not supported.");
    dd9d:	49 89 c4             	mov    %rax,%r12
    dda0:	48 89 df             	mov    %rbx,%rdi
    dda3:	e8 98 64 ff ff       	call   4240 <__cxa_free_exception@plt>
    dda8:	4c 89 e3             	mov    %r12,%rbx
    ddab:	eb 03                	jmp    ddb0 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4c8>
}
    ddad:	48 89 c3             	mov    %rax,%rbx
    ddb0:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    ddb7:	48 89 c7             	mov    %rax,%rdi
    ddba:	e8 65 aa ff ff       	call   8824 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EED1Ev>
    ddbf:	eb 03                	jmp    ddc4 <_ZN9VulkanApp27populateSwapchainCreateInfoEv+0x4dc>
    ddc1:	48 89 c3             	mov    %rax,%rbx
    ddc4:	48 8d 85 60 ff ff ff 	lea    -0xa0(%rbp),%rax
    ddcb:	48 89 c7             	mov    %rax,%rdi
    ddce:	e8 ed a8 ff ff       	call   86c0 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EED1Ev>
    ddd3:	48 89 d8             	mov    %rbx,%rax
    ddd6:	48 89 c7             	mov    %rax,%rdi
    ddd9:	e8 f2 68 ff ff       	call   46d0 <_Unwind_Resume@plt>
    ddde:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
    dde5:	48 81 c4 e0 00 00 00 	add    $0xe0,%rsp
    ddec:	5b                   	pop    %rbx
    dded:	41 5c                	pop    %r12
    ddef:	5d                   	pop    %rbp
    ddf0:	c3                   	ret
    ddf1:	90                   	nop

000000000000ddf2 <_ZN9VulkanApp15createSwapchainEv>:

void VulkanApp::createSwapchain() {
    ddf2:	55                   	push   %rbp
    ddf3:	48 89 e5             	mov    %rsp,%rbp
    ddf6:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    ddfa:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
  auto swapchainCreateInfo = populateSwapchainCreateInfo();
    ddfe:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    de02:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    de06:	48 89 d6             	mov    %rdx,%rsi
    de09:	48 89 c7             	mov    %rax,%rdi
    de0c:	e8 d7 fa ff ff       	call   d8e8 <_ZN9VulkanApp27populateSwapchainCreateInfoEv>
  swapchain.self = vkh::createSwapchain(device, &swapchainCreateInfo);
    de11:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    de15:	48 8b 40 50          	mov    0x50(%rax),%rax
    de19:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
    de1d:	ba 00 00 00 00       	mov    $0x0,%edx
    de22:	48 89 ce             	mov    %rcx,%rsi
    de25:	48 89 c7             	mov    %rax,%rdi
    de28:	e8 51 7a ff ff       	call   587e <_ZN3vkh15createSwapchainEP10VkDevice_TPK24VkSwapchainCreateInfoKHRPK21VkAllocationCallbacks>
    de2d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
    de31:	48 89 42 70          	mov    %rax,0x70(%rdx)
}
    de35:	90                   	nop
    de36:	c9                   	leave
    de37:	c3                   	ret

000000000000de38 <_ZN9VulkanApp16createImageViewsEv>:

void VulkanApp::createImageViews() {
    de38:	55                   	push   %rbp
    de39:	48 89 e5             	mov    %rsp,%rbp
    de3c:	53                   	push   %rbx
    de3d:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp
    de44:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
  images = vkh::getSwapchainImages(device, swapchain.self);
    de4b:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de52:	48 8b 50 70          	mov    0x70(%rax),%rdx
    de56:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de5d:	48 8b 48 50          	mov    0x50(%rax),%rcx
    de61:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de65:	48 89 ce             	mov    %rcx,%rsi
    de68:	48 89 c7             	mov    %rax,%rdi
    de6b:	e8 87 9b ff ff       	call   79f7 <_ZN3vkh18getSwapchainImagesEP10VkDevice_TP16VkSwapchainKHR_T>
    de70:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    de77:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    de7e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de82:	48 89 c6             	mov    %rax,%rsi
    de85:	48 89 d7             	mov    %rdx,%rdi
    de88:	e8 33 2e 00 00       	call   10cc0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>
    de8d:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    de91:	48 89 c7             	mov    %rax,%rdi
    de94:	e8 ef aa ff ff       	call   8988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
  size_t imageCount = images.size();
    de99:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dea0:	48 05 b8 00 00 00    	add    $0xb8,%rax
    dea6:	48 89 c7             	mov    %rax,%rdi
    dea9:	e8 4a 2e 00 00       	call   10cf8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>
    deae:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  imageViews.resize(imageCount);
    deb2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    deb9:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dec0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    dec4:	48 89 c6             	mov    %rax,%rsi
    dec7:	48 89 d7             	mov    %rdx,%rdi
    deca:	e8 4d 2e 00 00       	call   10d1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>
  for (size_t i = 0; i < imageCount; ++i) {
    decf:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ded6:	00 
    ded7:	e9 f1 00 00 00       	jmp    dfcd <_ZN9VulkanApp16createImageViewsEv+0x195>
    VkImageViewCreateInfo imageViewInfo{};
    dedc:	66 0f ef c0          	pxor   %xmm0,%xmm0
    dee0:	0f 29 85 70 ff ff ff 	movaps %xmm0,-0x90(%rbp)
    dee7:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
    deeb:	0f 29 45 90          	movaps %xmm0,-0x70(%rbp)
    deef:	0f 29 45 a0          	movaps %xmm0,-0x60(%rbp)
    def3:	0f 29 45 b0          	movaps %xmm0,-0x50(%rbp)
    imageViewInfo.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;
    def7:	c7 85 70 ff ff ff 0f 	movl   $0xf,-0x90(%rbp)
    defe:	00 00 00 
    imageViewInfo.pNext = nullptr;
    df01:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    df08:	00 00 00 00 
    // imageViewInfo.flags =
    imageViewInfo.image = images[i];
    df0c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df13:	48 8d 90 b8 00 00 00 	lea    0xb8(%rax),%rdx
    df1a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    df1e:	48 89 c6             	mov    %rax,%rsi
    df21:	48 89 d7             	mov    %rdx,%rdi
    df24:	e8 79 2e 00 00       	call   10da2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>
    df29:	48 8b 00             	mov    (%rax),%rax
    df2c:	48 89 45 88          	mov    %rax,-0x78(%rbp)

    /* treat images as 2D textures */
    imageViewInfo.viewType = VK_IMAGE_VIEW_TYPE_2D;
    df30:	c7 45 90 01 00 00 00 	movl   $0x1,-0x70(%rbp)

    imageViewInfo.format = swapchain.format;
    df37:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df3e:	8b 40 78             	mov    0x78(%rax),%eax
    df41:	89 45 94             	mov    %eax,-0x6c(%rbp)

    /* default mapping */
    imageViewInfo.components.r = VK_COMPONENT_SWIZZLE_IDENTITY;
    df44:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%rbp)
    imageViewInfo.components.g = VK_COMPONENT_SWIZZLE_IDENTITY;
    df4b:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%rbp)
    imageViewInfo.components.b = VK_COMPONENT_SWIZZLE_IDENTITY;
    df52:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    imageViewInfo.components.a = VK_COMPONENT_SWIZZLE_IDENTITY;
    df59:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)

    /* color aspect */
    imageViewInfo.subresourceRange.aspectMask = VK_IMAGE_ASPECT_COLOR_BIT;
    df60:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%rbp)

    /* In stereographic 3D applications, create a swapchain with multiple
    layers before creating multiple image views for each images representing
    the views for the left and right eyes by accessing different layers */
    imageViewInfo.subresourceRange.baseMipLevel = 0;
    df67:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%rbp)
    imageViewInfo.subresourceRange.levelCount = 1;
    df6e:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
    imageViewInfo.subresourceRange.baseArrayLayer = 0;
    df75:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)
    imageViewInfo.subresourceRange.layerCount = 1;
    df7c:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%rbp)

    imageViews[i] = vkh::createImageView(device, &imageViewInfo);
    df83:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    df8a:	48 8b 40 50          	mov    0x50(%rax),%rax
    df8e:	48 8d 8d 70 ff ff ff 	lea    -0x90(%rbp),%rcx
    df95:	ba 00 00 00 00       	mov    $0x0,%edx
    df9a:	48 89 ce             	mov    %rcx,%rsi
    df9d:	48 89 c7             	mov    %rax,%rdi
    dfa0:	e8 79 79 ff ff       	call   591e <_ZN3vkh15createImageViewEP10VkDevice_TPK21VkImageViewCreateInfoPK21VkAllocationCallbacks>
    dfa5:	48 89 c3             	mov    %rax,%rbx
    dfa8:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    dfaf:	48 8d 90 a0 00 00 00 	lea    0xa0(%rax),%rdx
    dfb6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfba:	48 89 c6             	mov    %rax,%rsi
    dfbd:	48 89 d7             	mov    %rdx,%rdi
    dfc0:	e8 fd 2d 00 00       	call   10dc2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>
    dfc5:	48 89 18             	mov    %rbx,(%rax)
  for (size_t i = 0; i < imageCount; ++i) {
    dfc8:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    dfcd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    dfd1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
    dfd5:	0f 82 01 ff ff ff    	jb     dedc <_ZN9VulkanApp16createImageViewsEv+0xa4>
  }
}
    dfdb:	90                   	nop
    dfdc:	90                   	nop
    dfdd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    dfe1:	c9                   	leave
    dfe2:	c3                   	ret
    dfe3:	90                   	nop

000000000000dfe4 <_ZN9VulkanApp22createGraphicsPipelineEv>:

void VulkanApp::createGraphicsPipeline() {
    dfe4:	55                   	push   %rbp
    dfe5:	48 89 e5             	mov    %rsp,%rbp
    dfe8:	41 55                	push   %r13
    dfea:	41 54                	push   %r12
    dfec:	53                   	push   %rbx
    dfed:	48 81 ec 28 05 00 00 	sub    $0x528,%rsp
    dff4:	48 89 bd c8 fa ff ff 	mov    %rdi,-0x538(%rbp)
  vkh::ShaderModuleWrapper shaderModule{};
    dffb:	48 c7 85 b0 fe ff ff 	movq   $0x0,-0x150(%rbp)
    e002:	00 00 00 00 
    e006:	48 c7 85 b8 fe ff ff 	movq   $0x0,-0x148(%rbp)
    e00d:	00 00 00 00 
  shaderModule.vertex =
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e011:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e018:	48 89 c7             	mov    %rax,%rdi
    e01b:	e8 c0 66 ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    e020:	48 8d 95 ef fe ff ff 	lea    -0x111(%rbp),%rdx
    e027:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e02e:	48 8d 0d e3 b9 00 00 	lea    0xb9e3(%rip),%rcx        # 19a18 <_ZN6__pstl9execution2v1L5unseqE+0x101>
    e035:	48 89 ce             	mov    %rcx,%rsi
    e038:	48 89 c7             	mov    %rax,%rdi
    e03b:	e8 e0 6a ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e040:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e047:	48 8b 40 50          	mov    0x50(%rax),%rax
    e04b:	48 8d 8d c0 fe ff ff 	lea    -0x140(%rbp),%rcx
    e052:	ba 00 00 00 00       	mov    $0x0,%edx
    e057:	48 89 ce             	mov    %rcx,%rsi
    e05a:	48 89 c7             	mov    %rax,%rdi
    e05d:	e8 2c 7a ff ff       	call   5a8e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
  shaderModule.vertex =
    e062:	48 89 85 b0 fe ff ff 	mov    %rax,-0x150(%rbp)
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    e069:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    e070:	48 89 c7             	mov    %rax,%rdi
    e073:	e8 68 61 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e078:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    e07f:	48 89 c7             	mov    %rax,%rdi
    e082:	e8 99 63 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
  shaderModule.fragment =
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e087:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e08e:	48 89 c7             	mov    %rax,%rdi
    e091:	e8 4a 66 ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    e096:	48 8d 95 1f ff ff ff 	lea    -0xe1(%rbp),%rdx
    e09d:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e0a4:	48 8d 0d 8d b9 00 00 	lea    0xb98d(%rip),%rcx        # 19a38 <_ZN6__pstl9execution2v1L5unseqE+0x121>
    e0ab:	48 89 ce             	mov    %rcx,%rsi
    e0ae:	48 89 c7             	mov    %rax,%rdi
    e0b1:	e8 6a 6a ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    e0b6:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e0bd:	48 8b 40 50          	mov    0x50(%rax),%rax
    e0c1:	48 8d 8d f0 fe ff ff 	lea    -0x110(%rbp),%rcx
    e0c8:	ba 00 00 00 00       	mov    $0x0,%edx
    e0cd:	48 89 ce             	mov    %rcx,%rsi
    e0d0:	48 89 c7             	mov    %rax,%rdi
    e0d3:	e8 b6 79 ff ff       	call   5a8e <_ZN3vkh18createShaderModuleEP10VkDevice_TNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPK21VkAllocationCallbacks>
  shaderModule.fragment =
    e0d8:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    e0df:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    e0e6:	48 89 c7             	mov    %rax,%rdi
    e0e9:	e8 f2 60 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    e0ee:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    e0f5:	48 89 c7             	mov    %rax,%rdi
    e0f8:	e8 23 63 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

  // std::vector<VkGraphicsPipelineCreateInfo>
  // graphicsPipelineCreateInfos{};

  /*  */
  VkPipelineShaderStageCreateInfo vertShaderStageInfo{};
    e0fd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e101:	0f 29 85 80 fe ff ff 	movaps %xmm0,-0x180(%rbp)
    e108:	0f 29 85 90 fe ff ff 	movaps %xmm0,-0x170(%rbp)
    e10f:	0f 29 85 a0 fe ff ff 	movaps %xmm0,-0x160(%rbp)
  vertShaderStageInfo.sType =
    e116:	c7 85 80 fe ff ff 12 	movl   $0x12,-0x180(%rbp)
    e11d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  vertShaderStageInfo.stage = VK_SHADER_STAGE_VERTEX_BIT;
    e120:	c7 85 94 fe ff ff 01 	movl   $0x1,-0x16c(%rbp)
    e127:	00 00 00 
  vertShaderStageInfo.module = shaderModule.vertex;
    e12a:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
    e131:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
  vertShaderStageInfo.pName = "main";
    e138:	48 8d 05 19 b9 00 00 	lea    0xb919(%rip),%rax        # 19a58 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e13f:	48 89 85 a0 fe ff ff 	mov    %rax,-0x160(%rbp)
  vertShaderStageInfo.pSpecializationInfo = nullptr;
    e146:	48 c7 85 a8 fe ff ff 	movq   $0x0,-0x158(%rbp)
    e14d:	00 00 00 00 

  VkPipelineShaderStageCreateInfo fragShaderStageInfo{};
    e151:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e155:	0f 29 85 50 fe ff ff 	movaps %xmm0,-0x1b0(%rbp)
    e15c:	0f 29 85 60 fe ff ff 	movaps %xmm0,-0x1a0(%rbp)
    e163:	0f 29 85 70 fe ff ff 	movaps %xmm0,-0x190(%rbp)
  fragShaderStageInfo.sType =
    e16a:	c7 85 50 fe ff ff 12 	movl   $0x12,-0x1b0(%rbp)
    e171:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO;
  fragShaderStageInfo.stage = VK_SHADER_STAGE_FRAGMENT_BIT;
    e174:	c7 85 64 fe ff ff 10 	movl   $0x10,-0x19c(%rbp)
    e17b:	00 00 00 
  fragShaderStageInfo.module = shaderModule.fragment;
    e17e:	48 8b 85 b8 fe ff ff 	mov    -0x148(%rbp),%rax
    e185:	48 89 85 68 fe ff ff 	mov    %rax,-0x198(%rbp)
  fragShaderStageInfo.pName = "main";
    e18c:	48 8d 05 c5 b8 00 00 	lea    0xb8c5(%rip),%rax        # 19a58 <_ZN6__pstl9execution2v1L5unseqE+0x141>
    e193:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
  fragShaderStageInfo.pSpecializationInfo = nullptr;
    e19a:	48 c7 85 78 fe ff ff 	movq   $0x0,-0x188(%rbp)
    e1a1:	00 00 00 00 

  VkPipelineShaderStageCreateInfo shaderStages[] = {vertShaderStageInfo,
                                                    fragShaderStageInfo};
    e1a5:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    e1ac:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    e1b3:	48 89 85 f0 fd ff ff 	mov    %rax,-0x210(%rbp)
    e1ba:	48 89 95 f8 fd ff ff 	mov    %rdx,-0x208(%rbp)
    e1c1:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
    e1c8:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
    e1cf:	48 89 85 00 fe ff ff 	mov    %rax,-0x200(%rbp)
    e1d6:	48 89 95 08 fe ff ff 	mov    %rdx,-0x1f8(%rbp)
    e1dd:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
    e1e4:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
    e1eb:	48 89 85 10 fe ff ff 	mov    %rax,-0x1f0(%rbp)
    e1f2:	48 89 95 18 fe ff ff 	mov    %rdx,-0x1e8(%rbp)
    e1f9:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
    e200:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
    e207:	48 89 85 20 fe ff ff 	mov    %rax,-0x1e0(%rbp)
    e20e:	48 89 95 28 fe ff ff 	mov    %rdx,-0x1d8(%rbp)
    e215:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
    e21c:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
    e223:	48 89 85 30 fe ff ff 	mov    %rax,-0x1d0(%rbp)
    e22a:	48 89 95 38 fe ff ff 	mov    %rdx,-0x1c8(%rbp)
    e231:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
    e238:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
    e23f:	48 89 85 40 fe ff ff 	mov    %rax,-0x1c0(%rbp)
    e246:	48 89 95 48 fe ff ff 	mov    %rdx,-0x1b8(%rbp)

  /*  */
  VkPipelineVertexInputStateCreateInfo vertInputInfo{};
    e24d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e251:	0f 29 85 c0 fd ff ff 	movaps %xmm0,-0x240(%rbp)
    e258:	0f 29 85 d0 fd ff ff 	movaps %xmm0,-0x230(%rbp)
    e25f:	0f 29 85 e0 fd ff ff 	movaps %xmm0,-0x220(%rbp)
  vertInputInfo.sType =
    e266:	c7 85 c0 fd ff ff 13 	movl   $0x13,-0x240(%rbp)
    e26d:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO;
  vertInputInfo.vertexBindingDescriptionCount = 0;
    e270:	c7 85 d4 fd ff ff 00 	movl   $0x0,-0x22c(%rbp)
    e277:	00 00 00 
  vertInputInfo.pVertexBindingDescriptions = nullptr;
    e27a:	48 c7 85 d8 fd ff ff 	movq   $0x0,-0x228(%rbp)
    e281:	00 00 00 00 
  vertInputInfo.vertexAttributeDescriptionCount = 0;
    e285:	c7 85 e0 fd ff ff 00 	movl   $0x0,-0x220(%rbp)
    e28c:	00 00 00 
  vertInputInfo.pVertexAttributeDescriptions = nullptr;
    e28f:	48 c7 85 e8 fd ff ff 	movq   $0x0,-0x218(%rbp)
    e296:	00 00 00 00 

  /*  */
  VkPipelineInputAssemblyStateCreateInfo inputAssemblyInfo{};
    e29a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e29e:	0f 29 85 a0 fd ff ff 	movaps %xmm0,-0x260(%rbp)
    e2a5:	0f 29 85 b0 fd ff ff 	movaps %xmm0,-0x250(%rbp)
  inputAssemblyInfo.sType =
    e2ac:	c7 85 a0 fd ff ff 14 	movl   $0x14,-0x260(%rbp)
    e2b3:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO;
  inputAssemblyInfo.topology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST;
    e2b6:	c7 85 b4 fd ff ff 03 	movl   $0x3,-0x24c(%rbp)
    e2bd:	00 00 00 
  inputAssemblyInfo.primitiveRestartEnable = VK_FALSE;
    e2c0:	c7 85 b8 fd ff ff 00 	movl   $0x0,-0x248(%rbp)
    e2c7:	00 00 00 

  /*  */
  VkViewport viewport{};
    e2ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2ce:	0f 29 85 80 fd ff ff 	movaps %xmm0,-0x280(%rbp)
    e2d5:	66 0f d6 85 90 fd ff 	movq   %xmm0,-0x270(%rbp)
    e2dc:	ff 
  viewport.x = 0.0f;
    e2dd:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2e1:	f3 0f 11 85 80 fd ff 	movss  %xmm0,-0x280(%rbp)
    e2e8:	ff 
  viewport.y = 0.0f;
    e2e9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e2ed:	f3 0f 11 85 84 fd ff 	movss  %xmm0,-0x27c(%rbp)
    e2f4:	ff 
  viewport.width = static_cast<float>(swapchain.extent.width);
    e2f5:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e2fc:	8b 40 7c             	mov    0x7c(%rax),%eax
    e2ff:	89 c0                	mov    %eax,%eax
    e301:	48 85 c0             	test   %rax,%rax
    e304:	78 0b                	js     e311 <_ZN9VulkanApp22createGraphicsPipelineEv+0x32d>
    e306:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e30a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e30f:	eb 19                	jmp    e32a <_ZN9VulkanApp22createGraphicsPipelineEv+0x346>
    e311:	48 89 c2             	mov    %rax,%rdx
    e314:	48 d1 ea             	shr    %rdx
    e317:	83 e0 01             	and    $0x1,%eax
    e31a:	48 09 c2             	or     %rax,%rdx
    e31d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e321:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e326:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e32a:	f3 0f 11 85 88 fd ff 	movss  %xmm0,-0x278(%rbp)
    e331:	ff 
  viewport.height = static_cast<float>(swapchain.extent.height);
    e332:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e339:	8b 80 80 00 00 00    	mov    0x80(%rax),%eax
    e33f:	89 c0                	mov    %eax,%eax
    e341:	48 85 c0             	test   %rax,%rax
    e344:	78 0b                	js     e351 <_ZN9VulkanApp22createGraphicsPipelineEv+0x36d>
    e346:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e34a:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    e34f:	eb 19                	jmp    e36a <_ZN9VulkanApp22createGraphicsPipelineEv+0x386>
    e351:	48 89 c2             	mov    %rax,%rdx
    e354:	48 d1 ea             	shr    %rdx
    e357:	83 e0 01             	and    $0x1,%eax
    e35a:	48 09 c2             	or     %rax,%rdx
    e35d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e361:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    e366:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    e36a:	f3 0f 11 85 8c fd ff 	movss  %xmm0,-0x274(%rbp)
    e371:	ff 
  viewport.minDepth = 0.0f;
    e372:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e376:	f3 0f 11 85 90 fd ff 	movss  %xmm0,-0x270(%rbp)
    e37d:	ff 
  viewport.maxDepth = 1.0f;
    e37e:	f3 0f 10 05 f2 b9 00 	movss  0xb9f2(%rip),%xmm0        # 19d78 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e385:	00 
    e386:	f3 0f 11 85 94 fd ff 	movss  %xmm0,-0x26c(%rbp)
    e38d:	ff 

  VkRect2D scissor{};
    e38e:	48 c7 85 70 fd ff ff 	movq   $0x0,-0x290(%rbp)
    e395:	00 00 00 00 
    e399:	48 c7 85 78 fd ff ff 	movq   $0x0,-0x288(%rbp)
    e3a0:	00 00 00 00 
  scissor.offset = {0, 0};
    e3a4:	c7 85 70 fd ff ff 00 	movl   $0x0,-0x290(%rbp)
    e3ab:	00 00 00 
    e3ae:	c7 85 74 fd ff ff 00 	movl   $0x0,-0x28c(%rbp)
    e3b5:	00 00 00 
  scissor.extent = swapchain.extent;
    e3b8:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e3bf:	48 8b 40 7c          	mov    0x7c(%rax),%rax
    e3c3:	48 89 85 78 fd ff ff 	mov    %rax,-0x288(%rbp)

  VkPipelineViewportStateCreateInfo viewportStateInfo{};
    e3ca:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e3ce:	0f 29 85 40 fd ff ff 	movaps %xmm0,-0x2c0(%rbp)
    e3d5:	0f 29 85 50 fd ff ff 	movaps %xmm0,-0x2b0(%rbp)
    e3dc:	0f 29 85 60 fd ff ff 	movaps %xmm0,-0x2a0(%rbp)
  viewportStateInfo.sType =
    e3e3:	c7 85 40 fd ff ff 16 	movl   $0x16,-0x2c0(%rbp)
    e3ea:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO;
  viewportStateInfo.viewportCount = 1;
    e3ed:	c7 85 54 fd ff ff 01 	movl   $0x1,-0x2ac(%rbp)
    e3f4:	00 00 00 
  viewportStateInfo.pViewports = &viewport;
    e3f7:	48 8d 85 80 fd ff ff 	lea    -0x280(%rbp),%rax
    e3fe:	48 89 85 58 fd ff ff 	mov    %rax,-0x2a8(%rbp)
  viewportStateInfo.scissorCount = 1;
    e405:	c7 85 60 fd ff ff 01 	movl   $0x1,-0x2a0(%rbp)
    e40c:	00 00 00 
  viewportStateInfo.pScissors = &scissor;
    e40f:	48 8d 85 70 fd ff ff 	lea    -0x290(%rbp),%rax
    e416:	48 89 85 68 fd ff ff 	mov    %rax,-0x298(%rbp)

  /*  */
  VkPipelineRasterizationStateCreateInfo rastStateInfo{};
    e41d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e421:	0f 29 85 00 fd ff ff 	movaps %xmm0,-0x300(%rbp)
    e428:	0f 29 85 10 fd ff ff 	movaps %xmm0,-0x2f0(%rbp)
    e42f:	0f 29 85 20 fd ff ff 	movaps %xmm0,-0x2e0(%rbp)
    e436:	0f 29 85 30 fd ff ff 	movaps %xmm0,-0x2d0(%rbp)
  rastStateInfo.sType =
    e43d:	c7 85 00 fd ff ff 17 	movl   $0x17,-0x300(%rbp)
    e444:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO;
  rastStateInfo.pNext = nullptr;
    e447:	48 c7 85 08 fd ff ff 	movq   $0x0,-0x2f8(%rbp)
    e44e:	00 00 00 00 
  rastStateInfo.depthClampEnable = VK_FALSE;
    e452:	c7 85 14 fd ff ff 00 	movl   $0x0,-0x2ec(%rbp)
    e459:	00 00 00 
  rastStateInfo.rasterizerDiscardEnable = VK_FALSE;
    e45c:	c7 85 18 fd ff ff 00 	movl   $0x0,-0x2e8(%rbp)
    e463:	00 00 00 
  rastStateInfo.polygonMode = VK_POLYGON_MODE_FILL;
    e466:	c7 85 1c fd ff ff 00 	movl   $0x0,-0x2e4(%rbp)
    e46d:	00 00 00 
  rastStateInfo.lineWidth = 1.0f;
    e470:	f3 0f 10 05 00 b9 00 	movss  0xb900(%rip),%xmm0        # 19d78 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e477:	00 
    e478:	f3 0f 11 85 38 fd ff 	movss  %xmm0,-0x2c8(%rbp)
    e47f:	ff 
  rastStateInfo.cullMode = VK_CULL_MODE_BACK_BIT;
    e480:	c7 85 20 fd ff ff 02 	movl   $0x2,-0x2e0(%rbp)
    e487:	00 00 00 
  rastStateInfo.frontFace = VK_FRONT_FACE_CLOCKWISE;
    e48a:	c7 85 24 fd ff ff 01 	movl   $0x1,-0x2dc(%rbp)
    e491:	00 00 00 
  rastStateInfo.depthBiasEnable = VK_FALSE;
    e494:	c7 85 28 fd ff ff 00 	movl   $0x0,-0x2d8(%rbp)
    e49b:	00 00 00 
  rastStateInfo.depthBiasConstantFactor = 0.0f;
    e49e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4a2:	f3 0f 11 85 2c fd ff 	movss  %xmm0,-0x2d4(%rbp)
    e4a9:	ff 
  rastStateInfo.depthBiasClamp = 0.0f;
    e4aa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4ae:	f3 0f 11 85 30 fd ff 	movss  %xmm0,-0x2d0(%rbp)
    e4b5:	ff 
  rastStateInfo.depthBiasSlopeFactor = 0.0f;
    e4b6:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4ba:	f3 0f 11 85 34 fd ff 	movss  %xmm0,-0x2cc(%rbp)
    e4c1:	ff 

  /*  */
  VkPipelineMultisampleStateCreateInfo multisampleStateInfo{};
    e4c2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e4c6:	0f 29 85 d0 fc ff ff 	movaps %xmm0,-0x330(%rbp)
    e4cd:	0f 29 85 e0 fc ff ff 	movaps %xmm0,-0x320(%rbp)
    e4d4:	0f 29 85 f0 fc ff ff 	movaps %xmm0,-0x310(%rbp)
  multisampleStateInfo.sType =
    e4db:	c7 85 d0 fc ff ff 18 	movl   $0x18,-0x330(%rbp)
    e4e2:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO;
  multisampleStateInfo.sampleShadingEnable = VK_FALSE;
    e4e5:	c7 85 e8 fc ff ff 00 	movl   $0x0,-0x318(%rbp)
    e4ec:	00 00 00 
  multisampleStateInfo.rasterizationSamples = VK_SAMPLE_COUNT_1_BIT;
    e4ef:	c7 85 e4 fc ff ff 01 	movl   $0x1,-0x31c(%rbp)
    e4f6:	00 00 00 
  multisampleStateInfo.minSampleShading = 1.0f;
    e4f9:	f3 0f 10 05 77 b8 00 	movss  0xb877(%rip),%xmm0        # 19d78 <_ZN6__pstl9execution2v1L5unseqE+0x461>
    e500:	00 
    e501:	f3 0f 11 85 ec fc ff 	movss  %xmm0,-0x314(%rbp)
    e508:	ff 
  multisampleStateInfo.pSampleMask = nullptr;
    e509:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
    e510:	00 00 00 00 
  multisampleStateInfo.alphaToCoverageEnable = VK_FALSE;
    e514:	c7 85 f8 fc ff ff 00 	movl   $0x0,-0x308(%rbp)
    e51b:	00 00 00 
  multisampleStateInfo.alphaToOneEnable = VK_FALSE;
    e51e:	c7 85 fc fc ff ff 00 	movl   $0x0,-0x304(%rbp)
    e525:	00 00 00 

  /* Depth and stencil testing */

  /* Color blending */
  VkPipelineColorBlendAttachmentState colorBlendAttachment{};
    e528:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e52c:	0f 29 85 b0 fc ff ff 	movaps %xmm0,-0x350(%rbp)
    e533:	0f 29 85 c0 fc ff ff 	movaps %xmm0,-0x340(%rbp)
  colorBlendAttachment.colorWriteMask =
    e53a:	c7 85 cc fc ff ff 0f 	movl   $0xf,-0x334(%rbp)
    e541:	00 00 00 
      VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT |
      VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT;
  colorBlendAttachment.blendEnable = VK_TRUE;
    e544:	c7 85 b0 fc ff ff 01 	movl   $0x1,-0x350(%rbp)
    e54b:	00 00 00 
  colorBlendAttachment.srcColorBlendFactor = VK_BLEND_FACTOR_SRC_ALPHA;
    e54e:	c7 85 b4 fc ff ff 06 	movl   $0x6,-0x34c(%rbp)
    e555:	00 00 00 
  colorBlendAttachment.dstColorBlendFactor =
    e558:	c7 85 b8 fc ff ff 07 	movl   $0x7,-0x348(%rbp)
    e55f:	00 00 00 
      VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA;
  colorBlendAttachment.colorBlendOp = VK_BLEND_OP_ADD;
    e562:	c7 85 bc fc ff ff 00 	movl   $0x0,-0x344(%rbp)
    e569:	00 00 00 
  colorBlendAttachment.srcAlphaBlendFactor = VK_BLEND_FACTOR_ONE;
    e56c:	c7 85 c0 fc ff ff 01 	movl   $0x1,-0x340(%rbp)
    e573:	00 00 00 
  colorBlendAttachment.dstAlphaBlendFactor = VK_BLEND_FACTOR_ZERO;
    e576:	c7 85 c4 fc ff ff 00 	movl   $0x0,-0x33c(%rbp)
    e57d:	00 00 00 
  colorBlendAttachment.alphaBlendOp = VK_BLEND_OP_ADD;
    e580:	c7 85 c8 fc ff ff 00 	movl   $0x0,-0x338(%rbp)
    e587:	00 00 00 

  VkPipelineColorBlendStateCreateInfo colorBlendState{};
    e58a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e58e:	0f 29 85 70 fc ff ff 	movaps %xmm0,-0x390(%rbp)
    e595:	0f 29 85 80 fc ff ff 	movaps %xmm0,-0x380(%rbp)
    e59c:	0f 29 85 90 fc ff ff 	movaps %xmm0,-0x370(%rbp)
    e5a3:	66 0f d6 85 a0 fc ff 	movq   %xmm0,-0x360(%rbp)
    e5aa:	ff 
  colorBlendState.sType =
    e5ab:	c7 85 70 fc ff ff 1a 	movl   $0x1a,-0x390(%rbp)
    e5b2:	00 00 00 
      VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO;
  colorBlendState.logicOpEnable = VK_FALSE;
    e5b5:	c7 85 84 fc ff ff 00 	movl   $0x0,-0x37c(%rbp)
    e5bc:	00 00 00 
  colorBlendState.logicOp = VK_LOGIC_OP_COPY;
    e5bf:	c7 85 88 fc ff ff 03 	movl   $0x3,-0x378(%rbp)
    e5c6:	00 00 00 
  colorBlendState.attachmentCount = 1;
    e5c9:	c7 85 8c fc ff ff 01 	movl   $0x1,-0x374(%rbp)
    e5d0:	00 00 00 
  colorBlendState.pAttachments = &colorBlendAttachment;
    e5d3:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    e5da:	48 89 85 90 fc ff ff 	mov    %rax,-0x370(%rbp)
  colorBlendState.blendConstants[0] = 0.0f;
    e5e1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5e5:	f3 0f 11 85 98 fc ff 	movss  %xmm0,-0x368(%rbp)
    e5ec:	ff 
  colorBlendState.blendConstants[1] = 0.0f;
    e5ed:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5f1:	f3 0f 11 85 9c fc ff 	movss  %xmm0,-0x364(%rbp)
    e5f8:	ff 
  colorBlendState.blendConstants[2] = 0.0f;
    e5f9:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e5fd:	f3 0f 11 85 a0 fc ff 	movss  %xmm0,-0x360(%rbp)
    e604:	ff 
  colorBlendState.blendConstants[3] = 0.0f;
    e605:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e609:	f3 0f 11 85 a4 fc ff 	movss  %xmm0,-0x35c(%rbp)
    e610:	ff 
  // dynamicStateInfo.dynamicStateCount =
  //     static_cast<uint32_t>(dynamicStates.size());
  // dynamicStateInfo.pDynamicStates = dynamicStates.data();

  /* Pipeline layout */
  VkPipelineLayoutCreateInfo pipelineLayoutInfo{};
    e611:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e615:	0f 29 85 40 fc ff ff 	movaps %xmm0,-0x3c0(%rbp)
    e61c:	0f 29 85 50 fc ff ff 	movaps %xmm0,-0x3b0(%rbp)
    e623:	0f 29 85 60 fc ff ff 	movaps %xmm0,-0x3a0(%rbp)
  pipelineLayoutInfo.sType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO;
    e62a:	c7 85 40 fc ff ff 1e 	movl   $0x1e,-0x3c0(%rbp)
    e631:	00 00 00 
  pipelineLayoutInfo.setLayoutCount = 0;
    e634:	c7 85 54 fc ff ff 00 	movl   $0x0,-0x3ac(%rbp)
    e63b:	00 00 00 
  pipelineLayoutInfo.pSetLayouts = nullptr;
    e63e:	48 c7 85 58 fc ff ff 	movq   $0x0,-0x3a8(%rbp)
    e645:	00 00 00 00 
  pipelineLayoutInfo.pushConstantRangeCount = 0;
    e649:	c7 85 60 fc ff ff 00 	movl   $0x0,-0x3a0(%rbp)
    e650:	00 00 00 
  pipelineLayoutInfo.pPushConstantRanges = nullptr;
    e653:	48 c7 85 68 fc ff ff 	movq   $0x0,-0x398(%rbp)
    e65a:	00 00 00 00 
  graphicsPipeline.layout =
      vkh::createPipelineLayout(device, &pipelineLayoutInfo);
    e65e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e665:	48 8b 40 50          	mov    0x50(%rax),%rax
    e669:	48 8d 8d 40 fc ff ff 	lea    -0x3c0(%rbp),%rcx
    e670:	ba 00 00 00 00       	mov    $0x0,%edx
    e675:	48 89 ce             	mov    %rcx,%rsi
    e678:	48 89 c7             	mov    %rax,%rdi
    e67b:	e8 46 76 ff ff       	call   5cc6 <_ZN3vkh20createPipelineLayoutEP10VkDevice_TPK26VkPipelineLayoutCreateInfoPK21VkAllocationCallbacks>
  graphicsPipeline.layout =
    e680:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e687:	48 89 82 d8 00 00 00 	mov    %rax,0xd8(%rdx)

  /* Render pass */
  VkAttachmentDescription colorAttachment{};
    e68e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e692:	0f 29 85 10 fc ff ff 	movaps %xmm0,-0x3f0(%rbp)
    e699:	0f 29 85 20 fc ff ff 	movaps %xmm0,-0x3e0(%rbp)
    e6a0:	66 0f 7e 85 30 fc ff 	movd   %xmm0,-0x3d0(%rbp)
    e6a7:	ff 
  colorAttachment.format = swapchain.format;
    e6a8:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e6af:	8b 40 78             	mov    0x78(%rax),%eax
    e6b2:	89 85 14 fc ff ff    	mov    %eax,-0x3ec(%rbp)
  colorAttachment.samples = VK_SAMPLE_COUNT_1_BIT;
    e6b8:	c7 85 18 fc ff ff 01 	movl   $0x1,-0x3e8(%rbp)
    e6bf:	00 00 00 
  colorAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_CLEAR;
    e6c2:	c7 85 1c fc ff ff 01 	movl   $0x1,-0x3e4(%rbp)
    e6c9:	00 00 00 
  colorAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;
    e6cc:	c7 85 20 fc ff ff 00 	movl   $0x0,-0x3e0(%rbp)
    e6d3:	00 00 00 
  colorAttachment.stencilLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;
    e6d6:	c7 85 24 fc ff ff 02 	movl   $0x2,-0x3dc(%rbp)
    e6dd:	00 00 00 
  colorAttachment.stencilStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE;
    e6e0:	c7 85 28 fc ff ff 01 	movl   $0x1,-0x3d8(%rbp)
    e6e7:	00 00 00 
  colorAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;
    e6ea:	c7 85 2c fc ff ff 00 	movl   $0x0,-0x3d4(%rbp)
    e6f1:	00 00 00 
  colorAttachment.finalLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR;
    e6f4:	c7 85 30 fc ff ff ea 	movl   $0x3b9acdea,-0x3d0(%rbp)
    e6fb:	cd 9a 3b 

  VkAttachmentReference colorAttachmentRef{};
    e6fe:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
    e705:	00 00 00 00 
  colorAttachmentRef.attachment = 0;
    e709:	c7 85 08 fc ff ff 00 	movl   $0x0,-0x3f8(%rbp)
    e710:	00 00 00 
  colorAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;
    e713:	c7 85 0c fc ff ff 02 	movl   $0x2,-0x3f4(%rbp)
    e71a:	00 00 00 

  VkSubpassDescription subpass{};
    e71d:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e721:	0f 29 85 c0 fb ff ff 	movaps %xmm0,-0x440(%rbp)
    e728:	0f 29 85 d0 fb ff ff 	movaps %xmm0,-0x430(%rbp)
    e72f:	0f 29 85 e0 fb ff ff 	movaps %xmm0,-0x420(%rbp)
    e736:	0f 29 85 f0 fb ff ff 	movaps %xmm0,-0x410(%rbp)
    e73d:	66 0f d6 85 00 fc ff 	movq   %xmm0,-0x400(%rbp)
    e744:	ff 
  subpass.pipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS;
    e745:	c7 85 c4 fb ff ff 00 	movl   $0x0,-0x43c(%rbp)
    e74c:	00 00 00 
  subpass.colorAttachmentCount = 1;
    e74f:	c7 85 d8 fb ff ff 01 	movl   $0x1,-0x428(%rbp)
    e756:	00 00 00 
  subpass.pColorAttachments = &colorAttachmentRef;
    e759:	48 8d 85 08 fc ff ff 	lea    -0x3f8(%rbp),%rax
    e760:	48 89 85 e0 fb ff ff 	mov    %rax,-0x420(%rbp)

  VkRenderPassCreateInfo renderPassInfo{};
    e767:	66 0f ef c0          	pxor   %xmm0,%xmm0
    e76b:	0f 29 85 80 fb ff ff 	movaps %xmm0,-0x480(%rbp)
    e772:	0f 29 85 90 fb ff ff 	movaps %xmm0,-0x470(%rbp)
    e779:	0f 29 85 a0 fb ff ff 	movaps %xmm0,-0x460(%rbp)
    e780:	0f 29 85 b0 fb ff ff 	movaps %xmm0,-0x450(%rbp)
  renderPassInfo.sType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO;
    e787:	c7 85 80 fb ff ff 26 	movl   $0x26,-0x480(%rbp)
    e78e:	00 00 00 
  renderPassInfo.pNext = nullptr;
    e791:	48 c7 85 88 fb ff ff 	movq   $0x0,-0x478(%rbp)
    e798:	00 00 00 00 
  renderPassInfo.attachmentCount = 1;
    e79c:	c7 85 94 fb ff ff 01 	movl   $0x1,-0x46c(%rbp)
    e7a3:	00 00 00 
  renderPassInfo.pAttachments = &colorAttachment;
    e7a6:	48 8d 85 10 fc ff ff 	lea    -0x3f0(%rbp),%rax
    e7ad:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
  renderPassInfo.subpassCount = 1;
    e7b4:	c7 85 a0 fb ff ff 01 	movl   $0x1,-0x460(%rbp)
    e7bb:	00 00 00 
  renderPassInfo.pSubpasses = &subpass;
    e7be:	48 8d 85 c0 fb ff ff 	lea    -0x440(%rbp),%rax
    e7c5:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
  graphicsPipeline.renderPass = vkh::createRenderPass(device, &renderPassInfo);
    e7cc:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e7d3:	48 8b 40 50          	mov    0x50(%rax),%rax
    e7d7:	48 8d 8d 80 fb ff ff 	lea    -0x480(%rbp),%rcx
    e7de:	ba 00 00 00 00       	mov    $0x0,%edx
    e7e3:	48 89 ce             	mov    %rcx,%rsi
    e7e6:	48 89 c7             	mov    %rax,%rdi
    e7e9:	e8 70 75 ff ff       	call   5d5e <_ZN3vkh16createRenderPassEP10VkDevice_TPK22VkRenderPassCreateInfoPK21VkAllocationCallbacks>
    e7ee:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
    e7f5:	48 89 82 e8 00 00 00 	mov    %rax,0xe8(%rdx)

  /* Create a graphics pipeline */
  VkGraphicsPipelineCreateInfo pipelineInfo{};
    e7fc:	48 8d 95 f0 fa ff ff 	lea    -0x510(%rbp),%rdx
    e803:	b8 00 00 00 00       	mov    $0x0,%eax
    e808:	b9 12 00 00 00       	mov    $0x12,%ecx
    e80d:	48 89 d7             	mov    %rdx,%rdi
    e810:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  pipelineInfo.sType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO;
    e813:	c7 85 f0 fa ff ff 1c 	movl   $0x1c,-0x510(%rbp)
    e81a:	00 00 00 
  pipelineInfo.pNext = nullptr;
    e81d:	48 c7 85 f8 fa ff ff 	movq   $0x0,-0x508(%rbp)
    e824:	00 00 00 00 
  pipelineInfo.stageCount = vkh::ShaderModuleWrapper::stageCount;
    e828:	c7 85 04 fb ff ff 02 	movl   $0x2,-0x4fc(%rbp)
    e82f:	00 00 00 
  pipelineInfo.pStages = shaderStages;
    e832:	48 8d 85 f0 fd ff ff 	lea    -0x210(%rbp),%rax
    e839:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
  pipelineInfo.pVertexInputState = &vertInputInfo;
    e840:	48 8d 85 c0 fd ff ff 	lea    -0x240(%rbp),%rax
    e847:	48 89 85 10 fb ff ff 	mov    %rax,-0x4f0(%rbp)
  pipelineInfo.pInputAssemblyState = &inputAssemblyInfo;
    e84e:	48 8d 85 a0 fd ff ff 	lea    -0x260(%rbp),%rax
    e855:	48 89 85 18 fb ff ff 	mov    %rax,-0x4e8(%rbp)
  pipelineInfo.pViewportState = &viewportStateInfo;
    e85c:	48 8d 85 40 fd ff ff 	lea    -0x2c0(%rbp),%rax
    e863:	48 89 85 28 fb ff ff 	mov    %rax,-0x4d8(%rbp)
  pipelineInfo.pRasterizationState = &rastStateInfo;
    e86a:	48 8d 85 00 fd ff ff 	lea    -0x300(%rbp),%rax
    e871:	48 89 85 30 fb ff ff 	mov    %rax,-0x4d0(%rbp)
  pipelineInfo.pMultisampleState = &multisampleStateInfo;
    e878:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    e87f:	48 89 85 38 fb ff ff 	mov    %rax,-0x4c8(%rbp)
  pipelineInfo.pDepthStencilState = nullptr;
    e886:	48 c7 85 40 fb ff ff 	movq   $0x0,-0x4c0(%rbp)
    e88d:	00 00 00 00 
  pipelineInfo.pColorBlendState = &colorBlendState;
    e891:	48 8d 85 70 fc ff ff 	lea    -0x390(%rbp),%rax
    e898:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
  pipelineInfo.pDynamicState = nullptr;
    e89f:	48 c7 85 50 fb ff ff 	movq   $0x0,-0x4b0(%rbp)
    e8a6:	00 00 00 00 
  pipelineInfo.layout = graphicsPipeline.layout;
    e8aa:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8b1:	48 8b 80 d8 00 00 00 	mov    0xd8(%rax),%rax
    e8b8:	48 89 85 58 fb ff ff 	mov    %rax,-0x4a8(%rbp)
  pipelineInfo.renderPass = graphicsPipeline.renderPass;
    e8bf:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    e8c6:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax
    e8cd:	48 89 85 60 fb ff ff 	mov    %rax,-0x4a0(%rbp)
  pipelineInfo.subpass = 0;
    e8d4:	c7 85 68 fb ff ff 00 	movl   $0x0,-0x498(%rbp)
    e8db:	00 00 00 
  pipelineInfo.basePipelineHandle = VK_NULL_HANDLE;
    e8de:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
    e8e5:	00 00 00 00 
  pipelineInfo.basePipelineIndex = -1;
    e8e9:	c7 85 78 fb ff ff ff 	movl   $0xffffffff,-0x488(%rbp)
    e8f0:	ff ff ff 

  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    e8f3:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
    e8fa:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
    e901:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
    e908:	48 89 95 28 ff ff ff 	mov    %rdx,-0xd8(%rbp)
    e90f:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
    e916:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
    e91d:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
    e924:	48 89 95 38 ff ff ff 	mov    %rdx,-0xc8(%rbp)
    e92b:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
    e932:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
    e939:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
    e940:	48 89 95 48 ff ff ff 	mov    %rdx,-0xb8(%rbp)
    e947:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
    e94e:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
    e955:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    e95c:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
    e963:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
    e96a:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
    e971:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
    e978:	48 89 95 68 ff ff ff 	mov    %rdx,-0x98(%rbp)
    e97f:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
    e986:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
    e98d:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    e994:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    e99b:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
    e9a2:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
    e9a9:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    e9ad:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
    e9b1:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
    e9b8:	48 8b 95 68 fb ff ff 	mov    -0x498(%rbp),%rdx
    e9bf:	48 89 45 90          	mov    %rax,-0x70(%rbp)
    e9c3:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    e9c7:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
    e9ce:	48 8b 95 78 fb ff ff 	mov    -0x488(%rbp),%rdx
    e9d5:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    e9d9:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
    e9dd:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    e9e4:	49 89 c4             	mov    %rax,%r12
    e9e7:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    e9ed:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    e9f1:	48 89 c7             	mov    %rax,%rdi
    e9f4:	e8 e9 23 00 00       	call   10de2 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>
    e9f9:	48 8d 55 bf          	lea    -0x41(%rbp),%rdx
    e9fd:	4c 89 e6             	mov    %r12,%rsi
    ea00:	4c 89 ef             	mov    %r13,%rdi
    ea03:	4c 89 e1             	mov    %r12,%rcx
    ea06:	4c 89 eb             	mov    %r13,%rbx
    ea09:	48 89 df             	mov    %rbx,%rdi
    ea0c:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ea13:	48 89 d1             	mov    %rdx,%rcx
    ea16:	48 89 fa             	mov    %rdi,%rdx
    ea19:	48 89 c7             	mov    %rax,%rdi
    ea1c:	e8 f9 23 00 00       	call   10e1a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>
    ea21:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    ea25:	48 89 c7             	mov    %rax,%rdi
    ea28:	e8 d1 23 00 00       	call   10dfe <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>

  graphicsPipeline.self =
      vkh::createPipelines(device, VK_NULL_HANDLE, pipelineInfoWrapper)[0];
    ea2d:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ea34:	48 8b 70 50          	mov    0x50(%rax),%rsi
    ea38:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ea3c:	48 8d 95 d0 fa ff ff 	lea    -0x530(%rbp),%rdx
    ea43:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    ea49:	48 89 d1             	mov    %rdx,%rcx
    ea4c:	ba 00 00 00 00       	mov    $0x0,%edx
    ea51:	48 89 c7             	mov    %rax,%rdi
    ea54:	e8 a8 24 00 00       	call   10f01 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>
    ea59:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ea5d:	be 00 00 00 00       	mov    $0x0,%esi
    ea62:	48 89 c7             	mov    %rax,%rdi
    ea65:	e8 08 26 00 00       	call   11072 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>
  graphicsPipeline.self =
    ea6a:	48 8b 10             	mov    (%rax),%rdx
    ea6d:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ea74:	48 89 90 d0 00 00 00 	mov    %rdx,0xd0(%rax)
      vkh::createPipelines(device, VK_NULL_HANDLE, pipelineInfoWrapper)[0];
    ea7b:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ea7f:	48 89 c7             	mov    %rax,%rdi
    ea82:	e8 a7 25 00 00       	call   1102e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>

  vkh::destroyShaderModule(device, shaderModule.vertex);
    ea87:	48 8b 8d b0 fe ff ff 	mov    -0x150(%rbp),%rcx
    ea8e:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    ea95:	48 8b 40 50          	mov    0x50(%rax),%rax
    ea99:	ba 00 00 00 00       	mov    $0x0,%edx
    ea9e:	48 89 ce             	mov    %rcx,%rsi
    eaa1:	48 89 c7             	mov    %rax,%rdi
    eaa4:	e8 ed 7d ff ff       	call   6896 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
  vkh::destroyShaderModule(device, shaderModule.fragment);
    eaa9:	48 8b 8d b8 fe ff ff 	mov    -0x148(%rbp),%rcx
    eab0:	48 8b 85 c8 fa ff ff 	mov    -0x538(%rbp),%rax
    eab7:	48 8b 40 50          	mov    0x50(%rax),%rax
    eabb:	ba 00 00 00 00       	mov    $0x0,%edx
    eac0:	48 89 ce             	mov    %rcx,%rsi
    eac3:	48 89 c7             	mov    %rax,%rdi
    eac6:	e8 cb 7d ff ff       	call   6896 <_ZN3vkh19destroyShaderModuleEP10VkDevice_TP16VkShaderModule_TPK21VkAllocationCallbacks>
}
    eacb:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    ead2:	48 89 c7             	mov    %rax,%rdi
    ead5:	e8 c8 23 00 00       	call   10ea2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    eada:	e9 99 00 00 00       	jmp    eb78 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb94>
      vkh::createShaderModule(device, "build/shaders/triangle_vert.spv");
    eadf:	48 89 c3             	mov    %rax,%rbx
    eae2:	48 8d 85 c0 fe ff ff 	lea    -0x140(%rbp),%rax
    eae9:	48 89 c7             	mov    %rax,%rdi
    eaec:	e8 ef 56 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    eaf1:	eb 03                	jmp    eaf6 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb12>
    eaf3:	48 89 c3             	mov    %rax,%rbx
    eaf6:	48 8d 85 ef fe ff ff 	lea    -0x111(%rbp),%rax
    eafd:	48 89 c7             	mov    %rax,%rdi
    eb00:	e8 1b 59 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    eb05:	48 89 d8             	mov    %rbx,%rax
    eb08:	48 89 c7             	mov    %rax,%rdi
    eb0b:	e8 c0 5b ff ff       	call   46d0 <_Unwind_Resume@plt>
      vkh::createShaderModule(device, "build/shaders/triangle_frag.spv");
    eb10:	48 89 c3             	mov    %rax,%rbx
    eb13:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    eb1a:	48 89 c7             	mov    %rax,%rdi
    eb1d:	e8 be 56 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    eb22:	eb 03                	jmp    eb27 <_ZN9VulkanApp22createGraphicsPipelineEv+0xb43>
    eb24:	48 89 c3             	mov    %rax,%rbx
    eb27:	48 8d 85 1f ff ff ff 	lea    -0xe1(%rbp),%rax
    eb2e:	48 89 c7             	mov    %rax,%rdi
    eb31:	e8 ea 58 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    eb36:	48 89 d8             	mov    %rbx,%rax
    eb39:	48 89 c7             	mov    %rax,%rdi
    eb3c:	e8 8f 5b ff ff       	call   46d0 <_Unwind_Resume@plt>
  std::vector<VkGraphicsPipelineCreateInfo> pipelineInfoWrapper{pipelineInfo};
    eb41:	48 89 c3             	mov    %rax,%rbx
    eb44:	48 8d 45 bf          	lea    -0x41(%rbp),%rax
    eb48:	48 89 c7             	mov    %rax,%rdi
    eb4b:	e8 ae 22 00 00       	call   10dfe <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
    eb50:	48 89 d8             	mov    %rbx,%rax
    eb53:	48 89 c7             	mov    %rax,%rdi
    eb56:	e8 75 5b ff ff       	call   46d0 <_Unwind_Resume@plt>
}
    eb5b:	48 89 c3             	mov    %rax,%rbx
    eb5e:	48 8d 85 d0 fa ff ff 	lea    -0x530(%rbp),%rax
    eb65:	48 89 c7             	mov    %rax,%rdi
    eb68:	e8 35 23 00 00       	call   10ea2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
    eb6d:	48 89 d8             	mov    %rbx,%rax
    eb70:	48 89 c7             	mov    %rax,%rdi
    eb73:	e8 58 5b ff ff       	call   46d0 <_Unwind_Resume@plt>
    eb78:	48 81 c4 28 05 00 00 	add    $0x528,%rsp
    eb7f:	5b                   	pop    %rbx
    eb80:	41 5c                	pop    %r12
    eb82:	41 5d                	pop    %r13
    eb84:	5d                   	pop    %rbp
    eb85:	c3                   	ret

000000000000eb86 <_ZN9VulkanApp17createCommandPoolEv>:

void VulkanApp::createCommandPool() {
    eb86:	55                   	push   %rbp
    eb87:	48 89 e5             	mov    %rsp,%rbp
    eb8a:	48 83 ec 30          	sub    $0x30,%rsp
    eb8e:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  VkCommandPoolCreateInfo cmdPoolInfo{};
    eb92:	66 0f ef c0          	pxor   %xmm0,%xmm0
    eb96:	0f 29 45 e0          	movaps %xmm0,-0x20(%rbp)
    eb9a:	66 0f d6 45 f0       	movq   %xmm0,-0x10(%rbp)
  cmdPoolInfo.sType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO;
    eb9f:	c7 45 e0 27 00 00 00 	movl   $0x27,-0x20(%rbp)
  cmdPoolInfo.pNext = nullptr;
    eba6:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    ebad:	00 
  pool to be individually reset to the initial state; either by calling
  vkResetCommandBuffer, or via the implicit reset when calling
  vkBeginCommandBuffer. If this flag is not set on a pool, then
  vkResetCommandBuffer must not be called for any command buffer allocated
  from that pool. */
  cmdPoolInfo.flags = VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT;
    ebae:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%rbp)
  /* All command buffers allocated from this command pool must be
  submitted on queues from the same queue family. */
  cmdPoolInfo.queueFamilyIndex = queueFamilyIndex;
    ebb5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebb9:	8b 40 68             	mov    0x68(%rax),%eax
    ebbc:	89 45 f4             	mov    %eax,-0xc(%rbp)

  commandPool = vkh::createCommandPool(device, &cmdPoolInfo);
    ebbf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ebc3:	48 8b 40 50          	mov    0x50(%rax),%rax
    ebc7:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx
    ebcb:	ba 00 00 00 00       	mov    $0x0,%edx
    ebd0:	48 89 ce             	mov    %rcx,%rsi
    ebd3:	48 89 c7             	mov    %rax,%rdi
    ebd6:	e8 1b 72 ff ff       	call   5df6 <_ZN3vkh17createCommandPoolEP10VkDevice_TPK23VkCommandPoolCreateInfoPK21VkAllocationCallbacks>
    ebdb:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    ebdf:	48 89 82 f0 00 00 00 	mov    %rax,0xf0(%rdx)
}
    ebe6:	90                   	nop
    ebe7:	c9                   	leave
    ebe8:	c3                   	ret
    ebe9:	90                   	nop

000000000000ebea <_ZN9VulkanAppC1Ev>:

VulkanApp::VulkanApp() {
    ebea:	55                   	push   %rbp
    ebeb:	48 89 e5             	mov    %rsp,%rbp
    ebee:	41 57                	push   %r15
    ebf0:	41 56                	push   %r14
    ebf2:	41 55                	push   %r13
    ebf4:	41 54                	push   %r12
    ebf6:	53                   	push   %rbx
    ebf7:	48 83 ec 38          	sub    $0x38,%rsp
    ebfb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    ebff:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec03:	48 8d 58 10          	lea    0x10(%rax),%rbx
    ec07:	48 8d 05 4f ae 00 00 	lea    0xae4f(%rip),%rax        # 19a5d <_ZN6__pstl9execution2v1L5unseqE+0x146>
    ec0e:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    ec12:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    ec16:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    ec1a:	48 c7 45 a8 01 00 00 	movq   $0x1,-0x58(%rbp)
    ec21:	00 
    ec22:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ec26:	48 89 c7             	mov    %rax,%rdi
    ec29:	e8 18 93 ff ff       	call   7f46 <_ZNSaIPKcEC1Ev>
    ec2e:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ec32:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi
    ec36:	48 8b 7d a8          	mov    -0x58(%rbp),%rdi
    ec3a:	49 89 f0             	mov    %rsi,%r8
    ec3d:	49 89 f9             	mov    %rdi,%r9
    ec40:	48 89 fa             	mov    %rdi,%rdx
    ec43:	48 89 c1             	mov    %rax,%rcx
    ec46:	4c 89 c6             	mov    %r8,%rsi
    ec49:	48 89 df             	mov    %rbx,%rdi
    ec4c:	e8 63 17 00 00       	call   103b4 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ec51:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    ec55:	48 89 c7             	mov    %rax,%rdi
    ec58:	e8 05 93 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    ec5d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ec61:	48 8d 58 28          	lea    0x28(%rax),%rbx
    ec65:	4c 8d 35 74 70 01 00 	lea    0x17074(%rip),%r14        # 25ce0 <C.84.0>
    ec6c:	41 bf 02 00 00 00    	mov    $0x2,%r15d
    ec72:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ec76:	48 89 c7             	mov    %rax,%rdi
    ec79:	e8 c8 92 ff ff       	call   7f46 <_ZNSaIPKcEC1Ev>
    ec7e:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    ec82:	4d 89 f0             	mov    %r14,%r8
    ec85:	4d 89 f9             	mov    %r15,%r9
    ec88:	4c 89 f6             	mov    %r14,%rsi
    ec8b:	4c 89 ff             	mov    %r15,%rdi
    ec8e:	48 89 fa             	mov    %rdi,%rdx
    ec91:	48 89 c1             	mov    %rax,%rcx
    ec94:	4c 89 c6             	mov    %r8,%rsi
    ec97:	48 89 df             	mov    %rbx,%rdi
    ec9a:	e8 15 17 00 00       	call   103b4 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ec9f:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    eca3:	48 89 c7             	mov    %rax,%rdi
    eca6:	e8 b7 92 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    ecab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ecaf:	48 8d 98 88 00 00 00 	lea    0x88(%rax),%rbx
    ecb6:	4c 8d 25 33 70 01 00 	lea    0x17033(%rip),%r12        # 25cf0 <C.85.1>
    ecbd:	41 bd 02 00 00 00    	mov    $0x2,%r13d
    ecc3:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ecc7:	48 89 c7             	mov    %rax,%rdi
    ecca:	e8 77 92 ff ff       	call   7f46 <_ZNSaIPKcEC1Ev>
    eccf:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ecd3:	4d 89 e0             	mov    %r12,%r8
    ecd6:	4d 89 e9             	mov    %r13,%r9
    ecd9:	4c 89 e6             	mov    %r12,%rsi
    ecdc:	4c 89 ef             	mov    %r13,%rdi
    ecdf:	48 89 fa             	mov    %rdi,%rdx
    ece2:	48 89 c1             	mov    %rax,%rcx
    ece5:	4c 89 c6             	mov    %r8,%rsi
    ece8:	48 89 df             	mov    %rbx,%rdi
    eceb:	e8 c4 16 00 00       	call   103b4 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>
    ecf0:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    ecf4:	48 89 c7             	mov    %rax,%rdi
    ecf7:	e8 66 92 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    ecfc:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed00:	48 05 a0 00 00 00    	add    $0xa0,%rax
    ed06:	48 89 c7             	mov    %rax,%rdi
    ed09:	e8 c8 15 00 00       	call   102d6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>
    ed0e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed12:	48 05 b8 00 00 00    	add    $0xb8,%rax
    ed18:	48 89 c7             	mov    %rax,%rdi
    ed1b:	e8 ee 15 00 00       	call   1030e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>
    ed20:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed24:	48 05 d0 00 00 00    	add    $0xd0,%rax
    ed2a:	48 89 c7             	mov    %rax,%rdi
    ed2d:	e8 f8 15 00 00       	call   1032a <_ZN3vkh23GraphicsPipelineWrapperC1Ev>
  createWindow();
    ed32:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed36:	48 89 c7             	mov    %rax,%rdi
    ed39:	e8 92 df ff ff       	call   ccd0 <_ZN9VulkanApp12createWindowEv>
  createInstance();
    ed3e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed42:	48 89 c7             	mov    %rax,%rdi
    ed45:	e8 c6 df ff ff       	call   cd10 <_ZN9VulkanApp14createInstanceEv>
  createDebugMessenger();
    ed4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed4e:	48 89 c7             	mov    %rax,%rdi
    ed51:	e8 a0 e1 ff ff       	call   cef6 <_ZN9VulkanApp20createDebugMessengerEv>
  createSurface();
    ed56:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed5a:	48 89 c7             	mov    %rax,%rdi
    ed5d:	e8 28 e2 ff ff       	call   cf8a <_ZN9VulkanApp13createSurfaceEv>
  createDevice();
    ed62:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed66:	48 89 c7             	mov    %rax,%rdi
    ed69:	e8 74 e4 ff ff       	call   d1e2 <_ZN9VulkanApp12createDeviceEv>
  createSwapchain();
    ed6e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed72:	48 89 c7             	mov    %rax,%rdi
    ed75:	e8 78 f0 ff ff       	call   ddf2 <_ZN9VulkanApp15createSwapchainEv>
  createImageViews();
    ed7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed7e:	48 89 c7             	mov    %rax,%rdi
    ed81:	e8 b2 f0 ff ff       	call   de38 <_ZN9VulkanApp16createImageViewsEv>
  createGraphicsPipeline();
    ed86:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed8a:	48 89 c7             	mov    %rax,%rdi
    ed8d:	e8 52 f2 ff ff       	call   dfe4 <_ZN9VulkanApp22createGraphicsPipelineEv>

  createCommandPool();
    ed92:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ed96:	48 89 c7             	mov    %rax,%rdi
    ed99:	e8 e8 fd ff ff       	call   eb86 <_ZN9VulkanApp17createCommandPoolEv>
}
    ed9e:	e9 a0 00 00 00       	jmp    ee43 <_ZN9VulkanAppC1Ev+0x259>
VulkanApp::VulkanApp() {
    eda3:	48 89 c3             	mov    %rax,%rbx
    eda6:	48 8d 45 cd          	lea    -0x33(%rbp),%rax
    edaa:	48 89 c7             	mov    %rax,%rdi
    edad:	e8 b0 91 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    edb2:	48 89 d8             	mov    %rbx,%rax
    edb5:	48 89 c7             	mov    %rax,%rdi
    edb8:	e8 13 59 ff ff       	call   46d0 <_Unwind_Resume@plt>
    edbd:	48 89 c3             	mov    %rax,%rbx
    edc0:	48 8d 45 ce          	lea    -0x32(%rbp),%rax
    edc4:	48 89 c7             	mov    %rax,%rdi
    edc7:	e8 96 91 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    edcc:	eb 5a                	jmp    ee28 <_ZN9VulkanAppC1Ev+0x23e>
    edce:	48 89 c3             	mov    %rax,%rbx
    edd1:	48 8d 45 cf          	lea    -0x31(%rbp),%rax
    edd5:	48 89 c7             	mov    %rax,%rdi
    edd8:	e8 85 91 ff ff       	call   7f62 <_ZNSaIPKcED1Ev>
    eddd:	eb 39                	jmp    ee18 <_ZN9VulkanAppC1Ev+0x22e>
}
    eddf:	48 89 c3             	mov    %rax,%rbx
    ede2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ede6:	48 05 b8 00 00 00    	add    $0xb8,%rax
    edec:	48 89 c7             	mov    %rax,%rdi
    edef:	e8 94 9b ff ff       	call   8988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    edf4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    edf8:	48 05 a0 00 00 00    	add    $0xa0,%rax
    edfe:	48 89 c7             	mov    %rax,%rdi
    ee01:	e8 1e 23 00 00       	call   11124 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    ee06:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee0a:	48 05 88 00 00 00    	add    $0x88,%rax
    ee10:	48 89 c7             	mov    %rax,%rdi
    ee13:	e8 24 16 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::VulkanApp() {
    ee18:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee1c:	48 83 c0 28          	add    $0x28,%rax
}
    ee20:	48 89 c7             	mov    %rax,%rdi
    ee23:	e8 14 16 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee28:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    ee2c:	48 83 c0 10          	add    $0x10,%rax
    ee30:	48 89 c7             	mov    %rax,%rdi
    ee33:	e8 04 16 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    ee38:	48 89 d8             	mov    %rbx,%rax
    ee3b:	48 89 c7             	mov    %rax,%rdi
    ee3e:	e8 8d 58 ff ff       	call   46d0 <_Unwind_Resume@plt>
    ee43:	48 83 c4 38          	add    $0x38,%rsp
    ee47:	5b                   	pop    %rbx
    ee48:	41 5c                	pop    %r12
    ee4a:	41 5d                	pop    %r13
    ee4c:	41 5e                	pop    %r14
    ee4e:	41 5f                	pop    %r15
    ee50:	5d                   	pop    %rbp
    ee51:	c3                   	ret

000000000000ee52 <_ZN9VulkanAppD1Ev>:

VulkanApp::~VulkanApp() {
    ee52:	55                   	push   %rbp
    ee53:	48 89 e5             	mov    %rsp,%rbp
    ee56:	48 83 ec 30          	sub    $0x30,%rsp
    ee5a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  vkh::destroyCommandPool(device, commandPool);
    ee5e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee62:	48 8b 88 f0 00 00 00 	mov    0xf0(%rax),%rcx
    ee69:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee6d:	48 8b 40 50          	mov    0x50(%rax),%rax
    ee71:	ba 00 00 00 00       	mov    $0x0,%edx
    ee76:	48 89 ce             	mov    %rcx,%rsi
    ee79:	48 89 c7             	mov    %rax,%rdi
    ee7c:	e8 5c 7b ff ff       	call   69dd <_ZN3vkh18destroyCommandPoolEP10VkDevice_TP15VkCommandPool_TPK21VkAllocationCallbacks>

  vkh::destroyPipeline(device, graphicsPipeline.self);
    ee81:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee85:	48 8b 88 d0 00 00 00 	mov    0xd0(%rax),%rcx
    ee8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ee90:	48 8b 40 50          	mov    0x50(%rax),%rax
    ee94:	ba 00 00 00 00       	mov    $0x0,%edx
    ee99:	48 89 ce             	mov    %rcx,%rsi
    ee9c:	48 89 c7             	mov    %rax,%rdi
    ee9f:	e8 7c 7a ff ff       	call   6920 <_ZN3vkh15destroyPipelineEP10VkDevice_TP12VkPipeline_TPK21VkAllocationCallbacks>
  vkh::destroyPipelineLayout(device, graphicsPipeline.layout);
    eea4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eea8:	48 8b 88 d8 00 00 00 	mov    0xd8(%rax),%rcx
    eeaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eeb3:	48 8b 40 50          	mov    0x50(%rax),%rax
    eeb7:	ba 00 00 00 00       	mov    $0x0,%edx
    eebc:	48 89 ce             	mov    %rcx,%rsi
    eebf:	48 89 c7             	mov    %rax,%rdi
    eec2:	e8 fd 79 ff ff       	call   68c4 <_ZN3vkh21destroyPipelineLayoutEP10VkDevice_TP18VkPipelineLayout_TPK21VkAllocationCallbacks>
  vkh::destroyRenderPass(device, graphicsPipeline.renderPass);
    eec7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eecb:	48 8b 88 e8 00 00 00 	mov    0xe8(%rax),%rcx
    eed2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eed6:	48 8b 40 50          	mov    0x50(%rax),%rax
    eeda:	ba 00 00 00 00       	mov    $0x0,%edx
    eedf:	48 89 ce             	mov    %rcx,%rsi
    eee2:	48 89 c7             	mov    %rax,%rdi
    eee5:	e8 08 7a ff ff       	call   68f2 <_ZN3vkh17destroyRenderPassEP10VkDevice_TP14VkRenderPass_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    eeea:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    eeee:	48 05 a0 00 00 00    	add    $0xa0,%rax
    eef4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    eef8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    eefc:	48 89 c7             	mov    %rax,%rdi
    eeff:	e8 8c 22 00 00       	call   11190 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>
    ef04:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    ef08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ef0c:	48 89 c7             	mov    %rax,%rdi
    ef0f:	e8 a2 22 00 00       	call   111b6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>
    ef14:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    ef18:	eb 3b                	jmp    ef55 <_ZN9VulkanAppD1Ev+0x103>
    ef1a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ef1e:	48 89 c7             	mov    %rax,%rdi
    ef21:	e8 14 23 00 00       	call   1123a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>
    ef26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    vkh::destroyImageView(device, imageView);
    ef2a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    ef2e:	48 8b 08             	mov    (%rax),%rcx
    ef31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef35:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef39:	ba 00 00 00 00       	mov    $0x0,%edx
    ef3e:	48 89 ce             	mov    %rcx,%rsi
    ef41:	48 89 c7             	mov    %rax,%rdi
    ef44:	e8 1f 79 ff ff       	call   6868 <_ZN3vkh16destroyImageViewEP10VkDevice_TP13VkImageView_TPK21VkAllocationCallbacks>
  for (auto &imageView : imageViews) {
    ef49:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ef4d:	48 89 c7             	mov    %rax,%rdi
    ef50:	e8 c5 22 00 00       	call   1121a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>
    ef55:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
    ef59:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
    ef5d:	48 89 d6             	mov    %rdx,%rsi
    ef60:	48 89 c7             	mov    %rax,%rdi
    ef63:	e8 77 22 00 00       	call   111df <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    ef68:	84 c0                	test   %al,%al
    ef6a:	75 ae                	jne    ef1a <_ZN9VulkanAppD1Ev+0xc8>
  }
  vkh::destroySwapchain(device, swapchain.self);
    ef6c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef70:	48 8b 48 70          	mov    0x70(%rax),%rcx
    ef74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef78:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef7c:	ba 00 00 00 00       	mov    $0x0,%edx
    ef81:	48 89 ce             	mov    %rcx,%rsi
    ef84:	48 89 c7             	mov    %rax,%rdi
    ef87:	e8 ae 78 ff ff       	call   683a <_ZN3vkh16destroySwapchainEP10VkDevice_TP16VkSwapchainKHR_TPK21VkAllocationCallbacks>
  vkh::destroyDevice(device);
    ef8c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    ef90:	48 8b 40 50          	mov    0x50(%rax),%rax
    ef94:	be 00 00 00 00       	mov    $0x0,%esi
    ef99:	48 89 c7             	mov    %rax,%rdi
    ef9c:	e8 45 78 ff ff       	call   67e6 <_ZN3vkh13destroyDeviceEP10VkDevice_TPK21VkAllocationCallbacks>
  vkh::destroyDebugUtilsMessengerEXT(instance, debugMessenger, nullptr);
    efa1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efa5:	48 8b 48 40          	mov    0x40(%rax),%rcx
    efa9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efad:	48 8b 40 08          	mov    0x8(%rax),%rax
    efb1:	ba 00 00 00 00       	mov    $0x0,%edx
    efb6:	48 89 ce             	mov    %rcx,%rsi
    efb9:	48 89 c7             	mov    %rax,%rdi
    efbc:	e8 a6 d8 ff ff       	call   c867 <_ZN3vkh29destroyDebugUtilsMessengerEXTEP12VkInstance_TP26VkDebugUtilsMessengerEXT_TPK21VkAllocationCallbacks>
  vkh::destroySurface(instance, surface);
    efc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efc5:	48 8b 48 48          	mov    0x48(%rax),%rcx
    efc9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efcd:	48 8b 40 08          	mov    0x8(%rax),%rax
    efd1:	ba 00 00 00 00       	mov    $0x0,%edx
    efd6:	48 89 ce             	mov    %rcx,%rsi
    efd9:	48 89 c7             	mov    %rax,%rdi
    efdc:	e8 2b 78 ff ff       	call   680c <_ZN3vkh14destroySurfaceEP12VkInstance_TP14VkSurfaceKHR_TPK21VkAllocationCallbacks>
  vkh::destroyInstance(instance, nullptr);
    efe1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    efe5:	48 8b 40 08          	mov    0x8(%rax),%rax
    efe9:	be 00 00 00 00       	mov    $0x0,%esi
    efee:	48 89 c7             	mov    %rax,%rdi
    eff1:	e8 ca 77 ff ff       	call   67c0 <_ZN3vkh15destroyInstanceEP12VkInstance_TPK21VkAllocationCallbacks>
  vkh::destroyWindow(window);
    eff6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    effa:	48 8b 00             	mov    (%rax),%rax
    effd:	48 89 c7             	mov    %rax,%rdi
    f000:	e8 a0 77 ff ff       	call   67a5 <_ZN3vkh13destroyWindowEP10GLFWwindow>
  glfwTerminate();
    f005:	e8 a6 53 ff ff       	call   43b0 <glfwTerminate@plt>
}
    f00a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f00e:	48 05 b8 00 00 00    	add    $0xb8,%rax
    f014:	48 89 c7             	mov    %rax,%rdi
    f017:	e8 6c 99 ff ff       	call   8988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
    f01c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f020:	48 05 a0 00 00 00    	add    $0xa0,%rax
    f026:	48 89 c7             	mov    %rax,%rdi
    f029:	e8 f6 20 00 00       	call   11124 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>
    f02e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f032:	48 05 88 00 00 00    	add    $0x88,%rax
    f038:	48 89 c7             	mov    %rax,%rdi
    f03b:	e8 fc 13 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
VulkanApp::~VulkanApp() {
    f040:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f044:	48 83 c0 28          	add    $0x28,%rax
}
    f048:	48 89 c7             	mov    %rax,%rdi
    f04b:	e8 ec 13 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f050:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f054:	48 83 c0 10          	add    $0x10,%rax
    f058:	48 89 c7             	mov    %rax,%rdi
    f05b:	e8 dc 13 00 00       	call   1043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>
    f060:	90                   	nop
    f061:	c9                   	leave
    f062:	c3                   	ret
    f063:	90                   	nop

000000000000f064 <_ZN9VulkanApp3runEv>:

void VulkanApp::run() {
    f064:	55                   	push   %rbp
    f065:	48 89 e5             	mov    %rsp,%rbp
    f068:	53                   	push   %rbx
    f069:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    f070:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
  vkh::Timer time_total;
    f077:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f07b:	48 89 c7             	mov    %rax,%rdi
    f07e:	e8 c9 21 00 00       	call   1124c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
  const double sec_to_mics = 1'000'000.0;
    f083:	f2 0f 10 05 f5 ac 00 	movsd  0xacf5(%rip),%xmm0        # 19d80 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f08a:	00 
    f08b:	f2 0f 11 45 e8       	movsd  %xmm0,-0x18(%rbp)
  while (!glfwWindowShouldClose(window)) {
    f090:	e9 a1 00 00 00       	jmp    f136 <_ZN9VulkanApp3runEv+0xd2>
    vkh::Timer time_circle;
    f095:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f099:	48 89 c7             	mov    %rax,%rdi
    f09c:	e8 ab 21 00 00       	call   1124c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>
    glfwPollEvents();
    f0a1:	e8 aa 52 ff ff       	call   4350 <glfwPollEvents@plt>

    // for (int i = 0; i < 1'000'000; ++i) {
    // }

    double current = static_cast<double>(time_total.current());
    f0a6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f0aa:	48 89 c7             	mov    %rax,%rdi
    f0ad:	e8 b2 12 00 00       	call   10364 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f0b2:	66 0f ef c0          	pxor   %xmm0,%xmm0
    f0b6:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    f0bb:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    if (current >= sec_to_mics) {
    f0c0:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    f0c5:	66 0f 2f 05 b3 ac 00 	comisd 0xacb3(%rip),%xmm0        # 19d80 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f0cc:	00 
    f0cd:	72 5b                	jb     f12a <_ZN9VulkanApp3runEv+0xc6>
      std::cout << sec_to_mics / static_cast<double>(time_circle.current())
    f0cf:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f0d3:	48 89 c7             	mov    %rax,%rdi
    f0d6:	e8 89 12 00 00       	call   10364 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>
    f0db:	66 0f ef c9          	pxor   %xmm1,%xmm1
    f0df:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    f0e4:	f2 0f 10 05 94 ac 00 	movsd  0xac94(%rip),%xmm0        # 19d80 <_ZN6__pstl9execution2v1L5unseqE+0x469>
    f0eb:	00 
    f0ec:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    f0f0:	66 48 0f 7e c0       	movq   %xmm0,%rax
    f0f5:	66 48 0f 6e c0       	movq   %rax,%xmm0
    f0fa:	48 8d 05 bf 72 01 00 	lea    0x172bf(%rip),%rax        # 263c0 <_ZSt4cout@GLIBCXX_3.4>
    f101:	48 89 c7             	mov    %rax,%rdi
    f104:	e8 27 56 ff ff       	call   4730 <_ZNSolsEd@plt>
    f109:	48 89 c2             	mov    %rax,%rdx
                << " FPS\n";
    f10c:	48 8d 05 5d a9 00 00 	lea    0xa95d(%rip),%rax        # 19a70 <_ZN6__pstl9execution2v1L5unseqE+0x159>
    f113:	48 89 c6             	mov    %rax,%rsi
    f116:	48 89 d7             	mov    %rdx,%rdi
    f119:	e8 52 52 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      time_total.reset();
    f11e:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f122:	48 89 c7             	mov    %rax,%rdi
    f125:	e8 32 22 00 00       	call   1135c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>
    }
  }
    f12a:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f12e:	48 89 c7             	mov    %rax,%rdi
    f131:	e8 8c 21 00 00       	call   112c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
  while (!glfwWindowShouldClose(window)) {
    f136:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f13d:	48 8b 00             	mov    (%rax),%rax
    f140:	48 89 c7             	mov    %rax,%rdi
    f143:	e8 d8 55 ff ff       	call   4720 <glfwWindowShouldClose@plt>
    f148:	85 c0                	test   %eax,%eax
    f14a:	0f 94 c0             	sete   %al
    f14d:	84 c0                	test   %al,%al
    f14f:	0f 85 40 ff ff ff    	jne    f095 <_ZN9VulkanApp3runEv+0x31>
  vkDeviceWaitIdle(device);
    f155:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f15c:	48 8b 40 50          	mov    0x50(%rax),%rax
    f160:	48 89 c7             	mov    %rax,%rdi
    f163:	e8 38 4f ff ff       	call   40a0 <vkDeviceWaitIdle@plt>
}
    f168:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f16c:	48 89 c7             	mov    %rax,%rdi
    f16f:	e8 4e 21 00 00       	call   112c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f174:	eb 2b                	jmp    f1a1 <_ZN9VulkanApp3runEv+0x13d>
  }
    f176:	48 89 c3             	mov    %rax,%rbx
    f179:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    f17d:	48 89 c7             	mov    %rax,%rdi
    f180:	e8 3d 21 00 00       	call   112c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f185:	eb 03                	jmp    f18a <_ZN9VulkanApp3runEv+0x126>
}
    f187:	48 89 c3             	mov    %rax,%rbx
    f18a:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    f18e:	48 89 c7             	mov    %rax,%rdi
    f191:	e8 2c 21 00 00       	call   112c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>
    f196:	48 89 d8             	mov    %rbx,%rax
    f199:	48 89 c7             	mov    %rax,%rdi
    f19c:	e8 2f 55 ff ff       	call   46d0 <_Unwind_Resume@plt>
    f1a1:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    f1a5:	c9                   	leave
    f1a6:	c3                   	ret
    f1a7:	90                   	nop

000000000000f1a8 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:

void VulkanApp::writeInfo(std::string filePath) {
    f1a8:	55                   	push   %rbp
    f1a9:	48 89 e5             	mov    %rsp,%rbp
    f1ac:	41 54                	push   %r12
    f1ae:	53                   	push   %rbx
    f1af:	48 81 ec c0 0e 00 00 	sub    $0xec0,%rsp
    f1b6:	48 89 bd 38 f1 ff ff 	mov    %rdi,-0xec8(%rbp)
    f1bd:	48 89 b5 30 f1 ff ff 	mov    %rsi,-0xed0(%rbp)
  std::fstream fs;
    f1c4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f1cb:	48 89 c7             	mov    %rax,%rdi
    f1ce:	e8 cd 52 ff ff       	call   44a0 <_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1Ev@plt>
  fs.open(filePath);
    f1d3:	be 10 00 00 00       	mov    $0x10,%esi
    f1d8:	bf 08 00 00 00       	mov    $0x8,%edi
    f1dd:	e8 b4 6c ff ff       	call   5e96 <_ZStorSt13_Ios_OpenmodeS_>
    f1e2:	89 c2                	mov    %eax,%edx
    f1e4:	48 8b 8d 30 f1 ff ff 	mov    -0xed0(%rbp),%rcx
    f1eb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f1f2:	48 89 ce             	mov    %rcx,%rsi
    f1f5:	48 89 c7             	mov    %rax,%rdi
    f1f8:	e8 73 53 ff ff       	call   4570 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE4openERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode@plt>
  if (!fs.is_open()) {
    f1fd:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f204:	48 89 c7             	mov    %rax,%rdi
    f207:	e8 84 54 ff ff       	call   4690 <_ZNSt13basic_fstreamIcSt11char_traitsIcEE7is_openEv@plt>
    f20c:	83 f0 01             	xor    $0x1,%eax
    f20f:	84 c0                	test   %al,%al
    f211:	0f 84 97 00 00 00    	je     f2ae <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x106>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    f217:	bf 10 00 00 00       	mov    $0x10,%edi
    f21c:	e8 4f 4f ff ff       	call   4170 <__cxa_allocate_exception@plt>
    f221:	48 89 c3             	mov    %rax,%rbx
    f224:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f22b:	48 8b 95 30 f1 ff ff 	mov    -0xed0(%rbp),%rdx
    f232:	48 8d 0d 3d a8 00 00 	lea    0xa83d(%rip),%rcx        # 19a76 <_ZN6__pstl9execution2v1L5unseqE+0x15f>
    f239:	48 89 ce             	mov    %rcx,%rsi
    f23c:	48 89 c7             	mov    %rax,%rdi
    f23f:	e8 a8 6c ff ff       	call   5eec <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
    f244:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f24b:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    f252:	ba 0a 00 00 00       	mov    $0xa,%edx
    f257:	48 89 ce             	mov    %rcx,%rsi
    f25a:	48 89 c7             	mov    %rax,%rdi
    f25d:	e8 1a 21 00 00       	call   1137c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>
    f262:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f269:	48 89 c6             	mov    %rax,%rsi
    f26c:	48 89 df             	mov    %rbx,%rdi
    f26f:	e8 cc 53 ff ff       	call   4640 <_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE@plt>
    f274:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    f27b:	48 89 c7             	mov    %rax,%rdi
    f27e:	e8 5d 4f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f283:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    f28a:	48 89 c7             	mov    %rax,%rdi
    f28d:	e8 4e 4f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    f292:	48 8b 05 0f 6d 01 00 	mov    0x16d0f(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
    f299:	48 89 c2             	mov    %rax,%rdx
    f29c:	48 8d 05 9d 6a 01 00 	lea    0x16a9d(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
    f2a3:	48 89 c6             	mov    %rax,%rsi
    f2a6:	48 89 df             	mov    %rbx,%rdi
    f2a9:	e8 c2 53 ff ff       	call   4670 <__cxa_throw@plt>
  }

  fs << "1. Instance extensions:\n";
    f2ae:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2b5:	48 83 c0 10          	add    $0x10,%rax
    f2b9:	48 8d 15 c6 a7 00 00 	lea    0xa7c6(%rip),%rdx        # 19a86 <_ZN6__pstl9execution2v1L5unseqE+0x16f>
    f2c0:	48 89 d6             	mov    %rdx,%rsi
    f2c3:	48 89 c7             	mov    %rax,%rdi
    f2c6:	e8 a5 50 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t1.1 Available:\n";
    f2cb:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f2d2:	48 83 c0 10          	add    $0x10,%rax
    f2d6:	48 8d 15 c2 a7 00 00 	lea    0xa7c2(%rip),%rdx        # 19a9f <_ZN6__pstl9execution2v1L5unseqE+0x188>
    f2dd:	48 89 d6             	mov    %rdx,%rsi
    f2e0:	48 89 c7             	mov    %rax,%rdi
    f2e3:	e8 88 50 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceExtensions = vkh::getAvailableInstanceExtensionList();
    f2e8:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f2ef:	be 00 00 00 00       	mov    $0x0,%esi
    f2f4:	48 89 c7             	mov    %rax,%rdi
    f2f7:	e8 a4 78 ff ff       	call   6ba0 <_ZN3vkh33getAvailableInstanceExtensionListEPKc>
  for (const auto &extension : availableInstanceExtensions) {
    f2fc:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    f303:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    f307:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f30b:	48 89 c7             	mov    %rax,%rdi
    f30e:	e8 0f 16 00 00       	call   10922 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    f313:	48 89 85 68 f9 ff ff 	mov    %rax,-0x698(%rbp)
    f31a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    f31e:	48 89 c7             	mov    %rax,%rdi
    f321:	e8 22 16 00 00       	call   10948 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    f326:	48 89 85 60 f9 ff ff 	mov    %rax,-0x6a0(%rbp)
    f32d:	eb 64                	jmp    f393 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1eb>
    f32f:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f336:	48 89 c7             	mov    %rax,%rdi
    f339:	e8 92 16 00 00       	call   109d0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f33e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    fs << "\t\t" << extension.extensionName << '\n';
    f345:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f34c:	48 83 c0 10          	add    $0x10,%rax
    f350:	48 8d 15 59 a7 00 00 	lea    0xa759(%rip),%rdx        # 19ab0 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f357:	48 89 d6             	mov    %rdx,%rsi
    f35a:	48 89 c7             	mov    %rax,%rdi
    f35d:	e8 0e 50 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f362:	48 89 c2             	mov    %rax,%rdx
    f365:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
    f36c:	48 89 c6             	mov    %rax,%rsi
    f36f:	48 89 d7             	mov    %rdx,%rdi
    f372:	e8 f9 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f377:	be 0a 00 00 00       	mov    $0xa,%esi
    f37c:	48 89 c7             	mov    %rax,%rdi
    f37f:	e8 fc 50 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extension : availableInstanceExtensions) {
    f384:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f38b:	48 89 c7             	mov    %rax,%rdi
    f38e:	e8 19 16 00 00       	call   109ac <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f393:	48 8d 95 60 f9 ff ff 	lea    -0x6a0(%rbp),%rdx
    f39a:	48 8d 85 68 f9 ff ff 	lea    -0x698(%rbp),%rax
    f3a1:	48 89 d6             	mov    %rdx,%rsi
    f3a4:	48 89 c7             	mov    %rax,%rdi
    f3a7:	e8 c5 15 00 00       	call   10971 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f3ac:	84 c0                	test   %al,%al
    f3ae:	0f 85 7b ff ff ff    	jne    f32f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x187>
  }
  fs << "\t1.2 Required:\n";
    f3b4:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f3bb:	48 83 c0 10          	add    $0x10,%rax
    f3bf:	48 8d 15 ed a6 00 00 	lea    0xa6ed(%rip),%rdx        # 19ab3 <_ZN6__pstl9execution2v1L5unseqE+0x19c>
    f3c6:	48 89 d6             	mov    %rdx,%rsi
    f3c9:	48 89 c7             	mov    %rax,%rdi
    f3cc:	e8 9f 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &extensionName : instanceExtensions) {
    f3d1:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f3d8:	48 83 c0 10          	add    $0x10,%rax
    f3dc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
    f3e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3e4:	48 89 c7             	mov    %rax,%rdi
    f3e7:	e8 94 10 00 00       	call   10480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    f3ec:	48 89 85 58 f9 ff ff 	mov    %rax,-0x6a8(%rbp)
    f3f3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    f3f7:	48 89 c7             	mov    %rax,%rdi
    f3fa:	e8 a7 10 00 00       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    f3ff:	48 89 85 50 f9 ff ff 	mov    %rax,-0x6b0(%rbp)
    f406:	eb 67                	jmp    f46f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2c7>
    f408:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f40f:	48 89 c7             	mov    %rax,%rdi
    f412:	e8 13 11 00 00       	call   1052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f417:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)
    fs << "\t\t" << extensionName << '\n';
    f41e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f425:	48 83 c0 10          	add    $0x10,%rax
    f429:	48 8d 15 80 a6 00 00 	lea    0xa680(%rip),%rdx        # 19ab0 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f430:	48 89 d6             	mov    %rdx,%rsi
    f433:	48 89 c7             	mov    %rax,%rdi
    f436:	e8 35 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f43b:	48 89 c2             	mov    %rax,%rdx
    f43e:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
    f445:	48 8b 00             	mov    (%rax),%rax
    f448:	48 89 c6             	mov    %rax,%rsi
    f44b:	48 89 d7             	mov    %rdx,%rdi
    f44e:	e8 1d 4f ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f453:	be 0a 00 00 00       	mov    $0xa,%esi
    f458:	48 89 c7             	mov    %rax,%rdi
    f45b:	e8 20 50 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &extensionName : instanceExtensions) {
    f460:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f467:	48 89 c7             	mov    %rax,%rdi
    f46a:	e8 9b 10 00 00       	call   1050a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    f46f:	48 8d 95 50 f9 ff ff 	lea    -0x6b0(%rbp),%rdx
    f476:	48 8d 85 58 f9 ff ff 	lea    -0x6a8(%rbp),%rax
    f47d:	48 89 d6             	mov    %rdx,%rsi
    f480:	48 89 c7             	mov    %rax,%rdi
    f483:	e8 47 10 00 00       	call   104cf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    f488:	84 c0                	test   %al,%al
    f48a:	0f 85 78 ff ff ff    	jne    f408 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x260>
  }
  fs << '\n';
    f490:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f497:	48 83 c0 10          	add    $0x10,%rax
    f49b:	be 0a 00 00 00       	mov    $0xa,%esi
    f4a0:	48 89 c7             	mov    %rax,%rdi
    f4a3:	e8 d8 4f ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "2. Instance layers:\n";
    f4a8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f4af:	48 83 c0 10          	add    $0x10,%rax
    f4b3:	48 8d 15 09 a6 00 00 	lea    0xa609(%rip),%rdx        # 19ac3 <_ZN6__pstl9execution2v1L5unseqE+0x1ac>
    f4ba:	48 89 d6             	mov    %rdx,%rsi
    f4bd:	48 89 c7             	mov    %rax,%rdi
    f4c0:	e8 ab 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  fs << "\t2.1 Available:\n";
    f4c5:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f4cc:	48 83 c0 10          	add    $0x10,%rax
    f4d0:	48 8d 15 01 a6 00 00 	lea    0xa601(%rip),%rdx        # 19ad8 <_ZN6__pstl9execution2v1L5unseqE+0x1c1>
    f4d7:	48 89 d6             	mov    %rdx,%rsi
    f4da:	48 89 c7             	mov    %rax,%rdi
    f4dd:	e8 8e 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto availableInstanceLayers = vkh::getAvailableInstanceLayerList();
    f4e2:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f4e9:	48 89 c7             	mov    %rax,%rdi
    f4ec:	e8 49 7a ff ff       	call   6f3a <_ZN3vkh29getAvailableInstanceLayerListEv>
  for (const auto &layer : availableInstanceLayers) {
    f4f1:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    f4f8:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    f4fc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f500:	48 89 c7             	mov    %rax,%rdi
    f503:	e8 2c d5 ff ff       	call   ca34 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE5beginEv>
    f508:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
    f50f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    f513:	48 89 c7             	mov    %rax,%rdi
    f516:	e8 3f d5 ff ff       	call   ca5a <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EE3endEv>
    f51b:	48 89 85 40 f9 ff ff 	mov    %rax,-0x6c0(%rbp)
    f522:	eb 5e                	jmp    f582 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x3da>
    f524:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f52b:	48 89 c7             	mov    %rax,%rdi
    f52e:	e8 af d5 ff ff       	call   cae2 <_ZNK9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    f533:	48 89 45 80          	mov    %rax,-0x80(%rbp)
    fs << "\t\t" << layer.layerName << '\n';
    f537:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f53e:	48 83 c0 10          	add    $0x10,%rax
    f542:	48 8d 15 67 a5 00 00 	lea    0xa567(%rip),%rdx        # 19ab0 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f549:	48 89 d6             	mov    %rdx,%rsi
    f54c:	48 89 c7             	mov    %rax,%rdi
    f54f:	e8 1c 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f554:	48 89 c2             	mov    %rax,%rdx
    f557:	48 8b 45 80          	mov    -0x80(%rbp),%rax
    f55b:	48 89 c6             	mov    %rax,%rsi
    f55e:	48 89 d7             	mov    %rdx,%rdi
    f561:	e8 0a 4e ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f566:	be 0a 00 00 00       	mov    $0xa,%esi
    f56b:	48 89 c7             	mov    %rax,%rdi
    f56e:	e8 0d 4f ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : availableInstanceLayers) {
    f573:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f57a:	48 89 c7             	mov    %rax,%rdi
    f57d:	e8 3c d5 ff ff       	call   cabe <_ZN9__gnu_cxx17__normal_iteratorIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    f582:	48 8d 95 40 f9 ff ff 	lea    -0x6c0(%rbp),%rdx
    f589:	48 8d 85 48 f9 ff ff 	lea    -0x6b8(%rbp),%rax
    f590:	48 89 d6             	mov    %rdx,%rsi
    f593:	48 89 c7             	mov    %rax,%rdi
    f596:	e8 e8 d4 ff ff       	call   ca83 <_ZN9__gnu_cxxneIP17VkLayerPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    f59b:	84 c0                	test   %al,%al
    f59d:	75 85                	jne    f524 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x37c>
  }
  fs << "\t2.2 Required:\n";
    f59f:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f5a6:	48 83 c0 10          	add    $0x10,%rax
    f5aa:	48 8d 15 38 a5 00 00 	lea    0xa538(%rip),%rdx        # 19ae9 <_ZN6__pstl9execution2v1L5unseqE+0x1d2>
    f5b1:	48 89 d6             	mov    %rdx,%rsi
    f5b4:	48 89 c7             	mov    %rax,%rdi
    f5b7:	e8 b4 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  for (const auto &layer : instanceLayers) {
    f5bc:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f5c3:	48 83 c0 28          	add    $0x28,%rax
    f5c7:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
    f5cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f5cf:	48 89 c7             	mov    %rax,%rdi
    f5d2:	e8 ef 1d 00 00       	call   113c6 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>
    f5d7:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
    f5de:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
    f5e2:	48 89 c7             	mov    %rax,%rdi
    f5e5:	e8 02 1e 00 00       	call   113ec <_ZNKSt6vectorIPKcSaIS1_EE3endEv>
    f5ea:	48 89 85 30 f9 ff ff 	mov    %rax,-0x6d0(%rbp)
    f5f1:	eb 61                	jmp    f654 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x4ac>
    f5f3:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f5fa:	48 89 c7             	mov    %rax,%rdi
    f5fd:	e8 6e 1e 00 00       	call   11470 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>
    f602:	48 89 45 88          	mov    %rax,-0x78(%rbp)
    fs << "\t\t" << layer << '\n';
    f606:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f60d:	48 83 c0 10          	add    $0x10,%rax
    f611:	48 8d 15 98 a4 00 00 	lea    0xa498(%rip),%rdx        # 19ab0 <_ZN6__pstl9execution2v1L5unseqE+0x199>
    f618:	48 89 d6             	mov    %rdx,%rsi
    f61b:	48 89 c7             	mov    %rax,%rdi
    f61e:	e8 4d 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f623:	48 89 c2             	mov    %rax,%rdx
    f626:	48 8b 45 88          	mov    -0x78(%rbp),%rax
    f62a:	48 8b 00             	mov    (%rax),%rax
    f62d:	48 89 c6             	mov    %rax,%rsi
    f630:	48 89 d7             	mov    %rdx,%rdi
    f633:	e8 38 4d ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f638:	be 0a 00 00 00       	mov    $0xa,%esi
    f63d:	48 89 c7             	mov    %rax,%rdi
    f640:	e8 3b 4e ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
  for (const auto &layer : instanceLayers) {
    f645:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f64c:	48 89 c7             	mov    %rax,%rdi
    f64f:	e8 fc 1d 00 00       	call   11450 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>
    f654:	48 8d 95 30 f9 ff ff 	lea    -0x6d0(%rbp),%rdx
    f65b:	48 8d 85 38 f9 ff ff 	lea    -0x6c8(%rbp),%rax
    f662:	48 89 d6             	mov    %rdx,%rsi
    f665:	48 89 c7             	mov    %rax,%rdi
    f668:	e8 a8 1d 00 00       	call   11415 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>
    f66d:	84 c0                	test   %al,%al
    f66f:	75 82                	jne    f5f3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x44b>
  }
  fs << '\n';
    f671:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f678:	48 83 c0 10          	add    $0x10,%rax
    f67c:	be 0a 00 00 00       	mov    $0xa,%esi
    f681:	48 89 c7             	mov    %rax,%rdi
    f684:	e8 f7 4d ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>

  fs << "3. Physical devices:\n";
    f689:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f690:	48 83 c0 10          	add    $0x10,%rax
    f694:	48 8d 15 5e a4 00 00 	lea    0xa45e(%rip),%rdx        # 19af9 <_ZN6__pstl9execution2v1L5unseqE+0x1e2>
    f69b:	48 89 d6             	mov    %rdx,%rsi
    f69e:	48 89 c7             	mov    %rax,%rdi
    f6a1:	e8 ca 4c ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  auto physicalDeviceList = vkh::getPhysicalDeviceList(instance);
    f6a6:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f6ad:	48 8b 50 08          	mov    0x8(%rax),%rdx
    f6b1:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f6b8:	48 89 d6             	mov    %rdx,%rsi
    f6bb:	48 89 c7             	mov    %rax,%rdi
    f6be:	e8 23 79 ff ff       	call   6fe6 <_ZN3vkh21getPhysicalDeviceListEP12VkInstance_T>
  auto selectedDeviceProperties =
      vkh::getPhysicalDevicePropertyList(physicalDevice);
    f6c3:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    f6ca:	48 8b 50 58          	mov    0x58(%rax),%rdx
    f6ce:	48 8d 85 70 f9 ff ff 	lea    -0x690(%rbp),%rax
    f6d5:	48 89 d6             	mov    %rdx,%rsi
    f6d8:	48 89 c7             	mov    %rax,%rdi
    f6db:	e8 75 7a ff ff       	call   7155 <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_T>
  size_t index = 1;
    f6e0:	48 c7 45 e8 01 00 00 	movq   $0x1,-0x18(%rbp)
    f6e7:	00 
  size_t selectedDeviceIndex = 0;
    f6e8:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    f6ef:	00 
  for (const auto &physDev : physicalDeviceList) {
    f6f0:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    f6f7:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
    f6fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f6ff:	48 89 c7             	mov    %rax,%rdi
    f702:	e8 49 10 00 00       	call   10750 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>
    f707:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
    f70e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    f712:	48 89 c7             	mov    %rax,%rdi
    f715:	e8 5c 10 00 00       	call   10776 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>
    f71a:	48 89 85 20 f9 ff ff 	mov    %rax,-0x6e0(%rbp)
    f721:	e9 c7 06 00 00       	jmp    fded <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xc45>
    f726:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    f72d:	48 89 c7             	mov    %rax,%rdi
    f730:	e8 c5 10 00 00       	call   107fa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>
    f735:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    std::string selectStr = "";
    f739:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f740:	48 89 c7             	mov    %rax,%rdi
    f743:	e8 98 4f ff ff       	call   46e0 <_ZNSaIcEC1Ev@plt>
    f748:	48 8d 95 6f ff ff ff 	lea    -0x91(%rbp),%rdx
    f74f:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f756:	48 8d 0d b2 a3 00 00 	lea    0xa3b2(%rip),%rcx        # 19b0f <_ZN6__pstl9execution2v1L5unseqE+0x1f8>
    f75d:	48 89 ce             	mov    %rcx,%rsi
    f760:	48 89 c7             	mov    %rax,%rdi
    f763:	e8 b8 53 ff ff       	call   4b20 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1IS3_EEPKcRKS3_>
    f768:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    f76f:	48 89 c7             	mov    %rax,%rdi
    f772:	e8 a9 4c ff ff       	call   4420 <_ZNSaIcED1Ev@plt>

    VkPhysicalDeviceVulkan11Properties vk11Props{};
    f777:	48 8d 95 60 f1 ff ff 	lea    -0xea0(%rbp),%rdx
    f77e:	b8 00 00 00 00       	mov    $0x0,%eax
    f783:	b9 0e 00 00 00       	mov    $0xe,%ecx
    f788:	48 89 d7             	mov    %rdx,%rdi
    f78b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk11Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES;
    f78e:	c7 85 60 f1 ff ff 32 	movl   $0x32,-0xea0(%rbp)
    f795:	00 00 00 
    vk11Props.pNext = nullptr;
    f798:	48 c7 85 68 f1 ff ff 	movq   $0x0,-0xe98(%rbp)
    f79f:	00 00 00 00 

    VkPhysicalDeviceVulkan12Properties vk12Props{};
    f7a3:	48 8d 95 b0 f2 ff ff 	lea    -0xd50(%rbp),%rdx
    f7aa:	b8 00 00 00 00       	mov    $0x0,%eax
    f7af:	b9 5c 00 00 00       	mov    $0x5c,%ecx
    f7b4:	48 89 d7             	mov    %rdx,%rdi
    f7b7:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk12Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES;
    f7ba:	c7 85 b0 f2 ff ff 34 	movl   $0x34,-0xd50(%rbp)
    f7c1:	00 00 00 
    vk12Props.pNext = &vk11Props;
    f7c4:	48 8d 85 60 f1 ff ff 	lea    -0xea0(%rbp),%rax
    f7cb:	48 89 85 b8 f2 ff ff 	mov    %rax,-0xd48(%rbp)

    VkPhysicalDeviceVulkan13Properties vk13Props{};
    f7d2:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f7d9:	b8 00 00 00 00       	mov    $0x0,%eax
    f7de:	b9 1b 00 00 00       	mov    $0x1b,%ecx
    f7e3:	48 89 d7             	mov    %rdx,%rdi
    f7e6:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    vk13Props.sType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES;
    f7e9:	c7 85 d0 f1 ff ff 36 	movl   $0x36,-0xe30(%rbp)
    f7f0:	00 00 00 
    vk13Props.pNext = &vk12Props;
    f7f3:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    f7fa:	48 89 85 d8 f1 ff ff 	mov    %rax,-0xe28(%rbp)

    auto deviceProperties =
        vkh::getPhysicalDevicePropertyList(physDev, &vk13Props);
    f801:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    f805:	48 8b 08             	mov    (%rax),%rcx
    f808:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f80f:	48 8d 95 d0 f1 ff ff 	lea    -0xe30(%rbp),%rdx
    f816:	48 89 ce             	mov    %rcx,%rsi
    f819:	48 89 c7             	mov    %rax,%rdi
    f81c:	e8 5e 79 ff ff       	call   717f <_ZN3vkh29getPhysicalDevicePropertyListEP18VkPhysicalDevice_TPv>

    if (deviceProperties.properties.deviceID ==
    f821:	8b 95 ac f5 ff ff    	mov    -0xa54(%rbp),%edx
        selectedDeviceProperties.deviceID) {
    f827:	8b 85 7c f9 ff ff    	mov    -0x684(%rbp),%eax
    if (deviceProperties.properties.deviceID ==
    f82d:	39 c2                	cmp    %eax,%edx
    f82f:	75 08                	jne    f839 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x691>
      selectedDeviceIndex = index;
    f831:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f835:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    }
    if (selectedDeviceIndex == index) {
    f839:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    f83d:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    f841:	75 19                	jne    f85c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x6b4>
      selectStr = " (selected)";
    f843:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f84a:	48 8d 15 bf a2 00 00 	lea    0xa2bf(%rip),%rdx        # 19b10 <_ZN6__pstl9execution2v1L5unseqE+0x1f9>
    f851:	48 89 d6             	mov    %rdx,%rsi
    f854:	48 89 c7             	mov    %rax,%rdi
    f857:	e8 04 4d ff ff       	call   4560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    }
    fs << "\t3." << index << " Device " << index << selectStr << ":\n";
    f85c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f863:	48 83 c0 10          	add    $0x10,%rax
    f867:	48 8d 15 ae a2 00 00 	lea    0xa2ae(%rip),%rdx        # 19b1c <_ZN6__pstl9execution2v1L5unseqE+0x205>
    f86e:	48 89 d6             	mov    %rdx,%rsi
    f871:	48 89 c7             	mov    %rax,%rdi
    f874:	e8 f7 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f879:	48 89 c2             	mov    %rax,%rdx
    f87c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f880:	48 89 c6             	mov    %rax,%rsi
    f883:	48 89 d7             	mov    %rdx,%rdi
    f886:	e8 05 48 ff ff       	call   4090 <_ZNSolsEm@plt>
    f88b:	48 89 c2             	mov    %rax,%rdx
    f88e:	48 8d 05 8b a2 00 00 	lea    0xa28b(%rip),%rax        # 19b20 <_ZN6__pstl9execution2v1L5unseqE+0x209>
    f895:	48 89 c6             	mov    %rax,%rsi
    f898:	48 89 d7             	mov    %rdx,%rdi
    f89b:	e8 d0 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8a0:	48 89 c2             	mov    %rax,%rdx
    f8a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f8a7:	48 89 c6             	mov    %rax,%rsi
    f8aa:	48 89 d7             	mov    %rdx,%rdi
    f8ad:	e8 de 47 ff ff       	call   4090 <_ZNSolsEm@plt>
    f8b2:	48 89 c2             	mov    %rax,%rdx
    f8b5:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    f8bc:	48 89 c6             	mov    %rax,%rsi
    f8bf:	48 89 d7             	mov    %rdx,%rdi
    f8c2:	e8 49 4a ff ff       	call   4310 <_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt>
    f8c7:	48 89 c2             	mov    %rax,%rdx
    f8ca:	48 8d 05 58 a2 00 00 	lea    0xa258(%rip),%rax        # 19b29 <_ZN6__pstl9execution2v1L5unseqE+0x212>
    f8d1:	48 89 c6             	mov    %rax,%rsi
    f8d4:	48 89 d7             	mov    %rdx,%rdi
    f8d7:	e8 94 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t3." << index << ".1 Device properties:\n";
    f8dc:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f8e3:	48 83 c0 10          	add    $0x10,%rax
    f8e7:	48 8d 15 3e a2 00 00 	lea    0xa23e(%rip),%rdx        # 19b2c <_ZN6__pstl9execution2v1L5unseqE+0x215>
    f8ee:	48 89 d6             	mov    %rdx,%rsi
    f8f1:	48 89 c7             	mov    %rax,%rdi
    f8f4:	e8 77 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f8f9:	48 89 c2             	mov    %rax,%rdx
    f8fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    f900:	48 89 c6             	mov    %rax,%rsi
    f903:	48 89 d7             	mov    %rdx,%rdi
    f906:	e8 85 47 ff ff       	call   4090 <_ZNSolsEm@plt>
    f90b:	48 89 c2             	mov    %rax,%rdx
    f90e:	48 8d 05 1c a2 00 00 	lea    0xa21c(%rip),%rax        # 19b31 <_ZN6__pstl9execution2v1L5unseqE+0x21a>
    f915:	48 89 c6             	mov    %rax,%rsi
    f918:	48 89 d7             	mov    %rdx,%rdi
    f91b:	e8 50 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fs << "\t\t\tDevice ID: " << deviceProperties.properties.deviceID << '\n';
    f920:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f927:	48 83 c0 10          	add    $0x10,%rax
    f92b:	48 8d 15 16 a2 00 00 	lea    0xa216(%rip),%rdx        # 19b48 <_ZN6__pstl9execution2v1L5unseqE+0x231>
    f932:	48 89 d6             	mov    %rdx,%rsi
    f935:	48 89 c7             	mov    %rax,%rdi
    f938:	e8 33 4a ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f93d:	48 89 c2             	mov    %rax,%rdx
    f940:	8b 85 ac f5 ff ff    	mov    -0xa54(%rbp),%eax
    f946:	89 c6                	mov    %eax,%esi
    f948:	48 89 d7             	mov    %rdx,%rdi
    f94b:	e8 00 4c ff ff       	call   4550 <_ZNSolsEj@plt>
    f950:	be 0a 00 00 00       	mov    $0xa,%esi
    f955:	48 89 c7             	mov    %rax,%rdi
    f958:	e8 23 4b ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice name: " << deviceProperties.properties.deviceName
       << '\n';
    f95d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f964:	48 83 c0 10          	add    $0x10,%rax
    f968:	48 8d 15 e8 a1 00 00 	lea    0xa1e8(%rip),%rdx        # 19b57 <_ZN6__pstl9execution2v1L5unseqE+0x240>
    f96f:	48 89 d6             	mov    %rdx,%rsi
    f972:	48 89 c7             	mov    %rax,%rdi
    f975:	e8 f6 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f97a:	48 89 c2             	mov    %rax,%rdx
    f97d:	48 8d 85 90 f5 ff ff 	lea    -0xa70(%rbp),%rax
    f984:	48 83 c0 24          	add    $0x24,%rax
    f988:	48 89 c6             	mov    %rax,%rsi
    f98b:	48 89 d7             	mov    %rdx,%rdi
    f98e:	e8 dd 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    f993:	be 0a 00 00 00       	mov    $0xa,%esi
    f998:	48 89 c7             	mov    %rax,%rdi
    f99b:	e8 e0 4a ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDevice type: ";
    f9a0:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9a7:	48 83 c0 10          	add    $0x10,%rax
    f9ab:	48 8d 15 b6 a1 00 00 	lea    0xa1b6(%rip),%rdx        # 19b68 <_ZN6__pstl9execution2v1L5unseqE+0x251>
    f9b2:	48 89 d6             	mov    %rdx,%rsi
    f9b5:	48 89 c7             	mov    %rax,%rdi
    f9b8:	e8 b3 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    switch (deviceProperties.properties.deviceType) {
    f9bd:	8b 85 b0 f5 ff ff    	mov    -0xa50(%rbp),%eax
    f9c3:	83 f8 04             	cmp    $0x4,%eax
    f9c6:	0f 84 80 00 00 00    	je     fa4c <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8a4>
    f9cc:	83 f8 04             	cmp    $0x4,%eax
    f9cf:	0f 8f 96 00 00 00    	jg     fa6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f9d5:	83 f8 03             	cmp    $0x3,%eax
    f9d8:	74 53                	je     fa2d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x885>
    f9da:	83 f8 03             	cmp    $0x3,%eax
    f9dd:	0f 8f 88 00 00 00    	jg     fa6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    f9e3:	83 f8 01             	cmp    $0x1,%eax
    f9e6:	74 07                	je     f9ef <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x847>
    f9e8:	83 f8 02             	cmp    $0x2,%eax
    f9eb:	74 21                	je     fa0e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x866>
    f9ed:	eb 7c                	jmp    fa6b <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8c3>
    case 1:
      fs << "Integrated GPU\n";
    f9ef:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    f9f6:	48 83 c0 10          	add    $0x10,%rax
    f9fa:	48 8d 15 78 a1 00 00 	lea    0xa178(%rip),%rdx        # 19b79 <_ZN6__pstl9execution2v1L5unseqE+0x262>
    fa01:	48 89 d6             	mov    %rdx,%rsi
    fa04:	48 89 c7             	mov    %rax,%rdi
    fa07:	e8 64 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fa0c:	eb 7b                	jmp    fa89 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 2:
      fs << "Discrete GPU\n";
    fa0e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa15:	48 83 c0 10          	add    $0x10,%rax
    fa19:	48 8d 15 69 a1 00 00 	lea    0xa169(%rip),%rdx        # 19b89 <_ZN6__pstl9execution2v1L5unseqE+0x272>
    fa20:	48 89 d6             	mov    %rdx,%rsi
    fa23:	48 89 c7             	mov    %rax,%rdi
    fa26:	e8 45 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fa2b:	eb 5c                	jmp    fa89 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 3:
      fs << "Virtual GPU\n";
    fa2d:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa34:	48 83 c0 10          	add    $0x10,%rax
    fa38:	48 8d 15 58 a1 00 00 	lea    0xa158(%rip),%rdx        # 19b97 <_ZN6__pstl9execution2v1L5unseqE+0x280>
    fa3f:	48 89 d6             	mov    %rdx,%rsi
    fa42:	48 89 c7             	mov    %rax,%rdi
    fa45:	e8 26 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fa4a:	eb 3d                	jmp    fa89 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    case 4:
      fs << "CPU\n";
    fa4c:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa53:	48 83 c0 10          	add    $0x10,%rax
    fa57:	48 8d 15 46 a1 00 00 	lea    0xa146(%rip),%rdx        # 19ba4 <_ZN6__pstl9execution2v1L5unseqE+0x28d>
    fa5e:	48 89 d6             	mov    %rdx,%rsi
    fa61:	48 89 c7             	mov    %rax,%rdi
    fa64:	e8 07 49 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fa69:	eb 1e                	jmp    fa89 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x8e1>
    default:
      fs << "Other\n";
    fa6b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa72:	48 83 c0 10          	add    $0x10,%rax
    fa76:	48 8d 15 2c a1 00 00 	lea    0xa12c(%rip),%rdx        # 19ba9 <_ZN6__pstl9execution2v1L5unseqE+0x292>
    fa7d:	48 89 d6             	mov    %rdx,%rsi
    fa80:	48 89 c7             	mov    %rax,%rdi
    fa83:	e8 e8 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      break;
    fa88:	90                   	nop
    }
    fs << "\t\t\tDriver ID: " << vk12Props.driverID << '\n';
    fa89:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fa90:	48 83 c0 10          	add    $0x10,%rax
    fa94:	48 8d 15 15 a1 00 00 	lea    0xa115(%rip),%rdx        # 19bb0 <_ZN6__pstl9execution2v1L5unseqE+0x299>
    fa9b:	48 89 d6             	mov    %rdx,%rsi
    fa9e:	48 89 c7             	mov    %rax,%rdi
    faa1:	e8 ca 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    faa6:	8b 95 c0 f2 ff ff    	mov    -0xd40(%rbp),%edx
    faac:	89 d6                	mov    %edx,%esi
    faae:	48 89 c7             	mov    %rax,%rdi
    fab1:	e8 ea 4b ff ff       	call   46a0 <_ZNSolsEi@plt>
    fab6:	be 0a 00 00 00       	mov    $0xa,%esi
    fabb:	48 89 c7             	mov    %rax,%rdi
    fabe:	e8 bd 49 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver name: " << vk12Props.driverName << '\n';
    fac3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    faca:	48 83 c0 10          	add    $0x10,%rax
    face:	48 8d 15 ea a0 00 00 	lea    0xa0ea(%rip),%rdx        # 19bbf <_ZN6__pstl9execution2v1L5unseqE+0x2a8>
    fad5:	48 89 d6             	mov    %rdx,%rsi
    fad8:	48 89 c7             	mov    %rax,%rdi
    fadb:	e8 90 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fae0:	48 89 c2             	mov    %rax,%rdx
    fae3:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    faea:	48 83 c0 14          	add    $0x14,%rax
    faee:	48 89 c6             	mov    %rax,%rsi
    faf1:	48 89 d7             	mov    %rdx,%rdi
    faf4:	e8 77 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    faf9:	be 0a 00 00 00       	mov    $0xa,%esi
    fafe:	48 89 c7             	mov    %rax,%rdi
    fb01:	e8 7a 49 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t\tDriver version: " << vk12Props.driverInfo << '\n';
    fb06:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb0d:	48 83 c0 10          	add    $0x10,%rax
    fb11:	48 8d 15 b8 a0 00 00 	lea    0xa0b8(%rip),%rdx        # 19bd0 <_ZN6__pstl9execution2v1L5unseqE+0x2b9>
    fb18:	48 89 d6             	mov    %rdx,%rsi
    fb1b:	48 89 c7             	mov    %rax,%rdi
    fb1e:	e8 4d 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb23:	48 89 c2             	mov    %rax,%rdx
    fb26:	48 8d 85 b0 f2 ff ff 	lea    -0xd50(%rbp),%rax
    fb2d:	48 05 14 01 00 00    	add    $0x114,%rax
    fb33:	48 89 c6             	mov    %rax,%rsi
    fb36:	48 89 d7             	mov    %rdx,%rdi
    fb39:	e8 32 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb3e:	be 0a 00 00 00       	mov    $0xa,%esi
    fb43:	48 89 c7             	mov    %rax,%rdi
    fb46:	e8 35 49 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    // fs << "\t\t\tDriver version: " << vk13Props. << '\n';
    fs << "\t\t\tMaximum memory allocation size: "
    fb4b:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb52:	48 83 c0 10          	add    $0x10,%rax
    fb56:	48 8d 15 8b a0 00 00 	lea    0xa08b(%rip),%rdx        # 19be8 <_ZN6__pstl9execution2v1L5unseqE+0x2d1>
    fb5d:	48 89 d6             	mov    %rdx,%rsi
    fb60:	48 89 c7             	mov    %rax,%rdi
    fb63:	e8 08 48 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fb68:	48 89 c2             	mov    %rax,%rdx
       << vk11Props.maxMemoryAllocationSize << '\n';
    fb6b:	48 8b 85 c8 f1 ff ff 	mov    -0xe38(%rbp),%rax
    fb72:	48 89 c6             	mov    %rax,%rsi
    fb75:	48 89 d7             	mov    %rdx,%rdi
    fb78:	e8 13 45 ff ff       	call   4090 <_ZNSolsEm@plt>
    fb7d:	be 0a 00 00 00       	mov    $0xa,%esi
    fb82:	48 89 c7             	mov    %rax,%rdi
    fb85:	e8 f6 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fs << "\t\t3." << index << ".2 Available device extensions:\n";
    fb8a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fb91:	48 83 c0 10          	add    $0x10,%rax
    fb95:	48 8d 15 90 9f 00 00 	lea    0x9f90(%rip),%rdx        # 19b2c <_ZN6__pstl9execution2v1L5unseqE+0x215>
    fb9c:	48 89 d6             	mov    %rdx,%rsi
    fb9f:	48 89 c7             	mov    %rax,%rdi
    fba2:	e8 c9 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fba7:	48 89 c2             	mov    %rax,%rdx
    fbaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fbae:	48 89 c6             	mov    %rax,%rsi
    fbb1:	48 89 d7             	mov    %rdx,%rdi
    fbb4:	e8 d7 44 ff ff       	call   4090 <_ZNSolsEm@plt>
    fbb9:	48 89 c2             	mov    %rax,%rdx
    fbbc:	48 8d 05 4d a0 00 00 	lea    0xa04d(%rip),%rax        # 19c10 <_ZN6__pstl9execution2v1L5unseqE+0x2f9>
    fbc3:	48 89 c6             	mov    %rax,%rsi
    fbc6:	48 89 d7             	mov    %rdx,%rdi
    fbc9:	e8 a2 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    auto availableDeviceExtensions =
        vkh::getAvailableDeviceExtensionList(physDev);
    fbce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
    fbd2:	48 8b 08             	mov    (%rax),%rcx
    fbd5:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fbdc:	ba 00 00 00 00       	mov    $0x0,%edx
    fbe1:	48 89 ce             	mov    %rcx,%rsi
    fbe4:	48 89 c7             	mov    %rax,%rdi
    fbe7:	e8 25 71 ff ff       	call   6d11 <_ZN3vkh31getAvailableDeviceExtensionListEP18VkPhysicalDevice_TPKc>
    for (const auto &extension : availableDeviceExtensions) {
    fbec:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fbf3:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    fbf7:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fbfb:	48 89 c7             	mov    %rax,%rdi
    fbfe:	e8 1f 0d 00 00       	call   10922 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>
    fc03:	48 89 85 f8 f8 ff ff 	mov    %rax,-0x708(%rbp)
    fc0a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
    fc0e:	48 89 c7             	mov    %rax,%rdi
    fc11:	e8 32 0d 00 00       	call   10948 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>
    fc16:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
    fc1d:	eb 5e                	jmp    fc7d <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xad5>
    fc1f:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fc26:	48 89 c7             	mov    %rax,%rdi
    fc29:	e8 a2 0d 00 00       	call   109d0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>
    fc2e:	48 89 45 90          	mov    %rax,-0x70(%rbp)
      fs << "\t\t\t" << extension.extensionName << '\n';
    fc32:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fc39:	48 83 c0 10          	add    $0x10,%rax
    fc3d:	48 8d 15 ed 9f 00 00 	lea    0x9fed(%rip),%rdx        # 19c31 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
    fc44:	48 89 d6             	mov    %rdx,%rsi
    fc47:	48 89 c7             	mov    %rax,%rdi
    fc4a:	e8 21 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc4f:	48 89 c2             	mov    %rax,%rdx
    fc52:	48 8b 45 90          	mov    -0x70(%rbp),%rax
    fc56:	48 89 c6             	mov    %rax,%rsi
    fc59:	48 89 d7             	mov    %rdx,%rdi
    fc5c:	e8 0f 47 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fc61:	be 0a 00 00 00       	mov    $0xa,%esi
    fc66:	48 89 c7             	mov    %rax,%rdi
    fc69:	e8 12 48 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    for (const auto &extension : availableDeviceExtensions) {
    fc6e:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fc75:	48 89 c7             	mov    %rax,%rdi
    fc78:	e8 2f 0d 00 00       	call   109ac <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>
    fc7d:	48 8d 95 f0 f8 ff ff 	lea    -0x710(%rbp),%rdx
    fc84:	48 8d 85 f8 f8 ff ff 	lea    -0x708(%rbp),%rax
    fc8b:	48 89 d6             	mov    %rdx,%rsi
    fc8e:	48 89 c7             	mov    %rax,%rdi
    fc91:	e8 db 0c 00 00       	call   10971 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>
    fc96:	84 c0                	test   %al,%al
    fc98:	75 85                	jne    fc1f <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xa77>
    }
    if (selectedDeviceIndex == index) {
    fc9a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    fc9e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
    fca2:	0f 85 fb 00 00 00    	jne    fda3 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbfb>
      fs << "\t\t3." << index << ".3 Required device extensions:\n";
    fca8:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fcaf:	48 83 c0 10          	add    $0x10,%rax
    fcb3:	48 8d 15 72 9e 00 00 	lea    0x9e72(%rip),%rdx        # 19b2c <_ZN6__pstl9execution2v1L5unseqE+0x215>
    fcba:	48 89 d6             	mov    %rdx,%rsi
    fcbd:	48 89 c7             	mov    %rax,%rdi
    fcc0:	e8 ab 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fcc5:	48 89 c2             	mov    %rax,%rdx
    fcc8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    fccc:	48 89 c6             	mov    %rax,%rsi
    fccf:	48 89 d7             	mov    %rdx,%rdi
    fcd2:	e8 b9 43 ff ff       	call   4090 <_ZNSolsEm@plt>
    fcd7:	48 89 c2             	mov    %rax,%rdx
    fcda:	48 8d 05 57 9f 00 00 	lea    0x9f57(%rip),%rax        # 19c38 <_ZN6__pstl9execution2v1L5unseqE+0x321>
    fce1:	48 89 c6             	mov    %rax,%rsi
    fce4:	48 89 d7             	mov    %rdx,%rdi
    fce7:	e8 84 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
      for (const auto &extension : deviceExtensions) {
    fcec:	48 8b 85 38 f1 ff ff 	mov    -0xec8(%rbp),%rax
    fcf3:	48 05 88 00 00 00    	add    $0x88,%rax
    fcf9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    fcfd:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fd01:	48 89 c7             	mov    %rax,%rdi
    fd04:	e8 77 07 00 00       	call   10480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
    fd09:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
    fd10:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    fd14:	48 89 c7             	mov    %rax,%rdi
    fd17:	e8 8a 07 00 00       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
    fd1c:	48 89 85 e0 f8 ff ff 	mov    %rax,-0x720(%rbp)
    fd23:	eb 61                	jmp    fd86 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xbde>
    fd25:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fd2c:	48 89 c7             	mov    %rax,%rdi
    fd2f:	e8 f6 07 00 00       	call   1052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
    fd34:	48 89 45 98          	mov    %rax,-0x68(%rbp)
        fs << "\t\t\t" << extension << '\n';
    fd38:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fd3f:	48 83 c0 10          	add    $0x10,%rax
    fd43:	48 8d 15 e7 9e 00 00 	lea    0x9ee7(%rip),%rdx        # 19c31 <_ZN6__pstl9execution2v1L5unseqE+0x31a>
    fd4a:	48 89 d6             	mov    %rdx,%rsi
    fd4d:	48 89 c7             	mov    %rax,%rdi
    fd50:	e8 1b 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd55:	48 89 c2             	mov    %rax,%rdx
    fd58:	48 8b 45 98          	mov    -0x68(%rbp),%rax
    fd5c:	48 8b 00             	mov    (%rax),%rax
    fd5f:	48 89 c6             	mov    %rax,%rsi
    fd62:	48 89 d7             	mov    %rdx,%rdi
    fd65:	e8 06 46 ff ff       	call   4370 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
    fd6a:	be 0a 00 00 00       	mov    $0xa,%esi
    fd6f:	48 89 c7             	mov    %rax,%rdi
    fd72:	e8 09 47 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
      for (const auto &extension : deviceExtensions) {
    fd77:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fd7e:	48 89 c7             	mov    %rax,%rdi
    fd81:	e8 84 07 00 00       	call   1050a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>
    fd86:	48 8d 95 e0 f8 ff ff 	lea    -0x720(%rbp),%rdx
    fd8d:	48 8d 85 e8 f8 ff ff 	lea    -0x718(%rbp),%rax
    fd94:	48 89 d6             	mov    %rdx,%rsi
    fd97:	48 89 c7             	mov    %rax,%rdi
    fd9a:	e8 30 07 00 00       	call   104cf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fd9f:	84 c0                	test   %al,%al
    fda1:	75 82                	jne    fd25 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xb7d>
      }
    }
    fs << '\n';
    fda3:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fdaa:	48 83 c0 10          	add    $0x10,%rax
    fdae:	be 0a 00 00 00       	mov    $0xa,%esi
    fdb3:	48 89 c7             	mov    %rax,%rdi
    fdb6:	e8 c5 46 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    ++index;
    fdbb:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
  }
    fdc0:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    fdc7:	48 89 c7             	mov    %rax,%rdi
    fdca:	e8 b7 80 ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fdcf:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fdd6:	48 89 c7             	mov    %rax,%rdi
    fdd9:	e8 02 44 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
  for (const auto &physDev : physicalDeviceList) {
    fdde:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fde5:	48 89 c7             	mov    %rax,%rdi
    fde8:	e8 ed 09 00 00       	call   107da <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>
    fded:	48 8d 95 20 f9 ff ff 	lea    -0x6e0(%rbp),%rdx
    fdf4:	48 8d 85 28 f9 ff ff 	lea    -0x6d8(%rbp),%rax
    fdfb:	48 89 d6             	mov    %rdx,%rsi
    fdfe:	48 89 c7             	mov    %rax,%rdi
    fe01:	e8 99 09 00 00       	call   1079f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
    fe06:	84 c0                	test   %al,%al
    fe08:	0f 85 18 f9 ff ff    	jne    f726 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x57e>
  fs << '\n';
    fe0e:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe15:	48 83 c0 10          	add    $0x10,%rax
    fe19:	be 0a 00 00 00       	mov    $0xa,%esi
    fe1e:	48 89 c7             	mov    %rax,%rdi
    fe21:	e8 5a 46 ff ff       	call   4480 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c@plt>
    fe26:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fe2d:	48 89 c7             	mov    %rax,%rdi
    fe30:	e8 db 82 ff ff       	call   8110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    fe35:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fe3c:	48 89 c7             	mov    %rax,%rdi
    fe3f:	e8 d4 7e ff ff       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    fe44:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    fe4b:	48 89 c7             	mov    %rax,%rdi
    fe4e:	e8 33 80 ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fe53:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    fe5a:	48 89 c7             	mov    %rax,%rdi
    fe5d:	e8 1e 42 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    fe62:	e9 cd 00 00 00       	jmp    ff34 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd8c>
    throw std::runtime_error("Failed to open " + filePath + '\n');
    fe67:	49 89 c4             	mov    %rax,%r12
    fe6a:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
    fe71:	48 89 c7             	mov    %rax,%rdi
    fe74:	e8 67 43 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fe79:	eb 03                	jmp    fe7e <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcd6>
    fe7b:	49 89 c4             	mov    %rax,%r12
    fe7e:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    fe85:	48 89 c7             	mov    %rax,%rdi
    fe88:	e8 53 43 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fe8d:	eb 03                	jmp    fe92 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xcea>
    fe8f:	49 89 c4             	mov    %rax,%r12
    fe92:	48 89 df             	mov    %rbx,%rdi
    fe95:	e8 a6 43 ff ff       	call   4240 <__cxa_free_exception@plt>
    fe9a:	4c 89 e3             	mov    %r12,%rbx
    fe9d:	eb 7b                	jmp    ff1a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    std::string selectStr = "";
    fe9f:	48 89 c3             	mov    %rax,%rbx
    fea2:	48 8d 85 6f ff ff ff 	lea    -0x91(%rbp),%rax
    fea9:	48 89 c7             	mov    %rax,%rdi
    feac:	e8 6f 45 ff ff       	call   4420 <_ZNSaIcED1Ev@plt>
    feb1:	eb 2b                	jmp    fede <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
  }
    feb3:	48 89 c3             	mov    %rax,%rbx
    feb6:	48 8d 85 00 f9 ff ff 	lea    -0x700(%rbp),%rax
    febd:	48 89 c7             	mov    %rax,%rdi
    fec0:	e8 c1 7f ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    fec5:	eb 03                	jmp    feca <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd22>
    fec7:	48 89 c3             	mov    %rax,%rbx
    feca:	48 8d 85 40 f1 ff ff 	lea    -0xec0(%rbp),%rax
    fed1:	48 89 c7             	mov    %rax,%rdi
    fed4:	e8 07 43 ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
    fed9:	eb 03                	jmp    fede <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd36>
    fedb:	48 89 c3             	mov    %rax,%rbx
    fede:	48 8d 85 b0 fc ff ff 	lea    -0x350(%rbp),%rax
    fee5:	48 89 c7             	mov    %rax,%rdi
    fee8:	e8 23 82 ff ff       	call   8110 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EED1Ev>
    feed:	eb 03                	jmp    fef2 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd4a>
    feef:	48 89 c3             	mov    %rax,%rbx
    fef2:	48 8d 85 d0 fc ff ff 	lea    -0x330(%rbp),%rax
    fef9:	48 89 c7             	mov    %rax,%rdi
    fefc:	e8 17 7e ff ff       	call   7d18 <_ZNSt6vectorI17VkLayerPropertiesSaIS0_EED1Ev>
    ff01:	eb 03                	jmp    ff06 <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd5e>
    ff03:	48 89 c3             	mov    %rax,%rbx
    ff06:	48 8d 85 f0 fc ff ff 	lea    -0x310(%rbp),%rax
    ff0d:	48 89 c7             	mov    %rax,%rdi
    ff10:	e8 71 7f ff ff       	call   7e86 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EED1Ev>
    ff15:	eb 03                	jmp    ff1a <_ZN9VulkanApp9writeInfoENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0xd72>
    ff17:	48 89 c3             	mov    %rax,%rbx
    ff1a:	48 8d 85 10 fd ff ff 	lea    -0x2f0(%rbp),%rax
    ff21:	48 89 c7             	mov    %rax,%rdi
    ff24:	e8 57 41 ff ff       	call   4080 <_ZNSt13basic_fstreamIcSt11char_traitsIcEED1Ev@plt>
    ff29:	48 89 d8             	mov    %rbx,%rax
    ff2c:	48 89 c7             	mov    %rax,%rdi
    ff2f:	e8 9c 47 ff ff       	call   46d0 <_Unwind_Resume@plt>
    ff34:	48 81 c4 c0 0e 00 00 	add    $0xec0,%rsp
    ff3b:	5b                   	pop    %rbx
    ff3c:	41 5c                	pop    %r12
    ff3e:	5d                   	pop    %rbp
    ff3f:	c3                   	ret

000000000000ff40 <_Z41__static_initialization_and_destruction_0ii>:
    ff40:	55                   	push   %rbp
    ff41:	48 89 e5             	mov    %rsp,%rbp
    ff44:	48 83 ec 10          	sub    $0x10,%rsp
    ff48:	89 7d fc             	mov    %edi,-0x4(%rbp)
    ff4b:	89 75 f8             	mov    %esi,-0x8(%rbp)
    ff4e:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    ff52:	75 3b                	jne    ff8f <_Z41__static_initialization_and_destruction_0ii+0x4f>
    ff54:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
    ff5b:	75 32                	jne    ff8f <_Z41__static_initialization_and_destruction_0ii+0x4f>
    ff5d:	48 8d 05 90 66 01 00 	lea    0x16690(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    ff64:	48 89 c7             	mov    %rax,%rdi
    ff67:	e8 74 46 ff ff       	call   45e0 <_ZNSt8ios_base4InitC1Ev@plt>
    ff6c:	48 8d 05 2d 64 01 00 	lea    0x1642d(%rip),%rax        # 263a0 <__dso_handle>
    ff73:	48 89 c2             	mov    %rax,%rdx
    ff76:	48 8d 05 77 66 01 00 	lea    0x16677(%rip),%rax        # 265f4 <_ZStL8__ioinit>
    ff7d:	48 89 c6             	mov    %rax,%rsi
    ff80:	48 8b 05 41 60 01 00 	mov    0x16041(%rip),%rax        # 25fc8 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
    ff87:	48 89 c7             	mov    %rax,%rdi
    ff8a:	e8 71 43 ff ff       	call   4300 <__cxa_atexit@plt>
    ff8f:	90                   	nop
    ff90:	c9                   	leave
    ff91:	c3                   	ret

000000000000ff92 <_GLOBAL__sub_I__ZN9VulkanApp12createWindowEv>:
    ff92:	55                   	push   %rbp
    ff93:	48 89 e5             	mov    %rsp,%rbp
    ff96:	be ff ff 00 00       	mov    $0xffff,%esi
    ff9b:	bf 01 00 00 00       	mov    $0x1,%edi
    ffa0:	e8 9b ff ff ff       	call   ff40 <_Z41__static_initialization_and_destruction_0ii>
    ffa5:	5d                   	pop    %rbp
    ffa6:	c3                   	ret
    ffa7:	90                   	nop

000000000000ffa8 <_ZNSt9exceptionC1Ev>:
   *  throw non-class data (e.g., fundamental types).
   */
  class exception
  {
  public:
    exception() _GLIBCXX_NOTHROW { }
    ffa8:	55                   	push   %rbp
    ffa9:	48 89 e5             	mov    %rsp,%rbp
    ffac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffb0:	48 8d 15 59 5d 01 00 	lea    0x15d59(%rip),%rdx        # 25d10 <_ZTVSt9exception@GLIBCXX_3.4+0x10>
    ffb7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    ffbb:	48 89 10             	mov    %rdx,(%rax)
    ffbe:	90                   	nop
    ffbf:	5d                   	pop    %rbp
    ffc0:	c3                   	ret

000000000000ffc1 <_ZdlPvS_>:
_GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }

// Default placement versions of operator delete.
inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    ffc1:	55                   	push   %rbp
    ffc2:	48 89 e5             	mov    %rsp,%rbp
    ffc5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffc9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    ffcd:	90                   	nop
    ffce:	5d                   	pop    %rbp
    ffcf:	c3                   	ret

000000000000ffd0 <_ZNKSt19bad_optional_access4whatEv>:
    const char* what() const noexcept override
    ffd0:	55                   	push   %rbp
    ffd1:	48 89 e5             	mov    %rsp,%rbp
    ffd4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return "bad optional access"; }
    ffd8:	48 8d 05 21 99 00 00 	lea    0x9921(%rip),%rax        # 19900 <_ZL47VK_FORMAT_FEATURE_2_BOX_FILTER_SAMPLED_BIT_QCOM+0x8>
    ffdf:	5d                   	pop    %rbp
    ffe0:	c3                   	ret
    ffe1:	90                   	nop

000000000000ffe2 <_ZNSt19bad_optional_accessC1Ev>:
    bad_optional_access() = default;
    ffe2:	55                   	push   %rbp
    ffe3:	48 89 e5             	mov    %rsp,%rbp
    ffe6:	48 83 ec 10          	sub    $0x10,%rsp
    ffea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    ffee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    fff2:	48 89 c7             	mov    %rax,%rdi
    fff5:	e8 ae ff ff ff       	call   ffa8 <_ZNSt9exceptionC1Ev>
    fffa:	48 8d 15 bf 5c 01 00 	lea    0x15cbf(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   10001:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10005:	48 89 10             	mov    %rdx,(%rax)
   10008:	90                   	nop
   10009:	c9                   	leave
   1000a:	c3                   	ret

000000000001000b <_ZSt27__throw_bad_optional_accessv>:
  { _GLIBCXX_THROW_OR_ABORT(bad_optional_access()); }
   1000b:	55                   	push   %rbp
   1000c:	48 89 e5             	mov    %rsp,%rbp
   1000f:	53                   	push   %rbx
   10010:	48 83 ec 08          	sub    $0x8,%rsp
   10014:	bf 08 00 00 00       	mov    $0x8,%edi
   10019:	e8 52 41 ff ff       	call   4170 <__cxa_allocate_exception@plt>
   1001e:	48 89 c3             	mov    %rax,%rbx
   10021:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
   10028:	48 89 df             	mov    %rbx,%rdi
   1002b:	e8 b2 ff ff ff       	call   ffe2 <_ZNSt19bad_optional_accessC1Ev>
   10030:	48 8d 05 d1 53 00 00 	lea    0x53d1(%rip),%rax        # 15408 <_ZNSt19bad_optional_accessD1Ev>
   10037:	48 89 c2             	mov    %rax,%rdx
   1003a:	48 8d 05 17 5d 01 00 	lea    0x15d17(%rip),%rax        # 25d58 <_ZTVN10__cxxabiv120__si_class_type_infoE@CXXABI_1.3>
   10041:	48 89 c6             	mov    %rax,%rsi
   10044:	48 89 df             	mov    %rbx,%rdi
   10047:	e8 24 46 ff ff       	call   4670 <__cxa_throw@plt>

000000000001004c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>:
	    return *this;
	  }

	// 20.11.5.4 special values
	static constexpr duration
	zero() noexcept
   1004c:	55                   	push   %rbp
   1004d:	48 89 e5             	mov    %rsp,%rbp
   10050:	48 83 ec 10          	sub    $0x10,%rsp
	{ return duration(duration_values<rep>::zero()); }
   10054:	e8 3a 00 00 00       	call   10093 <_ZNSt6chrono15duration_valuesIlE4zeroEv>
   10059:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1005d:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   10061:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   10065:	48 89 d6             	mov    %rdx,%rsi
   10068:	48 89 c7             	mov    %rax,%rdi
   1006b:	e8 06 00 00 00       	call   10076 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   10070:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10074:	c9                   	leave
   10075:	c3                   	ret

0000000000010076 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   10076:	55                   	push   %rbp
   10077:	48 89 e5             	mov    %rsp,%rbp
   1007a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1007e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   10082:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   10086:	48 8b 10             	mov    (%rax),%rdx
   10089:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1008d:	48 89 10             	mov    %rdx,(%rax)
   10090:	90                   	nop
   10091:	5d                   	pop    %rbp
   10092:	c3                   	ret

0000000000010093 <_ZNSt6chrono15duration_valuesIlE4zeroEv>:
	zero() noexcept
   10093:	55                   	push   %rbp
   10094:	48 89 e5             	mov    %rsp,%rbp
	{ return _Rep(0); }
   10097:	b8 00 00 00 00       	mov    $0x0,%eax
   1009c:	5d                   	pop    %rbp
   1009d:	c3                   	ret

000000000001009e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>:
	count() const
   1009e:	55                   	push   %rbp
   1009f:	48 89 e5             	mov    %rsp,%rbp
   100a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   100a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100aa:	48 8b 00             	mov    (%rax),%rax
   100ad:	5d                   	pop    %rbp
   100ae:	c3                   	ret
   100af:	90                   	nop

00000000000100b0 <_ZNSt15_Rb_tree_headerC1Ev>:
  struct _Rb_tree_header
  {
    _Rb_tree_node_base	_M_header;
    size_t		_M_node_count; // Keeps track of size of tree.

    _Rb_tree_header() _GLIBCXX_NOEXCEPT
   100b0:	55                   	push   %rbp
   100b1:	48 89 e5             	mov    %rsp,%rbp
   100b4:	48 83 ec 10          	sub    $0x10,%rsp
   100b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_color = _S_red;
   100bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100c0:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
      _M_reset();
   100c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100ca:	48 89 c7             	mov    %rax,%rdi
   100cd:	e8 04 00 00 00       	call   100d6 <_ZNSt15_Rb_tree_header8_M_resetEv>
    }
   100d2:	90                   	nop
   100d3:	c9                   	leave
   100d4:	c3                   	ret
   100d5:	90                   	nop

00000000000100d6 <_ZNSt15_Rb_tree_header8_M_resetEv>:

      __from._M_reset();
    }

    void
    _M_reset()
   100d6:	55                   	push   %rbp
   100d7:	48 89 e5             	mov    %rsp,%rbp
   100da:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    {
      _M_header._M_parent = 0;
   100de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100e2:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   100e9:	00 
      _M_header._M_left = &_M_header;
   100ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   100ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100f2:	48 89 50 10          	mov    %rdx,0x10(%rax)
      _M_header._M_right = &_M_header;
   100f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   100fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   100fe:	48 89 50 18          	mov    %rdx,0x18(%rax)
      _M_node_count = 0;
   10102:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10106:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
   1010d:	00 
    }
   1010e:	90                   	nop
   1010f:	5d                   	pop    %rbp
   10110:	c3                   	ret
   10111:	90                   	nop

0000000000010112 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      _Optional_payload_base() = default;
   10112:	55                   	push   %rbp
   10113:	48 89 e5             	mov    %rsp,%rbp
   10116:	48 83 ec 10          	sub    $0x10,%rsp
   1011a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1011e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10122:	48 89 c7             	mov    %rax,%rdi
   10125:	e8 60 00 00 00       	call   1018a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>
   1012a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1012e:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
   10132:	90                   	nop
   10133:	c9                   	leave
   10134:	c3                   	ret
   10135:	90                   	nop

0000000000010136 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>:
      _Optional_payload() = default;
   10136:	55                   	push   %rbp
   10137:	48 89 e5             	mov    %rsp,%rbp
   1013a:	48 83 ec 10          	sub    $0x10,%rsp
   1013e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10142:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10146:	48 89 c7             	mov    %rax,%rdi
   10149:	e8 c4 ff ff ff       	call   10112 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>
   1014e:	90                   	nop
   1014f:	c9                   	leave
   10150:	c3                   	ret
   10151:	90                   	nop

0000000000010152 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>:
      constexpr _Optional_base() = default;
   10152:	55                   	push   %rbp
   10153:	48 89 e5             	mov    %rsp,%rbp
   10156:	48 83 ec 10          	sub    $0x10,%rsp
   1015a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1015e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10162:	48 89 c7             	mov    %rax,%rdi
   10165:	e8 cc ff ff ff       	call   10136 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEC1Ev>
   1016a:	90                   	nop
   1016b:	c9                   	leave
   1016c:	c3                   	ret
   1016d:	90                   	nop

000000000001016e <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1Ev>:
      constexpr optional() noexcept { }
   1016e:	55                   	push   %rbp
   1016f:	48 89 e5             	mov    %rsp,%rbp
   10172:	48 83 ec 10          	sub    $0x10,%rsp
   10176:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1017a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1017e:	48 89 c7             	mov    %rax,%rdi
   10181:	e8 cc ff ff ff       	call   10152 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1Ev>
   10186:	90                   	nop
   10187:	c9                   	leave
   10188:	c3                   	ret
   10189:	90                   	nop

000000000001018a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1Ev>:
	  constexpr _Storage() noexcept : _M_empty() { }
   1018a:	55                   	push   %rbp
   1018b:	48 89 e5             	mov    %rsp,%rbp
   1018e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10192:	90                   	nop
   10193:	5d                   	pop    %rbp
   10194:	c3                   	ret
   10195:	90                   	nop

0000000000010196 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>:
      _Optional_base& operator=(const _Optional_base&) = default;
   10196:	55                   	push   %rbp
   10197:	48 89 e5             	mov    %rsp,%rbp
   1019a:	48 83 ec 10          	sub    $0x10,%rsp
   1019e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101a2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   101a6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   101aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101ae:	48 89 d6             	mov    %rdx,%rsi
   101b1:	48 89 c7             	mov    %rax,%rdi
   101b4:	e8 6d 06 00 00       	call   10826 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>
   101b9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101bd:	c9                   	leave
   101be:	c3                   	ret
   101bf:	90                   	nop

00000000000101c0 <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEaSERKS3_>:
    class optional
   101c0:	55                   	push   %rbp
   101c1:	48 89 e5             	mov    %rsp,%rbp
   101c4:	48 83 ec 10          	sub    $0x10,%rsp
   101c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   101cc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   101d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101d4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   101d8:	48 89 d6             	mov    %rdx,%rsi
   101db:	48 89 c7             	mov    %rax,%rdi
   101de:	e8 b3 ff ff ff       	call   10196 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEaSERKS3_>
   101e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101e7:	c9                   	leave
   101e8:	c3                   	ret
   101e9:	90                   	nop

00000000000101ea <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv>:
	  return this->_M_get();
	__throw_bad_optional_access();
      }

      constexpr _Tp&
      value()&
   101ea:	55                   	push   %rbp
   101eb:	48 89 e5             	mov    %rsp,%rbp
   101ee:	48 83 ec 10          	sub    $0x10,%rsp
   101f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      {
	if (this->_M_is_engaged())
   101f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   101fa:	48 89 c7             	mov    %rax,%rdi
   101fd:	e8 1a 00 00 00       	call   1021c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10202:	84 c0                	test   %al,%al
   10204:	74 0e                	je     10214 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2a>
	  return this->_M_get();
   10206:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1020a:	48 89 c7             	mov    %rax,%rdi
   1020d:	e8 3e 06 00 00       	call   10850 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>
   10212:	eb 05                	jmp    10219 <_ZNRSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE5valueEv+0x2f>
	__throw_bad_optional_access();
   10214:	e8 f2 fd ff ff       	call   1000b <_ZSt27__throw_bad_optional_accessv>
      }
   10219:	c9                   	leave
   1021a:	c3                   	ret
   1021b:	90                   	nop

000000000001021c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>:
      constexpr bool _M_is_engaged() const noexcept
   1021c:	55                   	push   %rbp
   1021d:	48 89 e5             	mov    %rsp,%rbp
   10220:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Dp*>(this)->_M_payload._M_engaged; }
   10224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10228:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1022c:	5d                   	pop    %rbp
   1022d:	c3                   	ret

000000000001022e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>:
#else
      // Unused _Is_pod_comparator is kept as it is part of mangled name.
      template<typename _Key_compare,
	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
#endif
	struct _Rb_tree_impl
   1022e:	55                   	push   %rbp
   1022f:	48 89 e5             	mov    %rsp,%rbp
   10232:	48 83 ec 10          	sub    $0x10,%rsp
   10236:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1023a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1023e:	48 89 c7             	mov    %rax,%rdi
   10241:	e8 86 06 00 00       	call   108cc <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   10246:	90                   	nop
   10247:	c9                   	leave
   10248:	c3                   	ret
   10249:	90                   	nop

000000000001024a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>:
    public:
      // allocation/deallocation
#if __cplusplus < 201103L
      _Rb_tree() { }
#else
      _Rb_tree() = default;
   1024a:	55                   	push   %rbp
   1024b:	48 89 e5             	mov    %rsp,%rbp
   1024e:	48 83 ec 10          	sub    $0x10,%rsp
   10252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10256:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1025a:	48 89 c7             	mov    %rax,%rdi
   1025d:	e8 32 06 00 00       	call   10894 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>
   10262:	90                   	nop
   10263:	c9                   	leave
   10264:	c3                   	ret
   10265:	90                   	nop

0000000000010266 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEC1Ev>:
       *  @brief  Default constructor creates no elements.
       */
#if __cplusplus < 201103L
      map() : _M_t() { }
#else
      map() = default;
   10266:	55                   	push   %rbp
   10267:	48 89 e5             	mov    %rsp,%rbp
   1026a:	48 83 ec 10          	sub    $0x10,%rsp
   1026e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10272:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10276:	48 89 c7             	mov    %rax,%rdi
   10279:	e8 cc ff ff ff       	call   1024a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EEC1Ev>
   1027e:	90                   	nop
   1027f:	c9                   	leave
   10280:	c3                   	ret
   10281:	90                   	nop

0000000000010282 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEED1Ev>:
      /**
       *  The dtor only erases the elements, and note that if the elements
       *  themselves are pointers, the pointed-to memory is not touched in any
       *  way.  Managing the pointer is the user's responsibility.
       */
      ~map() = default;
   10282:	55                   	push   %rbp
   10283:	48 89 e5             	mov    %rsp,%rbp
   10286:	48 83 ec 10          	sub    $0x10,%rsp
   1028a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1028e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10292:	48 89 c7             	mov    %rax,%rdi
   10295:	e8 4e 06 00 00       	call   108e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>
   1029a:	90                   	nop
   1029b:	c9                   	leave
   1029c:	c3                   	ret
   1029d:	90                   	nop

000000000001029e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   1029e:	55                   	push   %rbp
   1029f:	48 89 e5             	mov    %rsp,%rbp
   102a2:	48 83 ec 10          	sub    $0x10,%rsp
   102a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ae:	48 89 c7             	mov    %rax,%rdi
   102b1:	e8 04 0e 00 00       	call   110ba <_ZNSaIP13VkImageView_TED1Ev>
   102b6:	90                   	nop
   102b7:	c9                   	leave
   102b8:	c3                   	ret
   102b9:	90                   	nop

00000000000102ba <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   102ba:	55                   	push   %rbp
   102bb:	48 89 e5             	mov    %rsp,%rbp
   102be:	48 83 ec 10          	sub    $0x10,%rsp
   102c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102ca:	48 89 c7             	mov    %rax,%rdi
   102cd:	e8 c0 0d 00 00       	call   11092 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>
   102d2:	90                   	nop
   102d3:	c9                   	leave
   102d4:	c3                   	ret
   102d5:	90                   	nop

00000000000102d6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEC1Ev>:
      vector() = default;
   102d6:	55                   	push   %rbp
   102d7:	48 89 e5             	mov    %rsp,%rbp
   102da:	48 83 ec 10          	sub    $0x10,%rsp
   102de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   102e6:	48 89 c7             	mov    %rax,%rdi
   102e9:	e8 cc ff ff ff       	call   102ba <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EEC1Ev>
   102ee:	90                   	nop
   102ef:	c9                   	leave
   102f0:	c3                   	ret
   102f1:	90                   	nop

00000000000102f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>:
      _Vector_base() = default;
   102f2:	55                   	push   %rbp
   102f3:	48 89 e5             	mov    %rsp,%rbp
   102f6:	48 83 ec 10          	sub    $0x10,%rsp
   102fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   102fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10302:	48 89 c7             	mov    %rax,%rdi
   10305:	e8 5e 0e 00 00       	call   11168 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>
   1030a:	90                   	nop
   1030b:	c9                   	leave
   1030c:	c3                   	ret
   1030d:	90                   	nop

000000000001030e <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1Ev>:
      vector() = default;
   1030e:	55                   	push   %rbp
   1030f:	48 89 e5             	mov    %rsp,%rbp
   10312:	48 83 ec 10          	sub    $0x10,%rsp
   10316:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1031a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1031e:	48 89 c7             	mov    %rax,%rdi
   10321:	e8 cc ff ff ff       	call   102f2 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1Ev>
   10326:	90                   	nop
   10327:	c9                   	leave
   10328:	c3                   	ret
   10329:	90                   	nop

000000000001032a <_ZN3vkh23GraphicsPipelineWrapperC1Ev>:
struct GraphicsPipelineWrapper {
   1032a:	55                   	push   %rbp
   1032b:	48 89 e5             	mov    %rsp,%rbp
   1032e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10332:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10336:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1033d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10341:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   10348:	00 
   10349:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1034d:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   10354:	00 
   10355:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10359:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
   10360:	00 
   10361:	90                   	nop
   10362:	5d                   	pop    %rbp
   10363:	c3                   	ret

0000000000010364 <_ZNK3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE7currentEv>:
          << "Time elapsed: "
          << std::chrono::duration_cast<DurationType>(stop - start).count()
          << ' ' << this->time_unit << "\n";
  }

  auto current() const {
   10364:	55                   	push   %rbp
   10365:	48 89 e5             	mov    %rsp,%rbp
   10368:	53                   	push   %rbx
   10369:	48 83 ec 38          	sub    $0x38,%rsp
   1036d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    return std::chrono::duration_cast<DurationType>(
               std::chrono::steady_clock::now() - start)
   10371:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx
   10375:	e8 b6 41 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   1037a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   1037e:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10382:	48 89 de             	mov    %rbx,%rsi
   10385:	48 89 c7             	mov    %rax,%rdi
   10388:	e8 5d 0f 00 00       	call   112ea <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>
   1038d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    return std::chrono::duration_cast<DurationType>(
   10391:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10395:	48 89 c7             	mov    %rax,%rdi
   10398:	e8 92 0f 00 00       	call   1132f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>
   1039d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
        .count();
   103a1:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   103a5:	48 89 c7             	mov    %rax,%rdi
   103a8:	e8 9d 0f 00 00       	call   1134a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>
  }
   103ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   103b1:	c9                   	leave
   103b2:	c3                   	ret
   103b3:	90                   	nop

00000000000103b4 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_>:
      vector(initializer_list<value_type> __l,
   103b4:	55                   	push   %rbp
   103b5:	48 89 e5             	mov    %rsp,%rbp
   103b8:	53                   	push   %rbx
   103b9:	48 83 ec 38          	sub    $0x38,%rsp
   103bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   103c1:	48 89 f0             	mov    %rsi,%rax
   103c4:	48 89 d6             	mov    %rdx,%rsi
   103c7:	48 89 f2             	mov    %rsi,%rdx
   103ca:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   103ce:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   103d2:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   103d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   103da:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   103de:	48 89 d6             	mov    %rdx,%rsi
   103e1:	48 89 c7             	mov    %rax,%rdi
   103e4:	e8 a7 10 00 00       	call   11490 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>
	_M_range_initialize(__l.begin(), __l.end(),
   103e9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   103ed:	48 89 c7             	mov    %rax,%rdi
   103f0:	e8 d3 10 00 00       	call   114c8 <_ZNKSt16initializer_listIPKcE3endEv>
   103f5:	48 89 c3             	mov    %rax,%rbx
   103f8:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   103fc:	48 89 c7             	mov    %rax,%rdi
   103ff:	e8 b2 10 00 00       	call   114b6 <_ZNKSt16initializer_listIPKcE5beginEv>
   10404:	48 89 c1             	mov    %rax,%rcx
   10407:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1040b:	48 89 da             	mov    %rbx,%rdx
   1040e:	48 89 ce             	mov    %rcx,%rsi
   10411:	48 89 c7             	mov    %rax,%rdi
   10414:	e8 15 11 00 00       	call   1152e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>
      }
   10419:	eb 1a                	jmp    10435 <_ZNSt6vectorIPKcSaIS1_EEC1ESt16initializer_listIS1_ERKS2_+0x81>
   1041b:	48 89 c3             	mov    %rax,%rbx
   1041e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10422:	48 89 c7             	mov    %rax,%rdi
   10425:	e8 ea 7b ff ff       	call   8014 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   1042a:	48 89 d8             	mov    %rbx,%rax
   1042d:	48 89 c7             	mov    %rax,%rdi
   10430:	e8 9b 42 ff ff       	call   46d0 <_Unwind_Resume@plt>
   10435:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10439:	c9                   	leave
   1043a:	c3                   	ret
   1043b:	90                   	nop

000000000001043c <_ZNSt6vectorIPKcSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1043c:	55                   	push   %rbp
   1043d:	48 89 e5             	mov    %rsp,%rbp
   10440:	48 83 ec 10          	sub    $0x10,%rsp
   10444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1044c:	48 89 c7             	mov    %rax,%rdi
   1044f:	e8 78 8a ff ff       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   10454:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1045b:	48 8b 48 08          	mov    0x8(%rax),%rcx
   1045f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10463:	48 8b 00             	mov    (%rax),%rax
   10466:	48 89 ce             	mov    %rcx,%rsi
   10469:	48 89 c7             	mov    %rax,%rdi
   1046c:	e8 6c 11 00 00       	call   115dd <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>
      }
   10471:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10475:	48 89 c7             	mov    %rax,%rdi
   10478:	e8 97 7b ff ff       	call   8014 <_ZNSt12_Vector_baseIPKcSaIS1_EED1Ev>
   1047d:	90                   	nop
   1047e:	c9                   	leave
   1047f:	c3                   	ret

0000000000010480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10480:	55                   	push   %rbp
   10481:	48 89 e5             	mov    %rsp,%rbp
   10484:	48 83 ec 20          	sub    $0x20,%rsp
   10488:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1048c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10490:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10494:	48 89 d6             	mov    %rdx,%rsi
   10497:	48 89 c7             	mov    %rax,%rdi
   1049a:	e8 69 11 00 00       	call   11608 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1049f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104a3:	c9                   	leave
   104a4:	c3                   	ret
   104a5:	90                   	nop

00000000000104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   104a6:	55                   	push   %rbp
   104a7:	48 89 e5             	mov    %rsp,%rbp
   104aa:	48 83 ec 20          	sub    $0x20,%rsp
   104ae:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   104b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104b6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   104ba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   104be:	48 89 d6             	mov    %rdx,%rsi
   104c1:	48 89 c7             	mov    %rax,%rdi
   104c4:	e8 3f 11 00 00       	call   11608 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   104c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   104cd:	c9                   	leave
   104ce:	c3                   	ret

00000000000104cf <_ZN9__gnu_cxxneIPPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   104cf:	55                   	push   %rbp
   104d0:	48 89 e5             	mov    %rsp,%rbp
   104d3:	53                   	push   %rbx
   104d4:	48 83 ec 18          	sub    $0x18,%rsp
   104d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   104dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   104e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   104e4:	48 89 c7             	mov    %rax,%rdi
   104e7:	e8 3a 11 00 00       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   104ec:	48 8b 18             	mov    (%rax),%rbx
   104ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   104f3:	48 89 c7             	mov    %rax,%rdi
   104f6:	e8 2b 11 00 00       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   104fb:	48 8b 00             	mov    (%rax),%rax
   104fe:	48 39 c3             	cmp    %rax,%rbx
   10501:	0f 95 c0             	setne  %al
   10504:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10508:	c9                   	leave
   10509:	c3                   	ret

000000000001050a <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1050a:	55                   	push   %rbp
   1050b:	48 89 e5             	mov    %rsp,%rbp
   1050e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10512:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10516:	48 8b 00             	mov    (%rax),%rax
   10519:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1051d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10521:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10524:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10528:	5d                   	pop    %rbp
   10529:	c3                   	ret

000000000001052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1052a:	55                   	push   %rbp
   1052b:	48 89 e5             	mov    %rsp,%rbp
   1052e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10536:	48 8b 00             	mov    (%rax),%rax
   10539:	5d                   	pop    %rbp
   1053a:	c3                   	ret
   1053b:	90                   	nop

000000000001053c <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_>:
      _GLIBCXX20_CONSTEXPR
      typename vector<_Tp, _Alloc>::reference
#else
      void
#endif
      vector<_Tp, _Alloc>::
   1053c:	55                   	push   %rbp
   1053d:	48 89 e5             	mov    %rsp,%rbp
   10540:	53                   	push   %rbx
   10541:	48 83 ec 18          	sub    $0x18,%rsp
   10545:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10549:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      emplace_back(_Args&&... __args)
      {
	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
   1054d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10551:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10555:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10559:	48 8b 40 10          	mov    0x10(%rax),%rax
   1055d:	48 39 c2             	cmp    %rax,%rdx
   10560:	74 3c                	je     1059e <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x62>
	  {
	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
   10562:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10566:	48 89 c7             	mov    %rax,%rdi
   10569:	e8 c6 10 00 00       	call   11634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1056e:	48 89 c2             	mov    %rax,%rdx
   10571:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10575:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10579:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1057d:	48 89 ce             	mov    %rcx,%rsi
   10580:	48 89 c7             	mov    %rax,%rdi
   10583:	e8 ba 10 00 00       	call   11642 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
				     std::forward<_Args>(__args)...);
	    ++this->_M_impl._M_finish;
   10588:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1058c:	48 8b 40 08          	mov    0x8(%rax),%rax
   10590:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10594:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10598:	48 89 50 08          	mov    %rdx,0x8(%rax)
   1059c:	eb 30                	jmp    105ce <_ZNSt6vectorIPKcSaIS1_EE12emplace_backIJRS1_EEES5_DpOT_+0x92>
	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
	  }
	else
	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
   1059e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   105a2:	48 89 c7             	mov    %rax,%rdi
   105a5:	e8 8a 10 00 00       	call   11634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   105aa:	48 89 c3             	mov    %rax,%rbx
   105ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105b1:	48 89 c7             	mov    %rax,%rdi
   105b4:	e8 ed fe ff ff       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   105b9:	48 89 c1             	mov    %rax,%rcx
   105bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105c0:	48 89 da             	mov    %rbx,%rdx
   105c3:	48 89 ce             	mov    %rcx,%rsi
   105c6:	48 89 c7             	mov    %rax,%rdi
   105c9:	e8 ae 10 00 00       	call   1167c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
#if __cplusplus > 201402L
	return back();
   105ce:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   105d2:	48 89 c7             	mov    %rax,%rdi
   105d5:	e8 34 12 00 00       	call   1180e <_ZNSt6vectorIPKcSaIS1_EE4backEv>
#endif
      }
   105da:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   105de:	c9                   	leave
   105df:	c3                   	ret

00000000000105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   105e0:	55                   	push   %rbp
   105e1:	48 89 e5             	mov    %rsp,%rbp
   105e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   105e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105ec:	48 8b 50 08          	mov    0x8(%rax),%rdx
   105f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   105f4:	48 8b 00             	mov    (%rax),%rax
   105f7:	48 29 c2             	sub    %rax,%rdx
   105fa:	48 89 d0             	mov    %rdx,%rax
   105fd:	48 c1 f8 03          	sar    $0x3,%rax
   10601:	5d                   	pop    %rbp
   10602:	c3                   	ret
   10603:	90                   	nop

0000000000010604 <_ZNKSt6vectorIPKcSaIS1_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   10604:	55                   	push   %rbp
   10605:	48 89 e5             	mov    %rsp,%rbp
   10608:	48 83 ec 10          	sub    $0x10,%rsp
   1060c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10610:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10614:	48 8b 10             	mov    (%rax),%rdx
   10617:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1061b:	48 89 d6             	mov    %rdx,%rsi
   1061e:	48 89 c7             	mov    %rax,%rdi
   10621:	e8 28 12 00 00       	call   1184e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   10626:	c9                   	leave
   10627:	c3                   	ret

0000000000010628 <_ZNSt6vectorIPKcSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   10628:	55                   	push   %rbp
   10629:	48 89 e5             	mov    %rsp,%rbp
   1062c:	48 83 ec 10          	sub    $0x10,%rsp
   10630:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   10634:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10638:	48 8b 10             	mov    (%rax),%rdx
   1063b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1063f:	48 89 d6             	mov    %rdx,%rsi
   10642:	48 89 c7             	mov    %rax,%rdi
   10645:	e8 04 12 00 00       	call   1184e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   1064a:	c9                   	leave
   1064b:	c3                   	ret

000000000001064c <_ZNKSt6vectorISt8optionalI23VkQueueFamilyPropertiesESaIS2_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   1064c:	55                   	push   %rbp
   1064d:	48 89 e5             	mov    %rsp,%rbp
   10650:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10654:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10658:	48 8b 50 08          	mov    0x8(%rax),%rdx
   1065c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10660:	48 8b 00             	mov    (%rax),%rax
   10663:	48 29 c2             	sub    %rax,%rdx
   10666:	48 c1 fa 02          	sar    $0x2,%rdx
   1066a:	48 b8 b7 6d db b6 6d 	movabs $0x6db6db6db6db6db7,%rax
   10671:	db b6 6d 
   10674:	48 0f af c2          	imul   %rdx,%rax
   10678:	5d                   	pop    %rbp
   10679:	c3                   	ret

000000000001067a <_ZNKSt8optionalI23VkQueueFamilyPropertiesE9has_valueEv>:
      constexpr bool has_value() const noexcept
   1067a:	55                   	push   %rbp
   1067b:	48 89 e5             	mov    %rsp,%rbp
   1067e:	48 83 ec 10          	sub    $0x10,%rsp
   10682:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1068a:	48 89 c7             	mov    %rax,%rdi
   1068d:	e8 96 8d ff ff       	call   9428 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   10692:	c9                   	leave
   10693:	c3                   	ret

0000000000010694 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv>:
      value()&
   10694:	55                   	push   %rbp
   10695:	48 89 e5             	mov    %rsp,%rbp
   10698:	48 83 ec 10          	sub    $0x10,%rsp
   1069c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_is_engaged())
   106a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106a4:	48 89 c7             	mov    %rax,%rdi
   106a7:	e8 7c 8d ff ff       	call   9428 <_ZNKSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE13_M_is_engagedEv>
   106ac:	84 c0                	test   %al,%al
   106ae:	74 0e                	je     106be <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2a>
	  return this->_M_get();
   106b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106b4:	48 89 c7             	mov    %rax,%rdi
   106b7:	e8 7e 8d ff ff       	call   943a <_ZNSt19_Optional_base_implI23VkQueueFamilyPropertiesSt14_Optional_baseIS0_Lb1ELb1EEE6_M_getEv>
   106bc:	eb 05                	jmp    106c3 <_ZNRSt8optionalI23VkQueueFamilyPropertiesE5valueEv+0x2f>
	__throw_bad_optional_access();
   106be:	e8 48 f9 ff ff       	call   1000b <_ZSt27__throw_bad_optional_accessv>
      }
   106c3:	c9                   	leave
   106c4:	c3                   	ret
   106c5:	90                   	nop

00000000000106c6 <_ZNSt4pairIj23VkQueueFamilyPropertiesEC1IjRS0_Lb1EEEOT_OT0_>:
	       enable_if<_PCCP::template
			   _MoveConstructiblePair<_U1, _U2>()
			  && _PCCP::template
			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
                         bool>::type=true>
	constexpr pair(_U1&& __x, _U2&& __y)
   106c6:	55                   	push   %rbp
   106c7:	48 89 e5             	mov    %rsp,%rbp
   106ca:	48 83 ec 20          	sub    $0x20,%rsp
   106ce:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   106d2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   106d6:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   106da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   106de:	48 89 c7             	mov    %rax,%rdi
   106e1:	e8 7a 11 00 00       	call   11860 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>
   106e6:	8b 10                	mov    (%rax),%edx
   106e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   106ec:	89 10                	mov    %edx,(%rax)
   106ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   106f2:	48 89 c7             	mov    %rax,%rdi
   106f5:	e8 74 11 00 00       	call   1186e <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>
   106fa:	48 89 c1             	mov    %rax,%rcx
   106fd:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   10701:	48 8b 01             	mov    (%rcx),%rax
   10704:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   10708:	48 89 46 04          	mov    %rax,0x4(%rsi)
   1070c:	48 89 56 0c          	mov    %rdx,0xc(%rsi)
   10710:	48 8b 41 10          	mov    0x10(%rcx),%rax
   10714:	48 89 46 14          	mov    %rax,0x14(%rsi)
   10718:	90                   	nop
   10719:	c9                   	leave
   1071a:	c3                   	ret
   1071b:	90                   	nop

000000000001071c <_ZNSt8optionalISt4pairIj23VkQueueFamilyPropertiesEEC1IS2_Lb1EEEOT_>:
	optional(_Up&& __t)
   1071c:	55                   	push   %rbp
   1071d:	48 89 e5             	mov    %rsp,%rbp
   10720:	53                   	push   %rbx
   10721:	48 83 ec 18          	sub    $0x18,%rsp
   10725:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10729:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::in_place, std::forward<_Up>(__t)) { }
   1072d:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   10731:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10735:	48 89 c7             	mov    %rax,%rdi
   10738:	e8 3f 11 00 00       	call   1187c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   1073d:	48 89 c6             	mov    %rax,%rsi
   10740:	48 89 df             	mov    %rbx,%rdi
   10743:	e8 68 11 00 00       	call   118b0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>
   10748:	90                   	nop
   10749:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1074d:	c9                   	leave
   1074e:	c3                   	ret
   1074f:	90                   	nop

0000000000010750 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10750:	55                   	push   %rbp
   10751:	48 89 e5             	mov    %rsp,%rbp
   10754:	48 83 ec 20          	sub    $0x20,%rsp
   10758:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1075c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10760:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10764:	48 89 d6             	mov    %rdx,%rsi
   10767:	48 89 c7             	mov    %rax,%rdi
   1076a:	e8 75 11 00 00       	call   118e4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   1076f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10773:	c9                   	leave
   10774:	c3                   	ret
   10775:	90                   	nop

0000000000010776 <_ZNSt6vectorIP18VkPhysicalDevice_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10776:	55                   	push   %rbp
   10777:	48 89 e5             	mov    %rsp,%rbp
   1077a:	48 83 ec 20          	sub    $0x20,%rsp
   1077e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10782:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10786:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1078a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1078e:	48 89 d6             	mov    %rdx,%rsi
   10791:	48 89 c7             	mov    %rax,%rdi
   10794:	e8 4b 11 00 00       	call   118e4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   10799:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1079d:	c9                   	leave
   1079e:	c3                   	ret

000000000001079f <_ZN9__gnu_cxxneIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   1079f:	55                   	push   %rbp
   107a0:	48 89 e5             	mov    %rsp,%rbp
   107a3:	53                   	push   %rbx
   107a4:	48 83 ec 18          	sub    $0x18,%rsp
   107a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   107ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   107b0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   107b4:	48 89 c7             	mov    %rax,%rdi
   107b7:	e8 46 11 00 00       	call   11902 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   107bc:	48 8b 18             	mov    (%rax),%rbx
   107bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   107c3:	48 89 c7             	mov    %rax,%rdi
   107c6:	e8 37 11 00 00       	call   11902 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>
   107cb:	48 8b 00             	mov    (%rax),%rax
   107ce:	48 39 c3             	cmp    %rax,%rbx
   107d1:	0f 95 c0             	setne  %al
   107d4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   107d8:	c9                   	leave
   107d9:	c3                   	ret

00000000000107da <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   107da:	55                   	push   %rbp
   107db:	48 89 e5             	mov    %rsp,%rbp
   107de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   107e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107e6:	48 8b 00             	mov    (%rax),%rax
   107e9:	48 8d 50 08          	lea    0x8(%rax),%rdx
   107ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   107f1:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   107f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   107f8:	5d                   	pop    %rbp
   107f9:	c3                   	ret

00000000000107fa <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   107fa:	55                   	push   %rbp
   107fb:	48 89 e5             	mov    %rsp,%rbp
   107fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10802:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10806:	48 8b 00             	mov    (%rax),%rax
   10809:	5d                   	pop    %rbp
   1080a:	c3                   	ret
   1080b:	90                   	nop

000000000001080c <_ZNKSt8optionalISt4pairIj23VkQueueFamilyPropertiesEE9has_valueEv>:
      constexpr bool has_value() const noexcept
   1080c:	55                   	push   %rbp
   1080d:	48 89 e5             	mov    %rsp,%rbp
   10810:	48 83 ec 10          	sub    $0x10,%rsp
   10814:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_is_engaged(); }
   10818:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1081c:	48 89 c7             	mov    %rax,%rdi
   1081f:	e8 f8 f9 ff ff       	call   1021c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10824:	c9                   	leave
   10825:	c3                   	ret

0000000000010826 <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EEaSERKS3_>:
      operator=(const _Optional_payload& __other)
   10826:	55                   	push   %rbp
   10827:	48 89 e5             	mov    %rsp,%rbp
   1082a:	48 83 ec 10          	sub    $0x10,%rsp
   1082e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10832:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_copy_assign(__other);
   10836:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1083a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1083e:	48 89 d6             	mov    %rdx,%rsi
   10841:	48 89 c7             	mov    %rax,%rdi
   10844:	e8 c7 10 00 00       	call   11910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>
	return *this;
   10849:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1084d:	c9                   	leave
   1084e:	c3                   	ret
   1084f:	90                   	nop

0000000000010850 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv>:
      _M_get() noexcept
   10850:	55                   	push   %rbp
   10851:	48 89 e5             	mov    %rsp,%rbp
   10854:	48 83 ec 10          	sub    $0x10,%rsp
   10858:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	__glibcxx_assert(this->_M_is_engaged());
   1085c:	e8 fd 41 ff ff       	call   4a5e <_ZSt23__is_constant_evaluatedv>
   10861:	84 c0                	test   %al,%al
   10863:	74 1a                	je     1087f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10869:	48 89 c7             	mov    %rax,%rdi
   1086c:	e8 ab f9 ff ff       	call   1021c <_ZNKSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE13_M_is_engagedEv>
   10871:	83 f0 01             	xor    $0x1,%eax
   10874:	84 c0                	test   %al,%al
   10876:	74 07                	je     1087f <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x2f>
   10878:	b8 01 00 00 00       	mov    $0x1,%eax
   1087d:	eb 05                	jmp    10884 <_ZNSt19_Optional_base_implISt4pairIj23VkQueueFamilyPropertiesESt14_Optional_baseIS2_Lb1ELb1EEE6_M_getEv+0x34>
   1087f:	b8 00 00 00 00       	mov    $0x0,%eax
   10884:	84 c0                	test   %al,%al
	return static_cast<_Dp*>(this)->_M_payload._M_get();
   10886:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1088a:	48 89 c7             	mov    %rax,%rdi
   1088d:	e8 10 11 00 00       	call   119a2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
      }
   10892:	c9                   	leave
   10893:	c3                   	ret

0000000000010894 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EEC1Ev>:
	  _Rb_tree_impl()
   10894:	55                   	push   %rbp
   10895:	48 89 e5             	mov    %rsp,%rbp
   10898:	48 83 ec 10          	sub    $0x10,%rsp
   1089c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  : _Node_allocator()
   108a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108a4:	48 89 c7             	mov    %rax,%rdi
   108a7:	e8 04 11 00 00       	call   119b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   108ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108b0:	48 89 c7             	mov    %rax,%rdi
   108b3:	e8 14 11 00 00       	call   119cc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>
   108b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108bc:	48 83 c0 08          	add    $0x8,%rax
   108c0:	48 89 c7             	mov    %rax,%rdi
   108c3:	e8 e8 f7 ff ff       	call   100b0 <_ZNSt15_Rb_tree_headerC1Ev>
	  { }
   108c8:	90                   	nop
   108c9:	c9                   	leave
   108ca:	c3                   	ret
   108cb:	90                   	nop

00000000000108cc <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   108cc:	55                   	push   %rbp
   108cd:	48 89 e5             	mov    %rsp,%rbp
   108d0:	48 83 ec 10          	sub    $0x10,%rsp
   108d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   108d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108dc:	48 89 c7             	mov    %rax,%rdi
   108df:	e8 f4 10 00 00       	call   119d8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>
   108e4:	90                   	nop
   108e5:	c9                   	leave
   108e6:	c3                   	ret
   108e7:	90                   	nop

00000000000108e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EED1Ev>:
      : _Rb_tree(std::move(__x), std::move(__a),
		 typename _Alloc_traits::is_always_equal{})
      { }
#endif

      ~_Rb_tree() _GLIBCXX_NOEXCEPT
   108e8:	55                   	push   %rbp
   108e9:	48 89 e5             	mov    %rsp,%rbp
   108ec:	48 83 ec 10          	sub    $0x10,%rsp
   108f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { _M_erase(_M_begin()); }
   108f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   108f8:	48 89 c7             	mov    %rax,%rdi
   108fb:	e8 4a 11 00 00       	call   11a4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   10900:	48 89 c2             	mov    %rax,%rdx
   10903:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10907:	48 89 d6             	mov    %rdx,%rsi
   1090a:	48 89 c7             	mov    %rax,%rdi
   1090d:	e8 d2 10 00 00       	call   119e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
   10912:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10916:	48 89 c7             	mov    %rax,%rdi
   10919:	e8 10 f9 ff ff       	call   1022e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE13_Rb_tree_implISC_Lb1EED1Ev>
   1091e:	90                   	nop
   1091f:	c9                   	leave
   10920:	c3                   	ret
   10921:	90                   	nop

0000000000010922 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10922:	55                   	push   %rbp
   10923:	48 89 e5             	mov    %rsp,%rbp
   10926:	48 83 ec 20          	sub    $0x20,%rsp
   1092a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1092e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10932:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10936:	48 89 d6             	mov    %rdx,%rsi
   10939:	48 89 c7             	mov    %rax,%rdi
   1093c:	e8 23 11 00 00       	call   11a64 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10941:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10945:	c9                   	leave
   10946:	c3                   	ret
   10947:	90                   	nop

0000000000010948 <_ZNSt6vectorI21VkExtensionPropertiesSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10948:	55                   	push   %rbp
   10949:	48 89 e5             	mov    %rsp,%rbp
   1094c:	48 83 ec 20          	sub    $0x20,%rsp
   10950:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10954:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10958:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1095c:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10960:	48 89 d6             	mov    %rdx,%rsi
   10963:	48 89 c7             	mov    %rax,%rdi
   10966:	e8 f9 10 00 00       	call   11a64 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   1096b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1096f:	c9                   	leave
   10970:	c3                   	ret

0000000000010971 <_ZN9__gnu_cxxneIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10971:	55                   	push   %rbp
   10972:	48 89 e5             	mov    %rsp,%rbp
   10975:	53                   	push   %rbx
   10976:	48 83 ec 18          	sub    $0x18,%rsp
   1097a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1097e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10986:	48 89 c7             	mov    %rax,%rdi
   10989:	e8 f4 10 00 00       	call   11a82 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   1098e:	48 8b 18             	mov    (%rax),%rbx
   10991:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10995:	48 89 c7             	mov    %rax,%rdi
   10998:	e8 e5 10 00 00       	call   11a82 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>
   1099d:	48 8b 00             	mov    (%rax),%rax
   109a0:	48 39 c3             	cmp    %rax,%rbx
   109a3:	0f 95 c0             	setne  %al
   109a6:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   109aa:	c9                   	leave
   109ab:	c3                   	ret

00000000000109ac <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   109ac:	55                   	push   %rbp
   109ad:	48 89 e5             	mov    %rsp,%rbp
   109b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   109b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109b8:	48 8b 00             	mov    (%rax),%rax
   109bb:	48 8d 90 04 01 00 00 	lea    0x104(%rax),%rdx
   109c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109c6:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   109c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   109cd:	5d                   	pop    %rbp
   109ce:	c3                   	ret
   109cf:	90                   	nop

00000000000109d0 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   109d0:	55                   	push   %rbp
   109d1:	48 89 e5             	mov    %rsp,%rbp
   109d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   109d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   109dc:	48 8b 00             	mov    (%rax),%rax
   109df:	5d                   	pop    %rbp
   109e0:	c3                   	ret
   109e1:	90                   	nop

00000000000109e2 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
	return (*__i).second;
      }

#if __cplusplus >= 201103L
      mapped_type&
      operator[](key_type&& __k)
   109e2:	55                   	push   %rbp
   109e3:	48 89 e5             	mov    %rsp,%rbp
   109e6:	53                   	push   %rbx
   109e7:	48 83 ec 48          	sub    $0x48,%rsp
   109eb:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   109ef:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
      {
	// concept requirements
	__glibcxx_function_requires(_DefaultConstructibleConcept<mapped_type>)

	iterator __i = lower_bound(__k);
   109f3:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
   109f7:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   109fb:	48 89 d6             	mov    %rdx,%rsi
   109fe:	48 89 c7             	mov    %rax,%rdi
   10a01:	e8 8a 10 00 00       	call   11a90 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>
   10a06:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
	// __i->first is greater than or equivalent to __k.
	if (__i == end() || key_comp()(__k, (*__i).first))
   10a0a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a0e:	48 89 c7             	mov    %rax,%rdi
   10a11:	e8 a0 10 00 00       	call   11ab6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>
   10a16:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   10a1a:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   10a1e:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a22:	48 89 d6             	mov    %rdx,%rsi
   10a25:	48 89 c7             	mov    %rax,%rdi
   10a28:	e8 a3 10 00 00       	call   11ad0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   10a2d:	84 c0                	test   %al,%al
   10a2f:	75 32                	jne    10a63 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x81>
   10a31:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   10a35:	48 89 c7             	mov    %rax,%rdi
   10a38:	e8 b5 10 00 00       	call   11af2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>
   10a3d:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10a41:	48 89 c7             	mov    %rax,%rdi
   10a44:	e8 c5 10 00 00       	call   11b0e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10a49:	48 89 c2             	mov    %rax,%rdx
   10a4c:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   10a50:	48 8d 45 de          	lea    -0x22(%rbp),%rax
   10a54:	48 89 ce             	mov    %rcx,%rsi
   10a57:	48 89 c7             	mov    %rax,%rdi
   10a5a:	e8 cd 10 00 00       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   10a5f:	84 c0                	test   %al,%al
   10a61:	74 07                	je     10a6a <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x88>
   10a63:	b8 01 00 00 00       	mov    $0x1,%eax
   10a68:	eb 05                	jmp    10a6f <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x8d>
   10a6a:	b8 00 00 00 00       	mov    $0x0,%eax
   10a6f:	84 c0                	test   %al,%al
   10a71:	74 5d                	je     10ad0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xee>
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10a73:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx
					std::forward_as_tuple(std::move(__k)),
   10a77:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   10a7b:	48 89 c7             	mov    %rax,%rdi
   10a7e:	e8 fe 09 00 00       	call   11481 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   10a83:	48 89 c2             	mov    %rax,%rdx
	  __i = _M_t._M_emplace_hint_unique(__i, std::piecewise_construct,
   10a86:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   10a8a:	48 89 d6             	mov    %rdx,%rsi
   10a8d:	48 89 c7             	mov    %rax,%rdi
   10a90:	e8 c0 10 00 00       	call   11b55 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>
   10a95:	48 8d 55 c8          	lea    -0x38(%rbp),%rdx
   10a99:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   10a9d:	48 89 d6             	mov    %rdx,%rsi
   10aa0:	48 89 c7             	mov    %rax,%rdi
   10aa3:	e8 e2 10 00 00       	call   11b8a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>
   10aa8:	48 8d 4d df          	lea    -0x21(%rbp),%rcx
   10aac:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   10ab0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ab4:	49 89 c8             	mov    %rcx,%r8
   10ab7:	48 89 d1             	mov    %rdx,%rcx
   10aba:	48 8d 15 c7 92 00 00 	lea    0x92c7(%rip),%rdx        # 19d88 <_ZSt19piecewise_construct>
   10ac1:	48 89 c6             	mov    %rax,%rsi
   10ac4:	48 89 df             	mov    %rbx,%rdi
   10ac7:	e8 dc 10 00 00       	call   11ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
   10acc:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
					std::tuple<>());
	return (*__i).second;
   10ad0:	48 8d 45 c8          	lea    -0x38(%rbp),%rax
   10ad4:	48 89 c7             	mov    %rax,%rdi
   10ad7:	e8 32 10 00 00       	call   11b0e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>
   10adc:	48 83 c0 20          	add    $0x20,%rax
      }
   10ae0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10ae4:	c9                   	leave
   10ae5:	c3                   	ret

0000000000010ae6 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5emptyEv>:
      empty() const _GLIBCXX_NOEXCEPT
   10ae6:	55                   	push   %rbp
   10ae7:	48 89 e5             	mov    %rsp,%rbp
   10aea:	48 83 ec 20          	sub    $0x20,%rsp
   10aee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return begin() == end(); }
   10af2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10af6:	48 89 c7             	mov    %rax,%rdi
   10af9:	e8 cc 11 00 00       	call   11cca <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>
   10afe:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   10b02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b06:	48 89 c7             	mov    %rax,%rdi
   10b09:	e8 96 11 00 00       	call   11ca4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>
   10b0e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   10b12:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   10b16:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10b1a:	48 89 d6             	mov    %rdx,%rsi
   10b1d:	48 89 c7             	mov    %rax,%rdi
   10b20:	e8 ce 11 00 00       	call   11cf3 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>
   10b25:	c9                   	leave
   10b26:	c3                   	ret
   10b27:	90                   	nop

0000000000010b28 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10b28:	55                   	push   %rbp
   10b29:	48 89 e5             	mov    %rsp,%rbp
   10b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10b30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10b34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b38:	48 8b 00             	mov    (%rax),%rax
   10b3b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10b3f:	48 c1 e2 03          	shl    $0x3,%rdx
   10b43:	48 01 d0             	add    %rdx,%rax
      }
   10b46:	5d                   	pop    %rbp
   10b47:	c3                   	ret

0000000000010b48 <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10b48:	55                   	push   %rbp
   10b49:	48 89 e5             	mov    %rsp,%rbp
   10b4c:	48 83 ec 20          	sub    $0x20,%rsp
   10b50:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10b54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10b58:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10b5c:	48 89 d6             	mov    %rdx,%rsi
   10b5f:	48 89 c7             	mov    %rax,%rdi
   10b62:	e8 c7 11 00 00       	call   11d2e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10b67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b6b:	c9                   	leave
   10b6c:	c3                   	ret
   10b6d:	90                   	nop

0000000000010b6e <_ZNSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10b6e:	55                   	push   %rbp
   10b6f:	48 89 e5             	mov    %rsp,%rbp
   10b72:	48 83 ec 20          	sub    $0x20,%rsp
   10b76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10b7a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10b7e:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10b82:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10b86:	48 89 d6             	mov    %rdx,%rsi
   10b89:	48 89 c7             	mov    %rax,%rdi
   10b8c:	e8 9d 11 00 00       	call   11d2e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10b91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10b95:	c9                   	leave
   10b96:	c3                   	ret

0000000000010b97 <_ZN9__gnu_cxxneIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10b97:	55                   	push   %rbp
   10b98:	48 89 e5             	mov    %rsp,%rbp
   10b9b:	53                   	push   %rbx
   10b9c:	48 83 ec 18          	sub    $0x18,%rsp
   10ba0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ba4:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10ba8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10bac:	48 89 c7             	mov    %rax,%rdi
   10baf:	e8 98 11 00 00       	call   11d4c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10bb4:	48 8b 18             	mov    (%rax),%rbx
   10bb7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10bbb:	48 89 c7             	mov    %rax,%rdi
   10bbe:	e8 89 11 00 00       	call   11d4c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10bc3:	48 8b 00             	mov    (%rax),%rax
   10bc6:	48 39 c3             	cmp    %rax,%rbx
   10bc9:	0f 95 c0             	setne  %al
   10bcc:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10bd0:	c9                   	leave
   10bd1:	c3                   	ret

0000000000010bd2 <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10bd2:	55                   	push   %rbp
   10bd3:	48 89 e5             	mov    %rsp,%rbp
   10bd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10bda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bde:	48 8b 00             	mov    (%rax),%rax
   10be1:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10be5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10be9:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10bec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10bf0:	5d                   	pop    %rbp
   10bf1:	c3                   	ret

0000000000010bf2 <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10bf2:	55                   	push   %rbp
   10bf3:	48 89 e5             	mov    %rsp,%rbp
   10bf6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10bfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10bfe:	48 8b 00             	mov    (%rax),%rax
   10c01:	5d                   	pop    %rbp
   10c02:	c3                   	ret
   10c03:	90                   	nop

0000000000010c04 <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   10c04:	55                   	push   %rbp
   10c05:	48 89 e5             	mov    %rsp,%rbp
   10c08:	48 83 ec 20          	sub    $0x20,%rsp
   10c0c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   10c10:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   10c14:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c18:	48 89 d6             	mov    %rdx,%rsi
   10c1b:	48 89 c7             	mov    %rax,%rdi
   10c1e:	e8 37 11 00 00       	call   11d5a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10c23:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c27:	c9                   	leave
   10c28:	c3                   	ret
   10c29:	90                   	nop

0000000000010c2a <_ZNSt6vectorI16VkPresentModeKHRSaIS0_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   10c2a:	55                   	push   %rbp
   10c2b:	48 89 e5             	mov    %rsp,%rbp
   10c2e:	48 83 ec 20          	sub    $0x20,%rsp
   10c32:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   10c36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c3a:	48 8d 50 08          	lea    0x8(%rax),%rdx
   10c3e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   10c42:	48 89 d6             	mov    %rdx,%rsi
   10c45:	48 89 c7             	mov    %rax,%rdi
   10c48:	e8 0d 11 00 00       	call   11d5a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>
   10c4d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c51:	c9                   	leave
   10c52:	c3                   	ret

0000000000010c53 <_ZN9__gnu_cxxneIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   10c53:	55                   	push   %rbp
   10c54:	48 89 e5             	mov    %rsp,%rbp
   10c57:	53                   	push   %rbx
   10c58:	48 83 ec 18          	sub    $0x18,%rsp
   10c5c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10c60:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   10c64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10c68:	48 89 c7             	mov    %rax,%rdi
   10c6b:	e8 08 11 00 00       	call   11d78 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10c70:	48 8b 18             	mov    (%rax),%rbx
   10c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10c77:	48 89 c7             	mov    %rax,%rdi
   10c7a:	e8 f9 10 00 00       	call   11d78 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   10c7f:	48 8b 00             	mov    (%rax),%rax
   10c82:	48 39 c3             	cmp    %rax,%rbx
   10c85:	0f 95 c0             	setne  %al
   10c88:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10c8c:	c9                   	leave
   10c8d:	c3                   	ret

0000000000010c8e <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   10c8e:	55                   	push   %rbp
   10c8f:	48 89 e5             	mov    %rsp,%rbp
   10c92:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   10c96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10c9a:	48 8b 00             	mov    (%rax),%rax
   10c9d:	48 8d 50 04          	lea    0x4(%rax),%rdx
   10ca1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ca5:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   10ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   10cac:	5d                   	pop    %rbp
   10cad:	c3                   	ret

0000000000010cae <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   10cae:	55                   	push   %rbp
   10caf:	48 89 e5             	mov    %rsp,%rbp
   10cb2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   10cb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10cba:	48 8b 00             	mov    (%rax),%rax
   10cbd:	5d                   	pop    %rbp
   10cbe:	c3                   	ret
   10cbf:	90                   	nop

0000000000010cc0 <_ZNSt6vectorIP9VkImage_TSaIS1_EEaSEOS3_>:
      operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
   10cc0:	55                   	push   %rbp
   10cc1:	48 89 e5             	mov    %rsp,%rbp
   10cc4:	48 83 ec 20          	sub    $0x20,%rsp
   10cc8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   10ccc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	constexpr bool __move_storage =
   10cd0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
   10cd4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   10cd8:	48 89 c7             	mov    %rax,%rdi
   10cdb:	e8 a6 10 00 00       	call   11d86 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>
   10ce0:	48 89 c2             	mov    %rax,%rdx
   10ce3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   10ce7:	48 89 d6             	mov    %rdx,%rsi
   10cea:	48 89 c7             	mov    %rax,%rdi
   10ced:	e8 a2 10 00 00       	call   11d94 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>
	return *this;
   10cf2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   10cf6:	c9                   	leave
   10cf7:	c3                   	ret

0000000000010cf8 <_ZNKSt6vectorIP9VkImage_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   10cf8:	55                   	push   %rbp
   10cf9:	48 89 e5             	mov    %rsp,%rbp
   10cfc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   10d00:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d04:	48 8b 50 08          	mov    0x8(%rax),%rdx
   10d08:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d0c:	48 8b 00             	mov    (%rax),%rax
   10d0f:	48 29 c2             	sub    %rax,%rdx
   10d12:	48 89 d0             	mov    %rdx,%rax
   10d15:	48 c1 f8 03          	sar    $0x3,%rax
   10d19:	5d                   	pop    %rbp
   10d1a:	c3                   	ret
   10d1b:	90                   	nop

0000000000010d1c <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm>:
      resize(size_type __new_size)
   10d1c:	55                   	push   %rbp
   10d1d:	48 89 e5             	mov    %rsp,%rbp
   10d20:	48 83 ec 10          	sub    $0x10,%rsp
   10d24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10d28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	if (__new_size > size())
   10d2c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d30:	48 89 c7             	mov    %rax,%rdi
   10d33:	e8 fe 10 00 00       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10d38:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   10d3c:	0f 92 c0             	setb   %al
   10d3f:	84 c0                	test   %al,%al
   10d41:	74 24                	je     10d67 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x4b>
	  _M_default_append(__new_size - size());
   10d43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d47:	48 89 c7             	mov    %rax,%rdi
   10d4a:	e8 e7 10 00 00       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10d4f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10d53:	48 29 c2             	sub    %rax,%rdx
   10d56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d5a:	48 89 d6             	mov    %rdx,%rsi
   10d5d:	48 89 c7             	mov    %rax,%rdi
   10d60:	e8 f5 10 00 00       	call   11e5a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>
      }
   10d65:	eb 38                	jmp    10d9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	else if (__new_size < size())
   10d67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d6b:	48 89 c7             	mov    %rax,%rdi
   10d6e:	e8 c3 10 00 00       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   10d73:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
   10d77:	0f 92 c0             	setb   %al
   10d7a:	84 c0                	test   %al,%al
   10d7c:	74 21                	je     10d9f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE6resizeEm+0x83>
	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
   10d7e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d82:	48 8b 00             	mov    (%rax),%rax
   10d85:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10d89:	48 c1 e2 03          	shl    $0x3,%rdx
   10d8d:	48 01 c2             	add    %rax,%rdx
   10d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10d94:	48 89 d6             	mov    %rdx,%rsi
   10d97:	48 89 c7             	mov    %rax,%rdi
   10d9a:	e8 c5 12 00 00       	call   12064 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>
      }
   10d9f:	90                   	nop
   10da0:	c9                   	leave
   10da1:	c3                   	ret

0000000000010da2 <_ZNSt6vectorIP9VkImage_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10da2:	55                   	push   %rbp
   10da3:	48 89 e5             	mov    %rsp,%rbp
   10da6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10daa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10db2:	48 8b 00             	mov    (%rax),%rax
   10db5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10db9:	48 c1 e2 03          	shl    $0x3,%rdx
   10dbd:	48 01 d0             	add    %rdx,%rax
      }
   10dc0:	5d                   	pop    %rbp
   10dc1:	c3                   	ret

0000000000010dc2 <_ZNSt6vectorIP13VkImageView_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   10dc2:	55                   	push   %rbp
   10dc3:	48 89 e5             	mov    %rsp,%rbp
   10dc6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   10dce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10dd2:	48 8b 00             	mov    (%rax),%rax
   10dd5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   10dd9:	48 c1 e2 03          	shl    $0x3,%rdx
   10ddd:	48 01 d0             	add    %rdx,%rax
      }
   10de0:	5d                   	pop    %rbp
   10de1:	c3                   	ret

0000000000010de2 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   10de2:	55                   	push   %rbp
   10de3:	48 89 e5             	mov    %rsp,%rbp
   10de6:	48 83 ec 10          	sub    $0x10,%rsp
   10dea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10dee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10df2:	48 89 c7             	mov    %rax,%rdi
   10df5:	e8 ca 12 00 00       	call   120c4 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>
   10dfa:	90                   	nop
   10dfb:	c9                   	leave
   10dfc:	c3                   	ret
   10dfd:	90                   	nop

0000000000010dfe <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   10dfe:	55                   	push   %rbp
   10dff:	48 89 e5             	mov    %rsp,%rbp
   10e02:	48 83 ec 10          	sub    $0x10,%rsp
   10e06:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10e0a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10e0e:	48 89 c7             	mov    %rax,%rdi
   10e11:	e8 ba 12 00 00       	call   120d0 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>
   10e16:	90                   	nop
   10e17:	c9                   	leave
   10e18:	c3                   	ret
   10e19:	90                   	nop

0000000000010e1a <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_>:
      vector(initializer_list<value_type> __l,
   10e1a:	55                   	push   %rbp
   10e1b:	48 89 e5             	mov    %rsp,%rbp
   10e1e:	53                   	push   %rbx
   10e1f:	48 83 ec 38          	sub    $0x38,%rsp
   10e23:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10e27:	48 89 f0             	mov    %rsi,%rax
   10e2a:	48 89 d6             	mov    %rdx,%rsi
   10e2d:	48 89 f2             	mov    %rsi,%rdx
   10e30:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   10e34:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10e38:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      : _Base(__a)
   10e3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e40:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   10e44:	48 89 d6             	mov    %rdx,%rsi
   10e47:	48 89 c7             	mov    %rax,%rdi
   10e4a:	e8 a9 12 00 00       	call   120f8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>
	_M_range_initialize(__l.begin(), __l.end(),
   10e4f:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10e53:	48 89 c7             	mov    %rax,%rdi
   10e56:	e8 2d 13 00 00       	call   12188 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>
   10e5b:	48 89 c3             	mov    %rax,%rbx
   10e5e:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   10e62:	48 89 c7             	mov    %rax,%rdi
   10e65:	e8 0c 13 00 00       	call   12176 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   10e6a:	48 89 c1             	mov    %rax,%rcx
   10e6d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e71:	48 89 da             	mov    %rbx,%rdx
   10e74:	48 89 ce             	mov    %rcx,%rsi
   10e77:	48 89 c7             	mov    %rax,%rdi
   10e7a:	e8 7d 13 00 00       	call   121fc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>
      }
   10e7f:	eb 1a                	jmp    10e9b <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ESt16initializer_listIS0_ERKS1_+0x81>
   10e81:	48 89 c3             	mov    %rax,%rbx
   10e84:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10e88:	48 89 c7             	mov    %rax,%rdi
   10e8b:	e8 8e 12 00 00       	call   1211e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10e90:	48 89 d8             	mov    %rbx,%rax
   10e93:	48 89 c7             	mov    %rax,%rdi
   10e96:	e8 35 38 ff ff       	call   46d0 <_Unwind_Resume@plt>
   10e9b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   10e9f:	c9                   	leave
   10ea0:	c3                   	ret
   10ea1:	90                   	nop

0000000000010ea2 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   10ea2:	55                   	push   %rbp
   10ea3:	48 89 e5             	mov    %rsp,%rbp
   10ea6:	48 83 ec 10          	sub    $0x10,%rsp
   10eaa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   10eae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10eb2:	48 89 c7             	mov    %rax,%rdi
   10eb5:	e8 fc 13 00 00       	call   122b6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   10eba:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   10ebd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ec1:	48 8b 48 08          	mov    0x8(%rax),%rcx
   10ec5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ec9:	48 8b 00             	mov    (%rax),%rax
   10ecc:	48 89 ce             	mov    %rcx,%rsi
   10ecf:	48 89 c7             	mov    %rax,%rdi
   10ed2:	e8 ed 13 00 00       	call   122c4 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>
      }
   10ed7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10edb:	48 89 c7             	mov    %rax,%rdi
   10ede:	e8 3b 12 00 00       	call   1211e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>
   10ee3:	90                   	nop
   10ee4:	c9                   	leave
   10ee5:	c3                   	ret

0000000000010ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   10ee6:	55                   	push   %rbp
   10ee7:	48 89 e5             	mov    %rsp,%rbp
   10eea:	48 83 ec 10          	sub    $0x10,%rsp
   10eee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   10ef2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   10ef6:	48 89 c7             	mov    %rax,%rdi
   10ef9:	e8 3a 14 00 00       	call   12338 <_ZNSaIP12VkPipeline_TED1Ev>
   10efe:	90                   	nop
   10eff:	c9                   	leave
   10f00:	c3                   	ret

0000000000010f01 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks>:
    pipelineType, VkComputePipelineCreateInfo, VkGraphicsPipelineCreateInfo,
    VkRayTracingPipelineCreateInfoKHR, VkRayTracingPipelineCreateInfoNV>;

template <PipelineType pipelineType = Graphics>
std::vector<VkPipeline>
createPipelines(VkDevice device, VkPipelineCache pipelineCache,
   10f01:	55                   	push   %rbp
   10f02:	48 89 e5             	mov    %rsp,%rbp
   10f05:	41 54                	push   %r12
   10f07:	53                   	push   %rbx
   10f08:	48 83 ec 40          	sub    $0x40,%rsp
   10f0c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   10f10:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   10f14:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   10f18:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   10f1c:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
                const std::vector<pipelineInfoType<pipelineType>> &createInfos,
                const VkAllocationCallbacks *pAllocator = nullptr) {
  uint32_t pipelineCount = static_cast<uint32_t>(createInfos.size());
   10f20:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10f24:	48 89 c7             	mov    %rax,%rdi
   10f27:	e8 c2 13 00 00       	call   122ee <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>
   10f2c:	89 45 ec             	mov    %eax,-0x14(%rbp)
  std::vector<VkPipeline> pipelines{pipelineCount};
   10f2f:	8b 5d ec             	mov    -0x14(%rbp),%ebx
   10f32:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   10f36:	48 89 c7             	mov    %rax,%rdi
   10f39:	e8 de 13 00 00       	call   1231c <_ZNSaIP12VkPipeline_TEC1Ev>
   10f3e:	48 8d 55 e7          	lea    -0x19(%rbp),%rdx
   10f42:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f46:	48 89 de             	mov    %rbx,%rsi
   10f49:	48 89 c7             	mov    %rax,%rdi
   10f4c:	e8 03 14 00 00       	call   12354 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
   10f51:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   10f55:	48 89 c7             	mov    %rax,%rdi
   10f58:	e8 db 13 00 00       	call   12338 <_ZNSaIP12VkPipeline_TED1Ev>
  if constexpr (pipelineType == Compute) {
    result = vkCreateComputePipelines(device, pipelineCache, pipelineCount,
                                      createInfos.data(), pAllocator,
                                      pipelines.data());
  } else if (pipelineType == Graphics) {
    result = vkCreateGraphicsPipelines(device, pipelineCache, pipelineCount,
   10f5d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   10f61:	48 89 c7             	mov    %rax,%rdi
   10f64:	e8 85 14 00 00       	call   123ee <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>
   10f69:	48 89 c3             	mov    %rax,%rbx
   10f6c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   10f70:	48 89 c7             	mov    %rax,%rdi
   10f73:	e8 52 14 00 00       	call   123ca <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>
   10f78:	48 89 c1             	mov    %rax,%rcx
   10f7b:	48 8b 7d b8          	mov    -0x48(%rbp),%rdi
   10f7f:	8b 55 ec             	mov    -0x14(%rbp),%edx
   10f82:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   10f86:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   10f8a:	49 89 d9             	mov    %rbx,%r9
   10f8d:	49 89 f8             	mov    %rdi,%r8
   10f90:	48 89 c7             	mov    %rax,%rdi
   10f93:	e8 c8 31 ff ff       	call   4160 <vkCreateGraphicsPipelines@plt>
   10f98:	89 45 e8             	mov    %eax,-0x18(%rbp)
  //                                          pipelines.data());
  // }
  else {
    throw std::runtime_error("Unknown pipeline type.");
  }
  if (result != VK_SUCCESS) {
   10f9b:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
   10f9f:	74 7f                	je     11020 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x11f>
    throw std::runtime_error("Failed to create pipelines.");
   10fa1:	bf 10 00 00 00       	mov    $0x10,%edi
   10fa6:	e8 c5 31 ff ff       	call   4170 <__cxa_allocate_exception@plt>
   10fab:	48 89 c3             	mov    %rax,%rbx
   10fae:	48 8d 05 d5 8c 00 00 	lea    0x8cd5(%rip),%rax        # 19c8a <_ZN6__pstl9execution2v1L5unseqE+0x373>
   10fb5:	48 89 c6             	mov    %rax,%rsi
   10fb8:	48 89 df             	mov    %rbx,%rdi
   10fbb:	e8 40 31 ff ff       	call   4100 <_ZNSt13runtime_errorC1EPKc@plt>
   10fc0:	48 8b 05 e1 4f 01 00 	mov    0x14fe1(%rip),%rax        # 25fa8 <_ZNSt13runtime_errorD1Ev@GLIBCXX_3.4>
   10fc7:	48 89 c2             	mov    %rax,%rdx
   10fca:	48 8d 05 6f 4d 01 00 	lea    0x14d6f(%rip),%rax        # 25d40 <_ZTISt13runtime_error@GLIBCXX_3.4>
   10fd1:	48 89 c6             	mov    %rax,%rsi
   10fd4:	48 89 df             	mov    %rbx,%rdi
   10fd7:	e8 94 36 ff ff       	call   4670 <__cxa_throw@plt>
  std::vector<VkPipeline> pipelines{pipelineCount};
   10fdc:	48 89 c3             	mov    %rax,%rbx
   10fdf:	48 8d 45 e7          	lea    -0x19(%rbp),%rax
   10fe3:	48 89 c7             	mov    %rax,%rdi
   10fe6:	e8 4d 13 00 00       	call   12338 <_ZNSaIP12VkPipeline_TED1Ev>
   10feb:	48 89 d8             	mov    %rbx,%rax
   10fee:	48 89 c7             	mov    %rax,%rdi
   10ff1:	e8 da 36 ff ff       	call   46d0 <_Unwind_Resume@plt>
    throw std::runtime_error("Failed to create pipelines.");
   10ff6:	49 89 c4             	mov    %rax,%r12
   10ff9:	48 89 df             	mov    %rbx,%rdi
   10ffc:	e8 3f 32 ff ff       	call   4240 <__cxa_free_exception@plt>
   11001:	4c 89 e3             	mov    %r12,%rbx
   11004:	eb 03                	jmp    11009 <_ZN3vkh15createPipelinesILNS_12PipelineTypeE1EEESt6vectorIP12VkPipeline_TSaIS4_EEP10VkDevice_TP17VkPipelineCache_TRKS2_INSt13tuple_elementIXT_ESt5tupleIJ27VkComputePipelineCreateInfo28VkGraphicsPipelineCreateInfo33VkRayTracingPipelineCreateInfoKHR32VkRayTracingPipelineCreateInfoNVEEE4typeESaISJ_EEPK21VkAllocationCallbacks+0x108>
  }
  return pipelines;
}
   11006:	48 89 c3             	mov    %rax,%rbx
   11009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1100d:	48 89 c7             	mov    %rax,%rdi
   11010:	e8 19 00 00 00       	call   1102e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>
   11015:	48 89 d8             	mov    %rbx,%rax
   11018:	48 89 c7             	mov    %rax,%rdi
   1101b:	e8 b0 36 ff ff       	call   46d0 <_Unwind_Resume@plt>
  return pipelines;
   11020:	90                   	nop
}
   11021:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11025:	48 83 c4 40          	add    $0x40,%rsp
   11029:	5b                   	pop    %rbx
   1102a:	41 5c                	pop    %r12
   1102c:	5d                   	pop    %rbp
   1102d:	c3                   	ret

000000000001102e <_ZNSt6vectorIP12VkPipeline_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   1102e:	55                   	push   %rbp
   1102f:	48 89 e5             	mov    %rsp,%rbp
   11032:	48 83 ec 10          	sub    $0x10,%rsp
   11036:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   1103a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1103e:	48 89 c7             	mov    %rax,%rdi
   11041:	e8 1a 14 00 00       	call   12460 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11046:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   11049:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1104d:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11051:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11055:	48 8b 00             	mov    (%rax),%rax
   11058:	48 89 ce             	mov    %rcx,%rsi
   1105b:	48 89 c7             	mov    %rax,%rdi
   1105e:	e8 0b 14 00 00       	call   1246e <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>
      }
   11063:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11067:	48 89 c7             	mov    %rax,%rdi
   1106a:	e8 a3 13 00 00       	call   12412 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   1106f:	90                   	nop
   11070:	c9                   	leave
   11071:	c3                   	ret

0000000000011072 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEixEm>:
      operator[](size_type __n) _GLIBCXX_NOEXCEPT
   11072:	55                   	push   %rbp
   11073:	48 89 e5             	mov    %rsp,%rbp
   11076:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1107a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return *(this->_M_impl._M_start + __n);
   1107e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11082:	48 8b 00             	mov    (%rax),%rax
   11085:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11089:	48 c1 e2 03          	shl    $0x3,%rdx
   1108d:	48 01 d0             	add    %rdx,%rax
      }
   11090:	5d                   	pop    %rbp
   11091:	c3                   	ret

0000000000011092 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11092:	55                   	push   %rbp
   11093:	48 89 e5             	mov    %rsp,%rbp
   11096:	48 83 ec 10          	sub    $0x10,%rsp
   1109a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   1109e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110a2:	48 89 c7             	mov    %rax,%rdi
   110a5:	e8 ee 13 00 00       	call   12498 <_ZNSaIP13VkImageView_TEC1Ev>
   110aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ae:	48 89 c7             	mov    %rax,%rdi
   110b1:	e8 fe 13 00 00       	call   124b4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   110b6:	90                   	nop
   110b7:	c9                   	leave
   110b8:	c3                   	ret
   110b9:	90                   	nop

00000000000110ba <_ZNSaIP13VkImageView_TED1Ev>:
   110ba:	55                   	push   %rbp
   110bb:	48 89 e5             	mov    %rsp,%rbp
   110be:	48 83 ec 10          	sub    $0x10,%rsp
   110c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   110c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ca:	48 89 c7             	mov    %rax,%rdi
   110cd:	e8 10 14 00 00       	call   124e2 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>
   110d2:	90                   	nop
   110d3:	c9                   	leave
   110d4:	c3                   	ret
   110d5:	90                   	nop

00000000000110d6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   110d6:	55                   	push   %rbp
   110d7:	48 89 e5             	mov    %rsp,%rbp
   110da:	48 83 ec 10          	sub    $0x10,%rsp
   110de:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   110e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110e6:	48 8b 50 10          	mov    0x10(%rax),%rdx
   110ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   110ee:	48 8b 00             	mov    (%rax),%rax
   110f1:	48 29 c2             	sub    %rax,%rdx
   110f4:	48 89 d0             	mov    %rdx,%rax
   110f7:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   110fb:	48 89 c2             	mov    %rax,%rdx
   110fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11102:	48 8b 08             	mov    (%rax),%rcx
   11105:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11109:	48 89 ce             	mov    %rcx,%rsi
   1110c:	48 89 c7             	mov    %rax,%rdi
   1110f:	e8 da 13 00 00       	call   124ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   11114:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11118:	48 89 c7             	mov    %rax,%rdi
   1111b:	e8 7e f1 ff ff       	call   1029e <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE12_Vector_implD1Ev>
   11120:	90                   	nop
   11121:	c9                   	leave
   11122:	c3                   	ret
   11123:	90                   	nop

0000000000011124 <_ZNSt6vectorIP13VkImageView_TSaIS1_EED1Ev>:
      ~vector() _GLIBCXX_NOEXCEPT
   11124:	55                   	push   %rbp
   11125:	48 89 e5             	mov    %rsp,%rbp
   11128:	48 83 ec 10          	sub    $0x10,%rsp
   1112c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_get_Tp_allocator());
   11130:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11134:	48 89 c7             	mov    %rax,%rdi
   11137:	e8 e8 13 00 00       	call   12524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1113c:	48 89 c2             	mov    %rax,%rdx
	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   1113f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11143:	48 8b 48 08          	mov    0x8(%rax),%rcx
   11147:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1114b:	48 8b 00             	mov    (%rax),%rax
   1114e:	48 89 ce             	mov    %rcx,%rsi
   11151:	48 89 c7             	mov    %rax,%rdi
   11154:	e8 d9 13 00 00       	call   12532 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
      }
   11159:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1115d:	48 89 c7             	mov    %rax,%rdi
   11160:	e8 71 ff ff ff       	call   110d6 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EED1Ev>
   11165:	90                   	nop
   11166:	c9                   	leave
   11167:	c3                   	ret

0000000000011168 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1Ev>:
	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   11168:	55                   	push   %rbp
   11169:	48 89 e5             	mov    %rsp,%rbp
   1116c:	48 83 ec 10          	sub    $0x10,%rsp
   11170:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _Tp_alloc_type()
   11174:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11178:	48 89 c7             	mov    %rax,%rdi
   1117b:	e8 5a 77 ff ff       	call   88da <_ZNSaIP9VkImage_TEC1Ev>
   11180:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11184:	48 89 c7             	mov    %rax,%rdi
   11187:	e8 ea 9c ff ff       	call   ae76 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   1118c:	90                   	nop
   1118d:	c9                   	leave
   1118e:	c3                   	ret
   1118f:	90                   	nop

0000000000011190 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   11190:	55                   	push   %rbp
   11191:	48 89 e5             	mov    %rsp,%rbp
   11194:	48 83 ec 20          	sub    $0x20,%rsp
   11198:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_start); }
   1119c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   111a0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   111a4:	48 89 d6             	mov    %rdx,%rsi
   111a7:	48 89 c7             	mov    %rax,%rdi
   111aa:	e8 ad 13 00 00       	call   1255c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   111af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111b3:	c9                   	leave
   111b4:	c3                   	ret
   111b5:	90                   	nop

00000000000111b6 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   111b6:	55                   	push   %rbp
   111b7:	48 89 e5             	mov    %rsp,%rbp
   111ba:	48 83 ec 20          	sub    $0x20,%rsp
   111be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_finish); }
   111c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111c6:	48 8d 50 08          	lea    0x8(%rax),%rdx
   111ca:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   111ce:	48 89 d6             	mov    %rdx,%rsi
   111d1:	48 89 c7             	mov    %rax,%rdi
   111d4:	e8 83 13 00 00       	call   1255c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   111d9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   111dd:	c9                   	leave
   111de:	c3                   	ret

00000000000111df <_ZN9__gnu_cxxneIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   111df:	55                   	push   %rbp
   111e0:	48 89 e5             	mov    %rsp,%rbp
   111e3:	53                   	push   %rbx
   111e4:	48 83 ec 18          	sub    $0x18,%rsp
   111e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   111ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   111f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   111f4:	48 89 c7             	mov    %rax,%rdi
   111f7:	e8 7e 13 00 00       	call   1257a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   111fc:	48 8b 18             	mov    (%rax),%rbx
   111ff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11203:	48 89 c7             	mov    %rax,%rdi
   11206:	e8 6f 13 00 00       	call   1257a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>
   1120b:	48 8b 00             	mov    (%rax),%rax
   1120e:	48 39 c3             	cmp    %rax,%rbx
   11211:	0f 95 c0             	setne  %al
   11214:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11218:	c9                   	leave
   11219:	c3                   	ret

000000000001121a <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   1121a:	55                   	push   %rbp
   1121b:	48 89 e5             	mov    %rsp,%rbp
   1121e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11222:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11226:	48 8b 00             	mov    (%rax),%rax
   11229:	48 8d 50 08          	lea    0x8(%rax),%rdx
   1122d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11231:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   11234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   11238:	5d                   	pop    %rbp
   11239:	c3                   	ret

000000000001123a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   1123a:	55                   	push   %rbp
   1123b:	48 89 e5             	mov    %rsp,%rbp
   1123e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11242:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11246:	48 8b 00             	mov    (%rax),%rax
   11249:	5d                   	pop    %rbp
   1124a:	c3                   	ret
   1124b:	90                   	nop

000000000001124c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev>:
  Timer() {
   1124c:	55                   	push   %rbp
   1124d:	48 89 e5             	mov    %rsp,%rbp
   11250:	53                   	push   %rbx
   11251:	48 83 ec 18          	sub    $0x18,%rsp
   11255:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11259:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1125d:	48 89 c7             	mov    %rax,%rdi
   11260:	e8 23 13 00 00       	call   12588 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>
   11265:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11269:	48 83 c0 08          	add    $0x8,%rax
   1126d:	48 89 c7             	mov    %rax,%rdi
   11270:	e8 1b 33 ff ff       	call   4590 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt>
      this->time_unit = "μs";
   11275:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11279:	48 83 c0 08          	add    $0x8,%rax
   1127d:	48 8d 15 22 8a 00 00 	lea    0x8a22(%rip),%rdx        # 19ca6 <_ZN6__pstl9execution2v1L5unseqE+0x38f>
   11284:	48 89 d6             	mov    %rdx,%rsi
   11287:	48 89 c7             	mov    %rax,%rdi
   1128a:	e8 d1 32 ff ff       	call   4560 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc@plt>
    this->start = std::chrono::steady_clock::now();
   1128f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   11293:	e8 98 32 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11298:	48 89 03             	mov    %rax,(%rbx)
  }
   1129b:	eb 1e                	jmp    112bb <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EEC1Ev+0x6f>
   1129d:	48 89 c3             	mov    %rax,%rbx
   112a0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112a4:	48 83 c0 08          	add    $0x8,%rax
   112a8:	48 89 c7             	mov    %rax,%rdi
   112ab:	e8 30 2f ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   112b0:	48 89 d8             	mov    %rbx,%rax
   112b3:	48 89 c7             	mov    %rax,%rdi
   112b6:	e8 15 34 ff ff       	call   46d0 <_Unwind_Resume@plt>
   112bb:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   112bf:	c9                   	leave
   112c0:	c3                   	ret
   112c1:	90                   	nop

00000000000112c2 <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EED1Ev>:
  ~Timer() {
   112c2:	55                   	push   %rbp
   112c3:	48 89 e5             	mov    %rsp,%rbp
   112c6:	48 83 ec 20          	sub    $0x20,%rsp
   112ca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    auto stop = std::chrono::steady_clock::now();
   112ce:	e8 5d 32 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   112d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  }
   112d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   112db:	48 83 c0 08          	add    $0x8,%rax
   112df:	48 89 c7             	mov    %rax,%rdi
   112e2:	e8 f9 2e ff ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   112e7:	90                   	nop
   112e8:	c9                   	leave
   112e9:	c3                   	ret

00000000000112ea <_ZNSt6chronomiINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEES6_EENSt11common_typeIJT0_T1_EE4typeERKNS_10time_pointIT_S8_EERKNSC_ISD_S9_EE>:
      }

    /// The difference between two time points (as a duration)
    template<typename _Clock, typename _Dur1, typename _Dur2>
      constexpr typename common_type<_Dur1, _Dur2>::type
      operator-(const time_point<_Clock, _Dur1>& __lhs,
   112ea:	55                   	push   %rbp
   112eb:	48 89 e5             	mov    %rsp,%rbp
   112ee:	48 83 ec 20          	sub    $0x20,%rsp
   112f2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   112f6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
		const time_point<_Clock, _Dur2>& __rhs)
      { return __lhs.time_since_epoch() - __rhs.time_since_epoch(); }
   112fa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   112fe:	48 89 c7             	mov    %rax,%rdi
   11301:	e8 a2 12 00 00       	call   125a8 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11306:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1130a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1130e:	48 89 c7             	mov    %rax,%rdi
   11311:	e8 92 12 00 00       	call   125a8 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>
   11316:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1131a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   1131e:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11322:	48 89 d6             	mov    %rdx,%rsi
   11325:	48 89 c7             	mov    %rax,%rdi
   11328:	e8 8c 12 00 00       	call   125b9 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>
   1132d:	c9                   	leave
   1132e:	c3                   	ret

000000000001132f <_ZNSt6chrono13duration_castINS_8durationIlSt5ratioILl1ELl1000000EEEElS2_ILl1ELl1000000000EEEENSt9enable_ifIXsrNS_13__is_durationIT_EE5valueES8_E4typeERKNS1_IT0_T1_EE>:
      duration_cast(const duration<_Rep, _Period>& __d)
   1132f:	55                   	push   %rbp
   11330:	48 89 e5             	mov    %rsp,%rbp
   11333:	48 83 ec 10          	sub    $0x10,%rsp
   11337:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __dc::__cast(__d);
   1133b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1133f:	48 89 c7             	mov    %rax,%rdi
   11342:	e8 db 12 00 00       	call   12622 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>
      }
   11347:	c9                   	leave
   11348:	c3                   	ret
   11349:	90                   	nop

000000000001134a <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000EEE5countEv>:
	count() const
   1134a:	55                   	push   %rbp
   1134b:	48 89 e5             	mov    %rsp,%rbp
   1134e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __r; }
   11352:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11356:	48 8b 00             	mov    (%rax),%rax
   11359:	5d                   	pop    %rbp
   1135a:	c3                   	ret
   1135b:	90                   	nop

000000000001135c <_ZN3vkh5TimerINSt6chrono8durationIlSt5ratioILl1ELl1000000EEEELNS_14timer_behaviorE0EE5resetEv>:

  void reset() { start = std::chrono::steady_clock::now(); }
   1135c:	55                   	push   %rbp
   1135d:	48 89 e5             	mov    %rsp,%rbp
   11360:	53                   	push   %rbx
   11361:	48 83 ec 18          	sub    $0x18,%rsp
   11365:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11369:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1136d:	e8 be 31 ff ff       	call   4530 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
   11372:	48 89 03             	mov    %rax,(%rbx)
   11375:	90                   	nop
   11376:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1137a:	c9                   	leave
   1137b:	c3                   	ret

000000000001137c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S5_>:
    { return std::move(__lhs.append(__rhs)); }

  template<typename _CharT, typename _Traits, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    inline basic_string<_CharT, _Traits, _Alloc>
    operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
   1137c:	55                   	push   %rbp
   1137d:	48 89 e5             	mov    %rsp,%rbp
   11380:	48 83 ec 20          	sub    $0x20,%rsp
   11384:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11388:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1138c:	89 d0                	mov    %edx,%eax
   1138e:	88 45 ec             	mov    %al,-0x14(%rbp)
	      _CharT __rhs)
    { return std::move(__lhs.append(1, __rhs)); }
   11391:	0f be 55 ec          	movsbl -0x14(%rbp),%edx
   11395:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11399:	be 01 00 00 00       	mov    $0x1,%esi
   1139e:	48 89 c7             	mov    %rax,%rdi
   113a1:	e8 6a 30 ff ff       	call   4410 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc@plt>
   113a6:	48 89 c7             	mov    %rax,%rdi
   113a9:	e8 d3 00 00 00       	call   11481 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>
   113ae:	48 89 c2             	mov    %rax,%rdx
   113b1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113b5:	48 89 d6             	mov    %rdx,%rsi
   113b8:	48 89 c7             	mov    %rax,%rdi
   113bb:	e8 10 2e ff ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
   113c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113c4:	c9                   	leave
   113c5:	c3                   	ret

00000000000113c6 <_ZNKSt6vectorIPKcSaIS1_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   113c6:	55                   	push   %rbp
   113c7:	48 89 e5             	mov    %rsp,%rbp
   113ca:	48 83 ec 20          	sub    $0x20,%rsp
   113ce:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   113d2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   113d6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   113da:	48 89 d6             	mov    %rdx,%rsi
   113dd:	48 89 c7             	mov    %rax,%rdi
   113e0:	e8 97 12 00 00       	call   1267c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   113e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   113e9:	c9                   	leave
   113ea:	c3                   	ret
   113eb:	90                   	nop

00000000000113ec <_ZNKSt6vectorIPKcSaIS1_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   113ec:	55                   	push   %rbp
   113ed:	48 89 e5             	mov    %rsp,%rbp
   113f0:	48 83 ec 20          	sub    $0x20,%rsp
   113f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   113f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   113fc:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11400:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11404:	48 89 d6             	mov    %rdx,%rsi
   11407:	48 89 c7             	mov    %rax,%rdi
   1140a:	e8 6d 12 00 00       	call   1267c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>
   1140f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11413:	c9                   	leave
   11414:	c3                   	ret

0000000000011415 <_ZN9__gnu_cxxneIPKPKcSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_>:
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
   11415:	55                   	push   %rbp
   11416:	48 89 e5             	mov    %rsp,%rbp
   11419:	53                   	push   %rbx
   1141a:	48 83 ec 18          	sub    $0x18,%rsp
   1141e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11422:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() != __rhs.base(); }
   11426:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1142a:	48 89 c7             	mov    %rax,%rdi
   1142d:	e8 68 12 00 00       	call   1269a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11432:	48 8b 18             	mov    (%rax),%rbx
   11435:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11439:	48 89 c7             	mov    %rax,%rdi
   1143c:	e8 59 12 00 00       	call   1269a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11441:	48 8b 00             	mov    (%rax),%rax
   11444:	48 39 c3             	cmp    %rax,%rbx
   11447:	0f 95 c0             	setne  %al
   1144a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1144e:	c9                   	leave
   1144f:	c3                   	ret

0000000000011450 <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   11450:	55                   	push   %rbp
   11451:	48 89 e5             	mov    %rsp,%rbp
   11454:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	++_M_current;
   11458:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1145c:	48 8b 00             	mov    (%rax),%rax
   1145f:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11463:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11467:	48 89 10             	mov    %rdx,(%rax)
	return *this;
   1146a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1146e:	5d                   	pop    %rbp
   1146f:	c3                   	ret

0000000000011470 <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11470:	55                   	push   %rbp
   11471:	48 89 e5             	mov    %rsp,%rbp
   11474:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *_M_current; }
   11478:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1147c:	48 8b 00             	mov    (%rax),%rax
   1147f:	5d                   	pop    %rbp
   11480:	c3                   	ret

0000000000011481 <_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_>:
   *  @return The parameter cast to an rvalue-reference to allow moving it.
  */
  template<typename _Tp>
    _GLIBCXX_NODISCARD
    constexpr typename std::remove_reference<_Tp>::type&&
    move(_Tp&& __t) noexcept
   11481:	55                   	push   %rbp
   11482:	48 89 e5             	mov    %rsp,%rbp
   11485:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11489:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1148d:	5d                   	pop    %rbp
   1148e:	c3                   	ret
   1148f:	90                   	nop

0000000000011490 <_ZNSt12_Vector_baseIPKcSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   11490:	55                   	push   %rbp
   11491:	48 89 e5             	mov    %rsp,%rbp
   11494:	48 83 ec 10          	sub    $0x10,%rsp
   11498:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1149c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   114a0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114a4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   114a8:	48 89 d6             	mov    %rdx,%rsi
   114ab:	48 89 c7             	mov    %rax,%rdi
   114ae:	e8 a3 88 ff ff       	call   9d56 <_ZNSt12_Vector_baseIPKcSaIS1_EE12_Vector_implC1ERKS2_>
   114b3:	90                   	nop
   114b4:	c9                   	leave
   114b5:	c3                   	ret

00000000000114b6 <_ZNKSt16initializer_listIPKcE5beginEv>:
      constexpr size_type
      size() const noexcept { return _M_len; }

      // First element.
      constexpr const_iterator
      begin() const noexcept { return _M_array; }
   114b6:	55                   	push   %rbp
   114b7:	48 89 e5             	mov    %rsp,%rbp
   114ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   114be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   114c2:	48 8b 00             	mov    (%rax),%rax
   114c5:	5d                   	pop    %rbp
   114c6:	c3                   	ret
   114c7:	90                   	nop

00000000000114c8 <_ZNKSt16initializer_listIPKcE3endEv>:

      // One past the last element.
      constexpr const_iterator
      end() const noexcept { return begin() + size(); }
   114c8:	55                   	push   %rbp
   114c9:	48 89 e5             	mov    %rsp,%rbp
   114cc:	53                   	push   %rbx
   114cd:	48 83 ec 18          	sub    $0x18,%rsp
   114d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   114d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114d9:	48 89 c7             	mov    %rax,%rdi
   114dc:	e8 d5 ff ff ff       	call   114b6 <_ZNKSt16initializer_listIPKcE5beginEv>
   114e1:	48 89 c3             	mov    %rax,%rbx
   114e4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   114e8:	48 89 c7             	mov    %rax,%rdi
   114eb:	e8 b8 11 00 00       	call   126a8 <_ZNKSt16initializer_listIPKcE4sizeEv>
   114f0:	48 c1 e0 03          	shl    $0x3,%rax
   114f4:	48 01 d8             	add    %rbx,%rax
   114f7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   114fb:	c9                   	leave
   114fc:	c3                   	ret

00000000000114fd <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>:
    distance(_InputIterator __first, _InputIterator __last)
   114fd:	55                   	push   %rbp
   114fe:	48 89 e5             	mov    %rsp,%rbp
   11501:	48 83 ec 10          	sub    $0x10,%rsp
   11505:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11509:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   1150d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11511:	48 89 c7             	mov    %rax,%rdi
   11514:	e8 a1 11 00 00       	call   126ba <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>
      return std::__distance(__first, __last,
   11519:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1151d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11521:	48 89 d6             	mov    %rdx,%rsi
   11524:	48 89 c7             	mov    %rax,%rdi
   11527:	e8 99 11 00 00       	call   126c5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>
    }
   1152c:	c9                   	leave
   1152d:	c3                   	ret

000000000001152e <_ZNSt6vectorIPKcSaIS1_EE19_M_range_initializeIPKS1_EEvT_S7_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   1152e:	55                   	push   %rbp
   1152f:	48 89 e5             	mov    %rsp,%rbp
   11532:	53                   	push   %rbx
   11533:	48 83 ec 38          	sub    $0x38,%rsp
   11537:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1153b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1153f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   11543:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11547:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1154b:	48 89 d6             	mov    %rdx,%rsi
   1154e:	48 89 c7             	mov    %rax,%rdi
   11551:	e8 a7 ff ff ff       	call   114fd <_ZSt8distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_>
   11556:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   1155a:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1155e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11562:	48 89 c7             	mov    %rax,%rdi
   11565:	e8 62 79 ff ff       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1156a:	48 89 c2             	mov    %rax,%rdx
   1156d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11571:	48 89 d6             	mov    %rdx,%rsi
   11574:	48 89 c7             	mov    %rax,%rdi
   11577:	e8 51 78 ff ff       	call   8dcd <_ZNSt6vectorIPKcSaIS1_EE17_S_check_init_lenEmRKS2_>
   1157c:	48 89 c6             	mov    %rax,%rsi
   1157f:	48 89 df             	mov    %rbx,%rdi
   11582:	e8 5b 93 ff ff       	call   a8e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   11587:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   1158b:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1158e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   11592:	48 8b 00             	mov    (%rax),%rax
   11595:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11599:	48 c1 e2 03          	shl    $0x3,%rdx
   1159d:	48 01 c2             	add    %rax,%rdx
   115a0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115a4:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   115a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115ac:	48 89 c7             	mov    %rax,%rdi
   115af:	e8 18 79 ff ff       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   115b4:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   115b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   115bb:	48 8b 10             	mov    (%rax),%rdx
   115be:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   115c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   115c6:	48 89 c7             	mov    %rax,%rdi
   115c9:	e8 11 11 00 00       	call   126df <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>
	  this->_M_impl._M_finish =
   115ce:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   115d2:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   115d6:	90                   	nop
   115d7:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   115db:	c9                   	leave
   115dc:	c3                   	ret

00000000000115dd <_ZSt8_DestroyIPPKcS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   115dd:	55                   	push   %rbp
   115de:	48 89 e5             	mov    %rsp,%rbp
   115e1:	48 83 ec 20          	sub    $0x20,%rsp
   115e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   115e9:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   115ed:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   115f1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   115f5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   115f9:	48 89 d6             	mov    %rdx,%rsi
   115fc:	48 89 c7             	mov    %rax,%rdi
   115ff:	e8 0c 11 00 00       	call   12710 <_ZSt8_DestroyIPPKcEvT_S3_>
    }
   11604:	90                   	nop
   11605:	c9                   	leave
   11606:	c3                   	ret
   11607:	90                   	nop

0000000000011608 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11608:	55                   	push   %rbp
   11609:	48 89 e5             	mov    %rsp,%rbp
   1160c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11610:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11614:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11618:	48 8b 10             	mov    (%rax),%rdx
   1161b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1161f:	48 89 10             	mov    %rdx,(%rax)
   11622:	90                   	nop
   11623:	5d                   	pop    %rbp
   11624:	c3                   	ret
   11625:	90                   	nop

0000000000011626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11626:	55                   	push   %rbp
   11627:	48 89 e5             	mov    %rsp,%rbp
   1162a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1162e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11632:	5d                   	pop    %rbp
   11633:	c3                   	ret

0000000000011634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11634:	55                   	push   %rbp
   11635:	48 89 e5             	mov    %rsp,%rbp
   11638:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   1163c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11640:	5d                   	pop    %rbp
   11641:	c3                   	ret

0000000000011642 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   11642:	55                   	push   %rbp
   11643:	48 89 e5             	mov    %rsp,%rbp
   11646:	48 83 ec 20          	sub    $0x20,%rsp
   1164a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1164e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11652:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   11656:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1165a:	48 89 c7             	mov    %rax,%rdi
   1165d:	e8 d2 ff ff ff       	call   11634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11662:	48 89 c2             	mov    %rax,%rdx
   11665:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   11669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1166d:	48 89 ce             	mov    %rcx,%rsi
   11670:	48 89 c7             	mov    %rax,%rdi
   11673:	e8 be 10 00 00       	call   12736 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>
	}
   11678:	90                   	nop
   11679:	c9                   	leave
   1167a:	c3                   	ret
   1167b:	90                   	nop

000000000001167c <_ZNSt6vectorIPKcSaIS1_EE17_M_realloc_insertIJRS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    template<typename... _Args>
      _GLIBCXX20_CONSTEXPR
      void
      vector<_Tp, _Alloc>::
   1167c:	55                   	push   %rbp
   1167d:	48 89 e5             	mov    %rsp,%rbp
   11680:	53                   	push   %rbx
   11681:	48 83 ec 68          	sub    $0x68,%rsp
   11685:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)
   11689:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)
   1168d:	48 89 55 98          	mov    %rdx,-0x68(%rbp)
    vector<_Tp, _Alloc>::
    _M_realloc_insert(iterator __position, const _Tp& __x)
#endif
    {
      const size_type __len =
	_M_check_len(size_type(1), "vector::_M_realloc_insert");
   11691:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11695:	48 8d 15 0e 86 00 00 	lea    0x860e(%rip),%rdx        # 19caa <_ZN6__pstl9execution2v1L5unseqE+0x393>
   1169c:	be 01 00 00 00       	mov    $0x1,%esi
   116a1:	48 89 c7             	mov    %rax,%rdi
   116a4:	e8 cf 10 00 00       	call   12778 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>
   116a9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
      pointer __old_start = this->_M_impl._M_start;
   116ad:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116b1:	48 8b 00             	mov    (%rax),%rax
   116b4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      pointer __old_finish = this->_M_impl._M_finish;
   116b8:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116bc:	48 8b 40 08          	mov    0x8(%rax),%rax
   116c0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
      const size_type __elems_before = __position - begin();
   116c4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116c8:	48 89 c7             	mov    %rax,%rdi
   116cb:	e8 b0 ed ff ff       	call   10480 <_ZNSt6vectorIPKcSaIS1_EE5beginEv>
   116d0:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
   116d4:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx
   116d8:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   116dc:	48 89 d6             	mov    %rdx,%rsi
   116df:	48 89 c7             	mov    %rax,%rdi
   116e2:	e8 59 11 00 00       	call   12840 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>
   116e7:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      pointer __new_start(this->_M_allocate(__len));
   116eb:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   116ef:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   116f3:	48 89 d6             	mov    %rdx,%rsi
   116f6:	48 89 c7             	mov    %rax,%rdi
   116f9:	e8 e4 91 ff ff       	call   a8e2 <_ZNSt12_Vector_baseIPKcSaIS1_EE11_M_allocateEm>
   116fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
      pointer __new_finish(__new_start);
   11702:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11706:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
	  // The order of the three operations is dictated by the C++11
	  // case, where the moves could alter a new element belonging
	  // to the existing vector.  This is an issue only for callers
	  // taking the element by lvalue ref (see last bullet of C++11
	  // [res.on.arguments]).
	  _Alloc_traits::construct(this->_M_impl,
   1170a:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   1170e:	48 89 c7             	mov    %rax,%rdi
   11711:	e8 1e ff ff ff       	call   11634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   11716:	48 89 c2             	mov    %rax,%rdx
				   __new_start + __elems_before,
   11719:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1171d:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11724:	00 
	  _Alloc_traits::construct(this->_M_impl,
   11725:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11729:	48 01 c1             	add    %rax,%rcx
   1172c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11730:	48 89 ce             	mov    %rcx,%rsi
   11733:	48 89 c7             	mov    %rax,%rdi
   11736:	e8 07 ff ff ff       	call   11642 <_ZNSt16allocator_traitsISaIPKcEE9constructIS1_JRS1_EEEvRS2_PT_DpOT0_>
#if __cplusplus >= 201103L
				   std::forward<_Args>(__args)...);
#else
				   __x);
#endif
	  __new_finish = pointer();
   1173b:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
   11742:	00 

#if __cplusplus >= 201103L
	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
	    {
	      __new_finish = _S_relocate(__old_start, __position.base(),
					 __new_start, _M_get_Tp_allocator());
   11743:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11747:	48 89 c7             	mov    %rax,%rdi
   1174a:	e8 7d 77 ff ff       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   1174f:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__old_start, __position.base(),
   11752:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11756:	48 89 c7             	mov    %rax,%rdi
   11759:	e8 c8 fe ff ff       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1175e:	48 8b 30             	mov    (%rax),%rsi
   11761:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11765:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11769:	48 89 d9             	mov    %rbx,%rcx
   1176c:	48 89 c7             	mov    %rax,%rdi
   1176f:	e8 0e 11 00 00       	call   12882 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   11774:	48 89 45 c0          	mov    %rax,-0x40(%rbp)

	      ++__new_finish;
   11778:	48 83 45 c0 08       	addq   $0x8,-0x40(%rbp)

	      __new_finish = _S_relocate(__position.base(), __old_finish,
					 __new_finish, _M_get_Tp_allocator());
   1177d:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11781:	48 89 c7             	mov    %rax,%rdi
   11784:	e8 43 77 ff ff       	call   8ecc <_ZNSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   11789:	48 89 c3             	mov    %rax,%rbx
	      __new_finish = _S_relocate(__position.base(), __old_finish,
   1178c:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   11790:	48 89 c7             	mov    %rax,%rdi
   11793:	e8 8e fe ff ff       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   11798:	48 8b 00             	mov    (%rax),%rax
   1179b:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   1179f:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
   117a3:	48 89 d9             	mov    %rbx,%rcx
   117a6:	48 89 c7             	mov    %rax,%rdi
   117a9:	e8 d4 10 00 00       	call   12882 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
   117ae:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
#if __cplusplus >= 201103L
      if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
#endif
	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
      _GLIBCXX_ASAN_ANNOTATE_REINIT;
      _M_deallocate(__old_start,
   117b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
		    this->_M_impl._M_end_of_storage - __old_start);
   117b6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   117ba:	48 8b 52 10          	mov    0x10(%rdx),%rdx
   117be:	48 2b 55 e0          	sub    -0x20(%rbp),%rdx
   117c2:	48 c1 fa 03          	sar    $0x3,%rdx
      _M_deallocate(__old_start,
   117c6:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   117ca:	48 89 ce             	mov    %rcx,%rsi
   117cd:	48 89 c7             	mov    %rax,%rdi
   117d0:	e8 2b 77 ff ff       	call   8f00 <_ZNSt12_Vector_baseIPKcSaIS1_EE13_M_deallocateEPS1_m>
      this->_M_impl._M_start = __new_start;
   117d5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117d9:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   117dd:	48 89 10             	mov    %rdx,(%rax)
      this->_M_impl._M_finish = __new_finish;
   117e0:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   117e4:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   117e8:	48 89 50 08          	mov    %rdx,0x8(%rax)
      this->_M_impl._M_end_of_storage = __new_start + __len;
   117ec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   117f0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   117f7:	00 
   117f8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   117fc:	48 01 c2             	add    %rax,%rdx
   117ff:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11803:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   11807:	90                   	nop
   11808:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1180c:	c9                   	leave
   1180d:	c3                   	ret

000000000001180e <_ZNSt6vectorIPKcSaIS1_EE4backEv>:
      back() _GLIBCXX_NOEXCEPT
   1180e:	55                   	push   %rbp
   1180f:	48 89 e5             	mov    %rsp,%rbp
   11812:	48 83 ec 20          	sub    $0x20,%rsp
   11816:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return *(end() - 1);
   1181a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1181e:	48 89 c7             	mov    %rax,%rdi
   11821:	e8 80 ec ff ff       	call   104a6 <_ZNSt6vectorIPKcSaIS1_EE3endEv>
   11826:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   1182a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1182e:	be 01 00 00 00       	mov    $0x1,%esi
   11833:	48 89 c7             	mov    %rax,%rdi
   11836:	e8 79 10 00 00       	call   128b4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>
   1183b:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
   1183f:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   11843:	48 89 c7             	mov    %rax,%rdi
   11846:	e8 df ec ff ff       	call   1052a <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEdeEv>
      }
   1184b:	c9                   	leave
   1184c:	c3                   	ret
   1184d:	90                   	nop

000000000001184e <_ZNKSt6vectorIPKcSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   1184e:	55                   	push   %rbp
   1184f:	48 89 e5             	mov    %rsp,%rbp
   11852:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11856:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1185a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1185e:	5d                   	pop    %rbp
   1185f:	c3                   	ret

0000000000011860 <_ZSt7forwardIjEOT_RNSt16remove_referenceIS0_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   11860:	55                   	push   %rbp
   11861:	48 89 e5             	mov    %rsp,%rbp
   11864:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11868:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1186c:	5d                   	pop    %rbp
   1186d:	c3                   	ret

000000000001186e <_ZSt7forwardIR23VkQueueFamilyPropertiesEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1186e:	55                   	push   %rbp
   1186f:	48 89 e5             	mov    %rsp,%rbp
   11872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11876:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1187a:	5d                   	pop    %rbp
   1187b:	c3                   	ret

000000000001187c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   1187c:	55                   	push   %rbp
   1187d:	48 89 e5             	mov    %rsp,%rbp
   11880:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   11884:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11888:	5d                   	pop    %rbp
   11889:	c3                   	ret

000000000001188a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>:
      using _Optional_payload_base<_Tp>::_Optional_payload_base;
   1188a:	55                   	push   %rbp
   1188b:	48 89 e5             	mov    %rsp,%rbp
   1188e:	48 83 ec 20          	sub    $0x20,%rsp
   11892:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11896:	48 89 75 e8          	mov    %rsi,-0x18(%rbp)
   1189a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1189e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   118a2:	48 89 d6             	mov    %rdx,%rsi
   118a5:	48 89 c7             	mov    %rax,%rdi
   118a8:	e8 49 10 00 00       	call   128f6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>
   118ad:	90                   	nop
   118ae:	c9                   	leave
   118af:	c3                   	ret

00000000000118b0 <_ZNSt14_Optional_baseISt4pairIj23VkQueueFamilyPropertiesELb1ELb1EEC1IJS2_ELb0EEESt10in_place_tDpOT_>:
	_Optional_base(in_place_t, _Args&&... __args)
   118b0:	55                   	push   %rbp
   118b1:	48 89 e5             	mov    %rsp,%rbp
   118b4:	53                   	push   %rbx
   118b5:	48 83 ec 18          	sub    $0x18,%rsp
   118b9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   118bd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _M_payload(in_place, std::forward<_Args>(__args)...)
   118c1:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   118c5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   118c9:	48 89 c7             	mov    %rax,%rdi
   118cc:	e8 ab ff ff ff       	call   1187c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   118d1:	48 89 c6             	mov    %rax,%rsi
   118d4:	48 89 df             	mov    %rbx,%rdi
   118d7:	e8 ae ff ff ff       	call   1188a <_ZNSt17_Optional_payloadISt4pairIj23VkQueueFamilyPropertiesELb1ELb0ELb0EECI1St22_Optional_payload_baseIS2_EIJS2_EEESt10in_place_tDpOT_>
	{ }
   118dc:	90                   	nop
   118dd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   118e1:	c9                   	leave
   118e2:	c3                   	ret
   118e3:	90                   	nop

00000000000118e4 <_ZN9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   118e4:	55                   	push   %rbp
   118e5:	48 89 e5             	mov    %rsp,%rbp
   118e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   118ec:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   118f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   118f4:	48 8b 10             	mov    (%rax),%rdx
   118f7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   118fb:	48 89 10             	mov    %rdx,(%rax)
   118fe:	90                   	nop
   118ff:	5d                   	pop    %rbp
   11900:	c3                   	ret
   11901:	90                   	nop

0000000000011902 <_ZNK9__gnu_cxx17__normal_iteratorIPP18VkPhysicalDevice_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11902:	55                   	push   %rbp
   11903:	48 89 e5             	mov    %rsp,%rbp
   11906:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   1190a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1190e:	5d                   	pop    %rbp
   1190f:	c3                   	ret

0000000000011910 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_>:
      _M_copy_assign(const _Optional_payload_base& __other)
   11910:	55                   	push   %rbp
   11911:	48 89 e5             	mov    %rsp,%rbp
   11914:	53                   	push   %rbx
   11915:	48 83 ec 18          	sub    $0x18,%rsp
   11919:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1191d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (this->_M_engaged && __other._M_engaged)
   11921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11925:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11929:	84 c0                	test   %al,%al
   1192b:	74 35                	je     11962 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
   1192d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11931:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   11935:	84 c0                	test   %al,%al
   11937:	74 29                	je     11962 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x52>
	  this->_M_get() = __other._M_get();
   11939:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1193d:	48 89 c7             	mov    %rax,%rdi
   11940:	e8 ed 0f 00 00       	call   12932 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11945:	48 89 c3             	mov    %rax,%rbx
   11948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1194c:	48 89 c7             	mov    %rax,%rdi
   1194f:	e8 4e 00 00 00       	call   119a2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   11954:	48 89 de             	mov    %rbx,%rsi
   11957:	48 89 c7             	mov    %rax,%rdi
   1195a:	e8 e1 0f 00 00       	call   12940 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>
   1195f:	90                   	nop
      }
   11960:	eb 38                	jmp    1199a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	    if (__other._M_engaged)
   11962:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11966:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   1196a:	84 c0                	test   %al,%al
   1196c:	74 20                	je     1198e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x7e>
	      this->_M_construct(__other._M_get());
   1196e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11972:	48 89 c7             	mov    %rax,%rdi
   11975:	e8 b8 0f 00 00       	call   12932 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>
   1197a:	48 89 c2             	mov    %rax,%rdx
   1197d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11981:	48 89 d6             	mov    %rdx,%rsi
   11984:	48 89 c7             	mov    %rax,%rdi
   11987:	e8 f2 0f 00 00       	call   1297e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>
      }
   1198c:	eb 0c                	jmp    1199a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE14_M_copy_assignERKS3_+0x8a>
	      this->_M_reset();
   1198e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11992:	48 89 c7             	mov    %rax,%rdi
   11995:	e8 2a 10 00 00       	call   129c4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>
      }
   1199a:	90                   	nop
   1199b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1199f:	c9                   	leave
   119a0:	c3                   	ret
   119a1:	90                   	nop

00000000000119a2 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() noexcept
   119a2:	55                   	push   %rbp
   119a3:	48 89 e5             	mov    %rsp,%rbp
   119a6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   119aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119ae:	5d                   	pop    %rbp
   119af:	c3                   	ret

00000000000119b0 <_ZNSaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   119b0:	55                   	push   %rbp
   119b1:	48 89 e5             	mov    %rsp,%rbp
   119b4:	48 83 ec 10          	sub    $0x10,%rsp
   119b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   119c0:	48 89 c7             	mov    %rax,%rdi
   119c3:	e8 24 10 00 00       	call   129ec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>
   119c8:	90                   	nop
   119c9:	c9                   	leave
   119ca:	c3                   	ret
   119cb:	90                   	nop

00000000000119cc <_ZNSt20_Rb_tree_key_compareISt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1Ev>:
      _Rb_tree_key_compare()
   119cc:	55                   	push   %rbp
   119cd:	48 89 e5             	mov    %rsp,%rbp
   119d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { }
   119d4:	90                   	nop
   119d5:	5d                   	pop    %rbp
   119d6:	c3                   	ret
   119d7:	90                   	nop

00000000000119d8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   119d8:	55                   	push   %rbp
   119d9:	48 89 e5             	mov    %rsp,%rbp
   119dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   119e0:	90                   	nop
   119e1:	5d                   	pop    %rbp
   119e2:	c3                   	ret
   119e3:	90                   	nop

00000000000119e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
      }

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    void
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   119e4:	55                   	push   %rbp
   119e5:	48 89 e5             	mov    %rsp,%rbp
   119e8:	48 83 ec 20          	sub    $0x20,%rsp
   119ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   119f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    _M_erase(_Link_type __x)
    {
      // Erase without rebalancing.
      while (__x != 0)
   119f4:	eb 49                	jmp    11a3f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x5b>
	{
	  _M_erase(_S_right(__x));
   119f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   119fa:	48 89 c7             	mov    %rax,%rdi
   119fd:	e8 f5 0f 00 00       	call   129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   11a02:	48 89 c2             	mov    %rax,%rdx
   11a05:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a09:	48 89 d6             	mov    %rdx,%rsi
   11a0c:	48 89 c7             	mov    %rax,%rdi
   11a0f:	e8 d0 ff ff ff       	call   119e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
	  _Link_type __y = _S_left(__x);
   11a14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11a18:	48 89 c7             	mov    %rax,%rdi
   11a1b:	e8 e9 0f 00 00       	call   12a09 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   11a20:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_drop_node(__x);
   11a24:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   11a28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11a2c:	48 89 d6             	mov    %rdx,%rsi
   11a2f:	48 89 c7             	mov    %rax,%rdi
   11a32:	e8 e5 0f 00 00       	call   12a1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	  __x = __y;
   11a37:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a3b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
      while (__x != 0)
   11a3f:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   11a44:	75 b0                	jne    119f6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x12>
	}
    }
   11a46:	90                   	nop
   11a47:	90                   	nop
   11a48:	c9                   	leave
   11a49:	c3                   	ret

0000000000011a4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>:
      _M_begin() _GLIBCXX_NOEXCEPT
   11a4a:	55                   	push   %rbp
   11a4b:	48 89 e5             	mov    %rsp,%rbp
   11a4e:	48 83 ec 10          	sub    $0x10,%rsp
   11a52:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_mbegin(); }
   11a56:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a5a:	48 89 c7             	mov    %rax,%rdi
   11a5d:	e8 f4 0f 00 00       	call   12a56 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>
   11a62:	c9                   	leave
   11a63:	c3                   	ret

0000000000011a64 <_ZN9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11a64:	55                   	push   %rbp
   11a65:	48 89 e5             	mov    %rsp,%rbp
   11a68:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a6c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11a70:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11a74:	48 8b 10             	mov    (%rax),%rdx
   11a77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a7b:	48 89 10             	mov    %rdx,(%rax)
   11a7e:	90                   	nop
   11a7f:	5d                   	pop    %rbp
   11a80:	c3                   	ret
   11a81:	90                   	nop

0000000000011a82 <_ZNK9__gnu_cxx17__normal_iteratorIP21VkExtensionPropertiesSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11a82:	55                   	push   %rbp
   11a83:	48 89 e5             	mov    %rsp,%rbp
   11a86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11a8e:	5d                   	pop    %rbp
   11a8f:	c3                   	ret

0000000000011a90 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE11lower_boundERS9_>:
       *  that matches the given key.  If unsuccessful it returns an iterator
       *  pointing to the first element that has a greater value than given key
       *  or end() if no such element exists.
       */
      iterator
      lower_bound(const key_type& __x)
   11a90:	55                   	push   %rbp
   11a91:	48 89 e5             	mov    %rsp,%rbp
   11a94:	48 83 ec 10          	sub    $0x10,%rsp
   11a98:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11a9c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return _M_t.lower_bound(__x); }
   11aa0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11aa4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   11aa8:	48 89 d6             	mov    %rdx,%rsi
   11aab:	48 89 c7             	mov    %rax,%rdi
   11aae:	e8 b5 0f 00 00       	call   12a68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>
   11ab3:	c9                   	leave
   11ab4:	c3                   	ret
   11ab5:	90                   	nop

0000000000011ab6 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   11ab6:	55                   	push   %rbp
   11ab7:	48 89 e5             	mov    %rsp,%rbp
   11aba:	48 83 ec 10          	sub    $0x10,%rsp
   11abe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.end(); }
   11ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ac6:	48 89 c7             	mov    %rax,%rdi
   11ac9:	e8 e6 0f 00 00       	call   12ab4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>
   11ace:	c9                   	leave
   11acf:	c3                   	ret

0000000000011ad0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>:
      operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
   11ad0:	55                   	push   %rbp
   11ad1:	48 89 e5             	mov    %rsp,%rbp
   11ad4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11ad8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x._M_node == __y._M_node; }
   11adc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ae0:	48 8b 10             	mov    (%rax),%rdx
   11ae3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11ae7:	48 8b 00             	mov    (%rax),%rax
   11aea:	48 39 c2             	cmp    %rax,%rdx
   11aed:	0f 94 c0             	sete   %al
   11af0:	5d                   	pop    %rbp
   11af1:	c3                   	ret

0000000000011af2 <_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEE8key_compEv>:
      key_comp() const
   11af2:	55                   	push   %rbp
   11af3:	48 89 e5             	mov    %rsp,%rbp
   11af6:	48 83 ec 10          	sub    $0x10,%rsp
   11afa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_t.key_comp(); }
   11afe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b02:	48 89 c7             	mov    %rax,%rdi
   11b05:	e8 d4 0f 00 00       	call   12ade <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>
   11b0a:	90                   	nop
   11b0b:	c9                   	leave
   11b0c:	c3                   	ret
   11b0d:	90                   	nop

0000000000011b0e <_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEdeEv>:
      operator*() const _GLIBCXX_NOEXCEPT
   11b0e:	55                   	push   %rbp
   11b0f:	48 89 e5             	mov    %rsp,%rbp
   11b12:	48 83 ec 10          	sub    $0x10,%rsp
   11b16:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
   11b1a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b1e:	48 8b 00             	mov    (%rax),%rax
   11b21:	48 89 c7             	mov    %rax,%rdi
   11b24:	e8 c1 0f 00 00       	call   12aea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   11b29:	c9                   	leave
   11b2a:	c3                   	ret
   11b2b:	90                   	nop

0000000000011b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>:
  template<typename _Tp>
    struct less : public binary_function<_Tp, _Tp, bool>
    {
      _GLIBCXX14_CONSTEXPR
      bool
      operator()(const _Tp& __x, const _Tp& __y) const
   11b2c:	55                   	push   %rbp
   11b2d:	48 89 e5             	mov    %rsp,%rbp
   11b30:	48 83 ec 20          	sub    $0x20,%rsp
   11b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b38:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   11b3c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { return __x < __y; }
   11b40:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11b44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b48:	48 89 d6             	mov    %rdx,%rsi
   11b4b:	48 89 c7             	mov    %rax,%rdi
   11b4e:	e8 b5 0f 00 00       	call   12b08 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>
   11b53:	c9                   	leave
   11b54:	c3                   	ret

0000000000011b55 <_ZSt16forward_as_tupleIJNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEESt5tupleIJDpOT_EES9_>:
  // _GLIBCXX_RESOLVE_LIB_DEFECTS
  // 2275. Why is forward_as_tuple not constexpr?
  /// std::forward_as_tuple
  template<typename... _Elements>
    constexpr tuple<_Elements&&...>
    forward_as_tuple(_Elements&&... __args) noexcept
   11b55:	55                   	push   %rbp
   11b56:	48 89 e5             	mov    %rsp,%rbp
   11b59:	48 83 ec 10          	sub    $0x10,%rsp
   11b5d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b61:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return tuple<_Elements&&...>(std::forward<_Elements>(__args)...); }
   11b65:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b69:	48 89 c7             	mov    %rax,%rdi
   11b6c:	e8 bf 0f 00 00       	call   12b30 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   11b71:	48 89 c2             	mov    %rax,%rdx
   11b74:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b78:	48 89 d6             	mov    %rdx,%rsi
   11b7b:	48 89 c7             	mov    %rax,%rdi
   11b7e:	e8 bb 0f 00 00       	call   12b3e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>
   11b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11b87:	c9                   	leave
   11b88:	c3                   	ret
   11b89:	90                   	nop

0000000000011b8a <_ZNSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1ERKSt17_Rb_tree_iteratorIS8_E>:
      _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
   11b8a:	55                   	push   %rbp
   11b8b:	48 89 e5             	mov    %rsp,%rbp
   11b8e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11b92:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__it._M_node) { }
   11b96:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11b9a:	48 8b 10             	mov    (%rax),%rdx
   11b9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11ba1:	48 89 10             	mov    %rdx,(%rax)
   11ba4:	90                   	nop
   11ba5:	5d                   	pop    %rbp
   11ba6:	c3                   	ret
   11ba7:	90                   	nop

0000000000011ba8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:

  template<typename _Key, typename _Val, typename _KeyOfValue,
	   typename _Compare, typename _Alloc>
    template<typename... _Args>
      auto
      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   11ba8:	55                   	push   %rbp
   11ba9:	48 89 e5             	mov    %rsp,%rbp
   11bac:	41 54                	push   %r12
   11bae:	53                   	push   %rbx
   11baf:	48 83 ec 60          	sub    $0x60,%rsp
   11bb3:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
   11bb7:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
   11bbb:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
   11bbf:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
   11bc3:	4c 89 45 98          	mov    %r8,-0x68(%rbp)
      _M_emplace_hint_unique(const_iterator __pos, _Args&&... __args)
      -> iterator
      {
	_Auto_node __z(*this, std::forward<_Args>(__args)...);
   11bc7:	48 8b 45 98          	mov    -0x68(%rbp),%rax
   11bcb:	48 89 c7             	mov    %rax,%rdi
   11bce:	e8 ba 0f 00 00       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   11bd3:	49 89 c4             	mov    %rax,%r12
   11bd6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   11bda:	48 89 c7             	mov    %rax,%rdi
   11bdd:	e8 9d 0f 00 00       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   11be2:	48 89 c3             	mov    %rax,%rbx
   11be5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   11be9:	48 89 c7             	mov    %rax,%rdi
   11bec:	e8 80 0f 00 00       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   11bf1:	48 89 c2             	mov    %rax,%rdx
   11bf4:	48 8b 75 b8          	mov    -0x48(%rbp),%rsi
   11bf8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11bfc:	4d 89 e0             	mov    %r12,%r8
   11bff:	48 89 d9             	mov    %rbx,%rcx
   11c02:	48 89 c7             	mov    %rax,%rdi
   11c05:	e8 92 0f 00 00       	call   12b9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>
	auto __res = _M_get_insert_hint_unique_pos(__pos, __z._M_key());
   11c0a:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c0e:	48 89 c7             	mov    %rax,%rdi
   11c11:	e8 86 14 00 00       	call   1309c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>
   11c16:	48 89 c2             	mov    %rax,%rdx
   11c19:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx
   11c1d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   11c21:	48 89 ce             	mov    %rcx,%rsi
   11c24:	48 89 c7             	mov    %rax,%rdi
   11c27:	e8 22 10 00 00       	call   12c4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
   11c2c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
   11c30:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (__res.second)
   11c34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11c38:	48 85 c0             	test   %rax,%rax
   11c3b:	74 1c                	je     11c59 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb1>
	  return __z._M_insert(__res);
   11c3d:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11c41:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11c45:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c49:	48 89 ce             	mov    %rcx,%rsi
   11c4c:	48 89 c7             	mov    %rax,%rdi
   11c4f:	e8 66 14 00 00       	call   130ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>
   11c54:	48 89 c3             	mov    %rax,%rbx
   11c57:	eb 17                	jmp    11c70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xc8>
	return iterator(__res.first);
   11c59:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11c5d:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   11c61:	48 89 d6             	mov    %rdx,%rsi
   11c64:	48 89 c7             	mov    %rax,%rdi
   11c67:	e8 a4 14 00 00       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   11c6c:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
      }
   11c70:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c74:	48 89 c7             	mov    %rax,%rdi
   11c77:	e8 9c 0f 00 00       	call   12c18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11c7c:	48 89 d8             	mov    %rbx,%rax
   11c7f:	eb 1a                	jmp    11c9b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf3>
   11c81:	48 89 c3             	mov    %rax,%rbx
   11c84:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11c88:	48 89 c7             	mov    %rax,%rdi
   11c8b:	e8 88 0f 00 00       	call   12c18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>
   11c90:	48 89 d8             	mov    %rbx,%rax
   11c93:	48 89 c7             	mov    %rax,%rdi
   11c96:	e8 35 2a ff ff       	call   46d0 <_Unwind_Resume@plt>
   11c9b:	48 83 c4 60          	add    $0x60,%rsp
   11c9f:	5b                   	pop    %rbx
   11ca0:	41 5c                	pop    %r12
   11ca2:	5d                   	pop    %rbp
   11ca3:	c3                   	ret

0000000000011ca4 <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE5beginEv>:
      begin() const _GLIBCXX_NOEXCEPT
   11ca4:	55                   	push   %rbp
   11ca5:	48 89 e5             	mov    %rsp,%rbp
   11ca8:	48 83 ec 20          	sub    $0x20,%rsp
   11cac:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_start); }
   11cb0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11cb4:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11cb8:	48 89 d6             	mov    %rdx,%rsi
   11cbb:	48 89 c7             	mov    %rax,%rdi
   11cbe:	e8 67 14 00 00       	call   1312a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11cc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cc7:	c9                   	leave
   11cc8:	c3                   	ret
   11cc9:	90                   	nop

0000000000011cca <_ZNKSt6vectorI18VkSurfaceFormatKHRSaIS0_EE3endEv>:
      end() const _GLIBCXX_NOEXCEPT
   11cca:	55                   	push   %rbp
   11ccb:	48 89 e5             	mov    %rsp,%rbp
   11cce:	48 83 ec 20          	sub    $0x20,%rsp
   11cd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return const_iterator(this->_M_impl._M_finish); }
   11cd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11cda:	48 8d 50 08          	lea    0x8(%rax),%rdx
   11cde:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   11ce2:	48 89 d6             	mov    %rdx,%rsi
   11ce5:	48 89 c7             	mov    %rax,%rdi
   11ce8:	e8 3d 14 00 00       	call   1312a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>
   11ced:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11cf1:	c9                   	leave
   11cf2:	c3                   	ret

0000000000011cf3 <_ZN9__gnu_cxxeqIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_>:
    operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
   11cf3:	55                   	push   %rbp
   11cf4:	48 89 e5             	mov    %rsp,%rbp
   11cf7:	53                   	push   %rbx
   11cf8:	48 83 ec 18          	sub    $0x18,%rsp
   11cfc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   11d00:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    { return __lhs.base() == __rhs.base(); }
   11d04:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11d08:	48 89 c7             	mov    %rax,%rdi
   11d0b:	e8 38 14 00 00       	call   13148 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11d10:	48 8b 18             	mov    (%rax),%rbx
   11d13:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11d17:	48 89 c7             	mov    %rax,%rdi
   11d1a:	e8 29 14 00 00       	call   13148 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>
   11d1f:	48 8b 00             	mov    (%rax),%rax
   11d22:	48 39 c3             	cmp    %rax,%rbx
   11d25:	0f 94 c0             	sete   %al
   11d28:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11d2c:	c9                   	leave
   11d2d:	c3                   	ret

0000000000011d2e <_ZN9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11d2e:	55                   	push   %rbp
   11d2f:	48 89 e5             	mov    %rsp,%rbp
   11d32:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d36:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11d3a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d3e:	48 8b 10             	mov    (%rax),%rdx
   11d41:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d45:	48 89 10             	mov    %rdx,(%rax)
   11d48:	90                   	nop
   11d49:	5d                   	pop    %rbp
   11d4a:	c3                   	ret
   11d4b:	90                   	nop

0000000000011d4c <_ZNK9__gnu_cxx17__normal_iteratorIP18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11d4c:	55                   	push   %rbp
   11d4d:	48 89 e5             	mov    %rsp,%rbp
   11d50:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11d54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d58:	5d                   	pop    %rbp
   11d59:	c3                   	ret

0000000000011d5a <_ZN9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEEC1ERKS2_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   11d5a:	55                   	push   %rbp
   11d5b:	48 89 e5             	mov    %rsp,%rbp
   11d5e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   11d62:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   11d66:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   11d6a:	48 8b 10             	mov    (%rax),%rdx
   11d6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d71:	48 89 10             	mov    %rdx,(%rax)
   11d74:	90                   	nop
   11d75:	5d                   	pop    %rbp
   11d76:	c3                   	ret
   11d77:	90                   	nop

0000000000011d78 <_ZNK9__gnu_cxx17__normal_iteratorIP16VkPresentModeKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   11d78:	55                   	push   %rbp
   11d79:	48 89 e5             	mov    %rsp,%rbp
   11d7c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   11d80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d84:	5d                   	pop    %rbp
   11d85:	c3                   	ret

0000000000011d86 <_ZSt4moveIRSt6vectorIP9VkImage_TSaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_>:
    move(_Tp&& __t) noexcept
   11d86:	55                   	push   %rbp
   11d87:	48 89 e5             	mov    %rsp,%rbp
   11d8a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   11d8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11d92:	5d                   	pop    %rbp
   11d93:	c3                   	ret

0000000000011d94 <_ZNSt6vectorIP9VkImage_TSaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE>:
      _M_move_assign(vector&& __x, true_type) noexcept
   11d94:	55                   	push   %rbp
   11d95:	48 89 e5             	mov    %rsp,%rbp
   11d98:	53                   	push   %rbx
   11d99:	48 83 ec 38          	sub    $0x38,%rsp
   11d9d:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11da1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	vector __tmp(get_allocator());
   11da5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11da9:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11dad:	48 89 d6             	mov    %rdx,%rsi
   11db0:	48 89 c7             	mov    %rax,%rdi
   11db3:	e8 9e 13 00 00       	call   13156 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>
   11db8:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   11dbc:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11dc0:	48 89 d6             	mov    %rdx,%rsi
   11dc3:	48 89 c7             	mov    %rax,%rdi
   11dc6:	e8 bf 13 00 00       	call   1318a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>
   11dcb:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   11dcf:	48 89 c7             	mov    %rax,%rdi
   11dd2:	e8 1f 6b ff ff       	call   88f6 <_ZNSaIP9VkImage_TED1Ev>
	this->_M_impl._M_swap_data(__x._M_impl);
   11dd7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ddb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11ddf:	48 89 d6             	mov    %rdx,%rsi
   11de2:	48 89 c7             	mov    %rax,%rdi
   11de5:	e8 c6 13 00 00       	call   131b0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	__tmp._M_impl._M_swap_data(__x._M_impl);
   11dea:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   11dee:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11df2:	48 89 d6             	mov    %rdx,%rsi
   11df5:	48 89 c7             	mov    %rax,%rdi
   11df8:	e8 b3 13 00 00       	call   131b0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>
	std::__alloc_on_move(_M_get_Tp_allocator(), __x._M_get_Tp_allocator());
   11dfd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11e01:	48 89 c7             	mov    %rax,%rdi
   11e04:	e8 a1 7b ff ff       	call   99aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11e09:	48 89 c3             	mov    %rax,%rbx
   11e0c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e10:	48 89 c7             	mov    %rax,%rdi
   11e13:	e8 92 7b ff ff       	call   99aa <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11e18:	48 89 de             	mov    %rbx,%rsi
   11e1b:	48 89 c7             	mov    %rax,%rdi
   11e1e:	e8 e5 13 00 00       	call   13208 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>
      }
   11e23:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   11e27:	48 89 c7             	mov    %rax,%rdi
   11e2a:	e8 59 6b ff ff       	call   8988 <_ZNSt6vectorIP9VkImage_TSaIS1_EED1Ev>
   11e2f:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   11e33:	c9                   	leave
   11e34:	c3                   	ret
   11e35:	90                   	nop

0000000000011e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   11e36:	55                   	push   %rbp
   11e37:	48 89 e5             	mov    %rsp,%rbp
   11e3a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   11e3e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e42:	48 8b 50 08          	mov    0x8(%rax),%rdx
   11e46:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   11e4a:	48 8b 00             	mov    (%rax),%rax
   11e4d:	48 29 c2             	sub    %rax,%rdx
   11e50:	48 89 d0             	mov    %rdx,%rax
   11e53:	48 c1 f8 03          	sar    $0x3,%rax
   11e57:	5d                   	pop    %rbp
   11e58:	c3                   	ret
   11e59:	90                   	nop

0000000000011e5a <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm>:

#if __cplusplus >= 201103L
  template<typename _Tp, typename _Alloc>
    _GLIBCXX20_CONSTEXPR
    void
    vector<_Tp, _Alloc>::
   11e5a:	55                   	push   %rbp
   11e5b:	48 89 e5             	mov    %rsp,%rbp
   11e5e:	53                   	push   %rbx
   11e5f:	48 83 ec 38          	sub    $0x38,%rsp
   11e63:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   11e67:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
    _M_default_append(size_type __n)
    {
      if (__n != 0)
   11e6b:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)
   11e70:	0f 84 e7 01 00 00    	je     1205d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
	{
	  const size_type __size = size();
   11e76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e7a:	48 89 c7             	mov    %rax,%rdi
   11e7d:	e8 b4 ff ff ff       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   11e82:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11e86:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e8a:	48 8b 50 10          	mov    0x10(%rax),%rdx
					 - this->_M_impl._M_finish);
   11e8e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11e92:	48 8b 40 08          	mov    0x8(%rax),%rax
   11e96:	48 29 c2             	sub    %rax,%rdx
   11e99:	48 89 d0             	mov    %rdx,%rax
   11e9c:	48 c1 f8 03          	sar    $0x3,%rax
	  size_type __navail = size_type(this->_M_impl._M_end_of_storage
   11ea0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)

	  if (__size > max_size() || __navail > max_size() - __size)
   11ea4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ea8:	48 89 c7             	mov    %rax,%rdi
   11eab:	e8 78 13 00 00       	call   13228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11eb0:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   11eb4:	72 16                	jb     11ecc <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x72>
   11eb6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11eba:	48 89 c7             	mov    %rax,%rdi
   11ebd:	e8 66 13 00 00       	call   13228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   11ec2:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   11ec6:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   11eca:	73 07                	jae    11ed3 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x79>
   11ecc:	b8 01 00 00 00       	mov    $0x1,%eax
   11ed1:	eb 05                	jmp    11ed8 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x7e>
   11ed3:	b8 00 00 00 00       	mov    $0x0,%eax
   11ed8:	84 c0                	test   %al,%al
	    __builtin_unreachable();

	  if (__navail >= __n)
   11eda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   11ede:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax
   11ee2:	72 33                	jb     11f17 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0xbd>
	    {
	      _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
	      this->_M_impl._M_finish =
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
						 __n, _M_get_Tp_allocator());
   11ee4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ee8:	48 89 c7             	mov    %rax,%rdi
   11eeb:	e8 34 06 00 00       	call   12524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11ef0:	48 89 c2             	mov    %rax,%rdx
		std::__uninitialized_default_n_a(this->_M_impl._M_finish,
   11ef3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11ef7:	48 8b 40 08          	mov    0x8(%rax),%rax
   11efb:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11eff:	48 89 ce             	mov    %rcx,%rsi
   11f02:	48 89 c7             	mov    %rax,%rdi
   11f05:	e8 40 13 00 00       	call   1324a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
	      this->_M_impl._M_finish =
   11f0a:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11f0e:	48 89 42 08          	mov    %rax,0x8(%rdx)
	      this->_M_impl._M_start = __new_start;
	      this->_M_impl._M_finish = __new_start + __size + __n;
	      this->_M_impl._M_end_of_storage = __new_start + __len;
	    }
	}
    }
   11f12:	e9 46 01 00 00       	jmp    1205d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		_M_check_len(__n, "vector::_M_default_append");
   11f17:	48 8b 4d c0          	mov    -0x40(%rbp),%rcx
   11f1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f1f:	48 8d 15 9e 7d 00 00 	lea    0x7d9e(%rip),%rdx        # 19cc4 <_ZN6__pstl9execution2v1L5unseqE+0x3ad>
   11f26:	48 89 ce             	mov    %rcx,%rsi
   11f29:	48 89 c7             	mov    %rax,%rdi
   11f2c:	e8 43 13 00 00       	call   13274 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>
   11f31:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
	      pointer __new_start(this->_M_allocate(__len));
   11f35:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f39:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   11f3d:	48 89 d6             	mov    %rdx,%rsi
   11f40:	48 89 c7             	mov    %rax,%rdi
   11f43:	e8 f4 13 00 00       	call   1333c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>
   11f48:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
			      __n, _M_get_Tp_allocator());
   11f4c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f50:	48 89 c7             	mov    %rax,%rdi
   11f53:	e8 cc 05 00 00       	call   12524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f58:	48 89 c2             	mov    %rax,%rdx
		      std::__uninitialized_default_n_a(__new_start + __size,
   11f5b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   11f5f:	48 8d 0c c5 00 00 00 	lea    0x0(,%rax,8),%rcx
   11f66:	00 
   11f67:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11f6b:	48 01 c1             	add    %rax,%rcx
   11f6e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11f72:	48 89 c6             	mov    %rax,%rsi
   11f75:	48 89 cf             	mov    %rcx,%rdi
   11f78:	e8 cd 12 00 00       	call   1324a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>
			      __new_start, _M_get_Tp_allocator());
   11f7d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f81:	48 89 c7             	mov    %rax,%rdi
   11f84:	e8 9b 05 00 00       	call   12524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   11f89:	48 89 c1             	mov    %rax,%rcx
		  _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
   11f8c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f90:	48 8b 70 08          	mov    0x8(%rax),%rsi
   11f94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11f98:	48 8b 00             	mov    (%rax),%rax
   11f9b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11f9f:	48 89 c7             	mov    %rax,%rdi
   11fa2:	e8 c8 13 00 00       	call   1336f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>
	      _M_deallocate(this->_M_impl._M_start,
   11fa7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
			    this->_M_impl._M_end_of_storage
   11fab:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11faf:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
			    - this->_M_impl._M_start);
   11fb3:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11fb7:	48 8b 12             	mov    (%rdx),%rdx
   11fba:	48 29 d1             	sub    %rdx,%rcx
   11fbd:	48 c1 f9 03          	sar    $0x3,%rcx
   11fc1:	48 89 ca             	mov    %rcx,%rdx
	      _M_deallocate(this->_M_impl._M_start,
   11fc4:	48 89 d6             	mov    %rdx,%rsi
   11fc7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   11fcb:	48 8b 0a             	mov    (%rdx),%rcx
   11fce:	48 89 f2             	mov    %rsi,%rdx
   11fd1:	48 89 ce             	mov    %rcx,%rsi
   11fd4:	48 89 c7             	mov    %rax,%rdi
   11fd7:	e8 12 05 00 00       	call   124ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
	      this->_M_impl._M_start = __new_start;
   11fdc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   11fe0:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   11fe4:	48 89 10             	mov    %rdx,(%rax)
	      this->_M_impl._M_finish = __new_start + __size + __n;
   11fe7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   11feb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   11fef:	48 01 d0             	add    %rdx,%rax
   11ff2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   11ff9:	00 
   11ffa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   11ffe:	48 01 c2             	add    %rax,%rdx
   12001:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12005:	48 89 50 08          	mov    %rdx,0x8(%rax)
	      this->_M_impl._M_end_of_storage = __new_start + __len;
   12009:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1200d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   12014:	00 
   12015:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12019:	48 01 c2             	add    %rax,%rdx
   1201c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12020:	48 89 50 10          	mov    %rdx,0x10(%rax)
    }
   12024:	eb 37                	jmp    1205d <_ZNSt6vectorIP13VkImageView_TSaIS1_EE17_M_default_appendEm+0x203>
		  __catch(...)
   12026:	48 89 c7             	mov    %rax,%rdi
   12029:	e8 f2 20 ff ff       	call   4120 <__cxa_begin_catch@plt>
		      _M_deallocate(__new_start, __len);
   1202e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12032:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12036:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
   1203a:	48 89 ce             	mov    %rcx,%rsi
   1203d:	48 89 c7             	mov    %rax,%rdi
   12040:	e8 a9 04 00 00       	call   124ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>
		      __throw_exception_again;
   12045:	e8 76 25 ff ff       	call   45c0 <__cxa_rethrow@plt>
		  __catch(...)
   1204a:	48 89 c3             	mov    %rax,%rbx
   1204d:	e8 0e 26 ff ff       	call   4660 <__cxa_end_catch@plt>
   12052:	48 89 d8             	mov    %rbx,%rax
   12055:	48 89 c7             	mov    %rax,%rdi
   12058:	e8 73 26 ff ff       	call   46d0 <_Unwind_Resume@plt>
    }
   1205d:	90                   	nop
   1205e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12062:	c9                   	leave
   12063:	c3                   	ret

0000000000012064 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_>:
      _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
   12064:	55                   	push   %rbp
   12065:	48 89 e5             	mov    %rsp,%rbp
   12068:	48 83 ec 20          	sub    $0x20,%rsp
   1206c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12070:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	if (size_type __n = this->_M_impl._M_finish - __pos)
   12074:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12078:	48 8b 40 08          	mov    0x8(%rax),%rax
   1207c:	48 2b 45 e0          	sub    -0x20(%rbp),%rax
   12080:	48 c1 f8 03          	sar    $0x3,%rax
   12084:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12088:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1208d:	74 32                	je     120c1 <_ZNSt6vectorIP13VkImageView_TSaIS1_EE15_M_erase_at_endEPS1_+0x5d>
			  _M_get_Tp_allocator());
   1208f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12093:	48 89 c7             	mov    %rax,%rdi
   12096:	e8 89 04 00 00       	call   12524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1209b:	48 89 c2             	mov    %rax,%rdx
	    std::_Destroy(__pos, this->_M_impl._M_finish,
   1209e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120a2:	48 8b 48 08          	mov    0x8(%rax),%rcx
   120a6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   120aa:	48 89 ce             	mov    %rcx,%rsi
   120ad:	48 89 c7             	mov    %rax,%rdi
   120b0:	e8 7d 04 00 00       	call   12532 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>
	    this->_M_impl._M_finish = __pos;
   120b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   120b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   120bd:	48 89 50 08          	mov    %rdx,0x8(%rax)
      }
   120c1:	90                   	nop
   120c2:	c9                   	leave
   120c3:	c3                   	ret

00000000000120c4 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   120c4:	55                   	push   %rbp
   120c5:	48 89 e5             	mov    %rsp,%rbp
   120c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120cc:	90                   	nop
   120cd:	5d                   	pop    %rbp
   120ce:	c3                   	ret
   120cf:	90                   	nop

00000000000120d0 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   120d0:	55                   	push   %rbp
   120d1:	48 89 e5             	mov    %rsp,%rbp
   120d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120d8:	90                   	nop
   120d9:	5d                   	pop    %rbp
   120da:	c3                   	ret
   120db:	90                   	nop

00000000000120dc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>:
      struct _Vector_impl
   120dc:	55                   	push   %rbp
   120dd:	48 89 e5             	mov    %rsp,%rbp
   120e0:	48 83 ec 10          	sub    $0x10,%rsp
   120e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   120e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   120ec:	48 89 c7             	mov    %rax,%rdi
   120ef:	e8 0a ed ff ff       	call   10dfe <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   120f4:	90                   	nop
   120f5:	c9                   	leave
   120f6:	c3                   	ret
   120f7:	90                   	nop

00000000000120f8 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EEC1ERKS1_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   120f8:	55                   	push   %rbp
   120f9:	48 89 e5             	mov    %rsp,%rbp
   120fc:	48 83 ec 10          	sub    $0x10,%rsp
   12100:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12104:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   12108:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1210c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12110:	48 89 d6             	mov    %rdx,%rsi
   12113:	48 89 c7             	mov    %rax,%rdi
   12116:	e8 87 12 00 00       	call   133a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>
   1211b:	90                   	nop
   1211c:	c9                   	leave
   1211d:	c3                   	ret

000000000001211e <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   1211e:	55                   	push   %rbp
   1211f:	48 89 e5             	mov    %rsp,%rbp
   12122:	48 83 ec 10          	sub    $0x10,%rsp
   12126:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1212a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1212e:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12132:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12136:	48 8b 00             	mov    (%rax),%rax
   12139:	48 29 c2             	sub    %rax,%rdx
   1213c:	48 c1 fa 04          	sar    $0x4,%rdx
   12140:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12147:	e3 38 8e 
   1214a:	48 0f af c2          	imul   %rdx,%rax
	_M_deallocate(_M_impl._M_start,
   1214e:	48 89 c2             	mov    %rax,%rdx
   12151:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12155:	48 8b 08             	mov    (%rax),%rcx
   12158:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1215c:	48 89 ce             	mov    %rcx,%rsi
   1215f:	48 89 c7             	mov    %rax,%rdi
   12162:	e8 6d 12 00 00       	call   133d4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>
      }
   12167:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1216b:	48 89 c7             	mov    %rax,%rdi
   1216e:	e8 69 ff ff ff       	call   120dc <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implD1Ev>
   12173:	90                   	nop
   12174:	c9                   	leave
   12175:	c3                   	ret

0000000000012176 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>:
      begin() const noexcept { return _M_array; }
   12176:	55                   	push   %rbp
   12177:	48 89 e5             	mov    %rsp,%rbp
   1217a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1217e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12182:	48 8b 00             	mov    (%rax),%rax
   12185:	5d                   	pop    %rbp
   12186:	c3                   	ret
   12187:	90                   	nop

0000000000012188 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE3endEv>:
      end() const noexcept { return begin() + size(); }
   12188:	55                   	push   %rbp
   12189:	48 89 e5             	mov    %rsp,%rbp
   1218c:	53                   	push   %rbx
   1218d:	48 83 ec 18          	sub    $0x18,%rsp
   12191:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12195:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12199:	48 89 c7             	mov    %rax,%rdi
   1219c:	e8 d5 ff ff ff       	call   12176 <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE5beginEv>
   121a1:	48 89 c3             	mov    %rax,%rbx
   121a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   121a8:	48 89 c7             	mov    %rax,%rdi
   121ab:	e8 5a 12 00 00       	call   1340a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>
   121b0:	48 89 c2             	mov    %rax,%rdx
   121b3:	48 89 d0             	mov    %rdx,%rax
   121b6:	48 c1 e0 03          	shl    $0x3,%rax
   121ba:	48 01 d0             	add    %rdx,%rax
   121bd:	48 c1 e0 04          	shl    $0x4,%rax
   121c1:	48 01 d8             	add    %rbx,%rax
   121c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   121c8:	c9                   	leave
   121c9:	c3                   	ret

00000000000121ca <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>:
    distance(_InputIterator __first, _InputIterator __last)
   121ca:	55                   	push   %rbp
   121cb:	48 89 e5             	mov    %rsp,%rbp
   121ce:	48 83 ec 10          	sub    $0x10,%rsp
   121d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   121d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
			     std::__iterator_category(__first));
   121da:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   121de:	48 89 c7             	mov    %rax,%rdi
   121e1:	e8 36 12 00 00       	call   1341c <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__distance(__first, __last,
   121e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   121ea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   121ee:	48 89 d6             	mov    %rdx,%rsi
   121f1:	48 89 c7             	mov    %rax,%rdi
   121f4:	e8 2e 12 00 00       	call   13427 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>
    }
   121f9:	c9                   	leave
   121fa:	c3                   	ret
   121fb:	90                   	nop

00000000000121fc <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag>:
	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
   121fc:	55                   	push   %rbp
   121fd:	48 89 e5             	mov    %rsp,%rbp
   12200:	53                   	push   %rbx
   12201:	48 83 ec 38          	sub    $0x38,%rsp
   12205:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12209:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1220d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	  const size_type __n = std::distance(__first, __last);
   12211:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   12215:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12219:	48 89 d6             	mov    %rdx,%rsi
   1221c:	48 89 c7             	mov    %rax,%rdi
   1221f:	e8 a6 ff ff ff       	call   121ca <_ZSt8distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_>
   12224:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
   12228:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   1222c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12230:	48 89 c7             	mov    %rax,%rdi
   12233:	e8 7e 00 00 00       	call   122b6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   12238:	48 89 c2             	mov    %rax,%rdx
   1223b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1223f:	48 89 d6             	mov    %rdx,%rsi
   12242:	48 89 c7             	mov    %rax,%rdi
   12245:	e8 08 12 00 00       	call   13452 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>
   1224a:	48 89 c6             	mov    %rax,%rsi
   1224d:	48 89 df             	mov    %rbx,%rdi
   12250:	e8 5d 12 00 00       	call   134b2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>
   12255:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12259:	48 89 02             	mov    %rax,(%rdx)
	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   1225c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12260:	48 8b 08             	mov    (%rax),%rcx
   12263:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12267:	48 89 d0             	mov    %rdx,%rax
   1226a:	48 c1 e0 03          	shl    $0x3,%rax
   1226e:	48 01 d0             	add    %rdx,%rax
   12271:	48 c1 e0 04          	shl    $0x4,%rax
   12275:	48 8d 14 01          	lea    (%rcx,%rax,1),%rdx
   12279:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1227d:	48 89 50 10          	mov    %rdx,0x10(%rax)
					_M_get_Tp_allocator());
   12281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12285:	48 89 c7             	mov    %rax,%rdi
   12288:	e8 29 00 00 00       	call   122b6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>
   1228d:	48 89 c1             	mov    %rax,%rcx
	    std::__uninitialized_copy_a(__first, __last,
   12290:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12294:	48 8b 10             	mov    (%rax),%rdx
   12297:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
   1229b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1229f:	48 89 c7             	mov    %rax,%rdi
   122a2:	e8 3e 12 00 00       	call   134e5 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>
	  this->_M_impl._M_finish =
   122a7:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   122ab:	48 89 42 08          	mov    %rax,0x8(%rdx)
	}
   122af:	90                   	nop
   122b0:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   122b4:	c9                   	leave
   122b5:	c3                   	ret

00000000000122b6 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   122b6:	55                   	push   %rbp
   122b7:	48 89 e5             	mov    %rsp,%rbp
   122ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   122be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122c2:	5d                   	pop    %rbp
   122c3:	c3                   	ret

00000000000122c4 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoS0_EvT_S2_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   122c4:	55                   	push   %rbp
   122c5:	48 89 e5             	mov    %rsp,%rbp
   122c8:	48 83 ec 20          	sub    $0x20,%rsp
   122cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   122d0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   122d4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   122d8:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   122dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122e0:	48 89 d6             	mov    %rdx,%rsi
   122e3:	48 89 c7             	mov    %rax,%rdi
   122e6:	e8 2b 12 00 00       	call   13516 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>
    }
   122eb:	90                   	nop
   122ec:	c9                   	leave
   122ed:	c3                   	ret

00000000000122ee <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   122ee:	55                   	push   %rbp
   122ef:	48 89 e5             	mov    %rsp,%rbp
   122f2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
   122f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   122fa:	48 8b 50 08          	mov    0x8(%rax),%rdx
   122fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12302:	48 8b 00             	mov    (%rax),%rax
   12305:	48 29 c2             	sub    %rax,%rdx
   12308:	48 c1 fa 04          	sar    $0x4,%rdx
   1230c:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   12313:	e3 38 8e 
   12316:	48 0f af c2          	imul   %rdx,%rax
   1231a:	5d                   	pop    %rbp
   1231b:	c3                   	ret

000000000001231c <_ZNSaIP12VkPipeline_TEC1Ev>:
   1231c:	55                   	push   %rbp
   1231d:	48 89 e5             	mov    %rsp,%rbp
   12320:	48 83 ec 10          	sub    $0x10,%rsp
   12324:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12328:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1232c:	48 89 c7             	mov    %rax,%rdi
   1232f:	e8 08 12 00 00       	call   1353c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>
   12334:	90                   	nop
   12335:	c9                   	leave
   12336:	c3                   	ret
   12337:	90                   	nop

0000000000012338 <_ZNSaIP12VkPipeline_TED1Ev>:
      ~allocator() _GLIBCXX_NOTHROW { }
   12338:	55                   	push   %rbp
   12339:	48 89 e5             	mov    %rsp,%rbp
   1233c:	48 83 ec 10          	sub    $0x10,%rsp
   12340:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12344:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12348:	48 89 c7             	mov    %rax,%rdi
   1234b:	e8 f8 11 00 00       	call   13548 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>
   12350:	90                   	nop
   12351:	c9                   	leave
   12352:	c3                   	ret
   12353:	90                   	nop

0000000000012354 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      vector(size_type __n, const allocator_type& __a = allocator_type())
   12354:	55                   	push   %rbp
   12355:	48 89 e5             	mov    %rsp,%rbp
   12358:	53                   	push   %rbx
   12359:	48 83 ec 28          	sub    $0x28,%rsp
   1235d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12361:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12365:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _Base(_S_check_init_len(__n, __a), __a)
   12369:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1236d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   12371:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12375:	48 89 d6             	mov    %rdx,%rsi
   12378:	48 89 c7             	mov    %rax,%rdi
   1237b:	e8 d3 11 00 00       	call   13553 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>
   12380:	48 89 c1             	mov    %rax,%rcx
   12383:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12387:	48 89 c2             	mov    %rax,%rdx
   1238a:	48 89 ce             	mov    %rcx,%rsi
   1238d:	48 89 df             	mov    %rbx,%rdi
   12390:	e8 1f 12 00 00       	call   135b4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>
      { _M_default_initialize(__n); }
   12395:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12399:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1239d:	48 89 d6             	mov    %rdx,%rsi
   123a0:	48 89 c7             	mov    %rax,%rdi
   123a3:	e8 6a 12 00 00       	call   13612 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>
   123a8:	eb 1a                	jmp    123c4 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x70>
   123aa:	48 89 c3             	mov    %rax,%rbx
   123ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   123b1:	48 89 c7             	mov    %rax,%rdi
   123b4:	e8 59 00 00 00       	call   12412 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>
   123b9:	48 89 d8             	mov    %rbx,%rax
   123bc:	48 89 c7             	mov    %rax,%rdi
   123bf:	e8 0c 23 ff ff       	call   46d0 <_Unwind_Resume@plt>
   123c4:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   123c8:	c9                   	leave
   123c9:	c3                   	ret

00000000000123ca <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE4dataEv>:
      data() const _GLIBCXX_NOEXCEPT
   123ca:	55                   	push   %rbp
   123cb:	48 89 e5             	mov    %rsp,%rbp
   123ce:	48 83 ec 10          	sub    $0x10,%rsp
   123d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   123d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123da:	48 8b 10             	mov    (%rax),%rdx
   123dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123e1:	48 89 d6             	mov    %rdx,%rsi
   123e4:	48 89 c7             	mov    %rax,%rdi
   123e7:	e8 66 12 00 00       	call   13652 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>
   123ec:	c9                   	leave
   123ed:	c3                   	ret

00000000000123ee <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE4dataEv>:
      data() _GLIBCXX_NOEXCEPT
   123ee:	55                   	push   %rbp
   123ef:	48 89 e5             	mov    %rsp,%rbp
   123f2:	48 83 ec 10          	sub    $0x10,%rsp
   123f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_data_ptr(this->_M_impl._M_start); }
   123fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   123fe:	48 8b 10             	mov    (%rax),%rdx
   12401:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12405:	48 89 d6             	mov    %rdx,%rsi
   12408:	48 89 c7             	mov    %rax,%rdi
   1240b:	e8 54 12 00 00       	call   13664 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>
   12410:	c9                   	leave
   12411:	c3                   	ret

0000000000012412 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EED1Ev>:
      ~_Vector_base() _GLIBCXX_NOEXCEPT
   12412:	55                   	push   %rbp
   12413:	48 89 e5             	mov    %rsp,%rbp
   12416:	48 83 ec 10          	sub    $0x10,%rsp
   1241a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
		      _M_impl._M_end_of_storage - _M_impl._M_start);
   1241e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12422:	48 8b 50 10          	mov    0x10(%rax),%rdx
   12426:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1242a:	48 8b 00             	mov    (%rax),%rax
   1242d:	48 29 c2             	sub    %rax,%rdx
   12430:	48 89 d0             	mov    %rdx,%rax
   12433:	48 c1 f8 03          	sar    $0x3,%rax
	_M_deallocate(_M_impl._M_start,
   12437:	48 89 c2             	mov    %rax,%rdx
   1243a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1243e:	48 8b 08             	mov    (%rax),%rcx
   12441:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12445:	48 89 ce             	mov    %rcx,%rsi
   12448:	48 89 c7             	mov    %rax,%rdi
   1244b:	e8 4c 12 00 00       	call   1369c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>
      }
   12450:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12454:	48 89 c7             	mov    %rax,%rdi
   12457:	e8 8a ea ff ff       	call   10ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   1245c:	90                   	nop
   1245d:	c9                   	leave
   1245e:	c3                   	ret
   1245f:	90                   	nop

0000000000012460 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12460:	55                   	push   %rbp
   12461:	48 89 e5             	mov    %rsp,%rbp
   12464:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   12468:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1246c:	5d                   	pop    %rbp
   1246d:	c3                   	ret

000000000001246e <_ZSt8_DestroyIPP12VkPipeline_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   1246e:	55                   	push   %rbp
   1246f:	48 89 e5             	mov    %rsp,%rbp
   12472:	48 83 ec 20          	sub    $0x20,%rsp
   12476:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1247a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1247e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12482:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12486:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1248a:	48 89 d6             	mov    %rdx,%rsi
   1248d:	48 89 c7             	mov    %rax,%rdi
   12490:	e8 3c 12 00 00       	call   136d1 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>
    }
   12495:	90                   	nop
   12496:	c9                   	leave
   12497:	c3                   	ret

0000000000012498 <_ZNSaIP13VkImageView_TEC1Ev>:
      allocator() _GLIBCXX_NOTHROW { }
   12498:	55                   	push   %rbp
   12499:	48 89 e5             	mov    %rsp,%rbp
   1249c:	48 83 ec 10          	sub    $0x10,%rsp
   124a0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124a8:	48 89 c7             	mov    %rax,%rdi
   124ab:	e8 48 12 00 00       	call   136f8 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>
   124b0:	90                   	nop
   124b1:	c9                   	leave
   124b2:	c3                   	ret
   124b3:	90                   	nop

00000000000124b4 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   124b4:	55                   	push   %rbp
   124b5:	48 89 e5             	mov    %rsp,%rbp
   124b8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   124bc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124c0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   124c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124cb:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   124d2:	00 
   124d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   124d7:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   124de:	00 
	{ }
   124df:	90                   	nop
   124e0:	5d                   	pop    %rbp
   124e1:	c3                   	ret

00000000000124e2 <_ZNSt15__new_allocatorIP13VkImageView_TED1Ev>:
   124e2:	55                   	push   %rbp
   124e3:	48 89 e5             	mov    %rsp,%rbp
   124e6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124ea:	90                   	nop
   124eb:	5d                   	pop    %rbp
   124ec:	c3                   	ret
   124ed:	90                   	nop

00000000000124ee <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   124ee:	55                   	push   %rbp
   124ef:	48 89 e5             	mov    %rsp,%rbp
   124f2:	48 83 ec 20          	sub    $0x20,%rsp
   124f6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   124fa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   124fe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   12502:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   12507:	74 17                	je     12520 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   12509:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1250d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12511:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   12515:	48 89 ce             	mov    %rcx,%rsi
   12518:	48 89 c7             	mov    %rax,%rdi
   1251b:	e8 e3 11 00 00       	call   13703 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>
      }
   12520:	90                   	nop
   12521:	c9                   	leave
   12522:	c3                   	ret
   12523:	90                   	nop

0000000000012524 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
   12524:	55                   	push   %rbp
   12525:	48 89 e5             	mov    %rsp,%rbp
   12528:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1252c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12530:	5d                   	pop    %rbp
   12531:	c3                   	ret

0000000000012532 <_ZSt8_DestroyIPP13VkImageView_TS1_EvT_S3_RSaIT0_E>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last,
   12532:	55                   	push   %rbp
   12533:	48 89 e5             	mov    %rsp,%rbp
   12536:	48 83 ec 20          	sub    $0x20,%rsp
   1253a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1253e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12542:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      _Destroy(__first, __last);
   12546:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1254a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1254e:	48 89 d6             	mov    %rdx,%rsi
   12551:	48 89 c7             	mov    %rax,%rdi
   12554:	e8 d8 11 00 00       	call   13731 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>
    }
   12559:	90                   	nop
   1255a:	c9                   	leave
   1255b:	c3                   	ret

000000000001255c <_ZN9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1255c:	55                   	push   %rbp
   1255d:	48 89 e5             	mov    %rsp,%rbp
   12560:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12564:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12568:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1256c:	48 8b 10             	mov    (%rax),%rdx
   1256f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12573:	48 89 10             	mov    %rdx,(%rax)
   12576:	90                   	nop
   12577:	5d                   	pop    %rbp
   12578:	c3                   	ret
   12579:	90                   	nop

000000000001257a <_ZNK9__gnu_cxx17__normal_iteratorIPP13VkImageView_TSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1257a:	55                   	push   %rbp
   1257b:	48 89 e5             	mov    %rsp,%rbp
   1257e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   12582:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12586:	5d                   	pop    %rbp
   12587:	c3                   	ret

0000000000012588 <_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEEC1Ev>:
	constexpr time_point() : __d(duration::zero())
   12588:	55                   	push   %rbp
   12589:	48 89 e5             	mov    %rsp,%rbp
   1258c:	53                   	push   %rbx
   1258d:	48 83 ec 18          	sub    $0x18,%rsp
   12591:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12595:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12599:	e8 ae da ff ff       	call   1004c <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv>
   1259e:	48 89 03             	mov    %rax,(%rbx)
	{ }
   125a1:	90                   	nop
   125a2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   125a6:	c9                   	leave
   125a7:	c3                   	ret

00000000000125a8 <_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEEEE16time_since_epochEv>:
	time_since_epoch() const
   125a8:	55                   	push   %rbp
   125a9:	48 89 e5             	mov    %rsp,%rbp
   125ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return __d; }
   125b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   125b4:	48 8b 00             	mov    (%rax),%rax
   125b7:	5d                   	pop    %rbp
   125b8:	c3                   	ret

00000000000125b9 <_ZNSt6chronomiIlSt5ratioILl1ELl1000000000EElS2_EENSt11common_typeIJNS_8durationIT_T0_EENS4_IT1_T2_EEEE4typeERKS7_RKSA_>:
      operator-(const duration<_Rep1, _Period1>& __lhs,
   125b9:	55                   	push   %rbp
   125ba:	48 89 e5             	mov    %rsp,%rbp
   125bd:	53                   	push   %rbx
   125be:	48 83 ec 38          	sub    $0x38,%rsp
   125c2:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   125c6:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
   125ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   125ce:	48 8b 00             	mov    (%rax),%rax
   125d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   125d5:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   125d9:	48 89 c7             	mov    %rax,%rdi
   125dc:	e8 bd da ff ff       	call   1009e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   125e1:	48 89 c3             	mov    %rax,%rbx
   125e4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   125e8:	48 8b 00             	mov    (%rax),%rax
   125eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
   125ef:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   125f3:	48 89 c7             	mov    %rax,%rdi
   125f6:	e8 a3 da ff ff       	call   1009e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   125fb:	48 29 c3             	sub    %rax,%rbx
   125fe:	48 89 da             	mov    %rbx,%rdx
   12601:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12605:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
   12609:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   1260d:	48 89 d6             	mov    %rdx,%rsi
   12610:	48 89 c7             	mov    %rax,%rdi
   12613:	e8 5e da ff ff       	call   10076 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEC1IlvEERKT_>
   12618:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
      }
   1261c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12620:	c9                   	leave
   12621:	c3                   	ret

0000000000012622 <_ZNSt6chrono20__duration_cast_implINS_8durationIlSt5ratioILl1ELl1000000EEEES2_ILl1ELl1000EElLb1ELb0EE6__castIlS2_ILl1ELl1000000000EEEES4_RKNS1_IT_T0_EE>:
	  __cast(const duration<_Rep, _Period>& __d)
   12622:	55                   	push   %rbp
   12623:	48 89 e5             	mov    %rsp,%rbp
   12626:	48 83 ec 20          	sub    $0x20,%rsp
   1262a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   1262e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12632:	48 89 c7             	mov    %rax,%rdi
   12635:	e8 64 da ff ff       	call   1009e <_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv>
   1263a:	48 89 c1             	mov    %rax,%rcx
   1263d:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
   12644:	9b c4 20 
   12647:	48 89 c8             	mov    %rcx,%rax
   1264a:	48 f7 ea             	imul   %rdx
   1264d:	48 89 d0             	mov    %rdx,%rax
   12650:	48 c1 f8 07          	sar    $0x7,%rax
   12654:	48 c1 f9 3f          	sar    $0x3f,%rcx
   12658:	48 89 ca             	mov    %rcx,%rdx
   1265b:	48 29 d0             	sub    %rdx,%rax
	    return _ToDur(static_cast<__to_rep>(
   1265e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   12662:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   12666:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   1266a:	48 89 d6             	mov    %rdx,%rsi
   1266d:	48 89 c7             	mov    %rax,%rdi
   12670:	e8 e3 10 00 00       	call   13758 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>
	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
   12675:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
	  }
   12679:	c9                   	leave
   1267a:	c3                   	ret
   1267b:	90                   	nop

000000000001267c <_ZN9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEEC1ERKS4_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1267c:	55                   	push   %rbp
   1267d:	48 89 e5             	mov    %rsp,%rbp
   12680:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12684:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   12688:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1268c:	48 8b 10             	mov    (%rax),%rdx
   1268f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12693:	48 89 10             	mov    %rdx,(%rax)
   12696:	90                   	nop
   12697:	5d                   	pop    %rbp
   12698:	c3                   	ret
   12699:	90                   	nop

000000000001269a <_ZNK9__gnu_cxx17__normal_iteratorIPKPKcSt6vectorIS2_SaIS2_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   1269a:	55                   	push   %rbp
   1269b:	48 89 e5             	mov    %rsp,%rbp
   1269e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   126a2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126a6:	5d                   	pop    %rbp
   126a7:	c3                   	ret

00000000000126a8 <_ZNKSt16initializer_listIPKcE4sizeEv>:
      size() const noexcept { return _M_len; }
   126a8:	55                   	push   %rbp
   126a9:	48 89 e5             	mov    %rsp,%rbp
   126ac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126b0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   126b4:	48 8b 40 08          	mov    0x8(%rax),%rax
   126b8:	5d                   	pop    %rbp
   126b9:	c3                   	ret

00000000000126ba <_ZSt19__iterator_categoryIPKPKcENSt15iterator_traitsIT_E17iterator_categoryERKS5_>:
    __iterator_category(const _Iter&)
   126ba:	55                   	push   %rbp
   126bb:	48 89 e5             	mov    %rsp,%rbp
   126be:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   126c2:	90                   	nop
   126c3:	5d                   	pop    %rbp
   126c4:	c3                   	ret

00000000000126c5 <_ZSt10__distanceIPKPKcENSt15iterator_traitsIT_E15difference_typeES5_S5_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   126c5:	55                   	push   %rbp
   126c6:	48 89 e5             	mov    %rsp,%rbp
   126c9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126cd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   126d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   126d5:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   126d9:	48 c1 f8 03          	sar    $0x3,%rax
    }
   126dd:	5d                   	pop    %rbp
   126de:	c3                   	ret

00000000000126df <_ZSt22__uninitialized_copy_aIPKPKcPS1_S1_ET0_T_S6_S5_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   126df:	55                   	push   %rbp
   126e0:	48 89 e5             	mov    %rsp,%rbp
   126e3:	48 83 ec 20          	sub    $0x20,%rsp
   126e7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   126eb:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   126ef:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   126f3:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   126f7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   126fb:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   126ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12703:	48 89 ce             	mov    %rcx,%rsi
   12706:	48 89 c7             	mov    %rax,%rdi
   12709:	e8 92 10 00 00       	call   137a0 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>
    }
   1270e:	c9                   	leave
   1270f:	c3                   	ret

0000000000012710 <_ZSt8_DestroyIPPKcEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   12710:	55                   	push   %rbp
   12711:	48 89 e5             	mov    %rsp,%rbp
   12714:	48 83 ec 10          	sub    $0x10,%rsp
   12718:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1271c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   12720:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12724:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12728:	48 89 d6             	mov    %rdx,%rsi
   1272b:	48 89 c7             	mov    %rax,%rdi
   1272e:	e8 a2 10 00 00       	call   137d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>
    }
   12733:	90                   	nop
   12734:	c9                   	leave
   12735:	c3                   	ret

0000000000012736 <_ZNSt15__new_allocatorIPKcE9constructIS1_JRS1_EEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   12736:	55                   	push   %rbp
   12737:	48 89 e5             	mov    %rsp,%rbp
   1273a:	53                   	push   %rbx
   1273b:	48 83 ec 28          	sub    $0x28,%rsp
   1273f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12743:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12747:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   1274b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1274f:	48 89 c6             	mov    %rax,%rsi
   12752:	bf 08 00 00 00       	mov    $0x8,%edi
   12757:	e8 e4 26 ff ff       	call   4e40 <_ZnwmPv>
   1275c:	48 89 c3             	mov    %rax,%rbx
   1275f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12763:	48 89 c7             	mov    %rax,%rdi
   12766:	e8 c9 ee ff ff       	call   11634 <_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE>
   1276b:	48 8b 00             	mov    (%rax),%rax
   1276e:	48 89 03             	mov    %rax,(%rbx)
   12771:	90                   	nop
   12772:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12776:	c9                   	leave
   12777:	c3                   	ret

0000000000012778 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_>:
      _M_check_len(size_type __n, const char* __s) const
   12778:	55                   	push   %rbp
   12779:	48 89 e5             	mov    %rsp,%rbp
   1277c:	53                   	push   %rbx
   1277d:	48 83 ec 38          	sub    $0x38,%rsp
   12781:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   12785:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   12789:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   1278d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12791:	48 89 c7             	mov    %rax,%rdi
   12794:	e8 4b 10 00 00       	call   137e4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12799:	48 89 c3             	mov    %rax,%rbx
   1279c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127a0:	48 89 c7             	mov    %rax,%rdi
   127a3:	e8 38 de ff ff       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   127a8:	48 29 c3             	sub    %rax,%rbx
   127ab:	48 89 da             	mov    %rbx,%rdx
   127ae:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   127b2:	48 39 c2             	cmp    %rax,%rdx
   127b5:	0f 92 c0             	setb   %al
   127b8:	84 c0                	test   %al,%al
   127ba:	74 0c                	je     127c8 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0x50>
	  __throw_length_error(__N(__s));
   127bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   127c0:	48 89 c7             	mov    %rax,%rdi
   127c3:	e8 b8 19 ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   127c8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127cc:	48 89 c7             	mov    %rax,%rdi
   127cf:	e8 0c de ff ff       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   127d4:	48 89 c3             	mov    %rax,%rbx
   127d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   127db:	48 89 c7             	mov    %rax,%rdi
   127de:	e8 fd dd ff ff       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   127e3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   127e7:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   127eb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   127ef:	48 89 d6             	mov    %rdx,%rsi
   127f2:	48 89 c7             	mov    %rax,%rdi
   127f5:	e8 7b 0f 00 00       	call   13775 <_ZSt3maxImERKT_S2_S2_>
   127fa:	48 8b 00             	mov    (%rax),%rax
   127fd:	48 01 d8             	add    %rbx,%rax
   12800:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   12804:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12808:	48 89 c7             	mov    %rax,%rdi
   1280b:	e8 d0 dd ff ff       	call   105e0 <_ZNKSt6vectorIPKcSaIS1_EE4sizeEv>
   12810:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   12814:	72 12                	jb     12828 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xb0>
   12816:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1281a:	48 89 c7             	mov    %rax,%rdi
   1281d:	e8 c2 0f 00 00       	call   137e4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12822:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   12826:	73 0e                	jae    12836 <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xbe>
   12828:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1282c:	48 89 c7             	mov    %rax,%rdi
   1282f:	e8 b0 0f 00 00       	call   137e4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>
   12834:	eb 04                	jmp    1283a <_ZNKSt6vectorIPKcSaIS1_EE12_M_check_lenEmS1_+0xc2>
   12836:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   1283a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1283e:	c9                   	leave
   1283f:	c3                   	ret

0000000000012840 <_ZN9__gnu_cxxmiIPPKcSt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_>:
    { return __lhs.base() - __rhs.base(); }

  template<typename _Iterator, typename _Container>
    _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    inline typename __normal_iterator<_Iterator, _Container>::difference_type
    operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
   12840:	55                   	push   %rbp
   12841:	48 89 e5             	mov    %rsp,%rbp
   12844:	53                   	push   %rbx
   12845:	48 83 ec 18          	sub    $0x18,%rsp
   12849:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1284d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	      const __normal_iterator<_Iterator, _Container>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.base() - __rhs.base(); }
   12851:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12855:	48 89 c7             	mov    %rax,%rdi
   12858:	e8 c9 ed ff ff       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1285d:	48 8b 18             	mov    (%rax),%rbx
   12860:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12864:	48 89 c7             	mov    %rax,%rdi
   12867:	e8 ba ed ff ff       	call   11626 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEE4baseEv>
   1286c:	48 8b 00             	mov    (%rax),%rax
   1286f:	48 89 da             	mov    %rbx,%rdx
   12872:	48 29 c2             	sub    %rax,%rdx
   12875:	48 89 d0             	mov    %rdx,%rax
   12878:	48 c1 f8 03          	sar    $0x3,%rax
   1287c:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12880:	c9                   	leave
   12881:	c3                   	ret

0000000000012882 <_ZNSt6vectorIPKcSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   12882:	55                   	push   %rbp
   12883:	48 89 e5             	mov    %rsp,%rbp
   12886:	48 83 ec 20          	sub    $0x20,%rsp
   1288a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1288e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   12892:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   12896:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   1289a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1289e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   128a2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   128a6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   128aa:	48 89 c7             	mov    %rax,%rdi
   128ad:	e8 54 0f 00 00       	call   13806 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   128b2:	c9                   	leave
   128b3:	c3                   	ret

00000000000128b4 <_ZNK9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEmiEl>:
      operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
   128b4:	55                   	push   %rbp
   128b5:	48 89 e5             	mov    %rsp,%rbp
   128b8:	48 83 ec 20          	sub    $0x20,%rsp
   128bc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   128c0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return __normal_iterator(_M_current - __n); }
   128c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   128c8:	48 8b 00             	mov    (%rax),%rax
   128cb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   128cf:	48 c1 e2 03          	shl    $0x3,%rdx
   128d3:	48 f7 da             	neg    %rdx
   128d6:	48 01 d0             	add    %rdx,%rax
   128d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
   128dd:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
   128e1:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
   128e5:	48 89 d6             	mov    %rdx,%rsi
   128e8:	48 89 c7             	mov    %rax,%rdi
   128eb:	e8 18 ed ff ff       	call   11608 <_ZN9__gnu_cxx17__normal_iteratorIPPKcSt6vectorIS2_SaIS2_EEEC1ERKS3_>
   128f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   128f4:	c9                   	leave
   128f5:	c3                   	ret

00000000000128f6 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEEC1IJS2_EEESt10in_place_tDpOT_>:
	_Optional_payload_base(in_place_t __tag, _Args&&... __args)
   128f6:	55                   	push   %rbp
   128f7:	48 89 e5             	mov    %rsp,%rbp
   128fa:	53                   	push   %rbx
   128fb:	48 83 ec 28          	sub    $0x28,%rsp
   128ff:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12903:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
	: _M_payload(__tag, std::forward<_Args>(__args)...),
   12907:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   1290b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1290f:	48 89 c7             	mov    %rax,%rdi
   12912:	e8 65 ef ff ff       	call   1187c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   12917:	48 89 c6             	mov    %rax,%rsi
   1291a:	48 89 df             	mov    %rbx,%rdi
   1291d:	e8 48 0f 00 00       	call   1386a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>
	  _M_engaged(true)
   12922:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12926:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	{ }
   1292a:	90                   	nop
   1292b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1292f:	c9                   	leave
   12930:	c3                   	ret
   12931:	90                   	nop

0000000000012932 <_ZNKSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE6_M_getEv>:
      _M_get() const noexcept
   12932:	55                   	push   %rbp
   12933:	48 89 e5             	mov    %rsp,%rbp
   12936:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_payload._M_value; }
   1293a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1293e:	5d                   	pop    %rbp
   1293f:	c3                   	ret

0000000000012940 <_ZNSt4pairIj23VkQueueFamilyPropertiesEaSERKS1_>:
	explicit constexpr pair(pair<_U1, _U2>&& __p)
	: first(std::forward<_U1>(__p.first)),
	  second(std::forward<_U2>(__p.second)) { }

      pair&
      operator=(__conditional_t<__and_<is_copy_assignable<_T1>,
   12940:	55                   	push   %rbp
   12941:	48 89 e5             	mov    %rsp,%rbp
   12944:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12948:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
				       is_copy_assignable<_T2>>::value,
				const pair&, const __nonesuch&> __p)
      {
	first = __p.first;
   1294c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   12950:	8b 10                	mov    (%rax),%edx
   12952:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12956:	89 10                	mov    %edx,(%rax)
	second = __p.second;
   12958:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
   1295c:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   12960:	48 8b 46 04          	mov    0x4(%rsi),%rax
   12964:	48 8b 56 0c          	mov    0xc(%rsi),%rdx
   12968:	48 89 41 04          	mov    %rax,0x4(%rcx)
   1296c:	48 89 51 0c          	mov    %rdx,0xc(%rcx)
   12970:	48 8b 46 14          	mov    0x14(%rsi),%rax
   12974:	48 89 41 14          	mov    %rax,0x14(%rcx)
	return *this;
   12978:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   1297c:	5d                   	pop    %rbp
   1297d:	c3                   	ret

000000000001297e <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE12_M_constructIJRKS2_EEEvDpOT_>:
	_M_construct(_Args&&... __args)
   1297e:	55                   	push   %rbp
   1297f:	48 89 e5             	mov    %rsp,%rbp
   12982:	53                   	push   %rbx
   12983:	48 83 ec 18          	sub    $0x18,%rsp
   12987:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1298b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  std::_Construct(std::__addressof(this->_M_payload._M_value),
   1298f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12993:	48 89 c7             	mov    %rax,%rdi
   12996:	e8 21 0f 00 00       	call   138bc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   1299b:	48 89 c3             	mov    %rax,%rbx
   1299e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129a2:	48 89 c7             	mov    %rax,%rdi
   129a5:	e8 04 0f 00 00       	call   138ae <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>
   129aa:	48 89 de             	mov    %rbx,%rsi
   129ad:	48 89 c7             	mov    %rax,%rdi
   129b0:	e8 15 0f 00 00       	call   138ca <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>
	  this->_M_engaged = true;
   129b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   129b9:	c6 40 1c 01          	movb   $0x1,0x1c(%rax)
	}
   129bd:	90                   	nop
   129be:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   129c2:	c9                   	leave
   129c3:	c3                   	ret

00000000000129c4 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv>:
      _M_reset() noexcept
   129c4:	55                   	push   %rbp
   129c5:	48 89 e5             	mov    %rsp,%rbp
   129c8:	48 83 ec 10          	sub    $0x10,%rsp
   129cc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	if (this->_M_engaged)
   129d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129d4:	0f b6 40 1c          	movzbl 0x1c(%rax),%eax
   129d8:	84 c0                	test   %al,%al
   129da:	74 0c                	je     129e8 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_M_resetEv+0x24>
	  _M_destroy();
   129dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   129e0:	48 89 c7             	mov    %rax,%rdi
   129e3:	e8 3c 0f 00 00       	call   13924 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>
      }
   129e8:	90                   	nop
   129e9:	c9                   	leave
   129ea:	c3                   	ret
   129eb:	90                   	nop

00000000000129ec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   129ec:	55                   	push   %rbp
   129ed:	48 89 e5             	mov    %rsp,%rbp
   129f0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   129f4:	90                   	nop
   129f5:	5d                   	pop    %rbp
   129f6:	c3                   	ret

00000000000129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>:
      _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   129f7:	55                   	push   %rbp
   129f8:	48 89 e5             	mov    %rsp,%rbp
   129fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_right); }
   129ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a03:	48 8b 40 18          	mov    0x18(%rax),%rax
   12a07:	5d                   	pop    %rbp
   12a08:	c3                   	ret

0000000000012a09 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>:
      _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   12a09:	55                   	push   %rbp
   12a0a:	48 89 e5             	mov    %rsp,%rbp
   12a0d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(__x->_M_left); }
   12a11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a15:	48 8b 40 10          	mov    0x10(%rax),%rax
   12a19:	5d                   	pop    %rbp
   12a1a:	c3                   	ret
   12a1b:	90                   	nop

0000000000012a1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   12a1c:	55                   	push   %rbp
   12a1d:	48 89 e5             	mov    %rsp,%rbp
   12a20:	48 83 ec 10          	sub    $0x10,%rsp
   12a24:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12a28:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	_M_destroy_node(__p);
   12a2c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a34:	48 89 d6             	mov    %rdx,%rsi
   12a37:	48 89 c7             	mov    %rax,%rdi
   12a3a:	e8 f9 0e 00 00       	call   13938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>
	_M_put_node(__p);
   12a3f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12a43:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a47:	48 89 d6             	mov    %rdx,%rsi
   12a4a:	48 89 c7             	mov    %rax,%rdi
   12a4d:	e8 24 0f 00 00       	call   13976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
      }
   12a52:	90                   	nop
   12a53:	c9                   	leave
   12a54:	c3                   	ret
   12a55:	90                   	nop

0000000000012a56 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE9_M_mbeginEv>:
      _M_mbegin() const _GLIBCXX_NOEXCEPT
   12a56:	55                   	push   %rbp
   12a57:	48 89 e5             	mov    %rsp,%rbp
   12a5a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
   12a5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12a62:	48 8b 40 10          	mov    0x10(%rax),%rax
   12a66:	5d                   	pop    %rbp
   12a67:	c3                   	ret

0000000000012a68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11lower_boundERS7_>:
      lower_bound(const key_type& __k)
   12a68:	55                   	push   %rbp
   12a69:	48 89 e5             	mov    %rsp,%rbp
   12a6c:	53                   	push   %rbx
   12a6d:	48 83 ec 18          	sub    $0x18,%rsp
   12a71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12a75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      { return _M_lower_bound(_M_begin(), _M_end(), __k); }
   12a79:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a7d:	48 89 c7             	mov    %rax,%rdi
   12a80:	e8 27 0f 00 00       	call   139ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12a85:	48 89 c3             	mov    %rax,%rbx
   12a88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a8c:	48 89 c7             	mov    %rax,%rdi
   12a8f:	e8 b6 ef ff ff       	call   11a4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   12a94:	48 89 c6             	mov    %rax,%rsi
   12a97:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12a9b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12a9f:	48 89 d1             	mov    %rdx,%rcx
   12aa2:	48 89 da             	mov    %rbx,%rdx
   12aa5:	48 89 c7             	mov    %rax,%rdi
   12aa8:	e8 11 0f 00 00       	call   139be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>
   12aad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12ab1:	c9                   	leave
   12ab2:	c3                   	ret
   12ab3:	90                   	nop

0000000000012ab4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE3endEv>:
      end() _GLIBCXX_NOEXCEPT
   12ab4:	55                   	push   %rbp
   12ab5:	48 89 e5             	mov    %rsp,%rbp
   12ab8:	48 83 ec 20          	sub    $0x20,%rsp
   12abc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(&this->_M_impl._M_header); }
   12ac0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12ac4:	48 8d 50 08          	lea    0x8(%rax),%rdx
   12ac8:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   12acc:	48 89 d6             	mov    %rdx,%rsi
   12acf:	48 89 c7             	mov    %rax,%rdi
   12ad2:	e8 39 06 00 00       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   12ad7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12adb:	c9                   	leave
   12adc:	c3                   	ret
   12add:	90                   	nop

0000000000012ade <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8key_compEv>:
      key_comp() const
   12ade:	55                   	push   %rbp
   12adf:	48 89 e5             	mov    %rsp,%rbp
   12ae2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_key_compare; }
   12ae6:	90                   	nop
   12ae7:	5d                   	pop    %rbp
   12ae8:	c3                   	ret
   12ae9:	90                   	nop

0000000000012aea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr()
   12aea:	55                   	push   %rbp
   12aeb:	48 89 e5             	mov    %rsp,%rbp
   12aee:	48 83 ec 10          	sub    $0x10,%rsp
   12af2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   12af6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12afa:	48 83 c0 20          	add    $0x20,%rax
   12afe:	48 89 c7             	mov    %rax,%rdi
   12b01:	e8 4e 0f 00 00       	call   13a54 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   12b06:	c9                   	leave
   12b07:	c3                   	ret

0000000000012b08 <_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_>:
   *  @param __rhs  Second string.
   *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
   */
  template<typename _CharT, typename _Traits, typename _Alloc>
    inline bool
    operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
   12b08:	55                   	push   %rbp
   12b09:	48 89 e5             	mov    %rsp,%rbp
   12b0c:	48 83 ec 10          	sub    $0x10,%rsp
   12b10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   12b14:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
    _GLIBCXX_NOEXCEPT
    { return __lhs.compare(__rhs) < 0; }
   12b18:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   12b1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b20:	48 89 d6             	mov    %rdx,%rsi
   12b23:	48 89 c7             	mov    %rax,%rdi
   12b26:	e8 05 15 ff ff       	call   4030 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_@plt>
   12b2b:	c1 e8 1f             	shr    $0x1f,%eax
   12b2e:	c9                   	leave
   12b2f:	c3                   	ret

0000000000012b30 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b30:	55                   	push   %rbp
   12b31:	48 89 e5             	mov    %rsp,%rbp
   12b34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b3c:	5d                   	pop    %rbp
   12b3d:	c3                   	ret

0000000000012b3e <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IJS5_ELb1ELb1EEEDpOT_>:
	tuple(_UElements&&... __elements)
   12b3e:	55                   	push   %rbp
   12b3f:	48 89 e5             	mov    %rsp,%rbp
   12b42:	53                   	push   %rbx
   12b43:	48 83 ec 18          	sub    $0x18,%rsp
   12b47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12b4b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Inherited(std::forward<_UElements>(__elements)...) { }
   12b4f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   12b53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12b57:	48 89 c7             	mov    %rax,%rdi
   12b5a:	e8 d1 ff ff ff       	call   12b30 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   12b5f:	48 89 c6             	mov    %rax,%rsi
   12b62:	48 89 df             	mov    %rbx,%rdi
   12b65:	e8 04 0f 00 00       	call   13a6e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>
   12b6a:	90                   	nop
   12b6b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   12b6f:	c9                   	leave
   12b70:	c3                   	ret

0000000000012b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b71:	55                   	push   %rbp
   12b72:	48 89 e5             	mov    %rsp,%rbp
   12b75:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b79:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b7d:	5d                   	pop    %rbp
   12b7e:	c3                   	ret

0000000000012b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b7f:	55                   	push   %rbp
   12b80:	48 89 e5             	mov    %rsp,%rbp
   12b83:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b8b:	5d                   	pop    %rbp
   12b8c:	c3                   	ret

0000000000012b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   12b8d:	55                   	push   %rbp
   12b8e:	48 89 e5             	mov    %rsp,%rbp
   12b91:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   12b95:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12b99:	5d                   	pop    %rbp
   12b9a:	c3                   	ret
   12b9b:	90                   	nop

0000000000012b9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeC1IJRKSt21piecewise_construct_tSt5tupleIJOS5_EESK_IJEEEEERSE_DpOT_>:
	  _Auto_node(_Rb_tree& __t, _Args&&... __args)
   12b9c:	55                   	push   %rbp
   12b9d:	48 89 e5             	mov    %rsp,%rbp
   12ba0:	41 54                	push   %r12
   12ba2:	53                   	push   %rbx
   12ba3:	48 83 ec 30          	sub    $0x30,%rsp
   12ba7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   12bab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   12baf:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   12bb3:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   12bb7:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  : _M_t(__t),
   12bbb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   12bbf:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   12bc3:	48 89 10             	mov    %rdx,(%rax)
	    _M_node(__t._M_create_node(std::forward<_Args>(__args)...))
   12bc6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   12bca:	48 89 c7             	mov    %rax,%rdi
   12bcd:	e8 bb ff ff ff       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   12bd2:	49 89 c4             	mov    %rax,%r12
   12bd5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   12bd9:	48 89 c7             	mov    %rax,%rdi
   12bdc:	e8 9e ff ff ff       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   12be1:	48 89 c3             	mov    %rax,%rbx
   12be4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   12be8:	48 89 c7             	mov    %rax,%rdi
   12beb:	e8 81 ff ff ff       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   12bf0:	48 89 c6             	mov    %rax,%rsi
   12bf3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   12bf7:	4c 89 e1             	mov    %r12,%rcx
   12bfa:	48 89 da             	mov    %rbx,%rdx
   12bfd:	48 89 c7             	mov    %rax,%rdi
   12c00:	e8 9d 0e 00 00       	call   13aa2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>
   12c05:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   12c09:	48 89 42 08          	mov    %rax,0x8(%rdx)
	  { }
   12c0d:	90                   	nop
   12c0e:	48 83 c4 30          	add    $0x30,%rsp
   12c12:	5b                   	pop    %rbx
   12c13:	41 5c                	pop    %r12
   12c15:	5d                   	pop    %rbp
   12c16:	c3                   	ret
   12c17:	90                   	nop

0000000000012c18 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev>:
	~_Auto_node()
   12c18:	55                   	push   %rbp
   12c19:	48 89 e5             	mov    %rsp,%rbp
   12c1c:	48 83 ec 10          	sub    $0x10,%rsp
   12c20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	  if (_M_node)
   12c24:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c28:	48 8b 40 08          	mov    0x8(%rax),%rax
   12c2c:	48 85 c0             	test   %rax,%rax
   12c2f:	74 1a                	je     12c4b <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_nodeD1Ev+0x33>
	    _M_t._M_drop_node(_M_node);
   12c31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   12c35:	48 8b 00             	mov    (%rax),%rax
   12c38:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   12c3c:	48 8b 52 08          	mov    0x8(%rdx),%rdx
   12c40:	48 89 d6             	mov    %rdx,%rsi
   12c43:	48 89 c7             	mov    %rax,%rdi
   12c46:	e8 d1 fd ff ff       	call   12a1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E>
	}
   12c4b:	90                   	nop
   12c4c:	c9                   	leave
   12c4d:	c3                   	ret

0000000000012c4e <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   12c4e:	55                   	push   %rbp
   12c4f:	48 89 e5             	mov    %rsp,%rbp
   12c52:	53                   	push   %rbx
   12c53:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp
   12c5a:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)
   12c61:	48 89 b5 f0 fe ff ff 	mov    %rsi,-0x110(%rbp)
   12c68:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)
      iterator __pos = __position._M_const_cast();
   12c6f:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
   12c76:	48 89 c7             	mov    %rax,%rdi
   12c79:	e8 a0 0e 00 00       	call   13b1e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>
   12c7e:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)
      if (__pos._M_node == _M_end())
   12c85:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12c8c:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12c93:	48 89 c7             	mov    %rax,%rdi
   12c96:	e8 11 0d 00 00       	call   139ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   12c9b:	48 39 c3             	cmp    %rax,%rbx
   12c9e:	0f 94 c0             	sete   %al
   12ca1:	84 c0                	test   %al,%al
   12ca3:	0f 84 c8 00 00 00    	je     12d71 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x123>
	  if (size() > 0
   12ca9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12cb0:	48 89 c7             	mov    %rax,%rdi
   12cb3:	e8 8e 0e 00 00       	call   13b46 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>
	      && _M_impl._M_key_compare(_S_key(_M_rightmost()), __k))
   12cb8:	48 85 c0             	test   %rax,%rax
   12cbb:	74 44                	je     12d01 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12cbd:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12cc4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ccb:	48 89 c7             	mov    %rax,%rdi
   12cce:	e8 85 0e 00 00       	call   13b58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12cd3:	48 8b 00             	mov    (%rax),%rax
   12cd6:	48 89 c7             	mov    %rax,%rdi
   12cd9:	e8 8c 0e 00 00       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12cde:	48 89 c1             	mov    %rax,%rcx
   12ce1:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12ce8:	48 89 c2             	mov    %rax,%rdx
   12ceb:	48 89 ce             	mov    %rcx,%rsi
   12cee:	48 89 df             	mov    %rbx,%rdi
   12cf1:	e8 36 ee ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12cf6:	84 c0                	test   %al,%al
   12cf8:	74 07                	je     12d01 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb3>
   12cfa:	b8 01 00 00 00       	mov    $0x1,%eax
   12cff:	eb 05                	jmp    12d06 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xb8>
   12d01:	b8 00 00 00 00       	mov    $0x0,%eax
	  if (size() > 0
   12d06:	84 c0                	test   %al,%al
   12d08:	74 49                	je     12d53 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x105>
	    return _Res(0, _M_rightmost());
   12d0a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12d11:	48 89 c7             	mov    %rax,%rdi
   12d14:	e8 3f 0e 00 00       	call   13b58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12d19:	48 89 c2             	mov    %rax,%rdx
   12d1c:	48 c7 85 38 ff ff ff 	movq   $0x0,-0xc8(%rbp)
   12d23:	00 00 00 00 
   12d27:	48 8d 8d 38 ff ff ff 	lea    -0xc8(%rbp),%rcx
   12d2e:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax
   12d35:	48 89 ce             	mov    %rcx,%rsi
   12d38:	48 89 c7             	mov    %rax,%rdi
   12d3b:	e8 44 0e 00 00       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12d40:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
   12d47:	48 8b 95 28 ff ff ff 	mov    -0xd8(%rbp),%rdx
   12d4e:	e9 43 03 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12d53:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12d5a:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12d61:	48 89 d6             	mov    %rdx,%rsi
   12d64:	48 89 c7             	mov    %rax,%rdi
   12d67:	e8 48 0e 00 00       	call   13bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12d6c:	e9 25 03 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(__k, _S_key(__pos._M_node)))
   12d71:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12d78:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12d7f:	48 89 c7             	mov    %rax,%rdi
   12d82:	e8 e3 0d 00 00       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12d87:	48 89 c2             	mov    %rax,%rdx
   12d8a:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12d91:	48 89 c6             	mov    %rax,%rsi
   12d94:	48 89 df             	mov    %rbx,%rdi
   12d97:	e8 90 ed ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12d9c:	84 c0                	test   %al,%al
   12d9e:	0f 84 66 01 00 00    	je     12f0a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x2bc>
	  iterator __before = __pos;
   12da4:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12dab:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
	  if (__pos._M_node == _M_leftmost()) // begin()
   12db2:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12db9:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12dc0:	48 89 c7             	mov    %rax,%rdi
   12dc3:	e8 62 0f 00 00       	call   13d2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12dc8:	48 8b 00             	mov    (%rax),%rax
   12dcb:	48 39 c3             	cmp    %rax,%rbx
   12dce:	0f 94 c0             	sete   %al
   12dd1:	84 c0                	test   %al,%al
   12dd3:	74 4c                	je     12e21 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1d3>
	    return _Res(_M_leftmost(), _M_leftmost());
   12dd5:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12ddc:	48 89 c7             	mov    %rax,%rdi
   12ddf:	e8 46 0f 00 00       	call   13d2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12de4:	48 89 c3             	mov    %rax,%rbx
   12de7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12dee:	48 89 c7             	mov    %rax,%rdi
   12df1:	e8 34 0f 00 00       	call   13d2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>
   12df6:	48 89 c1             	mov    %rax,%rcx
   12df9:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
   12e00:	48 89 da             	mov    %rbx,%rdx
   12e03:	48 89 ce             	mov    %rcx,%rsi
   12e06:	48 89 c7             	mov    %rax,%rdi
   12e09:	e8 2e 0f 00 00       	call   13d3c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12e0e:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
   12e15:	48 8b 95 48 ff ff ff 	mov    -0xb8(%rbp),%rdx
   12e1c:	e9 75 02 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(_S_key((--__before)._M_node), __k))
   12e21:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12e28:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax
   12e2f:	48 89 c7             	mov    %rax,%rdi
   12e32:	e8 49 0f 00 00       	call   13d80 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
   12e37:	48 8b 00             	mov    (%rax),%rax
   12e3a:	48 89 c7             	mov    %rax,%rdi
   12e3d:	e8 28 0d 00 00       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12e42:	48 89 c1             	mov    %rax,%rcx
   12e45:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12e4c:	48 89 c2             	mov    %rax,%rdx
   12e4f:	48 89 ce             	mov    %rcx,%rsi
   12e52:	48 89 df             	mov    %rbx,%rdi
   12e55:	e8 d2 ec ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12e5a:	84 c0                	test   %al,%al
   12e5c:	0f 84 8a 00 00 00    	je     12eec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x29e>
	      if (_S_right(__before._M_node) == 0)
   12e62:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax
   12e69:	48 89 c7             	mov    %rax,%rdi
   12e6c:	e8 86 fb ff ff       	call   129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12e71:	48 85 c0             	test   %rax,%rax
   12e74:	0f 94 c0             	sete   %al
   12e77:	84 c0                	test   %al,%al
   12e79:	74 3e                	je     12eb9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x26b>
		return _Res(0, __before._M_node);
   12e7b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
   12e82:	00 00 00 00 
   12e86:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx
   12e8d:	48 8d 8d 68 ff ff ff 	lea    -0x98(%rbp),%rcx
   12e94:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
   12e9b:	48 89 ce             	mov    %rcx,%rsi
   12e9e:	48 89 c7             	mov    %rax,%rdi
   12ea1:	e8 de 0c 00 00       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12ea6:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax
   12ead:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx
   12eb4:	e9 dd 01 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__pos._M_node, __pos._M_node);
   12eb9:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   12ec0:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   12ec7:	48 8d 85 70 ff ff ff 	lea    -0x90(%rbp),%rax
   12ece:	48 89 ce             	mov    %rcx,%rsi
   12ed1:	48 89 c7             	mov    %rax,%rdi
   12ed4:	e8 63 0e 00 00       	call   13d3c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   12ed9:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
   12ee0:	48 8b 95 78 ff ff ff 	mov    -0x88(%rbp),%rdx
   12ee7:	e9 aa 01 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   12eec:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   12ef3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12efa:	48 89 d6             	mov    %rdx,%rsi
   12efd:	48 89 c7             	mov    %rax,%rdi
   12f00:	e8 af 0c 00 00       	call   13bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   12f05:	e9 8c 01 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
      else if (_M_impl._M_key_compare(_S_key(__pos._M_node), __k))
   12f0a:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12f11:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12f18:	48 89 c7             	mov    %rax,%rdi
   12f1b:	e8 4a 0c 00 00       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12f20:	48 89 c1             	mov    %rax,%rcx
   12f23:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12f2a:	48 89 c2             	mov    %rax,%rdx
   12f2d:	48 89 ce             	mov    %rcx,%rsi
   12f30:	48 89 df             	mov    %rbx,%rdi
   12f33:	e8 f4 eb ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12f38:	84 c0                	test   %al,%al
   12f3a:	0f 84 2c 01 00 00    	je     1306c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x41e>
	  iterator __after = __pos;
   12f40:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12f47:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
	  if (__pos._M_node == _M_rightmost())
   12f4e:	48 8b 9d 18 ff ff ff 	mov    -0xe8(%rbp),%rbx
   12f55:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f5c:	48 89 c7             	mov    %rax,%rdi
   12f5f:	e8 f4 0b 00 00       	call   13b58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12f64:	48 8b 00             	mov    (%rax),%rax
   12f67:	48 39 c3             	cmp    %rax,%rbx
   12f6a:	0f 94 c0             	sete   %al
   12f6d:	84 c0                	test   %al,%al
   12f6f:	74 3a                	je     12fab <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x35d>
	    return _Res(0, _M_rightmost());
   12f71:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   12f78:	48 89 c7             	mov    %rax,%rdi
   12f7b:	e8 d8 0b 00 00       	call   13b58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>
   12f80:	48 89 c2             	mov    %rax,%rdx
   12f83:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
   12f8a:	00 
   12f8b:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
   12f8f:	48 8d 45 80          	lea    -0x80(%rbp),%rax
   12f93:	48 89 ce             	mov    %rcx,%rsi
   12f96:	48 89 c7             	mov    %rax,%rdi
   12f99:	e8 e6 0b 00 00       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   12f9e:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   12fa2:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
   12fa6:	e9 eb 00 00 00       	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	  else if (_M_impl._M_key_compare(__k, _S_key((++__after)._M_node)))
   12fab:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx
   12fb2:	48 8d 85 08 ff ff ff 	lea    -0xf8(%rbp),%rax
   12fb9:	48 89 c7             	mov    %rax,%rdi
   12fbc:	e8 e7 0d 00 00       	call   13da8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>
   12fc1:	48 8b 00             	mov    (%rax),%rax
   12fc4:	48 89 c7             	mov    %rax,%rdi
   12fc7:	e8 9e 0b 00 00       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   12fcc:	48 89 c2             	mov    %rax,%rdx
   12fcf:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
   12fd6:	48 89 c6             	mov    %rax,%rsi
   12fd9:	48 89 df             	mov    %rbx,%rdi
   12fdc:	e8 4b eb ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   12fe1:	84 c0                	test   %al,%al
   12fe3:	74 6c                	je     13051 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x403>
	      if (_S_right(__pos._M_node) == 0)
   12fe5:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
   12fec:	48 89 c7             	mov    %rax,%rdi
   12fef:	e8 03 fa ff ff       	call   129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   12ff4:	48 85 c0             	test   %rax,%rax
   12ff7:	0f 94 c0             	sete   %al
   12ffa:	84 c0                	test   %al,%al
   12ffc:	74 2c                	je     1302a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x3dc>
		return _Res(0, __pos._M_node);
   12ffe:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
   13005:	00 
   13006:	48 8d 95 18 ff ff ff 	lea    -0xe8(%rbp),%rdx
   1300d:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx
   13011:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
   13015:	48 89 ce             	mov    %rcx,%rsi
   13018:	48 89 c7             	mov    %rax,%rdi
   1301b:	e8 64 0b 00 00       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13020:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13024:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
   13028:	eb 6c                	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
		return _Res(__after._M_node, __after._M_node);
   1302a:	48 8d 95 08 ff ff ff 	lea    -0xf8(%rbp),%rdx
   13031:	48 8d 8d 08 ff ff ff 	lea    -0xf8(%rbp),%rcx
   13038:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   1303c:	48 89 ce             	mov    %rcx,%rsi
   1303f:	48 89 c7             	mov    %rax,%rdi
   13042:	e8 f5 0c 00 00       	call   13d3c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>
   13047:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   1304b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   1304f:	eb 45                	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	    return _M_get_insert_unique_pos(__k);
   13051:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
   13058:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
   1305f:	48 89 d6             	mov    %rdx,%rsi
   13062:	48 89 c7             	mov    %rax,%rdi
   13065:	e8 4a 0b 00 00       	call   13bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>
   1306a:	eb 2a                	jmp    13096 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x448>
	return _Res(__pos._M_node, 0);
   1306c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
   13073:	00 
   13074:	48 8d 55 e8          	lea    -0x18(%rbp),%rdx
   13078:	48 8d 8d 18 ff ff ff 	lea    -0xe8(%rbp),%rcx
   1307f:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13083:	48 89 ce             	mov    %rcx,%rsi
   13086:	48 89 c7             	mov    %rax,%rdi
   13089:	e8 f6 0a 00 00       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   1308e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13092:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13096:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1309a:	c9                   	leave
   1309b:	c3                   	ret

000000000001309c <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node6_M_keyEv>:
	_M_key() const
   1309c:	55                   	push   %rbp
   1309d:	48 89 e5             	mov    %rsp,%rbp
   130a0:	48 83 ec 10          	sub    $0x10,%rsp
   130a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	{ return _S_key(_M_node); }
   130a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   130ac:	48 8b 40 08          	mov    0x8(%rax),%rax
   130b0:	48 89 c7             	mov    %rax,%rdi
   130b3:	e8 18 0d 00 00       	call   13dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   130b8:	c9                   	leave
   130b9:	c3                   	ret

00000000000130ba <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE10_Auto_node9_M_insertES6_IPSt18_Rb_tree_node_baseSH_E>:
	_M_insert(pair<_Base_ptr, _Base_ptr> __p)
   130ba:	55                   	push   %rbp
   130bb:	48 89 e5             	mov    %rsp,%rbp
   130be:	48 83 ec 30          	sub    $0x30,%rsp
   130c2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   130c6:	48 89 d1             	mov    %rdx,%rcx
   130c9:	48 89 f0             	mov    %rsi,%rax
   130cc:	48 89 fa             	mov    %rdi,%rdx
   130cf:	48 89 ca             	mov    %rcx,%rdx
   130d2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   130d6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  auto __it = _M_t._M_insert_node(__p.first, __p.second, _M_node);
   130da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   130de:	48 8b 00             	mov    (%rax),%rax
   130e1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   130e5:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
   130e9:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   130ed:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
   130f1:	48 89 c7             	mov    %rax,%rdi
   130f4:	e8 03 0d 00 00       	call   13dfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>
   130f9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  _M_node = nullptr;
   130fd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13101:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   13108:	00 
	  return __it;
   13109:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
	}
   1310d:	c9                   	leave
   1310e:	c3                   	ret
   1310f:	90                   	nop

0000000000013110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>:
      _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
   13110:	55                   	push   %rbp
   13111:	48 89 e5             	mov    %rsp,%rbp
   13114:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13118:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_node(__x) { }
   1311c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13120:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13124:	48 89 10             	mov    %rdx,(%rax)
   13127:	90                   	nop
   13128:	5d                   	pop    %rbp
   13129:	c3                   	ret

000000000001312a <_ZN9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEEC1ERKS3_>:
      __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   1312a:	55                   	push   %rbp
   1312b:	48 89 e5             	mov    %rsp,%rbp
   1312e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13132:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_current(__i) { }
   13136:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1313a:	48 8b 10             	mov    (%rax),%rdx
   1313d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13141:	48 89 10             	mov    %rdx,(%rax)
   13144:	90                   	nop
   13145:	5d                   	pop    %rbp
   13146:	c3                   	ret
   13147:	90                   	nop

0000000000013148 <_ZNK9__gnu_cxx17__normal_iteratorIPK18VkSurfaceFormatKHRSt6vectorIS1_SaIS1_EEE4baseEv>:
      base() const _GLIBCXX_NOEXCEPT
   13148:	55                   	push   %rbp
   13149:	48 89 e5             	mov    %rsp,%rbp
   1314c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_current; }
   13150:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13154:	5d                   	pop    %rbp
   13155:	c3                   	ret

0000000000013156 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE13get_allocatorEv>:
      get_allocator() const _GLIBCXX_NOEXCEPT
   13156:	55                   	push   %rbp
   13157:	48 89 e5             	mov    %rsp,%rbp
   1315a:	48 83 ec 10          	sub    $0x10,%rsp
   1315e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13162:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return allocator_type(_M_get_Tp_allocator()); }
   13166:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1316a:	48 89 c7             	mov    %rax,%rdi
   1316d:	e8 4e 0d 00 00       	call   13ec0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13172:	48 89 c2             	mov    %rax,%rdx
   13175:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13179:	48 89 d6             	mov    %rdx,%rsi
   1317c:	48 89 c7             	mov    %rax,%rdi
   1317f:	e8 70 68 ff ff       	call   99f4 <_ZNSaIP9VkImage_TEC1ERKS1_>
   13184:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13188:	c9                   	leave
   13189:	c3                   	ret

000000000001318a <_ZNSt6vectorIP9VkImage_TSaIS1_EEC1ERKS2_>:
      vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   1318a:	55                   	push   %rbp
   1318b:	48 89 e5             	mov    %rsp,%rbp
   1318e:	48 83 ec 10          	sub    $0x10,%rsp
   13192:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13196:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(__a) { }
   1319a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1319e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   131a2:	48 89 d6             	mov    %rdx,%rsi
   131a5:	48 89 c7             	mov    %rax,%rdi
   131a8:	e8 21 0d 00 00       	call   13ece <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>
   131ad:	90                   	nop
   131ae:	c9                   	leave
   131af:	c3                   	ret

00000000000131b0 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_swap_dataERS4_>:
	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
   131b0:	55                   	push   %rbp
   131b1:	48 89 e5             	mov    %rsp,%rbp
   131b4:	48 83 ec 30          	sub    $0x30,%rsp
   131b8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   131bc:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	  _Vector_impl_data __tmp;
   131c0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   131c4:	48 89 c7             	mov    %rax,%rdi
   131c7:	e8 aa 7c ff ff       	call   ae76 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_dataC1Ev>
	  __tmp._M_copy_data(*this);
   131cc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   131d0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   131d4:	48 89 d6             	mov    %rdx,%rsi
   131d7:	48 89 c7             	mov    %rax,%rdi
   131da:	e8 15 0d 00 00       	call   13ef4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  _M_copy_data(__x);
   131df:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   131e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   131e7:	48 89 d6             	mov    %rdx,%rsi
   131ea:	48 89 c7             	mov    %rax,%rdi
   131ed:	e8 02 0d 00 00       	call   13ef4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	  __x._M_copy_data(__tmp);
   131f2:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   131f6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   131fa:	48 89 d6             	mov    %rdx,%rsi
   131fd:	48 89 c7             	mov    %rax,%rdi
   13200:	e8 ef 0c 00 00       	call   13ef4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>
	}
   13205:	90                   	nop
   13206:	c9                   	leave
   13207:	c3                   	ret

0000000000013208 <_ZSt15__alloc_on_moveISaIP9VkImage_TEEvRT_S4_>:
    __alloc_on_move(_Alloc& __one, _Alloc& __two)
   13208:	55                   	push   %rbp
   13209:	48 89 e5             	mov    %rsp,%rbp
   1320c:	48 83 ec 10          	sub    $0x10,%rsp
   13210:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13214:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__one = std::move(__two);
   13218:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1321c:	48 89 c7             	mov    %rax,%rdi
   1321f:	e8 0d 0d 00 00       	call   13f31 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>
    }
   13224:	90                   	nop
   13225:	c9                   	leave
   13226:	c3                   	ret
   13227:	90                   	nop

0000000000013228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   13228:	55                   	push   %rbp
   13229:	48 89 e5             	mov    %rsp,%rbp
   1322c:	48 83 ec 10          	sub    $0x10,%rsp
   13230:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   13234:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13238:	48 89 c7             	mov    %rax,%rdi
   1323b:	e8 42 0d 00 00       	call   13f82 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>
   13240:	48 89 c7             	mov    %rax,%rdi
   13243:	e8 f7 0c 00 00       	call   13f3f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>
   13248:	c9                   	leave
   13249:	c3                   	ret

000000000001324a <_ZSt27__uninitialized_default_n_aIPP13VkImageView_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   1324a:	55                   	push   %rbp
   1324b:	48 89 e5             	mov    %rsp,%rbp
   1324e:	48 83 ec 20          	sub    $0x20,%rsp
   13252:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13256:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1325a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   1325e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13262:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13266:	48 89 d6             	mov    %rdx,%rsi
   13269:	48 89 c7             	mov    %rax,%rdi
   1326c:	e8 1f 0d 00 00       	call   13f90 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>
   13271:	c9                   	leave
   13272:	c3                   	ret
   13273:	90                   	nop

0000000000013274 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc>:
      _M_check_len(size_type __n, const char* __s) const
   13274:	55                   	push   %rbp
   13275:	48 89 e5             	mov    %rsp,%rbp
   13278:	53                   	push   %rbx
   13279:	48 83 ec 38          	sub    $0x38,%rsp
   1327d:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13281:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13285:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
	if (max_size() - size() < __n)
   13289:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1328d:	48 89 c7             	mov    %rax,%rdi
   13290:	e8 93 ff ff ff       	call   13228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13295:	48 89 c3             	mov    %rax,%rbx
   13298:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1329c:	48 89 c7             	mov    %rax,%rdi
   1329f:	e8 92 eb ff ff       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   132a4:	48 29 c3             	sub    %rax,%rbx
   132a7:	48 89 da             	mov    %rbx,%rdx
   132aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   132ae:	48 39 c2             	cmp    %rax,%rdx
   132b1:	0f 92 c0             	setb   %al
   132b4:	84 c0                	test   %al,%al
   132b6:	74 0c                	je     132c4 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0x50>
	  __throw_length_error(__N(__s));
   132b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   132bc:	48 89 c7             	mov    %rax,%rdi
   132bf:	e8 bc 0e ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	const size_type __len = size() + (std::max)(size(), __n);
   132c4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132c8:	48 89 c7             	mov    %rax,%rdi
   132cb:	e8 66 eb ff ff       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   132d0:	48 89 c3             	mov    %rax,%rbx
   132d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   132d7:	48 89 c7             	mov    %rax,%rdi
   132da:	e8 57 eb ff ff       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   132df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
   132e3:	48 8d 55 d0          	lea    -0x30(%rbp),%rdx
   132e7:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   132eb:	48 89 d6             	mov    %rdx,%rsi
   132ee:	48 89 c7             	mov    %rax,%rdi
   132f1:	e8 7f 04 00 00       	call   13775 <_ZSt3maxImERKT_S2_S2_>
   132f6:	48 8b 00             	mov    (%rax),%rax
   132f9:	48 01 d8             	add    %rbx,%rax
   132fc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	return (__len < size() || __len > max_size()) ? max_size() : __len;
   13300:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13304:	48 89 c7             	mov    %rax,%rdi
   13307:	e8 2a eb ff ff       	call   11e36 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE4sizeEv>
   1330c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)
   13310:	72 12                	jb     13324 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xb0>
   13312:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13316:	48 89 c7             	mov    %rax,%rdi
   13319:	e8 0a ff ff ff       	call   13228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   1331e:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
   13322:	73 0e                	jae    13332 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xbe>
   13324:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13328:	48 89 c7             	mov    %rax,%rdi
   1332b:	e8 f8 fe ff ff       	call   13228 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE8max_sizeEv>
   13330:	eb 04                	jmp    13336 <_ZNKSt6vectorIP13VkImageView_TSaIS1_EE12_M_check_lenEmPKc+0xc2>
   13332:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
      }
   13336:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1333a:	c9                   	leave
   1333b:	c3                   	ret

000000000001333c <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   1333c:	55                   	push   %rbp
   1333d:	48 89 e5             	mov    %rsp,%rbp
   13340:	48 83 ec 10          	sub    $0x10,%rsp
   13344:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13348:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   1334c:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   13351:	74 15                	je     13368 <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x2c>
   13353:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13357:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1335b:	48 89 d6             	mov    %rdx,%rsi
   1335e:	48 89 c7             	mov    %rax,%rdi
   13361:	e8 53 0c 00 00       	call   13fb9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>
   13366:	eb 05                	jmp    1336d <_ZNSt12_Vector_baseIP13VkImageView_TSaIS1_EE11_M_allocateEm+0x31>
   13368:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   1336d:	c9                   	leave
   1336e:	c3                   	ret

000000000001336f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_relocateEPS1_S4_S4_RS2_>:
      _S_relocate(pointer __first, pointer __last, pointer __result,
   1336f:	55                   	push   %rbp
   13370:	48 89 e5             	mov    %rsp,%rbp
   13373:	48 83 ec 20          	sub    $0x20,%rsp
   13377:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1337b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1337f:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   13383:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
	return std::__relocate_a(__first, __last, __result, __alloc);
   13387:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   1338b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1338f:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
   13393:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13397:	48 89 c7             	mov    %rax,%rdi
   1339a:	e8 44 0c 00 00       	call   13fe3 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>
      }
   1339f:	c9                   	leave
   133a0:	c3                   	ret
   133a1:	90                   	nop

00000000000133a2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE12_Vector_implC1ERKS1_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   133a2:	55                   	push   %rbp
   133a3:	48 89 e5             	mov    %rsp,%rbp
   133a6:	48 83 ec 10          	sub    $0x10,%rsp
   133aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133ae:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   133b2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   133b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133ba:	48 89 d6             	mov    %rdx,%rsi
   133bd:	48 89 c7             	mov    %rax,%rdi
   133c0:	e8 81 0c 00 00       	call   14046 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   133c5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133c9:	48 89 c7             	mov    %rax,%rdi
   133cc:	e8 9b 0c 00 00       	call   1406c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>
	{ }
   133d1:	90                   	nop
   133d2:	c9                   	leave
   133d3:	c3                   	ret

00000000000133d4 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m>:
      _M_deallocate(pointer __p, size_t __n)
   133d4:	55                   	push   %rbp
   133d5:	48 89 e5             	mov    %rsp,%rbp
   133d8:	48 83 ec 20          	sub    $0x20,%rsp
   133dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   133e0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   133e4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   133e8:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   133ed:	74 17                	je     13406 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE13_M_deallocateEPS0_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   133ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   133f3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   133f7:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   133fb:	48 89 ce             	mov    %rcx,%rsi
   133fe:	48 89 c7             	mov    %rax,%rdi
   13401:	e8 94 0c 00 00       	call   1409a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>
      }
   13406:	90                   	nop
   13407:	c9                   	leave
   13408:	c3                   	ret
   13409:	90                   	nop

000000000001340a <_ZNKSt16initializer_listI28VkGraphicsPipelineCreateInfoE4sizeEv>:
   1340a:	55                   	push   %rbp
   1340b:	48 89 e5             	mov    %rsp,%rbp
   1340e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13412:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13416:	48 8b 40 08          	mov    0x8(%rax),%rax
   1341a:	5d                   	pop    %rbp
   1341b:	c3                   	ret

000000000001341c <_ZSt19__iterator_categoryIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   1341c:	55                   	push   %rbp
   1341d:	48 89 e5             	mov    %rsp,%rbp
   13420:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   13424:	90                   	nop
   13425:	5d                   	pop    %rbp
   13426:	c3                   	ret

0000000000013427 <_ZSt10__distanceIPK28VkGraphicsPipelineCreateInfoENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag>:
    __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
   13427:	55                   	push   %rbp
   13428:	48 89 e5             	mov    %rsp,%rbp
   1342b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1342f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      return __last - __first;
   13433:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13437:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
   1343b:	48 c1 f8 04          	sar    $0x4,%rax
   1343f:	48 89 c2             	mov    %rax,%rdx
   13442:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   13449:	e3 38 8e 
   1344c:	48 0f af c2          	imul   %rdx,%rax
    }
   13450:	5d                   	pop    %rbp
   13451:	c3                   	ret

0000000000013452 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   13452:	55                   	push   %rbp
   13453:	48 89 e5             	mov    %rsp,%rbp
   13456:	53                   	push   %rbx
   13457:	48 83 ec 28          	sub    $0x28,%rsp
   1345b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   1345f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   13463:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13467:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1346b:	48 89 d6             	mov    %rdx,%rsi
   1346e:	48 89 c7             	mov    %rax,%rdi
   13471:	e8 d0 0b 00 00       	call   14046 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>
   13476:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1347a:	48 89 c7             	mov    %rax,%rdi
   1347d:	e8 46 0c 00 00       	call   140c8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>
   13482:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   13486:	0f 92 c3             	setb   %bl
   13489:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1348d:	48 89 c7             	mov    %rax,%rdi
   13490:	e8 69 d9 ff ff       	call   10dfe <_ZNSaI28VkGraphicsPipelineCreateInfoED1Ev>
   13495:	84 db                	test   %bl,%bl
   13497:	74 0f                	je     134a8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE17_S_check_init_lenEmRKS1_+0x56>
	  __throw_length_error(
   13499:	48 8d 05 40 68 00 00 	lea    0x6840(%rip),%rax        # 19ce0 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   134a0:	48 89 c7             	mov    %rax,%rdi
   134a3:	e8 d8 0c ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   134a8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   134ac:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   134b0:	c9                   	leave
   134b1:	c3                   	ret

00000000000134b2 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   134b2:	55                   	push   %rbp
   134b3:	48 89 e5             	mov    %rsp,%rbp
   134b6:	48 83 ec 10          	sub    $0x10,%rsp
   134ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134be:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   134c2:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   134c7:	74 15                	je     134de <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x2c>
   134c9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   134cd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   134d1:	48 89 d6             	mov    %rdx,%rsi
   134d4:	48 89 c7             	mov    %rax,%rdi
   134d7:	e8 2e 0c 00 00       	call   1410a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>
   134dc:	eb 05                	jmp    134e3 <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_allocateEm+0x31>
   134de:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   134e3:	c9                   	leave
   134e4:	c3                   	ret

00000000000134e5 <_ZSt22__uninitialized_copy_aIPK28VkGraphicsPipelineCreateInfoPS0_S0_ET0_T_S5_S4_RSaIT1_E>:
    __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
   134e5:	55                   	push   %rbp
   134e6:	48 89 e5             	mov    %rsp,%rbp
   134e9:	48 83 ec 20          	sub    $0x20,%rsp
   134ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   134f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   134f5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
   134f9:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)
      return std::uninitialized_copy(__first, __last, __result);
   134fd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   13501:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13505:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13509:	48 89 ce             	mov    %rcx,%rsi
   1350c:	48 89 c7             	mov    %rax,%rdi
   1350f:	e8 20 0c 00 00       	call   14134 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
    }
   13514:	c9                   	leave
   13515:	c3                   	ret

0000000000013516 <_ZSt8_DestroyIP28VkGraphicsPipelineCreateInfoEvT_S2_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13516:	55                   	push   %rbp
   13517:	48 89 e5             	mov    %rsp,%rbp
   1351a:	48 83 ec 10          	sub    $0x10,%rsp
   1351e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13522:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13526:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1352a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1352e:	48 89 d6             	mov    %rdx,%rsi
   13531:	48 89 c7             	mov    %rax,%rdi
   13534:	e8 30 0c 00 00       	call   14169 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>
    }
   13539:	90                   	nop
   1353a:	c9                   	leave
   1353b:	c3                   	ret

000000000001353c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1Ev>:
   1353c:	55                   	push   %rbp
   1353d:	48 89 e5             	mov    %rsp,%rbp
   13540:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13544:	90                   	nop
   13545:	5d                   	pop    %rbp
   13546:	c3                   	ret
   13547:	90                   	nop

0000000000013548 <_ZNSt15__new_allocatorIP12VkPipeline_TED1Ev>:
      ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   13548:	55                   	push   %rbp
   13549:	48 89 e5             	mov    %rsp,%rbp
   1354c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13550:	90                   	nop
   13551:	5d                   	pop    %rbp
   13552:	c3                   	ret

0000000000013553 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_>:
      _S_check_init_len(size_type __n, const allocator_type& __a)
   13553:	55                   	push   %rbp
   13554:	48 89 e5             	mov    %rsp,%rbp
   13557:	53                   	push   %rbx
   13558:	48 83 ec 28          	sub    $0x28,%rsp
   1355c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13560:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
	if (__n > _S_max_size(_Tp_alloc_type(__a)))
   13564:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   13568:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1356c:	48 89 d6             	mov    %rdx,%rsi
   1356f:	48 89 c7             	mov    %rax,%rdi
   13572:	e8 ff 00 00 00       	call   13676 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   13577:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1357b:	48 89 c7             	mov    %rax,%rdi
   1357e:	e8 f5 0b 00 00       	call   14178 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>
   13583:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
   13587:	0f 92 c3             	setb   %bl
   1358a:	48 8d 45 ef          	lea    -0x11(%rbp),%rax
   1358e:	48 89 c7             	mov    %rax,%rdi
   13591:	e8 a2 ed ff ff       	call   12338 <_ZNSaIP12VkPipeline_TED1Ev>
   13596:	84 db                	test   %bl,%bl
   13598:	74 0f                	je     135a9 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE17_S_check_init_lenEmRKS2_+0x56>
	  __throw_length_error(
   1359a:	48 8d 05 3f 67 00 00 	lea    0x673f(%rip),%rax        # 19ce0 <_ZN6__pstl9execution2v1L5unseqE+0x3c9>
   135a1:	48 89 c7             	mov    %rax,%rdi
   135a4:	e8 d7 0b ff ff       	call   4180 <_ZSt20__throw_length_errorPKc@plt>
	return __n;
   135a9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
      }
   135ad:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   135b1:	c9                   	leave
   135b2:	c3                   	ret
   135b3:	90                   	nop

00000000000135b4 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_>:
      _Vector_base(size_t __n, const allocator_type& __a)
   135b4:	55                   	push   %rbp
   135b5:	48 89 e5             	mov    %rsp,%rbp
   135b8:	53                   	push   %rbx
   135b9:	48 83 ec 28          	sub    $0x28,%rsp
   135bd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   135c1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   135c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      : _M_impl(__a)
   135c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135cd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   135d1:	48 89 d6             	mov    %rdx,%rsi
   135d4:	48 89 c7             	mov    %rax,%rdi
   135d7:	e8 de 0b 00 00       	call   141ba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>
      { _M_create_storage(__n); }
   135dc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   135e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135e4:	48 89 d6             	mov    %rdx,%rsi
   135e7:	48 89 c7             	mov    %rax,%rdi
   135ea:	e8 fd 0b 00 00       	call   141ec <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>
   135ef:	eb 1a                	jmp    1360b <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EEC1EmRKS2_+0x57>
   135f1:	48 89 c3             	mov    %rax,%rbx
   135f4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   135f8:	48 89 c7             	mov    %rax,%rdi
   135fb:	e8 e6 d8 ff ff       	call   10ee6 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implD1Ev>
   13600:	48 89 d8             	mov    %rbx,%rax
   13603:	48 89 c7             	mov    %rax,%rdi
   13606:	e8 c5 10 ff ff       	call   46d0 <_Unwind_Resume@plt>
   1360b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   1360f:	c9                   	leave
   13610:	c3                   	ret
   13611:	90                   	nop

0000000000013612 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE21_M_default_initializeEm>:
      _M_default_initialize(size_type __n)
   13612:	55                   	push   %rbp
   13613:	48 89 e5             	mov    %rsp,%rbp
   13616:	48 83 ec 10          	sub    $0x10,%rsp
   1361a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1361e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
					   _M_get_Tp_allocator());
   13622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13626:	48 89 c7             	mov    %rax,%rdi
   13629:	e8 32 ee ff ff       	call   12460 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE19_M_get_Tp_allocatorEv>
   1362e:	48 89 c2             	mov    %rax,%rdx
	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
   13631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13635:	48 8b 00             	mov    (%rax),%rax
   13638:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1363c:	48 89 ce             	mov    %rcx,%rsi
   1363f:	48 89 c7             	mov    %rax,%rdi
   13642:	e8 fb 0b 00 00       	call   14242 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>
	this->_M_impl._M_finish =
   13647:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1364b:	48 89 42 08          	mov    %rax,0x8(%rdx)
      }
   1364f:	90                   	nop
   13650:	c9                   	leave
   13651:	c3                   	ret

0000000000013652 <_ZNKSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_M_data_ptrIS0_EEPT_S5_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   13652:	55                   	push   %rbp
   13653:	48 89 e5             	mov    %rsp,%rbp
   13656:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1365a:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   1365e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13662:	5d                   	pop    %rbp
   13663:	c3                   	ret

0000000000013664 <_ZNKSt6vectorIP12VkPipeline_TSaIS1_EE11_M_data_ptrIS1_EEPT_S6_>:
	_M_data_ptr(_Up* __ptr) const _GLIBCXX_NOEXCEPT
   13664:	55                   	push   %rbp
   13665:	48 89 e5             	mov    %rsp,%rbp
   13668:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1366c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ return __ptr; }
   13670:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13674:	5d                   	pop    %rbp
   13675:	c3                   	ret

0000000000013676 <_ZNSaIP12VkPipeline_TEC1ERKS1_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   13676:	55                   	push   %rbp
   13677:	48 89 e5             	mov    %rsp,%rbp
   1367a:	48 83 ec 10          	sub    $0x10,%rsp
   1367e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13682:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   13686:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1368a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1368e:	48 89 d6             	mov    %rdx,%rsi
   13691:	48 89 c7             	mov    %rax,%rdi
   13694:	e8 d3 0b 00 00       	call   1426c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>
   13699:	90                   	nop
   1369a:	c9                   	leave
   1369b:	c3                   	ret

000000000001369c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m>:
      _M_deallocate(pointer __p, size_t __n)
   1369c:	55                   	push   %rbp
   1369d:	48 89 e5             	mov    %rsp,%rbp
   136a0:	48 83 ec 20          	sub    $0x20,%rsp
   136a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136a8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   136ac:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__p)
   136b0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   136b5:	74 17                	je     136ce <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE13_M_deallocateEPS1_m+0x32>
	  _Tr::deallocate(_M_impl, __p, __n);
   136b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136bb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   136bf:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   136c3:	48 89 ce             	mov    %rcx,%rsi
   136c6:	48 89 c7             	mov    %rax,%rdi
   136c9:	e8 ad 0b 00 00       	call   1427b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>
      }
   136ce:	90                   	nop
   136cf:	c9                   	leave
   136d0:	c3                   	ret

00000000000136d1 <_ZSt8_DestroyIPP12VkPipeline_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   136d1:	55                   	push   %rbp
   136d2:	48 89 e5             	mov    %rsp,%rbp
   136d5:	48 83 ec 10          	sub    $0x10,%rsp
   136d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   136dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   136e1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   136e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   136e9:	48 89 d6             	mov    %rdx,%rsi
   136ec:	48 89 c7             	mov    %rax,%rdi
   136ef:	e8 b5 0b 00 00       	call   142a9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>
    }
   136f4:	90                   	nop
   136f5:	c9                   	leave
   136f6:	c3                   	ret
   136f7:	90                   	nop

00000000000136f8 <_ZNSt15__new_allocatorIP13VkImageView_TEC1Ev>:
      __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   136f8:	55                   	push   %rbp
   136f9:	48 89 e5             	mov    %rsp,%rbp
   136fc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13700:	90                   	nop
   13701:	5d                   	pop    %rbp
   13702:	c3                   	ret

0000000000013703 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   13703:	55                   	push   %rbp
   13704:	48 89 e5             	mov    %rsp,%rbp
   13707:	48 83 ec 20          	sub    $0x20,%rsp
   1370b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1370f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13713:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   13717:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1371b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1371f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13723:	48 89 ce             	mov    %rcx,%rsi
   13726:	48 89 c7             	mov    %rax,%rdi
   13729:	e8 8a 0b 00 00       	call   142b8 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>
   1372e:	90                   	nop
   1372f:	c9                   	leave
   13730:	c3                   	ret

0000000000013731 <_ZSt8_DestroyIPP13VkImageView_TEvT_S3_>:
    _Destroy(_ForwardIterator __first, _ForwardIterator __last)
   13731:	55                   	push   %rbp
   13732:	48 89 e5             	mov    %rsp,%rbp
   13735:	48 83 ec 10          	sub    $0x10,%rsp
   13739:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1373d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	__destroy(__first, __last);
   13741:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13745:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13749:	48 89 d6             	mov    %rdx,%rsi
   1374c:	48 89 c7             	mov    %rax,%rdi
   1374f:	e8 95 0b 00 00       	call   142e9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>
    }
   13754:	90                   	nop
   13755:	c9                   	leave
   13756:	c3                   	ret
   13757:	90                   	nop

0000000000013758 <_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000EEEC1IlvEERKT_>:
	  constexpr explicit duration(const _Rep2& __rep)
   13758:	55                   	push   %rbp
   13759:	48 89 e5             	mov    %rsp,%rbp
   1375c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13760:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  : __r(static_cast<rep>(__rep)) { }
   13764:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13768:	48 8b 10             	mov    (%rax),%rdx
   1376b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1376f:	48 89 10             	mov    %rdx,(%rax)
   13772:	90                   	nop
   13773:	5d                   	pop    %rbp
   13774:	c3                   	ret

0000000000013775 <_ZSt3maxImERKT_S2_S2_>:
    max(const _Tp& __a, const _Tp& __b)
   13775:	55                   	push   %rbp
   13776:	48 89 e5             	mov    %rsp,%rbp
   13779:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1377d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      if (__a < __b)
   13781:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13785:	48 8b 10             	mov    (%rax),%rdx
   13788:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1378c:	48 8b 00             	mov    (%rax),%rax
   1378f:	48 39 c2             	cmp    %rax,%rdx
   13792:	73 06                	jae    1379a <_ZSt3maxImERKT_S2_S2_+0x25>
	return __b;
   13794:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13798:	eb 04                	jmp    1379e <_ZSt3maxImERKT_S2_S2_+0x29>
      return __a;
   1379a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    }
   1379e:	5d                   	pop    %rbp
   1379f:	c3                   	ret

00000000000137a0 <_ZSt18uninitialized_copyIPKPKcPS1_ET0_T_S6_S5_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   137a0:	55                   	push   %rbp
   137a1:	48 89 e5             	mov    %rsp,%rbp
   137a4:	48 83 ec 30          	sub    $0x30,%rsp
   137a8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   137ac:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   137b0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   137b4:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   137b8:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   137bc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   137c0:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   137c4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   137c8:	48 89 ce             	mov    %rcx,%rsi
   137cb:	48 89 c7             	mov    %rax,%rdi
   137ce:	e8 25 0b 00 00       	call   142f8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>
    }
   137d3:	c9                   	leave
   137d4:	c3                   	ret

00000000000137d5 <_ZNSt12_Destroy_auxILb1EE9__destroyIPPKcEEvT_S5_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   137d5:	55                   	push   %rbp
   137d6:	48 89 e5             	mov    %rsp,%rbp
   137d9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   137dd:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   137e1:	90                   	nop
   137e2:	5d                   	pop    %rbp
   137e3:	c3                   	ret

00000000000137e4 <_ZNKSt6vectorIPKcSaIS1_EE8max_sizeEv>:
      max_size() const _GLIBCXX_NOEXCEPT
   137e4:	55                   	push   %rbp
   137e5:	48 89 e5             	mov    %rsp,%rbp
   137e8:	48 83 ec 10          	sub    $0x10,%rsp
   137ec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_max_size(_M_get_Tp_allocator()); }
   137f0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   137f4:	48 89 c7             	mov    %rax,%rdi
   137f7:	e8 2a 0b 00 00       	call   14326 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>
   137fc:	48 89 c7             	mov    %rax,%rdi
   137ff:	e8 0f 65 ff ff       	call   9d13 <_ZNSt6vectorIPKcSaIS1_EE11_S_max_sizeERKS2_>
   13804:	c9                   	leave
   13805:	c3                   	ret

0000000000013806 <_ZSt12__relocate_aIPPKcS2_SaIS1_EET0_T_S5_S4_RT1_>:

  template <typename _InputIterator, typename _ForwardIterator,
	    typename _Allocator>
    _GLIBCXX20_CONSTEXPR
    inline _ForwardIterator
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13806:	55                   	push   %rbp
   13807:	48 89 e5             	mov    %rsp,%rbp
   1380a:	41 54                	push   %r12
   1380c:	53                   	push   %rbx
   1380d:	48 83 ec 20          	sub    $0x20,%rsp
   13811:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13815:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13819:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   1381d:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
		 _ForwardIterator __result, _Allocator& __alloc)
    noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
				     std::__niter_base(__last),
				     std::__niter_base(__result), __alloc)))
    {
      return std::__relocate_a_1(std::__niter_base(__first),
   13821:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13825:	48 89 c7             	mov    %rax,%rdi
   13828:	e8 07 0b 00 00       	call   14334 <_ZSt12__niter_baseIPPKcET_S3_>
   1382d:	49 89 c4             	mov    %rax,%r12
   13830:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13834:	48 89 c7             	mov    %rax,%rdi
   13837:	e8 f8 0a 00 00       	call   14334 <_ZSt12__niter_baseIPPKcET_S3_>
   1383c:	48 89 c3             	mov    %rax,%rbx
   1383f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13843:	48 89 c7             	mov    %rax,%rdi
   13846:	e8 e9 0a 00 00       	call   14334 <_ZSt12__niter_baseIPPKcET_S3_>
   1384b:	48 89 c7             	mov    %rax,%rdi
   1384e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13852:	48 89 c1             	mov    %rax,%rcx
   13855:	4c 89 e2             	mov    %r12,%rdx
   13858:	48 89 de             	mov    %rbx,%rsi
   1385b:	e8 e2 0a 00 00       	call   14342 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
				 std::__niter_base(__last),
				 std::__niter_base(__result), __alloc);
    }
   13860:	48 83 c4 20          	add    $0x20,%rsp
   13864:	5b                   	pop    %rbx
   13865:	41 5c                	pop    %r12
   13867:	5d                   	pop    %rbp
   13868:	c3                   	ret
   13869:	90                   	nop

000000000001386a <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE8_StorageIS2_Lb1EEC1IJS2_EEESt10in_place_tDpOT_>:
	    _Storage(in_place_t, _Args&&... __args)
   1386a:	55                   	push   %rbp
   1386b:	48 89 e5             	mov    %rsp,%rbp
   1386e:	48 83 ec 10          	sub    $0x10,%rsp
   13872:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13876:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	    : _M_value(std::forward<_Args>(__args)...)
   1387a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1387e:	48 89 c7             	mov    %rax,%rdi
   13881:	e8 f6 df ff ff       	call   1187c <_ZSt7forwardISt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS3_E4typeE>
   13886:	48 89 c1             	mov    %rax,%rcx
   13889:	48 8b 75 f8          	mov    -0x8(%rbp),%rsi
   1388d:	48 8b 01             	mov    (%rcx),%rax
   13890:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13894:	48 89 06             	mov    %rax,(%rsi)
   13897:	48 89 56 08          	mov    %rdx,0x8(%rsi)
   1389b:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   1389f:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   138a3:	48 89 46 0c          	mov    %rax,0xc(%rsi)
   138a7:	48 89 56 14          	mov    %rdx,0x14(%rsi)
	    { }
   138ab:	90                   	nop
   138ac:	c9                   	leave
   138ad:	c3                   	ret

00000000000138ae <_ZSt11__addressofISt4pairIj23VkQueueFamilyPropertiesEEPT_RS3_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   138ae:	55                   	push   %rbp
   138af:	48 89 e5             	mov    %rsp,%rbp
   138b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   138b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138ba:	5d                   	pop    %rbp
   138bb:	c3                   	ret

00000000000138bc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   138bc:	55                   	push   %rbp
   138bd:	48 89 e5             	mov    %rsp,%rbp
   138c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   138c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   138c8:	5d                   	pop    %rbp
   138c9:	c3                   	ret

00000000000138ca <_ZSt10_ConstructISt4pairIj23VkQueueFamilyPropertiesEJRKS2_EEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   138ca:	55                   	push   %rbp
   138cb:	48 89 e5             	mov    %rsp,%rbp
   138ce:	53                   	push   %rbx
   138cf:	48 83 ec 18          	sub    $0x18,%rsp
   138d3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   138d7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   138db:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   138df:	48 89 c6             	mov    %rax,%rsi
   138e2:	bf 1c 00 00 00       	mov    $0x1c,%edi
   138e7:	e8 54 15 ff ff       	call   4e40 <_ZnwmPv>
   138ec:	48 89 c3             	mov    %rax,%rbx
   138ef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   138f3:	48 89 c7             	mov    %rax,%rdi
   138f6:	e8 c1 ff ff ff       	call   138bc <_ZSt7forwardIRKSt4pairIj23VkQueueFamilyPropertiesEEOT_RNSt16remove_referenceIS5_E4typeE>
   138fb:	48 89 c1             	mov    %rax,%rcx
   138fe:	48 8b 01             	mov    (%rcx),%rax
   13901:	48 8b 51 08          	mov    0x8(%rcx),%rdx
   13905:	48 89 03             	mov    %rax,(%rbx)
   13908:	48 89 53 08          	mov    %rdx,0x8(%rbx)
   1390c:	48 8b 41 0c          	mov    0xc(%rcx),%rax
   13910:	48 8b 51 14          	mov    0x14(%rcx),%rdx
   13914:	48 89 43 0c          	mov    %rax,0xc(%rbx)
   13918:	48 89 53 14          	mov    %rdx,0x14(%rbx)
    }
   1391c:	90                   	nop
   1391d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13921:	c9                   	leave
   13922:	c3                   	ret
   13923:	90                   	nop

0000000000013924 <_ZNSt22_Optional_payload_baseISt4pairIj23VkQueueFamilyPropertiesEE10_M_destroyEv>:
      _M_destroy() noexcept
   13924:	55                   	push   %rbp
   13925:	48 89 e5             	mov    %rsp,%rbp
   13928:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_engaged = false;
   1392c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13930:	c6 40 1c 00          	movb   $0x0,0x1c(%rax)
      }
   13934:	90                   	nop
   13935:	5d                   	pop    %rbp
   13936:	c3                   	ret
   13937:	90                   	nop

0000000000013938 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13938:	55                   	push   %rbp
   13939:	48 89 e5             	mov    %rsp,%rbp
   1393c:	53                   	push   %rbx
   1393d:	48 83 ec 18          	sub    $0x18,%rsp
   13941:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13945:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
   13949:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1394d:	48 89 c7             	mov    %rax,%rdi
   13950:	e8 95 f1 ff ff       	call   12aea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13955:	48 89 c3             	mov    %rax,%rbx
   13958:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1395c:	48 89 c7             	mov    %rax,%rdi
   1395f:	e8 42 0a 00 00       	call   143a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13964:	48 89 de             	mov    %rbx,%rsi
   13967:	48 89 c7             	mov    %rax,%rdi
   1396a:	e8 45 0a 00 00       	call   143b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>
      }
   1396f:	90                   	nop
   13970:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13974:	c9                   	leave
   13975:	c3                   	ret

0000000000013976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>:
      _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
   13976:	55                   	push   %rbp
   13977:	48 89 e5             	mov    %rsp,%rbp
   1397a:	48 83 ec 10          	sub    $0x10,%rsp
   1397e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13982:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
   13986:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1398a:	48 89 c7             	mov    %rax,%rdi
   1398d:	e8 14 0a 00 00       	call   143a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   13992:	48 89 c1             	mov    %rax,%rcx
   13995:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13999:	ba 01 00 00 00       	mov    $0x1,%edx
   1399e:	48 89 c6             	mov    %rax,%rsi
   139a1:	48 89 cf             	mov    %rcx,%rdi
   139a4:	e8 31 0a 00 00       	call   143da <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>
   139a9:	90                   	nop
   139aa:	c9                   	leave
   139ab:	c3                   	ret

00000000000139ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>:
      _M_end() _GLIBCXX_NOEXCEPT
   139ac:	55                   	push   %rbp
   139ad:	48 89 e5             	mov    %rsp,%rbp
   139b0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return &this->_M_impl._M_header; }
   139b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   139b8:	48 83 c0 08          	add    $0x8,%rax
   139bc:	5d                   	pop    %rbp
   139bd:	c3                   	ret

00000000000139be <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   139be:	55                   	push   %rbp
   139bf:	48 89 e5             	mov    %rsp,%rbp
   139c2:	53                   	push   %rbx
   139c3:	48 83 ec 38          	sub    $0x38,%rsp
   139c7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   139cb:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   139cf:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   139d3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
      while (__x != 0)
   139d7:	eb 56                	jmp    13a2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	if (!_M_impl._M_key_compare(_S_key(__x), __k))
   139d9:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   139dd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   139e1:	48 89 c7             	mov    %rax,%rdi
   139e4:	e8 e7 03 00 00       	call   13dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   139e9:	48 89 c1             	mov    %rax,%rcx
   139ec:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   139f0:	48 89 c2             	mov    %rax,%rdx
   139f3:	48 89 ce             	mov    %rcx,%rsi
   139f6:	48 89 df             	mov    %rbx,%rdi
   139f9:	e8 2e e1 ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   139fe:	83 f0 01             	xor    $0x1,%eax
   13a01:	84 c0                	test   %al,%al
   13a03:	74 1a                	je     13a1f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x61>
	  __y = __x, __x = _S_left(__x);
   13a05:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13a09:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
   13a0d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13a11:	48 89 c7             	mov    %rax,%rdi
   13a14:	e8 f0 ef ff ff       	call   12a09 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13a19:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
   13a1d:	eb 10                	jmp    13a2f <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x71>
	  __x = _S_right(__x);
   13a1f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13a23:	48 89 c7             	mov    %rax,%rdi
   13a26:	e8 cc ef ff ff       	call   129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13a2b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
      while (__x != 0)
   13a2f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13a34:	75 a3                	jne    139d9 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_EPSt18_Rb_tree_node_baseRS7_+0x1b>
      return iterator(__y);
   13a36:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13a3a:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
   13a3e:	48 89 d6             	mov    %rdx,%rsi
   13a41:	48 89 c7             	mov    %rax,%rdi
   13a44:	e8 c7 f6 ff ff       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13a49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    }
   13a4d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a51:	c9                   	leave
   13a52:	c3                   	ret
   13a53:	90                   	nop

0000000000013a54 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:
      const void*
      _M_addr() const noexcept
      { return static_cast<const void*>(&_M_storage); }

      _Tp*
      _M_ptr() noexcept
   13a54:	55                   	push   %rbp
   13a55:	48 89 e5             	mov    %rsp,%rbp
   13a58:	48 83 ec 10          	sub    $0x10,%rsp
   13a5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<_Tp*>(_M_addr()); }
   13a60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13a64:	48 89 c7             	mov    %rax,%rdi
   13a67:	e8 9c 09 00 00       	call   14408 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   13a6c:	c9                   	leave
   13a6d:	c3                   	ret

0000000000013a6e <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1IS5_EEOT_>:
	_Tuple_impl(_UHead&& __head)
   13a6e:	55                   	push   %rbp
   13a6f:	48 89 e5             	mov    %rsp,%rbp
   13a72:	53                   	push   %rbx
   13a73:	48 83 ec 18          	sub    $0x18,%rsp
   13a77:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13a7b:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	: _Base(std::forward<_UHead>(__head))
   13a7f:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   13a83:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   13a87:	48 89 c7             	mov    %rax,%rdi
   13a8a:	e8 a1 f0 ff ff       	call   12b30 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   13a8f:	48 89 c6             	mov    %rax,%rsi
   13a92:	48 89 df             	mov    %rbx,%rdi
   13a95:	e8 7c 09 00 00       	call   14416 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>
	{ }
   13a9a:	90                   	nop
   13a9b:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13a9f:	c9                   	leave
   13aa0:	c3                   	ret
   13aa1:	90                   	nop

0000000000013aa2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_create_node(_Args&&... __args)
   13aa2:	55                   	push   %rbp
   13aa3:	48 89 e5             	mov    %rsp,%rbp
   13aa6:	41 54                	push   %r12
   13aa8:	53                   	push   %rbx
   13aa9:	48 83 ec 30          	sub    $0x30,%rsp
   13aad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13ab1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13ab5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13ab9:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
	  _Link_type __tmp = _M_get_node();
   13abd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13ac1:	48 89 c7             	mov    %rax,%rdi
   13ac4:	e8 73 09 00 00       	call   1443c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>
   13ac9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
   13acd:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13ad1:	48 89 c7             	mov    %rax,%rdi
   13ad4:	e8 b4 f0 ff ff       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   13ad9:	49 89 c4             	mov    %rax,%r12
   13adc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13ae0:	48 89 c7             	mov    %rax,%rdi
   13ae3:	e8 97 f0 ff ff       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   13ae8:	48 89 c3             	mov    %rax,%rbx
   13aeb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13aef:	48 89 c7             	mov    %rax,%rdi
   13af2:	e8 7a f0 ff ff       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   13af7:	48 89 c2             	mov    %rax,%rdx
   13afa:	48 8b 75 e8          	mov    -0x18(%rbp),%rsi
   13afe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13b02:	4d 89 e0             	mov    %r12,%r8
   13b05:	48 89 d9             	mov    %rbx,%rcx
   13b08:	48 89 c7             	mov    %rax,%rdi
   13b0b:	e8 54 09 00 00       	call   14464 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>
	  return __tmp;
   13b10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   13b14:	48 83 c4 30          	add    $0x30,%rsp
   13b18:	5b                   	pop    %rbx
   13b19:	41 5c                	pop    %r12
   13b1b:	5d                   	pop    %rbp
   13b1c:	c3                   	ret
   13b1d:	90                   	nop

0000000000013b1e <_ZNKSt23_Rb_tree_const_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE13_M_const_castEv>:
      _M_const_cast() const _GLIBCXX_NOEXCEPT
   13b1e:	55                   	push   %rbp
   13b1f:	48 89 e5             	mov    %rsp,%rbp
   13b22:	48 83 ec 20          	sub    $0x20,%rsp
   13b26:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
   13b2a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13b2e:	48 8b 10             	mov    (%rax),%rdx
   13b31:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13b35:	48 89 d6             	mov    %rdx,%rsi
   13b38:	48 89 c7             	mov    %rax,%rdi
   13b3b:	e8 d0 f5 ff ff       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13b40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b44:	c9                   	leave
   13b45:	c3                   	ret

0000000000013b46 <_ZNKSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE4sizeEv>:
      size() const _GLIBCXX_NOEXCEPT
   13b46:	55                   	push   %rbp
   13b47:	48 89 e5             	mov    %rsp,%rbp
   13b4a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_impl._M_node_count; }
   13b4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b52:	48 8b 40 28          	mov    0x28(%rax),%rax
   13b56:	5d                   	pop    %rbp
   13b57:	c3                   	ret

0000000000013b58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE12_M_rightmostEv>:
      _M_rightmost() _GLIBCXX_NOEXCEPT
   13b58:	55                   	push   %rbp
   13b59:	48 89 e5             	mov    %rsp,%rbp
   13b5c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_right; }
   13b60:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b64:	48 83 c0 20          	add    $0x20,%rax
   13b68:	5d                   	pop    %rbp
   13b69:	c3                   	ret

0000000000013b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>:
      _S_key(_Const_Base_ptr __x)
   13b6a:	55                   	push   %rbp
   13b6b:	48 89 e5             	mov    %rsp,%rbp
   13b6e:	48 83 ec 10          	sub    $0x10,%rsp
   13b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _S_key(static_cast<_Const_Link_type>(__x)); }
   13b76:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b7a:	48 89 c7             	mov    %rax,%rdi
   13b7d:	e8 4e 02 00 00       	call   13dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13b82:	c9                   	leave
   13b83:	c3                   	ret

0000000000013b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>:
      constexpr pair(const _T1& __a, const _T2& __b)
   13b84:	55                   	push   %rbp
   13b85:	48 89 e5             	mov    %rsp,%rbp
   13b88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13b8c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13b90:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      : first(__a), second(__b) { }
   13b94:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13b98:	48 8b 10             	mov    (%rax),%rdx
   13b9b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13b9f:	48 89 10             	mov    %rdx,(%rax)
   13ba2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13ba6:	48 8b 10             	mov    (%rax),%rdx
   13ba9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13bad:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13bb1:	90                   	nop
   13bb2:	5d                   	pop    %rbp
   13bb3:	c3                   	ret

0000000000013bb4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13bb4:	55                   	push   %rbp
   13bb5:	48 89 e5             	mov    %rsp,%rbp
   13bb8:	53                   	push   %rbx
   13bb9:	48 83 ec 78          	sub    $0x78,%rsp
   13bbd:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
   13bc1:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
      _Link_type __x = _M_begin();
   13bc5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13bc9:	48 89 c7             	mov    %rax,%rdi
   13bcc:	e8 79 de ff ff       	call   11a4a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_beginEv>
   13bd1:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      _Base_ptr __y = _M_end();
   13bd5:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13bd9:	48 89 c7             	mov    %rax,%rdi
   13bdc:	e8 cb fd ff ff       	call   139ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13be1:	48 89 45 98          	mov    %rax,-0x68(%rbp)
      bool __comp = true;
   13be5:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
      while (__x != 0)
   13be9:	eb 51                	jmp    13c3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x88>
	  __y = __x;
   13beb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13bef:	48 89 45 98          	mov    %rax,-0x68(%rbp)
	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
   13bf3:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13bf7:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13bfb:	48 89 c7             	mov    %rax,%rdi
   13bfe:	e8 cd 01 00 00       	call   13dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13c03:	48 89 c2             	mov    %rax,%rdx
   13c06:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13c0a:	48 89 c6             	mov    %rax,%rsi
   13c0d:	48 89 df             	mov    %rbx,%rdi
   13c10:	e8 17 df ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13c15:	88 45 ef             	mov    %al,-0x11(%rbp)
	  __x = __comp ? _S_left(__x) : _S_right(__x);
   13c18:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13c1c:	74 0e                	je     13c2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x78>
   13c1e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13c22:	48 89 c7             	mov    %rax,%rdi
   13c25:	e8 df ed ff ff       	call   12a09 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base>
   13c2a:	eb 0c                	jmp    13c38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
   13c2c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13c30:	48 89 c7             	mov    %rax,%rdi
   13c33:	e8 bf ed ff ff       	call   129f7 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base>
   13c38:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
      while (__x != 0)
   13c3c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
   13c40:	48 85 c0             	test   %rax,%rax
   13c43:	75 a6                	jne    13beb <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x37>
      iterator __j = iterator(__y);
   13c45:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
   13c49:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13c4d:	48 89 d6             	mov    %rdx,%rsi
   13c50:	48 89 c7             	mov    %rax,%rdi
   13c53:	e8 b8 f4 ff ff       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
      if (__comp)
   13c58:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
   13c5c:	74 54                	je     13cb2 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xfe>
	  if (__j == begin())
   13c5e:	48 8b 45 88          	mov    -0x78(%rbp),%rax
   13c62:	48 89 c7             	mov    %rax,%rdi
   13c65:	e8 cc 08 00 00       	call   14536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>
   13c6a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
   13c6e:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx
   13c72:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13c76:	48 89 d6             	mov    %rdx,%rsi
   13c79:	48 89 c7             	mov    %rax,%rdi
   13c7c:	e8 4f de ff ff       	call   11ad0 <_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEESB_>
   13c81:	84 c0                	test   %al,%al
   13c83:	74 21                	je     13ca6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xf2>
	    return _Res(__x, __y);
   13c85:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13c89:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13c8d:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
   13c91:	48 89 ce             	mov    %rcx,%rsi
   13c94:	48 89 c7             	mov    %rax,%rdi
   13c97:	e8 c4 08 00 00       	call   14560 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   13c9c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   13ca0:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
   13ca4:	eb 7d                	jmp    13d23 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
	    --__j;
   13ca6:	48 8d 45 90          	lea    -0x70(%rbp),%rax
   13caa:	48 89 c7             	mov    %rax,%rdi
   13cad:	e8 ce 00 00 00       	call   13d80 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>
      if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
   13cb2:	48 8b 5d 88          	mov    -0x78(%rbp),%rbx
   13cb6:	48 8b 45 90          	mov    -0x70(%rbp),%rax
   13cba:	48 89 c7             	mov    %rax,%rdi
   13cbd:	e8 a8 fe ff ff       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13cc2:	48 89 c1             	mov    %rax,%rcx
   13cc5:	48 8b 45 80          	mov    -0x80(%rbp),%rax
   13cc9:	48 89 c2             	mov    %rax,%rdx
   13ccc:	48 89 ce             	mov    %rcx,%rsi
   13ccf:	48 89 df             	mov    %rbx,%rdi
   13cd2:	e8 55 de ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13cd7:	84 c0                	test   %al,%al
   13cd9:	74 21                	je     13cfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x148>
	return _Res(__x, __y);
   13cdb:	48 8d 55 98          	lea    -0x68(%rbp),%rdx
   13cdf:	48 8d 4d a0          	lea    -0x60(%rbp),%rcx
   13ce3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
   13ce7:	48 89 ce             	mov    %rcx,%rsi
   13cea:	48 89 c7             	mov    %rax,%rdi
   13ced:	e8 6e 08 00 00       	call   14560 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>
   13cf2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13cf6:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13cfa:	eb 27                	jmp    13d23 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x16f>
      return _Res(__j._M_node, 0);
   13cfc:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
   13d03:	00 
   13d04:	48 8d 55 e0          	lea    -0x20(%rbp),%rdx
   13d08:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx
   13d0c:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
   13d10:	48 89 ce             	mov    %rcx,%rsi
   13d13:	48 89 c7             	mov    %rax,%rdi
   13d16:	e8 69 fe ff ff       	call   13b84 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IS1_S1_Lb1EEERKS1_S5_>
   13d1b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   13d1f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    }
   13d23:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   13d27:	c9                   	leave
   13d28:	c3                   	ret
   13d29:	90                   	nop

0000000000013d2a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_leftmostEv>:
      _M_leftmost() _GLIBCXX_NOEXCEPT
   13d2a:	55                   	push   %rbp
   13d2b:	48 89 e5             	mov    %rsp,%rbp
   13d2e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl._M_header._M_left; }
   13d32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d36:	48 83 c0 18          	add    $0x18,%rax
   13d3a:	5d                   	pop    %rbp
   13d3b:	c3                   	ret

0000000000013d3c <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRS1_S4_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   13d3c:	55                   	push   %rbp
   13d3d:	48 89 e5             	mov    %rsp,%rbp
   13d40:	48 83 ec 20          	sub    $0x20,%rsp
   13d44:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13d48:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   13d4c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   13d50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13d54:	48 89 c7             	mov    %rax,%rdi
   13d57:	e8 48 08 00 00       	call   145a4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   13d5c:	48 8b 10             	mov    (%rax),%rdx
   13d5f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d63:	48 89 10             	mov    %rdx,(%rax)
   13d66:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13d6a:	48 89 c7             	mov    %rax,%rdi
   13d6d:	e8 32 08 00 00       	call   145a4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   13d72:	48 8b 10             	mov    (%rax),%rdx
   13d75:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d79:	48 89 50 08          	mov    %rdx,0x8(%rax)
   13d7d:	90                   	nop
   13d7e:	c9                   	leave
   13d7f:	c3                   	ret

0000000000013d80 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEmmEv>:
      operator--() _GLIBCXX_NOEXCEPT
   13d80:	55                   	push   %rbp
   13d81:	48 89 e5             	mov    %rsp,%rbp
   13d84:	48 83 ec 10          	sub    $0x10,%rsp
   13d88:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_decrement(_M_node);
   13d8c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13d90:	48 8b 00             	mov    (%rax),%rax
   13d93:	48 89 c7             	mov    %rax,%rdi
   13d96:	e8 35 06 ff ff       	call   43d0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@plt>
   13d9b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13d9f:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   13da2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13da6:	c9                   	leave
   13da7:	c3                   	ret

0000000000013da8 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEppEv>:
      operator++() _GLIBCXX_NOEXCEPT
   13da8:	55                   	push   %rbp
   13da9:	48 89 e5             	mov    %rsp,%rbp
   13dac:	48 83 ec 10          	sub    $0x10,%rsp
   13db0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	_M_node = _Rb_tree_increment(_M_node);
   13db4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13db8:	48 8b 00             	mov    (%rax),%rax
   13dbb:	48 89 c7             	mov    %rax,%rdi
   13dbe:	e8 4d 04 ff ff       	call   4210 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@plt>
   13dc3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   13dc7:	48 89 02             	mov    %rax,(%rdx)
	return *this;
   13dca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
      }
   13dce:	c9                   	leave
   13dcf:	c3                   	ret

0000000000013dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>:
      _S_key(_Const_Link_type __x)
   13dd0:	55                   	push   %rbp
   13dd1:	48 89 e5             	mov    %rsp,%rbp
   13dd4:	48 83 ec 20          	sub    $0x20,%rsp
   13dd8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	return _KeyOfValue()(*__x->_M_valptr());
   13ddc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13de0:	48 89 c7             	mov    %rax,%rdi
   13de3:	e8 ca 07 00 00       	call   145b2 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   13de8:	48 89 c2             	mov    %rax,%rdx
   13deb:	48 8d 45 ff          	lea    -0x1(%rbp),%rax
   13def:	48 89 d6             	mov    %rdx,%rsi
   13df2:	48 89 c7             	mov    %rax,%rdi
   13df5:	e8 d6 07 00 00       	call   145d0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>
      }
   13dfa:	c9                   	leave
   13dfb:	c3                   	ret

0000000000013dfc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E>:
    _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   13dfc:	55                   	push   %rbp
   13dfd:	48 89 e5             	mov    %rsp,%rbp
   13e00:	41 54                	push   %r12
   13e02:	53                   	push   %rbx
   13e03:	48 83 ec 30          	sub    $0x30,%rsp
   13e07:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   13e0b:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   13e0f:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   13e13:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
			    || _M_impl._M_key_compare(_S_key(__z),
   13e17:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
   13e1c:	75 43                	jne    13e61 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
      bool __insert_left = (__x != 0 || __p == _M_end()
   13e1e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e22:	48 89 c7             	mov    %rax,%rdi
   13e25:	e8 82 fb ff ff       	call   139ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_M_endEv>
   13e2a:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)
   13e2e:	74 31                	je     13e61 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x65>
			    || _M_impl._M_key_compare(_S_key(__z),
   13e30:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx
   13e34:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   13e38:	48 89 c7             	mov    %rax,%rdi
   13e3b:	e8 2a fd ff ff       	call   13b6a <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base>
   13e40:	49 89 c4             	mov    %rax,%r12
   13e43:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   13e47:	48 89 c7             	mov    %rax,%rdi
   13e4a:	e8 81 ff ff ff       	call   13dd0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E>
   13e4f:	4c 89 e2             	mov    %r12,%rdx
   13e52:	48 89 c6             	mov    %rax,%rsi
   13e55:	48 89 df             	mov    %rbx,%rdi
   13e58:	e8 cf dc ff ff       	call   11b2c <_ZNKSt4lessINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclERKS5_S8_>
   13e5d:	84 c0                	test   %al,%al
   13e5f:	74 07                	je     13e68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x6c>
   13e61:	b8 01 00 00 00       	mov    $0x1,%eax
   13e66:	eb 05                	jmp    13e6d <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSG_PSt13_Rb_tree_nodeIS8_E+0x71>
   13e68:	b8 00 00 00 00       	mov    $0x0,%eax
      bool __insert_left = (__x != 0 || __p == _M_end()
   13e6d:	88 45 ef             	mov    %al,-0x11(%rbp)
				    this->_M_impl._M_header);
   13e70:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e74:	48 8d 48 08          	lea    0x8(%rax),%rcx
      _Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
   13e78:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
   13e7c:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
   13e80:	48 8b 75 c0          	mov    -0x40(%rbp),%rsi
   13e84:	89 c7                	mov    %eax,%edi
   13e86:	e8 c5 01 ff ff       	call   4050 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@plt>
      ++_M_impl._M_node_count;
   13e8b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e8f:	48 8b 40 28          	mov    0x28(%rax),%rax
   13e93:	48 8d 50 01          	lea    0x1(%rax),%rdx
   13e97:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   13e9b:	48 89 50 28          	mov    %rdx,0x28(%rax)
      return iterator(__z);
   13e9f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
   13ea3:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
   13ea7:	48 89 d6             	mov    %rdx,%rsi
   13eaa:	48 89 c7             	mov    %rax,%rdi
   13ead:	e8 5e f2 ff ff       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   13eb2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    }
   13eb6:	48 83 c4 30          	add    $0x30,%rsp
   13eba:	5b                   	pop    %rbx
   13ebb:	41 5c                	pop    %r12
   13ebd:	5d                   	pop    %rbp
   13ebe:	c3                   	ret
   13ebf:	90                   	nop

0000000000013ec0 <_ZNKSt12_Vector_baseIP9VkImage_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   13ec0:	55                   	push   %rbp
   13ec1:	48 89 e5             	mov    %rsp,%rbp
   13ec4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13ec8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ecc:	5d                   	pop    %rbp
   13ecd:	c3                   	ret

0000000000013ece <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EEC1ERKS2_>:
      _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
   13ece:	55                   	push   %rbp
   13ecf:	48 89 e5             	mov    %rsp,%rbp
   13ed2:	48 83 ec 10          	sub    $0x10,%rsp
   13ed6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13eda:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _M_impl(__a) { }
   13ede:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13ee2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   13ee6:	48 89 d6             	mov    %rdx,%rsi
   13ee9:	48 89 c7             	mov    %rax,%rdi
   13eec:	e8 b7 66 ff ff       	call   a5a8 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE12_Vector_implC1ERKS2_>
   13ef1:	90                   	nop
   13ef2:	c9                   	leave
   13ef3:	c3                   	ret

0000000000013ef4 <_ZNSt12_Vector_baseIP9VkImage_TSaIS1_EE17_Vector_impl_data12_M_copy_dataERKS4_>:
	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
   13ef4:	55                   	push   %rbp
   13ef5:	48 89 e5             	mov    %rsp,%rbp
   13ef8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13efc:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  _M_start = __x._M_start;
   13f00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f04:	48 8b 10             	mov    (%rax),%rdx
   13f07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f0b:	48 89 10             	mov    %rdx,(%rax)
	  _M_finish = __x._M_finish;
   13f0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f12:	48 8b 50 08          	mov    0x8(%rax),%rdx
   13f16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f1a:	48 89 50 08          	mov    %rdx,0x8(%rax)
	  _M_end_of_storage = __x._M_end_of_storage;
   13f1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   13f22:	48 8b 50 10          	mov    0x10(%rax),%rdx
   13f26:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f2a:	48 89 50 10          	mov    %rdx,0x10(%rax)
	}
   13f2e:	90                   	nop
   13f2f:	5d                   	pop    %rbp
   13f30:	c3                   	ret

0000000000013f31 <_ZSt4moveIRSaIP9VkImage_TEEONSt16remove_referenceIT_E4typeEOS5_>:
    move(_Tp&& __t) noexcept
   13f31:	55                   	push   %rbp
   13f32:	48 89 e5             	mov    %rsp,%rbp
   13f35:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
   13f39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f3d:	5d                   	pop    %rbp
   13f3e:	c3                   	ret

0000000000013f3f <_ZNSt6vectorIP13VkImageView_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   13f3f:	55                   	push   %rbp
   13f40:	48 89 e5             	mov    %rsp,%rbp
   13f43:	48 83 ec 20          	sub    $0x20,%rsp
   13f47:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   13f4b:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   13f52:	ff ff 0f 
   13f55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   13f59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13f5d:	48 89 c7             	mov    %rax,%rdi
   13f60:	e8 7d 06 00 00       	call   145e2 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>
   13f65:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   13f69:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   13f6d:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   13f71:	48 89 d6             	mov    %rdx,%rsi
   13f74:	48 89 c7             	mov    %rax,%rdi
   13f77:	e8 91 13 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
   13f7c:	48 8b 00             	mov    (%rax),%rax
      }
   13f7f:	c9                   	leave
   13f80:	c3                   	ret
   13f81:	90                   	nop

0000000000013f82 <_ZNKSt12_Vector_baseIP13VkImageView_TSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   13f82:	55                   	push   %rbp
   13f83:	48 89 e5             	mov    %rsp,%rbp
   13f86:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   13f8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13f8e:	5d                   	pop    %rbp
   13f8f:	c3                   	ret

0000000000013f90 <_ZSt25__uninitialized_default_nIPP13VkImageView_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   13f90:	55                   	push   %rbp
   13f91:	48 89 e5             	mov    %rsp,%rbp
   13f94:	48 83 ec 20          	sub    $0x20,%rsp
   13f98:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13f9c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   13fa0:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   13fa4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   13fa8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   13fac:	48 89 d6             	mov    %rdx,%rsi
   13faf:	48 89 c7             	mov    %rax,%rdi
   13fb2:	e8 45 06 00 00       	call   145fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>
    }
   13fb7:	c9                   	leave
   13fb8:	c3                   	ret

0000000000013fb9 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   13fb9:	55                   	push   %rbp
   13fba:	48 89 e5             	mov    %rsp,%rbp
   13fbd:	48 83 ec 10          	sub    $0x10,%rsp
   13fc1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   13fc5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   13fc9:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   13fcd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   13fd1:	ba 00 00 00 00       	mov    $0x0,%edx
   13fd6:	48 89 ce             	mov    %rcx,%rsi
   13fd9:	48 89 c7             	mov    %rax,%rdi
   13fdc:	e8 79 06 00 00       	call   1465a <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>
   13fe1:	c9                   	leave
   13fe2:	c3                   	ret

0000000000013fe3 <_ZSt12__relocate_aIPP13VkImageView_TS2_SaIS1_EET0_T_S5_S4_RT1_>:
    __relocate_a(_InputIterator __first, _InputIterator __last,
   13fe3:	55                   	push   %rbp
   13fe4:	48 89 e5             	mov    %rsp,%rbp
   13fe7:	41 54                	push   %r12
   13fe9:	53                   	push   %rbx
   13fea:	48 83 ec 20          	sub    $0x20,%rsp
   13fee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   13ff2:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   13ff6:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   13ffa:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      return std::__relocate_a_1(std::__niter_base(__first),
   13ffe:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14002:	48 89 c7             	mov    %rax,%rdi
   14005:	e8 b1 06 00 00       	call   146bb <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   1400a:	49 89 c4             	mov    %rax,%r12
   1400d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14011:	48 89 c7             	mov    %rax,%rdi
   14014:	e8 a2 06 00 00       	call   146bb <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14019:	48 89 c3             	mov    %rax,%rbx
   1401c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14020:	48 89 c7             	mov    %rax,%rdi
   14023:	e8 93 06 00 00       	call   146bb <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>
   14028:	48 89 c7             	mov    %rax,%rdi
   1402b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1402f:	48 89 c1             	mov    %rax,%rcx
   14032:	4c 89 e2             	mov    %r12,%rdx
   14035:	48 89 de             	mov    %rbx,%rsi
   14038:	e8 8c 06 00 00       	call   146c9 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>
    }
   1403d:	48 83 c4 20          	add    $0x20,%rsp
   14041:	5b                   	pop    %rbx
   14042:	41 5c                	pop    %r12
   14044:	5d                   	pop    %rbp
   14045:	c3                   	ret

0000000000014046 <_ZNSaI28VkGraphicsPipelineCreateInfoEC1ERKS0_>:
      allocator(const allocator& __a) _GLIBCXX_NOTHROW
   14046:	55                   	push   %rbp
   14047:	48 89 e5             	mov    %rsp,%rbp
   1404a:	48 83 ec 10          	sub    $0x10,%rsp
   1404e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14052:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : __allocator_base<_Tp>(__a) { }
   14056:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1405a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1405e:	48 89 d6             	mov    %rdx,%rsi
   14061:	48 89 c7             	mov    %rax,%rdi
   14064:	e8 c3 06 00 00       	call   1472c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>
   14069:	90                   	nop
   1406a:	c9                   	leave
   1406b:	c3                   	ret

000000000001406c <_ZNSt12_Vector_baseI28VkGraphicsPipelineCreateInfoSaIS0_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   1406c:	55                   	push   %rbp
   1406d:	48 89 e5             	mov    %rsp,%rbp
   14070:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   14074:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14078:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   1407f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14083:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   1408a:	00 
   1408b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1408f:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   14096:	00 
	{ }
   14097:	90                   	nop
   14098:	5d                   	pop    %rbp
   14099:	c3                   	ret

000000000001409a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE10deallocateERS1_PS0_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1409a:	55                   	push   %rbp
   1409b:	48 89 e5             	mov    %rsp,%rbp
   1409e:	48 83 ec 20          	sub    $0x20,%rsp
   140a2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   140a6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   140aa:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   140ae:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   140b2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   140b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   140ba:	48 89 ce             	mov    %rcx,%rsi
   140bd:	48 89 c7             	mov    %rax,%rdi
   140c0:	e8 77 06 00 00       	call   1473c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>
   140c5:	90                   	nop
   140c6:	c9                   	leave
   140c7:	c3                   	ret

00000000000140c8 <_ZNSt6vectorI28VkGraphicsPipelineCreateInfoSaIS0_EE11_S_max_sizeERKS1_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   140c8:	55                   	push   %rbp
   140c9:	48 89 e5             	mov    %rsp,%rbp
   140cc:	48 83 ec 20          	sub    $0x20,%rsp
   140d0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   140d4:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   140db:	8e e3 00 
   140de:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   140e2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   140e6:	48 89 c7             	mov    %rax,%rdi
   140e9:	e8 88 06 00 00       	call   14776 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>
   140ee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   140f2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   140f6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   140fa:	48 89 d6             	mov    %rdx,%rsi
   140fd:	48 89 c7             	mov    %rax,%rdi
   14100:	e8 08 12 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
   14105:	48 8b 00             	mov    (%rax),%rax
      }
   14108:	c9                   	leave
   14109:	c3                   	ret

000000000001410a <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8allocateERS1_m>:
      allocate(allocator_type& __a, size_type __n)
   1410a:	55                   	push   %rbp
   1410b:	48 89 e5             	mov    %rsp,%rbp
   1410e:	48 83 ec 10          	sub    $0x10,%rsp
   14112:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14116:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   1411a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1411e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14122:	ba 00 00 00 00       	mov    $0x0,%edx
   14127:	48 89 ce             	mov    %rcx,%rsi
   1412a:	48 89 c7             	mov    %rax,%rdi
   1412d:	e8 5e 06 00 00       	call   14790 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>
   14132:	c9                   	leave
   14133:	c3                   	ret

0000000000014134 <_ZSt18uninitialized_copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    uninitialized_copy(_InputIterator __first, _InputIterator __last,
   14134:	55                   	push   %rbp
   14135:	48 89 e5             	mov    %rsp,%rbp
   14138:	48 83 ec 30          	sub    $0x30,%rsp
   1413c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14140:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14144:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const bool __can_memmove = __is_trivial(_ValueType1);
   14148:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
      const bool __assignable
   1414c:	c6 45 fe 01          	movb   $0x1,-0x2(%rbp)
	__uninit_copy(__first, __last, __result);
   14150:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
   14154:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
   14158:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1415c:	48 89 ce             	mov    %rcx,%rsi
   1415f:	48 89 c7             	mov    %rax,%rdi
   14162:	e8 94 06 00 00       	call   147fb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>
    }
   14167:	c9                   	leave
   14168:	c3                   	ret

0000000000014169 <_ZNSt12_Destroy_auxILb1EE9__destroyIP28VkGraphicsPipelineCreateInfoEEvT_S4_>:
        __destroy(_ForwardIterator, _ForwardIterator) { }
   14169:	55                   	push   %rbp
   1416a:	48 89 e5             	mov    %rsp,%rbp
   1416d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14171:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14175:	90                   	nop
   14176:	5d                   	pop    %rbp
   14177:	c3                   	ret

0000000000014178 <_ZNSt6vectorIP12VkPipeline_TSaIS1_EE11_S_max_sizeERKS2_>:
      _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
   14178:	55                   	push   %rbp
   14179:	48 89 e5             	mov    %rsp,%rbp
   1417c:	48 83 ec 20          	sub    $0x20,%rsp
   14180:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
	const size_t __diffmax
   14184:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   1418b:	ff ff 0f 
   1418e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	const size_t __allocmax = _Alloc_traits::max_size(__a);
   14192:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14196:	48 89 c7             	mov    %rax,%rdi
   14199:	e8 8a 06 00 00       	call   14828 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>
   1419e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
	return (std::min)(__diffmax, __allocmax);
   141a2:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
   141a6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   141aa:	48 89 d6             	mov    %rdx,%rsi
   141ad:	48 89 c7             	mov    %rax,%rdi
   141b0:	e8 58 11 ff ff       	call   530d <_ZSt3minImERKT_S2_S2_>
   141b5:	48 8b 00             	mov    (%rax),%rax
      }
   141b8:	c9                   	leave
   141b9:	c3                   	ret

00000000000141ba <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE12_Vector_implC1ERKS2_>:
	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   141ba:	55                   	push   %rbp
   141bb:	48 89 e5             	mov    %rsp,%rbp
   141be:	48 83 ec 10          	sub    $0x10,%rsp
   141c2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141c6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _Tp_alloc_type(__a)
   141ca:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   141ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141d2:	48 89 d6             	mov    %rdx,%rsi
   141d5:	48 89 c7             	mov    %rax,%rdi
   141d8:	e8 99 f4 ff ff       	call   13676 <_ZNSaIP12VkPipeline_TEC1ERKS1_>
   141dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   141e1:	48 89 c7             	mov    %rax,%rdi
   141e4:	e8 59 06 00 00       	call   14842 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>
	{ }
   141e9:	90                   	nop
   141ea:	c9                   	leave
   141eb:	c3                   	ret

00000000000141ec <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_M_create_storageEm>:
      _M_create_storage(size_t __n)
   141ec:	55                   	push   %rbp
   141ed:	48 89 e5             	mov    %rsp,%rbp
   141f0:	48 83 ec 10          	sub    $0x10,%rsp
   141f4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   141f8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	this->_M_impl._M_start = this->_M_allocate(__n);
   141fc:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14200:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14204:	48 89 d6             	mov    %rdx,%rsi
   14207:	48 89 c7             	mov    %rax,%rdi
   1420a:	e8 61 06 00 00       	call   14870 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>
   1420f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14213:	48 89 02             	mov    %rax,(%rdx)
	this->_M_impl._M_finish = this->_M_impl._M_start;
   14216:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1421a:	48 8b 10             	mov    (%rax),%rdx
   1421d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14221:	48 89 50 08          	mov    %rdx,0x8(%rax)
	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   14225:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14229:	48 8b 00             	mov    (%rax),%rax
   1422c:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14230:	48 c1 e2 03          	shl    $0x3,%rdx
   14234:	48 01 c2             	add    %rax,%rdx
   14237:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1423b:	48 89 50 10          	mov    %rdx,0x10(%rax)
      }
   1423f:	90                   	nop
   14240:	c9                   	leave
   14241:	c3                   	ret

0000000000014242 <_ZSt27__uninitialized_default_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RSaIT1_E>:
    __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
   14242:	55                   	push   %rbp
   14243:	48 89 e5             	mov    %rsp,%rbp
   14246:	48 83 ec 20          	sub    $0x20,%rsp
   1424a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1424e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14252:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__uninitialized_default_n(__first, __n); }
   14256:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1425a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1425e:	48 89 d6             	mov    %rdx,%rsi
   14261:	48 89 c7             	mov    %rax,%rdi
   14264:	e8 3a 06 00 00       	call   148a3 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>
   14269:	c9                   	leave
   1426a:	c3                   	ret
   1426b:	90                   	nop

000000000001426c <_ZNSt15__new_allocatorIP12VkPipeline_TEC1ERKS2_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1426c:	55                   	push   %rbp
   1426d:	48 89 e5             	mov    %rsp,%rbp
   14270:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14274:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14278:	90                   	nop
   14279:	5d                   	pop    %rbp
   1427a:	c3                   	ret

000000000001427b <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE10deallocateERS2_PS1_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   1427b:	55                   	push   %rbp
   1427c:	48 89 e5             	mov    %rsp,%rbp
   1427f:	48 83 ec 20          	sub    $0x20,%rsp
   14283:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14287:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1428b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   1428f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14293:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14297:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1429b:	48 89 ce             	mov    %rcx,%rsi
   1429e:	48 89 c7             	mov    %rax,%rdi
   142a1:	e8 26 06 00 00       	call   148cc <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>
   142a6:	90                   	nop
   142a7:	c9                   	leave
   142a8:	c3                   	ret

00000000000142a9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP12VkPipeline_TEEvT_S5_>:
   142a9:	55                   	push   %rbp
   142aa:	48 89 e5             	mov    %rsp,%rbp
   142ad:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142b1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142b5:	90                   	nop
   142b6:	5d                   	pop    %rbp
   142b7:	c3                   	ret

00000000000142b8 <_ZNSt15__new_allocatorIP13VkImageView_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   142b8:	55                   	push   %rbp
   142b9:	48 89 e5             	mov    %rsp,%rbp
   142bc:	48 83 ec 20          	sub    $0x20,%rsp
   142c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142c8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   142cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   142d0:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   142d7:	00 
   142d8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   142dc:	48 89 d6             	mov    %rdx,%rsi
   142df:	48 89 c7             	mov    %rax,%rdi
   142e2:	e8 a9 00 ff ff       	call   4390 <_ZdlPvm@plt>
      }
   142e7:	c9                   	leave
   142e8:	c3                   	ret

00000000000142e9 <_ZNSt12_Destroy_auxILb1EE9__destroyIPP13VkImageView_TEEvT_S5_>:
   142e9:	55                   	push   %rbp
   142ea:	48 89 e5             	mov    %rsp,%rbp
   142ed:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   142f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   142f5:	90                   	nop
   142f6:	5d                   	pop    %rbp
   142f7:	c3                   	ret

00000000000142f8 <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKPKcPS3_EET0_T_S8_S7_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   142f8:	55                   	push   %rbp
   142f9:	48 89 e5             	mov    %rsp,%rbp
   142fc:	48 83 ec 20          	sub    $0x20,%rsp
   14300:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14304:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14308:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1430c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14310:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14314:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14318:	48 89 ce             	mov    %rcx,%rsi
   1431b:	48 89 c7             	mov    %rax,%rdi
   1431e:	e8 da 05 00 00       	call   148fd <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>
   14323:	c9                   	leave
   14324:	c3                   	ret
   14325:	90                   	nop

0000000000014326 <_ZNKSt12_Vector_baseIPKcSaIS1_EE19_M_get_Tp_allocatorEv>:
      _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   14326:	55                   	push   %rbp
   14327:	48 89 e5             	mov    %rsp,%rbp
   1432a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   1432e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14332:	5d                   	pop    %rbp
   14333:	c3                   	ret

0000000000014334 <_ZSt12__niter_baseIPPKcET_S3_>:
    __niter_base(_Iterator __it)
   14334:	55                   	push   %rbp
   14335:	48 89 e5             	mov    %rsp,%rbp
   14338:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   1433c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14340:	5d                   	pop    %rbp
   14341:	c3                   	ret

0000000000014342 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   14342:	55                   	push   %rbp
   14343:	48 89 e5             	mov    %rsp,%rbp
   14346:	48 83 ec 30          	sub    $0x30,%rsp
   1434a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1434e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14352:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   14356:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   1435a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1435e:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   14362:	48 c1 f8 03          	sar    $0x3,%rax
   14366:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   1436a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1436f:	7e 1f                	jle    14390 <_ZSt14__relocate_a_1IPKcS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   14371:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14375:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1437c:	00 
   1437d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   14381:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14385:	48 89 ce             	mov    %rcx,%rsi
   14388:	48 89 c7             	mov    %rax,%rdi
   1438b:	e8 c0 02 ff ff       	call   4650 <memmove@plt>
      return __result + __count;
   14390:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14394:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   1439b:	00 
   1439c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   143a0:	48 01 d0             	add    %rdx,%rax
    }
   143a3:	c9                   	leave
   143a4:	c3                   	ret
   143a5:	90                   	nop

00000000000143a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>:
      _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
   143a6:	55                   	push   %rbp
   143a7:	48 89 e5             	mov    %rsp,%rbp
   143aa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return this->_M_impl; }
   143ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143b2:	5d                   	pop    %rbp
   143b3:	c3                   	ret

00000000000143b4 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE7destroyIS9_EEvRSB_PT_>:
	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
   143b4:	55                   	push   %rbp
   143b5:	48 89 e5             	mov    %rsp,%rbp
   143b8:	48 83 ec 10          	sub    $0x10,%rsp
   143bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	  __a.destroy(__p);
   143c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   143c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143cc:	48 89 d6             	mov    %rdx,%rsi
   143cf:	48 89 c7             	mov    %rax,%rdi
   143d2:	e8 8d 05 00 00       	call   14964 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>
	}
   143d7:	90                   	nop
   143d8:	c9                   	leave
   143d9:	c3                   	ret

00000000000143da <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE10deallocateERSB_PSA_m>:
      deallocate(allocator_type& __a, pointer __p, size_type __n)
   143da:	55                   	push   %rbp
   143db:	48 89 e5             	mov    %rsp,%rbp
   143de:	48 83 ec 20          	sub    $0x20,%rsp
   143e2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   143e6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   143ea:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      { __a.deallocate(__p, __n); }
   143ee:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   143f2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   143f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   143fa:	48 89 ce             	mov    %rcx,%rsi
   143fd:	48 89 c7             	mov    %rax,%rdi
   14400:	e8 7f 05 00 00       	call   14984 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>
   14405:	90                   	nop
   14406:	c9                   	leave
   14407:	c3                   	ret

0000000000014408 <_ZN9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() noexcept
   14408:	55                   	push   %rbp
   14409:	48 89 e5             	mov    %rsp,%rbp
   1440c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<void*>(&_M_storage); }
   14410:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14414:	5d                   	pop    %rbp
   14415:	c3                   	ret

0000000000014416 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EEC1IS5_EEOT_>:
        constexpr _Head_base(_UHead&& __h)
   14416:	55                   	push   %rbp
   14417:	48 89 e5             	mov    %rsp,%rbp
   1441a:	48 83 ec 10          	sub    $0x10,%rsp
   1441e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14422:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	: _M_head_impl(std::forward<_UHead>(__h)) { }
   14426:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   1442a:	48 89 c7             	mov    %rax,%rdi
   1442d:	e8 fe e6 ff ff       	call   12b30 <_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE>
   14432:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14436:	48 89 02             	mov    %rax,(%rdx)
   14439:	90                   	nop
   1443a:	c9                   	leave
   1443b:	c3                   	ret

000000000001443c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_get_nodeEv>:
      _M_get_node()
   1443c:	55                   	push   %rbp
   1443d:	48 89 e5             	mov    %rsp,%rbp
   14440:	48 83 ec 10          	sub    $0x10,%rsp
   14444:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
   14448:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1444c:	48 89 c7             	mov    %rax,%rdi
   1444f:	e8 52 ff ff ff       	call   143a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   14454:	be 01 00 00 00       	mov    $0x1,%esi
   14459:	48 89 c7             	mov    %rax,%rdi
   1445c:	e8 5d 05 00 00       	call   149be <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>
   14461:	c9                   	leave
   14462:	c3                   	ret
   14463:	90                   	nop

0000000000014464 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_>:
	_M_construct_node(_Link_type __node, _Args&&... __args)
   14464:	55                   	push   %rbp
   14465:	48 89 e5             	mov    %rsp,%rbp
   14468:	41 56                	push   %r14
   1446a:	41 55                	push   %r13
   1446c:	41 54                	push   %r12
   1446e:	53                   	push   %rbx
   1446f:	48 83 ec 30          	sub    $0x30,%rsp
   14473:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
   14477:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
   1447b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
   1447f:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
   14483:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)
	      ::new(__node) _Rb_tree_node<_Val>;
   14487:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   1448b:	48 89 c6             	mov    %rax,%rsi
   1448e:	bf 48 00 00 00       	mov    $0x48,%edi
   14493:	e8 a8 09 ff ff       	call   4e40 <_ZnwmPv>
	      _Alloc_traits::construct(_M_get_Node_allocator(),
   14498:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   1449c:	48 89 c7             	mov    %rax,%rdi
   1449f:	e8 e9 e6 ff ff       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   144a4:	49 89 c6             	mov    %rax,%r14
   144a7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
   144ab:	48 89 c7             	mov    %rax,%rdi
   144ae:	e8 cc e6 ff ff       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   144b3:	49 89 c5             	mov    %rax,%r13
   144b6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   144ba:	48 89 c7             	mov    %rax,%rdi
   144bd:	e8 af e6 ff ff       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   144c2:	49 89 c4             	mov    %rax,%r12
   144c5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   144c9:	48 89 c7             	mov    %rax,%rdi
   144cc:	e8 19 e6 ff ff       	call   12aea <_ZNSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>
   144d1:	48 89 c3             	mov    %rax,%rbx
   144d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   144d8:	48 89 c7             	mov    %rax,%rdi
   144db:	e8 c6 fe ff ff       	call   143a6 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE21_M_get_Node_allocatorEv>
   144e0:	4d 89 f0             	mov    %r14,%r8
   144e3:	4c 89 e9             	mov    %r13,%rcx
   144e6:	4c 89 e2             	mov    %r12,%rdx
   144e9:	48 89 de             	mov    %rbx,%rsi
   144ec:	48 89 c7             	mov    %rax,%rdi
   144ef:	e8 f4 04 00 00       	call   149e8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>
	}
   144f4:	eb 33                	jmp    14529 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_+0xc5>
	  __catch(...)
   144f6:	48 89 c7             	mov    %rax,%rdi
   144f9:	e8 22 fc fe ff       	call   4120 <__cxa_begin_catch@plt>
	      _M_put_node(__node);
   144fe:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
   14502:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14506:	48 89 d6             	mov    %rdx,%rsi
   14509:	48 89 c7             	mov    %rax,%rdi
   1450c:	e8 65 f4 ff ff       	call   13976 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E>
	      __throw_exception_again;
   14511:	e8 aa 00 ff ff       	call   45c0 <__cxa_rethrow@plt>
	  __catch(...)
   14516:	48 89 c3             	mov    %rax,%rbx
   14519:	e8 42 01 ff ff       	call   4660 <__cxa_end_catch@plt>
   1451e:	48 89 d8             	mov    %rbx,%rax
   14521:	48 89 c7             	mov    %rax,%rdi
   14524:	e8 a7 01 ff ff       	call   46d0 <_Unwind_Resume@plt>
	}
   14529:	48 83 c4 30          	add    $0x30,%rsp
   1452d:	5b                   	pop    %rbx
   1452e:	41 5c                	pop    %r12
   14530:	41 5d                	pop    %r13
   14532:	41 5e                	pop    %r14
   14534:	5d                   	pop    %rbp
   14535:	c3                   	ret

0000000000014536 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE5beginEv>:
      begin() _GLIBCXX_NOEXCEPT
   14536:	55                   	push   %rbp
   14537:	48 89 e5             	mov    %rsp,%rbp
   1453a:	48 83 ec 20          	sub    $0x20,%rsp
   1453e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
      { return iterator(this->_M_impl._M_header._M_left); }
   14542:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14546:	48 8b 50 18          	mov    0x18(%rax),%rdx
   1454a:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   1454e:	48 89 d6             	mov    %rdx,%rsi
   14551:	48 89 c7             	mov    %rax,%rdi
   14554:	e8 b7 eb ff ff       	call   13110 <_ZNSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEC1EPSt18_Rb_tree_node_base>
   14559:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1455d:	c9                   	leave
   1455e:	c3                   	ret
   1455f:	90                   	nop

0000000000014560 <_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC1IRPSt13_Rb_tree_nodeIS_IKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEERS1_Lb1EEEOT_OT0_>:
	constexpr pair(_U1&& __x, _U2&& __y)
   14560:	55                   	push   %rbp
   14561:	48 89 e5             	mov    %rsp,%rbp
   14564:	48 83 ec 20          	sub    $0x20,%rsp
   14568:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1456c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14570:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
   14574:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14578:	48 89 c7             	mov    %rax,%rdi
   1457b:	e8 d4 04 00 00       	call   14a54 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>
   14580:	48 8b 10             	mov    (%rax),%rdx
   14583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14587:	48 89 10             	mov    %rdx,(%rax)
   1458a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   1458e:	48 89 c7             	mov    %rax,%rdi
   14591:	e8 0e 00 00 00       	call   145a4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>
   14596:	48 8b 10             	mov    (%rax),%rdx
   14599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1459d:	48 89 50 08          	mov    %rdx,0x8(%rax)
   145a1:	90                   	nop
   145a2:	c9                   	leave
   145a3:	c3                   	ret

00000000000145a4 <_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   145a4:	55                   	push   %rbp
   145a5:	48 89 e5             	mov    %rsp,%rbp
   145a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   145ac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145b0:	5d                   	pop    %rbp
   145b1:	c3                   	ret

00000000000145b2 <_ZNKSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE9_M_valptrEv>:
      _M_valptr() const
   145b2:	55                   	push   %rbp
   145b3:	48 89 e5             	mov    %rsp,%rbp
   145b6:	48 83 ec 10          	sub    $0x10,%rsp
   145ba:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_storage._M_ptr(); }
   145be:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145c2:	48 83 c0 20          	add    $0x20,%rax
   145c6:	48 89 c7             	mov    %rax,%rdi
   145c9:	e8 94 04 00 00       	call   14a62 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>
   145ce:	c9                   	leave
   145cf:	c3                   	ret

00000000000145d0 <_ZNKSt10_Select1stISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEclERKS8_>:
      typename _Pair::first_type&
      operator()(_Pair& __x) const
      { return __x.first; }

      const typename _Pair::first_type&
      operator()(const _Pair& __x) const
   145d0:	55                   	push   %rbp
   145d1:	48 89 e5             	mov    %rsp,%rbp
   145d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   145d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __x.first; }
   145dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   145e0:	5d                   	pop    %rbp
   145e1:	c3                   	ret

00000000000145e2 <_ZNSt16allocator_traitsISaIP13VkImageView_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   145e2:	55                   	push   %rbp
   145e3:	48 89 e5             	mov    %rsp,%rbp
   145e6:	48 83 ec 10          	sub    $0x10,%rsp
   145ea:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   145ee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   145f2:	48 89 c7             	mov    %rax,%rdi
   145f5:	e8 82 04 00 00       	call   14a7c <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>
      }
   145fa:	c9                   	leave
   145fb:	c3                   	ret

00000000000145fc <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   145fc:	55                   	push   %rbp
   145fd:	48 89 e5             	mov    %rsp,%rbp
   14600:	48 83 ec 20          	sub    $0x20,%rsp
   14604:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14608:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   1460c:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14611:	74 40                	je     14653 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP13VkImageView_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   14613:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14617:	48 89 c7             	mov    %rax,%rdi
   1461a:	e8 77 04 00 00       	call   14a96 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>
   1461f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14623:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14627:	48 89 c7             	mov    %rax,%rdi
   1462a:	e8 75 04 00 00       	call   14aa4 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>
	      ++__first;
   1462f:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14634:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14638:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   1463c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14640:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14644:	48 89 ce             	mov    %rcx,%rsi
   14647:	48 89 c7             	mov    %rax,%rdi
   1464a:	e8 7c 04 00 00       	call   14acb <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>
   1464f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14653:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14657:	c9                   	leave
   14658:	c3                   	ret
   14659:	90                   	nop

000000000001465a <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   1465a:	55                   	push   %rbp
   1465b:	48 89 e5             	mov    %rsp,%rbp
   1465e:	48 83 ec 20          	sub    $0x20,%rsp
   14662:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14666:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1466a:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   1466e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14672:	48 89 c7             	mov    %rax,%rdi
   14675:	e8 96 04 00 00       	call   14b10 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   1467a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1467e:	0f 92 c0             	setb   %al
   14681:	0f b6 c0             	movzbl %al,%eax
   14684:	48 85 c0             	test   %rax,%rax
   14687:	0f 95 c0             	setne  %al
   1468a:	84 c0                	test   %al,%al
   1468c:	74 1a                	je     146a8 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   1468e:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14695:	ff ff 1f 
   14698:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   1469c:	73 05                	jae    146a3 <_ZNSt15__new_allocatorIP13VkImageView_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   1469e:	e8 cd fb fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   146a3:	e8 38 fa fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   146a8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   146ac:	48 c1 e0 03          	shl    $0x3,%rax
   146b0:	48 89 c7             	mov    %rax,%rdi
   146b3:	e8 c8 fc fe ff       	call   4380 <_Znwm@plt>
   146b8:	90                   	nop
      }
   146b9:	c9                   	leave
   146ba:	c3                   	ret

00000000000146bb <_ZSt12__niter_baseIPP13VkImageView_TET_S3_>:
    __niter_base(_Iterator __it)
   146bb:	55                   	push   %rbp
   146bc:	48 89 e5             	mov    %rsp,%rbp
   146bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   146c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146c7:	5d                   	pop    %rbp
   146c8:	c3                   	ret

00000000000146c9 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E>:
    __relocate_a_1(_Tp* __first, _Tp* __last,
   146c9:	55                   	push   %rbp
   146ca:	48 89 e5             	mov    %rsp,%rbp
   146cd:	48 83 ec 30          	sub    $0x30,%rsp
   146d1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   146d5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   146d9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   146dd:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
      ptrdiff_t __count = __last - __first;
   146e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   146e5:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   146e9:	48 c1 f8 03          	sar    $0x3,%rax
   146ed:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      if (__count > 0)
   146f1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   146f6:	7e 1f                	jle    14717 <_ZSt14__relocate_a_1IP13VkImageView_TS1_ENSt9enable_ifIXsrSt24__is_bitwise_relocatableIT_vE5valueEPS4_E4typeES6_S6_S6_RSaIT0_E+0x4e>
	  __builtin_memmove(__result, __first, __count * sizeof(_Tp));
   146f8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   146fc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14703:	00 
   14704:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   14708:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1470c:	48 89 ce             	mov    %rcx,%rsi
   1470f:	48 89 c7             	mov    %rax,%rdi
   14712:	e8 39 ff fe ff       	call   4650 <memmove@plt>
      return __result + __count;
   14717:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1471b:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14722:	00 
   14723:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14727:	48 01 d0             	add    %rdx,%rax
    }
   1472a:	c9                   	leave
   1472b:	c3                   	ret

000000000001472c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoEC1ERKS1_>:
      __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
   1472c:	55                   	push   %rbp
   1472d:	48 89 e5             	mov    %rsp,%rbp
   14730:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14734:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14738:	90                   	nop
   14739:	5d                   	pop    %rbp
   1473a:	c3                   	ret
   1473b:	90                   	nop

000000000001473c <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE10deallocateEPS0_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   1473c:	55                   	push   %rbp
   1473d:	48 89 e5             	mov    %rsp,%rbp
   14740:	48 83 ec 20          	sub    $0x20,%rsp
   14744:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14748:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1474c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14750:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14754:	48 89 d0             	mov    %rdx,%rax
   14757:	48 c1 e0 03          	shl    $0x3,%rax
   1475b:	48 01 d0             	add    %rdx,%rax
   1475e:	48 c1 e0 04          	shl    $0x4,%rax
   14762:	48 89 c2             	mov    %rax,%rdx
   14765:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14769:	48 89 d6             	mov    %rdx,%rsi
   1476c:	48 89 c7             	mov    %rax,%rdi
   1476f:	e8 1c fc fe ff       	call   4390 <_ZdlPvm@plt>
      }
   14774:	c9                   	leave
   14775:	c3                   	ret

0000000000014776 <_ZNSt16allocator_traitsISaI28VkGraphicsPipelineCreateInfoEE8max_sizeERKS1_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14776:	55                   	push   %rbp
   14777:	48 89 e5             	mov    %rsp,%rbp
   1477a:	48 83 ec 10          	sub    $0x10,%rsp
   1477e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14782:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14786:	48 89 c7             	mov    %rax,%rdi
   14789:	e8 96 03 00 00       	call   14b24 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>
      }
   1478e:	c9                   	leave
   1478f:	c3                   	ret

0000000000014790 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14790:	55                   	push   %rbp
   14791:	48 89 e5             	mov    %rsp,%rbp
   14794:	48 83 ec 20          	sub    $0x20,%rsp
   14798:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1479c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   147a0:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   147a4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   147a8:	48 89 c7             	mov    %rax,%rdi
   147ab:	e8 8e 03 00 00       	call   14b3e <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   147b0:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   147b4:	0f 92 c0             	setb   %al
   147b7:	0f b6 c0             	movzbl %al,%eax
   147ba:	48 85 c0             	test   %rax,%rax
   147bd:	0f 95 c0             	setne  %al
   147c0:	84 c0                	test   %al,%al
   147c2:	74 1a                	je     147de <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   147c4:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   147cb:	1c c7 01 
   147ce:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   147d2:	73 05                	jae    147d9 <_ZNSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   147d4:	e8 97 fa fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   147d9:	e8 02 f9 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   147de:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   147e2:	48 89 d0             	mov    %rdx,%rax
   147e5:	48 c1 e0 03          	shl    $0x3,%rax
   147e9:	48 01 d0             	add    %rdx,%rax
   147ec:	48 c1 e0 04          	shl    $0x4,%rax
   147f0:	48 89 c7             	mov    %rax,%rdi
   147f3:	e8 88 fb fe ff       	call   4380 <_Znwm@plt>
   147f8:	90                   	nop
      }
   147f9:	c9                   	leave
   147fa:	c3                   	ret

00000000000147fb <_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPK28VkGraphicsPipelineCreateInfoPS2_EET0_T_S7_S6_>:
        __uninit_copy(_InputIterator __first, _InputIterator __last,
   147fb:	55                   	push   %rbp
   147fc:	48 89 e5             	mov    %rsp,%rbp
   147ff:	48 83 ec 20          	sub    $0x20,%rsp
   14803:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14807:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   1480b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
        { return std::copy(__first, __last, __result); }
   1480f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14813:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14817:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1481b:	48 89 ce             	mov    %rcx,%rsi
   1481e:	48 89 c7             	mov    %rax,%rdi
   14821:	e8 2c 03 00 00       	call   14b52 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>
   14826:	c9                   	leave
   14827:	c3                   	ret

0000000000014828 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8max_sizeERKS2_>:
      max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
   14828:	55                   	push   %rbp
   14829:	48 89 e5             	mov    %rsp,%rbp
   1482c:	48 83 ec 10          	sub    $0x10,%rsp
   14830:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return __a.max_size();
   14834:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14838:	48 89 c7             	mov    %rax,%rdi
   1483b:	e8 5e 03 00 00       	call   14b9e <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>
      }
   14840:	c9                   	leave
   14841:	c3                   	ret

0000000000014842 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE17_Vector_impl_dataC1Ev>:
	_Vector_impl_data() _GLIBCXX_NOEXCEPT
   14842:	55                   	push   %rbp
   14843:	48 89 e5             	mov    %rsp,%rbp
   14846:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	: _M_start(), _M_finish(), _M_end_of_storage()
   1484a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1484e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
   14855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14859:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
   14860:	00 
   14861:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14865:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
   1486c:	00 
	{ }
   1486d:	90                   	nop
   1486e:	5d                   	pop    %rbp
   1486f:	c3                   	ret

0000000000014870 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm>:
      _M_allocate(size_t __n)
   14870:	55                   	push   %rbp
   14871:	48 89 e5             	mov    %rsp,%rbp
   14874:	48 83 ec 10          	sub    $0x10,%rsp
   14878:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1487c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   14880:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14885:	74 15                	je     1489c <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x2c>
   14887:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1488b:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1488f:	48 89 d6             	mov    %rdx,%rsi
   14892:	48 89 c7             	mov    %rax,%rdi
   14895:	e8 1e 03 00 00       	call   14bb8 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>
   1489a:	eb 05                	jmp    148a1 <_ZNSt12_Vector_baseIP12VkPipeline_TSaIS1_EE11_M_allocateEm+0x31>
   1489c:	b8 00 00 00 00       	mov    $0x0,%eax
      }
   148a1:	c9                   	leave
   148a2:	c3                   	ret

00000000000148a3 <_ZSt25__uninitialized_default_nIPP12VkPipeline_TmET_S3_T0_>:
    __uninitialized_default_n(_ForwardIterator __first, _Size __n)
   148a3:	55                   	push   %rbp
   148a4:	48 89 e5             	mov    %rsp,%rbp
   148a7:	48 83 ec 20          	sub    $0x20,%rsp
   148ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   148af:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
      constexpr bool __can_fill
   148b3:	c6 45 ff 01          	movb   $0x1,-0x1(%rbp)
	__uninit_default_n(__first, __n);
   148b7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
   148bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148bf:	48 89 d6             	mov    %rdx,%rsi
   148c2:	48 89 c7             	mov    %rax,%rdi
   148c5:	e8 18 03 00 00       	call   14be2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>
    }
   148ca:	c9                   	leave
   148cb:	c3                   	ret

00000000000148cc <_ZNSt15__new_allocatorIP12VkPipeline_TE10deallocateEPS1_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   148cc:	55                   	push   %rbp
   148cd:	48 89 e5             	mov    %rsp,%rbp
   148d0:	48 83 ec 20          	sub    $0x20,%rsp
   148d4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   148d8:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   148dc:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   148e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   148e4:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   148eb:	00 
   148ec:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   148f0:	48 89 d6             	mov    %rdx,%rsi
   148f3:	48 89 c7             	mov    %rax,%rdi
   148f6:	e8 95 fa fe ff       	call   4390 <_ZdlPvm@plt>
      }
   148fb:	c9                   	leave
   148fc:	c3                   	ret

00000000000148fd <_ZSt4copyIPKPKcPS1_ET0_T_S6_S5_>:
    copy(_II __first, _II __last, _OI __result)
   148fd:	55                   	push   %rbp
   148fe:	48 89 e5             	mov    %rsp,%rbp
   14901:	53                   	push   %rbx
   14902:	48 83 ec 28          	sub    $0x28,%rsp
   14906:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1490a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1490e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   14912:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14916:	48 89 c7             	mov    %rax,%rdi
   14919:	e8 21 03 00 00       	call   14c3f <_ZSt12__miter_baseIPKPKcET_S4_>
   1491e:	48 89 c3             	mov    %rax,%rbx
   14921:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14925:	48 89 c7             	mov    %rax,%rdi
   14928:	e8 12 03 00 00       	call   14c3f <_ZSt12__miter_baseIPKPKcET_S4_>
   1492d:	48 89 c1             	mov    %rax,%rcx
   14930:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14934:	48 89 c2             	mov    %rax,%rdx
   14937:	48 89 de             	mov    %rbx,%rsi
   1493a:	48 89 cf             	mov    %rcx,%rdi
   1493d:	e8 0b 03 00 00       	call   14c4d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>
    }
   14942:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14946:	c9                   	leave
   14947:	c3                   	ret

0000000000014948 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>:
    struct pair
   14948:	55                   	push   %rbp
   14949:	48 89 e5             	mov    %rsp,%rbp
   1494c:	48 83 ec 10          	sub    $0x10,%rsp
   14950:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14954:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14958:	48 89 c7             	mov    %rax,%rdi
   1495b:	e8 80 f8 fe ff       	call   41e0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt>
   14960:	90                   	nop
   14961:	c9                   	leave
   14962:	c3                   	ret
   14963:	90                   	nop

0000000000014964 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE7destroyIS9_EEvPT_>:
	destroy(_Up* __p)
   14964:	55                   	push   %rbp
   14965:	48 89 e5             	mov    %rsp,%rbp
   14968:	48 83 ec 10          	sub    $0x10,%rsp
   1496c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14970:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
	{ __p->~_Up(); }
   14974:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14978:	48 89 c7             	mov    %rax,%rdi
   1497b:	e8 c8 ff ff ff       	call   14948 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjED1Ev>
   14980:	90                   	nop
   14981:	c9                   	leave
   14982:	c3                   	ret
   14983:	90                   	nop

0000000000014984 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE10deallocateEPSA_m>:
      deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   14984:	55                   	push   %rbp
   14985:	48 89 e5             	mov    %rsp,%rbp
   14988:	48 83 ec 20          	sub    $0x20,%rsp
   1498c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14990:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14994:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
   14998:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1499c:	48 89 d0             	mov    %rdx,%rax
   1499f:	48 c1 e0 03          	shl    $0x3,%rax
   149a3:	48 01 d0             	add    %rdx,%rax
   149a6:	48 c1 e0 03          	shl    $0x3,%rax
   149aa:	48 89 c2             	mov    %rax,%rdx
   149ad:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   149b1:	48 89 d6             	mov    %rdx,%rsi
   149b4:	48 89 c7             	mov    %rax,%rdi
   149b7:	e8 d4 f9 fe ff       	call   4390 <_ZdlPvm@plt>
      }
   149bc:	c9                   	leave
   149bd:	c3                   	ret

00000000000149be <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE8allocateERSB_m>:
      allocate(allocator_type& __a, size_type __n)
   149be:	55                   	push   %rbp
   149bf:	48 89 e5             	mov    %rsp,%rbp
   149c2:	48 83 ec 10          	sub    $0x10,%rsp
   149c6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   149ca:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   149ce:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   149d2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   149d6:	ba 00 00 00 00       	mov    $0x0,%edx
   149db:	48 89 ce             	mov    %rcx,%rsi
   149de:	48 89 c7             	mov    %rax,%rdi
   149e1:	e8 d2 02 00 00       	call   14cb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>
   149e6:	c9                   	leave
   149e7:	c3                   	ret

00000000000149e8 <_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESH_IJEEEEEvRSB_PT_DpOT0_>:
	construct(allocator_type& __a __attribute__((__unused__)), _Up* __p,
   149e8:	55                   	push   %rbp
   149e9:	48 89 e5             	mov    %rsp,%rbp
   149ec:	41 54                	push   %r12
   149ee:	53                   	push   %rbx
   149ef:	48 83 ec 30          	sub    $0x30,%rsp
   149f3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   149f7:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   149fb:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
   149ff:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
   14a03:	4c 89 45 c8          	mov    %r8,-0x38(%rbp)
	  __a.construct(__p, std::forward<_Args>(__args)...);
   14a07:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
   14a0b:	48 89 c7             	mov    %rax,%rdi
   14a0e:	e8 7a e1 ff ff       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14a13:	49 89 c4             	mov    %rax,%r12
   14a16:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
   14a1a:	48 89 c7             	mov    %rax,%rdi
   14a1d:	e8 5d e1 ff ff       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14a22:	48 89 c3             	mov    %rax,%rbx
   14a25:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14a29:	48 89 c7             	mov    %rax,%rdi
   14a2c:	e8 40 e1 ff ff       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14a31:	48 89 c2             	mov    %rax,%rdx
   14a34:	48 8b 75 e0          	mov    -0x20(%rbp),%rsi
   14a38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14a3c:	4d 89 e0             	mov    %r12,%r8
   14a3f:	48 89 d9             	mov    %rbx,%rcx
   14a42:	48 89 c7             	mov    %rax,%rdi
   14a45:	e8 00 03 00 00       	call   14d4a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>
	}
   14a4a:	90                   	nop
   14a4b:	48 83 c4 30          	add    $0x30,%rsp
   14a4f:	5b                   	pop    %rbx
   14a50:	41 5c                	pop    %r12
   14a52:	5d                   	pop    %rbp
   14a53:	c3                   	ret

0000000000014a54 <_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEEOT_RNSt16remove_referenceISD_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   14a54:	55                   	push   %rbp
   14a55:	48 89 e5             	mov    %rsp,%rbp
   14a58:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   14a5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a60:	5d                   	pop    %rbp
   14a61:	c3                   	ret

0000000000014a62 <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE6_M_ptrEv>:

      const _Tp*
      _M_ptr() const noexcept
   14a62:	55                   	push   %rbp
   14a63:	48 89 e5             	mov    %rsp,%rbp
   14a66:	48 83 ec 10          	sub    $0x10,%rsp
   14a6a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const _Tp*>(_M_addr()); }
   14a6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a72:	48 89 c7             	mov    %rax,%rdi
   14a75:	e8 80 03 00 00       	call   14dfa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>
   14a7a:	c9                   	leave
   14a7b:	c3                   	ret

0000000000014a7c <_ZNKSt15__new_allocatorIP13VkImageView_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14a7c:	55                   	push   %rbp
   14a7d:	48 89 e5             	mov    %rsp,%rbp
   14a80:	48 83 ec 10          	sub    $0x10,%rsp
   14a84:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14a88:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14a8c:	48 89 c7             	mov    %rax,%rdi
   14a8f:	e8 7c 00 00 00       	call   14b10 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>
   14a94:	c9                   	leave
   14a95:	c3                   	ret

0000000000014a96 <_ZSt11__addressofIP13VkImageView_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14a96:	55                   	push   %rbp
   14a97:	48 89 e5             	mov    %rsp,%rbp
   14a9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   14a9e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14aa2:	5d                   	pop    %rbp
   14aa3:	c3                   	ret

0000000000014aa4 <_ZSt10_ConstructIP13VkImageView_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   14aa4:	55                   	push   %rbp
   14aa5:	48 89 e5             	mov    %rsp,%rbp
   14aa8:	48 83 ec 10          	sub    $0x10,%rsp
   14aac:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   14ab0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14ab4:	48 89 c6             	mov    %rax,%rsi
   14ab7:	bf 08 00 00 00       	mov    $0x8,%edi
   14abc:	e8 7f 03 ff ff       	call   4e40 <_ZnwmPv>
   14ac1:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   14ac8:	90                   	nop
   14ac9:	c9                   	leave
   14aca:	c3                   	ret

0000000000014acb <_ZSt6fill_nIPP13VkImageView_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   14acb:	55                   	push   %rbp
   14acc:	48 89 e5             	mov    %rsp,%rbp
   14acf:	48 83 ec 20          	sub    $0x20,%rsp
   14ad3:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ad7:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14adb:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   14adf:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14ae3:	48 89 c7             	mov    %rax,%rdi
   14ae6:	e8 1d 03 00 00       	call   14e08 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   14aeb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14aef:	48 89 c7             	mov    %rax,%rdi
   14af2:	e8 5b 03 ff ff       	call   4e52 <_ZSt17__size_to_integerm>
   14af7:	48 89 c1             	mov    %rax,%rcx
   14afa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14afe:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14b02:	48 89 ce             	mov    %rcx,%rsi
   14b05:	48 89 c7             	mov    %rax,%rdi
   14b08:	e8 06 03 00 00       	call   14e13 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   14b0d:	c9                   	leave
   14b0e:	c3                   	ret
   14b0f:	90                   	nop

0000000000014b10 <_ZNKSt15__new_allocatorIP13VkImageView_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14b10:	55                   	push   %rbp
   14b11:	48 89 e5             	mov    %rsp,%rbp
   14b14:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14b18:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14b1f:	ff ff 0f 
      }
   14b22:	5d                   	pop    %rbp
   14b23:	c3                   	ret

0000000000014b24 <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14b24:	55                   	push   %rbp
   14b25:	48 89 e5             	mov    %rsp,%rbp
   14b28:	48 83 ec 10          	sub    $0x10,%rsp
   14b2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14b30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14b34:	48 89 c7             	mov    %rax,%rdi
   14b37:	e8 02 00 00 00       	call   14b3e <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>
   14b3c:	c9                   	leave
   14b3d:	c3                   	ret

0000000000014b3e <_ZNKSt15__new_allocatorI28VkGraphicsPipelineCreateInfoE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14b3e:	55                   	push   %rbp
   14b3f:	48 89 e5             	mov    %rsp,%rbp
   14b42:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14b46:	48 b8 e3 38 8e e3 38 	movabs $0xe38e38e38e38e3,%rax
   14b4d:	8e e3 00 
      }
   14b50:	5d                   	pop    %rbp
   14b51:	c3                   	ret

0000000000014b52 <_ZSt4copyIPK28VkGraphicsPipelineCreateInfoPS0_ET0_T_S5_S4_>:
    copy(_II __first, _II __last, _OI __result)
   14b52:	55                   	push   %rbp
   14b53:	48 89 e5             	mov    %rsp,%rbp
   14b56:	53                   	push   %rbx
   14b57:	48 83 ec 28          	sub    $0x28,%rsp
   14b5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14b5f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14b63:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	     (std::__miter_base(__first), std::__miter_base(__last), __result);
   14b67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14b6b:	48 89 c7             	mov    %rax,%rdi
   14b6e:	e8 fd 02 00 00       	call   14e70 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14b73:	48 89 c3             	mov    %rax,%rbx
   14b76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14b7a:	48 89 c7             	mov    %rax,%rdi
   14b7d:	e8 ee 02 00 00       	call   14e70 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14b82:	48 89 c1             	mov    %rax,%rcx
   14b85:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14b89:	48 89 c2             	mov    %rax,%rdx
   14b8c:	48 89 de             	mov    %rbx,%rsi
   14b8f:	48 89 cf             	mov    %rcx,%rdi
   14b92:	e8 e7 02 00 00       	call   14e7e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
    }
   14b97:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   14b9b:	c9                   	leave
   14b9c:	c3                   	ret
   14b9d:	90                   	nop

0000000000014b9e <_ZNKSt15__new_allocatorIP12VkPipeline_TE8max_sizeEv>:
      max_size() const _GLIBCXX_USE_NOEXCEPT
   14b9e:	55                   	push   %rbp
   14b9f:	48 89 e5             	mov    %rsp,%rbp
   14ba2:	48 83 ec 10          	sub    $0x10,%rsp
   14ba6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return _M_max_size(); }
   14baa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bae:	48 89 c7             	mov    %rax,%rdi
   14bb1:	e8 32 03 00 00       	call   14ee8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   14bb6:	c9                   	leave
   14bb7:	c3                   	ret

0000000000014bb8 <_ZNSt16allocator_traitsISaIP12VkPipeline_TEE8allocateERS2_m>:
      allocate(allocator_type& __a, size_type __n)
   14bb8:	55                   	push   %rbp
   14bb9:	48 89 e5             	mov    %rsp,%rbp
   14bbc:	48 83 ec 10          	sub    $0x10,%rsp
   14bc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14bc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      { return __a.allocate(__n); }
   14bc8:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   14bcc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14bd0:	ba 00 00 00 00       	mov    $0x0,%edx
   14bd5:	48 89 ce             	mov    %rcx,%rsi
   14bd8:	48 89 c7             	mov    %rax,%rdi
   14bdb:	e8 1c 03 00 00       	call   14efc <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>
   14be0:	c9                   	leave
   14be1:	c3                   	ret

0000000000014be2 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_>:
        __uninit_default_n(_ForwardIterator __first, _Size __n)
   14be2:	55                   	push   %rbp
   14be3:	48 89 e5             	mov    %rsp,%rbp
   14be6:	48 83 ec 20          	sub    $0x20,%rsp
   14bea:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14bee:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
	  if (__n > 0)
   14bf2:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
   14bf7:	74 40                	je     14c39 <_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPP12VkPipeline_TmEET_S5_T0_+0x57>
		= std::__addressof(*__first);
   14bf9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14bfd:	48 89 c7             	mov    %rax,%rdi
   14c00:	e8 58 03 00 00       	call   14f5d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>
   14c05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	      std::_Construct(__val);
   14c09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c0d:	48 89 c7             	mov    %rax,%rdi
   14c10:	e8 56 03 00 00       	call   14f6b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>
	      ++__first;
   14c15:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
	      __first = std::fill_n(__first, __n - 1, *__val);
   14c1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c1e:	48 8d 48 ff          	lea    -0x1(%rax),%rcx
   14c22:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   14c26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c2a:	48 89 ce             	mov    %rcx,%rsi
   14c2d:	48 89 c7             	mov    %rax,%rdi
   14c30:	e8 5d 03 00 00       	call   14f92 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>
   14c35:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
	  return __first;
   14c39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
	}
   14c3d:	c9                   	leave
   14c3e:	c3                   	ret

0000000000014c3f <_ZSt12__miter_baseIPKPKcET_S4_>:
  // Fallback implementation of the function in bits/stl_iterator.h used to
  // remove the move_iterator wrapper.
  template<typename _Iterator>
    _GLIBCXX20_CONSTEXPR
    inline _Iterator
    __miter_base(_Iterator __it)
   14c3f:	55                   	push   %rbp
   14c40:	48 89 e5             	mov    %rsp,%rbp
   14c43:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14c47:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14c4b:	5d                   	pop    %rbp
   14c4c:	c3                   	ret

0000000000014c4d <_ZSt13__copy_move_aILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   14c4d:	55                   	push   %rbp
   14c4e:	48 89 e5             	mov    %rsp,%rbp
   14c51:	41 54                	push   %r12
   14c53:	53                   	push   %rbx
   14c54:	48 83 ec 20          	sub    $0x20,%rsp
   14c58:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14c5c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14c60:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   14c64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14c68:	48 89 c7             	mov    %rax,%rdi
   14c6b:	e8 c4 f6 ff ff       	call   14334 <_ZSt12__niter_baseIPPKcET_S3_>
   14c70:	49 89 c4             	mov    %rax,%r12
   14c73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14c77:	48 89 c7             	mov    %rax,%rdi
   14c7a:	e8 57 03 00 00       	call   14fd6 <_ZSt12__niter_baseIPKPKcET_S4_>
   14c7f:	48 89 c3             	mov    %rax,%rbx
   14c82:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14c86:	48 89 c7             	mov    %rax,%rdi
   14c89:	e8 48 03 00 00       	call   14fd6 <_ZSt12__niter_baseIPKPKcET_S4_>
   14c8e:	4c 89 e2             	mov    %r12,%rdx
   14c91:	48 89 de             	mov    %rbx,%rsi
   14c94:	48 89 c7             	mov    %rax,%rdi
   14c97:	e8 48 03 00 00       	call   14fe4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   14c9c:	48 89 c2             	mov    %rax,%rdx
   14c9f:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14ca3:	48 89 d6             	mov    %rdx,%rsi
   14ca6:	48 89 c7             	mov    %rax,%rdi
   14ca9:	e8 63 03 00 00       	call   15011 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>
    }
   14cae:	48 83 c4 20          	add    $0x20,%rsp
   14cb2:	5b                   	pop    %rbx
   14cb3:	41 5c                	pop    %r12
   14cb5:	5d                   	pop    %rbp
   14cb6:	c3                   	ret
   14cb7:	90                   	nop

0000000000014cb8 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14cb8:	55                   	push   %rbp
   14cb9:	48 89 e5             	mov    %rsp,%rbp
   14cbc:	48 83 ec 20          	sub    $0x20,%rsp
   14cc0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14cc4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14cc8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14ccc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14cd0:	48 89 c7             	mov    %rax,%rdi
   14cd3:	e8 4c 03 00 00       	call   15024 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>
   14cd8:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14cdc:	0f 92 c0             	setb   %al
   14cdf:	0f b6 c0             	movzbl %al,%eax
   14ce2:	48 85 c0             	test   %rax,%rax
   14ce5:	0f 95 c0             	setne  %al
   14ce8:	84 c0                	test   %al,%al
   14cea:	74 1a                	je     14d06 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14cec:	48 b8 8e e3 38 8e e3 	movabs $0x38e38e38e38e38e,%rax
   14cf3:	38 8e 03 
   14cf6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14cfa:	73 05                	jae    14d01 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14cfc:	e8 6f f5 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14d01:	e8 da f3 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14d06:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d0a:	48 89 d0             	mov    %rdx,%rax
   14d0d:	48 c1 e0 03          	shl    $0x3,%rax
   14d11:	48 01 d0             	add    %rdx,%rax
   14d14:	48 c1 e0 03          	shl    $0x3,%rax
   14d18:	48 89 c7             	mov    %rax,%rdi
   14d1b:	e8 60 f6 fe ff       	call   4380 <_Znwm@plt>
   14d20:	90                   	nop
      }
   14d21:	c9                   	leave
   14d22:	c3                   	ret
   14d23:	90                   	nop

0000000000014d24 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      constexpr tuple(tuple&&) = default;
   14d24:	55                   	push   %rbp
   14d25:	48 89 e5             	mov    %rsp,%rbp
   14d28:	48 83 ec 10          	sub    $0x10,%rsp
   14d2c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14d30:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14d34:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14d38:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   14d3c:	48 89 d6             	mov    %rdx,%rsi
   14d3f:	48 89 c7             	mov    %rax,%rdi
   14d42:	e8 f1 02 00 00       	call   15038 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   14d47:	90                   	nop
   14d48:	c9                   	leave
   14d49:	c3                   	ret

0000000000014d4a <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_>:
	construct(_Up* __p, _Args&&... __args)
   14d4a:	55                   	push   %rbp
   14d4b:	48 89 e5             	mov    %rsp,%rbp
   14d4e:	41 56                	push   %r14
   14d50:	41 55                	push   %r13
   14d52:	41 54                	push   %r12
   14d54:	53                   	push   %rbx
   14d55:	48 83 ec 40          	sub    $0x40,%rsp
   14d59:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
   14d5d:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
   14d61:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
   14d65:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
   14d69:	4c 89 45 a8          	mov    %r8,-0x58(%rbp)
	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
   14d6d:	48 8b 5d c0          	mov    -0x40(%rbp),%rbx
   14d71:	48 89 de             	mov    %rbx,%rsi
   14d74:	bf 28 00 00 00       	mov    $0x28,%edi
   14d79:	e8 c2 00 ff ff       	call   4e40 <_ZnwmPv>
   14d7e:	49 89 c4             	mov    %rax,%r12
   14d81:	41 be 01 00 00 00    	mov    $0x1,%r14d
   14d87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
   14d8b:	48 89 c7             	mov    %rax,%rdi
   14d8e:	e8 fa dd ff ff       	call   12b8d <_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE>
   14d93:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
   14d97:	48 89 c7             	mov    %rax,%rdi
   14d9a:	e8 e0 dd ff ff       	call   12b7f <_ZSt7forwardISt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceIS9_E4typeE>
   14d9f:	48 89 c2             	mov    %rax,%rdx
   14da2:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14da6:	48 89 d6             	mov    %rdx,%rsi
   14da9:	48 89 c7             	mov    %rax,%rdi
   14dac:	e8 73 ff ff ff       	call   14d24 <_ZNSt5tupleIJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>
   14db1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
   14db5:	48 89 c7             	mov    %rax,%rdi
   14db8:	e8 b4 dd ff ff       	call   12b71 <_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE>
   14dbd:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14dc1:	48 89 c6             	mov    %rax,%rsi
   14dc4:	4c 89 e7             	mov    %r12,%rdi
   14dc7:	e8 8a 02 00 00       	call   15056 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>
   14dcc:	eb 1e                	jmp    14dec <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0xa2>
   14dce:	49 89 c5             	mov    %rax,%r13
   14dd1:	45 84 f6             	test   %r14b,%r14b
   14dd4:	74 0b                	je     14de1 <_ZNSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJOS7_EESG_IJEEEEEvPT_DpOT0_+0x97>
   14dd6:	48 89 de             	mov    %rbx,%rsi
   14dd9:	4c 89 e7             	mov    %r12,%rdi
   14ddc:	e8 e0 b1 ff ff       	call   ffc1 <_ZdlPvS_>
   14de1:	4c 89 e8             	mov    %r13,%rax
   14de4:	48 89 c7             	mov    %rax,%rdi
   14de7:	e8 e4 f8 fe ff       	call   46d0 <_Unwind_Resume@plt>
   14dec:	48 83 c4 40          	add    $0x40,%rsp
   14df0:	5b                   	pop    %rbx
   14df1:	41 5c                	pop    %r12
   14df3:	41 5d                	pop    %r13
   14df5:	41 5e                	pop    %r14
   14df7:	5d                   	pop    %rbp
   14df8:	c3                   	ret
   14df9:	90                   	nop

0000000000014dfa <_ZNK9__gnu_cxx16__aligned_membufISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEE7_M_addrEv>:
      _M_addr() const noexcept
   14dfa:	55                   	push   %rbp
   14dfb:	48 89 e5             	mov    %rsp,%rbp
   14dfe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      { return static_cast<const void*>(&_M_storage); }
   14e02:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e06:	5d                   	pop    %rbp
   14e07:	c3                   	ret

0000000000014e08 <_ZSt19__iterator_categoryIPP13VkImageView_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   14e08:	55                   	push   %rbp
   14e09:	48 89 e5             	mov    %rsp,%rbp
   14e0c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   14e10:	90                   	nop
   14e11:	5d                   	pop    %rbp
   14e12:	c3                   	ret

0000000000014e13 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   14e13:	55                   	push   %rbp
   14e14:	48 89 e5             	mov    %rsp,%rbp
   14e17:	48 83 ec 20          	sub    $0x20,%rsp
   14e1b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14e1f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14e23:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   14e27:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   14e2c:	75 06                	jne    14e34 <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   14e2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e32:	eb 3a                	jmp    14e6e <_ZSt10__fill_n_aIPP13VkImageView_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   14e34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e38:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14e3f:	00 
   14e40:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e44:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   14e48:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14e4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e50:	48 89 ce             	mov    %rcx,%rsi
   14e53:	48 89 c7             	mov    %rax,%rdi
   14e56:	e8 25 02 00 00       	call   15080 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>
      return __first + __n;
   14e5b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14e5f:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   14e66:	00 
   14e67:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e6b:	48 01 d0             	add    %rdx,%rax
    }
   14e6e:	c9                   	leave
   14e6f:	c3                   	ret

0000000000014e70 <_ZSt12__miter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __miter_base(_Iterator __it)
   14e70:	55                   	push   %rbp
   14e71:	48 89 e5             	mov    %rsp,%rbp
   14e74:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14e78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14e7c:	5d                   	pop    %rbp
   14e7d:	c3                   	ret

0000000000014e7e <_ZSt13__copy_move_aILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a(_II __first, _II __last, _OI __result)
   14e7e:	55                   	push   %rbp
   14e7f:	48 89 e5             	mov    %rsp,%rbp
   14e82:	41 54                	push   %r12
   14e84:	53                   	push   %rbx
   14e85:	48 83 ec 20          	sub    $0x20,%rsp
   14e89:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   14e8d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   14e91:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      return std::__niter_wrap(__result,
   14e95:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   14e99:	48 89 c7             	mov    %rax,%rdi
   14e9c:	e8 1b 02 00 00       	call   150bc <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>
   14ea1:	49 89 c4             	mov    %rax,%r12
   14ea4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   14ea8:	48 89 c7             	mov    %rax,%rdi
   14eab:	e8 fe 01 00 00       	call   150ae <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14eb0:	48 89 c3             	mov    %rax,%rbx
   14eb3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   14eb7:	48 89 c7             	mov    %rax,%rdi
   14eba:	e8 ef 01 00 00       	call   150ae <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>
   14ebf:	4c 89 e2             	mov    %r12,%rdx
   14ec2:	48 89 de             	mov    %rbx,%rsi
   14ec5:	48 89 c7             	mov    %rax,%rdi
   14ec8:	e8 fd 01 00 00       	call   150ca <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   14ecd:	48 89 c2             	mov    %rax,%rdx
   14ed0:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
   14ed4:	48 89 d6             	mov    %rdx,%rsi
   14ed7:	48 89 c7             	mov    %rax,%rdi
   14eda:	e8 18 02 00 00       	call   150f7 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>
    }
   14edf:	48 83 c4 20          	add    $0x20,%rsp
   14ee3:	5b                   	pop    %rbx
   14ee4:	41 5c                	pop    %r12
   14ee6:	5d                   	pop    %rbp
   14ee7:	c3                   	ret

0000000000014ee8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   14ee8:	55                   	push   %rbp
   14ee9:	48 89 e5             	mov    %rsp,%rbp
   14eec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   14ef0:	48 b8 ff ff ff ff ff 	movabs $0xfffffffffffffff,%rax
   14ef7:	ff ff 0f 
      }
   14efa:	5d                   	pop    %rbp
   14efb:	c3                   	ret

0000000000014efc <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv>:
      allocate(size_type __n, const void* = static_cast<const void*>(0))
   14efc:	55                   	push   %rbp
   14efd:	48 89 e5             	mov    %rsp,%rbp
   14f00:	48 83 ec 20          	sub    $0x20,%rsp
   14f04:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f08:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14f0c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
	if (__builtin_expect(__n > this->_M_max_size(), false))
   14f10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f14:	48 89 c7             	mov    %rax,%rdi
   14f17:	e8 cc ff ff ff       	call   14ee8 <_ZNKSt15__new_allocatorIP12VkPipeline_TE11_M_max_sizeEv>
   14f1c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14f20:	0f 92 c0             	setb   %al
   14f23:	0f b6 c0             	movzbl %al,%eax
   14f26:	48 85 c0             	test   %rax,%rax
   14f29:	0f 95 c0             	setne  %al
   14f2c:	84 c0                	test   %al,%al
   14f2e:	74 1a                	je     14f4a <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x4e>
	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
   14f30:	48 b8 ff ff ff ff ff 	movabs $0x1fffffffffffffff,%rax
   14f37:	ff ff 1f 
   14f3a:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
   14f3e:	73 05                	jae    14f45 <_ZNSt15__new_allocatorIP12VkPipeline_TE8allocateEmPKv+0x49>
	      std::__throw_bad_array_new_length();
   14f40:	e8 2b f3 fe ff       	call   4270 <_ZSt28__throw_bad_array_new_lengthv@plt>
	    std::__throw_bad_alloc();
   14f45:	e8 96 f1 fe ff       	call   40e0 <_ZSt17__throw_bad_allocv@plt>
	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
   14f4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14f4e:	48 c1 e0 03          	shl    $0x3,%rax
   14f52:	48 89 c7             	mov    %rax,%rdi
   14f55:	e8 26 f4 fe ff       	call   4380 <_Znwm@plt>
   14f5a:	90                   	nop
      }
   14f5b:	c9                   	leave
   14f5c:	c3                   	ret

0000000000014f5d <_ZSt11__addressofIP12VkPipeline_TEPT_RS2_>:
    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
   14f5d:	55                   	push   %rbp
   14f5e:	48 89 e5             	mov    %rsp,%rbp
   14f61:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __builtin_addressof(__r); }
   14f65:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f69:	5d                   	pop    %rbp
   14f6a:	c3                   	ret

0000000000014f6b <_ZSt10_ConstructIP12VkPipeline_TJEEvPT_DpOT0_>:
    _Construct(_Tp* __p, _Args&&... __args)
   14f6b:	55                   	push   %rbp
   14f6c:	48 89 e5             	mov    %rsp,%rbp
   14f6f:	48 83 ec 10          	sub    $0x10,%rsp
   14f73:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
      ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
   14f77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14f7b:	48 89 c6             	mov    %rax,%rsi
   14f7e:	bf 08 00 00 00       	mov    $0x8,%edi
   14f83:	e8 b8 fe fe ff       	call   4e40 <_ZnwmPv>
   14f88:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    }
   14f8f:	90                   	nop
   14f90:	c9                   	leave
   14f91:	c3                   	ret

0000000000014f92 <_ZSt6fill_nIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_>:
    fill_n(_OI __first, _Size __n, const _Tp& __value)
   14f92:	55                   	push   %rbp
   14f93:	48 89 e5             	mov    %rsp,%rbp
   14f96:	48 83 ec 20          	sub    $0x20,%rsp
   14f9a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14f9e:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14fa2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			       std::__iterator_category(__first));
   14fa6:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
   14faa:	48 89 c7             	mov    %rax,%rdi
   14fad:	e8 57 01 00 00       	call   15109 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>
      return std::__fill_n_a(__first, std::__size_to_integer(__n), __value,
   14fb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   14fb6:	48 89 c7             	mov    %rax,%rdi
   14fb9:	e8 94 fe fe ff       	call   4e52 <_ZSt17__size_to_integerm>
   14fbe:	48 89 c1             	mov    %rax,%rcx
   14fc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fc5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14fc9:	48 89 ce             	mov    %rcx,%rsi
   14fcc:	48 89 c7             	mov    %rax,%rdi
   14fcf:	e8 40 01 00 00       	call   15114 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>
    }
   14fd4:	c9                   	leave
   14fd5:	c3                   	ret

0000000000014fd6 <_ZSt12__niter_baseIPKPKcET_S4_>:
    __niter_base(_Iterator __it)
   14fd6:	55                   	push   %rbp
   14fd7:	48 89 e5             	mov    %rsp,%rbp
   14fda:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   14fde:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   14fe2:	5d                   	pop    %rbp
   14fe3:	c3                   	ret

0000000000014fe4 <_ZSt14__copy_move_a1ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   14fe4:	55                   	push   %rbp
   14fe5:	48 89 e5             	mov    %rsp,%rbp
   14fe8:	48 83 ec 20          	sub    $0x20,%rsp
   14fec:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   14ff0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   14ff4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   14ff8:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   14ffc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   15000:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15004:	48 89 ce             	mov    %rcx,%rsi
   15007:	48 89 c7             	mov    %rax,%rdi
   1500a:	e8 62 01 00 00       	call   15171 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>
   1500f:	c9                   	leave
   15010:	c3                   	ret

0000000000015011 <_ZSt12__niter_wrapIPPKcET_RKS3_S3_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   15011:	55                   	push   %rbp
   15012:	48 89 e5             	mov    %rsp,%rbp
   15015:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15019:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   1501d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15021:	5d                   	pop    %rbp
   15022:	c3                   	ret
   15023:	90                   	nop

0000000000015024 <_ZNKSt15__new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEEE11_M_max_sizeEv>:
      _M_max_size() const _GLIBCXX_USE_NOEXCEPT
   15024:	55                   	push   %rbp
   15025:	48 89 e5             	mov    %rsp,%rbp
   15028:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
   1502c:	48 b8 c7 71 1c c7 71 	movabs $0x1c71c71c71c71c7,%rax
   15033:	1c c7 01 
      }
   15036:	5d                   	pop    %rbp
   15037:	c3                   	ret

0000000000015038 <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC1EOS7_>:
      _Tuple_impl(_Tuple_impl&& __in)
   15038:	55                   	push   %rbp
   15039:	48 89 e5             	mov    %rsp,%rbp
   1503c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15040:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      : _Base(static_cast<_Base&&>(__in))
   15044:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15048:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
   1504c:	48 8b 12             	mov    (%rdx),%rdx
   1504f:	48 89 10             	mov    %rdx,(%rax)
      { }
   15052:	90                   	nop
   15053:	5d                   	pop    %rbp
   15054:	c3                   	ret
   15055:	90                   	nop

0000000000015056 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE>:
  */
  template<class _T1, class _T2>
    template<typename... _Args1, typename... _Args2>
      _GLIBCXX20_CONSTEXPR
      inline
      pair<_T1, _T2>::
   15056:	55                   	push   %rbp
   15057:	48 89 e5             	mov    %rsp,%rbp
   1505a:	48 83 ec 20          	sub    $0x20,%rsp
   1505e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15062:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
      pair(piecewise_construct_t,
	   tuple<_Args1...> __first, tuple<_Args2...> __second)
      : pair(__first, __second,
	     typename _Build_index_tuple<sizeof...(_Args1)>::__type(),
	     typename _Build_index_tuple<sizeof...(_Args2)>::__type())
   15066:	48 8d 55 ef          	lea    -0x11(%rbp),%rdx
   1506a:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1506e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15072:	48 89 ce             	mov    %rcx,%rsi
   15075:	48 89 c7             	mov    %rax,%rdi
   15078:	e8 21 01 00 00       	call   1519e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>
      { }
   1507d:	90                   	nop
   1507e:	c9                   	leave
   1507f:	c3                   	ret

0000000000015080 <_ZSt8__fill_aIPP13VkImageView_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   15080:	55                   	push   %rbp
   15081:	48 89 e5             	mov    %rsp,%rbp
   15084:	48 83 ec 20          	sub    $0x20,%rsp
   15088:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1508c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15090:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   15094:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15098:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1509c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150a0:	48 89 ce             	mov    %rcx,%rsi
   150a3:	48 89 c7             	mov    %rax,%rdi
   150a6:	e8 3d 01 00 00       	call   151e8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   150ab:	90                   	nop
   150ac:	c9                   	leave
   150ad:	c3                   	ret

00000000000150ae <_ZSt12__niter_baseIPK28VkGraphicsPipelineCreateInfoET_S3_>:
    __niter_base(_Iterator __it)
   150ae:	55                   	push   %rbp
   150af:	48 89 e5             	mov    %rsp,%rbp
   150b2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   150b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ba:	5d                   	pop    %rbp
   150bb:	c3                   	ret

00000000000150bc <_ZSt12__niter_baseIP28VkGraphicsPipelineCreateInfoET_S2_>:
    __niter_base(_Iterator __it)
   150bc:	55                   	push   %rbp
   150bd:	48 89 e5             	mov    %rsp,%rbp
   150c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return __it; }
   150c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150c8:	5d                   	pop    %rbp
   150c9:	c3                   	ret

00000000000150ca <_ZSt14__copy_move_a1ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a1(_II __first, _II __last, _OI __result)
   150ca:	55                   	push   %rbp
   150cb:	48 89 e5             	mov    %rsp,%rbp
   150ce:	48 83 ec 20          	sub    $0x20,%rsp
   150d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150d6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   150da:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
   150de:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   150e2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   150e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   150ea:	48 89 ce             	mov    %rcx,%rsi
   150ed:	48 89 c7             	mov    %rax,%rdi
   150f0:	e8 2e 01 00 00       	call   15223 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>
   150f5:	c9                   	leave
   150f6:	c3                   	ret

00000000000150f7 <_ZSt12__niter_wrapIP28VkGraphicsPipelineCreateInfoET_RKS2_S2_>:
    __niter_wrap(const _Iterator&, _Iterator __res)
   150f7:	55                   	push   %rbp
   150f8:	48 89 e5             	mov    %rsp,%rbp
   150fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   150ff:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    { return __res; }
   15103:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15107:	5d                   	pop    %rbp
   15108:	c3                   	ret

0000000000015109 <_ZSt19__iterator_categoryIPP12VkPipeline_TENSt15iterator_traitsIT_E17iterator_categoryERKS4_>:
    __iterator_category(const _Iter&)
   15109:	55                   	push   %rbp
   1510a:	48 89 e5             	mov    %rsp,%rbp
   1510d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return typename iterator_traits<_Iter>::iterator_category(); }
   15111:	90                   	nop
   15112:	5d                   	pop    %rbp
   15113:	c3                   	ret

0000000000015114 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag>:
    __fill_n_a(_OutputIterator __first, _Size __n, const _Tp& __value,
   15114:	55                   	push   %rbp
   15115:	48 89 e5             	mov    %rsp,%rbp
   15118:	48 83 ec 20          	sub    $0x20,%rsp
   1511c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15120:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15124:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
      if (__n <= 0)
   15128:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
   1512d:	75 06                	jne    15135 <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x21>
	return __first;
   1512f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15133:	eb 3a                	jmp    1516f <_ZSt10__fill_n_aIPP12VkPipeline_TmS1_ET_S3_T0_RKT1_St26random_access_iterator_tag+0x5b>
      std::__fill_a(__first, __first + __n, __value);
   15135:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15139:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15140:	00 
   15141:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15145:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
   15149:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1514d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15151:	48 89 ce             	mov    %rcx,%rsi
   15154:	48 89 c7             	mov    %rax,%rdi
   15157:	e8 f4 00 00 00       	call   15250 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>
      return __first + __n;
   1515c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
   15160:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   15167:	00 
   15168:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1516c:	48 01 d0             	add    %rdx,%rax
    }
   1516f:	c9                   	leave
   15170:	c3                   	ret

0000000000015171 <_ZSt14__copy_move_a2ILb0EPKPKcPS1_ET1_T0_S6_S5_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   15171:	55                   	push   %rbp
   15172:	48 89 e5             	mov    %rsp,%rbp
   15175:	48 83 ec 20          	sub    $0x20,%rsp
   15179:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1517d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15181:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   15185:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15189:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1518d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15191:	48 89 ce             	mov    %rcx,%rsi
   15194:	48 89 c7             	mov    %rax,%rdi
   15197:	e8 e2 00 00 00       	call   1527e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>
    }
   1519c:	c9                   	leave
   1519d:	c3                   	ret

000000000001519e <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjEC1IJOS5_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE>:

  template<class _T1, class _T2>
    template<typename... _Args1, size_t... _Indexes1,
	     typename... _Args2, size_t... _Indexes2>
      _GLIBCXX20_CONSTEXPR inline
      pair<_T1, _T2>::
   1519e:	55                   	push   %rbp
   1519f:	48 89 e5             	mov    %rsp,%rbp
   151a2:	53                   	push   %rbx
   151a3:	48 83 ec 28          	sub    $0x28,%rsp
   151a7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   151ab:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   151af:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      pair(tuple<_Args1...>& __tuple1, tuple<_Args2...>& __tuple2,
	   _Index_tuple<_Indexes1...>, _Index_tuple<_Indexes2...>)
      : first(std::forward<_Args1>(std::get<_Indexes1>(__tuple1))...),
   151b3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
   151b7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   151bb:	48 89 c7             	mov    %rax,%rdi
   151be:	e8 1a 01 00 00       	call   152dd <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>
   151c3:	48 89 c7             	mov    %rax,%rdi
   151c6:	e8 2c 01 00 00       	call   152f7 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>
   151cb:	48 89 c6             	mov    %rax,%rsi
   151ce:	48 89 df             	mov    %rbx,%rdi
   151d1:	e8 fa ef fe ff       	call   41d0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_@plt>
	second(std::forward<_Args2>(std::get<_Indexes2>(__tuple2))...)
   151d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   151da:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
      { }
   151e1:	90                   	nop
   151e2:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
   151e6:	c9                   	leave
   151e7:	c3                   	ret

00000000000151e8 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   151e8:	55                   	push   %rbp
   151e9:	48 89 e5             	mov    %rsp,%rbp
   151ec:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   151f0:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   151f4:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   151f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   151fc:	48 8b 00             	mov    (%rax),%rax
   151ff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   15203:	eb 10                	jmp    15215 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   15205:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15209:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1520d:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   15210:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   15215:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   15219:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   1521d:	75 e6                	jne    15205 <_ZSt9__fill_a1IPP13VkImageView_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   1521f:	90                   	nop
   15220:	90                   	nop
   15221:	5d                   	pop    %rbp
   15222:	c3                   	ret

0000000000015223 <_ZSt14__copy_move_a2ILb0EPK28VkGraphicsPipelineCreateInfoPS0_ET1_T0_S5_S4_>:
    __copy_move_a2(_II __first, _II __last, _OI __result)
   15223:	55                   	push   %rbp
   15224:	48 89 e5             	mov    %rsp,%rbp
   15227:	48 83 ec 20          	sub    $0x20,%rsp
   1522b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1522f:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15233:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
			      _Category>::__copy_m(__first, __last, __result);
   15237:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   1523b:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1523f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15243:	48 89 ce             	mov    %rcx,%rsi
   15246:	48 89 c7             	mov    %rax,%rdi
   15249:	e8 b7 00 00 00       	call   15305 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>
    }
   1524e:	c9                   	leave
   1524f:	c3                   	ret

0000000000015250 <_ZSt8__fill_aIPP12VkPipeline_TS1_EvT_S3_RKT0_>:
    __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
   15250:	55                   	push   %rbp
   15251:	48 89 e5             	mov    %rsp,%rbp
   15254:	48 83 ec 20          	sub    $0x20,%rsp
   15258:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1525c:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   15260:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    { std::__fill_a1(__first, __last, __value); }
   15264:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
   15268:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
   1526c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15270:	48 89 ce             	mov    %rcx,%rsi
   15273:	48 89 c7             	mov    %rax,%rdi
   15276:	e8 0c 01 00 00       	call   15387 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>
   1527b:	90                   	nop
   1527c:	c9                   	leave
   1527d:	c3                   	ret

000000000001527e <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   1527e:	55                   	push   %rbp
   1527f:	48 89 e5             	mov    %rsp,%rbp
   15282:	48 83 ec 30          	sub    $0x30,%rsp
   15286:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1528a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   1528e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15292:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   15296:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   1529a:	48 c1 f8 03          	sar    $0x3,%rax
   1529e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   152a2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   152a7:	74 1f                	je     152c8 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPKcEEPT_PKS5_S8_S6_+0x4a>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   152a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ad:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   152b4:	00 
   152b5:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   152b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152bd:	48 89 ce             	mov    %rcx,%rsi
   152c0:	48 89 c7             	mov    %rax,%rdi
   152c3:	e8 88 f3 fe ff       	call   4650 <memmove@plt>
	  return __result + _Num;
   152c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152cc:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
   152d3:	00 
   152d4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   152d8:	48 01 d0             	add    %rdx,%rax
	}
   152db:	c9                   	leave
   152dc:	c3                   	ret

00000000000152dd <_ZSt3getILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERSB_>:
    get(tuple<_Elements...>& __t) noexcept
   152dd:	55                   	push   %rbp
   152de:	48 89 e5             	mov    %rsp,%rbp
   152e1:	48 83 ec 10          	sub    $0x10,%rsp
   152e5:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return std::__get_helper<__i>(__t); }
   152e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   152ed:	48 89 c7             	mov    %rax,%rdi
   152f0:	e8 cd 00 00 00       	call   153c2 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>
   152f5:	c9                   	leave
   152f6:	c3                   	ret

00000000000152f7 <_ZSt7forwardIONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE>:
    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
   152f7:	55                   	push   %rbp
   152f8:	48 89 e5             	mov    %rsp,%rbp
   152fb:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return static_cast<_Tp&&>(__t); }
   152ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15303:	5d                   	pop    %rbp
   15304:	c3                   	ret

0000000000015305 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_>:
	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
   15305:	55                   	push   %rbp
   15306:	48 89 e5             	mov    %rsp,%rbp
   15309:	48 83 ec 30          	sub    $0x30,%rsp
   1530d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   15311:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15315:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
	  const ptrdiff_t _Num = __last - __first;
   15319:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
   1531d:	48 2b 45 e8          	sub    -0x18(%rbp),%rax
   15321:	48 c1 f8 04          	sar    $0x4,%rax
   15325:	48 89 c2             	mov    %rax,%rdx
   15328:	48 b8 39 8e e3 38 8e 	movabs $0x8e38e38e38e38e39,%rax
   1532f:	e3 38 8e 
   15332:	48 0f af c2          	imul   %rdx,%rax
   15336:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
	  if (_Num)
   1533a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
   1533f:	74 28                	je     15369 <_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mI28VkGraphicsPipelineCreateInfoEEPT_PKS4_S7_S5_+0x64>
	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
   15341:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   15345:	48 89 d0             	mov    %rdx,%rax
   15348:	48 c1 e0 03          	shl    $0x3,%rax
   1534c:	48 01 d0             	add    %rdx,%rax
   1534f:	48 c1 e0 04          	shl    $0x4,%rax
   15353:	48 89 c2             	mov    %rax,%rdx
   15356:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
   1535a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1535e:	48 89 ce             	mov    %rcx,%rsi
   15361:	48 89 c7             	mov    %rax,%rdi
   15364:	e8 e7 f2 fe ff       	call   4650 <memmove@plt>
	  return __result + _Num;
   15369:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   1536d:	48 89 d0             	mov    %rdx,%rax
   15370:	48 c1 e0 03          	shl    $0x3,%rax
   15374:	48 01 d0             	add    %rdx,%rax
   15377:	48 c1 e0 04          	shl    $0x4,%rax
   1537b:	48 89 c2             	mov    %rax,%rdx
   1537e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   15382:	48 01 d0             	add    %rdx,%rax
	}
   15385:	c9                   	leave
   15386:	c3                   	ret

0000000000015387 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_>:
    __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
   15387:	55                   	push   %rbp
   15388:	48 89 e5             	mov    %rsp,%rbp
   1538b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
   1538f:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
   15393:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
      const _Tp __tmp = __value;
   15397:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
   1539b:	48 8b 00             	mov    (%rax),%rax
   1539e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
      for (; __first != __last; ++__first)
   153a2:	eb 10                	jmp    153b4 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x2d>
	*__first = __tmp;
   153a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153a8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
   153ac:	48 89 10             	mov    %rdx,(%rax)
      for (; __first != __last; ++__first)
   153af:	48 83 45 e8 08       	addq   $0x8,-0x18(%rbp)
   153b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
   153b8:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
   153bc:	75 e6                	jne    153a4 <_ZSt9__fill_a1IPP12VkPipeline_TS1_EN9__gnu_cxx11__enable_ifIXsrSt11__is_scalarIT0_E7__valueEvE6__typeET_SA_RKS6_+0x1d>
    }
   153be:	90                   	nop
   153bf:	90                   	nop
   153c0:	5d                   	pop    %rbp
   153c1:	c3                   	ret

00000000000153c2 <_ZSt12__get_helperILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEERT0_RSt11_Tuple_implIXT_EJS7_DpT1_EE>:
    __get_helper(_Tuple_impl<__i, _Head, _Tail...>& __t) noexcept
   153c2:	55                   	push   %rbp
   153c3:	48 89 e5             	mov    %rsp,%rbp
   153c6:	48 83 ec 10          	sub    $0x10,%rsp
   153ca:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    { return _Tuple_impl<__i, _Head, _Tail...>::_M_head(__t); }
   153ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153d2:	48 89 c7             	mov    %rax,%rdi
   153d5:	e8 02 00 00 00       	call   153dc <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>
   153da:	c9                   	leave
   153db:	c3                   	ret

00000000000153dc <_ZNSt11_Tuple_implILm0EJONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7_M_headERS7_>:
      _M_head(_Tuple_impl& __t) noexcept { return _Base::_M_head(__t); }
   153dc:	55                   	push   %rbp
   153dd:	48 89 e5             	mov    %rsp,%rbp
   153e0:	48 83 ec 10          	sub    $0x10,%rsp
   153e4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   153ec:	48 89 c7             	mov    %rax,%rdi
   153ef:	e8 02 00 00 00       	call   153f6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>
   153f4:	c9                   	leave
   153f5:	c3                   	ret

00000000000153f6 <_ZNSt10_Head_baseILm0EONSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0EE7_M_headERS7_>:
      _M_head(_Head_base& __b) noexcept { return __b._M_head_impl; }
   153f6:	55                   	push   %rbp
   153f7:	48 89 e5             	mov    %rsp,%rbp
   153fa:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   153fe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15402:	48 8b 00             	mov    (%rax),%rax
   15405:	5d                   	pop    %rbp
   15406:	c3                   	ret
   15407:	90                   	nop

0000000000015408 <_ZNSt19bad_optional_accessD1Ev>:
    virtual ~bad_optional_access() = default;
   15408:	55                   	push   %rbp
   15409:	48 89 e5             	mov    %rsp,%rbp
   1540c:	48 83 ec 10          	sub    $0x10,%rsp
   15410:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   15414:	48 8d 15 a5 08 01 00 	lea    0x108a5(%rip),%rdx        # 25cc0 <_ZTVSt19bad_optional_access+0x10>
   1541b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1541f:	48 89 10             	mov    %rdx,(%rax)
   15422:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15426:	48 89 c7             	mov    %rax,%rdi
   15429:	e8 e2 f2 fe ff       	call   4710 <_ZNSt9exceptionD2Ev@plt>
   1542e:	90                   	nop
   1542f:	c9                   	leave
   15430:	c3                   	ret
   15431:	90                   	nop

0000000000015432 <_ZNSt19bad_optional_accessD0Ev>:
   15432:	55                   	push   %rbp
   15433:	48 89 e5             	mov    %rsp,%rbp
   15436:	48 83 ec 10          	sub    $0x10,%rsp
   1543a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
   1543e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   15442:	48 89 c7             	mov    %rax,%rdi
   15445:	e8 be ff ff ff       	call   15408 <_ZNSt19bad_optional_accessD1Ev>
   1544a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
   1544e:	be 08 00 00 00       	mov    $0x8,%esi
   15453:	48 89 c7             	mov    %rax,%rdi
   15456:	e8 35 ef fe ff       	call   4390 <_ZdlPvm@plt>
   1545b:	c9                   	leave
   1545c:	c3                   	ret

Disassembly of section .fini:

0000000000015460 <_fini>:
   15460:	48 83 ec 08          	sub    $0x8,%rsp
   15464:	48 83 c4 08          	add    $0x8,%rsp
   15468:	c3                   	ret
